{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"AT_v3_backi2(1206_limit_earlyout).ipynb","provenance":[],"collapsed_sections":["M8-EChy0VsDr","Iy76iO7gztne","Ic1mfmwWCIBu","dzla8i9_ysmP"],"toc_visible":true,"authorship_tag":"ABX9TyN1dfhrRKW7gdgCBlldEqiK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6rmQpzEGXfCw","executionInfo":{"status":"ok","timestamp":1639569320109,"user_tz":-540,"elapsed":917919,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"0b26f35c-bbd2-4ded-8eea-25b2602bea43"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)\n","\n","nb_path = '/content/notebooks'\n","try:\n","  os.symlink('/content/drive/My Drive/Colab Notebooks/JnQ/mpl_finance', nb_path)\n","  sys.path.insert(0, nb_path)\n","except:\n","  pass"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"8uqYv5StTazo"},"source":["# requirements"]},{"cell_type":"code","metadata":{"id":"9qGt60DKTZmf","executionInfo":{"status":"ok","timestamp":1639569356997,"user_tz":-540,"elapsed":457,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"source":["import mpl_finance\n","# !pip install findiff\n","\n","# import nvstrings, nvcategory, cudf\n","# import cuml\n","# import cudf\n","\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","from tqdm.notebook import tqdm\n","from funcs_indicator import *\n","from funcs_for_trade import *\n","\n","import mpl_finance as mf\n","import os\n","import datetime\n","\n","import IPython\n","import IPython.display\n","import matplotlib as mpl\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","import seaborn as sns\n","# import tensorflow as tf\n","\n","import pickle\n","import shutil\n","import json\n","from easydict import EasyDict\n","\n","# from trendln import trendln\n","\n","from datetime import datetime\n","import random\n","import time\n","\n","# mpl.rcParams['figure.figsize'] = (8, 6)\n","# mpl.rcParams['axes.grid'] = False\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"M8-EChy0VsDr"},"source":["## cudf"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b09qAb1sVtRP","executionInfo":{"status":"ok","timestamp":1638754008241,"user_tz":-540,"elapsed":414,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"3a824202-064a-4544-b791-ffc777bb3f9c"},"source":["# !conda install -c rapidsai-nightly -c nvidia -c numba -c conda-forge \\\n","#     cudf python=3.7 cudatoolkit=11.1 -t=$nb_path"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["usage: conda [-h] [-V] command ...\n","conda: error: unrecognized arguments: -t=/content/notebooks\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Jnz6i7ZqRnb0","executionInfo":{"status":"ok","timestamp":1638754715310,"user_tz":-540,"elapsed":413,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"207bc57b-a17a-4f67-fb26-24e46e2c6e26"},"source":["# !git clone https://github.com/rapidsai/rapidsai-csp-utils.git\n","!python rapidsai-csp-utils/colab/env-check.py"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["***********************************************************************\n","Woo! Your instance has the right kind of GPU, a Tesla P100-PCIE-16GB!\n","***********************************************************************\n","\n"]}]},{"cell_type":"code","metadata":{"id":"4sKA_9Dbg4s2"},"source":["# This will update the Colab environment and restart the kernel.  Don't run the next cell until you see the session crash.\n","!bash rapidsai-csp-utils/colab/update_gcc.sh\n","import os\n","os._exit(00)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"d1C4pNiBhYHX"},"source":["# This will install CondaColab.  This will restart your kernel one last time.  Run this cell by itself and only run the next cell once you see the session crash.\n","import condacolab\n","condacolab.install()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iGx3ACTvZqck","executionInfo":{"status":"ok","timestamp":1638754863073,"user_tz":-540,"elapsed":414,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"e8379cc4-c325-4fe0-ac46-5fbbd7d38829"},"source":["# you can now run the rest of the cells as normal\n","import condacolab\n","condacolab.check()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["‚ú®üç∞‚ú® Everything looks OK!\n"]}]},{"cell_type":"code","metadata":{"id":"oR8s7U8c7C28","colab":{"base_uri":"https://localhost:8080/"},"outputId":"22be2731-fae1-45fc-f310-e48f60774bb2"},"source":["# Installing RAPIDS is now 'python rapidsai-csp-utils/colab/install_rapids.py <release> <packages>'\n","# The <release> options are 'stable' and 'nightly'.  Leaving it blank or adding any other words will default to stable.\n","# The <packages> option are default blank or 'core'.  By default, we install RAPIDSAI and BlazingSQL.  The 'core' option will install only RAPIDSAI and not include BlazingSQL, \n","!python rapidsai-csp-utils/colab/install_rapids.py stable\n","import os\n","os.environ['NUMBAPRO_NVVM'] = '/usr/local/cuda/nvvm/lib64/libnvvm.so'\n","os.environ['NUMBAPRO_LIBDEVICE'] = '/usr/local/cuda/nvvm/libdevice/'\n","os.environ['CONDA_PREFIX'] = '/usr/local'"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Installing RAPIDS Stable 21.10\n","Starting the RAPIDS install on Colab.  This will take about 15 minutes.\n","Collecting package metadata (current_repodata.json): ...working... done\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with initial frozen solve. Retrying with flexible solve.\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with repodata from current_repodata.json, will retry with next repodata source.\n","Collecting package metadata (repodata.json): ...working... done\n"]}]},{"cell_type":"code","metadata":{"id":"kWsxi4ZpKtGt"},"source":["import shutil\n","import sys\n","\n","colab_env = \"/usr/lib\"\n","\n","rapids_path = os.path.join(current_path, \"rapidsai-csp-utils/lib\")\n","rapids_libs = os.listdir(rapids_path)\n","print(rapids_libs)\n","# break\n","\n","for lib_ in rapids_libs:\n","  try:\n","    shutil.copy(os.path.join(rapids_path, lib_), os.path.join(colab_env, lib_))\n","    sys.path.append(os.path.join(colab_env, lib_))\n","    print(\"copied to\" + os.path.join(colab_env, lib_))\n","  except Exception as e:\n","    print(e)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Iy76iO7gztne"},"source":["## move legacy files"]},{"cell_type":"code","metadata":{"id":"hMRht32Czwry"},"source":["# print()\n","cur_dir_list = os.listdir('.')\n","for f in cur_dir_list:\n","  if 'legacy' in f :\n","    # print(f)\n","    if os.path.isdir(current_path + f,):\n","      continue\n","\n","    shutil.move(current_path + f, current_path + 'legacy/' + f)\n","    print(\"moved to\" + current_path + 'legacy/' +  f)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset"]},{"cell_type":"markdown","metadata":{"id":"Ci_jUnNTZbm9"},"source":["## load data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bXyS2yrZYC6","executionInfo":{"status":"ok","timestamp":1638246127510,"user_tz":-540,"elapsed":22503,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"b24a8a66-48b1-42b5-aa79-63f5a8542bac"},"source":["interval = '1m'\n","date_path = './candlestick_concated/%s/quant_v2/' % interval\n","file_list = os.listdir(date_path)\n","print((file_list))\n","\n","interval2 = '3m'\n","date_path2 = './candlestick_concated/%s/quant_v2/' % interval2\n","file_list2 = os.listdir(date_path2)\n","print((file_list2))\n","\n","interval3 = '5m'\n","date_path3 = './candlestick_concated/%s/quant_v2/' % interval3\n","file_list3 = os.listdir(date_path3)\n","print((file_list3))\n","\n","interval4 = '15m'\n","date_path4 = './candlestick_concated/%s/quant_v2/' % interval4\n","file_list4 = os.listdir(date_path4)\n","print((file_list4))\n","\n","interval5 = '30m'\n","date_path5 = './candlestick_concated/%s/quant_v2/' % interval5\n","file_list5 = os.listdir(date_path5)\n","print((file_list5))\n","\n","interval6 = '1h'\n","date_path6 = './candlestick_concated/%s/quant_v2/' % interval6\n","file_list6 = os.listdir(date_path6)\n","print((file_list6))\n","\n","interval7 = '4h'\n","date_path7 = './candlestick_concated/%s/quant_v2/' % interval7\n","file_list7 = os.listdir(date_path7)\n","print((file_list7))\n","\n","interval8 = '1d'\n","date_path8 = './candlestick_concated/%s/quant_v2/' % interval8\n","file_list8 = os.listdir(date_path8)\n","print((file_list8))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 LTCUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 ETHUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-08-31 SUSHIUSDT.xlsx', '2021-08-31 CVCUSDT.xlsx', '2021-08-31 BTSUSDT.xlsx', '2021-08-31 HOTUSDT.xlsx', '2021-08-31 ZRXUSDT.xlsx', '2021-08-31 QTUMUSDT.xlsx', '2021-08-31 IOTAUSDT.xlsx', '2021-08-31 BTCBUSD.xlsx', '2021-08-31 WAVESUSDT.xlsx', '2021-08-31 ADAUSDT.xlsx', '2021-08-31 LITUSDT.xlsx', '2021-08-31 XTZUSDT.xlsx', '2021-08-31 BNBUSDT.xlsx', '2021-08-31 AKROUSDT.xlsx', '2021-08-31 HNTUSDT.xlsx', '2021-08-31 ETCUSDT.xlsx', '2021-08-31 XMRUSDT.xlsx', '2021-08-31 YFIUSDT.xlsx', '2021-08-31 ETHUSDT.xlsx', '2021-08-31 ALICEUSDT.xlsx', '2021-08-31 ALPHAUSDT.xlsx', '2021-08-31 SFPUSDT.xlsx', '2021-08-31 REEFUSDT.xlsx', '2021-08-31 BATUSDT.xlsx', '2021-08-31 DOGEUSDT.xlsx', '2021-08-31 TRXUSDT.xlsx', '2021-08-31 RLCUSDT.xlsx', '2021-08-31 BTCSTUSDT.xlsx', '2021-08-31 STORJUSDT.xlsx', '2021-08-31 SNXUSDT.xlsx', '2021-08-31 XLMUSDT.xlsx', '2021-08-31 NEOUSDT.xlsx', '2021-08-31 UNFIUSDT.xlsx', '2021-08-31 SANDUSDT.xlsx', '2021-08-31 DASHUSDT.xlsx', '2021-08-31 KAVAUSDT.xlsx', '2021-08-31 RUNEUSDT.xlsx', '2021-08-31 CTKUSDT.xlsx', '2021-08-31 LINKUSDT.xlsx', '2021-08-31 CELRUSDT.xlsx', '2021-08-31 RSRUSDT.xlsx', '2021-08-31 DGBUSDT.xlsx', '2021-08-31 SKLUSDT.xlsx', '2021-08-31 RENUSDT.xlsx', '2021-08-31 TOMOUSDT.xlsx', '2021-08-31 MTLUSDT.xlsx', '2021-08-31 LTCUSDT.xlsx', '2021-08-31 DODOUSDT.xlsx', '2021-08-31 EGLDUSDT.xlsx', '2021-08-31 KSMUSDT.xlsx', '2021-08-31 ONTUSDT.xlsx', '2021-08-31 VETUSDT.xlsx', '2021-08-31 TRBUSDT.xlsx', '2021-08-31 MANAUSDT.xlsx', '2021-08-31 COTIUSDT.xlsx', '2021-08-31 CHRUSDT.xlsx', '2021-08-31 ETHUSDT_210924.xlsx', '2021-08-31 BAKEUSDT.xlsx', '2021-08-31 GRTUSDT.xlsx', '2021-08-31 FLMUSDT.xlsx', '2021-08-31 EOSUSDT.xlsx', '2021-08-31 OGNUSDT.xlsx', '2021-08-31 SCUSDT.xlsx', '2021-08-31 BALUSDT.xlsx', '2021-08-31 STMXUSDT.xlsx', '2021-08-31 BTTUSDT.xlsx', '2021-08-31 LUNAUSDT.xlsx', '2021-08-31 DENTUSDT.xlsx', '2021-08-31 KNCUSDT.xlsx', '2021-08-31 SRMUSDT.xlsx', '2021-08-31 ENJUSDT.xlsx', '2021-08-31 ZENUSDT.xlsx', '2021-08-31 ATOMUSDT.xlsx', '2021-08-31 NEARUSDT.xlsx', '2021-08-31 BCHUSDT.xlsx', '2021-08-31 IOSTUSDT.xlsx', '2021-08-31 HBARUSDT.xlsx', '2021-08-31 ZECUSDT.xlsx', '2021-08-31 1000SHIBUSDT.xlsx', '2021-08-31 TLMUSDT.xlsx', '2021-08-31 BZRXUSDT.xlsx', '2021-08-31 ETHBUSD.xlsx', '2021-08-31 AAVEUSDT.xlsx', '2021-08-31 GTCUSDT.xlsx', '2021-08-31 ALGOUSDT.xlsx', '2021-08-31 ICPUSDT.xlsx', '2021-08-31 BTCUSDT_210924.xlsx', '2021-08-31 LRCUSDT.xlsx', '2021-08-31 AVAXUSDT.xlsx', '2021-08-31 MATICUSDT.xlsx', '2021-08-31 1INCHUSDT.xlsx', '2021-08-31 MKRUSDT.xlsx', '2021-08-31 THETAUSDT.xlsx', '2021-08-31 UNIUSDT.xlsx', '2021-08-31 LINAUSDT.xlsx', '2021-08-31 RVNUSDT.xlsx', '2021-08-31 FILUSDT.xlsx', '2021-08-31 NKNUSDT.xlsx', '2021-08-31 DEFIUSDT.xlsx', '2021-08-31 COMPUSDT.xlsx', '2021-08-31 BTCDOMUSDT.xlsx', '2021-08-31 SOLUSDT.xlsx', '2021-08-31 BTCUSDT.xlsx', '2021-08-31 OMGUSDT.xlsx', '2021-08-31 ICXUSDT.xlsx', '2021-08-31 BLZUSDT.xlsx', '2021-08-31 FTMUSDT.xlsx', '2021-08-31 YFIIUSDT.xlsx', '2021-08-31 KEEPUSDT.xlsx', '2021-08-31 BANDUSDT.xlsx', '2021-08-31 XRPUSDT.xlsx', '2021-08-31 SXPUSDT.xlsx', '2021-08-31 CRVUSDT.xlsx', '2021-08-31 BELUSDT.xlsx', '2021-08-31 DOTUSDT.xlsx', '2021-08-31 XEMUSDT.xlsx', '2021-08-31 ONEUSDT.xlsx', '2021-08-31 ZILUSDT.xlsx', '2021-08-31 AXSUSDT.xlsx', '2021-08-31 OCEANUSDT.xlsx', '2021-08-31 CHZUSDT.xlsx', '2021-08-31 ANKRUSDT.xlsx', '2021-08-31 SUSHIUSDT_res_dfs.pkl', '2021-07-01 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-02-07 BTC.xlsx', '2021-02-07 ETH.xlsx', '2021-02-11 BCHUSDT.xlsx', '2021-02-11 XRPUSDT.xlsx', '2021-02-11 EOSUSDT.xlsx', '2021-02-11 LTCUSDT.xlsx', '2021-02-11 ETCUSDT.xlsx', '2021-02-11 LINKUSDT.xlsx', '2021-02-11 XLMUSDT.xlsx', '2021-02-11 ADAUSDT.xlsx', '2021-02-11 XMRUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr']\n","['2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx']\n"]}]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## basic_func"]},{"cell_type":"code","metadata":{"id":"QmhLikYlSuzi"},"source":["def sync_check(df, second_df=None, third_df=None, fourth_df=None, fifth_df=None,\n","               sixth_df=None, seventh_df=None, eighth_df=None):\n","\n","    #           supertrend          #\n","    # df = st_price_line(df, second_df, '3m')\n","    # # print(df.head(100))\n","    # # return\n","\n","    # df = st_price_line(df, third_df, '5m')\n","    # df = st_price_line(df, fourth_df, '15m')\n","    # df = st_price_line(df, fifth_df, '30m')\n","    # df = st_price_line(df, sixth_df, '1h')\n","    # df = st_price_line(df, seventh_df, '4h')\n","\n","    # print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    # df['rsi_1m'] = rsi(df, 14)    \n","    third_df['rsi_5m'] = rsi(third_df, 14)\n","    df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1]), columns=['rsi_5m']))\n","    \n","    print(\"rsi phase done\")\n","\n","    # --------------- ema --------------- #  \n","    \n","    # third_df['ema_5m'] = ema(third_df['close'], 200)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1]), columns=['ema_5m']))\n","    \n","    # print(\"ema phase done\")\n","\n","\n","    # # --------------- dc --------------- #  \n","    # df = dc_line(df, None, '1m', dc_period=20)\n","    # df = dc_line(df, second_df, '3m', dc_period=20)\n","    # df = dc_line(df, third_df, '5m', dc_period=20)\n","    # df = dc_line(df, fourth_df, '15m', dc_period=20)\n","    # df = dc_line(df, fifth_df, '30m', dc_period=20)\n","    # df = dc_line(df, sixth_df, '1h', dc_period=20)\n","    # df = dc_line(df, seventh_df, '4h', dc_period=20)\n","\n","    # print(\"dc phase done\")\n","    \n","    # # --------------- bband --------------- #  \n","    # df = bb_line(df, None, '1m')\n","    # df = bb_line(df, second_df, '3m')\n","    # df = bb_line(df, third_df, '5m')\n","    # df = bb_line(df, fourth_df, '15m')\n","    # df = bb_line(df, fifth_df, '30m')\n","    # df = bb_line(df, sixth_df, '1h')\n","    # df = bb_line(df, seventh_df, '4h')\n","\n","    # print(\"bband phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # second_df['cloud_bline_3m'] = cloud_bline(second_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, second_df, [-1]), columns=['cloud_bline_3m']))\n","    # third_df['cloud_bline_5m'] = cloud_bline(third_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1]), columns=['cloud_bline_5m']))\n","    # fourth_df['cloud_bline_15m'] = cloud_bline(fourth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fourth_df, [-1]), columns=['cloud_bline_15m']))\n","    # fifth_df['cloud_bline_30m'] = cloud_bline(fifth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fifth_df, [-1]), columns=['cloud_bline_30m']))\n","    # sixth_df['cloud_bline_1h'] = cloud_bline(sixth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, sixth_df, [-1]), columns=['cloud_bline_1h']))\n","    # seventh_df['cloud_bline_4h'] = cloud_bline(seventh_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, seventh_df, [-1]), columns=['cloud_bline_4h']))\n","\n","    # print(\"cbline phase done\")\n","    \n","\n","    #           lucid sar              #\n","    # df['sar_1m'], df['sar_uptrend_1m'] = lucid_sar(df, return_uptrend=True)\n","\n","    # third_df['sar_5m'], third_df['sar_uptrend_5m'] = lucid_sar(third_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-2, -1], backing_i=-1), columns=['sar_5m', 'sar_uptrend_5m']))\n","\n","    # fourth_df['sar_15m'], fourth_df['sar_uptrend_15m'] = lucid_sar(fourth_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fourth_df, [-2, -1], backing_i=-1), columns=['sar_15m', 'sar_uptrend_15m']))\n","\n","    # seventh_df['sar_4h'], seventh_df['sar_uptrend_4h'] = lucid_sar(seventh_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, seventh_df, [-2, -1], backing_i=-1), columns=['sar_4h', 'sar_uptrend_4h']))\n","    \n","    # print(\"sar phase done\")\n","\n","    \n","    #           stochastic              #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # third_df['stoch'] = stoch(third_df, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat ÏÉùÍ∞ÅÌïòÎ©¥, timeindex sync ÎßûÏ∂∞ÏïºÌï®)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khKb9nhlSuzj","executionInfo":{"elapsed":11,"status":"error","timestamp":1636201718856,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"02bf2c60-f298-4fe9-e6bb-78230ac1348c"},"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m ÎßàÏßÄÎßâ timeindex Ïùò date Í∏∞Ï§Ä, 08:59:59.999000 Î•º last timestamp Î°ú ÏÑ§Ï†ï\n","      #      2. ÏãúÏûë timestamp Îäî Î™®Îì† tf Ïùò Í∞ÄÏû• ÏµúÍ∑º ÏãúÏûë index,\n","      #       a. 1m Ïùò ÏãúÏûë timeindex Îäî ÏµúÏÜå, htf Ïùò ÏãúÏûë timeindex Î≥¥Îã§ interval ÎßåÌÅº ÏïûÏÑúÏïºÌï®\n","      #         i. Îî∞ÎùºÏÑú 1m open_index, latest_open_index + 1d Î•º ÌïòÎ©¥ Îåê\n","      #           1. timestamp ÏúºÎ°ú Î≥ÄÌôòÌõÑ 1day Î•º ÎçîÌïòÍ≥† datetime ÏúºÎ°ú Î≥ÄÌôò\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str Î°ú ÎßåÎì§Ïñ¥ Ï†ëÍ∑ºÌïòÎ©¥ Î∂àÍ∞ÄÌï®  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf Ïùò Í∏∞Ï§Ä ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"],"execution_count":null,"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ee034491b257>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0ma_day\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3600\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m24\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtqdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mkeys\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_list' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355,"referenced_widgets":["be2b848dbcb14a079a2b7bd605af6435","2c7696db44fa402eafb2540c7a72d68c","502ec9042bab443e9407803d9ada1031","75511cdf82714fb7be5b8688e396f69b","b54d2eb7584d43e2916f69174d6e391d","7abd42b3c95c48ac910b581b74ba9b57","a742f61210f24d949aeb1b9f5cd1f6a5","2ff55a21df7742519b138ca795ec3f6d","9e7f44d996a341a19bf22f806da4756d","5552df18053d4d1294ea6a4185afee6e","196b72f68ba948ef96093981fbcd195f"]},"id":"VA-_gcA7Suzj","outputId":"f6f3b55d-ec2c-4b2c-d62e-3de7c0384dc4"},"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m ÎßàÏßÄÎßâ timeindex Ïùò date Í∏∞Ï§Ä, 08:59:59.999000 Î•º last timestamp Î°ú ÏÑ§Ï†ï\n","      #      2. ÏãúÏûë timestamp Îäî Î™®Îì† tf Ïùò Í∞ÄÏû• ÏµúÍ∑º ÏãúÏûë index,\n","      #       a. 1m Ïùò ÏãúÏûë timeindex Îäî ÏµúÏÜå, htf Ïùò ÏãúÏûë timeindex Î≥¥Îã§ interval ÎßåÌÅº ÏïûÏÑúÏïºÌï®\n","      #         i. Îî∞ÎùºÏÑú 1m open_index, latest_open_index + 1d Î•º ÌïòÎ©¥ Îåê\n","      #           1. timestamp ÏúºÎ°ú Î≥ÄÌôòÌõÑ 1day Î•º ÎçîÌïòÍ≥† datetime ÏúºÎ°ú Î≥ÄÌôò\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be2b848dbcb14a079a2b7bd605af6435","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/156 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n","DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n"]}]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223,"referenced_widgets":["e3225655da874b8d89cc8b2a381b3fb6","217018421aa4406ea11f3c655977fc8c","25c09f6fad2b4f55aa5fcef70e109d7b","d6c715e951a04deb9b24cae42cd617cd","39059d3e2a784c5bacd763cde041fe84","8a7f1067082340aab3089c189ef2f110","00d5dc71b69045c887d09ff7cef9db2a","6fdae6e1b4e34e7bbc3aae8dcb3824ba","066f75e5dacf44b7b63d5b2a94c9e5a0","ea978679ff5b45d6a979d154bb51fbb1","03e244d79cae4b8b92bb09cc38a6f495"]},"id":"M-gl30KxSuzk","executionInfo":{"status":"ok","timestamp":1638246331122,"user_tz":-540,"elapsed":43664,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"1cfcb580-8d25-4bd0-fdd0-213640779ce2"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3225655da874b8d89cc8b2a381b3fb6","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/175 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BCHUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XRPUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 EOSUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LINKUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XLMUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ADAUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETHUSDT_1m.ftr\n"]}]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver."]},{"cell_type":"code","metadata":{"id":"vgVHpnUsSuzk"},"source":["# db_path = './candlestick_concated/database_ub/'\n","db_path = './candlestick_concated/database_bn/'\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","save_dir_path = \"rsi5m_backi2\"\n","\n","date = '2021-11-17'\n","\n","data_path = os.path.join(db_path, \"cum\", date) \n","save_path = os.path.join(save_path, save_dir_path, 'noncat/cum', date)\n","os.makedirs(save_path, exist_ok=True)\n","\n","file_list = os.listdir(data_path)\n","exist_list = os.listdir(save_path)\n","# break\n","\n","interval = '1m'\n","interval2 = '3m'\n","interval3 = '5m'\n","interval4 = '15m'\n","interval5 = '30m'\n","interval6 = '1h'\n","interval7 = '4h'\n","interval8 = '1d'\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    end_indexes = []\n","    \n","    df = pd.read_feather(os.path.join(data_path, key), columns=None, use_threads=True).set_index(\"index\")\n","    second_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval2)), columns=None, use_threads=True).set_index(\"index\")\n","    third_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval3)), columns=None, use_threads=True).set_index(\"index\")\n","    fourth_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval4)), columns=None, use_threads=True).set_index(\"index\")\n","    fifth_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval5)), columns=None, use_threads=True).set_index(\"index\")\n","        \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    end_indexes.append(df.index[-1])\n","    end_indexes.append(second_df.index[-1])\n","    end_indexes.append(third_df.index[-1])\n","    end_indexes.append(fourth_df.index[-1])\n","    end_indexes.append(fifth_df.index[-1])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m ÎßàÏßÄÎßâ timeindex Ïùò date Í∏∞Ï§Ä, 08:59:59.999000 Î•º last timestamp Î°ú ÏÑ§Ï†ï\n","      #      2. ÏãúÏûë timestamp Îäî Î™®Îì† tf Ïùò Í∞ÄÏû• ÏµúÍ∑º ÏãúÏûë index,\n","      #       a. 1m Ïùò ÏãúÏûë timeindex Îäî ÏµúÏÜå, htf Ïùò ÏãúÏûë timeindex Î≥¥Îã§ interval ÎßåÌÅº ÏïûÏÑúÏïºÌï®\n","      #         i. Îî∞ÎùºÏÑú 1m open_index, latest_open_index + 1d Î•º ÌïòÎ©¥ Îåê\n","      #           1. timestamp ÏúºÎ°ú Î≥ÄÌôòÌõÑ 1day Î•º ÎçîÌïòÍ≥† datetime ÏúºÎ°ú Î≥ÄÌôò\n","      sixth_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval6)), columns=None, use_threads=True).set_index(\"index\")\n","      seventh_df = pd.read_feather(os.path.join(data_path, key.replace(interval, interval7)), columns=None, use_threads=True).set_index(\"index\")\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","      end_indexes.append(sixth_df.index[-1])\n","      end_indexes.append(seventh_df.index[-1])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    recent_end_index = sorted(end_indexes)[0]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    end_ts = datetime.timestamp(recent_end_index)\n","    recent_end_index_1m = datetime.fromtimestamp(end_ts - a_day)\n","\n","    #   str Î°ú ÎßåÎì§Ïñ¥ Ï†ëÍ∑ºÌïòÎ©¥ Î∂àÍ∞ÄÌï®  #\n","    if \"999000\" in str(df.index[-1]):\n","      # end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","      end_index = pd.to_datetime(str(recent_end_index_1m).split(\" \")[0] + \" 08:59:59.999000\")\n","    else:\n","      # end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 09:00:00\")\n","      end_index = pd.to_datetime(str(recent_end_index_1m).split(\" \")[0] + \" 09:00:00\")\n","      # end_index = pd.to_datetime(\"2021-11-15\" + \" 09:00:00\")\n","\n","    #   ***** 1m open_idx Îäî htf Î≥¥Îã§ Ïª§ÏïºÌï® --> to_lower_tf Î•º ÏÇ¨Ïö©ÌïòÍ∏∞ ÏúÑÌï®ÏûÑ   #\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf Ïùò Í∏∞Ï§Ä ltf\n","\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    # res_df.to_feather(feather_path)\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_path, \"saved succesfully !\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","metadata":{"id":"U-3QkfbFSuzl"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","metadata":{"id":"6cu-Y82iSuzl"},"source":["new_dir_path = \"ema5m_backi2\"\n","base_dir_path = \"rsi5m_backi2\"\n","\n","# new_date = \"2021-07-01\"\n","new_date = \"2021-11-17\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)\n","os.makedirs(save_path, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat/\", \"noncat/\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","  res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  # res_df_dict[key] = res_df\n","  # res_df_dict[key] = droped_new_res_df\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4GiF2NJPSuzm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638601523467,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"10697ea8-e9a4-4ebe-c556-52feb582e081"},"source":["droped_new_res_df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['dc_upper_1m', 'dc_lower_1m', 'dc_base_1m', 'dc_upper_3m', 'dc_lower_3m', 'dc_base_3m', 'dc_upper_5m', 'dc_lower_5m', 'dc_base_5m', 'dc_upper_15m', 'dc_lower_15m', 'dc_base_15m', 'dc_upper_30m', 'dc_lower_30m', 'dc_base_30m', 'dc_upper_1h', 'dc_lower_1h', 'dc_base_1h', 'dc_upper_4h', 'dc_lower_4h', 'dc_base_4h', 'bb_upper_1m', 'bb_lower_1m', 'bb_upper_3m', 'bb_lower_3m', 'bb_upper_5m', 'bb_lower_5m', 'bb_upper_15m', 'bb_lower_15m', 'bb_upper_30m', 'bb_lower_30m', 'bb_upper_1h', 'bb_lower_1h', 'bb_upper_4h', 'bb_lower_4h', 'rsi_1m', 'open', 'high', 'low', 'close', 'volume', 'rsi_5m'], dtype='object')"]},"metadata":{},"execution_count":111}]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","metadata":{"id":"xyI5NrM7Suzm"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  print(os.path.join(new_save_path, key), \"saved !\")\n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat) , database cum ÎèÑ Ìò∏ÌôòÍ∞ÄÎä•"]},{"cell_type":"code","metadata":{"id":"XG2p9OhhSuzm"},"source":["save_path = './candlestick_concated/res_df/'\n","save_path = './candlestick_concated/database_bn/'\n","\n","new_date = '2021-11-17'\n","# base_date = '2021-10-10'\n","base_date = '2021-07-01'\n","\n","#     load ftr list    #\n","if \"database\" in save_path:\n","  dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  dir_path = \"bbdc3m_backi2\"\n","  concat_dir = \"concat\"\n","\n","# base_date_path = os.path.join(save_path, dir_path, concat_dir, \"cum\", base_date)    # --> base ÎèÑ non_cum Í∞ÄÎä•Ìï®\n","base_date_path = os.path.join(save_path, dir_path, concat_dir, \"non_cum\", base_date)    # --> base ÎèÑ non_cum Í∞ÄÎä•Ìï®\n","# new_date_path = os.path.join(save_path, dir_path, concat_dir, \"non_cum\", new_date)\n","new_date_path = os.path.join(save_path, dir_path, concat_dir, \"cum\", new_date)    # --> cum Í∞ÄÎä•Ìï®\n","  \n","\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat ÎëêÍ∞ÄÏßÄ Í≤ΩÏö∞ Ï°¥Ïû¨Í∞ÄÎä•Ìï† Í≤É\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","exist_list = os.listdir(save_path)\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  # if key in exist_list:\n","  #   print(key, \"already exist !\")\n","  #   continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","  \n","  interval = key.split(\".\")[0].split(\"_\")[-1] \n","  itv_num = to_itvnum(interval)\n","\n","  # verified_df = consecutive_df(droped_new_res_df, to_itvnum(interval))\n","\n","  # verified_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  # res_df_dict[key] = res_df\n","  # res_df_dict[key] = droped_new_res_df\n","  \n","  print(droped_new_res_df.iloc[[0, -1]])\n","\n","  np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","  ideal_ts_gap = 60 * itv_num\n","\n","  for ts_i in range(len(np_idx_ts)):\n","    \n","    if ts_i != 0:\n","      ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","      if ts_gap > ideal_ts_gap or ts_gap < ideal_ts_gap:\n","      # if ts_gap == ideal_ts_gap:\n","        print(droped_new_res_df.index[ts_i - 1])\n","        print(droped_new_res_df.index[ts_i])\n","        # print(ts_gap)\n","        print(\"-------------------- unideal ts_gap --------------------\")\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["#### check continuity"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nGzMGyC3Suzn","executionInfo":{"status":"ok","timestamp":1638591157349,"user_tz":-540,"elapsed":3087,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"0605ab52-c76b-46c6-e4e4-1207604977f1"},"source":["# print(droped_new_res_df.columns)\n","\n","print(droped_new_res_df.iloc[[0, -1]])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["                           open    high     low   close    volume\n","index                                                            \n","2020-09-05 00:00:59.999  228.12  228.48  223.93  223.97  2661.913\n","2021-11-17 00:51:59.999  606.61  606.80  606.54  606.75    63.332\n","[1.59926406e+09 1.59926412e+09 1.59926418e+09 1.59926424e+09\n"," 1.59926430e+09 1.59926436e+09 1.59926442e+09 1.59926448e+09\n"," 1.59926454e+09 1.59926460e+09]\n"]}]},{"cell_type":"markdown","metadata":{"id":"qNGeuYuGDXfv"},"source":["# pr check with strategy"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FPBG5Qqg2jB","executionInfo":{"status":"ok","timestamp":1639569329778,"user_tz":-540,"elapsed":1192,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"e05a4286-51c8-4c62-afb5-575e5e261ee3"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","dir_path = \"ema5m_backi2\"\n","\n","date = \"2021-11-17\"\n","\n","ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","#     load ftr list    #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["['2021-11-17 ETHUSDT.ftr', '2021-11-17 BTCUSDT.ftr', '2021-11-17 ETCUSDT.ftr', '2021-11-17 ADAUSDT.ftr', '2021-11-17 XLMUSDT.ftr', '2021-11-17 LINKUSDT.ftr', '2021-11-17 LTCUSDT.ftr', '2021-11-17 EOSUSDT.ftr', '2021-11-17 XRPUSDT.ftr', '2021-11-17 BCHUSDT.ftr']\n"]}]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["## hvp platform"]},{"cell_type":"markdown","metadata":{"id":"wmnyUTS-yjF1"},"source":["##### config"]},{"cell_type":"code","metadata":{"id":"q_4E-zH02WJy"},"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = \\\n","{\n","  \"trader_set\": {\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"last_index\": -2,\n","    \"limit_fee\": 0.0002,\n","    \"market_fee\": 0.0004,\n","    \"initial_asset\": 1000,\n","    \"asset_changed\" : 1,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"interval_list\": [\n","      \"1m\",\n","      \"5m\",\n","      \"15m\"\n","    ],\n","    \"row_list\": [\n","      200,\n","      100,\n","      100\n","    ],\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"api_retry_term\": 3,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"loc_set\": {\n","    \"zone\":{\n","      \"dtk_itv\": \"5m\",\n","      \"short_spread\": 0.915,    \n","      \"long_spread\": 0.953,    \n","      \"spread_ep_gap\": 0,\n","      \"dtk_dc_itv\": \"None\",\n","      \"dt_k\": 0.225,\n","      \"dc_period\": 135,\n","      \"ei_k\": 0.095,\n","      \"use_dtk_line\": 0,\n","      \"zone_rejection\": 0,\n","      \"bbz_itv\": \"None\",\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135,\n","      \"dr_error\": 0.1,\n","      \"bbwp_thresh\": 0.5,\n","      \"entry_incycle\": 5,\n","      \"max_eplim_pct\": 0.05,\n","      \"min_eplim_pct\": 0.013         \n","    },\n","    \"point\":{\n","    \"exp_itv\": \"5m\",\n","    \"tpg_itv\": \"5m\",\n","    \"outg_itv\": \"5m\",\n","    \"outg_dc_period\": \"None\",\n","    \"tf_entry\": 5,\n","    \"htf_entry\": 15\n","    }\n","  },\n","  \"tr_set\": {\n","    \"ep_gap\": 0.083,\n","    \"tp_gap\": 0.36,\n","    \"out_gap\": -0.5,\n","    \"c_ep_gap\": 0.232,\n","    \"t_out_gap\": -0.5\n","  },\n","  \"ep_set\": {\n","    \"short_entry_score\": -2,\n","    \"entry_type\": \"LIMIT\",\n","    \"static_ep\": 1,\n","    \"tpout_onexec\": 0\n","  },\n","  \"out_set\": {\n","    \"out_type\": \"MARKET\",\n","    \"use_out\": 1,\n","    \"static_out\": 1,\n","    \"hl_out\": 1,\n","    \"price_restoration\": 0,\n","    \"retouch\": 0,\n","    \"retouch_out_period\": 500,\n","    \"second_out\": 0,\n","    \"approval_st_gap\": 1.5,\n","    \"second_out_gap\": 0.5\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"tp_type\": \"BOTH\",\n","    \"static_tp\": 1,\n","    \"partial_num\": 1,\n","    \"partial_qty_divider\": 1.5\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 0,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.12,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)\n","# param_json = json.dumps(param_dict, indent=2)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###### save config"],"metadata":{"id":"dzla8i9_ysmP"}},{"cell_type":"code","source":["# config_name = \"config_v5_2.json\"\n","config_name = \"config_v3.json\"\n","cfg_full_path = os.path.join(current_path, \"config\", config_name)\n","\n","\n","with open(cfg_full_path, 'w') as cfg:\n","    json.dump(config, cfg, indent=2)\n","    print(\"{} dumped !\".format(cfg_full_path))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FlNGKvW_w2za","executionInfo":{"status":"ok","timestamp":1639567642976,"user_tz":-540,"elapsed":617,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"7dcc0baa-5840-4d11-9adf-6cbb5ae53d2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Colab Notebooks/JnQ/config/config_v3.json dumped !\n"]}]},{"cell_type":"markdown","source":["###### load config"],"metadata":{"id":"vOVr2jLczFQJ"}},{"cell_type":"code","source":["config1_name = \"config_v5_2.json\"\n","config2_name = \"config_v3.json\"\n","cfg_full_path1 = os.path.join(current_path, \"config\", config1_name)\n","cfg_full_path2 = os.path.join(current_path, \"config\", config2_name)\n","\n","with open(cfg_full_path1, 'r') as cfg:\n","    config1 = EasyDict(json.load(cfg))\n","with open(cfg_full_path2, 'r') as cfg:\n","    config2 = EasyDict(json.load(cfg))\n","  \n","print(config1.strat_version)\n","print(config2.strat_version)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uPpMThtZzGtZ","executionInfo":{"status":"ok","timestamp":1639569362895,"user_tz":-540,"elapsed":1030,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"84245c00-c35f-4ea2-c9fa-480b8d9f1d6e"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["v5_2\n","v3\n"]}]},{"cell_type":"code","source":["config = config2\n","# config1 = config2\n","# config2 = config1"],"metadata":{"id":"JSOIUdic2aBn","executionInfo":{"status":"ok","timestamp":1639569375008,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D"},"source":["##### sync_funcs"]},{"cell_type":"code","metadata":{"id":"nzOYWA2kqZ0d","executionInfo":{"status":"ok","timestamp":1639569382823,"user_tz":-540,"elapsed":3547,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"source":["class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def enlist_rtc(res_df, config):\n","\n","    # res_df[\"ema_1m\"] = ema(res_df[\"close\"], 200)\n","\n","    res_df = bb_level(res_df, '5m', 1)\n","    res_df = dc_level(res_df, '5m', 1)\n","    res_df = bb_level(res_df, '15m', 1)\n","    res_df = dc_level(res_df, '15m', 1)\n","    # res_df = bb_level(res_df, '30m', 1)\n","    # res_df = dc_level(res_df, '30m', 1)\n","\n","    res_df['short_rtc_1'] = res_df['bb_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['short_rtc_0'] = res_df['dc_upper_%s' % config.loc_set.point.outg_itv]\n","    res_df['short_rtc_gap'] = res_df['short_rtc_0'] - res_df['short_rtc_1']\n","\n","    res_df['h_short_rtc_1'] = res_df['bb_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_0'] = res_df['dc_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_gap'] = res_df['h_short_rtc_0'] - res_df['h_short_rtc_1']\n","\n","    res_df['long_rtc_1'] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['long_rtc_0'] = res_df['dc_lower_%s' % config.loc_set.point.outg_itv]\n","    res_df['long_rtc_gap'] = res_df['long_rtc_1'] - res_df['long_rtc_0']\n","\n","    res_df['h_long_rtc_1'] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_0'] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_gap'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_0']\n","\n","    res_df['short_dtk_1'] = res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_0'] = res_df['dc_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_gap'] = res_df['short_dtk_0'] - res_df['short_dtk_1']\n","\n","    res_df['long_dtk_1'] = res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_0'] = res_df['dc_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_gap'] = res_df['long_dtk_1'] - res_df['long_dtk_0']\n","\n","    res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","\n","    return res_df\n","\n","\n","\n","def enlist_tr(res_df, config, np_timeidx):\n","\n","\n","    res_df['entry'] = np.zeros(len(res_df))\n","    res_df['h_entry'] = np.zeros(len(res_df))\n","\n","    # -------- set ep level -------- #\n","\n","    #       limit ver.     #\n","    #        bb ep         #\n","    res_df['short_ep'] = res_df['h_short_rtc_1'] + res_df['h_short_rtc_gap'] * config.tr_set.ep_gap\n","    res_df['long_ep'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_gap'] * config.tr_set.ep_gap\n","\n","    if config.tr_set.c_ep_gap != \"None\":\n","        res_df['short_ep_org'] = res_df['short_ep'].copy()\n","        res_df['long_ep_org'] = res_df['long_ep'].copy()\n","\n","        res_df['short_ep2'] = res_df['h_short_rtc_1'] + res_df['h_short_rtc_gap'] * config.tr_set.c_ep_gap\n","        res_df['long_ep2'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_gap'] * config.tr_set.c_ep_gap\n","\n","    res_df['short_spread_ep'] = res_df['bb_lower_5m'] #+ res_df['h_short_rtc_gap'] * config.loc_set.zone.spread_ep_gap\n","    res_df['long_spread_ep'] = res_df['bb_upper_5m']  #- res_df['h_long_rtc_gap'] * config.loc_set.zone.spread_ep_gap\n","\n","    #       market ver.     #\n","    if config.ep_set.entry_type == \"MARKET\":\n","        res_df['short_ep'] = res_df['close']\n","        res_df['long_ep'] = res_df['close']\n","\n","    # ---------------------------------------- short = -1 ---------------------------------------- #\n","    # ---------------- ep_time  ---------------- #\n","    #        bb level entry      #\n","    # res_df['entry'] = np.where((res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_lower_%s' % config.loc_set.point.exp_itv]) &\n","    res_df['entry'] = np.where((res_df['open'] >= res_df['bb_lower_%s' % config.loc_set.point.exp_itv]) &\n","                               # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_lower_%s' % config.loc_set.point.exp_itv]) &\n","                               (res_df['close'] < res_df['bb_lower_%s' % config.loc_set.point.exp_itv])\n","                               , res_df['entry'] - 1, res_df['entry'])\n","\n","    res_df['entry'] = np.where((res_df['entry'] < 0) &\n","                               (np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1))\n","                               , res_df['entry'] - 1, res_df['entry'])\n","\n","    # res_df['entry'] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry'] - 1, res_df['entry'])\n","\n","    # res_df['entry'] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry'] - 1, res_df['entry'])\n","\n","    res_df['h_entry'] = np.where(  # (res_df['open'] >= res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) >= res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] < res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry'] - 1, res_df['h_entry'])\n","\n","    # ---------------------------------------- long = 1 ---------------------------------------- #\n","    # ---------------------- ep_time ---------------------- #\n","\n","    #      bb level entry      #\n","    # res_df['entry'] = np.where((res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_upper_%s' % config.loc_set.point.exp_itv]) &\n","    res_df['entry'] = np.where((res_df['open'] <= res_df['bb_upper_%s' % config.loc_set.point.exp_itv]) &\n","                               # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_upper_%s' % config.loc_set.point.exp_itv]) &\n","                               (res_df['close'] > res_df['bb_upper_%s' % config.loc_set.point.exp_itv])\n","                               , res_df['entry'] + 1, res_df['entry'])\n","\n","    res_df['entry'] = np.where((res_df['entry'] > 0) &\n","                               (np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1))\n","                               , res_df['entry'] + 1, res_df['entry'])\n","\n","    # res_df['entry'] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry'] + 1, res_df['entry'])\n","\n","    # res_df['entry'] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry'] + 1, res_df['entry'])\n","\n","    res_df['h_entry'] = np.where(  # (res_df['open'] <= res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) <= res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] > res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry'] + 1, res_df['h_entry'])\n","\n","    # ------------------------------ rtc tp & out ------------------------------ #\n","    # --------------- bb rtc out --------------- #\n","\n","    if config.loc_set.point.outg_dc_period != \"None\":\n","        res_df['short_rtc_0'] = res_df['high'].rolling(config.loc_set.point.outg_dc_period).max()\n","        res_df['long_rtc_0'] = res_df['low'].rolling(config.loc_set.point.outg_dc_period).min()\n","\n","    res_df['short_out'] = res_df['short_rtc_0'] + res_df['short_rtc_gap'] * config.tr_set.out_gap\n","    res_df['long_out'] = res_df['long_rtc_0'] - res_df['long_rtc_gap'] * config.tr_set.out_gap\n","\n","    if config.tr_set.t_out_gap != \"None\":\n","        res_df['short_out_org'] = res_df['short_out'].copy()\n","        res_df['long_out_org'] = res_df['long_out'].copy()\n","\n","        res_df['short_out2'] = res_df['short_rtc_0'] + res_df['short_rtc_gap'] * config.tr_set.t_out_gap\n","        res_df['long_out2'] = res_df['long_rtc_0'] - res_df['long_rtc_gap'] * config.tr_set.t_out_gap\n","\n","    # ------------------------------ tp ------------------------------ #\n","    # --------------- bb rtc tp --------------- #\n","    res_df['short_tp'] = res_df['h_short_rtc_1'] - res_df['h_short_rtc_gap'] * config.tr_set.tp_gap\n","    res_df['long_tp'] = res_df['h_long_rtc_1'] + res_df['h_long_rtc_gap'] * config.tr_set.tp_gap\n","\n","    # --------------- set tp_line / dtk_line --------------- #\n","    # res_df['short_tp_1'] = np.where(res_df['h_entry'] == -1, res_df['short_rtc_1'], np.nan)\n","    # res_df['short_tp_1'] = ffill(res_df['short_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['short_tp_gap'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_gap'], np.nan)  # ltf_gap ÏùÄ out ÏùÑ ÏúÑÌïú gap ÏûÑ\n","    # res_df['short_tp_gap'] = ffill(res_df['short_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['long_tp_1'] = np.where(res_df['h_entry'] == 1, res_df['long_rtc_1'], np.nan)\n","    # res_df['long_tp_1'] = ffill(res_df['long_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['long_tp_gap'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_gap'], np.nan)\n","    # res_df['long_tp_gap'] = ffill(res_df['long_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_short_tp_1'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_1'], np.nan)\n","    # res_df['h_short_tp_1'] = ffill(res_df['h_short_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_short_tp_gap'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_gap'], np.nan)\n","    # res_df['h_short_tp_gap'] = ffill(res_df['h_short_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_long_tp_1'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_1'], np.nan)\n","    # res_df['h_long_tp_1'] = ffill(res_df['h_long_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_long_tp_gap'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_gap'], np.nan)\n","    # res_df['h_long_tp_gap'] = ffill(res_df['h_long_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    if config.loc_set.zone.use_dtk_line:\n","        res_df['short_dtk_1'] = np.where(res_df['h_entry'] == -1, res_df['short_dtk_1'], np.nan)\n","        res_df['short_dtk_1'] = ffill(res_df['short_dtk_1'].values.reshape(1, -1)).reshape(-1, 1)\n","        res_df['short_dtk_gap'] = np.where(res_df['h_entry'] == -1, res_df['short_dtk_gap'], np.nan)\n","        res_df['short_dtk_gap'] = ffill(res_df['short_dtk_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","        res_df['long_dtk_1'] = np.where(res_df['h_entry'] == 1, res_df['long_dtk_1'], np.nan)\n","        res_df['long_dtk_1'] = ffill(res_df['long_dtk_1'].values.reshape(1, -1)).reshape(-1, 1)\n","        res_df['long_dtk_gap'] = np.where(res_df['h_entry'] == 1, res_df['long_dtk_gap'], np.nan)\n","        res_df['long_dtk_gap'] = ffill(res_df['long_dtk_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    res_df['dc_upper_v2'] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()\n","    res_df['dc_lower_v2'] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","    \n","    res_df['zone_dc_upper_v2'] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()\n","    res_df['zone_dc_lower_v2'] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    return res_df\n","\n","\n","\n","\n","def short_ep_loc(res_df, config, i, show_detail=True):\n","\n","    # ------- param init ------- #\n","    open_side = None\n","\n","    mr_const_cnt = 0\n","    mr_score = 0\n","    zone = 'n'\n","\n","\n","    if config.ep_set.entry_type == 'MARKET':\n","        if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':\n","            tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","    else:\n","        if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","\n","\n","    # -------------- tr scheduling -------------- #\n","    if config.loc_set.zone.short_spread != \"None\":\n","\n","      mr_const_cnt += 1\n","\n","      tr = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_5m'].iloc[\n","      # tr = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - out_fee * res_df['bb_base_5m'].iloc[\n","          # i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + tp_fee *\n","          i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","                  res_df['bb_base_5m'].iloc[i])\n","      # tr = (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_15m'].iloc[\n","      #     i]) / (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_15m'].iloc[i])\n","          \n","      # tr = (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_lower_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_lower_5m'].iloc[i])\n","      # tr = (res_df['short_rtc_gap'].iloc[i] * (0.443) - tp_fee * res_df['short_ep'].iloc[\n","      #     i]) / (res_df['short_rtc_gap'].iloc[i] * (0.417) + out_fee * res_df['short_ep'].iloc[i])\n","\n","      # tr = (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['dc_lower_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['dc_lower_5m'].iloc[i])\n","      # tr = ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 - tp_fee * res_df['dc_lower_5m'].iloc[\n","      #     i]) / ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 + out_fee *\n","      #             res_df['dc_lower_5m'].iloc[i])\n","      \n","      if tr >= config.loc_set.zone.short_spread:\n","          mr_score += 1\n","\n","      if show_detail:\n","          print(\"tr :\", tr)\n","\n","    # -------------- dtk -------------- #\n","    if config.loc_set.zone.dt_k != \"None\":\n","\n","      mr_const_cnt += 1\n","      # if res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i] >= res_df['short_rtc_1'].iloc[i] - res_df['h_short_rtc_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","      #     dtk_v1 & v2 platform     #\n","      if config.loc_set.zone.dtk_dc_itv != \"None\":\n","          dc = res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","          dt_k = res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","          if dc >= dt_k:\n","              mr_score += 1\n","\n","              #     dc_v2   #\n","      else:\n","          dc = res_df['dc_lower_v2'].iloc[i]\n","          dt_k = res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","          if dc >= dt_k:\n","              # if res_df['dc_lower_v2'].iloc[i] >= res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k and \\\n","              # res_df['dc_upper_v2'].iloc[i] <= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","              mr_score += 1\n","\n","      if show_detail:\n","          print(\"dc :\", dc)\n","          print(\"dt_k :\", dt_k)\n","\n","\n","    # -------------- zone rejection  -------------- #\n","    if config.loc_set.zone.zone_rejection:\n","    \n","      #       by bb and dc - rsi      # \n","      # mr_const_cnt += 1\n","      # if res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i] <= res_df['dc_upper_1m'].iloc[i] <= res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","      #   mr_score += 1\n","        \n","        #       by bb       # \n","      mr_const_cnt += 1      \n","      # if res_df['bb_lower_5m'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:      \n","\n","      # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:   # org\n","      # if res_df['close'].iloc[i] > res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:  # inv\n","      # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:    \n","      if res_df['close'].iloc[i] > res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        mr_score += 1\n","\n","        #       by ema       # \n","      mr_const_cnt += 1      \n","      if res_df['close'].iloc[i] < res_df['ema_5m'].iloc[i]:\n","        mr_score += 1\n","\n","        #       by zone_dtk       #\n","      # mr_const_cnt += 1\n","      # if res_df['zone_dc_upper_v2'].iloc[i] < res_df['long_dtk_plot_1'].iloc[i] + res_df['long_dtk_plot_gap'].iloc[\n","      #     i] * config.loc_set.zone.zone_dt_k:\n","      #   mr_score += 1\n","\n","\n","    # -------------- zoning -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","\n","        #       by bb       # \n","        # if res_df['close'].iloc[i] > res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        #       by zone_dtk       #\n","\n","          #         c_zone        #\n","        if res_df['zone_dc_upper_v2'].iloc[i] > res_df['long_dtk_plot_1'].iloc[i] + res_df['long_dtk_plot_gap'].iloc[\n","            i] * config.loc_set.zone.zone_dt_k:\n","\n","            if config.ep_set.static_ep:\n","              res_df['short_ep'].iloc[i] = res_df['short_ep2'].iloc[i]\n","            else:\n","              res_df['short_ep'] = res_df['short_ep2']\n","              \n","            if config.out_set.static_out:\n","              res_df['short_out'].iloc[i] = res_df['short_out_org'].iloc[i]\n","            else:\n","              res_df['short_out'] = res_df['short_out_org']\n","\n","            zone = 'c'\n","\n","          #         t_zone        #\n","        else:\n","\n","          # mr_const_cnt += 1   # zone_rejection - temporary\n","\n","          if config.ep_set.static_ep:\n","            res_df['short_ep'].iloc[i] = res_df['short_ep_org'].iloc[i]\n","          else:\n","            res_df['short_ep'] = res_df['short_ep_org']\n","\n","          if config.out_set.static_out:\n","            res_df['short_out'].iloc[i] = res_df['short_out2'].iloc[i]\n","          else:\n","            res_df['short_out'] = res_df['short_out2']\n","\n","          zone = 't'\n","\n","    if mr_const_cnt == mr_score:\n","        open_side = OrderSide.SELL\n","\n","    return res_df, open_side, zone\n","\n","\n","\n","def long_ep_loc(res_df, config, i, show_detail=True):\n","\n","    # ------- param init ------- #\n","    open_side = None\n","\n","    mr_const_cnt = 0\n","    mr_score = 0\n","    zone = 'n'\n","\n","\n","    if config.ep_set.entry_type == 'MARKET':\n","        if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':\n","            tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","    else:\n","        if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","\n","\n","    # -------------- tr scheduling -------------- #       \n","    if config.loc_set.zone.long_spread != \"None\":\n","\n","      mr_const_cnt += 1\n","      \n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_5m'].iloc[i] - tp_fee * res_df['bb_base_5m'].iloc[\n","      #     i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_5m'].iloc[i])\n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_15m'].iloc[i] - tp_fee * res_df['bb_base_15m'].iloc[\n","      #     i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_15m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_15m'].iloc[i])\n","          \n","      tr = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['bb_upper_5m'].iloc[\n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - out_fee * res_df['bb_upper_5m'].iloc[\n","          # i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + tp_fee *\n","          i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","                  res_df['bb_upper_5m'].iloc[i])          \n","      # tr = (res_df['long_rtc_gap'].iloc[i] * (0.443) - tp_fee * res_df['long_ep'].iloc[\n","      #     i]) / (res_df['long_rtc_gap'].iloc[i] * (0.417) + out_fee * res_df['long_ep'].iloc[i])\n","\n","      # tr = (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] - tp_fee * res_df['dc_upper_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] + out_fee *\n","      #             res_df['dc_upper_5m'].iloc[i])\n","      # tr = ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 - tp_fee * res_df['dc_upper_5m'].iloc[\n","      #     i]) / ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 + out_fee *\n","      #             res_df['dc_upper_5m'].iloc[i])\n","          \n","      if tr >= config.loc_set.zone.long_spread:\n","          mr_score += 1\n","\n","      if show_detail:\n","          print(\"tr :\", tr)\n","    \n","\n","    # -------------- dtk -------------- #\n","    if config.loc_set.zone.dt_k != \"None\":  \n","\n","      mr_const_cnt += 1\n","      # if res_df['dc_upper_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i] <= res_df['long_rtc_1'].iloc[i] + res_df['long_rtc_gap'].iloc[i] * config.loc_set.zone.dt_k:          \n","          #     dtk_v1 & v2 platform    #\n","      if config.loc_set.zone.dtk_dc_itv != \"None\":\n","        dc = res_df['dc_upper_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","        dt_k = res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","        if dc <= dt_k:  \n","          mr_score += 1  \n","\n","      else:\n","          #     dc_v2     #\n","        dc = res_df['dc_upper_v2'].iloc[i]\n","        dt_k = res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","        if dc <= dt_k:  \n","        # if res_df['dc_upper_v2'].iloc[i] >= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","        # if res_df['dc_upper_v2'].iloc[i] <= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k and \\\n","        #   res_df['dc_lower_v2'].iloc[i] >= res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","          mr_score += 1  \n","      \n","      if show_detail:\n","          print(\"dc :\", dc)\n","          print(\"dt_k :\", dt_k)\n","\n","    \n","    # -------------- zone rejection  -------------- #\n","    if config.loc_set.zone.zone_rejection:\n","      \n","      # #       by bb and dc - rsi      # \n","      # mr_const_cnt += 1\n","      # if res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i] >= res_df['dc_lower_1m'].iloc[i] >= res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:        \n","      #   mr_score += 1                   \n","      \n","        #       by bb       #       \n","      mr_const_cnt += 1\n","      # if  res_df['bb_upper_5m'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","      # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:    # org\n","      # if res_df['close'].iloc[i] < res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:  # inv\n","      # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","      if res_df['close'].iloc[i] < res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","        mr_score += 1      \n","\n","        #       by ema       #       \n","      mr_const_cnt += 1\n","      if  res_df['close'].iloc[i] > res_df['ema_5m'].iloc[i]:\n","        mr_score += 1                \n","\n","\n","        #       by zone_dtk       #\n","      # mr_const_cnt += 1\n","      # if res_df['zone_dc_lower_v2'].iloc[i] > res_df['short_dtk_plot_1'].iloc[i] - res_df['short_dtk_plot_gap'].iloc[i] * config.loc_set.zone.zone_dt_k:      \n","      #   mr_score += 1                   \n","\n","\n","    # -------------- zoning -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        #       by bb       # \n","      # if res_df['close'].iloc[i] < res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        #       by zone_dtk       #\n","\n","          #         c_zone        #\n","      if res_df['zone_dc_lower_v2'].iloc[i] < res_df['short_dtk_plot_1'].iloc[i] - res_df['short_dtk_plot_gap'].iloc[i] * config.loc_set.zone.zone_dt_k:\n","        \n","        if config.ep_set.static_ep:\n","          res_df['long_ep'].iloc[i] = res_df['long_ep2'].iloc[i]\n","        else:\n","          res_df['long_ep'] = res_df['long_ep2']\n","          \n","        if config.out_set.static_out:\n","          res_df['long_out'].iloc[i] = res_df['long_out_org'].iloc[i]\n","        else:\n","          res_df['long_out'] = res_df['long_out_org']\n","\n","        zone = 'c'\n","\n","        # mr_const_cnt += 1\n","        # dc_lb_period = 100\n","        # if np.sum((res_df['dc_upper_15m'] > res_df['dc_upper_15m'].shift(15)).iloc[i - dc_lb_period:i]) == 0:\n","        #   mr_score += 1\n","        \n","\n","          #         t_zone        #\n","      else:\n","        \n","        # mr_const_cnt += 1   # zone_rejection - temporary\n","\n","        if config.ep_set.static_ep:\n","          res_df['long_ep'].iloc[i] = res_df['long_ep_org'].iloc[i]\n","        else:\n","          res_df['long_ep'] = res_df['long_ep_org']\n","\n","        if config.out_set.static_out:\n","          res_df['long_out'].iloc[i] = res_df['long_out2'].iloc[i]\n","        else:\n","          res_df['long_out'] = res_df['long_out2']\n","\n","        zone = 't'\n","\n","\n","    if mr_const_cnt == mr_score:\n","        open_side = OrderSide.BUY\n","\n","    return res_df, open_side, zone"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC"},"source":["##### run"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TdAn2bHHBWMF","executionInfo":{"status":"ok","timestamp":1639569471700,"user_tz":-540,"elapsed":76460,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"02d2a193-698c-4f53-a92d-a0cdf8169a9b"},"source":["# ------- tp / out fee calc ------- #\n","if config.ep_set.entry_type == 'MARKET':\n","  if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':   # Todo : Ïã§Ï†úÎ°ú, tp_fee Í∞Ä ÏïÑÎãå spread const. Î•º ÏúÑÌïú spread_fee1 ÏûÑ (Ï∂îÌõÑ ÏàòÏ†ï Í∂åÍ≥†)\n","    tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","  else:\n","    tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","  out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","else:\n","  if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == 'BOTH':\n","    tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","  else:\n","    tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","  out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","  \n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","\n","title_position = (0.30, 1)\n","show_plot = 1\n","show_detail = 0\n","\n","for key in ftr_list:\n","\n","  if config.trader_set.symbol in key:\n","    pass\n","  else:\n","    continue\n","\n","  # break\n","\n","  res_df = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")#.loc[pd.to_datetime(\"2021-07-10 04:59:59.999000\"):]\n","  print(key, \"loaded !\")\n","  \n","  # print(\"res_df.columns :\", res_df.columns)  \n","  # print(res_df.tail(100))\n","  # print(\"res_df.index[0] :\", res_df.index[0])\n","  # # print(\"intmin(res_df.index[0]) :\", intmin(res_df.index[0]))\n","  # break\n","\n","  # -------------------- additional indi. -------------------- #    \n","  np_timeidx = np.array(list(map(lambda x : intmin(x), res_df.index)))\n","  \n","  res_df = enlist_rtc(res_df, config)\n","\n","  #   temp param    #\n","  allow_rsi_touch = 1\n","  rsi_gap = 5\n","\n","  rsi_upper = 70\n","  rsi_lower = 30\n","\n","  early_out_tpg = 0.36\n","\n","  itv_num_list = [1, 3, 5, 15]\n","\n","  itv_list = ['15m', '30m', '1h', '4h']\n","  # itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","\n","  # x_val_list = np.arange(0.95, 0.88, -0.01)     # prcn 2\n","  # x_val_list = np.arange(0.95, 0.943, -0.001)    # prcn 3\n","  # x_val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","  # x_val_list = np.arange(5, 10., 1.0)\n","  # x_val_list = np.arange(0.1, 0.16, 0.01)\n","  x_val_list = np.arange(0.35, 0.1, -0.01)\n","\n","  y_val_cols = [\"wr\", \"frq\", \"dpf\", \"min_pr\", \"acc_pr\", \"sum_pr\", \"liqd\", \"tr\", \"dr\", \"sr\"]\n","  # y_rev_val_cols = [\"wr\", \"min_pr\", \"acc_pr\", \"sum_pr\"]\n","  y_rev_val_cols = [\"wr\", \"min_pr\", \"acc_pr\", \"sum_pr\", \"sr\"]\n","\n","  survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  short_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  long_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  rev_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","  rev_short_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","  rev_long_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","\n","  for survey_i, just_loop in enumerate(range(1)):\n","  # for survey_i, config.loc_set.zone.short_spread in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.zone.long_spread in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.zone.dt_k in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.dc_period in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.ei_k in enumerate(x_val_list):   \n","  # for survey_i, config.loc_set.zone.dr_error in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.point.tf_entry in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.bbz_itv in enumerate(itv_list):\n","  # for survey_i, config.tr_set.ep_gap in enumerate(x_val_list): \n","  # for survey_i, config.tr_set.out_gap in enumerate(x_val_list): \n","  # for survey_i, config.tr_set.tp_gap in enumerate(x_val_list): \n","  # for survey_i, config.lvrg_set.leverage in enumerate(x_val_list):\n","  # for survey_i, config.lvrg_set.target_pct in enumerate(x_val_list):   \n","  # for survey_i, outg_dc_itv_num in enumerate(x_val_list): \n","  # for survey_i, exp_itv in enumerate(itv_list): \n","  # for survey_i, zone_dt_k in enumerate(x_val_list): \n","  # for survey_i, t_out_gap in enumerate(x_val_list): \n","  # for survey_i, zone_dc_period in enumerate(x_val_list): \n","  # for survey_i, early_out_tpg in enumerate(x_val_list): \n","  \n","    start_0 = time.time()\n","\n","    print(\"config.loc_set.point.exp_itv :\", config.loc_set.point.exp_itv)\n","    print(\"config.loc_set.point.tpg_itv :\", config.loc_set.point.tpg_itv)\n","    print(\"config.loc_set.point.outg_itv :\", config.loc_set.point.outg_itv)\n","    print(\"config.loc_set.point.outg_dc_period :\", config.loc_set.point.outg_dc_period)\n","    print(\"config.loc_set.zone.dtk_itv :\", config.loc_set.zone.dtk_itv)\n","    print(\"-----------------------------------\")    \n","    # print(\"dtk_dc_itv :\", dtk_dc_itv)    \n","    # print(\"config.loc_set.dtk_dc_itv_num :\", config.loc_set.dtk_dc_itv_num :\",)\n","    print(\"config.loc_set.zone.short_spread :\", config.loc_set.zone.short_spread)\n","    print(\"config.loc_set.zone.long_spread :\", config.loc_set.zone.long_spread)\n","    print(\"config.loc_set.zone.dt_k :\", config.loc_set.zone.dt_k)\n","    print(\"config.loc_set.zone.ei_k :\", config.loc_set.zone.ei_k)\n","    print(\"config.loc_set.zone.dc_period :\", config.loc_set.zone.dc_period)\n","    print(\"config.loc_set.zone.use_dtk_line :\", config.loc_set.zone.use_dtk_line)\n","\n","    print(\"config.loc_set.zone.zone_rejection :\", config.loc_set.zone.zone_rejection)\n","    print(\"config.loc_set.zone.bbz_itv :\", config.loc_set.zone.bbz_itv)\n","    print(\"config.loc_set.zone.zone_dt_k :\", config.loc_set.zone.zone_dt_k)\n","    print(\"config.loc_set.zone.zone_dc_period :\", config.loc_set.zone.zone_dc_period)\n","    # print(\"config.loc_set.open_shift :\", config.loc_set.open_shift)\n","    print(\"-----------------------------------\")\n","    # print(\"config.ep_set.dr_error :\", config.ep_set.dr_error)\n","    print(\"config.loc_set.point.tf_entry :\", config.loc_set.point.tf_entry)\n","    print(\"config.loc_set.point.htf_entry :\", config.loc_set.point.htf_entry)\n","    print(\"config.tr_set.ep_gap :\", config.tr_set.ep_gap)\n","    print(\"config.tr_set.out_gap :\", config.tr_set.out_gap)\n","    print(\"config.tr_set.tp_gap :\", config.tr_set.tp_gap)  \n","    print(\"config.tr_set.c_ep_gap :\", config.tr_set.c_ep_gap)\n","    print(\"config.tr_set.t_out_gap :\", config.tr_set.t_out_gap)\n","    print(\"-----------------------------------\")\n","    print(\"config.lvrg_set.leverage :\", config.lvrg_set.leverage)\n","    print(\"config.lvrg_set.target_pct :\", config.lvrg_set.target_pct)\n","    \n","    print(\"early_out_tpg :\", early_out_tpg)\n","\n","    # res_df['sma_1m'] = res_df['close'].rolling(sma_period).mean()  \n","    # res_df = bb_level(res_df, '5m', bbg)\n","    \n","    res_df = enlist_tr(res_df, config, np_timeidx)\n","\n","    # --------------- set partial tp --------------- #\n","    short_tps = [res_df['short_tp']]\n","    long_tps = [res_df['long_tp']]\n","\n","    # short_tps = [short_tp2]\n","    # long_tps = [long_tp2]\n","\n","    # short_tps = [short_tp2, short_tp] # org\n","    # long_tps = [long_tp2, long_tp]\n","    \n","    # short_tps = [short_tp, short_tp2]\n","    # long_tps = [long_tp, long_tp2]\n","\n","\n","\n","    #       trading : Ïó¨Í∏∞ÎèÑ Ï≤¥Í≤∞ Í≤∞Í≥ºÏóê ÎåÄÌï¥ Î¨òÏÇ¨Ìï®       #\n","    trade_list = []\n","    h_trade_list = []\n","    leverage_list = []\n","    fee_list = []\n","    short_fee_list = []\n","    long_fee_list = []\n","    open_list = []\n","    zone_list = []\n","    side_list = []\n","\n","    tp_ratio_list = []\n","    short_tp_ratio_list = []\n","    long_tp_ratio_list = []\n","\n","    dr_list = []\n","    short_dr_list = []\n","    long_dr_list = []\n","\n","    liqd_list = []\n","    short_liqd_list = []\n","    long_liqd_list = []\n","\n","    nontp_liqd_list = []\n","    nontp_short_liqd_list = []\n","    nontp_long_liqd_list = []\n","\n","    nontp_pr_list = []\n","    nontp_short_pr_list = []\n","    nontp_long_pr_list = []\n","\n","    nontp_short_indexs = []\n","    nontp_long_indexs = []\n","\n","    nontp_short_ep_list = []\n","    nontp_long_ep_list = []\n","\n","    pr_list = []\n","    long_list = []\n","    short_list = []\n","\n","    h_pr_list = []\n","    h_long_list = []\n","    h_short_list = []\n","\n","    ep_tp_list = []\n","    h_ep_tp_list = []\n","    tp_state_list = []\n","\n","    i = 0\n","    while 1:\n","    # for i in range(len(res_df)):  \n","    \n","      # ------- fee init ------- #\n","      if config.ep_set.entry_type == 'LIMIT':\n","        fee = config.trader_set.limit_fee\n","      else:\n","        fee = config.trader_set.market_fee\n","\n","\n","      if res_df['entry'][i] == config.ep_set.short_entry_score: \n","\n","        # print(\"i in short :\", i)\n","\n","        initial_i = i\n","\n","        if config.out_set.static_out:\n","          p_i = initial_i\n","        else:\n","          p_i = i\n","\n","\n","        res_df, open_side_str, zone = short_ep_loc(res_df, config, i, show_detail)\n","\n","\n","        # -------------- mr_score summation -------------- #\n","        if open_side_str is not None:          \n","          pass\n","\n","        else:\n","          i += 1\n","          if i >= len(res_df):\n","            break\n","          continue\n","\n","\n","        ep_j = initial_i\n","\n","        # -------------- limit waiting : limit_out -------------- #\n","\n","        if config.ep_set.entry_type == \"LIMIT\":\n","\n","          entry_done = 0\n","          entry_open = 0\n","          prev_sar = None\n","\n","          # for e_j in range(i, len(res_df)): # entry_signal Ïù¥ open Í∏∞Ï§Ä (Ìï¥Îãπ bar ÏóêÏÑú Ï≤¥Í≤∞ Í∞ÄÎä•Ìï®)\n","          if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","            break\n","          for e_j in range(i + 1, len(res_df)): # entry signalÏù¥ close Í∏∞Ï§Ä Ïùº Í≤ΩÏö∞\n","        \n","            if not config.ep_set.static_ep:\n","              ep_j = e_j\n","\n","            if config.tp_set.static_tp:\n","              # if config.ep_set.tpout_onexec:\n","              #   tp_j = e_j\n","              # else:\n","                tp_j = initial_i\n","            else:\n","              tp_j = e_j  \n","\n","            #             1. ep ÏÑ§Ï†ï \n","            # -------------- np.inf ep -------------- #\n","            # if short_ep.iloc[initial_i] == np.inf:\n","            #   break\n","\n","\n","            #             1. check ep_out      #\n","            if config.loc_set.zone.ei_k != \"None\":\n","\n","              if res_df['low'].iloc[e_j] <= res_df['h_short_rtc_1'].iloc[tp_j] - res_df['h_short_rtc_gap'].iloc[tp_j] * config.loc_set.zone.ei_k:\n","              # if res_df['low'].iloc[e_j] <= res_df['short_tp'].iloc[tp_j]: # ep_out : tp_done\n","              # if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                break\n","\n","              # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] >= rsi_lower) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] < rsi_lower):\n","              #   break\n","\n","            #             2. check ep_in       #\n","            if res_df['high'].iloc[e_j] >= res_df['short_ep'].iloc[ep_j]:\n","              entry_done = 1\n","              # print(\"res_df['high'].iloc[e_j] :\", res_df['high'].iloc[e_j])\n","              # print(\"e_j :\", e_j)\n","\n","              #     Ïù¥ÎØ∏, e_j open Ïù¥ ep Î≥¥Îã§ ÎÜíÏùÄ Í≤ΩÏö∞, entry[ep_j] => -2 Î°ú Î≥ÄÍ≤Ω   #\n","              if res_df['open'].iloc[e_j] >= res_df['short_ep'].iloc[ep_j]:\n","                entry_open = 1\n","\n","              break\n","\n","\n","          i = e_j\n","          # print(\"i = e_j :\", i)\n","\n","          if entry_done:      \n","            pass\n","\n","          else:\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","        # ----------------- end wait ----------------- #\n","\n","        # if e_j - initial_i >= 200:\n","        #   print(\"e_j, initial_i :\", e_j, initial_i)\n","        # print(\"e_j - initial_i :\", e_j - initial_i)\n","        # print()\n","\n","        open_list.append(initial_i)\n","        zone_list.append(zone)\n","        side_list.append('s')\n","        \n","        #     e_j ÎùºÎäî Î≥ÄÏàòÎäî MARKET Ïóê ÏûàÏñ¥ÏÑú Ï†ïÏùòÎêòÏÑúÎäî ÏïàÎêòÎäî Î≥ÄÏàòÏûÑ   #\n","        if config.ep_set.entry_type == 'MARKET':\n","          # try:\n","          #   ep_list = [res_df['close'].iloc[e_j]]\n","          # except Exception as e:\n","          #   # print('error in ep_list (initial) :', e)\n","          ep_list = [res_df['close'].iloc[ep_j]]\n","\n","        else:          \n","          if not entry_open:\n","            ep_list = [res_df['short_ep'].iloc[ep_j]]\n","          \n","          else:\n","            #   ep_j Îäî Ìï≠ÏÉÅ ÏûàÏùå, LIMIT Ïù∏ Í≤ΩÏö∞ e_j ÎèÑ Ìï≠ÏÉÅ Ï°¥Ïû¨Ìï® --> dynamic_ep Ïó¨Î∂ÄÏóê Îî∞Îùº ep_j = e_j Í∞Ä ÎêòÎäî Í≤ΩÏö∞Îßå Ï°¥Ïû¨Ìï† ÎøêÏûÑ \n","            #   Îî∞ÎùºÏÑú, ep_j Î°ú ÌÜµÏùº Í∞ÄÎä•Ìï® (dynamic_ep Ïù∏ Í≤ΩÏö∞, ep_j = e_j ÎêòÏñ¥ÏûàÏùå)\n","            ep_list = [res_df['open'].iloc[e_j]]  # --> Ï≤¥Í≤∞Ïù¥ ÎêòÎäî e_j idx Í∏∞Ï§ÄÏúºÎ°ú ÌïòÎäîÍ≤å ÎßûÏùå\n","\n","        if not config.lvrg_set.static_lvrg:\n","          config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['short_out'].iloc[ep_j] / res_df['short_ep'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['short_out'].iloc[ep_j] / res_df['short_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep'].iloc[ep_j] / res_df['short_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep_org'].iloc[ep_j] / res_df['short_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          \n","          if not config.lvrg_set.allow_float:\n","            config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","          # -------------- leverage rejection -------------- #\n","          if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","            open_list.pop()\n","            zone_list.pop()\n","            side_list.pop()\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","          config.lvrg_set.leverage = max(config.lvrg_set.leverage, 1)\n","          leverage_list.append(config.lvrg_set.leverage)\n","        \n","        config.lvrg_set.leverage = min(50, config.lvrg_set.leverage)\n","\n","\n","        # try:\n","        if config.ep_set.entry_type == \"MARKET\":\n","          ep_idx_list = [ep_j]  # ep_j Îäî ep_type Ïú†Í¥ÄÌïòÍ≤å Ï°¥Ïû¨ÌïòÎäî Î≥ÄÏàòÎãàÍπå try Ïóê Í±∏Ïñ¥ÎëêÎäîÍ≤å ÎßûÏùå <-- # market Ïù∏Îç∞, e_j Î≥ÄÏàòÍ∞Ä Ìï†ÎãπÎêú Í≤ΩÏö∞ Í≥†Î†§Ìï¥ÏïºÌï®\n","        else:\n","          ep_idx_list = [e_j]\n","\n","        # except Exception as e:\n","        #   # print('error in ep_idx_list :', e)        \n","        #   ep_idx_list = [e_j]\n","\n","        tp_list = []\n","        tp_idx_list = []\n","\n","        partial_tp_cnt = 0\n","        hedge_cnt = 1\n","\n","        h_ep, h_tp = None, None\n","        h_i, h_j = None, None\n","        \n","        trade_done = 0\n","        out = 0\n","        # config.out_set.retouch\n","\n","        #     Todo    #\n","        #      1. future_work : ÏÉÅÎã®Ïùò retouch ÏôÄ Í≤πÏπ® \n","        config.out_set.retouch = 0\n","        \n","\n","        if i == len(res_df) - 1: # if j start from i + 1 \n","          open_list.pop()       \n","          zone_list.pop()       \n","          side_list.pop()       \n","        for j in range(i + 1, len(res_df)):\n","\n","        # for j in range(i, len(res_df)):\n","\n","          if config.tp_set.static_tp:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              tp_j = ep_j  # tpout_onexec = using dynamic_ep --> using ep_j Ïóê ÎåÄÌïú Ïù¥Ïú†\n","            else:\n","              tp_j = initial_i\n","          else:\n","            tp_j = j\n","\n","          if config.out_set.static_out:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              out_j = ep_j\n","            else:           \n","              out_j = initial_i\n","          else:\n","            out_j = j\n","\n","\n","          # -------------- sub ep -------------- #\n","          # if res_df['high'].iloc[j - 1] <= res_df['sar2'].iloc[j - 1] and res_df['high'].iloc[j] > res_df['sar2'].iloc[j]:\n","            \n","          #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","          #   if sub_ep < ep_list[-1]:\n","          #     ep_list.append(sub_ep)\n","          #     ep_idx_list.append(j)\n","\n","          \n","          # -------------- hedge only once -------------- #\n","          #             ÏùºÎã®, h_quantity Îäî Ï¥àÍ∏∞ ÏßÑÏûÖÍ≥º ÎèôÏùºÌïòÍ≤å ÏÑ§Ï†ï         #\n","          # if res_df['high'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] >= res_df['minor_ST3_Up'].iloc[j] and hedge_cnt == 1:\n","\n","          #   h_ep = res_df['close'].iloc[j]\n","          #   hedge_cnt -= 1\n","          #   h_i = j\n","\n","\n","          # -------------- ultimate limit tp -------------- #\n","          if not config.tp_set.non_tp:\n","\n","            #               1. by price line             #\n","            if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == \"BOTH\":\n","\n","              for s_i, short_tp_ in enumerate(short_tps):\n","\n","                if res_df['low'].iloc[j] <= short_tp_.iloc[tp_j] and partial_tp_cnt == s_i: # we use static tp now\n","                # if res_df['low'].iloc[j] <= short_tp_.iloc[j]:\n","                # if res_df['low'].iloc[j] <= short_tp_.iloc[j] <= res_df['high'].iloc[j]: --> Ïù¥Í±¥ ÏûòÎ™ªÎêòÏóàÏùå\n","\n","                  if s_i == len(short_tps) - 1:\n","                    trade_done = 1\n","                  \n","                  partial_tp_cnt += 1\n","\n","                  #         dynamic tp        #\n","                  # if 0:\n","                  if short_tp_.iloc[j] != short_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                    #   tp limit Ïù¥ Î∂àÍ∞ÄÌïú Í≤ΩÏö∞ = open Ïù¥ Ïù¥ÎØ∏, tp Î•º ÎÑòÏùÄ Í≤ΩÏö∞ # \n","                    # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] < short_tp_.iloc[j]:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-short_open\")\n","\n","                    #   tp limit Ïù¥ Í∞ÄÎä•Ìïú Í≤ΩÏö∞ = open Ïù¥ ÏïÑÏßÅ, tp Î•º ÎÑòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ # \n","                    else:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[j]\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-short_tp\")\n","\n","                  #         static tp         #\n","                  else:\n","                    \n","                    #   tp limit Ïù¥ Î∂àÍ∞ÄÌïú Í≤ΩÏö∞ = open Ïù¥ Ïù¥ÎØ∏, tp Î•º ÎÑòÏùÄ Í≤ΩÏö∞ # \n","                    #   non_inversion Ïùò Í≤ΩÏö∞, short_tp Í∞Ä Í∞ÄÎä•Ìï®   #              \n","\n","                    # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] < short_tp_.iloc[tp_j]:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-short_tp\")\n","\n","                    #   tp limit Ïù¥ Í∞ÄÎä•Ìïú Í≤ΩÏö∞ = open Ïù¥ ÏïÑÏßÅ, tp Î•º ÎÑòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ # \n","                    else:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-short_tp\")   \n","\n","                  tp_list.append(tp)     \n","                  tp_idx_list.append(j)\n","                  fee += config.trader_set.limit_fee\n","\n","\n","            #           2. by signal        #\n","            if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","              market_tp = 0\n","\n","              # -------------- sar tp -------------- #\n","              # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","              #       inversion     #\n","              # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","              \n","              # ----------- st short ----------- #\n","              # if res_df['close'].iloc[j] <= res_df['short_tp'].iloc[tp_j]:\n","              \n","              # -------------- sar pb tp -------------- #\n","              # if res_df['low'].iloc[j] <= res_df['short_tp'].iloc[initial_i]:\n","\n","              # -------------- st tp -------------- #\n","              # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:       \n","\n","              # -------------- fisher tp -------------- #            \n","              # if entry[j] == 1:\n","              \n","              # -------------- timestamp -------------- #\n","              # if np_timeidx[j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:       \n","\n","              # -------------- rsi -------------- #\n","              # if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] >= rsi_lower) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] < rsi_lower):                            \n","              #   market_tp = 1\n","\n","              # # -------------- rsi slight touch -------------- #\n","              # elif allow_rsi_touch:\n","              #   if (np.min(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[initial_i:j]) < rsi_lower + rsi_gap) & \\\n","              #     (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] >= 50):\n","              #     market_tp = 1              \n","                           \n","              # if (np.min(res_df['low'].iloc[e_j:j]) < res_df['short_tp'].iloc[tp_j]) & \\\n","              if (np.min(res_df['low'].iloc[e_j:j]) < res_df['h_short_rtc_1'].iloc[tp_j] - res_df['h_short_rtc_gap'].iloc[tp_j] * early_out_tpg) & \\\n","                (res_df['close'].iloc[j] >= res_df['short_ep'].iloc[ep_j]):\n","                market_tp = 1 \n","\n","              if market_tp:\n","                \n","                tp = res_df['close'].iloc[j]\n","                # tp = res_df['open'].iloc[j]\n","                trade_done = 1\n","\n","                if trade_done:\n","                  tp_state_list.append(\"short close tp\")\n","\n","                tp_list.append(tp) \n","                tp_idx_list.append(j)\n","                fee += config.trader_set.market_fee\n","\n","\n","                  \n","          # -------------- out -------------- #\n","          if not trade_done and config.out_set.use_out and j != len(res_df) - 1:\n","\n","            # -------------- macd -------------- #\n","            # if res_df['macd_hist3'].iloc[j] > 0:  #  macd out\n","            # if res_df['macd_hist3'].iloc[i] < 0 and res_df['macd_hist3'].iloc[j] > 0:\n","\n","            # -------------- st config.out_set.retouch -------------- #\n","            # out = 1 ÏÉÅÌÉúÎ©¥ ÎèôÏùº tick ÏóêÏÑú config.out_set.retouch Î•º Ï°∞ÏÇ¨Ìï† Í±∞Í∏∞ ÎïåÎ¨∏Ïóê, Î®ºÏ†Ä Í≤ÄÏÇ¨Ìï®\n","            # Í∑∏Î¶¨Í≥†, out Í∏∞Ï§ÄÏù¥ close Îùº Ïù¥Í≤å ÎßûÏùå \n","            # close Í∞Ä short_out Î≥¥Îã§ Ïò¨ÎùºÍ∞ÄÏûàÎäî ÏÉÅÌÉúÏùºÌÖåÎãà low Î•º Ï°∞ÏÇ¨ÌïòÎäîÍ≤å ÎßûÏùå           \n","            # if out and res_df['low'].iloc[j] <= short_out.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","            \n","             # ------- ÏùºÏ†ïÏãúÍ∞Ñ Ïù¥ÏÉÅ, dynamic_out Ï†ÅÏö© ------ #\n","            try:\n","              if j - out_idx >= config.out_set.retouch_out_period:\n","                static_short_out = res_df['short_out'].iloc[j]\n","            \n","            except Exception as e:\n","              pass\n","\n","              # ------- static out ------ #\n","            try:\n","              if out and res_df['low'].iloc[j] <= static_short_out:\n","                config.out_set.retouch = 1\n","            except Exception as e:\n","              pass\n","\n","            \n","              # ------- config.out_set.retouch out ------ #\n","            # if out and res_df['low'].iloc[j] <= short_out2.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","\n","            # -------------- st -------------- #\n","            # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:    \n","            # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j]:\n","            # if res_df['close'].iloc[j] > upper_middle.iloc[j]:\n","            # if res_df['close'].iloc[j] > res_df['minor_ST1_Up'].iloc[j]:\n","            if out == 0:              \n","              if config.out_set.hl_out:\n","                if res_df['high'].iloc[j] >= res_df['short_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              else:\n","                if res_df['close'].iloc[j] >= res_df['short_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              # out_idx = j\n","              # static_short_out = short_out.iloc[out_j]\n","              # if config.out_set.second_out:              \n","                # static_short_out = short_out.iloc[out_j] + res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","            \n","            # if out == 0 and res_df['high'].iloc[j] >= short_out.iloc[out_j]: # check out only once\n","            #   out = 1\n","             \n","\n","            # -------------- sma -------------- #\n","            # if res_df['close'].iloc[j] > res_df[sma].iloc[j]:\n","\n","            # -------------- sar -------------- #\n","            # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j] \\\n","            #   or res_df['sar2'].iloc[j] <= res_df['high'].iloc[j]:\n","            # if res_df['close'].iloc[j] > short_out.iloc[initial_i]: # or \\\n","            #   out = 1\n","              # res_df['sar2_uptrend'].iloc[j] == 1: # or \\\n","\n","            # if res_df['sar2_uptrend'].iloc[j] == 1:\n","\n","            #   if prev_sar is None:\n","            #     prev_sar = res_df['sar2'].iloc[j - 1]\n","              \n","            #   if res_df['close'].iloc[j] > prev_sar:\n","            #     out = 1\n","\n","            # else:\n","            #   if res_df['close'].iloc[j] > res_df['sar2'].iloc[j]:\n","            #     out = 1\n","              \n","            # -------------- hl -------------- #\n","            # if res_df['close'].iloc[j] > short_out.iloc[tp_j]:\n","            \n","            # -------------- stoch -------------- #\n","            # if res_df['stoch'].iloc[j - 2] >= res_df['stoch'].iloc[j - 1] and \\\n","            #   res_df['stoch'].iloc[j - 1] < res_df['stoch'].iloc[j] and \\\n","            #   res_df['stoch'].iloc[j - 1] <= stoch_lower:\n","            #   out = 1\n","\n","            # config.out_set.retouch 1 Í≤ΩÏö∞, config.out_set.retouch Ï°∞Í±¥ÎèÑ ÏûàÏñ¥ÏïºÌï®\n","            if out:\n","              if config.out_set.retouch:\n","                if config.out_set.retouch:\n","                  pass\n","                else:\n","                    continue\n","\n","              else:\n","                pass\n","\n","              if config.out_set.price_restoration:\n","                tp = res_df['short_out'].iloc[out_j]\n","                if config.out_set.second_out:\n","                  tp = res_df['short_out2'].iloc[out_j]\n","                \n","                # if res_df['close'].iloc[j] > tp: # Ïù¥ Í≤ΩÏö∞Î•º protect ÌïòÎäîÍ±¥ insane ÏûÑ\n","                #   tp = res_df['close'].iloc[j]\n","\n","              else:\n","                \n","                if res_df['open'].iloc[j] >= res_df['short_out'].iloc[out_j]:\n","                  tp = res_df['open'].iloc[j]\n","                else:\n","                  if config.out_set.hl_out:\n","                    tp = res_df['short_out'].iloc[out_j]\n","                  else:\n","                    tp = res_df['close'].iloc[j]\n","                \n","                # if not config.out_set.static_out:\n","                #   if res_df['open'].iloc[j] >= res_df['short_out'].iloc[out_j]: # close Í∏∞Ï§ÄÏù¥Îùº Ïù¥Îü∞ Ï°∞Í±¥ÏùÑ Î™ªÏîÄ, Ï∞®ÎùºÎ¶¨ j Î•º i Î∂ÄÌÑ∞ ÏãúÏûë\n","                #     tp = res_df['open'].iloc[j]\n","                #   else:\n","                #     tp = res_df['close'].iloc[j]\n","\n","                # else:\n","                #   tp = res_df['close'].iloc[j]\n","\n","              \n","              if config.out_set.retouch: # out Í≥º open ÎπÑÍµê\n","                if config.out_set.second_out:\n","                  if res_df['open'].iloc[j] <= res_df['short_out2'].iloc[out_j]:\n","                    tp = res_df['open'].iloc[j]\n","                else:\n","                  if res_df['open'].iloc[j] <= res_df['short_out'].iloc[out_j]:\n","                    tp = res_df['open'].iloc[j]\n","\n","                try: # static_short_out Ïù∏ Í≤ΩÏö∞, open ÎèÑ Í≥†Î†§Ìïú tp set\n","                  if res_df['open'].iloc[j] <= static_short_out:\n","                    tp = res_df['open'].iloc[j]\n","                  else:\n","                    tp = static_short_out\n","                except Exception as e:\n","                  pass\n","\n","              trade_done = 1\n","              tp_state_list.append(\"short close_out\")\n","            \n","\n","              tp_list.append(tp) \n","              tp_idx_list.append(j)\n","              fee += config.trader_set.market_fee\n","\n","\n","          # -------------- non tp -------------- #\n","          if j == len(res_df) - 1:\n","            trade_done = 1\n","            tp = res_df['close'].iloc[j]\n","            tp_list.append(tp) \n","            tp_idx_list.append(j)\n","            fee += config.trader_set.market_fee\n","          \n","\n","\n","          # -------------- append trade data -------------- #\n","          if trade_done:\n","\n","            # --------------- tp_ratio info --------------- #\n","            #         Todo        #\n","            #          short_out Ïóê ÎåÄÌïú Ï†ïÎ≥¥Îäî Ï°¥Ïû¨Ìï®,\n","            #          short_tp Ïóê ÎåÄÌïú Ï†ïÎ≥¥Îäî Ï°¥Ïû¨Ìï®,\n","            #       => initial_i Í∏∞Ï§ÄÏúºÎ°ú ,dynamic | static set ÏùÑ tp ÏôÄ out Ïóê Í∞ÅÍ∞Å Ï†ÅÏö©\n","            #          config.lvrg_set.leverage Îäî initial_i Í∏∞Ï§ÄÏúºÎ°ú Ï†ÅÏö©ÎêòÎãàÍπå\n","            #          Ï†ÅÏö©Îêú tp & out ÏúºÎ°ú abs((tp - ep) / (ep - out)) Í≥ÑÏÇ∞\n","            try:\n","              if use_out:\n","                done_tp = res_df['short_tp'].iloc[ep_j]\n","                done_out = res_df['short_out'].iloc[ep_j]\n","\n","                if done_out <= ep_list[0]: # loss > 1\n","                  dr = np.nan\n","                  tp_ratio = np.nan\n","                else:                \n","                  dr = ((ep_list[0] - done_tp) / (done_out - ep_list[0]))\n","                  tp_ratio = ((ep_list[0] - done_tp - tp_fee * ep_list[0]) / (done_out - ep_list[0] + out_fee * ep_list[0]))\n","                \n","              else:\n","                dr = np.nan\n","                tp_ratio = np.nan  \n","\n","\n","            except Exception as e:\n","              dr = np.nan \n","              tp_ratio = np.nan  \n","            \n","            tp_ratio_list.append(tp_ratio)\n","            short_tp_ratio_list.append(tp_ratio)     \n","            dr_list.append(dr)\n","            short_dr_list.append(dr)   \n","\n","\n","            # -------------------- partial tp -------------------- #\n","            #        1. len(tp_list) Ïóê ÎåÄÏùëÌïòÎäî qty_list Î•º ÎßåÎì§Ïñ¥ÏïºÌï®    #\n","            #        2. temp_pr_list Î•º ÎßåÎì§Ïñ¥ Ï¥ùÌï© + 1 ÏùÑ pr_list Ïóê Ï†ÄÏû•      #\n","            #        2-1. temp_pr = sum((ep / tp_list[i] - fee - 1) * qty_list[i])   #\n","            #        3. temp_pr_list Ïùò Ï≤´ tp ÏóêÎäî r_qty Î•º Ìï†ÎãπÌï®        #\n","            qty_list = []\n","            temp_pr_list = []\n","            r_qty = 1\n","            for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","              if len(tp_list) == 1:\n","                temp_qty = r_qty\n","              else:\n","                if q_i !=0:\n","                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                else:\n","                  temp_qty = r_qty\n","\n","              temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","              # temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty\n","              r_qty -= temp_qty\n","\n","              temp_pr_list.append(temp_pr)\n","              qty_list.append(temp_qty)\n","\n","            # if len(temp_pr_list) == 1:\n","            #   print(\"qty_list :\", qty_list)\n","            #   print(\"temp_pr_list :\", temp_pr_list)\n","\n","            temp_pr = sum(temp_pr_list) + 1\n","\n","            # -------------------- sub ep -> pr calc -------------------- #\n","            if len(ep_list) > 1:\n","            \n","              p_ep_pr = []\n","              for sub_ep_ in ep_list:\n","                sub_pr = (sub_ep_ / tp - fee - 1) * config.lvrg_set.leverage\n","                p_ep_pr.append(sub_pr)\n","\n","              temp_pr = sum(p_ep_pr) + 1\n","\n","              print(\"temp_pr :\", temp_pr)\n","\n","            # ------------ hedge + non_hedge pr summation ------------ #\n","            #         hedge pr direction is opposite to the origin       #\n","            hedge_pr = 1\n","            if hedge_cnt == 0:\n","\n","              #       hedge tp      #\n","              h_tp = res_df['close'].iloc[j]\n","              hedge_pr = (h_tp / h_ep - fee - 1) * config.lvrg_set.leverage  # hedge long\n","              temp_pr += hedge_pr\n","              h_j = j\n","\n","            \n","            # hh = max(res_df['high'].iloc[i:j + 1])\n","            hh = max(res_df['high'].iloc[i:j])    # pos. Ï†ïÎ¶¨ÌïòÍ∏∞ Î∞îÎ°ú ÏßÅÏ†ÑÍπåÏßÄ\n","            short_liq = (ep_list[0] / hh - fee - 1) * config.lvrg_set.leverage + 1\n","\n","            if j != len(res_df) - 1:\n","\n","              # ep_tp_list.append((ep, tp_list))  \n","              ep_tp_list.append((ep_list, tp_list))  \n","              # trade_list.append([initial_i, i, j])\n","              trade_list.append((ep_idx_list, tp_idx_list))\n","\n","              liqd_list.append(short_liq)\n","              short_liqd_list.append(short_liq)\n","\n","              h_ep_tp_list.append((h_ep, h_tp))      # hedge ÎèÑ ep_tp_list Ï≤òÎüº Î≥ÄÍ≤ΩÌï¥Ï£ºÏñ¥ÏïºÌïòÎäîÎç∞ ÏïÑÏßÅ ÏïàÍ±¥ÎìúÎ¶º, Îî±Ìûà ÏÇ¨Ïö©Ìï† ÏùºÏù¥ ÏóÜÏñ¥Î≥¥Ïó¨   \n","              h_trade_list.append([initial_i, h_i, h_j])                \n","\n","              pr_list.append(temp_pr)\n","              fee_list.append(fee)\n","              short_list.append(temp_pr)\n","              short_fee_list.append(fee)\n","\n","              h_pr_list.append(hedge_pr)\n","              h_short_list.append(hedge_pr)\n","\n","              i = j\n","              break\n","\n","            else:\n","\n","              # ep_tp_list.append((ep_list, tp_list))\n","              # trade_list.append((ep_idx_list, tp_idx_list))\n","              # plot_check ÎïåÎ¨∏Ïóê, pr_list ÍπåÏßÄ ÌïòÍ≤åÎêòÎ©¥ acc_pr eval Ïù¥ Íº¨Ïù¥Í≤åÎåê\n","          \n","              # pr_list Î•º ÎÑ£ÏßÄ ÏïäÏùÑÍ±∞ÎãàÍπå, open_list ÏóêÏÑú Ìï¥Îãπ idx Îäî pop\n","              open_list.pop()\n","              zone_list.pop()\n","              side_list.pop()\n","              \n","              #         tp ÎØ∏Ï≤¥Í≤∞ survey        #\n","              nontp_liqd_list.append(short_liq)\n","              nontp_short_liqd_list.append(short_liq)\n","              nontp_short_indexs.append(i)\n","              nontp_short_ep_list.append(ep_list[0])\n","\n","              nontp_short_pr = (ep_list[0] / tp - fee - 1) * config.lvrg_set.leverage + 1\n","              nontp_pr_list.append(nontp_short_pr)\n","              nontp_short_pr_list.append(nontp_short_pr)\n","\n","\n","      #                  long  phase                #\n","      elif res_df['entry'][i] == -config.ep_set.short_entry_score: \n","      \n","\n","        initial_i = i\n","\n","        if config.out_set.static_out:\n","          p_i = initial_i\n","        else:\n","          p_i = i\n","\n","        \n","        res_df, open_side_str, zone = long_ep_loc(res_df, config, i, show_detail)\n","\n","        # -------------- mr_score summation -------------- #\n","        if open_side_str is not None:        \n","          pass\n","        \n","        else:\n","          i += 1\n","          if i >= len(res_df):\n","            break\n","          continue\n","\n","        # print(\"i after long_ep_loc :\", i)\n","\n","\n","        ep_j = initial_i\n","      \n","        # -------------- limit waiting const. -------------- #      \n","        if config.ep_set.entry_type == \"LIMIT\":\n","\n","          entry_done = 0\n","          entry_open = 0\n","          prev_sar = None\n","\n","          # for e_j in range(i, len(res_df)):   \n","\n","          if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","            break\n","          for e_j in range(i + 1, len(res_df)):  # entry Í∞Ä close Í∏∞Ï§ÄÏùº Í≤ΩÏö∞ ÏÇ¨Ïö© (open Í∏∞Ï§ÄÏùº Í≤ΩÏö∞ i Î∂ÄÌÑ∞ ÏãúÏûëÌï¥ÎèÑ Î¨¥Î∞©Ìï®)\n","            \n","            if not config.ep_set.static_ep:\n","              ep_j = e_j  \n","            \n","            if config.tp_set.static_tp:\n","              # if config.ep_set.tpout_onexec:\n","              #   tp_j = e_j\n","              # else:\n","                tp_j = initial_i\n","            else:\n","              tp_j = e_j  \n","\n","            \n","            #          np.inf ep         #\n","            # if long_ep.iloc[initial_i] == np.inf:\n","            #   break\n","            \n","            #          1. check ep_out          #\n","            if config.loc_set.zone.ei_k != \"None\":\n","              if res_df['high'].iloc[e_j] >= res_df['h_long_rtc_1'].iloc[tp_j] + res_df['h_long_rtc_gap'].iloc[tp_j] * config.loc_set.zone.ei_k:\n","              # if res_df['high'].iloc[e_j] >= res_df['long_tp'].iloc[tp_j]:                \n","              # if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                break\n","\n","              # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] <= rsi_upper) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] > rsi_upper):\n","              #   break\n","\n","            #          2. check ep_in          #\n","            if res_df['low'].iloc[e_j] <= res_df['long_ep'].iloc[ep_j]:\n","              entry_done = 1\n","              # print(\"e_j :\", e_j)\n","              \n","              #     Ïù¥ÎØ∏, e_j open Ïù¥ ep Î≥¥Îã§ ÎÇÆÏùÄ Í≤ΩÏö∞, entry[initial_i] => -2 Î°ú Î≥ÄÍ≤Ω   #\n","              if res_df['open'].iloc[e_j] <= res_df['long_ep'].iloc[ep_j]:\n","                entry_open = 1\n","\n","              break\n","\n","\n","          i = e_j\n","          # print(\"i = e_j :\", i)\n","\n","          if entry_done:      \n","            pass\n","            # print(\"i, entry_done :\", i, entry_done)\n","\n","          else:\n","            i += 1\n","            if i >= len(res_df):\n","              # print(\"i :\", i)\n","              break\n","\n","            # print(\"i in continue :\", i)          \n","            continue\n","\n","\n","        # ---------------- end wait ---------------- #\n","        # if e_j - initial_i >= 200:\n","        #   print(\"e_j, initial_i :\", e_j, initial_i)\n","        \n","        # print(i)\n","\n","        open_list.append(initial_i)\n","        zone_list.append(zone)\n","        side_list.append('l')\n","\n","        if config.ep_set.entry_type == 'MARKET':\n","          ep_list = [res_df['close'].iloc[ep_j]]\n","        else:\n","          if not entry_open:\n","            ep_list = [res_df['long_ep'].iloc[ep_j]]\n","          else:\n","            # try:\n","            #   ep_list = [res_df['open'].iloc[e_j]]\n","            # except Exception as e:\n","            ep_list = [res_df['open'].iloc[e_j]]  # --> Ï≤¥Í≤∞Ïù¥ ÎêòÎäî e_j idx Í∏∞Ï§ÄÏúºÎ°ú ÌïòÎäîÍ≤å ÎßûÏùå\n","\n","        if not config.lvrg_set.static_lvrg:\n","          config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep'].iloc[ep_j] / res_df['long_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep_org'].iloc[ep_j] / res_df['long_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['long_out'].iloc[ep_j] / res_df['long_ep'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['long_out'].iloc[ep_j] / res_df['long_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          \n","          if not config.lvrg_set.allow_float:\n","            config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","          # -------------- leverage rejection -------------- #\n","          if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","            open_list.pop()\n","            zone_list.pop()\n","            side_list.pop()\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","          config.lvrg_set.leverage = max(config.lvrg_set.leverage, 1)\n","          leverage_list.append(config.lvrg_set.leverage)\n","\n","        config.lvrg_set.leverage = min(50, config.lvrg_set.leverage)        \n","          \n","        if config.ep_set.entry_type == \"MARKET\":\n","          ep_idx_list = [ep_j]\n","        else:\n","          ep_idx_list = [e_j]\n","\n","        tp_list = []\n","        tp_idx_list = []\n","\n","        partial_tp_cnt = 0\n","        hedge_cnt = 1\n","\n","        h_ep, h_tp = None, None        \n","        h_i, h_j = None, None      \n","\n","        trade_done = 0\n","        out = 0          \n","        config.out_set.retouch = 0\n","\n","\n","        if i == len(res_df) - 1: # if j start from i + 1 \n","          open_list.pop()\n","          zone_list.pop()\n","          side_list.pop()\n","\n","        for j in range(i + 1, len(res_df)):\n","\n","        # for j in range(i, len(res_df)):  \n","          \n","          if config.tp_set.static_tp:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              tp_j = ep_j\n","            else:\n","              tp_j = initial_i\n","          else:\n","            tp_j = j\n","\n","          if config.out_set.static_out:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              out_j = ep_j\n","            else:           \n","              out_j = initial_i\n","          else:\n","            out_j = j   \n","\n","          # -------------- hedge only once -------------- #\n","          #             ÏùºÎã®, h_quantity Îäî Ï¥àÍ∏∞ ÏßÑÏûÖÍ≥º ÎèôÏùºÌïòÍ≤å ÏÑ§Ï†ï         #\n","          # if res_df['low'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] <= res_df['minor_ST3_Down'].iloc[j] and hedge_cnt == 1:\n","\n","          #   h_ep = res_df['close'].iloc[j]\n","          #   hedge_cnt -= 1\n","          #   h_i = j\n","\n","          # -------------- sub ep -------------- #\n","          # if res_df['low'].iloc[j - 1] >= res_df['sar2'].iloc[j - 1] and res_df['low'].iloc[j] < res_df['sar2'].iloc[j]:\n","            \n","          #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","          #   if sub_ep > ep_list[-1]:\n","          #     ep_list.append(sub_ep)\n","          #     ep_idx_list.append(j)\n","\n","\n","          # -------------- ultimate tp -------------- #\n","          if not config.tp_set.non_tp:\n","            #            1. by level          #\n","            if config.tp_set.tp_type == \"LIMIT\" or config.tp_set.tp_type == \"BOTH\":\n","              \n","\n","              for l_i, long_tp_ in enumerate(long_tps):\n","\n","                if res_df['high'].iloc[j] >= long_tp_.iloc[tp_j] and partial_tp_cnt == l_i:\n","                # if res_df['high'].iloc[j] >= long_tp.iloc[j]:\n","\n","                  if l_i == len(long_tps) - 1:\n","                    trade_done = 1\n","\n","                  partial_tp_cnt += 1\n","\n","                  #         dynamic tp        #\n","                  # if 0:\n","                  if long_tp_.iloc[j] != long_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                    #   tp limit Ïù¥ Î∂àÍ∞ÄÌïú Í≤ΩÏö∞ = open Ïù¥ Ïù¥ÎØ∏, tp Î•º ÎÑòÏùÄ Í≤ΩÏö∞ # \n","                    # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] >= long_tp_.iloc[j]:\n","\n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-long_open\")\n","\n","                    \n","                    #   tp limit Ïù¥ Í∞ÄÎä•Ìïú Í≤ΩÏö∞ = open Ïù¥ ÏïÑÏßÅ, tp Î•º ÎÑòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ # \n","                    else:\n","                      \n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[j]\n","                      # tp = res_df['open'].iloc[j]\n","                      \n","                      if trade_done:\n","                        tp_state_list.append(\"d-long_tp\")\n","\n","                  #         static tp         #\n","                  else:\n","\n","                    #   tp limit Ïù¥ Î∂àÍ∞ÄÌïú Í≤ΩÏö∞ = open Ïù¥ Ïù¥ÎØ∏, tp Î•º ÎÑòÏùÄ Í≤ΩÏö∞ # \n","                    #   non_inversion Ïùò Í≤ΩÏö∞, short_tp Í∞Ä Í∞ÄÎä•Ìï®   #\n","\n","                    if res_df['open'].iloc[j] >= long_tp_.iloc[tp_j]:\n","                    # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","\n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-long_tp\")\n","\n","                    \n","                    #   tp limit Ïù¥ Í∞ÄÎä•Ìïú Í≤ΩÏö∞ = open Ïù¥ ÏïÑÏßÅ, tp Î•º ÎÑòÏßÄ ÏïäÏùÄ Í≤ΩÏö∞ # \n","                    else:\n","                      \n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-long_tp\")         \n","                  \n","                  tp_list.append(tp)\n","                  tp_idx_list.append(j)\n","                  fee += config.trader_set.limit_fee\n","\n","            #           2. by time        #\n","            if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","              market_tp = 0\n","\n","              # -------------- sar tp -------------- #\n","              # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","              \n","              #       inversion     #\n","              # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","\n","              # ----------- st long ----------- #\n","              # if res_df['close'].iloc[j] >= res_df['long_tp'].iloc[tp_j]:\n","\n","              # -------------- sar pb tp -------------- #\n","              # if res_df['high'].iloc[j] >= res_df['long_tp'].iloc[initial_i]:\n","\n","              # -------------- st tp -------------- #\n","              # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","\n","              # -------------- fisher tp -------------- #\n","              # if entry[j] == -1:\n","              \n","              # -------------- timestamp -------------- #\n","              # if np_timeidx[j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","\n","              # -------------- rsi -------------- #\n","              # if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] <= rsi_upper) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] > rsi_upper):\n","              #   market_tp = 1\n","              \n","              # # -------------- rsi slight touch -------------- #\n","              # elif allow_rsi_touch:\n","              #   if (np.max(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[initial_i:j]) > rsi_upper - rsi_gap) & \\\n","              #     (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] <= 50):\n","              #     market_tp = 1\n","\n","              # elif early_out:                \n","              # if (np.max(res_df['high'].iloc[e_j:j]) > res_df['long_tp'].iloc[tp_j]) & \\\n","              if (np.max(res_df['high'].iloc[e_j:j]) > res_df['h_long_rtc_1'].iloc[tp_j] + res_df['h_long_rtc_gap'].iloc[tp_j] * early_out_tpg) & \\\n","                (res_df['close'].iloc[j] <= res_df['long_ep'].iloc[ep_j]):\n","                market_tp = 1 \n","                              \n","              if market_tp:\n","\n","                tp = res_df['close'].iloc[j]\n","                # tp = res_df['open'].iloc[j]\n","                trade_done = 1\n","\n","                if trade_done:\n","                  tp_state_list.append(\"long close tp\")\n","                  # print(\"early_out passed !\")\n","\n","                tp_list.append(tp) \n","                tp_idx_list.append(j)\n","                fee += config.trader_set.market_fee\n","\n","\n","\n","          # -------------- out -------------- #\n","          if not trade_done and config.out_set.use_out and j != len(res_df) - 1:              \n","\n","            # -------------- macd -------------- #\n","            # if res_df['macd_hist3'].iloc[j] < 0:\n","            # # if res_df['macd_hist3'].iloc[i] > 0 and res_df['macd_hist3'].iloc[j] < 0:\n","\n","            # -------------- st config.out_set.retouch -------------- #\n","            # out = 1 ÏÉÅÌÉúÎ©¥ ÎèôÏùº tick ÏóêÏÑú config.out_set.retouch Î•º Ï°∞ÏÇ¨Ìï† Í±∞Í∏∞ ÎïåÎ¨∏Ïóê, Î®ºÏ†Ä Í≤ÄÏÇ¨Ìï®\n","            # Í∑∏Î¶¨Í≥†, out Í∏∞Ï§ÄÏù¥ close Îùº Ïù¥Í≤å ÎßûÏùå \n","            # close Í∞Ä long_out Î≥¥Îã§ ÎÇ¥Î†§Í∞ÄÏûàÎäî ÏÉÅÌÉúÏùºÌÖåÎãà high Î•º Ï°∞ÏÇ¨ÌïòÎäîÍ≤å ÎßûÏùå           \n","            # if out and res_df['high'].iloc[j] >= long_out.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","            \n","            # ------- ÏùºÏ†ïÏãúÍ∞Ñ Ïù¥ÏÉÅ, dynamic_out Ï†ÅÏö© ------ #\n","            try:\n","              if j - out_idx >= config.out_set.retouch_out_period:\n","                static_long_out = res_df['long_out'].iloc[j]\n","            \n","            except Exception as e:\n","              pass\n","\n","              # ------- static out ------ #\n","            try:\n","              if out and res_df['high'].iloc[j] >= static_long_out:\n","                config.out_set.retouch = 1\n","            except Exception as e:\n","              pass\n","\n","              # ------- config.out_set.retouch out ------ #\n","            # if out and res_df['high'].iloc[j] >= long_out2.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","\n","\n","            # -------------- st -------------- #\n","            # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","            # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j]:\n","            # if res_df['close'].iloc[j] < lower_middle.iloc[j]:\n","            # if res_df['close'].iloc[j] < res_df['minor_ST1_Down'].iloc[j]:\n","            if out == 0:\n","              if config.out_set.hl_out:\n","                if res_df['low'].iloc[j] <= res_df['long_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              else:\n","                if res_df['close'].iloc[j] <= res_df['long_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              # out_idx = j\n","              # static_long_out = long_out.iloc[out_j]\n","              # if config.out_set.second_out:\n","              # static_long_out = long_out.iloc[out_j] - res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","\n","            # if out == 0 and res_df['low'].iloc[j] <= long_out.iloc[out_j]: # check out only once\n","            #   out = 1            \n","            \n","\n","\n","            # -------------- sma -------------- #\n","            # if res_df['close'].iloc[j] < res_df[sma].iloc[j]:\n","\n","            # -------------- sar -------------- #\n","            # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j] \\\n","            #   or res_df['sar2'].iloc[j] >= res_df['low'].iloc[j]:\n","            # if res_df['close'].iloc[j] < long_out.iloc[initial_i]: # or \\\n","            #   #  res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","            #   #  res_df['sar2_uptrend'].iloc[j] == 0 or \\\n","            #   out = 1\n","            \n","            # if res_df['sar2_uptrend'].iloc[j] == 0:\n","\n","            #     if prev_sar is None:\n","            #       prev_sar = res_df['sar2'].iloc[j - 1]\n","                \n","            #     if res_df['close'].iloc[j] < prev_sar:\n","            #       out = 1\n","\n","            # else:\n","            #   if res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","            #     out = 1\n","\n","            # -------------- hl -------------- #\n","            # if res_df['close'].iloc[j] < long_out.iloc[tp_j]:\n","\n","            # -------------- stoch -------------- #\n","            # if res_df['stoch'].iloc[j - 2] <= res_df['stoch'].iloc[j - 1] and \\\n","            #   res_df['stoch'].iloc[j - 1] > res_df['stoch'].iloc[j] and \\\n","            #   res_df['stoch'].iloc[j - 1] >= stoch_upper:\n","            #   out = 1\n","\n","            # config.out_set.retouch 1 Í≤ΩÏö∞, config.out_set.retouch Ï°∞Í±¥ÎèÑ ÏûàÏñ¥ÏïºÌï®\n","            if out:\n","              if config.out_set.retouch:\n","                if config.out_set.retouch:\n","                  pass\n","                else:\n","                    continue\n","\n","              else:\n","                pass\n","\n","              if config.out_set.price_restoration:\n","                tp = res_df['long_out'].iloc[out_j]\n","                if config.out_set.second_out:\n","                  tp = res_df['long_out2'].iloc[out_j]\n","\n","                # if res_df['close'].iloc[j] < tp: # Ïù¥ Í≤ΩÏö∞Î•º protect ÌïòÎäîÍ±¥ insane ÏûÑ\n","                # # if res_df['high'].iloc[j] < tp: # --> config.out_set.hl_out ÏÇ¨Ïö©Ïãú Ïù¥ Ï°∞Í±¥ÏùÄ valid Ìï®\n","                #   tp = res_df['close'].iloc[j]\n","\n","              else:\n","\n","                if res_df['open'].iloc[j] <= res_df['long_out'].iloc[out_j]:\n","                  tp = res_df['open'].iloc[j]\n","                else:\n","                  if config.out_set.hl_out:\n","                    tp = res_df['long_out'].iloc[out_j]\n","                  else:\n","                    tp = res_df['close'].iloc[j]\n","\n","                # if not config.out_set.static_out:\n","                #   if res_df['open'].iloc[j] <= res_df['long_out'].iloc[out_j]: # dynamic close out Ïùò open Í≥†Î†§\n","                #     tp = res_df['open'].iloc[j]\n","                #   else:\n","                #     tp = res_df['close'].iloc[j]\n","\n","                # else:\n","                #   tp = res_df['close'].iloc[j]\n","\n","              if config.out_set.retouch: # out Í≥º open ÎπÑÍµê\n","                if config.out_set.second_out:  # long_out = sell\n","                # config.out_set.second_out ÏùÄ Í∏∞Î≥∏Ï†ÅÏúºÎ°ú limit Ïù¥Îùº Ïù¥ Íµ¨Ï°∞Í∞Ä Í∞ÄÎä•Ìï®\n","                  if res_df['open'].iloc[j] >= res_df['long_out2'].iloc[out_j]: # dynamic_out Ïùº Í≤ΩÏö∞ Í≥†Î†§Ìï¥ÏïºÌï®\n","                    tp = res_df['open'].iloc[j]\n","                else:\n","                  if res_df['open'].iloc[j] >= res_df['long_out'].iloc[out_j]: # dynamic_out Ïùº Í≤ΩÏö∞ Í≥†Î†§Ìï¥ÏïºÌï®\n","                    tp = res_df['open'].iloc[j]\n","\n","                try:\n","                  if res_df['open'].iloc[j] >= static_long_out:\n","                    tp = res_df['open'].iloc[j]\n","                  else:\n","                    tp = static_long_out\n","                except Exception as e:\n","                  pass\n","\n","              # tp = res_df['open'].iloc[j]\n","              tp_state_list.append(\"long close_out\")\n","              trade_done = 1\n","\n","              tp_list.append(tp)\n","              tp_idx_list.append(j)\n","              fee += config.trader_set.market_fee\n","\n","          \n","          # -------------- non tp -------------- #\n","          if j == len(res_df) - 1:\n","            trade_done = 1\n","            tp = res_df['close'].iloc[j]\n","            tp_list.append(tp) \n","            tp_idx_list.append(j)\n","            fee += config.trader_set.market_fee\n","\n","\n","          if trade_done:\n","\n","            # --------------- tp_ratio info --------------- #\n","            try:\n","              if use_out:\n","                done_tp = res_df['long_tp'].iloc[ep_j]\n","                done_out = res_df['long_out'].iloc[ep_j]\n","\n","                if done_out >= ep_list[0]: # loss >= 1\n","                  tp_ratio = np.nan\n","                  dr = np.nan\n","                else:\n","                  tp_ratio = ((done_tp - ep_list[0] - tp_fee * ep_list[0]) / (ep_list[0] - done_out + out_fee * ep_list[0]))                \n","                  dr = ((done_tp - ep_list[0]) / (ep_list[0] - done_out))          \n","\n","              else:      \n","                dr = np.nan\n","                tp_ratio = np.nan\n","\n","            except Exception as e:\n","              dr = np.nan              \n","              tp_ratio = np.nan\n","            \n","            tp_ratio_list.append(tp_ratio)\n","            long_tp_ratio_list.append(tp_ratio)\n","            dr_list.append(dr)\n","            long_dr_list.append(dr)\n","\n","\n","            qty_list = []\n","            temp_pr_list = []\n","            r_qty = 1\n","            for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","              if len(tp_list) == 1:\n","                temp_qty = r_qty\n","              else:\n","                if q_i !=0:\n","                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                else:\n","                  temp_qty = r_qty\n","\n","              # temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty\n","              temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","              r_qty -= temp_qty\n","\n","              temp_pr_list.append(temp_pr)\n","\n","            temp_pr = sum(temp_pr_list) + 1\n","\n","            # -------------------- sub ep -> pr calc -------------------- #\n","            if len(ep_list) > 1:\n","            \n","              p_ep_pr = []\n","              for sub_ep_ in ep_list:\n","                sub_pr = (tp / sub_ep_ - fee - 1) * config.lvrg_set.leverage\n","                p_ep_pr.append(sub_pr)\n","\n","              temp_pr = sum(p_ep_pr) + 1\n","\n","              print(\"temp_pr :\", temp_pr)\n","\n","            # ------------ hedge + non_hedge pr summation ------------ #\n","            #         hedge pr direction is opposite to the origin       #\n","            hedge_pr = 1\n","            if hedge_cnt == 0:\n","\n","              #       hedge tp      #\n","              h_tp = res_df['close'].iloc[j]\n","              hedge_pr = (h_ep / h_tp - fee - 1) * config.lvrg_set.leverage  # hedge short\n","              temp_pr += hedge_pr\n","              h_j = j\n","\n","\n","            # ll = min(res_df['low'].iloc[i:j + 1])\n","            ll = min(res_df['low'].iloc[i:j])   # pos. Ï†ïÎ¶¨ÌïòÍ∏∞ Î∞îÎ°ú ÏßÅÏ†ÑÍπåÏßÄ\n","            long_liq = (ll / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","\n","            if j != len(res_df) - 1:\n","\n","              ep_tp_list.append((ep_list, tp_list))\n","              trade_list.append((ep_idx_list, tp_idx_list))\n","\n","              liqd_list.append(long_liq)\n","              long_liqd_list.append(long_liq)\n","\n","              h_ep_tp_list.append((h_ep, h_tp))        \n","              h_trade_list.append([initial_i, h_i, h_j])                \n","\n","              pr_list.append(temp_pr)\n","              fee_list.append(fee)\n","              long_list.append(temp_pr)\n","              long_fee_list.append(fee)\n","\n","              h_pr_list.append(hedge_pr)\n","              h_long_list.append(hedge_pr)                    \n","\n","              i = j\n","              break\n","            \n","            else:\n","\n","              # ep_tp_list.append((ep_list, tp_list))\n","              # trade_list.append((ep_idx_list, tp_idx_list))\n","              \n","              # pr_list Î•º ÎÑ£ÏßÄ ÏïäÏùÑÍ±∞ÎãàÍπå, open_list ÏóêÏÑú Ìï¥Îãπ idx Îäî pop\n","              open_list.pop()\n","              zone_list.pop()\n","              side_list.pop()\n","          \n","              #         tp ÎØ∏Ï≤¥Í≤∞ survey        #\n","              nontp_liqd_list.append(long_liq)\n","              nontp_long_liqd_list.append(long_liq)\n","              nontp_long_indexs.append(i)\n","              nontp_long_ep_list.append(ep_list[0])\n","              \n","              nontp_long_pr = (tp / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","              nontp_pr_list.append(nontp_long_pr)\n","              nontp_long_pr_list.append(nontp_long_pr)\n","\n","            if len(open_list) > len(trade_list):\n","              print('debug from index :', i)\n","              print(len(open_list), len(trade_list))\n","              print(\"len(res_df) :\", len(res_df))\n","              assert len(open_list) == len(trade_list), 'stopped'\n","      \n","      i += 1  # if entry starts with prev trade's close, do not use it ! \n","      # print(\"i in end :\", i)\n","      if i >= len(res_df):\n","        break\n","\n","\n","\n","    # -------------------- result analysis -------------------- #\n","    # try:\n","    print(\"elapsed_time :\", time.time() - start_0)\n","\n","    plt.style.use('default')\n","    # mpl.rcParams.update(mpl.rcParamsDefault)\n","\n","    plt.figure(figsize=(16, 12))\n","    # plt.figure(figsize=(12, 8))\n","    # plt.figure(figsize=(10, 6))\n","    plt.suptitle(key)\n","\n","    try:\n","      np_pr = np.array(pr_list)\n","\n","      sr = sharpe_ratio(np_pr)\n","\n","      dpf = (len(res_df) / 1440) / len(np_pr)\n","\n","      np_zone_list = np.array(zone_list)\n","      # np_pr_list = np.array(pr_list)\n","      np_side_list = np.array(side_list)\n","\n","      t_w = np.sum(np.where((np_zone_list == 't') & (np_pr > 1), 1, 0))\n","      c_w = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1), 1, 0))\n","      t_ls = np.sum(np.where((np_zone_list == 't') & (np_pr < 1), 1, 0))\n","      c_ls = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1), 1, 0))\n","\n","      # np_pr = (np.array(pr_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # ----- fake_pr ----- #\n","      # np_pr = np.where(np_pr > 1, 1 + (np_pr - 1) * 3, np_pr)\n","\n","      total_pr = np.cumprod(np_pr)\n","\n","      for_sum_pr = np_pr - 1\n","      for_sum_pr[0] = 1\n","      sum_pr = np.cumsum(for_sum_pr)\n","      sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","      wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","\n","      np_tp_ratio_list = np.array(tp_ratio_list) # Ï¥àÍ∏∞Ïóê tr ÏùÑ Ï†ïÌïòÎäîÍ±∞Îùº mean ÏÇ¨Ïö©ÌïòÎäîÍ≤å ÎßûÏùå\n","      mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","      np_dr_list = np.array(dr_list) # Ï¥àÍ∏∞Ïóê tr ÏùÑ Ï†ïÌïòÎäîÍ±∞Îùº mean ÏÇ¨Ïö©ÌïòÎäîÍ≤å ÎßûÏùå\n","      mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","      # pr_gap = (np_pr - 1) / config.lvrg_set.leverage + fee\n","      # tp_gap_ = pr_gap[pr_gap > 0]\n","      # # mean_config.tr_set.tp_gap = np.mean(pr_gap[pr_gap > 0])\n","      # mean_ls_gap = np.mean(pr_gap[pr_gap < 0])\n","\n","      # ---- profit fee ratio ---- #\n","      # mean_pgfr = np.mean((tp_gap_ - fee) / abs(tp_gap_ + fee))\n","\n","      # plt.subplot(121)\n","      plt.subplot(231)\n","      plt.plot(total_pr)\n","      plt.plot(sum_pr, color='gold')\n","      if len(nontp_liqd_list) != 0:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_liqd_cnt : %s\\nnontp_liqd : %.3f\\nontp_liqd_pr : %.3f\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr, len(nontp_liqd_list), \n","                     min(nontp_liqd_list), min(nontp_pr_list), t_w, c_w, t_ls, c_ls),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr, len(nontp_liqd_list), t_w, c_w, t_ls, c_ls), \n","                  position=title_position)\n","      # plt.show()\n","\n","      survey_df.iloc[survey_i] = wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), \\\n","        total_pr[-1], sum_pr[-1], min(liqd_list), mean_tr, mean_dr, sr \n","\n","      print('supblot231 passed')\n","\n","    except Exception as e:\n","      print(\"error in 231 :\", e)\n","\n","\n","    try:\n","      #         short only      #\n","      short_np_pr = np.array(short_list)\n","\n","      short_sr = sharpe_ratio(short_np_pr)\n","\n","      short_dpf = (len(res_df) / 1440) / len(short_np_pr)\n","\n","      total_short_pr = np.cumprod(short_np_pr)\n","      \n","      short_for_sum_pr = short_np_pr - 1\n","      short_for_sum_pr[0] = 1\n","      short_sum_pr = np.cumsum(short_for_sum_pr)\n","      short_sum_pr = np.where(short_sum_pr < 0, 0, short_sum_pr)\n","\n","      short_wr = len(short_np_pr[short_np_pr > 1]) / len(short_np_pr[short_np_pr != 1])\n","      \n","      t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      # short_cumprod_profit = np.cumprod(short_np_pr[short_np_pr > 1])[-1]\n","      # short_cumprod_loss = np.cumprod(short_np_pr[short_np_pr < 1])[-1]\n","      # short_pr_tr = short_cumprod_profit * short_cumprod_loss\n","\n","      np_short_tp_ratio_list = np.array(short_tp_ratio_list)\n","      mean_short_tr = np.mean(np_short_tp_ratio_list[np.isnan(np_short_tp_ratio_list) == 0])\n","      \n","      np_short_dr_list = np.array(short_dr_list)\n","      mean_short_dr = np.mean(np_short_dr_list[np.isnan(np_short_dr_list) == 0])\n","      \n","      # short_pr_gap = (short_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # short_tp_gap = short_pr_gap[short_pr_gap > 0]\n","      # # mean_short_tp_gap = np.mean(short_pr_gap[short_pr_gap > 0])\n","      # # mean_short_ls_gap = np.mean(short_pr_gap[short_pr_gap < 0])\n","\n","      # mean_short_pgfr = np.mean((short_tp_gap - fee) / abs(short_tp_gap + fee))\n","      \n","      plt.subplot(232)\n","      plt.plot(total_short_pr)\n","      plt.plot(short_sum_pr, color='gold')\n","      if len(nontp_short_liqd_list) != 0:   \n","\n","        max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","        \n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), total_short_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_short_liqd_cnt : %s\\nnontp_short_liqd : %.3f\\nontp_short_liqd_pr : %.3f\\nmax_nontp_short_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr, \n","                     len(nontp_short_liqd_list), min(nontp_short_liqd_list), min(nontp_short_pr_list), max_nontp_short_term, t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), total_short_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_short_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr, len(nontp_short_liqd_list), t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position)\n","\n","      short_survey_df.iloc[survey_i] = short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), \\\n","          total_short_pr[-1], short_sum_pr[-1], min(short_liqd_list), mean_short_tr, mean_short_dr, short_sr     \n","\n","      print('supblot232 passed')\n","    \n","    except Exception as e:\n","      print(\"error in 232 :\", e)\n","\n","    try:\n","      #         long only      #\n","      long_np_pr = np.array(long_list)\n","      # long_np_pr = (np.array(long_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      long_sr = sharpe_ratio(long_np_pr)\n","\n","      long_dpf = (len(res_df) / 1440) / len(long_np_pr)\n","\n","      total_long_pr = np.cumprod(long_np_pr)\n","      \n","      long_for_sum_pr = long_np_pr - 1\n","      long_for_sum_pr[0] = 1\n","      long_sum_pr = np.cumsum(long_for_sum_pr)\n","      long_sum_pr = np.where(long_sum_pr < 0, 0, long_sum_pr)\n","\n","      long_wr = len(long_np_pr[long_np_pr > 1]) / len(long_np_pr[long_np_pr != 1])\n","\n","      t_w_l = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      c_w_l = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      t_ls_l = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      c_ls_l = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      # long_cumprod_profit = np.cumprod(long_np_pr[long_np_pr > 1])[-1]\n","      # long_cumprod_loss = np.cumprod(long_np_pr[long_np_pr < 1])[-1]\n","      # long_pr_tr = long_cumprod_profit * long_cumprod_loss\n","\n","      np_long_tp_ratio_list = np.array(long_tp_ratio_list)\n","      mean_long_tr = np.mean(np_long_tp_ratio_list[np.isnan(np_long_tp_ratio_list) == 0])\n","      \n","      np_long_dr_list = np.array(long_dr_list)\n","      mean_long_dr = np.mean(np_long_dr_list[np.isnan(np_long_dr_list) == 0])\n","\n","      # long_pr_gap = (long_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # long_tp_gap = long_pr_gap[long_pr_gap > 0]\n","      # # mean_long_tp_gap = np.mean(long_pr_gap[long_pr_gap > 0])\n","      # # mean_long_ls_gap = np.mean(long_pr_gap[long_pr_gap < 0])\n","\n","      # mean_long_pgfr = np.mean((long_tp_gap - fee) / abs(long_tp_gap + fee))\n","\n","      plt.subplot(233)\n","      plt.plot(total_long_pr)\n","      plt.plot(long_sum_pr, color='gold')\n","      if len(nontp_long_liqd_list) != 0:\n","\n","        max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), total_long_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_long_liqd_cnt : %s\\nnontp_long_liqd : %.3f\\nontp_long_liqd_pr : %.3f\\nmax_nontp_long_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr, \n","                     len(nontp_long_liqd_list), min(nontp_long_liqd_list), min(nontp_long_pr_list), max_nontp_long_term, t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), total_long_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_long_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr, len(nontp_long_liqd_list), t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position)\n","\n","      long_survey_df.iloc[survey_i] = long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), \\\n","        total_long_pr[-1], long_sum_pr[-1], min(long_liqd_list), mean_long_tr, mean_long_dr, long_sr     \n","\n","      print('supblot233 passed')\n","\n","    except Exception as e:\n","      print(\"error in 233 :\", e)\n","\n","\n","    try:\n","      #     reversion adjustment      #\n","      # rev_np_pr = 1 / (np.array(pr_list) + fee) - fee\n","      rev_fee = tp_fee + out_fee - np.array(fee_list)\n","      rev_np_pr = (1 / ((np.array(pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - rev_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_np_pr = (1 / (np.array(pr_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_sr = sharpe_ratio(rev_np_pr)\n","\n","      rev_total_pr = np.cumprod(rev_np_pr)\n","      rev_wr = len(rev_np_pr[rev_np_pr > 1]) / len(rev_np_pr[rev_np_pr != 1])\n","\n","      rev_total_for_sum_pr = rev_np_pr - 1\n","      rev_total_for_sum_pr[0] = 1\n","      rev_total_sum_pr = np.cumsum(rev_total_for_sum_pr)\n","      rev_total_sum_pr = np.where(rev_total_sum_pr < 0, 0, rev_total_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(234)\n","      plt.plot(rev_total_pr)\n","      plt.plot(rev_total_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_wr, np.min(rev_np_pr), rev_total_pr[-1], rev_total_sum_pr[-1], rev_sr))\n","      \n","      rev_survey_df.iloc[survey_i] = rev_wr, np.min(rev_np_pr), rev_total_pr[-1], rev_total_sum_pr[-1], rev_sr\n","\n","    except Exception as e:\n","      print(\"error in 234 :\", e)\n","\n","    try:\n","      #         short       #\n","      # rev_short_np_pr = 1 / (np.array(short_list) + fee) - fee\n","      rev_short_fee = tp_fee + out_fee - np.array(short_fee_list)\n","      rev_short_np_pr = (1 / ((np.array(short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - rev_short_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_short_np_pr = (1 / (np.array(short_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","      \n","      rev_short_sr = sharpe_ratio(rev_short_np_pr)\n","          \n","      rev_total_short_pr = np.cumprod(rev_short_np_pr)\n","      rev_short_wr = len(rev_short_np_pr[rev_short_np_pr > 1]) / len(rev_short_np_pr[rev_short_np_pr != 1])\n","\n","      rev_short_for_sum_pr = rev_short_np_pr - 1\n","      rev_short_for_sum_pr[0] = 1\n","      rev_short_sum_pr = np.cumsum(rev_short_for_sum_pr)\n","      rev_short_sum_pr = np.where(rev_short_sum_pr < 0, 0, rev_short_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(235)\n","      plt.plot(rev_total_short_pr)\n","      plt.plot(rev_short_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_short_wr, np.min(rev_short_np_pr), rev_total_short_pr[-1], rev_short_sum_pr[-1], rev_short_sr))\n","\n","      rev_short_survey_df.iloc[survey_i] = rev_short_wr, np.min(rev_short_np_pr), rev_total_short_pr[-1], rev_short_sum_pr[-1], rev_short_sr\n","\n","    except Exception as e:\n","      print(\"error in 235 :\", e)\n","\n","    try:\n","      #         long       #\n","      # rev_long_np_pr = 1 / (np.array(long_list) + fee) - fee\n","      rev_long_fee = tp_fee + out_fee - np.array(long_fee_list)\n","      rev_long_np_pr = (1 / ((np.array(long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - rev_long_fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_long_sr = sharpe_ratio(rev_long_np_pr)\n","\n","      rev_total_long_pr = np.cumprod(rev_long_np_pr)\n","      rev_long_wr = len(rev_long_np_pr[rev_long_np_pr > 1]) / len(rev_long_np_pr[rev_long_np_pr != 1])\n","\n","      rev_long_for_sum_pr = rev_long_np_pr - 1\n","      rev_long_for_sum_pr[0] = 1\n","      rev_long_sum_pr = np.cumsum(rev_long_for_sum_pr)\n","      rev_long_sum_pr = np.where(rev_long_sum_pr < 0, 0, rev_long_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(236)\n","      plt.plot(rev_total_long_pr)\n","      plt.plot(rev_long_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_long_wr, np.min(rev_long_np_pr), rev_total_long_pr[-1], rev_long_sum_pr[-1], rev_long_sr))\n","      \n","      rev_long_survey_df.iloc[survey_i] = rev_long_wr, np.min(rev_long_np_pr), rev_total_long_pr[-1], rev_long_sum_pr[-1], rev_long_sr\n","      \n","    except Exception as e:\n","      print(\"error in 236 :\", e)\n","\n","    if show_plot:\n","      plt.show()\n","    \n","\n","    try:\n","\n","      h_np_pr = np.array(h_pr_list)\n","      # h_rev_np_pr = 1 / (np.array(h_pr_list) + fee) - fee    # define, for plot_check below cell\n","      h_rev_np_pr = (1 / ((np.array(h_pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - np.array(fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # --------------------- h pr plot --------------------- #\n","      if len(h_np_pr[h_np_pr != 1]) != 0:\n","\n","        plt.figure(figsize=(16, 12))\n","        plt.suptitle(key + \" hedge\")\n","\n","        h_total_pr = np.cumprod(h_np_pr)\n","        h_wr = len(h_np_pr[h_np_pr > 1]) / len(h_np_pr[h_np_pr != 1])\n","\n","        # plt.subplot(121)\n","        plt.subplot(231)\n","        plt.plot(h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_wr, np.min(h_np_pr), h_total_pr[-1], config.lvrg_set.leverage))\n","        # plt.show()\n","\n","        #         short only      #\n","        h_short_np_pr = np.array(h_short_list)\n","\n","        h_total_short_pr = np.cumprod(h_short_np_pr)\n","        h_short_wr = len(h_short_np_pr[h_short_np_pr > 1]) / len(h_short_np_pr[h_short_np_pr != 1])\n","        \n","        plt.subplot(232)\n","        plt.plot(h_total_short_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_short_wr, np.min(h_short_np_pr), h_total_short_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long only      #\n","        h_long_np_pr = np.array(h_long_list)\n","\n","        h_total_long_pr = np.cumprod(h_long_np_pr)\n","        h_long_wr = len(h_long_np_pr[h_long_np_pr > 1]) / len(h_long_np_pr[h_long_np_pr != 1])\n","        \n","        plt.subplot(233)\n","        plt.plot(h_total_long_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_long_wr, np.min(h_long_np_pr), h_total_long_pr[-1], config.lvrg_set.leverage))\n","\n","\n","        #     reversion adjustment      #\n","            \n","        h_rev_total_pr = np.cumprod(h_rev_np_pr)\n","        h_rev_wr = len(h_rev_np_pr[h_rev_np_pr > 1]) / len(h_rev_np_pr[h_rev_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(234)\n","        plt.plot(h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_wr, np.min(h_rev_np_pr), h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         short       #\n","        # h_rev_short_np_pr = 1 / (np.array(h_short_list) + fee) - fee\n","        h_rev_short_np_pr =  (1 / ((np.array(h_short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - np.array(short_fee_list) - 1) * config.lvrg_set.leverage + 1\n","           \n","        h_rev_total_short_pr = np.cumprod(h_rev_short_np_pr)\n","        h_rev_short_wr = len(h_rev_short_np_pr[h_rev_short_np_pr > 1]) / len(h_rev_short_np_pr[h_rev_short_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(235)\n","        plt.plot(h_rev_total_short_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_short_wr, np.min(h_rev_short_np_pr), h_rev_total_short_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long       #\n","        # h_rev_long_np_pr = 1 / (np.array(h_long_list) + fee) - fee\n","        h_rev_long_np_pr =  (1 / ((np.array(h_long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - np.array(long_fee_list) - 1) * config.lvrg_set.leverage + 1\n","            \n","        h_rev_total_long_pr = np.cumprod(h_rev_long_np_pr)\n","        h_rev_long_wr = len(h_rev_long_np_pr[h_rev_long_np_pr > 1]) / len(h_rev_long_np_pr[h_rev_long_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(236)\n","        plt.plot(h_rev_total_long_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_long_wr, np.min(h_rev_long_np_pr), h_rev_total_long_pr[-1], config.lvrg_set.leverage))\n","        \n","        if show_plot:\n","          plt.show()\n","          \n","    except Exception as e:\n","      print('error in h_pr plot :', e)   \n","    \n","    print()\n","\n","\n","  # break # pair loop"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["2021-11-17 ETHUSDT.ftr loaded !\n","config.loc_set.point.exp_itv : 5m\n","config.loc_set.point.tpg_itv : 5m\n","config.loc_set.point.outg_itv : 5m\n","config.loc_set.point.outg_dc_period : None\n","config.loc_set.zone.dtk_itv : 5m\n","-----------------------------------\n","config.loc_set.zone.short_spread : 0.915\n","config.loc_set.zone.long_spread : 0.953\n","config.loc_set.zone.dt_k : 0.225\n","config.loc_set.zone.ei_k : 0.095\n","config.loc_set.zone.dc_period : 135\n","config.loc_set.zone.use_dtk_line : 0\n","config.loc_set.zone.zone_rejection : 0\n","config.loc_set.zone.bbz_itv : None\n","config.loc_set.zone.zone_dt_k : 0.4\n","config.loc_set.zone.zone_dc_period : 135\n","-----------------------------------\n","config.loc_set.point.tf_entry : 5\n","config.loc_set.point.htf_entry : 15\n","config.tr_set.ep_gap : 0.083\n","config.tr_set.out_gap : -0.5\n","config.tr_set.tp_gap : 0.36\n","config.tr_set.c_ep_gap : 0.232\n","config.tr_set.t_out_gap : -0.5\n","-----------------------------------\n","config.lvrg_set.leverage : 2\n","config.lvrg_set.target_pct : 0.12\n","early_out_tpg : 0.36\n","elapsed_time : 33.841350078582764\n","supblot231 passed\n","supblot232 passed\n","supblot233 passed\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1600x1200 with 6 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"MteLY9PS2ZeK"},"source":["##### check statistical significance"]},{"cell_type":"code","metadata":{"id":"NzbWuwSw2jaj","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1638771139055,"user_tz":-540,"elapsed":4542,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"d9ec0ee8-7fe3-4b14-98dc-9eb64b040222"},"source":["# print(survey_df)\n","\n","plt.style.use('dark_background')\n","\n","title_name_list = [[\"total\", \"short\", \"long\"], [\"rev_total\", \"rev_short\", \"rev_long\"]]\n","survey_dfs_list = [[survey_df, short_survey_df, long_survey_df], [rev_survey_df, rev_short_survey_df, rev_long_survey_df]]\n","# title_name = \n","# survey_df_list = \n","\n","space_ = \" \" * 140\n","\n","for d_idx, (title_name, survey_dfs) in enumerate(zip(title_name_list, survey_dfs_list)):\n","\n","  fig = plt.figure(figsize=(30, 10))\n","\n","  gs = gridspec.GridSpec(nrows=1, # row Î™á Í∞ú \n","                          ncols=3, # col Î™á Í∞ú \n","                          # height_ratios=[1, 1, 1]\n","                        )\n","\n","  # gs = fig.add_gridspec(1, 3, wspace=0, hspace=0)\n","\n","  # nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","  nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","  # nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","\n","  # if d_idx == 0:\n","  # else:\n","    # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","  for gs_idx, (title, s_df) in enumerate(zip(title_name, survey_dfs)):  \n","\n","\n","    inner_gs = gs[gs_idx].subgridspec(nrows=nrows, # row Î™á Í∞ú \n","                          ncols=ncols, # col Î™á Í∞ú \n","                          height_ratios=h_r\n","                        )\n","\n","    for col_idx, s_cols in enumerate(s_df.columns):\n","      plt.subplot(inner_gs[col_idx])\n","      plt.plot(s_df[s_cols])\n","      plt.title(s_cols)\n","\n","  # plt.suptitle(\"total\" + \" \" * 140 + \"short\" + \" \" * 140 + \"long\")\n","  plt.suptitle(space_.join(title_name))\n","  plt.show()\n","  print(\"\\n\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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ydGJhG8Atu9md3d5+LaSJJ2OO2LlaAAAtox1GqDqLN6+cNq0aVq6dKk+/vhjSVJQUJCGDBmicePGaeHChaXm//5p3JEjRyonJ8csKSs4OFjz58/X+vXrJUmjR49Wenq6HnvsMX3xxReljuns7Gz2PzVf/NY+zza+utndTXmXc3X22AlrhwOgAufOnavS09733HOPdu/erTVr1kiSkpKStGbNGvXt29fSIaIBK0n2DgoKUnR0tIKDgxUZGanOnTsrIyOj1PyS5MFx48Zpz5496tSpkz7++GOZTCZNnz5dkjRjxgxNnjxZY8aMUVxcnHr37q0VK1bo4sWL+sc//lHbpwgAqAGOJZWyqGZRLf7+/urVq5fFjh8SElJhWzigulxdXc0qp7dp00aS1KpVK8XHx+uWW26Rr6+vWrZsKUnq3LmzJCktLU3p6elGQlajRo30zDPPyN3dXe7u7pKkjIwMFRUV1e4JAaizHJxpjQzA9rXuWnwvlJl8RpezsqwcDQDAVrFOA1SPRStlOTk5qVevXtq2bZuxzWQyadu2bQoICKjSMcaPH6/PP/9cOTk5kqS2bduqRYsWZsfMyspSdHR0uccMCQlRVlaWMVJSUm7grHA9/K62LjwdF6+iwkIrRwOgIkeOHNGJEye0atUqtW7dutx5e/bsUa9evYzs97Zt22rw4MHatGlThcenQgJuxG+TvePj4xUUFKScnByNGzeuzPm/TR5MSkrS1q1btWbNGt11111mc7755htt2rRJSUlJ+uc//6ktW7aYzQEA2BZHp5KFU6pZVIWPj48kacKECRatEhQWFmYkvbi7uxs/F7hevXv3VkxMjGJiYiQVX2OSNGvWLEnSI488opiYGONvlC+++EIxMTEKCgqSJPXs2VN33323unfvrhMnTigtLc0YFf0tBKDhKUn4LuTeAoANa931dknS6cO0LgQAXD/WaYDqsWhSloeHhxwdHZWenm62PT09Xd7e3pXu36dPH91xxx1atmyZsa1kv+ocky9+rc+ve3FSVlLsYStHAqA8+/btk1TcRnby5Mlq27atdu7cqcaNG5c5f82aNXrttde0a9cu5eXl6eTJk/r3v/9tLISUh0RZXK/rSfauSvLgnj17FBgYqI4dO0qSunfvrn79+um7774rNxaSCwGgbjMqZVHNokp69OghSdq5c6fy8/OVn5+vP/7xj/rLX/6i/Px82dvXzFcHeXl5ys7ONhvAjdixY4fs7OyMUVLlavLkyZKklStXmr1fMubOnVvm/r8dSUlJVjsvAHVPSWtkqnACsGWtu90mSTodl2DlSAAAtqqurNOwRgNbYvH2hTdi/Pjxio2N1Y8//nhDx8nLy1MeTzFZlV/3rpKkpINxVo4EQHm2bt0qSYqLi1N2draio6OVlJSkESNGaPny5aXmDxgwQDNnztSUKVMUHR2tDh06aNGiRZo9e7bmz59f7s8JCwtTeHi48drNzY3ELFRJRcneXbp0KXOfNWvWyMPDQ7t27ZKdnZ2cnJy0ZMkSs+TBN954Q+7u7kpISFBhYaEcHBw0a9YsrV69utxYaL8EAHWbsXDK34FVsmPHDknSH/7wB/3666+SpBUrVighIUELFy6khRsAoMEj4RtAfdC6a/H3Z6fj4q0cCQDAVtWVdRrWaGBLLFopKzMzUwUFBfLy8jLb7uXlpbS0tAr3bdSokUaOHKmPPvrIbHvJftdzTFiHS6NG8u7QTpKUfIikLMBWXLx4UUePHlWHDh3KfH/evHn69NNP9dFHH+nw4cNat26dZs6cqZCQENnZ2ZV7XCokoDb9NnmwZ8+eGjp0qIYMGaLZs2cbc0aMGKGnn35aTz31lHr27KkxY8bo5Zdf1ujRo8s9LlU4AaBuo5pF9Vy6dEmSFB8fr7i4OMXFxenXX3/V+fPnFRdX/DfcypUrtWDBAmMfJycn+fv7y9/fX87OzvLx8ZG/v7/at29vlXMAAMCSaI0MwNa5NW+mpt5eKioqUkr8UWuHAwBoQCyxTsMaDWyJRZOy8vPztX//fgUGBhrb7OzsFBgYqKioqAr3feKJJ+Ti4qJVq1aZbU9MTNTZs2fNjunm5qa+fftWekxYR6uuXWTv4KALqWeVlZFp7XAAVJGrq6vat2+vs2fPlvl+o0aNSlVNKCwslKQKk7KA63U9yd5VSR5866239MYbb+iLL77Q4cOHtWrVKkVERCgkJKTcWEguBIC6zeFqNYtCFk5rjK+vr1q0aGG8btmypWJiYhQTE6OWLVvqr3/9q2JiYrRs2TIrRgkAgGVQKQuArWvVtbh14bmTp3QlJ8fK0QCoyNKlS5WZmamcnBzFxsaqV69e5c719vbWZ599piNHjqiwsFARERG1GCkaorqyTsMaDWyJxdsXhoeHa+XKldq3b5/+85//KDg4WK6urlqxYoWk4qdtU1JSNHPmTLP9xo8fr3Xr1unChQuljvn2229r9uzZOnbsmBITEzVv3jylpqZq3bp1lj4dXAe/7t0kScmxVMkC6rKSloO+vr5yd3fX3LlzVVhYqDVr1kgq/Xm9YcMGTZs2Tf/973+N9oXz5s3Thg0baHEDi/htsvc333wj6Vqy97vvvlvmPpUlD5pMpnLn2NtbNHcdAGBB16pZsHB6ve67774KXyclJZGIDwBoMK5V4SThG4Bt8u1WnJR1Oi7BypEAKE/Tpk0lFX8P/vDDDysjI0MdO3bUzz//XO4+Li4uysjI0Pz58zV16tTaChUNGOs0QPVZPClr7dq18vT0VGhoqLy9vRUTE6NBgwbp3LlzkooX/3//P1inTp3Uv39/DRw4sMxjvvnmm3J1ddWHH36opk2bateuXRo0aJCuXLli6dPBdfDz7ypJSiIpC6jTSkp77t+/XxkZGdq1a5fuvvtuZWYWV7j7/ef1/PnzZTKZNH/+fPn4+CgjI0MbNmzQrFmzrBI/GobKkr0/+OADs/lVSR4suW6Tk5MVFxenO++8U9OmTdPy5ctr/fwAADXjWjULFk4BAMCNc3Am4RuAbWvVtYsk6XRcvJUjAVCe4OBgSdKUKVOMqj+nTp2qcJ+kpCRjv3HjxlXp5zg7O8vFxcV47ebmdh3RoiFjnQaoPlNDG25ubiaTyWRyc3OzeiwNYbz+742mvx+KMvn5d7N6LJYa1rimuI4ZNT2sdU1xLTOqO55//nnTqVOnTLm5uaa9e/ea7rrrLuO9H374wex6cnBwML322mumY8eOmXJyckxJSUmmd99919SkSRNjn8aNG5siIiJMp06dMuXk5JiOHz9umjdvnsnJyanKMXEdM2p6cE0xKhtcIxWP4M+Xm/5+KMp0W/97rB6LLQzuAxn1ZfC3OaM+DD6T6+YYOf9V098PRZnuG/u01WOxhcH1xKhscI3U/ihZp/Ht3tXqsVhi8PuTUR9GfHy8yWQymf71r3+Z0tPTTQcOHDBNmDChyvtv377dFBERUem8OXPmmMrCdcyozqhr6zR8HjNqetTkNWXxSllo2Jr5tJBb82YqyM9XSvxRa4cDAKgHFi9erMWLF5f53pAhQ5SVlWW8LiwsVGhoqEJDQ8s93qVLlzR16lTKOwNAPWJUysqnmgUAALhxjlTKAmDDmnp7ya15MxXmFyj1yHFrhwOgHG3atJEknThxQqGhoerTp4/eeecd5eXl6ZNPPqmxnxMWFqbw8HDjtZubm1JSUmrs+GgYWKcBqo6kLFiUX/dukqSU+KO0DgEAAABQKxydShZO+RsEAADcuGutkUnKAmB7Wne7TZKUdvykCq5csXI0AMpjb28vSQoNDVV2drZiYmLUrVs3BQUF1WhSVl5envL4vgQAag1JWag2RxcXuXs2r9Lcjnf3kSQlxR62ZEgAAAAAYHCgmgUAAKhBRqWsfBYwAdie1l2Lk7KS436yciQAKpKWliZfX1+zbfHx8Ro2bJiVIgIA1ASSslAtTje5KOTbL9XEy7Na+yXHxlkoIgAAAAAwd62aBQunAADgxjk6USkLgO0qqZR1Ji7BypEAqEh0dHSppKxOnTopKSnJShEBAGoCSVmoFu/27dTEy1NFRUXKz82t0j4XUs4qYfdeC0cGAAAAAMVKqlkU5rNwCgAAbpxRKYuEbwA2qPXtXSRJpw/HWzkSABVZvHixnnjiCU2fPl2ffvqp7rrrLk2aNEmTJk0y5ixYsEA+Pj4aM2aMsc3f31+S1LhxY3l6esrf3195eXmKj+f/eQCoC0jKQrV4tmktSTq5P0ZLxj1v5WgAAAAAoLRr1SxYOAUAADeO1sgAbJWHbyvd7O6m/CtXdPb4CWuHA6ACBw4ckCQNHz5cM2bMUGJiooKDg7V69WpjTosWLUpV04qJiTH+uXfv3nr66ad16tQptW3btnYCBwBUiKQsVIuHb3FSVmbSaStHAgAAAABlc2ThFAAA1KCS1siF+SR8A7AtrbsWty5MTTimooJCK0cDoCoCAgKUnZ1d5ntjx44ttc3Ozs7SIQEAbgBJWagWT7+rSVnJJGUBAAAAqHvsHRxk7+AgiUpZAACgZjg6FSd851/h3gKA9T0YNE53Dn6wSnMbNXGXJJ3+KcGSIQEAAKAcJGWhWjyuJmVlUCkLAAAAQB1UUiVLolIWAACoGSWVsri3AGBtdvb2Cpw4xvhcqqqje6ItFBEAAAAqQlIWqsXTl6QsAAAAAHWXg9O1xYkCWgwBAIAacK01MvcWAKyrqdetcnR2VkFenj54LlgymSrdJ+diltKOn6yF6AAAAPB7JGWhyho3u0U3u7upqKhI50+nWDscAAAAACilZNG0qKhIRQWFVo4GAADUByUVaQrzqZQFwLqat/aRJF1IOauT+/5r5WgAAABQGXtrBwDb4XG1StYvZ9N5KgwAAABAnVSSlFVIeyEAAFBDHJyolAWgbihJyso8fcbKkdRtiYmJMplMpca7775bau6mTZtkMpn06KOPWiFSAABQ35GUhSrz9GslScpMpnVhZSq74ffy8tInn3yis2fP6tKlS9q/f78ef/xxK0cNAAAA2L6SShYsmgIAgJpyrX0hSd8ArMvjalIW3Uwq1qdPH3l7exvjgQcekCR9+eWXZvOCg4NlqkILSAAAgOtF+0JUmYefryQpI4mkrMr06dNHDg4Oxutu3bpp27Ztxg3/J598oqZNm+qRRx5RZmamnnrqKa1du1a9e/dWTEyMtcIGAAAAbJ6xaEp7IQAAUAPs7O3l4Fj8NTpJ3wCsrXnr4ofnScqqWGZmptnr//f//p+OHz+uHTt2GNv8/f01ffp09e7dW2lpaVU6rrOzs1xcXIzXbm5uNRMwAACot6iUhSrz9CtuX0hSVuUyMzOVnp5ujP/5n/8xu+G/55579I9//EM//vijEhMT9be//U2//PKLevXqZeXIAQAAANvm6ESlLAAAUHNKEr4lKmUBsL7mrUraF5KUVVVOTk565plntHz5cmPbzTffrNWrV+v5559Xenp6lY8VEhKirKwsY6Sk8N8BAABUjKQsVJmH79X2hSRlVUtZN/x79uzRk08+qVtuuUV2dnZ68sknddNNN+nf//53ucdxdnaWm5ub2QAAAABgjvZCAACgJpW0RpakgnySvgFYV3OjfeEZK0diOx577DE1bdpUH3/8sbEtIiJCe/bs0fr166t1rLCwMLm7uxvDx8enhqMFAAD1De0LUWUevlcrZSWTlFUdZd3wjxgxQl988YUuXLig/Px85eTkaOjQoTpx4kS5xwkJCdHrr79u+YABAAAAG1aycEqlLAAAUBMcnYoTvouKilRUUGjlaAA0ZK63NNXNbo1VVFSkCylnrR2OzRg/fry+++47nT1b/O/sT3/6k+6//37deeed1T5WXl6e8vhbEwAAVAOVslAl7rd6yqXRzSosKNCFlFRrh2NTfn/DL0nz5s1T06ZNFRgYqN69eys8PFxr165Vt27dyj0OT2AAAAAAlXMoqZSVT6UsAEDd079/f61fv14pKSkymUx69NFHK91nwIAB2r9/v3Jzc3Xs2DGNGTOm1JyWLVvq008/VWZmpnJychQbG6tevXpZ4hQanJKE70KqcAKwspIqWVnnMngIpYp8fX31wAMPaNmyZca2+++/X+3bt9cvv/yi/Px85V/92/Gf//yntm/fbq1QAQBAPUVSFqrE82rrwgspZ3kirBrKuuFv166dXnzxRY0bN07/93//p9jYWIWGhmrfvn16/vnnyz1WXl6esrOzzQYAAAAsb8qUKUpMTNTly5e1d+9e9enTp9y5jo6OevXVV3X8+HFdvnxZMTExeuihh27omKgeRycWTgEAdZerq6sOHjxY4XdAv9WmTRtt3LhR27dvV48ePfT2229r2bJlevDBB405TZs21e7du5Wfn6+HH35Yt99+u6ZPn66ff/7ZUqfRoBgJ3yRAALAyj6tJWZmnU6wcie0YO3aszp07p40bNxrb3njjDXXv3l09evQwhiRNnTpVY8eOtVaoAACgnqJ9IarEs42vJCmT1oXVUtYNf6NGjSQVlzz/rcLCQtnbkycJAABQl4wYMULh4eEKCgpSdHS0goODFRkZqc6dOysjI6PU/Pnz5+uZZ57RxIkTlZCQoIceekhff/217rnnHsXExFyBy6yYAAAgAElEQVTXMVE9jiycAgDqsM2bN2vz5s1Vnh8UFKTExES9/PLLkqSEhAT169dPU6dO1ZYtWyRJM2bM0OnTpzVu3Dhjv1OnTlV4XGdnZ7m4uBiv3dzcqnEWDYvRGpkqnACsrHnr4ofnz5OUVSV2dnYaO3asVq5cqcLCa8UG0tPTlZ6eXmp+cnJypb8/AQAAqosMEFSJh29rSVLGKZKyqqq8G/6EhAQdO3ZMH3zwgfr06aN27dpp2rRpGjhwoNatW2fFiAEAAPB706ZN09KlS/Xxxx8rPj5eQUFBysnJMVv0/K1nn31WCxYs0HfffafExES9//772rRpk6ZPn37dx0T1GAunVMoCANQDAQEB2rZtm9m2yMhIBQQEGK8feeQR7du3T2vXrlV6eroOHDigCRMmVHjckJAQZWVlGSMlhQX+8jg6kfANoG5o3qq4UhZJWVXzwAMPyM/PT8uXL7d2KAAAoAEjKQtV4tmmOCmLSllVV94Nf0FBgQYPHqyMjAxt2LBBsbGxGj16tMaMGaPvvvvOStECAADg95ycnNSrVy+zhVCTyaRt27aZLYT+louLi3Jzc822Xb58Wf369bvuY0rF1Szc3NzMBspmVMrKZ+EUqO/69++v9evXKyUlRSaTSUOGDDF7f+jQoYqMjFRmZqZMJpP8/f1LHcPFxUXvvvuuMjMzlZ2dra+++kq33nprbZ0CUClvb+9S1TzS09PVpEkT3XTTTZKkdu3aafLkyTp27JgeeughLVmyRO+8845Gjx5d7nHDwsLk7u5uDB8fH4uehy0j4RtAXVHSvvD86TNWjsQ2bN26VXZ2djp27Filc+3s7PTNN9/UQlQAAKChISkLVWJUykoiKauqKrrhP378uIYPHy5vb281btxYPXr00KpVq6wQJQAAAMrj4eEhR0fHMhdCvb29y9wnMjJS06ZNU4cOHWRnZ6cHHnhAjz/+uFq0aHHdx5SoZlEd19oXsnAK1Heurq46ePCgnn/++XLf37Vrl2bMmFHuMSIiIvSnP/1JTzzxhAYMGKCWLVvqX//6l6VCBizC3t5eBw4c0KxZsxQTE6OlS5dq6dKlCgoKKnefvLw8ZWdnmw2UjdbIAOqK5leTsjKplAUAAGAzHK0dAOo+O3t74wmMjKRkK0cDAAAA1F0vvfSSli5dqoSEBJlMJp04cUIrVqy44daEYWFhCg8PN167ubmRmFUOR6eSahYsnAL13ebNm7V58+Zy3y95+MnPz6/M993d3TV+/Hg99dRT2r59uyRp7NixSkhIUN++fRUdHV1qH2dnZ7m4uBivqVwIS0tLS5OXl5fZNi8vL128eNGoznn27Fn99NNPZnPi4+M1bNiwWouzPrtWhZOEbwDW43zzTXL39JAknT/D34IAAAC2gkpZqNQtLbzk6Oysgrw8/ZJ2ztrhAAAAALUiMzNTBQUFZS6EpqWllbvP0KFD5erqKj8/P3Xp0kWXLl3SyZMnr/uYEtUsqsPh6sJpIZWyAFSiV69ecnZ2Nmspe+TIESUlJZXbUpbKhahtUVFRCgwMNNs2cOBARUVFGa93796tzp07m83p1KmTkpKSaiXG+q6kfSH3FgCsqVmr4gfncy5m6XIWfw8CAADYCpKyUKmS1oWZp1NkKiqycjQAAABA7cjPz9f+/fvNFkLt7OwUGBhothBalitXrig1NVWOjo4aNmyYvvnmmxs+JqqmZOGUahYAKuPt7a0rV67o4sWLZtsraikbFhYmd3d3Y/j4+NRGqKhHXF1d5e/vL39/f0lS27Zt5e/vr9ati79/mzNnjtn8999/X+3atdPChQvVuXNnTZ48WSNGjFBERIQxJyIiQnfffbdCQkLUvn17jRo1SpMmTdLixYtr78TqMUcn2hcCsD4Po3XhGStHAgAAgOogKQuV8vS7mpRF60KgXgsJCZEkZWVlyWQyyWQyKT4+vtz527dvN+b9dnz77be1FTIAABYXHh6uiRMnavTo0erSpYuWLFkiV1dXrVixQpK0cuVKLViwwJh/1113aejQoWrbtq369eunzZs3y97eXm+++WaVj4kbY7QYYuEUgAVQuRA3qnfv3oqJiVFMTIyk4oSqmJgYhYaGSlKphMBTp05pyJAhGjhwoA4ePKjp06drwoQJ2rJlizFn3759Gjp0qEaNGqXDhw/r1VdfVXBwsFavXl17J1aPOZQkfFMpCzZsypQpSkxM1OXLl7V371716dOnwvlNmjTRu+++q9TUVOXm5urIkSN6+OGHjffnzJlT6jvBir5HxI1rfrVS1vnTVOkEAACwJY7WDgB1n8fVpKyMJJ7AABqCDh066NKlS5KkgoKCcuc9/vjjcr76xaQkNW/eXAcPHtSXX35p8RgBAKgta9eulaenp0JDQ+Xt7a2YmBgNGjRI584Vt/X29fVV0W+qyd50002aP3++2rVrp0uXLmnTpk169tlnzaqwVHZM3BhHJxZOAVRNWlqaXFxc1KRJE7PP6cpaygI3YseOHbKzsyv3/cmTJ+vpp58utU/Pnj0rPO7GjRu1cePGGokR5oyE73wSvmGbRowYofDwcAUFBSk6OlrBwcGKjIxU586dlZGRUWq+k5OTtm7dqnPnzmn48OFKSUmRn5+ffvnlF7N5hw8f1gMPPGC8ruh7RNy45q1JygIAALBFJGWhUkalrOTTVo4EQG04d+5clZ72/vnnn81ejxw5Ujk5OSRlAQDqncWLF5fb/ue+++4ze/3DDz+oa9euN3RM3BgqZQGoqv379ysvL0+BgYH617/+JUnq1KmT/Pz8aCkLwOBIpSzYuGnTpmnp0qX6+OOPJUlBQUEaMmSIxo0bp4ULF5aaP27cODVr1kz33HOPkWiVlJRUal5BQYHS09OrFIOzs7NcXFyM125ubtdxJg2bB0lZAAAANon2haiUh+/VSlmnaF8INARHjhzRiRMntGrVKrVu3brK+40fP16ff/65cnJyKpzn7OwsNzc3swEAAFBTWDgFGg5XV1f5+/vL399fktSmTRtJUqtWrSRJt9xyi/z9/XX77bdLkjp37ix/f395eXlJKm7d/tFHHyk8PFx//OMf1bNnT61YsUJ79uxRdHR07Z8QgDrJ0YmEb9guJycn9erVS9u2bTO2mUwmbdu2TQEBAWXu88gjjygqKkqLFy9WWlqaDh06pJCQENnbmy8ndezYUSkpKVX6HjEkJERZWVnGSEkhsai6mrcuvr/JPMO/OwAAAFtCUhYqZO/ooGY+LSRJGcm0LwTqs3379kkqbks4efJktW3bVjt37lTjxo0r3bdPnz664447tGzZskrn8iUMAACwJFoMAQ1H7969FRMTo5iYGElSWFiYJGnWrFmSiheVY2JitGnTJknSF198oZiYGAUFBRnHmDp1qr799lv985//1A8//KC0tDQ9/vjjtXwmAOqykoTvQhK+YYM8PDzk6OhYqqJVenq6vL29y9ynXbt2Gj58uBwcHDR48GDNmzdP06dP1+zZs4050dHR+vOf/6xBgwZV6XvEsLAwubu7G8PHx6fmTrIBsHdw0C0tiv97nT/NOg1Q3y1dulSZmZnKyclRbGysevXqVeH8AQMGaP/+/crNzdWxY8c0ZsyYWooUAFAVtC9EhZr5tJSDo6Ou5FxW1rnS/eUB1B9bt26VJMXFxSk7O1vR0dFKSkrSiBEjtHz58gr3HT9+vGJjY/Xjjz9W+nPCwsIUHh5uvHZzcyMxCwAA1BiHq9UsWDgF6r8dO3bIzs7OeO3m5qasrCxNnjxZkrRy5UqtXLmywmNcuXJFL7zwgl544QWLxgrAdl1L+ObeAg2Dvb29zp07p0mTJqmoqEgHDhyQj4+P/vrXvyo0NFSStHnzZmP+oUOHKv0eMS8vT3lUm7tuTVt4ycHJUflXrijrXKa1wwFgIU2bNpUk5efn6+GHH1ZGRoY6duyon3/+udx92rRpo40bN+r999/X008/rcDAQC1btkxnz57Vli1bait0AEAFSMpChTz9fCVJmcmnrRwJgNp28eJFHT16VB06dKhwXqNGjTRy5Ei99tprVTouX8IAAABLuta+kPsNAABw44ykLO4tYIMyMzNVUFBgtO4t4eXlpbS0tDL3OXv2rPLz81VUVGRsi4+PV4sWLeTk5KT8MhIUq/o9Iq6PR+viymLnz6TKZDJZORoAlhIcHCxJmjJlirKzsyVJp06dqnCfoKAgJSYm6uWXX5YkJSQkqF+/fpo6dSpJWQBQR9C+EBXy9CvuA59J60KgwXF1dVX79u119uzZCuc98cQTcnFx0apVq2opMgAAgPJdWzilmgUAALhxDkbCN/cWsD35+fnav3+/AgMDjW12dnYKDAxUVFRUmfvs3r1bHTp0MKtG2alTJ6WmppaZkCVV/XtEXJ/mrVpJks6fptsAUJ8NHjxYUnHF3/T0dB04cEATJkyocJ+AgABt27bNbFtkZKQCAgLK3cfZ2Vlubm5mAwBgOSRloUIevsU3+xlJVMoC6rv58+dLknx9fRUQEKCvv/5ahYWFWrNmjaTiPwQWLFhQar/x48dr3bp1unDhQq3GCwAAUBajUhYthgAAQA1wdKJSFmxbeHi4Jk6cqNGjR6tLly5asmSJXF1dtWLFCkmlv/NbsmSJmjVrpkWLFqljx44aPHiwZs6cqcWLFxtz3nrrLd17773y8/Mr83tE1KzmJZWySMoC6rU2bdpIkk6cOKGHHnpIS5Ys0TvvvKPRo0eXu4+3t7fS09PNtqWnp6tJkya66aabytwnJCREWVlZxkhJ4bMFACyJ9oWokGebq+0Lk5KtHAkAS/PxKf7jfv/+/crIyNCuXbt09913KzMzU1JxstZvy5ZLxU/J9e/fXwMHDqz1eAEAAMrCwikAAKhJjlTKgo1bu3atPD09FRoaKm9vb8XExGjQoEE6d+6cpNLf+Z05c0YPPfSQIiIiFBsbq5SUFC1atEgLFy405rRq1Upr1qxR8+bNy/weETXLSMo6Q0cToD6zty+upRIaGqrs7GzFxMSoW7duCgoK0ieffFJjPycsLEzh4eHGazc3NxKzAMCCSMpCha5VyuJmH6jvxo4dq2HDhsnT09PoV/5b9913X6ltR48eNStlDgAAYG0snAIAgJpktEbOJ+Ebtmvx4sVmla5+q6zv/Pbu3Vth66tRo0bVWGyonMfVpKxMKmUB9VpaWpp8fX3NtsXHx2vYsGEV7uPl5WW2zcvLSxcvXlRubm6Z++Tl5SmPB9kAoNbQvhDlcnRxUVPv4l/kmcm0LwQAAABQ9zk4UykLAADUnJKE70ISvgFYCe0LgYYhOjq61LZOnTopKSmp3H2ioqIUGBhotm3gwIGKioqq8fgAANfH4klZU6ZMUWJioi5fvqy9e/eqT58+Fc5v0qSJ3n33XaWmpio3N1dHjhzRww8/bLw/Z84cmUwmsxEfH2/p02iQPFr7yN7eXpezsnXpws/WDgcAAEnVv7d46aWXlJCQoJycHCUnJys8PFwuLi5mc1q2bKlPP/1UmZmZysnJUWxsrHr16mXJ0wAAWEhJNQsWTgEAQE2gNTIAa2rc/Ba5NGqkoqIiXUg5a+1wAFhQSUXD6dOnq3379ho1apQmTZpkVulwwYIFWrlypfH6/fffV7t27bRw4UJ17txZkydP1ogRIxQREVHr8aNhYZ0GqDqLJmWNGDFC4eHhmjt3rnr27KmDBw8qMjJSnp6eZc53cnLS1q1b1aZNGw0fPlydO3fWxIkTS/WxPXz4sLy9vY3Rr18/S55Gg+Xh21qSlEGVLABAHVHde4tRo0bpjTfe0Ny5c3Xbbbdp/PjxevLJJ7VgwQJjTtOmTbV7927l5+fr4Ycf1u23367p06fr559JSAYAW2S0L6TF0HWbMWOGTCZTpV/iDh8+XPHx8bp8+bJiY2PNHqgCAKC+MNoXkvANwAo8WrWSJP2Slq7CfD6HgPrswIEDkor/1j58+LBeffVVBQcHa/Xq1cacFi1amLU4PHXqlIYMGaKBAwfq4MGDmj59uiZMmKAtW7bUevxoOFinAarH0ZIHnzZtmpYuXaqPP/5YkhQUFKQhQ4Zo3LhxWrhwYan548aNU7NmzXTPPfeooKBAksosyVhQUKD09HRLhg5Jnn7FN/uZyWesHAkAAMWqe29xzz33aPfu3VqzZo2k4vuKNWvWqG/fvsacGTNm6PTp0xo3bpyx7dSpUxY9DwCA5VyrZsGCxfXo3bu3nnvuOR08eLDCeQEBAVqzZo1CQkL07bff6qmnntK6devUs2dPxcXF1VK0AABYnoOR8M29BYDaR+tCoOEJCAhQdnZ2me+NHTu21LYdO3aoZ8+elg4LMLBOA1SPxZKynJyc1KtXL4WFhRnbTCaTtm3bpoCAgDL3eeSRRxQVFaXFixfr0UcfVUZGhlavXq2FCxeqqKjImNexY0elpKQoNzdXUVFRCgkJ0enT5VdzcnZ2Nit/5+bmVgNnWP95+hVnWmecSrZyJKgu55tvsnYIqOPyLudaO4Qq4VrGb5XcW/xv+N+NayPvcm6F9xZ79uzRM888oz59+ujHH39U27ZtNXjwYH366afGnEceeUSRkZFau3atBgwYoJSUFL333ntatmxZubFU596C6xiVsZXPZMBWGJWyaDFUba6urvrss880ceJEzZ49u8K5L730kjZv3qz//d//lSS99tprGjhwoF544QVNnjz5hmPh9ycqYwu/P7mOURlbuI7x20pZ3FsAqH0kZdkm7gNRGVu5D+Raxu/9fp0m73JupTkgllinYY0GNcnSn8kWS8ry8PCQo6NjqYpW6enp6tKlS5n7tGvXTvfff78+++wzDR48WB06dNB7770nJycnhYaGSpKio6P15z//WUeOHFGLFi00Z84c7dy5U926ddOlS5fKPG5ISIhef/31Gj2/hqDNnd0lkZRla5xvvklh/9lu7TBQx4XcdV+dv+nnWsbvuTo6ydHRUY8veE0Br06TVHwtV3RvsWbNGnl4eGjXrl2ys7OTk5OTlixZYpY03q5dO02ePFnh4eFasGCB+vTpo3feeUd5eXn65JNPyjxuVe8tuI5RFbbwmQzYEloMXb+///3v2rhxo77//vtKk7ICAgIUHh5uti0yMlKPPfZYuftU9Qszfn+iKur670+uY1RFXb+OUczRqSThm3sLALXPSMo6Q1KWreA+EFVhC/eBXMsoy+/XaUqu5dpep2GNBjXJ0p/J9hY78nWwt7fXuXPnNGnSJB04cEBr167V3/72NwUFBRlzNm/erK+++kqHDh3Sli1bNHjwYDVt2lQjRowo97hhYWFyd3c3ho+PT22cjk3rFHCXvNq1Ue6vvyp+5x5rhwMAwHUZMGCAZs6cqSlTpqhnz54aOnSohgwZYrbQbG9vrwMHDmjWrFmKiYnR0qVLtXTpUrP7j9/j3gIA6i6jUlY+1Syqy9/fXyEhIVWa6+3tXeZDWN7e3uXuExISoqysLGOkpLCwBACo+6iUBcCaPFq3kiRlUikLAGCjLLFOwxoNbInFKmVlZmaqoKBAXl5eZtu9vLyUlpZW5j5nz55Vfn6+WavC+Ph4tWjRQk5OTsrPL/000sWLF3X06FF16NCh3Fjy8vKUxx/N1XLvs09Kkv7z9bfKvfSrlaNBdeRdzlXIXfdZOwzUcXX9CQyJaxmlOTk5afz5C/rXzFCt37BBUvF1UtG9xbx58/Tpp5/qo48+kiQdPnxYrq6u+vDDD/W3v/1NJpNJZ8+e1U8//WS2X3x8vIYNG1ZuLFW9t+A6RlXYwmcyYCscnJyMf6aaRdWVfHE1YcIEXblyxWI/JywszKy6lpubW5mJWfz+RFXU9d+fXMeoirp+HaNYScJ3IfcWAKzgWvvCM1aOBFXFfSCqwhbuA7mWUZbfr9OUXMu1vU7DGg1qks22L8zPz9f+/fsVGBiob775RpJkZ2enwMBAvfvuu2Xus3v3bj311FOys7OTyWSSJHXq1EmpqallJmRJkqurq9q3b2/WcxQ35ta2frqt/z0qKirSrtVfWTscXAdbuJkDqoJrGb+VdzlX+/fv1739+uurtV9KqvzeolGjRmbJ3pJUWFho7GsymbR792517tzZbE6nTp2UlJRUY3EDAGpHSSULiaSs6ujRo4ckaefOncY2R0dH3XvvvXrhhRfk4uJS6vdpWlpatR7Ckqr3wBS/P1EfcB0D9YNRKYsqnABqmUujRnJr3kySdJ5KWTaF+0DUF1zL+D1bXKfhOoa1WbR9YXh4uCZOnKjRo0erS5cuWrJkiVxdXbVixQpJ0sqVK7VgwQJj/pIlS9SsWTMtWrRIHTt21ODBgzVz5kwtXrzYmPPWW2/p3nvvlZ+fnwICAvT111+rsLBQa9asseSpNCj9nnpCkvTTjl08fQEAqFMqu7f44IMPzOZv2LBBkydP1pNPPqk2bdrogQce0Lx587Rhwwbjj4CIiAjdfffdCgkJUfv27TVq1ChNmjTJ7P4DAGAbSipZSFIh1ZKrbMeOHZKkP/zhD+rRo4d69OihH3/8UZ999pl69OhR6oszSYqKilJgYKDZtoEDByoqKqpWYgYAoLaUVOIk4RtAbWvWqqUk6deff6GjCQCgzmCdBqgei1XKkqS1a9fK09NToaGh8vb2VkxMjAYNGqRz585Jknx9fc2+3D1z5oweeughRUREKDY2VikpKVq0aJEWLlxozGnVqpXWrFmj5s2bKyMjQ7t27dLdd9+tzMxMS55Kg3Gzu7t6PzJYkvTDp19YORoAAMxVdm/RqlUrs/nz58+XyWTS/Pnz5ePjo4yMDG3YsEGzZs0y5uzbt09Dhw5VWFiYXnvtNSUmJio4OFirV6+u1XMDANy4kkoWhfkFRvVlVO7SpUuSisvCZ2dnS5J+/fVXnT9/XnFxcZKKH6pKSUnRzJkzJUmLFi3Sjh07NG3aNG3cuFEjR45U7969NWnSJOucBAAAFlKS9F1AwjeAWuZxtXVhJlWyAAB1COs0QPVYNClLkhYvXlxuBuN995Xu37l3714FBASUe7xRo0bVWGwo7e5hf5JLo5uVknBUJ348YO1wAAAopaJ7iyFDhigrK8t4XVhYqNDQUIWGhlZ4zI0bN2rjxo01GicAoPY5Ol1dNKW9UI37/UNVUVFReuqppzR//nwtWLBAx44d02OPPWYkcQEAUF8Y7QuplAXAQuzs7PTQCxPl6edrtt2jdfGi9vkzJGUBAOoW1mmAqrN4UhZsh72Dg/4wargkaecqqmQBAAAAsC0smtac3z9EVdZDVV999ZW++uqr2goJAACrcHJxkUTSNwDLadvTXwMnjS33/dQjx2oxGgAAANQkkrJg6BY4QLe08Fb2+Qv673fbrB0OAAAAAFQL7YUAAEBNcnC89vU5Sd8ALMW32+2SpORDP2nf+k1m7+X+mqPYrf9njbAAAABQA0jKguHeZ56UJO354l8sYgAAAACwOQ5UygIAADWoJOFb4v4CgOW06tpFknTo+x3a/fk/rRwNAAAAapK9tQNA3dC62+1qe2d3FeTlKWrt19YOBwAAAACqrWThtDCfRVMAAHDjSlojS1IhD7ECsJDW3W6TJJ2Oi7dyJAAAAKhpJGVBknTvMyMkSf/9bquyz1+wcjQAAAAAUH2OTiWVslg0BQAAN87BSPgukMlksnI0AOqjm93d5dG6lSTpzE8JVo4GAAAANY2kLMj9Vk/5PxgoSdq5aq2VowEAAACA61NSKYv2QgAAoCaUVMoqyCfhG4BltL7aujAj6bQuZ2VbORoAAADUNJKyoO4PDJCDk6NO7o9RSsJRa4cDAAAAANfFWDilUhYAoI7q37+/1q9fr5SUFJlMJj366KOV7jNgwADt379fubm5OnbsmMaMGVPu3BkzZshkMikiIqImw26wrlXhJOEbgGW07lrcuvAMrQsBAADqJZKyIL/u3SRJR6L+Y+VIAAAAAOD6XatmwcIpAKBucnV11cGDB/X8889XaX6bNm20ceNGbd++XT169NDbb7+tZcuW6cEHHyw1t3fv3nruued08ODBmg67wbpWhZOEbwCW0bpbcVJWMklZAAAA9ZKjtQOA9fl27ypJSo49bOVIAAAAAOD6OTqxcAoAqNs2b96szZs3V3l+UFCQEhMT9fLLL0uSEhIS1K9fP02dOlVbtmwx5rm6uuqzzz7TxIkTNXv27BqPu6G6VoWThG8AllHSvvBMXIKVIwEAAIAlUCmrgWvc7BZ5tG6loqIiJR/6ydrhAAAAAMB1c2DhFGhQft8GbsiQIaXmzJ07V6mpqcrJydHWrVvVoUMHs/c7duyodevWKSMjQxcvXtTOnTv1xz/+sZbOAKhcQECAtm3bZrYtMjJSAQEBZtsWL16sjRs36vvvv6/ScZ2dneXm5mY2UFpJpaxCqnACsAC35s3U1NtLRUVFOvPTEWuHAwAAAAsgKauB872juErWuZOnlHvpVytHAwAAANQ9U6ZMUWJioi5fvqy9e/eqT58+Fc5/6aWXlJCQoJycHCUnJys8PFwuLi7G+3PmzJHJZDIb8fG0qqgJxsIplbKABqGyNnCvvPKK/vKXvygoKEh9+/bVr7/++v/Zu/e4KMv0f+CfgRlQccBUHBQFUVRUUhNRMc0DsBpaHlLI1nTBbT1Um2Huhlkqkmj7C3WTdDMVvuqyapum6wHByhOHEsMj4AlROQziATDO8Pz+IB4bOePMPDDzeb9e9+u188z93Fzz/T7Sw9zXc12IjIzU+J38v//9D3K5HOPGjYOLiwvOnz+P//3vf1CpVPr6GER1srGxgVqt1jimVqthZWWFVq1aAQB8fHwwePBgBAQENHjdgIAA5OXliSM9PV2rcRuKJ5WyeG9BRNrXtX9l68Lsm7dQUlgocTREREREpAtsX2jk7H9rXZh24bLEkRARERERNT/e3t4ICQnB/PnzER8fj0WLFiEyMhJ9+vTBvXv3qs2fOXMm1qxZAz8/P8TExKB37zyc0u4AACAASURBVN4ICwuDIAhYvHixOO/SpUvw8PAQX5eVlenl8xg6ceOU1SyIjEJ9beAWLVqEoKAgHDhwAAAwe/ZsqNVqTJkyBbt370aHDh3Qu3dvzJ07FxcvXgQAfPjhh3j77bfh7OxcLRGGqDnq2rUrNmzYAE9PTxQXFzf4vODgYISEhIivlUolE7NqYCq2Rua9BRFpn51zZVLWnct8SIeIiIjIULFSlpGzH+AMAEi7cEniSIiIiIiImh9/f39s2bIFYWFhSEpKwvz581FQUAA/P78a548YMQJnzpxBREQE0tLSEBUVhYiICAwdOlRjXllZGdRqtTju37+vj49j8KoqZXHjlIgcHBzQuXNnjbZveXl5iI+PF9u+3b9/H8nJyZg9ezbatGkDU1NTzJs3D2q1GgkJCTWuy5ZvpG9ZWVnVKrepVCrk5uaiqKgILi4uUKlUOHfuHEpLS1FaWooxY8bgr3/9K0pLS2FiUvPXvyUlJcjPz9cYVB0rZRGRLnXt7wQAuHM5WeJIiIiIiEhXmJRlxGQmJuj2fOWTGKyURURVbQ7y8vIa3ErJysoKGzduREZGBoqKipCSkoKXX35ZH+ESERHpnEKhgIuLi8aGviAIiI6OFjf0nxYTEwMXFxexxaGDgwO8vLxw+PBhjXm9evVCeno6bty4gZ07d6Jbt251xsIkgIaRK7hxSkSVbGxsAKDGtm9V7wGAh4cHXnjhBeTn56OoqAj+/v6YMGECHj16VOO6bPlG+hYbGwt3d3eNY56enoiNjQUAHD9+HM7Ozhg0aJA4fv75Z+zatQuDBg1CRUWFFGEbDDHhm1U4iUgHuv3WvvDOpSsSR0JEREREusL2hUZM1dMBrSwsUPTrr1DfSJU6HCJqJhwdHfH48WMAdbdSUigUiIqKQnZ2NqZPn4709HTY29vXunlBRETU0nTs2BFyubzGDX0nJ6caz4mIiEDHjh1x+vRpyGQyKBQKbNq0CcHBweKc+Ph4/OlPf0JKSgo6d+6M5cuX49SpU3B2dhb/G/y0gIAArFixQmufzVCxUhYRNVZoaCiys7MxatQoFBYW4s9//jMOHjwIV1dXZGVlVZvPlm/0rCwsLODo6Ci+dnBwwMCBA/HgwQPcuXMHy5cv15i/efNmvPPOO1i7di22bduGcePGwdvbGxMnTgQAPH78GJcvaz5s+euvv+L+/fvVjlPjsVIWEelKOxsVlB3ao7y0DBkp16UOh4iIiIh0hElZRsx+QH8AwJ2LSRD41BwR/SY7O7tBbQv8/PzQvn17jBgxQkzeSktL03V4REREzdro0aOxdOlSLFy4EPHx8XB0dMSGDRuwbNkyBAUFAQCOHj0qzr948SLi4+ORlpYGb29vbNu2rcZ1mQTQMOLGaSk3TomMXVVClUql0kiuUqlUSExMBACMGzcOkyZNwnPPPSf+DfT222/D09MTc+bMwdq1a6utW1JSghImZ9AzGDJkCH788Ufx9bp16wAAYWFh8PX11ajkBgC3bt3CxIkTsW7dOrz33nu4e/cu/vznP+PYsWP6DNtoyRVM+CYi3ej2W+vCzGs3mPhJREREZMDYvtCI2Q9wBgCkXbgkcSSGJzU1VWz/9vuxceNGcc7w4cNx/PhxPH78GLm5uThx4gRatWolYdRElVJSUhrUSunVV19FbGwsQkNDkZWVhYsXLyIgIAAmJnX/p4Xtl4iIqKXIyclBWVkZVCqVxvGnN/h/b9WqVdixYwe2bt2KS5cuYf/+/Vi6dCkCAgIgk8lqPCc3NxdXr17VqJrxtJKSEuTn52sMqs5UrGbBjVMiY5eamorMzEyNtm9KpRLDhg0T2761adMGAKq1d6uoqKj37xqipjpx4gRkMlm14evrCwBYsGBBjecMHjwYrVq1gqOjI8LDw+v8GWPHjsX777+vk/iNTVXCdzkTJohIy7o59wMA3LmSJHEkRNRcBAQEAADy8vLEfcWkpNp/R8jlcnz88ce4fv06CgsLkZiYiPHjx+srXCIiaiB+w2TEqiplpV1gKXNtc3V1hY2NjTg8PDwAAHv37gVQmZB19OhRHDt2DEOHDoWrqys2btxY7YtgIn06e/YsAGDatGlYsGABHBwccOrUKbRt27bG+T169MD06dNhamoKLy8vrFq1CosXL8ayZcvq/DkBAQHIy8sTB6t8EBFRc1VaWoqEhASNDX2ZTAZ3d3dxQ/9pbdq0qXZPV15eLp5bEwsLC/Ts2ROZmZlaitx4VVWz4MYpkXGwsLDAwIEDMXDgQABA9+7dAQBdu3YFAKxfvx7Lli3DK6+8AmdnZ/zf//0fMjIysH//fgBAbGwsHj58iPDwcAwYMAC9evXCZ599BgcHBxw6dEiSz0REzcuTKpxM+CYi7aqqlHXnEpOyiEiTo6OjuL84cuTIWucFBQVh3rx5ePfdd9GvXz9s3rwZ+/btw6BBg/QYLRERNYRgbEOpVAqCIAhKpVLyWKQarZRthc8vxgqfX4wV2rZ/TvJ4Wvqo75pat26dcO3aNfF1bGysEBgYqNOfycHR2PH0NWVlZSU8evRI8PPzq3F+SkqKkJaWJpiYmIjH3n//fSEjI6POn2NmZiYolUpxdOnShdcyh9aGVL8b+TuZQ9uD11TzGd7e3kJhYaEwe/ZswcnJSdi8ebPw4MEDoVOnTgIAITw8XFi9erU4f/ny5UJubq7g4+MjdO/eXfDw8BCuXbsm/Oc//xHn/OMf/xBeeuklwd7eXnBzcxOOHTsmZGdnCx07duQ18oxj1meBwucXY4VRf/SWPJaWNPjfT46WOkaPHi3UZOfOneKclStXCpmZmUJhYaEQFRUl9OrVS2MNFxcX4ejRo0JOTo6Qm5srxMTECBMmTGhwDLyOObQ9+Du5eQ2Peb7C5xdjhemf/F3yWFrS4PXEUd/gNQJh1ZlI4fOLsYKtU2/JYzGE8fQ1lZqaWuN94saNG4XnnntO+Oc//ykkJycLBQUFQlpamrBhwwbB0tLymX8uB8ezjNWrVzfqekpPTxcWLlyoceybb74RduzYUed53KPh0PWQ4ncjfx9zaHto85qSg4ySnXNfAEDOnbt4/OChxNEYNoVCgVmzZiEkJAQAYG1tjeHDh2PXrl04c+YMevbsieTkZHz00Uc4c+ZMreuYmZnB3NxcfM2Wb6Rr9bVSyszMRGlpqUY1kKSkJHTu3BkKhQKltTxFWlJSghJWryAiohZiz549sLa2RmBgIGxsbJCYmIgJEyYgOzsbAGBnZ6fx38KgoCAIgoCgoCDY2tri3r17OHjwID766CNxTteuXREREYEOHTrg3r17OH36NIYPH46cnBy9fz5DIzerrJTF9oVExqGqDVwVpVKJvLw8jfZvy5cvx/Lly2tdIyEhARMmTNBpnETUcomVsvg9BhFpUYduXdHG0hKlxcXIvH5D6nAMkqurK0xNTcXXzs7OiI6Oxt69e9GlSxd06dIFH3zwAa5cuQJ7e3ts3rwZXbp0wYwZMySMmqhSSkoKCgsLERsbi4CAANy5c6fGeebm5igqKtI4VlhYWGd1LaCym8mKFSu0FS4REdWDSVlGym6AMwDgNlsX6tyUKVPQrl07hIWFAahs+QYAK1aswAcffIDExETMnj0bx48fh7OzM65fv17jOrxJIn2raqW0Y8eOGt8/c+YM3njjDchkMgiCAADo3bs3MjIyak3IIiIiaolCQ0MRGhpa43tjx47VeF1eXo7AwEAEBgbWut7MmTO1Gh898aTFEDdOiYiI6NlVtUZmwjcRaVPVQ/MZyddQUVYucTSG6emHnj788ENcv34dJ06cAABMnz5dfO/mzZv46KOPsHPnTpiamqK8nP8/IWmcPXsWADBt2jRYWlpi+fLlOHXqFJydnfH48eNq8yMjI+Hv74+TJ0/ixo0bcHd3x7Rp0zQSEmsSHBwsFpIAKh9uSU9P1+6HISIikYnUAZA07Af0BwCkXbgkcSSGb+7cuThy5AgyMzMBACYmlf/s/vWvfyEsLAyJiYnw9/dHSkoK/Pz8al0nODgYlpaW4rC1tdVL/GQ8goKCAFRW/HBzc8O+fftQXl6OiIgIAEB4eDhWr14tzt+0aRPat2+PDRs2oFevXvDy8sLSpUtr3bQmIiIi0jVunBIREZE2MeGbiHSha38nAMCdy0kSR2IcqrqZbNu2rdY5VlZWyMvLqzchy8zMDEqlUmMQaUtUVBQA4PLlyzh27Bi8vLzQrl07eHt71zj/vffew7Vr15CcnIySkhJs3LgR27dv16joXpOSkhLk5+drDCIi0h0mZRkp+98qZaWdZ6UsXbKzs4OHhwe+/vpr8VhVctaVK1c05iYlJcHOzq7WtXiTRLpWleiXkJCAPXv24P79+xqtlOzs7NC5c2dx/t27dzF+/Hi4urriwoUL+Oc//4kNGzZgzZo1ksRPRERExBZDREREpE1sjUxEutDtt0pZty8xKUsfnu5m8rQOHTrg448/xldffVXvWgEBAcjLyxMHqwuRLuXm5uLq1atwdHSs8f2cnBxMnToVFhYWsLe3h5OTEx4/foybN2/qOVIiIqoL2xcaoY52XWHRzgqlxcXISLkmdTgGzdfXF9nZ2Th06JB47NatW0hPT0efPn005vbu3RtHjhzRd4hEIl9fX7z22muwtrauMenv6fZMABAXFwc3Nzd9hEdERERUL1MxKYsbp0RERPTsqhK+y5nwTURaIjMxQde+lXsDd1kpSy+e7mbye0qlEocOHcKVK1ewYsWKetdi2zfSJwsLC/Ts2RM7duyoc15xcTEyMjIgl8vx2muvYc+ePXqKkIiIGoJJWUaoqkrW3SspKC8rkzgawyWTyeDr64vw8PBqJW//8Y9/YOXKlTh//jwSExMxZ84cODk5afQxJyIiIiKixqmqZlHOFkNERESkBXIFE76JSLs6OdjDvE0bFP36K7Jv3ZY6HINX1c1k2rRp1d5r27Ytjh49ivz8fEydOhVlDdgvKykpQQkTdUlHgoKCAFRet5aWlli5ciXKy8sREREBAAgPD0d6ejqWLl0KABg6dChsbW2RmJgIW1tbrFixAiYmJvjss88k+wxERFQdk7KMkP3A31oXXrgkcSSGzcPDA/b29jX2Kd+wYQNatWqFdevWoX379jh//jw8PT1ZUpSIiIiI6Blw45SIiIi0yZTtC4lIy7r1r2xdmJ50FUJFhcTRGL6aupkAlRWuIiMjUVxcjFdffRXFxcUSRUj0hK2tLQAgISEB9+7dw+nTpzF8+HDk5OQAqEzWqvjd741WrVohKCgIPXr0wOPHj3H48GG8+eabyM3NlSR+IiKqGZOyjJDdgP4AgLQLlyWOxLBFRUVBJpPV+v7atWuxdu1aPUZERERERGTY5OLGKZ9cJiIiomdX1b6wjFU4iagJVD26w9yijcYxpxeHAQDuXGLrQl2rrZuJUqnEsWPH0KZNG8yaNQuWlpawtLQEANy7d08j6YVIn3x9ffHaa6/B2toa+fn51d4fO3asxuuTJ0+if//++gqPiIiayETqAEi/FK3M0aW3IwDg9nlWyiIiIiIiIsMhbpyymgURERFpgZyVsshALFy4EKmpqSgsLERcXBxcXV3rnG9lZYWNGzciIyMDRUVFSElJwcsvv/xMaxqbIa964W/fReC9f2/VGC94/QEAcOcyk7J0rbZuJoMHD8bw4cMxYMAA3LhxA1lZWeLo1q2bRNESERGRoWKlLCPTtZ8TTOVy5Krv4ZE6W+pwiIiIiIiItIaVsoiIiEibnrRG5r0FtVze3t4ICQnB/PnzER8fj0WLFiEyMhJ9+vTBvXv3qs1XKBSIiopCdnY2pk+fjvT0dNjb2+PRo0dNXtMYjZ4zEwCQdy8HpU+1xnuYqUbSqRgpwjIqtXUzOXHiRJ1dToiIiIi0iUlZRsZ+gDMAIO0Cq2QREREREZFhMa3aOC1lNQsiIiJ6dqyURYbA398fW7ZsQVhYGABg/vz5mDhxIvz8/LB27dpq8/38/NC+fXuMGDECZWVlAIC0tLRnWtPYdB80AF16O6KksAhrJ89EUf5jqUMiIiIiIomwfaGRsR9Q2Vs47cJliSMhIiIiIiLSLrYvJCIiIm2qurcoL2WlLGqZFAoFXFxcEB0dLR4TBAHR0dFwc3Or8ZxXX30VsbGxCA0NRVZWFi5evIiAgACYmJg0eU0zMzMolUqNYchefH0aAOCXI1FMyCIiIiIycqyUZaBe8PoDXv3gXfFJ8SqtlW0BsFIWEREREREZFpmJCUzllX/ilrPFEBEREWkBK2VRS9exY0fI5XKo1WqN42q1Gk5OTjWe06NHD4wbNw67du2Cl5cXHB0d8eWXX0KhUCAwMLBJawYEBGDFihVa+UzNncVz7TDAcywAIGb3txJHQ0RERERSY1KWATKRm2LS+wthad2xxvdz1fdw53KynqMiIiIiIiLSnapKFgA3TomIiEg7xNbITPgmI2JiYoLs7Gz85S9/QUVFBc6dOwdbW1ssWbIEgYGBTVozODgYISEh4mulUon09HRthdysDJ06CXIzM9y+dAV3r3AfhoiIiMjYMSnLAD3vPgbtbFTIv/8Am+a+A6GiQuP9R1lqlBUXSxQdERERERGR9lVVsgC4cUpERETawdbI1NLl5OSgrKwMKpVK47hKpUJWVlaN52RmZqK0tBQVv9tXSEpKQufOnaFQKJq0ZklJCUqM4B5dJpPBbcYUAEDs7n0SR0NEREREzYGJ1AGQ9r00ywdAZWlc9Y1UZKemaYySwiKJIyQiIiIiItIu+e9at5eXlUkYCRERERmKJ+0LDT+ZhAxTaWkpEhIS4O7uLh6TyWRwd3dHbGxsjeecOXMGjo6OkMlk4rHevXsjIyMDpaWlTVrTWPR5cRg6dLVFQV4efjkaJXU4RERERNQMMCnLwNg93w/dBz2PspISxO7hkxhERERERGQcqjZNS1kVmIiIiLRErJRVykpZ1HKFhITgrbfewuzZs+Hk5IRNmzbBwsIC27dvBwCEh4dj9erV4vxNmzahffv22LBhA3r16gUvLy8sXboUoaGhDV7TWI3wngYAOPvdEZQW8e8SIiIiImL7QoMz6rcqWb8ciUL+/QcSR0NERERERKQfpmwvRERERFomV1RVyuL9BbVce/bsgbW1NQIDA2FjY4PExERMmDAB2dnZAAA7OzuNVoV3797F+PHjsW7dOly4cAHp6enYsGED1q5d2+A1jVE7GxX6vjQCABC7lw/MExEREVElVsoyIFYqawz0HAcAOLVzj8TREBER6c7ChQuRmpqKwsJCxMXFwdXVtc757733HpKTk1FQUIDbt28jJCQE5ubmNc79+9//DkEQsG7dOl2ETkREOsL2QkRERKRNMpkMporKZ5rLeX9BLVxoaCi6d++OVq1aYfjw4fjpp5/E98aOHQtfX1+N+XFxcXBzc0Pr1q3h6OiI4OBgjcSt+tY0RsNnTIaJqSmuxZ9Fdmqa1OEQERHpFPdoiBqOSVkGZITPazBVyHH953NIT74qdThEREQ64e3tjZCQEKxcuRKDBw/G+fPnERkZCWtr6xrnz5w5E2vWrMHKlSvRt29fzJ07Fz4+Phql+asMGTIE8+bNw/nz53X9MYiISMvkispKWeVsL0RERERaYPpbwjfASllEVDdTuRzDpr0KAIjZwypZRERk2LhHQ9Q4Ok/KamyWpJWVFTZu3IiMjAwUFRUhJSUFL7/88jOtaQwUrczhNmMKAODUzt0SR0NERKQ7/v7+2LJlC8LCwpCUlIT58+ejoKAAfn5+Nc4fMWIEzpw5g4iICKSlpSEqKgoREREYOnSoxjwLCwvs2rULb731Fh4+fKiPj0JERFr0pFIWN02JiIjo2cl/a40MsBInEdXN2X00LDt2QN69HFz6/oTU4RAREekU92iIGkenSVmNzZJUKBSIiopC9+7dMX36dPTp0wdvvfUW0tPTm7ymsXCZNAEW7axw/246Lv94WupwiIiIdEKhUMDFxQXR0dHiMUEQEB0dDTc3txrPiYmJgYuLi5jE7eDgAC8vLxw+fFhjXmhoKA4dOoTjx4/XG4eZmRmUSqXGICIiaVVtnHLTlIiIiLTh90lZ5WVlEkZCRM3dCO+pAID4bw+ioqxc4miIiIh0h3s0RI2n06SsxmZJ+vn5oX379pgyZQpiYmKQlpaGkydP4sKFC01eEzCOf5SjZvkAAE7t2gvhqd7uREREhqJjx46Qy+VQq9Uax9VqNWxsbGo8JyIiAp988glOnz6NkpIS3Lx5Ez/++COCg4PFOT4+Phg8eDACAgIaFEdAQADy8vLE8fsEciIiksaTpCxWymqsuXPnAgDu3r2L3NxcxMTEYMKECbXOl8vl+Pjjj3H9+nUUFhYiMTER48eP11e4REREeiFXVFbhLC0uljgSImrOOjnYw3GoCyrKyxH3zXdSh0NERKRT3KMhajydJWU1JUvy1VdfRWxsLEJDQ5GVlYWLFy8iICAAJiYmTV4TMPx/lL3dhsKmpwOKHv+Kn/YdlDocIiKiZmX06NFYunQpFi5ciMGDB2Pq1KmYOHEili1bBgDo2rUrNmzYgD/+8Y8obuCX7cHBwbC0tBSHra2tLj8CERE1gNi+sJSVshqr6m/k0aNHY8iQIfj+++/x3XffoV+/fjXODwoKwrx58/Duu++iX79+2Lx5M/bt24dBgwbpM2wiIiKdYsI3ETWE229Vsq6cPINHWep6ZhMRERkf7tGQsZPrauG6siSdnJxqPKdHjx4YN24cdu3aBS8vLzg6OuLLL7+EQqFAYGBgk9YEKv9RhoSEiK+VSqVBJWa99GZllayf9v0Pxb8WSBwNERGR7uTk5KCsrAwqlUrjuEqlQlZWVo3nrFq1Cjt27MDWrVsBAJcuXYKFhQW++uorfPrpp3BxcYFKpcK5c+fEc+RyOV566SW88847MDc3R8VTVShLSkpQwvZYRETNilzBjdOmOnr0KADgxo0byM/Px7Jly7BgwQIMHz4cV65cqTb/zTffxKeffoojR44AADZv3gwPDw8sXrwYb775pl5jJyIi0hUx4Zt/+xFRLcxat4Lrq14AgJjd+ySOhoiISPe4R0PUeDpLymoKExMTZGdn4y9/+QsqKipw7tw52NraYsmSJQgMDGzyuob8j7KTgz36jhqBiooKnP73XqnDISIi0qnS0lIkJCTA3d0d331XWRJeJpPB3d0dGzdurPGcNm3aVLthLy8vF889fvw4nJ2dNd7fvn07kpOTsXbt2mrnEhFR82T628ZpuYH+7acvJiYmmDFjBiwsLBAbG1vjHHNzcxQVFWkcKywsxMiRI+tc28zMDObm5uJrpVL57AETERHpSFWlrPJSJnwTUc0GTfBEa0slcu7cxdWYeKnDISIi0jnu0RA1ns7aFzYlSzIzMxNXr17V+IeVlJSEzp07Q6FQNGlNQzfyjRkAgCsnTuP+XcOp/kVERFSbkJAQvPXWW5g9ezacnJywadMmWFhYYPv27eKc5cuXi//74MGDWLBgAXx8fNC9e3d4eHhg1apVOHjwICoqKvD48WNcvnxZY/z666+4f/8+Ll++LMVHJCKiJmCLoWeXkZGB4uJibN68GVOnTkVSUlKN8yIjI+Hv7w9HR0fIZDJ4eHhg2rRp6Ny5c53rBwQEIC8vTxyGVMGaiKihRo0ahQMHDiA9PR2CIGDy5Mn1njN69GgkJCSgqKgI165dw5w5czTe//DDD/HTTz8hLy8ParUa+/btQ+/evXX1EYyGXFFVKYv3FkRUsxE+la0L4/buhyAIEkdDRESkH/Xt0fzrX//SmM89GjJ2OkvK+n2WZJWqLMnanrY9c+aM+KVuld69eyMjIwOlpaVNWtOQtba0xJDfSuOe/L//SBwNERGRfuzZswcffPABAgMDkZiYiEGDBmHChAnIzs4W59jY2Ij/OygoCJ9//jmCgoJw5coVbN26FZGRkZg3b54U4RMRkY6ILYZYzaLJRo4ciWHDhmHTpk0IDw9H3759a5z33nvv4dq1a0hOTkZJSQk2btyI7du31/vkYnBwMCwtLcVha2uri49BRNSsWVhY4Pz583j77bcbNL979+44dOgQfvjhBwwaNAjr16/H119/jT/84Q/inNGjRyM0NBTDhw+Hp6cnFAoFjh07hjZt2ujqYxgFUzHhm1U4iai6bv37olv/vigrKcFP+w9JHQ4REZHe1LdH07VrV4353KMhAgRdDW9vb6GwsFCYPXu24OTkJGzevFl48OCB0KlTJwGAEB4eLqxevVqc37VrVyE3N1f45z//KfTq1Uvw8vISsrKyhKVLlzZ4zYYMpVIpCIIgKJVKnX12fYyxvn8UPr8YK/jvDZc8FmMfUlxThnIdczSfIdU1xWuZQ5uD1zGHoQxeUxz1DV4j1cfo2TOFzy/GCm8EL5c8lpY2arqeoqKihM2bN9d5nrm5udClSxcBgLBmzRrh0qVLz/xzOTgaM0aNGiUcOHBASE9PFwRBEF5//fVq19TKlSuFjIwMoaCgQIiKihIcHR2rrePl5SXExcUJBQUFwoMHD4R9+/Y1OAZexxzPMgRBECZPnqxx7Olras2aNcLFixc15kRERAhHjhypdd2OHTsKgiAIo0aNanAsvJarjz4vDhc+vxgrvL87TPJYWtrg9cRR3zCEa8Qn8CP+/dGMBr8T5DCEweuYw1AG9805DGFo85qSQ4f27NkDa2trBAYGwsbGBomJiRpZknZ2dhpP0t69exfjx4/HunXrcOHCBaSnp2PDhg1Yu3Ztg9c0FiZyU7F14amduyWOhoiIiIiISFpipSy2GNIKExMTmJub1zmnuLgYGRkZkMvleO2117Bnzx49RUdUqari0LZt27Bv375q7//tb3/DX//6V8yZMwepqalYtWoVIiMj0a9fPxQXFwMApk2bhi1btmDp0qX4/vvvIZfL4ezsrO+PQlQrNzc3REdHaxyLjIzE+vXraz3HysoKzVWYVwAAIABJREFUAPDgwYNa55iZmWn8nlcqlc8YqeERWyOXslIWEWlqbanEoAkeAICY3dXvQYiIiIiIqug0KQsAQkNDERoaWuN7Y8eOrXYsLi4Obm5uTV7TWDzvPgbtbFTIv/8AvxyJrv8EIiIiIiIiAyZni6EmW758OYDKB6dkMhneeOMNjBkzBuPHjwcAhIeHIz09HUuXLgUADB06FLa2tkhMTIStrS1WrFgBExMTfPbZZ5J9BjJOR48exdGjR2t9f9GiRQgKCsKBAwcAALNnz4ZarcaUKVOwe/dumJqaYsOGDViyZAm2bdsmnpeUlKTz2IkaysbGBmq1WuOYWq2GlZUVWrVqhaKiIo33ZDIZ1q9fj9OnT+Py5cu1rhsQEIAVK1boImSDwYRvIqrNkFe9YNa6FTKuXsetxAtSh0NEREREzZiJ1AFQ07z0pg8AIGb3t9x0ICKtCAgIAADk5eVBEAQIglDnZsScOXPEeVWjsLBQX+ESERERaXhSzYIbp41lbW0NAEhISMDx48fh6uqK8ePHi5VZ7Ozs0LlzZ3F+q1atEBQUhCtXrmDfvn1IT0/HyJEjkZubK0n8RDVxcHBA586dNSoM5eXlIT4+XnwYcPDgwejatSsqKipw7tw5ZGRk4PDhw+jfv3+t65qZmUGpVGoMouYkNDQUzs7OeP311+ucFxwcDEtLS3HY2trqKcKWQ66ovLco53evRPSUEd5TAQAx//lW4kiIyJA0do8GAN577z0kJyejoKAAt2/fRkhISL1Vr4mISL+YlNUC2Q3oj+4Dn0dZSQli97A0LhFpl6OjI2xsbGBjY4ORI0fWOTc3N1eca2NjA3t7ez1FSUREpD8LFy5EamoqCgsLERcXB1dX1zrnN+QLscauSfUz/a2aBTdOG++dd94BUJmcpVKp4OnpqZHIMnbsWPj6+oqvT548if79+6N169awtrbGnDlzkJmZqfe4iepiY2MDADVWGKp6r0ePHgCAFStWICgoCJMmTcLDhw/x448/4rnnnqtx3YCAAOTl5YkjPT1dh5+CCMjKyoJKpdI4plKpkJubW61K1hdffIFJkyZh7Nix9V6bJSUlyM/P1xik6UkVTiZ8E9ETjkNd0MnBHkW//opzhyKlDoeIDFBD92hmzpyJNWvWYOXKlejbty/mzp0LHx8frF69Wo/REhFRfXTevpC076U/egMAfjkShfz7DySOhogMTXZ2doO/jBUEodomR33MzMw0Nqb5ZDkRETVn3t7eCAkJwfz58xEfH49FixYhMjISffr0wb1796rNr/pCzM/PDzExMejduzfCwsIgCAIWL17cpDWpYaqqWXDjlIgaysSk8lnFTz/9FN9+W1npwtfXF3fv3sWMGTPw1VdfVTsnODgYISEh4mulUsnELNKp2NhYeHl5aRzz9PREbGysxrEvvvgCU6dOxZgxY3Dr1i09Rmi4xPaFrMJJRL8zwmcaACDh4FEUFxRIHA0RGaKG7tGMGDECZ86cQUREBAAgLS0NERERGDZsmK5DJCKiRmClrBbGSmWNAX8YBwA4tXOPxNEQkSFKSUnBjRs3sHPnTnTr1q3OuW3btsWtW7dw+/Zt7N+/H/369at3fT5ZTkRELYm/vz+2bNmCsLAwJCUlYf78+SgoKICfn1+N83//hVhaWhqioqIQERGBoUOHNnlNahhx45RJWUSEyupCAGqsMFT1XlWFtytXrojvl5SU4ObNm7Czs6txXVYXomdlYWGBgQMHYuDAgQAqW20OHDhQ/Pt7+fLlGvM3b96MHj16YO3atejTpw8WLFgAb29vrFu3TpwTGhqKWbNm4Y033kB+fj5UKhVUKhVatWqlvw9mgEzFSlmswklElZQdO8B57EsAgBh2MSEiHWnoHk1MTAxcXFzE6usODg7w8vLC4cOH61yfLdmJiPSLSVktzIuvT4epXI7rP59DevJVqcMhIgNy9uxZAMC0adOwYMECODg44NSpU2jbtm2N81NSUuDn54fJkydj1qxZMDExQUxMDGxtbev8OcHBwbC0tBRHffOJiIikolAo4OLiotHGTRAEREdHw83NrcZz6vtCrClrAvzCrCHk3Dglot9JTU1FZmYm3N3dxWNKpRLDhg0TKwwlJCSgqKgIffr0EefI5XJ0794daWlpeo+ZjMOQIUOQmJiIxMREAMC6deuQmJiIwMBAAE9ab1a5desWJk6cCE9PT5w/fx6LFy/Gn//8Zxw7dkycs3DhQrRr1w4nTpxAVlaWOHx8fPT3wQyQXMGEbyJjZfFcO/huWIN3wjdrjIXbQmGqkCP13HlkXbshdZhEZGAau0cTERGBTz75BKdPnxYfLvnxxx8RHBxc58/hg/NERPrF9oUtiKKVOdxmTAEAnNq5W+JoiMjQREVFAQAuX76M/Px8xMfHIy0tDd7e3ti2bVu1+XFxcYiLixNfx8TEICkpCfPmzcMnn3xS688pKSlBCTdLiYioBejYsSPkcnm1Vr1qtRpOTk41nhMREYGOHTvi9OnTkMlkUCgU2LRpk/iFWFPWBCq/MFuxYsWzfSADxxZDRMbHwsICjo6O4uvu3bsDALp27YqkpCSsX78ey5Ytw7Vr15CamopVq1YhIyMD+/fvBwDk5+dj8+bNWLlyJe7cuYO0tDQsWbIEALB37169fx4yDidOnIBMJqv1/QULFuCPf/xjtXMGDx5c6zl1rUdNx4RvIuM1Zs5MOI8bXev7p/7N+wQi0r7G7tGMHj0aS5cuxcKFCxEfHw9HR0ds2LABy5YtQ1BQUK0/hy3ZiYj0i0lZzZR1dzuYPVVivO9LI9DGyhL376bj8o+nJYqMiIxFbm4url69qrHJUZeysjL88ssvDZ5PRERkiJr6hVh9+IVZ/eQKbpwSGZshQ4bgxx9/FF9XJcB+9NFHmDVrFj777DNYWFjgq6++Qrt27XD69GlMmDABxcXF4jlLlixBWVkZduzYgdatWyM+Ph7jxo3Do0eP9P1xiKiZYcI3kXEyVSgwdOorAICjoVuqVcQqyM3DjbO/SBEaERmZ+vZoVq1ahR07dmDr1q0AgEuXLol//3z66acQBKHG8/jgPBGRfjEpqxka+cYMTA3wr/X9U7v2Qqio0GNERGSMLCws0LNnT+zYsaNB801MTPD888/X26+ciIiopcjJyUFZWRlUKpXGcZVKhaysrBrPqe8LsaasCfALs4Z4Us2CG6dExuLpikNKpRJ5eXlYsGCBeGz58uVYvnx5rWuUlZVhyZIlYoUsIqIqVfcW5bwHIzIqAzzHom375/BInY3jW8JRUV4udUhEZKTq26Np06YNKp7aLy7/7XeWTCarNSmLiIj0y0TqAEiTidwUY/1mAQDy7z9Arvqexrj+8zn89O1BiaMkIkNUVb3Dzs4Obm5u2LdvH8rLyxEREQEACA8Px+rVq8X5H3/8MTw9PeHg4IAXXngBO3fuhL29Pb7++mtJ4iciItK20tJSJCQkwN3dXTwmk8ng7u6O2NjYGs+p7wuxpqxJDWP6WzULbpwSERGRNoiVspjwTWRURnhPBQDEf/MdE7KISK8au0dz8OBBLFiwAD4+PujevTs8PDywatUqHDx4sNp3U0REJB1WympmBniMRTtVJ+Tl3EfQH6ainOWxiUhPbG1tAQAJCQm4d+8eTp8+jeHDhyMnJwdA5R8Cv7+Rf+6557BlyxbY2Njg4cOHSEhIwIgRI5CUlCRJ/ERERLoQEhKC8PBwnD17Fj/99BMWLVoECwsLbN++HUDlF2Lp6elYunQpgMovxPz9/fHLL7+I7Quf/kKsvjWpacRKWfwbioiIiLTgSWtk3lsQGQubXj3Rw2UQysvKEMeH44lIzxq7RxMUFARBEBAUFARbW1vcu3cPBw8exEcffSRJ/EREVDMmZTUzL83yAQDE7P6WCVlEpFe+vr547bXXYG1tjfz8/Grvjx07VuO1v78//P1rb7VKRERkCPbs2QNra2sEBgbCxsYGiYmJmDBhArKzswE07Qux+takppErqqpZsFIWERERPTtTsTUy7y2IjEVVlazLP5xCXvY9iaMhImPT2D2a8vJyBAYGIjAwUF8hEhFREzApqxmxG9Af9gOdUVZSgtg9+6QOh4iIiIiIAISGhiI0NLTG95r6hVhda1LTiJWyWM2CiIiItEBsX8gHZ4mMglnr1nCZNAEAEMP9GSIiIiLSEhOpA6AnqqpknTt0DI8fPJQ4GiIiIiIiopZD3DhlUhYRERFpgZyVsoiMyuBJ49GqrQXu3bqN6/FnpQ6HiIiIiAwEk7KaiXaqThjgWfmU/cmduyWOhoiIiIiIqGXhxikRERFp05PWyEz4JjIGVa0LY/bugyAIEkdDRERERIaCSVnNxIszX4OpXI5r8WeRefW61OEQERERERG1KKaK35Ky2GKIiIiItKAq4bucCd9EBs9+oDNsnXqjtKgYP+8/LHU4RERERGRAmJTVDJi1boXh06cAAE6xShYREREREVGjPWlfyI1TIiIienbivQUTvokM3gjvaQCAxMhoFOblSRwNERERERkSJmU1Ay6vvIw2VpbIuX0XV07GSB0OERERERFRi/OkmgU3TomIiOjZmbI1MpFRaGNliYHjxwEAzvznW4mjISIiIiJDw6QsiclkMrw0ywcAcGrXHggVFRJHRERERERE1PIozM0BcOOUiIiItENe1RqZCd9EBm3olElQmJvjzpVk3Ll0RepwiIiIiMjAMClLYn1eHIZODvYozH+Mn/cfkjocIiIiIiKiFsdULhf/N1sMERERkTY8aY3MewsiQyWTyTB8xhQAQOxuVskiIiIiIu1jUpbEqqpk/bTvIIoLCiSOhoiIiIiIqOWp2jQFWCmLiIiItEPO9oVEBq/XcFdY23dDYf5j/HIkSupwiIiIiMgAMSlLQqoe3dHnxeGoKC/H6X/vlToc0qLU1FQIglBtbNy4sdrcw4cPQxAETJ48WYJIiYiIiIhavqpNU4DVLIiIiEg7xEpZrMJJZLBG+EwDAJw9cBglhUUSR0NEREREhkhe/xTSlVG/Vcm6/ONpPEjPlDga0iZXV1eYmpqKr52dnREdHY29ezWT7xYtWgRBEPQdHhERERGRQTH9bdO0vKwMQkWFxNEQERGRIZArWCmLyJBZqazRf8xIAEDsnn0SR0NEREREhopJWRJpY2WJIa+8DAA4ueM/EkdD2paTk6Px+sMPP8T169dx4sQJ8djAgQOxePFiDBkyBFlZWfoOkYiIiIjIYDxpL8RKFkRERKQdVZWyynl/QWSQhr82GSamprj+8zmob96SOhwiIiIiMlBMypLI8OlToGhljrtXUnAzIVHqcEiHFAoFZs2ahZCQEPFY69at8e9//xtvv/021Gp1g9YxMzODubm5+FqpVGo9ViIiIiKilqiqkkU52wsRERGRlihaVX4Px0pZRIbHRG6KYa+9CgCI3f2txNEQERERkSEzkToAY2QiN8XImdMBACd37pY4GtK1KVOmoF27dggLCxOPrVu3DjExMThw4ECD1wkICEBeXp440tPTdRAtEREREVHLU1XJgpumREREpA2m8ifPMpcx6ZvI4PQfMwpWnayRl3MfF4+fqP8EanFSU1MhCEK1sXHjRgCAubk5Nm7ciJycHOTn5+Obb75Bp06dJI6aiIiIDBGTsiQw0HMcrFSVN/yJR6OlDod0bO7cuThy5AgyMzMBAK+88grGjRuHRYsWNWqd4OBgWFpaisPW1lYX4RIRERERtThsX0hERETaVJXwDTDpm8gQjfCZBgD46duDKC8rkzga0gVXV1fY2NiIw8PDAwCwd+9eAJUPzr/yyiuYMWMGRo8ejS5duuDbb1k1jYiIiLSP7Qsl8NKbrwMAzvznv2yvYeDs7Ozg4eGBadOmicfGjRuHnj174tGjRxpz//vf/+LUqVMYO3ZsjWuVlJSghF8CERERERFVw0pZREREpE1VCd8Ak76JDE1H+27oPdwVFRUViPvmO6nDIR3JycnReP3hhx/i+vXrOHHiBCwtLTF37ly88cYb+OGHHwAAvr6+SE5OxrBhwxAfHy9FyERERGSgWClLz+wHOsPu+X4oLS5G3N79UodDOubr64vs7GwcOnRIPLZmzRoMGDAAgwYNEgcAvP/++/D19ZUqVCIiIiKiFkuslMWHXoiIiEgLTH9L+C4vK4NQUSFxNETPbuHChUhNTUVhYSHi4uLg6upa69w5c+ZUa/lWWFioMWf79u3V5hw5ckTXH0MrRnhPBQAknYzBw8wsiaMhfVAoFJg1axa2bdsGAHBxcYGZmRmio590sklJSUFaWhrc3NzqXMvMzAxKpVJjEBEREdWFlbL07KVZPgCAc4eO4fGDhxJHQ7okk8ng6+uL8PBwlJeXi8fVajXUanW1+bdv38atW7f0GCERERERkWEwVbBSFhEREWkPWyOTIfH29kZISAjmz5+P+Ph4LFq0CJGRkejTpw/u3btX4zm5ubno06eP+FoQhGpzjhw5ovGQcXFxsfaD1zK5uTlcJ08EAMTu2SdxNKQvU6ZMQbt27RAWFgYAsLGxQXFxMXJzczXmqdVq2NjY1LlWQEAAVqxYoaNIiYiIyBCxUpYetbNR4XmPMQCAU7t2SxsM6ZyHhwfs7e3Fpy+IiIiIiEg3qjZOy7lxSkRERFogV/x2b8EqnGQA/P39sWXLFoSFhSEpKQnz589HQUEB/Pz8aj1HEATx4WK1Wo3s7Oxqc4qLizXmPHr0SJcfQytemOCONlaWeJCeieQzcVKHQ3oyd+5cHDlyBJmZmc+8VnBwMCwtLcVha2urhQiJiIjIkLFSlh69OPM1mMrluBZ3FplXb0gdDulYVFQUZDJZg+Y2dB4REREREVUnN6uqlMWNUyIiInp2T+4tWIWTWjaFQgEXFxcEBweLxwRBQHR0dJ1t2tq2bYtbt27BxMQE586dw9KlS3HlyhWNOWPGjIFarcbDhw/x/fffY9myZXjw4EGN65mZmcHc3Fx8LVXLNzfvaQCA2L372ZrUSNjZ2cHDwwPTpk0Tj2VlZcHc3BxWVlYa1bJUKhWysupuaVlSUoIS/reBiIiIGoFJWXpi1roVhk+fDAA4uZNVsoiIiIiIiLRFbDFUyi/HiYiI6NmxfSEZio4dO0Iul0OtVmscV6vVcHJyqvGclJQU+Pn54cKFC7CyssIHH3yAmJgY9O/fH+np6QCAo0eP4ttvv0Vqaip69uyJ1atX48iRI3Bzc0NFDclOumr5puzQHnYD+jfooee2HdrDfkB/lJWW4qd9B7UeCzVPvr6+yM7OxqFDh8RjCQkJKCkpgbu7O7799lsAQO/evWFvb4/Y2FipQiUiIiIDxaSsZ9BzyAvo1r9vg+ba9OqBNpaWyLl9F0knz+g4MiIiIiIiIuMhV7BSFhEREWkPK2WRMYuLi0Nc3JPWfjExMUhKSsK8efPwySefAAB2737y4PmlS5dw4cIF3Lx5E2PGjMH3339fbc3g4GCEhISIr5VKpZjg1VQymQwLtoVC1aN7o867GPUDHj94+Ew/m1oGmUwGX19fhIeHo7y8XDyel5eHrVu3IiQkBA8ePEBeXh6++OILxMTEID4+XsKIiYiIyBAxKauJ2tt2xrwt/4SpvHH/Jzy1azcEQdBRVERERERERMbnSTULbpwSERHRs3tShZMJ39Sy5eTkoKysDCqVSuN4Q9q0VSkrK8Mvv/wCR0fHWuekpqbi3r17cHR0rDEpSxct33qPGAZVj+4oKSxCevLVBp1TUlCAo19+rdU4qPny8PCAvb09tm3bVu29999/HxUVFfjvf/8Lc3NzREZGYuHChRJESURERIaOSVlN9OLM6TCVy3Hv1m3cOn+pQefk5+Qgdu93Oo6MiIiIiIjIuLDFEBERtRSjRo3CkiVL4OLigi5dumDKlCn47ru6vy8cPXo0QkJC0L9/f9y5cwdBQUEIDw/XmLNw4UIsWbIENjY2OH/+PN599138/PPPuvwoBs1UwUpZZBhKS0uRkJAAd3d38XeNTCaDu7s7Nm7c2KA1TExM8Pzzz+Pw4cO1zrG1tUWHDh2QmZmplbgbYoTPVABA3H+/w3dr1+vt51LLERUVVWtry+LiYrzzzjt455139BwVUe0CAgIAVFZzq5KcnIy+fWvu2vTDDz9gzJgx1Y4fOnQIkyZN0kmMRETUeCZSB9ASmbdpg2HTXgUA7P9sPf6zbFWDxqH1m1DOp6uIiIie2cKFC5GamorCwkLExcXB1dW1zvnvvfcekpOTUVBQgNu3byMkJATm5ubi+x9++CF++ukn5OXlQa1WY9++fejdu7euPwYREWmJaVWLoVJunBIZk1GjRuHAgQNIT0+HIAiYOHFitTkrV65ERkYGCgoKEBUVVWuVDzMzM/zyyy8QBAEDBw7UdehkxCwsLHD+/Hm8/fbbDZrfvXt3HDp0CD/88AMGDRqE9evX4+uvv8Yf/vAHcY63tzdCQkKwcuVKDB48GOfPn0dkZCSsra119TEMXlXCdzkTvskAhISE4K233sLs2bPh5OSETZs2wcLCAtu3bwcAhIeHY/Xq1eL8jz/+GJ6ennBwcMALL7yAnTt3wt7eHl9/XVlhysLCAp999hmGDRsGe3t7jBs3Dt999x2uX7+OyMhIvXymdqpO6PfSiwCA2D379PIziYj0xdHRETY2NrCxscHIkSNrnTdt2jRxno2NDfr374+ysjLs3btXj9GSseIeDVHDMSmrCVyneKG1si2yU9OQcjqu/hOIiFqA3z+FIQgCBEFAUlJSg8718fGBIAjYt49fgpDuNXbDYebMmVizZg1WrlyJvn37Yu7cufDx8dH4wnH06NEIDQ3F8OHD4enpCYVCgWPHjqFNmzb6+lhERPQMuHFKZJzqS27529/+hr/+9a+YP38+hg0bhl9//RWRkZEaX/xW+eyzz5CRkaHrkIlw9OhRfPzxx9i/f3+D5s+fPx+pqan44IMPkJycjNDQUHzzzTd4//33xTn+/v7YsmULwsLCkJSUhPnz56OgoAB+fn61rmtmZgalUqkx6Al5VcI37y3IAOzZswcffPABAgMDkZiYiEGDBmHChAnIzs4GANjZ2aFz587i/Oeeew5btmxBUlISDh8+DEtLS4wYMUL8nrC8vBwDBgzAgQMHcPXqVWzduhUJCQkYNWqU1lsU1mbY9MkwMTXF9Z8SkJ2appefSUSkL9nZ2VCr1VCr1bh//36t8x4+fCjOU6vV8PT0REFBAZOySOe4R0PUeIKxDaVSKQiCICiVykafK5PJhA//t0f4/GKsMMJnmuSfhaN5jGe5plrSz+Qw7LF69WpBEAShZ8+egkqlElQqldChQ4d6z7O3txfu3LkjnDhxQti3b1+jfy6vZY7Gjri4OOGLL74QX8tkMuHu3bvC3//+9xqvpy+++EKIjo7WWOP//b//J5w6darWn9GxY0dBEARh1KhRDYqJ1zGHtgevKY76Bq8RzTHJ/x3h84uxwiuL35U8lpY4pLqeeB1zaHMIgiC8/vrrGtdURkaGsHjxYnGOpaWlUFhYKPj4+GicO2HCBOHKlStC3759BUEQhIEDBzb45/I65niWIQiCMHnyZI1jT19TJ06cENatW6cx509/+pPw6NEjAYCgUCiE0tLSauuEhYUJ+/fvr/VnL1++XKgJr+XK4TplovD5xVjhz19+LnksLXHwdyNHfeNZrhETuanwyfEDwucXY4WB490l/ywczWPwbxoOQxhVezQZGRnCjRs3hJ07dwrdunVr8PkXLlwQ/vWvf9U7z8zMTFAqleLo0qULr2OORo269miA6r8buUfD0RKHNq8pvVTKakz5ujlz5ogVWqpGYWGhxpzt27dXm3PkyBFdfwwAgNOoEbC274aCvDycPaCfn0lEpE8NfQoDAExMTLBr1y4sX74cN2/e1FOEZMwUCgVcXFwQHR0tHhMEAdHR0XBzc6vxnJiYGLi4uIj3Hw4ODvDy8sLhw4dr/TlWVlYAgAcPHtT4Pp8qJyJqXqoqZZXp6cl8Imr+HBwc0LlzZ437xry8PMTHx2vcN3bq1AlbtmzBm2++iYKCgnrX5X0g6ZuNjQ3UarXGMbVaDSsrK7Rq1QodO3aEXC6vcY6NjU2t6wYHB8PS0lIctra2Oom/pZIrWCmLqLlyHvsSrDpZIy/nPi4dPyF1OEREWnP27FkAlW0JFyxYAAcHB5w6dQpt27at91xXV1c8//zzYqvZugQEBCAvL08c6enpzxw7GQ/u0RA1ns6Tshpbvg4AcnNzNXrg2tvbV5tz5MgRjTkzZ87U5ccQvfSmDwAg/psDKHkqWYyIyBCkpKTgxo0b2LlzJ7p161bn3E8++QTZ2dnYtm1bg9fnjRI9i6ZsOEREROCTTz7B6dOnUVJSgps3b+LHH39EcHBwjfNlMhnWr1+P06dP4/LlyzXO4R+uRETNi9hiqJQbp0RUqeresL77xrCwMGzevBkJCQkNWpf3gWQoSkpKkJ+frzHoCSZ8EzVfI7ynAQDivz2A8rIyiaMhItKeqKgoAMDly5dx7NgxeHl5oV27dvD29q733Llz5+LChQv4+eef653L5Hx6FtyjIWo8nSdl+fv7Y8uWLQgLC0NSUhLmz5+PgoIC+Pn51XqOIAgaPXCrepv/XnFxscacR48e6fJjAABsevVE7+GuKC8rw+mIb3T+84iI9KmxT2G8+OKLmDt3Lt56661G/RzeKJG+jR49GkuXLsXChQsxePBgTJ06FRMnTsSyZctqnB8aGgpnZ2e8/vrrta7JP1yJiJoXbpwSUVO8++67UCqVtX4RXBPeB5K+ZWVlQaVSaRxTqVTIzc1FUVERcnJyUFZWVuOcrKwsfYZqUJ7cWzDhm6g5se5uh17Dh6CivBxxe7+TOhwiIp3Kzc3F1atX4ejoWOe8Nm3a4PXXX8fWrVsbtC6T80nfuEdDxk6nSVlNKV8HAG3btsWtW7dw+/Zt7N8teA3eAAAgAElEQVS/H/369as2Z8yYMVCr1UhOTsaXX36J9u3b17qetqqyvPTHykzki8dP4FGWup7ZREQtS2Oewmjbti127NiBt956q94Wh0/jjRI9i6ZsOKxatQo7duzA1q1bcenSJezfvx9Lly5FQEAAZDKZxtwvvvgCkyZNwtixY+tMGOQfrkREzYtcwY1TItJUdW9Y133juHHj4ObmhuLiYpSWluL69esAKh9YCQsLq3Fd3geSvsXGxsLd3V3jmKenJ2JjYwEApaWlSEhI0Jgjk8ng7u4uzqHGMxWrcDLhm6g5cfOeCgBIOhnDPRoiMngWFhbo2bMnMjMz65w3Y8YMmJubY+fOnXqKjIwZ92iIGk+nSVlNKV+XkpICPz8/TJ48GbNmzYKJiQliYmI0Nu2PHj2K2bNnw93dHX//+98xevRoHDlyBCYmNX8cbVRlsXiuHQZPGg8AOLVjd6PPJyJqaep6CqNnz55wcHDAwYMHUVpaitLSUsye/f/Zu/O4qMr9D+AfYGBQGpeUQFARxX0BRVS8etFEo+xXVi5lllvlcjHUUnMLQ6+mJuZFb3ZNkbIsE7U0BSNJSwETRXFDUdxAQIVYZBWf3x/G1MQOM5w5Zz7v1+v7ejlnnjnneYYPBx7n4ZzX8dxzz6G4uBht27atcL/8RYnqojYfODRs2BAPHz7U2VZSUqJ9bamgoCC88MILePLJJ3Ht2jX9d56IiAxG+8Epr5RFRH9ISkrC7du3dX5v1Gg06Nu3r/b3xrfffhuurq5wc3ODm5sbnnnmGQDAmDFjsHDhQkn6TcpnY2MDV1dXuLq6AgCcnZ3h6uqKVq1aAQD8/f112m/cuBFt27bFypUr0bFjR0ybNg2jR4/G2rVrtW0CAwPx5ptv4vXXX0enTp3wySefwMbGBsHBwfU3MIUpvVJWCRd8ExkNS2s1PJ5/9LP62I5dEveGiEj/li1bBgBo3bo1PD09sXv3bpSUlGD79u0AgJCQECxfvrzM6yZPnow9e/YgIyOjXvtLpomf0RDVjjBUtWjRQgghRL9+/XS2r1y5UkRHR1drHyqVSly+fFkEBARU2MbZ2VkIIcSTTz5Z7vNWVlZCo9Foy8HBQQghhEajqfZYvN+aINbERwm/rzYb7P1iybc0Gk2NMyXHY7KUXX/PlI2Njbh3756YMWNGmbZqtVp07dpVp3bv3i0iIiJE165dhaWlZa2Py2JVVaNHjxb5+fni9ddfF506dRIbN24UGRkZ4oknntDm6aOPPtK29/f3F1lZWWLMmDGiTZs2wtvbW1y+fFl8/fXX2jYbNmwQmZmZ4p///Kews7PTlrW1dbX6xByz9F3MlHHV9OnTRVJSksjPzxfR0dHCw8OjwraRkZGiPPv27dO2CQ4OLvP8gQMHmJE61OQNH4k18VGiz4hnJe+LHGvmzJlCCCGysrJEVlaWOHbsmPDx8an0NX5+fuLixYsiLy9P3LhxQwQGBgq1Wl2j4zLHrLqWjY2NcHV1Fa6urkIIId577z0hhBCdO3cWAMTcuXNFRkaG+L//+z/RrVs3sXv3bnHlypUKs+rk5CSEEMLV1bXafWCOWTUtLy+vcn9XCA4OFgDEtm3bymTKy8tLnDx5UhQUFIjExEQxfvz4Mvv917/+Ja5duyYKCgpEdHS06NOnT436xSzr1rOzfcWa+Cjxf++U/T8RVtXFPLGqqtpkxGPEcLEmPkosOLBTmJmZST4GlnGVVOcdnu9Y+qydO3cKIYQoKCgQN2/eFNu3bxdt27bVPh8ZGan9nbG0OnToIIQQwtvbu9bHZY5ZNa3KPqMBIL766iudTPEzGpYcS8+ZMlxHLS0tRXFxsXj++ed1tm/dulXs2bOn2vvZsWOH+Oqrryptk56eLt566y2DvIEWKpXwP7RXrImPEj2fGSZ5AFjGV1yUxVJCrVu3TgghRNeuXYWnp6c4ePCgSE9PF82bNxcAREhIiFi+fHmFrw8ODha7d++u8XGZZVZtqqIPHErztG3bNm1bCwsL8f7774vLly+LvLw8cf36dbF+/XrRuHFjbZuKlPdhR3nFHLP0XcyU8dTo0aNFQUGBmDBhgujcubP49NNPRUZGhrC1tS23fdOmTXX+46BLly6iuLhY53wSHBws9u/fr9OuSZMmzEgdasqm/4g18VGi13DO12pTo0aNEkII4ebmJtq3by+WLVsmCgsLRZcuXcpt/8orr4j8/HzxyiuvCCcnJzF06FCRnJws1qxZU6PjMsesulZFi1v++rvgBx98IG7fvi3y8/PFjz/+KNq3b1/h/rgoi2UMxQ+VjaNGvDdLrImPEk/PmCJ5X+RYzBOrqqpNRvy+2izWxEeJwZPGSd5/lvEVf36ylFDMMUtOVdkfhRw5ckQnU/yMhiXH0memVDCgv16+7rvvvgPw5+Xr1q9fX619mJubo3v37ti/f3+FbRwdHdGsWbMq76lblRYdXOA5akSZ7Y1sm6ORbXNkpd3BmYOH6nQMIiJjVXqb2NjYWNy5cwe//vor+vXrh7t37wJ4dMncv19elEgqGzZswIYNGyp8ftq0adp/l5SUICAgAAEBARW2//t9y4mISs2ePRubNm3C1q1bAQBTp07F8OHDMWnSJKxcubJM+8zMTJ3HL7/8MvLy8vDtt9/qbC8sLCxzm/fKWFlZQa1Wax9rNJpy2w0YOxJPOLep9n6Vwq5tGwDAA95iqFbCwsIAAFeuXEFOTg4WLVqEadOmoV+/fjh//nyZ9v3798fRo0e1t1C4fv06tm/fjr59+1Z6nOrmmKi6Dh8+rPN7nEajQXZ2ts7vgv7+/mVuB1eR69ev8/dCor/pMXQwXPq4S92Neteud08AwINi/m5BVJ9smjbBU9PfKLPd0lqN1t274EFREY7v3idBz4iIiOivKvuMZvjw4cjOztY+5mc0ZOoMuigLAAIDAxESEoITJ07g+PHjmDlzJmxsbBAcHAzg0f1vk5OTsWDBAgDA4sWLER0djcTERDRp0gRz5syBk5MTPvvsMwCAjY0N/P39ERoaitTUVLRr1w6rVq1CYmIiwsPD69TXZi0d8I+XX6rw+aNfh6LkwYM6HYOIyFhNnDgRL730EmxtbZGTk1Pm+cGDB1f5eiIiIiWxtLSEu7s7VqxYod0mhEBERAQ8PT2rtY/Jkyfj66+/Rl5ens72QYMGIS0tDZmZmTh06BAWLVqEjIyMCvczf/58LFmypMrjdfnnP9DxH/2q1Tclys38XeouyJ65uTlGjRoFGxsbREVFldvm2LFjGDduHDw8PPDbb7/B2dkZzzzzDL744otK913dHBMRkfFo07NHpf9fqnS5GZlVNyIivbG2san0nHP64CHc5+/8RERERCQjBl+UtWPHDtja2iIgIAD29vaIi4uDj48P0tPTAZS98krTpk2xadMm2NvbIzMzE7Gxsejfvz8uXLgA4NFKyh49emD8+PFo0qQJUlJScPDgQSxevBhFRUV16mt60nWEb9hU7nP5Obk4tmN3nfZPRERERETy0bx5c6hUqjJXtEpLS0OnTp2qfL2Hhwe6d++OyZMn62wPCwvDrl27kJSUhHbt2mH58uU4cOAAPD09K7wq5YoVKxAYGKh9rNFokJycXKbdiX1huBYXX53hKc7vaXeQFBsndTdkLSUlBdbW1sjNzcULL7ygnYf/3fbt29G8eXP8+uuvMDMzg6WlJT755BOdBYzlqW6OiYjIeCT8Go2C7LJ/uGUK8rJzELs3TOpuEJmUvOycCj+jKeZVsoiIiIhIhgy+KAuo/PJ1f7/yyuzZszF79uwK91VQUAAfHx+99q9UetJ1HNy4xSD7JiIiIiIi0zJ58mScOXMGv/32m872b775Rvvvs2fP4syZM7h69SoGDRqEQ4fKv116UVFRtf4I5eS+ul09mEzbgAEDYGFhgZEjRyIkJAReXl7lLszy8vLCggULMH36dMTExMDFxQXr1q3DokWLsGzZsgr3X90cExGR8Ug4FoOEYzFSd4OITER+djY/oyEiIiIiRTGXugNERERERETG6O7du3jw4AHs7Ox0ttvZ2SE1NbXS1zZs2BAvv/wyNm/eXOVxkpKScOfOHbi4uNSpv0R1dfXqVZw8eRILFizA6dOn4efnV267pUuX4osvvsDmzZtx9uxZ7NmzBwsWLMD8+fNhZmZWz70mIiIiIiIiIiIiMk5clEVERERERFSO4uJixMbGYsiQIdptZmZmGDJkCKKioip97ahRo6BWq7Ft27Yqj+Po6IhmzZrh9u3bde4zkb6Ym5tDrVaX+1zDhg3L3GqzpKQEALgoi4iIiIiIiIiIiOgP9XL7QiIiIiIiIjkKDAxESEgITpw4gePHj2PmzJmwsbFBcHAwACAkJATJyclYsGCBzusmT56MPXv2ICMjQ2e7jY0N/P39ERoaitTUVLRr1w6rVq1CYmIiwsN560GShr+/PwCgdevWMDMzw9ixYzFo0CA89dRTAMrmfO/evZg9ezZOnTqlvX3h0qVLsXfv3jKLtYiIiIiIiIiIiIhMFRdlERERERERVWDHjh2wtbVFQEAA7O3tERcXBx8fH6SnpwN4tIjl74tQOnTogIEDB2Lo0KFl9ldSUoIePXpg/PjxaNKkCVJSUnDw4EEsXrwYRUVF9TImor+ztbUFAMTGxiIrKwtnzpzBU089hYiICABlc75s2TIIIbBs2TI4Ojrizp072Lt3LxYuXChJ/4mIiIiIiIiIiIiMERdlERERERERVWLDhg3YsGFDuc8NHjy4zLZLly5VeAu3goIC+Pj46LV/RHXl6+uL119/Hba2tsjJySnz/N9zXlJSgoCAAAQEBNRXF4mIiIiIiIiIiIhkx1zqDhARERERERERERERERERERERESkJF2URERERERERERERERERERERERHpkUnfvlCj0UjdBVIIKbPEHJO+SJ0lqY9PyiB1jqQ+PikHs0TVxayQPkidI6mPT8rBuTkpgdRZkvr4pAzMEVUXs0L6InWWpD4+KYPUOZL6+KQcnJuTEugzSya5KKv0DUxOTpa4J6Q0Go0GOTk59XYsgDkm/avPHJceD2CWSb+YY1KK+s4yyQfPO2QI/PlJSsG5OSkBz8mkBJzPUEV4ziFD4c9PUgLmmJSCc3NSAn3k2AyA0E935KVDhw5ISEiAo6OjIieGGo0GycnJih0fYHxj1Gg0SElJqddjKj3HgPF9nfXN2MYnRY4B5WfZ2L7O+mZs42OODcfYvtb6ZmzjkyrLJB9KP+8Y2/ekvhnb+Pjz0zCM7etsCMY2Rs7NDcPYvs76Zmzj4znZMIzt66xvxjY+zmeoKko/5wDG932pb8Y2Pv78NAxj+zrrm7GNjzk2DGP7OhuCsY2Rc3PDMLavs74Z2/j0lWOTvFIWANy+fRsAkJOTYxRfUENR+vgA4xmjFH0wlRwDyh+jsYxPqj6YSpY5vvrrhxRMJceA8sdoLOMzhj6QcTOV8w7HV3/9kAJzrBzGMkbOzQ1L6WM0lvHxnGxYHF/99YOoMqZyzgGUP0ZjGR9/fhoWx1d//ZACc6wcxjJGzs0NS+ljNJbx6asP5nrZCxEREREREREREREREREREREREQHgoiwiIiIiIiIiIiIiIiIiIiIiIiK9sgCwROpOSKWkpAQ///wzSkpKpO6KQSh9fIBpjLEqpvAeKH2MSh9fdSn9feD4TIMpvA9KH6PSx0fKo/TMcnymQenvg9LHB5jGGKtiCu+B0seo9PFVl9LfB46PyLiYQmaVPkalj6+6lP4+cHymQenvg9LHB5jGGKtiCu+B0seoxPGZARBSd4KIiIiIiIiIiIiIiIiIiIiIiEgpePtCIiIiIiIiIiIiIiIiIiIiIiIiPeKiLCIiIiIiIiIiIiIiIiIiIiIiIj3ioiwiIiIiIiIiIiIiIiIiIiIiIiI94qIsIiIiIiIiIiIiIiIiIiIiIiIiPVL0oqzp06cjKSkJ+fn5iI6OhoeHR4Vtu3Tpgp07dyIpKQlCCPj5+dVjT2unJuN74403cOTIEWRkZCAjIwM//vhjpe2NRU3G+MILL+C3335DZmYmcnNzcerUKYwbN64ee2sYSs8xoPwsM8ePKD3LzPGfmONH5JhjgFn+KyVnmeRD6ecdnnP+pORzDnP8JznmGGCWAeXnGFB+lpnjR5SeZeb4T0rOMcmH0s85AM87f6Xk847Ss8wc/4k5foQ5Nk7MsvJzDCg/y6aaY6HEGj16tCgoKBATJkwQnTt3Fp9++qnIyMgQtra25bbv3bu3WLVqlRgzZoxISUkRfn5+ko9Bn+Pbtm2bmDZtmnB1dRUdO3YUW7ZsEZmZmcLBwUHysehrjF5eXmLEiBGiU6dOom3btuLtt98WxcXFYtiwYZKPpb7eA7nluDZjlFuWmePavQ9yyzJzrFvM8aOSW45rM0ZmmcUybCn9vMNzjm4p9ZzDHOuW3HJcmzEqMctKz3Ftxii3LDPHtXsf5JZl5li3lJpjlnxK6eec2oyR5x15ltKzzBzrFnP8qJhj4ytmWfk5rs0Y5ZZlE86x5B0wSEVHR4ugoCDtYzMzM3Hr1i0xb968Kl+blJRk9N+UdRkfAGFubi6ysrLEa6+9JvlYDDVGACI2NlYEBARIPhYp3gM55FgfX2djzzJzXPf3QQ5ZZo6rLubY+HOsj681s8xi6beUft7hOafqUsI5hzmuvIw9x/oYIyD/LCs9x/r4Oht7lpnjur8Pcsgyc1x1KSHHLPmU0s85dR0jwPOOXErpWWaOqy7mmDk2hmKWlZ9jfXydjT3LpppjRd6+0NLSEu7u7oiIiNBuE0IgIiICnp6eEvZMP/QxvoYNG8LS0hIZGRmG6mad6GOMTz75JDp27IgjR44YqpsGpfQcA8rPMnP8iNKzzBxXjTmWB2a5akrIMsmH0s87POdUTQnnHOa4asacY4BZBpSfY0D5WWaOH1F6lpnjqikhxyQfSj/nADzvVIcSzjtKzzJzXDXm2PgpPccAswwoP8eA8rNsyjlWSd0BQ2jevDlUKhXS0tJ0tqelpaFTp04S9Up/9DG+lStXIiUlRSf0xqS2Y2zUqBGSk5OhVqtRUlKC6dOnG+0Yq6L0HAPKzzJz/IjSs8wcl485lh9muXxKyzLJh9LPOzznlE9p5xzmuGrGnGOAWQaUn2NA+Vlmjh9RepaZ4/IpLcckH0o/5wA871REaecdpWeZOS4fcywvSs8xwCwDys8xoPwsm3KOFbkoiyo3b948vPzyyxg0aBAKCwul7o5e5eTkwM3NDY899hiGDBmCwMBAXL16FYcPH5a6a2QASs0yc2xamGNSCmaZiOoTzzmkBErNMcAsmxqlZpk5Ni3MMRHVN553SAmYY1ICpeYYYJZNjVKzrIQcK3JR1t27d/HgwQPY2dnpbLezs0NqaqpEvdKfuozvnXfewXvvvQdvb2/Ex8cbspt1UtsxCiFw5coVAMDp06fRuXNnzJ8/X1bflKWUnmNA+Vlmjh9RepaZ4/Ixx/LDLJdPaVkm+VD6eYfnnPIp7ZzDHFdMDjkGmGVA+TkGlJ9l5vgRpWeZOS6f0nJM8qH0cw7A805FlHbeUXqWmePyMcfyovQcA8wyoPwcA8rPsinn2FzqDhhCcXExYmNjMWTIEO02MzMzDBkyBFFRURL2TD9qO745c+Zg8eLF8PHxQWxsbH10tdb09TU0NzeHWq02RBcNTuk5BpSfZeb4EaVnmTmuHubY+DHL1SP3LJN8KP28w3NO9cj9nMMcl08uOQaYZUD5OQaUn2Xm+BGlZ5k5rh6555jkQ+nnHIDnneqS+3lH6VlmjquHOTZuSs8xwCwDys8xoPwsm3qOhRJr9OjRIj8/X7z++uuiU6dOYuPGjSIjI0M88cQTAoAICQkRy5cv17a3tLQUrq6uwtXVVSQnJ4tVq1YJV1dX0a5dO8nHoo/xzZ07VxQUFIgXX3xR2NnZacvGxkbysehrjO+9957w9vYWzs7OolOnTmL27NmiqKhITJ48WfKx1Nd7ILcc12aMcssyc2waWWaOmePy3ge55bg2Y2SWWSzDltLPOzznmMY5hzmWd45rM0YlZlnpOa7NGOWWZebYNLLMHJtGjlnyKaWfc2ozRp535FlKzzJzzByX9z4wx8ZXzLLyc1ybMcotyyacY8k7YLD617/+Ja5duyYKCgpEdHS06NOnj/a5yMhIERwcrH3s5OQkyhMZGSn5OPQxvqSkpHLH5+/vL/k49DXGpUuXikuXLom8vDxx7949cfToUTF69GjJx1Cf74Ecc1zTMcoxy8xxzd8HOWaZOWaOlZDjmo6RWWaxDF9KP+/wnGMa5xzmWN45rukYlZplpee4pmOUY5aZ45q/D3LMMnNsGjlmyaeUfs6p6Rh53pFvKT3LzDFzzBwbf45rOkalZlnpOa7pGOWYZVPMsdkf/yAiIiIiIiIiIiIiIiIiIiIiIiI9MJe6A0RERERERERERERERERERERERErCRVlEREQSGD9+PIQQcHJyAgBERkYiMjJSr8cwxD6JiIiIiIg4nyEiIiIiIjnjnIaI6gsXZRERERGRQXh6esLf3x+NGzeWuitEREREREQ1xjkNERERERHJFeczxoGLsoiIiIzAsGHDMGzYMKm7QaRX/fv3x5IlS9CkSROpu0JEREREBsT5DCkV5zREREREpoFzGlIizmeMAxdlERERGYHi4mIUFxdL3Q0iSZiZmUGtVkvdDSIiIiKqJc5nyNRxTkNEREQkb5zTkCnjfMawuCiLjIJarYaZmZnU3SDSKwsLC1haWkrdDZKJ8u4t7ujoiN27dyM3NxdpaWkIDAzEsGHDIISAl5eXTts333wTiYmJyMvLQ0xMDAYMGFCf3Scqw9/fHx999BEA4Nq1axBCQAgBJycnCCEQFBSEsWPH4uzZsygsLISPj4/EPSYiqhvOaUiJOKeh6uJ8hpSIcxoiMiWcz5AScT5DNcE5DSkN5zPGg4uyZKp169bYsGEDLl68iLy8PNy9exc7duyAk5NTmbaNGzdGYGAgkpKSUFBQgJs3byIkJATNmjXTtlGr1fD390dCQgLy8/ORkpKC0NBQtG3bttp9ioyMRHx8PHr16oWjR48iLy8PV69exZQpU3TaeXl5QQiBMWPGYOnSpbh16xby8vLQqFGj2r8hJCuPPfYY1q5dq81kWloaDh48iJ49ewIAkpKSEBwcXOZ1f/+FqDRLo0aNwvvvv49bt24hOzsb3377LRo1agQrKyusXbsWaWlpyMnJwZYtW2BlZVWjvgYHByMnJwfOzs4ICwtDbm4ukpOTsXjxYp12pT/A3nnnHfj5+SExMRGFhYXo0qVLLd4hIsDa2ho//fQTnnrqKaxfvx7//ve/MXDgQKxatapM20mTJuF///sfUlNTMXfuXBw9ehTff/89WrVqJUHPiR7ZtWsXvvrqKwDAzJkzMW7cOIwbNw537twBADz55JNYu3YtvvnmG/j5+eHatWsS9paIpMA5DckZ5zREleN8hpSAcxoiqgznMyRnnM8QVY1zGpI7zmeMh0rqDlDteHh4oH///vj6669x69YttGnTBtOmTcPPP/+MLl26ID8/HwBgY2ODX375BZ07d8aWLVtw8uRJNG/eHM899xxatmyJe/fuwdzcHPv27YO3tze2b9+OdevWQaPRYOjQoejWrRuuXr1a7X41bdoU+/fvx44dO7B9+3aMHj0aGzduRFFRUZlf4BYvXoyioiJ89NFHUKvVKCoq0ut7RMZr48aNGDlyJNavX4/z58+jWbNmGDBgADp37oxTp07VeH/z589Hfn4+PvzwQ7i4uGDGjBkoLi7Gw4cP0bRpUyxZsgT9+vXDxIkTkZSUhKVLl9Zo/xYWFggLC0N0dDTmzp0LHx8fBAQEQKVSwd/fX6ftxIkTYW1tjf/9738oLCxERkZGjcdDBABvvfUWOnbsiFGjRmHnzp0AgE2bNuH06dM67VQqFZYvX45Tp05h8ODB2svrnj9/Hps2bcLNmzfrve9EABAfH4+TJ09i7Nix2LNnD65fv67zfMeOHdG9e3dcuHBBoh4SkdQ4pyE545yGqHKcz5AScE5DRJXhfIbkjPMZoqpxTkNyx/mMcREs+ZW1tXWZbX379hVCCDFu3DjttiVLlgghhBgxYkSF+5owYYIQQoiZM2fWqU+RkZFCCCFmzZql3WZpaSlOnjwpUlNThUqlEgCEl5eXEEKIxMTEcsfBUn5lZmaKoKCgCp9PSkoSwcHBZbZHRkaKyMhI7ePSLJ05c0abLwDiyy+/FCUlJeKHH37Qef3Ro0dFUlJSjfoaHBwshBBi3bp1Otv37t0rCgoKRLNmzQQA4eTkJIQQ4vfffxfNmzeX/D1mGX+NHz9eCCGEk5OTAMrmOywsTCQnJ5d53bvvviuEEMLLy0sAEP369RNCCPHWW2/ptFOpVCIzM1NnnyxWfdc777yjk/PSEkKIn376SfL+sVgsaYtzGpaci3MalqkX5zMsUynOaVgsVkXF+QxLzsX5DIvFOQ3LNIrzGeMo3r5QpgoKCrT/VqlUePzxx5GYmIjMzEz06tVL+9xLL72EuLg47Nmzp8J9vfTSS7hz5w6CgoLq3K/i4mJ8+umnZR7b2dnB3d1dp21ISIjOOMh0/P777+jbty9atGihl/19/vnnePDggfZxTEwMzM3NsWXLFp12MTExaNWqFSwsLGp8jPXr15d5rFar4e3trbM9NDQUd+/erfH+if7OyckJiYmJZbYnJCSUaQcAly9f1tn+4MGDGv0VHVF9S0pKkroLRCQxzmlIzjinIaoc5zNkCjinITJtnM+QnHE+Q1Q1zmlI6TifqT9clCVT1tbW+OCDD3Djxg0UFhbi3r17uHv3Lpo2bYrGjRtr27Vr1w5nz56tdF/t2rVDQkICSkpK6tyvlJQU5OXl6Wy7dOkSAKBNmzY62/mNbrrmzp2Lbt264ebNm4iJiYG/vz+cnZ1rvXvl4foAACAASURBVL8bN27oPM7KygKAMpcEzcrKgoWFhc73SHWUlJSU+cWJuSYiqpvSy/gTkeninIbkjHMaIiLinIbItHE+Q3LG+QwREXE+U3+4KEumgoKCsHDhQuzYsQOjR4/G0KFD4e3tjbt378LcXB5fVn6jm65vv/0Wbdu2xYwZM5CSkoI5c+bg3Llz8PHxAQAIIcp9XUV/PVHRZLWi7WZmZrXodfUw16Qv169fR7t27cps79ixY5l2ANC+fXud7SqVqk4TaSJ9qOh8TkQEcE5D8sY5DVHlOJ8hpeCchogqwvkMyRnnM0RV45yGlIDzGeMgj98MqYyRI0ciJCQE7777LkJDQxEREYFff/0VTZo00Wl35coVdOvWrdJ9XblyBR07doRKpapzvxwcHNCwYUOdbR06dAAAXLt2rc77J+VITU3FJ598ghdeeAHOzs64d+8eFi5cCADIzMwsk2Xgz0uA1jcLCwu0bdtWZxtzTYa2f/9+ODo6YuTIkdptDRo0wFtvvaXT7sSJE0hPT8fUqVNhaWmp3T5hwgQ0bdq03vpLVJ779+8DQLnndCIizmlI7jinIaoY5zOkFJzTEFFFOJ8hueN8hqhynNOQEnA+Yxy4KEumSkpKyqwknzFjRplf2kNDQ+Hm5oYRI0ZUuK/Q0FDY2trC19e3zv2ytLTElClTyjxOT09HbGxsnfdP8mdubo5GjRrpbLtz5w5SUlKgVqsBPJqE9uvXT+eXl+HDh6N169b12te/+vv3h6+vL4qKivDTTz9J1CNSuk2bNuHy5cv4/PPPsWLFCrz99ts4cuRImcuPP3jwAIsWLULPnj1x6NAh+Pr6Ys2aNVi1ahWuXLkiUe+JHin92f/vf/8b48aNw5gxY8r8xyARmS7OaUiuOKchqhrnM6QUnNMQUUU4nyG54nyGqHo4pyEl4HzGONR92T1JYt++fXjttdeQlZWF8+fPw9PTU3tp3L9avXo1Ro4ciW+//RZbtmxBbGwsHn/8cTz33HOYOnUqzpw5g88//xyvv/461q5diz59+uCXX36BjY0NvL298d///hfff/99tfuVnJyMefPmoU2bNrh06RLGjBmDnj174s0338SDBw/0/TaQDGk0Gty6dQs7d+7E6dOnkZubC29vb/Tp0wezZ88GAHz22WcYNWoUwsLCsGPHDrRr1w7jxo1DYmKiJH3Oz8+Hj48Ptm7dipiYGDz99NN49tln8e9//7vM9xyRvuTn52PIkCEICgrCjBkzkJeXhy+//BIHDhxAeHi4TttNmzbBwsICc+bMwerVqxEfH4/nnnsOS5culaj3RI+cOHECixYtwtSpU+Hj4wMLCwu0adNG6m4RkZHgnIbkinMaoqpxPkNKwTkNEVWE8xmSK85niKqHcxpSAs5njIdgya8aN24sNm/eLNLT00V2drY4cOCA6NChg0hKShLBwcE6bZs2bSr+85//iJs3b4qCggJx48YNERwcLB5//HFtG2tra7F06VJx5coVUVhYKFJSUsSOHTuEs7NztfsUGRkp4uPjRa9evcTRo0dFXl6eSEpKEtOnT9dp5+XlJYQQ4qWXXpL8fWTVf1laWoqVK1eKU6dOiaysLJGTkyNOnTolpk6dqtNu1qxZ4ubNmyI/P1/88ssvolevXiIyMlJERkZq21SUpfHjxwshhHB3d9fZ7u/vL4QQolmzZtXub3BwsMjJyRHOzs4iLCxM5Obmitu3bwt/f39hZmambefk5CSEEOKdd96R/D1mKbtKc+/l5SV5X1gsFovFqktxTsOSa3FOw2LVvjifYbFYLJZSivMZllyL8xkWq27FOQ2Lxappmf3xD6I6i4yMRPPmzdG9e3epu0KkN8HBwRg5ciQ0Go3UXSECAHh5eeHnn3/GoEGDcPjwYam7Q0REpCic05AScU5DxoTzGSIiIsPhfIaUiPMZMjac0xBRTZlL3QEiIiIiIiIiIiIiIiIiIiIiIiIlUUndATJ+TZs2hZWVVYXPl5SU8J7NJDuNGjVCgwYNKm2TlpZWT70hIiIiIkPinIaUiHMaIiIiItPA+QwpEeczRERkKrgoi6q0a9cuDBo0qMLnr127Bmdn5/rrEJEerFu3DhMmTKi0jZmZWf10hqgGDh8+zGwSERHVEOc0pESc05AccT5DRERUc5zPkBJxPkNyxTkNEdWUGQAhdSfIuPXq1QtNmzat8Pn8/HwcO3asHntEVHedO3eGg4NDpW1++umneuoNERERERkS5zSkRJzTEBEREZkGzmdIiTifISIiU8FFWURERERERERERERERAo3depUTJs2DW3atAEAnDt3DgEBAQgLCwMAqNVqrFmzBi+//DLUajXCw8Mxffp0pKena/fRqlUrfPLJJxg8eDByc3MREhKC+fPno6SkRIohEREREREZNZO9faGDgwNycnKk7gYphLm5OZYsWYLnn38e9vb2SElJwdatW7Fs2bJKX+fl5YXAwEB07doVN2/exLJlyxASElLt4zLHpG8ajQYpKSn1flxmmfSJOSalkCrLJB8875A+8ecnKYUUWWaOSd94TiYl4HzGON26dQvvvfceLl++DDMzM4wfPx7fffcdevbsifPnz2Pt2rUYPnw4Ro0ahaysLKxfvx67du3CgAEDADz6f/AffvgBqamp6N+/P1q0aIHPP/8cxcXFWLhwYY36wnMO6Rt/fpISMMekFJybkxLoK8cmeaUsBwcHJCcnS90NUqDXX38dR44cQe/evREcHIyFCxciKCio3LZt2rTB2bNnsXHjRnz22WcYMmQIPv74YwwfPhwHDx6s8ljMMRmKo6Njvf6ixCyTITDHpBT1nWWSD553yBD485OUoj6zzByTofCcTErA+Yw83Lt3D3PmzMHOnTtx584djB07FqGhoQCAjh074uLFi+jXrx9iYmLg4+ODffv2wcHBQXv1rClTpmDlypWwtbVFcXFxtY7Jcw4ZCn9+khIwx6QUnJuTEugjxyZ5pazSFZKOjo5cLUl6sWvXLnh7e2PPnj3IycnB9evX8corr6BPnz4Vvmbq1KlISkrCu+++CwC4ePEiBgwYgFmzZlVrURZzTPqm0WiQnJxc73lilkmfmGNSCqmyTPLB8w7pE39+klJIkWXmmPSN52RSAs5n5MHc3ByjRo2CjY0NoqKi4O7uDisrK0RERGjbJCQk4Pr16/D09ERMTAw8PT0RHx+vczvD8PBwbNy4EV27dkVcXFy5x7KysoJarS6znecc0hf+/CQlYI5JKTg3JyXQZ45NclFWqZycHH5Tkl4cPXoU3t7ecHFxwalTp9CjRw8MGDAAs2fPrvA1np6eOhNc4NEE9uOPPy63/d8nrhqNBgBzTMrBLJMSMMdEVN943iElYI5JCZhjUgpmmUj5unXrhqioKFhbWyM3NxcvvPACLly4ADc3NxQWFiIrK0unfVpaGuzt7QEA9vb2SEtLK/N86XMVmT9/PpYsWVJmO885pC/x8fEAgOzsbJ3tGzZsgK+vb5n248ePx9atW3W2FRQUoEGDBrU6PrNMSsAckxIwx2SMzKXuAJESBAYGAgBOnDiBoqIinDp1Ch9//DG++uqrCl9T0QS2cePGsLa2LtN+/vz5yM7O1hYvwUhERERERERERERENZGQkAA3Nzf07dsXn3zyCUJCQtC5c2eDHnPFihVo1KiRthwdHQ16PDI9gwYNAgC4uLjA3t4e3t7eAIBvv/22wtdkZWXB3t5eW05OTvXRVSIiIjIxJn2lLCJ9efHFFwEAkydPxokTJ+Dm5oaPP/4YKSkp+Pzzz/VyjBUrVmgXfwF/XjKPiIiIiIiIiIiIiKg6iouLceXKFQDAyZMn4eHhAT8/P3zzzTdQq9Vo3LixztWy7OzskJqaCgBITU1Fnz59dPZnZ2enfa4iRUVFKCoq0vdQiLTu3bsHAEhPT0dOTg7ee+89JCYm4vDhwxW+RghR5g/niYiIiPSNV8oi0oOlS5cCAEJDQ3H27Fls27YNa9euxfz58yt8TWpqqnbCWsrOzg5ZWVkoKCgo076oqEh7yUVeepGIiIiIiIjkZPr06UhKSkJ+fj6io6Ph4eFRaXs/Pz9cvHgReXl5uHHjBgIDA6FWq7XPm5ubIyAgAFevXkVeXh4SExMxd+5cnX0EBwdDCKFTBw4cKPd4VlZWOHXqFIQQcHV1rfuAiYiIZMLc3BxqtRqxsbEoKirCkCFDtM916NABTk5OiIqKAgBERUWhe/fusLW11bYZOnQosrKycP78+XrvO1F5LC0tMW7cOGzZsqXSdo899hiuXbuGGzduYM+ePejSpUuV+7aysoJGo9EpIiIiosrwSllEetCwYcMy20pKSmBuXvG6x6ioKDzzzDM624YOHaqd4BIREREREREpwejRoxEYGIipU6ciJiYGM2fORHh4ODp27Ig7d+6Uaf/KK6/gww8/xKRJk3Ds2DF06NABW7duhRAC77zzDgBg3rx5mDZtGsaPH49z586hd+/eCA4OLrOvAwcOYOLEidrHhYWF5fZx1apVSElJgZubm55GTUREZHyWL1+OAwcO4MaNG9BoNBg7diwGDRqEp556CtnZ2di8eTMCAwORkZGB7OxsBAUF4dixY4iJiQEAHDx4EOfPn8cXX3yBuXPnwt7eHsuWLcOGDRt4JSwyGiNGjECTJk2wdevWCtskJCRg0qRJOHPmDBo3box3330Xx44dQ9euXSu9Q8n8+fOxZMkS/XeaiIiIFE2YWmk0GiGEEBqNRvK+sJRR27ZtE0IIMXLkSOHk5CRGjBgh0tPTxYcffqhts3z5chESEqJ93KZNG5GbmytWrlwpOnbsKKZNmyaKi4vFsGHDqnVM5pil75IqU8wyS5/FHLOUUswUq6piRlj6LP78ZBm6oqOjRVBQkPaxmZmZuHXrlpg3b1657YOCgkRERITOto8++kj88ssv2sd79+4Vn332mU6bPXv26GQqODhY7N69u8r++fj4iPPnz4vOnTsLIYRwdXWt9tiYY5a+i+dklhKKeTLe+uyzz0RSUpIoKCgQaWlp4scffxTe3t7a59VqtVi/fr24d++eyM3NFaGhocLOzk5nH61btxY//PCDuH//vkhPTxerV68WFhYWzAhL0vprpsLCwsT3339fo9erVCpx+fJlERAQUGk7KysrodFotOXg4MAss/RW/D2QpZSSIlPMMUvfpc9M8UpZRHowZ84cvPrqq1izZg1sbW2RkpKCTz/9FAEBAdo2LVq0QOvWrbWPr127huHDh2Pt2rXw8/PDrVu38MYbb+DgwYNSDIGIiIiIiIhI7ywtLeHu7o4VK1ZotwkhEBERAU9Pz3Jfc+zYMYwbNw4eHh747bff4OzsjGeeeQZffPGFTpu33noL7du3x+XLl9GjR49y9zdo0CCkpaUhMzMThw4dwqJFi5CRkaF9/oknnsCmTZswYsQI5OXlVTkeKysrndso8pY1REQkJ2+88UalzxcWFsLX1xe+vr4Vtrlx4waGDx+u764R6UWrVq3g7e2NF198sUave/DgAU6dOgUXF5dK2xUVFfGqcERERFQjXJRFitLGrQcGTRgLC5Vhol2Qm4sv31tSZntubi4AoFu3bsjJySn3tX+9XUKpw4cPo1evXnrtI8mfVYMGGDFvJjTNmxnsGD9+ugU34s8bbP9ERERExuDpGVPg0LG91N0wKqcOHMTJH/iHIHLSvp8HBowdCXNzC6m7UiuNG9pApVKhz7jRaD50oHa7Xfcu6ODYEpPXf1Tu6w7En8SxqCgAgMrCAj+fjUO6YzNMXv8R7v+ehQ8XL0OjRo1w8eJFlJSUwMLCAgEBATq3kwkLC8OuXbuQlJSEdu3aaW/Z5OnpiYcPHwIAtm7dio0bNyI2NhZOTk5Vjoe3rKkda81jeH6OHx57vKnUXTEq4f/dhFvnE6TuBhERkd40a+mIp9+eAnXDhgY7xlcLPkB+dvmfw4wbNw7p6en44YcfarRPc3NzdO/eHfv379dHF0nmzMzM8PTbU9GifTuDHSN27wHEhf9ksP0TEZHx4KIsUpSnZ7wFlz7uBtt/zr2MqhsR1ZHnqBHo+9JzBj1G9M49Bt0/ERGRHAwcOBBz5syBu7s7HBwcMGLECHz33XcVtvfy8sLPP/9cZru9vT3S0tIAAP7+/mU+rL948SI6d+6sfaxWq7FmzRq8/PLLUKvVCA8Px/Tp05Genq6XcdEjzVq1hPdbE6TuhtG5df6i1F2gGvJ+awJcPOT7xzw2KksAgHPPHrDOb6vd3szOEQ1sNOji9Y8yr2lp0wjDW7rgUOo1pObloomVNQZ16AxL22aIuZOM39PSMXr0aLz66qsYO3Yszp07Bzc3N6xbt05nP998843232fPnsWZM2dw9epVDBo0CIcOHcKMGTOg0Wh0ruJVlRUrViAwMFD7WKPRIDk5udqvN1VdvQagzwvPSt0No/Pr9p1Sd4GIiEivBo4bjZ5PDzXoMSwsK/5o89VXX0VISAhKSkp0toeEhCA5ORkLFiwAACxevBjR0dFITExEkyZNMGfOHDg5OeGzzz4zaN9JHlz6uGPIG68b9BjXTscbdP9ERGQ8uCiLFMPMzAwtu3YCAOxbuwG5GZl6P8aDQl6Wlgyv38jnATz6z1lDfWiWfPGyQfZLREQkJzY2Njh9+jS2bNmC3bt3V/t1HTp0QHZ2tvbx3xdTnT17Ft7e3trHDx480Hl+7dq1GD58OEaNGoWsrCysX78eu3btwoABA2o5EiqPumEDAEBedja+X/0fiXtjPFL4e6DslGb58Bdf4/alRIl7U3MqlQqTvw7FyR17cPh4tHZ7x7dnIc/GBl+vWFbmNf/790rs+mEvgkKCtdtOeA3Cgmm+mD1tOory8vH9pmB8+OGH2oVXZ8+eRYcOHbB48eIK+5KUlIQ7d+7AxcUFhw4dwpNPPglPT08UFhbqtDtx4gS+/PJLTJgwocw+eMua2rH6I8c3z13A0a9DJe6N8UhNvCJ1F4iIiPSqVddHf5BkyP/bLsit+JbTrVu3xpYtW8rdXnqlVABo2rQpNm3aBHt7e2RmZiI2Nhb9+/fHhQsXDNJnkpfezz8DADh/+CjOREQa5Bi8WioRkengoixSDNs2rWFtY4PCvHwcDtmOh3/7SwgiOWjr7oYnnJ1QmJeH/R9/gsK8iieYREREVDdhYWEICwur8evS09ORlZVV4fMPHjzQXjnr7xo1aoTJkydj7NixiIx89B97EydOxMWLF9G3b1/ExMTUuD9UPpXVo6vz5Gfn4rc9Nbt1BZExUVlZAQAuHD6KyzEnJO5N7cSeOIHWjzXWfi+amZnBNWgj1q9fX+73Z8miD5CSkKjzXDtrDR6+9RAnvtuPhw8fomHDhjofrAEoc0WEv3N0dESzZs1w+/ZtAMDbb7+NRYsWaZ93cHDAwYMHMWbMGJ6P9aw0x3eu3+Q5mYiISKHMLSy0t4//9atvcefajXrvQ6NGjZCTU/bWhoMHD9Z5PHv2bMyePbu+ukUyorZpiB7ej/Ly46dbcCP+vMQ9IiIiueOiLFKM0r/ASLl4iQuySLZKr5J1cv9BLsgiIiIyUnFxcVCr1Th79iyWLFmCY8eO6Tzfvn17JCcno6CgAFFRUZg/fz5u3rwJAHB3d4eVlRUiIiK07RMSEnD9+nV4enpWuAjAysoKarVa+1ij0RhgZMpSugCgpLhY4p4Q1Y3K8tECwwcyvjpTYGAgQkJCcOLECRw/fhwzZ86EjY0NgoMfXQnr77eT2bt3L2bPno1Tp04hJiYGLi4uWLp0Kfbu3atdiLV3714sXLgQN27cwLlz59CzZ0/4+vpqj2ljYwN/f3+EhoYiNTUV7dq1w6pVq5CYmIjw8HAA0J6bS+Xm5gIArly5wlsS6lnpQlk555iIiIgq94SzE6waWKMg9z7uXr9Z9QuIjJDrsCGwamCNtKvXuCCLiIj0gouySDFKb11485xhLolLZGgNGjVCj6GP/gIjZuf3EveGiIiI/u727duYMmUKTpw4AbVajTfeeAM///wz+vbti1OnTgEAYmJiMGHCBCQkJKBFixbw9/fHL7/8gm7duiE3Nxf29vYoLCwsc6WttLQ02NvbV3js+fPnY8mSJYYcnuJwAQAphYU2y/JdYLhjxw7Y2toiICAA9vb2iIuLg4+Pj/b2r3+/ncyyZcsghMCyZcvg6OiIO3fuaBdhlZoxYwaWLl2K//73v3jiiSeQkpKC4OBgzJkzB8Cjq2b16NED48ePR5MmTZCSkoKDBw9i8eLFvP2gBEoXyso5x0RERFS5Vn98RpN88RKEEBL3hqh2PP64deFv3/HqrkREpB/mUneASF9Kr5R18xxXrpM89f4/H1iq1Ui+cAk3zxnm3vXTp09HUlIS8vPzER0dDQ8PjwrbqlQqLF68GImJicjPz0dcXByeeuqpOu2TiIhIzi5duoT//e9/OHnyJKKiojB58mQcO3YMs2bN0rYJCwvDzp07ER8fj4MHD+KZZ55BkyZNMHr06Dode8WKFWjUqJG2HB0d6zocxbOw5AIAUgbtYpZieS8k2rBhA9q0aQNra2v069cPx48f1z43ePBgTJw4Ufu4pKQEAQEBaN++PRo2bAgnJyf4+vrqLGjNzc3FrFmz0KZNGzRs2FB7Na1SBQUF8PHxgZ2dHdRqNZydnTFlyhTtQrDyXL9+HWZmZjh9+rSeR09KuOIbERERVa5ll0eLsm6d5x/Okzw1a9USbd3d8LCkBLH7wg1yDH5GQ0RkergoixTB3MICjp06AOCVski+Sm9dGLVzj0H2P3r0aAQGBuKDDz5Ar169cPr0aYSHh8PW1rbc9suWLcOUKVMwY8YMdOnSBRs3bsTu3bvh5uZW630SEREpzfHjx+Hi4lLh81lZWbh06ZK2TWpqKtRqNRo3bqzTzs7ODqmpqRXup6ioCDk5OTpFleOVskgpVAq4UhaR9payzDEREZFilS7K4mc0JFelV8lKiDqO7PQ7et8/P6MhIjJNXJRFivBE2za8VznJWhu3HrB3aYvCvHyc2n/QIMeYPXs2Nm3ahK1bt+LChQuYOnUq8vLyMGnSpHLbv/baa1i+fDkOHDiApKQkbNy4Efv378c777xT630SEREpjZubG27fvl3h8zY2NmjXrp22TWxsLIqKijBkyBBtmw4dOsDJyQlRUVEG768p+fPqQlwAQPKm0l71jQsMSb60iwt5TiYiIlIkcwsLOHRsD4BXyiJ5MjMzQ+/nngYAnNhjmFsX8jMaIiLTpJK6A0T60PqPWxfeOn+R9yonWeo38jkAwOnwn1CQe1/v+7e0tIS7uztWrFih3SaEQEREBDw9Pct9jVqtRkFBgc62/Px8DBgwoNb7BAArKyuo1WrtY41GU6sxERER1ZWNjY3OVa6cnZ3h6uqKjIwM3Lx5E8uXL4ejoyPGjx8PAPDz80NSUhLOnTsHa2trvPHGG3jyyScxbNgw7T5Wr16NvXv34vr163BwcMAHH3yAkpISbN++HQCQnZ2NzZs3IzAwEBkZGcjOzkZQUBCOHTuGmJiY+n0DFI5XyiKl4JWySAkseE4mIiJSNP7hPMmdSx93NG1hj/zsHJyN/EXv++dnNEREpotXyiJFaNmVl8Ul+bLWPAbXYY+ulmGoWxc2b94cKpUKaWlpOtvT0tJgb29f7mvCw8Mxe/ZsuLi4wMzMDN7e3njxxRfRokWLWu8TAObPn4/s7GxtJScn13F0REREtdO7d2/ExcUhLi4OALB27VrExcUhICAAANCiRQu0bt1a297Kygpr1qxBfHw8Dh8+DFdXV3h7e+PQoUPaNi1btsT27duRkJCAHTt24N69e+jXrx/u3r2rbTNr1izs27cPoaGhOHLkCFJTU/Hiiy/W06hNx59XF+JCloEDB+L7779HcnIyhBB4/vnnK23/j3/8A7/++ivu3r2LvLw8XLhwATNnzqyw/bx58yCEwNq1a/XddZNnbmEBcwsLAMwyyRvPyURERMrWqktHAEDyxUv8w3mSpd5/3Lrw1IEfDfKHBPyMhojIdPFKWaQIrf64UtbNcxck7glRzbkPfwpWDaxx+/IV3DhzTuruaPn5+WHTpk24ePHRFeiuXLmC4ODgOl/2dsWKFQgMDNQ+1mg0/KWfiIgkcfjwYZiZmVX4/MSJE3Uer169GqtXr650n6+88kqVxy0sLISvry98fX2r11GqldKrC5XwqiywsbHB6dOnsWXLFuzevbvK9vfv38f69etx5swZ3L9/HwMGDMCnn36K+/fvY9OmTTpte/fujSlTpuD06dOG6r5JK80xAJQUM8skX7x6IRERkbK17FL6h/P8jIbkR23TED28BwMAfvvOMLcurA1+RkNEpAxclEWyZ6FSwaHjo9vO8Bd+kqN+o0YAAKINdJUsALh79y4ePHgAOzs7ne12dnZITU2t8DUvvPAC1Go1mjVrhpSUFHz44Ye4evVqrfcJAEVFRSjif8QTERGRgWkXABTzqixhYWEICwurdvu/XkEOAK5fv44XX3wRAwcO1FmUZWNjgy+//BJvvvkmFi1aVOV+eYuEmrP44+pCAK8wRPKmsvrjSlk8JxMRESlS6d1Mbp1PkLgnRDXnOmwIrBpYI+3qNdyIP2+QY/AzGiIi08XbF5LstejQDiorK+RlZSPjVorU3SGqkdbdu8ChgwuKCwoRuy/cYMcpLi5GbGwshgwZot1mZmaGIUOGICoqqtLXFhYWIiUlBSqVCi+99BK+++67Ou+TiIiIyNAsrHirLH1xc3ND//79cfjwYZ3tGzZswA8//ICffvqpWvvhLRJqrnRx4cOSEjwsKZG4N0S1x6sXEhERKZe5hQUcOrQHANw6f1Hi3hDVnMcfty405FWy+BkNEZHp4pWySPZa8taFZGQ8nn8GzVq3rFbbdu49AQCnDx5CfnaOIbuFwMBAhISE4MSJEzh+/DhmzpwJGxsbBAcHAwA+/fRTnfZ9OZWobQAAIABJREFU+vSBo6Mj4uLi4OjoiCVLlsDc3ByrVq2q9j6JiIiIpMJbZdXdzZs3YWtrC5VKhSVLlmDz5s3a58aMGYNevXrBw8Oj2vvjLRJq7s8cc3EhyZvKkgtliYiIlOqJtm1g1cAaBbn3cff6Tam7Q1QjzVq1RFt3NzwsKTHoH84D/IyGiMhUcVEWyV6r0nuVn+WiLJKeSx93vLxscY1fFx36nQF6o2vHjh2wtbVFQEAA7O3tERcXBx8fH6SnpwMAWrbUXUhmbW2NZcuWoW3btsjNzcX+/fvx2muvISsrq9r7JCIiIpIKFwDU3cCBA/HYY4+hX79++PDDD5GYmIivv/4aLVu2xLp16zB06FAUFhZWe3+8RULN/XnLN75vJG9cKEtERKRcrbp0BADcupAAIYTEvSECBo4bAxePntVq27RFCwBAQtRxZKffMWS3+BkNEZGJ4qIskr1W2itl8bK4JL2+L/4fAODa6fhq33s87eo1JJ08bchuaW3YsAEbNmwo97nhw4cjOztb+/jIkSPo2rVrnfZJREREJBXtAgAuZqm1a9euAQDOnj0LOzs7LFmyBF9//TXc3d1hZ2eHkydPatuqVCr885//hK+vL9RqNR4+fChRr5WFV8oipbBglomIiBSr9G4mvHUhGYPmrVtixLyZNX5dTOj3BuhNWfyMhojI9HBRFsmaSq2GvUtbAMAt3r6QJNagkQbdvQcBAHYvD+QklIiIiEhC2isMcQGAXpibm0OtVgMAfvrpJ3Tr1k3n+eDgYFy8eBErV67kgiw9+vOKb1xcSPL251XfeE4mIiJSmpalV8o6nyBxT4iAXsOfAgDciD+PmF3VW2iVm5GJs4eOGLJbRERkwsyl7gBRXTh0dIGFpQo59zLwexovxUnScvPxhqVajZRLiVyQRWRg06dPR1JSEvLz8xEdHQ0PD49K248cORIXLlxAfn4+zpw5g6effrrCtp988gmEEPDz89N3t4mIqB6VXmGohItZYGNjA1dXV7i6ugIAnJ2d4erqilatWgEA/P39ddpPnz4dzz77LFxcXODi4oJJkybh3XffxbZt2wAAubm5OHfunE7dv38f9+7dw7lz5+p3cAr3Z465kIXkTWXJ2xf+FeczRESkFOYWFnDo0B4AcJN/OE9GwP1ZHwDAL19+g+id31WruCCLqOY4pyGqPi7KIln789aF/GWfpNfnhWcBAMd375O4J0TKNnr0aAQGBuKDDz5Ar169cPr0aYSHh8PW1rbc9p6enti+fTs2b96Mnj17Ys+ePdizZ0+5l34eMWIE+vXrh+TkZEMPg4iIDOzPBQBczNK7d2/ExcUhLi4OALB27VrExcUhICAAAGBvb6/T3tzcHCtWrEBcXBxOnDiBf/3rX5g3bx7ef//9eu+7qePVhUgpePXCP3E+Q0RESvJE2zawamCNgtz7uHfjltTdIRPn5NoNzVu3RGFeHhdaERkQ5zRENcNFWSRrrbp2AgDcPMtFWSStFh3aoXW3LigpfoCTP4RL3R0iRZs9ezY2bdqErVu34sKFC5g6dSry8vIwadKkctv7+fkhLCwMH330ES5evIj3338fJ0+ehK+vr047BwcHBAUF4dVXX0UxP/gkIpI9Cy4A0Dp8+DDMzMzK1MSJEwEA06ZN02m/fv16dO/eHY899hiaNGkCd3d3bNy4EUKICo8xePBgzJo1y6DjMEUWVry6ECmDilnW4nyGiIiUpPQzmlsXEiqdLxDVh9KrZMVHHEZRfoHEvSFSLs5piGqGi7JI1lp2+WNR1jneKo6k5THi0VWyzv38C+5n/i5xb4iUy9LSEu7u7oiIiNBuE0IgIiICnp6e5b7G09NTpz0AhIeH67Q3MzPDF198gdWrV+P8+fNV9sPKygoajUaniIjIuGgXABRzAQDJl8qSiwtJGUqvlFVi4v+xbizzGYBzGiIi0o/Sz2hunednNCQtC5UKbj7eAIDYfQck7g2RchnLnIbzGZITLsoi2bJq0AB2bdsA4C/8JC0LlQruw58CwFsXEhla8+bNoVKpkJaWprM9LS2tzK2XStnb21fZft68eXjw4AH+85//VKsf8+fPR3Z2trZ4KV0iIuPDW2WREvDqQqQUFpbMMmA88xmAcxoiItKPll06AgBu8Q/nSWKdBnrCpkljZKXfweWYWKm7Q6RYxjKn4XyG5ISLski2HDt3gLmFBX5PS0fO3XtSd4dMWBevf+Cxx5siK/0OEo7FSN0dIqqhXr16wc/PDxMmTKj2a1asWIFGjRppy9HR0XAdJCKiWlFxAQApgHZxoYlfXYjk788FhsyyvtVmPgNwTkNERHVnbmEBx44dAAA3+YfzJLHSWxee2v8jxMOHEveGiGqCn9GQ0km6KGvevHkQQmDt2rXabWq1GuvXr8fdu3eRk5OD/2fvzsOiqtv/gb9hZkBFFhOcQTZRxDVFgQzL0BDTtJ9aZoU+uZUp2aWSZZgLIY9YFuZXJzNzIS3LNFFTxIdSn8cYMRdQcSUREGUAUXZZ5/cHzqGJRVCYYWber+s618Wc8znDfew0nDPn/tz3rl270KlTJ439nJyc8Ouvv6KoqAhKpRKfffYZRCKRtsMnHXPq0wsAcDPpko4jIWP31PiXAACn9kWjqrJSx9EQGbacnBxUVFRAKpVqrJdKpcjMzKxzn8zMzAbHDxkyBJ06dUJaWhrKy8tRXl6OLl264IsvvkBKSkqd71lWVoaCggKNhYiIWhdWyiJDoE5kqWRyIekxE1NTiMRiAEyUbS33MwDvaYiI6PFJu3WBpI057hcW4U7aTV2HQ0asjWV79PZ9BgBw+tdDOo6GyLC1lnsa3s+QPtFZUpaXlxfeeecdJCYmaqxfvXo1XnrpJbz66qvw9fVF586d8csvvwjbTU1NceDAAZiZmWHw4MGYMmUKpk6ditDQUG0fAumYU5/qXuVpF5iURbpjZWeLns8+DQA4GcXWhUQtrby8HKdPn4afn5+wzsTEBH5+flAoFHXuo1AoNMYDgL+/vzB+27Zt6NevHzw8PIQlIyMDq1atwgsvvNByB0NERC1KSGYpN+4EANJvrC5EhkB9HgM8l3k/Q0REhsSxd/UzmpuXrkClUuk4GjJm/f2HQWJujtvX/sKtK9d0HQ6RQeM9DVHTiXXxSy0sLPD999/j7bffxuLFi4X1VlZWmDFjBgICAnDkyBEAwLRp03D58mUMGjQI8fHxGDFiBHr37o3hw4cjKysLiYmJWLJkCT799FOEhISgvI6S/mZmZjA3NxdeW1patvxBUosTLvjZq5x0yOv/jYKpSITrpxOQk5qu63CIjEJERAQiIyNx6tQpnDx5EvPmzYOFhQW2bNkijFm2bBkWLFgAAFizZg2OHTuGoKAgHDhwAK+//jq8vLwwc+ZMAEBubi5yc3M1fkd5eTkyMzNx9epV7R0YERE1K1bKIkMglvA8Jv2n/jwGgAomyj70fmbDhg0a43k/Q0RErRWf0VBr4fnSKACskkWkLbynIWoanVTKksvlOHDgAH777TeN9Z6enjAzM0NsbKyw7sqVK0hNTYWPjw8AwMfHB+fPn0dWVpYwJiYmBtbW1ujTp0+dvy84OBj5+fnCkpGR0QJHRc2hrZUlLG07PnSxdXZEJ1cXAMBN9ionHfIeOxoA8GfUAR1HQmQ8du7ciQULFiA0NBQJCQnw8PDAyJEjNa4NZDKZ8LNCoUBAQABmzpyJxMRETJgwAePGjUNSUpIuwiciIi0RSdQVhpgAQPpLZMbzmPSf+MHncVVVFaoqKnUcje497H7G0dFRYzzvZ4iIqLVyUidl8RkN6VAHexm6eQ1AVVUVzh44rOtwiIwC72mImkbrlbJee+01DBw4EN7e3rW2yWQylJaWIi8vT2O9UqkUHq7KZDIolcpa29Xb6hIeHo6IiAjhtaWlJROzWqFBr/w/TAwJbtI+d27eQtG9vIcPJGoBXTz6oZOrC0qLi5F4+Hddh0NkVORyOeRyeb3bZ8+erfF6165d2LVrV6Pf39XV9ZFjIyKi1oFt38gQCBXf6qgKTqQv1OdxJT+PBQ3dz4wePRr5+fka63g/Q0RE2mDWti2GTZ+MdtZWjRrfuWd3AEA6k7JIhwaOrm5t9tefZ3BPmfWQ0UTUXHhPQ9R4Wk3KcnR0xJo1a+Dv74/S0lKt/d6ysjKUcVZpq9fffxiA6pmTaET/8aqqKsTv3tfSYRHV66nxYwAAiTG/o7S4WMfREBEREdHf1bQv5L0g6S8xK2WRAWDFNyIiIv3w1PjRGDFrepP2Kbp7D3fSbrZQREQP5/nSSABsXUhERK2XVpOyPD09IZVKcebMmZoAxGI899xzmDNnDl544QWYm5vD2tpao1qWVCpFZmYmACAzMxNPPfWUxvtKpVJhG+kvxz69AABr3pjBcrfU6pmYmKDP0GcBAKf2HdRxNERERET0T0IyCysMkR4TS9TJhTyPSX+x4hsRUevx0Ucf4eWXX0bPnj1RUlKCuLg4LFy4EFevXhXGHDlyBEOHDtXY7+uvv9aoSu7k5IT169dj2LBhKCwsRGRkJIKDg1FZyTa1+sz5yT4AgCt/nEDquca1lLryRzxUjZhkT9QSHHv3gLRrF5TfL8W5/xzRdThERER1MtXmL/vtt9/Qt29feHh4CMuff/6J77//Hh4eHjh16hTKysrg5+cn7OPu7g4XFxcoFAoA1T1Hn3zySdjZ2Qlj/P39kZeXh4sXL2rzcKgZPeFgDwsba1SUl+P2tb90HQ7RQ0m7uaL9Ex1QVnIfNxLO6zocIiIiegRDhgzBvn37kJGRAZVKhbFjxzY43tfXFyqVqtainiQCVD/kOHnyJPLz86FUKrFnzx64u7trvM+RI0dqvcf69etb5BiNGZNZyBCokwsrDaDCUGBgIFJSUlBSUoITJ07A29u7wfFz587F5cuXUVxcjLS0NERERMDc3FzYbmpqitDQUFy/fh3FxcVITk7Ghx9+qPEeW7ZsqfV5Gx0dLWx3cXHBt99+q/EeISEhkEgkzXvwRk4sYaUsIqLWwtfXF3K5HE8//TT8/f0hkUhw+PBhtGvXTmPcN998A5lMJix//xtramqKAwcOwMzMDIMHD8aUKVMwdepUhIaGavtwqJk59u4JAPjv9zsR89W3jVpuJPK7cdKdAS+OAABcOPJflBaxmwkREbVOWq2UVVhYiKQkzez6oqIi3LlzR1i/adMmREREIDc3F/n5+Vi7di3i4uIQHx8PADh8+DAuXryIbdu24cMPP4RMJkNYWBjkcjlbFOoxdZWs21eTUcmZk6QHunkNAADcSDiHyooKHUdDREREj8LCwgKJiYnYvHkz9uzZ0+j93N3dkZ+fL7zOysoSflY/5Pjzzz8hFouxYsUKHD58GL1790bx39odf/PNN1i6dKnwupitkJuViYkJRJLq211DSGYh42UoFYYmTpyIiIgIzJo1C/Hx8Zg3bx5iYmLQo0cPZGdn1xr/xhtvYOXKlZg+fTri4uLg7u6OrVu3QqVS4f333wcALFy4ELNnz8aUKVOQlJQELy8vbNmypdZ7RUdHY9q0acLr0tJS4eeePXvC1NQU77zzDpKTk9G3b19s3LgRFhYW+OCDD1rgX8I41bST1e/zmIjIEIwaNUrj9dSpU5GdnQ1PT0/873//E9YXFxdDqVTW+R4jRoxA7969MXz4cGRlZSExMRFLlizBp59+ipCQEJTr+XWLsTJv1w52XZwBgJ1MSG90H+QFADj/2zEdR0JERFQ/rSZlNcb8+fNRVVWF3bt3w9zcHDExMQgMDBS2V1VVYcyYMVi/fj0UCgWKiooQGRmp8UCD9I9T7x4AgJsXr+g4EqLG6fogKeuvU2d1HAkRERE9qkOHDuHQoUNN3i8rK0uj3frfNcdDjrqYmZlpVIixtLRsYtTGRfQgAQBgEgDpN6ENp56fx0FBQdi4cSO2bt0KAJg1axZGjx6N6dOn49NPP601fvDgwfjjjz+wY8cOAEBqaip27NiBQYMGaYzZu3cvDh48KIz517/+VavqYWlpab2ftzExMYiJiRFep6Sk4PPPP8fs2bPrTcri53HT1ZzHTJIlImptrK2tAQC5ubka6ydNmoTJkycjMzMT+/fvx/Lly1FSUgIA8PHxwfnz5zUmp8TExODrr79Gnz59kJCQUOv38O9n69e5Z3eYmprinjILhXfu6jocoodq094C9u5uAIDrp2t/7hAREbUWWm1fWJdhw4Zh/vz5wuvS0lLMmTMHHTt2RPv27fHKK6/U+vIsLS0No0ePhoWFBTp16oQPPviAvcr1nLpSVnrSJR1HQtQ46kpZf/15RseREBERkbYlJCTg1q1bOHz4MAYPHtzg2IYecmRnZ+P8+fNYsWIF2rZt2+D7BAcHIz8/X1gyMjIe7yAMnDoBAGASAOk3kQG0fZNIJPD09ERsbKywTqVSITY2Fj4+PnXuExcXB09PT6HFoaurK1588UUhAUs9xs/PD927dwcA9OvXr873Gzp0KJRKJS5fvoyvvvoKTzzxRIPxWltb1/rM/jt+HjedkJTFyilERK2KiYkJvvzySxw/flyjw8kPP/yAyZMnY9iwYQgPD8e//vUvbN++Xdguk8lqPbNRv5bJZHX+Lv79bP0ce1VPnM/gxHnSEy79n4SpqSly0m6iIOeOrsMhIiKql86TsogAwOlBr/KbSfpZFvf8+eq+6fn5+VCpVMKybt26OsdPmTJFY5xKpRJmGlHr18nVBZYdn0D5/VKkXWAiIRERkbG4ffs23nnnHbzyyit45ZVXkJ6ejqNHj2LAgAF1jn/Uhxx1CQ8Ph5WVlbA4ODg067EZmr8nZbHVNOkzQ2j7ZmtrC7FYXOfD2/oe3O7YsQNLly7F8ePHUVZWhuvXr+Po0aMIDw8XxqxcuRI//vgjLl++jLKyMpw9exZfffWVxvscOnQIb775Jvz8/LBw4UL4+voiOjoapqZ1fx3WrVs3vPfee9iwYUO9x8PP46ZTn8eVenweExEZIrlcjr59++L111/XWL9x40YcPnwYFy5cwA8//IA333wTL7/8Mrp27frIv4t/P1s/R/UzGrYuJD3hOqAfACDlbKKOIyEiImpYq2tfSMano5Mj2lpZory0FJnJ13UdziMZOnQoUlJS4ObmhsLCQvTt2xexsbH4+eef690nLy8PPXr0EF6rVCpthErNoJv3QADAjcTzqORMXyIiIqNx9epVXL16VXitUCjQrVs3zJ8/H2+++Wat8eqHHM8++6zG+o0bNwo/X7hwAbdv38bvv/+Orl274vr1uq+Hy8rKUKbHlXK0TSypTgAoLy3VcSREj6emwpBx/f/v6+uLRYsWITAwEPHx8XBzc8OaNWuwePFihIWFAQAmTpyISZMmISAgAElJSfDw8MCaNWs03uenn34Sfr5w4QLOnTuH69evY+jQofj99981xnbu3BmHDh3Czz//jG+//bbe2Ph53HRiA6j4RkRkaNauXYsxY8bgueeee2jVqvj4eACAm5sbrl+/jszMTDz11FMaY6RSKQAgMzOzzvfg38/Wz7F39bOKdFbKIj1Rk5R1TseREBERNYyVskjnnPpUz8C4dSVZb2ex37lTXRo1KysLSqUSY8aMQXJyMo4dO1bvPiqVCkqlUliysrK0FS49JqF14amzOo6EiIiIdO3kyZNwc3OrtV79kGPYsGFNeshBzUNIZGFVFtJzYnP9r5SVk5ODiooK4WGtmlQqrffB7fLly7Ft2zZs2rQJFy5cQFRUFBYtWoTg4GCYmJgAAFatWoWVK1fip59+woULF7B9+3bI5fIGY0lJSUF2dnatz1t7e3scOXIEcXFxmDlz5mMcLdVFZAAV34iIDMnatWsxfvx4PP/887hx48ZDx3t4eACorhwMVE9OefLJJ2FnZyeM8ff3R15eHi5evNgiMVPLMmvbBp1cXQCwUhbpB5FYDOcn+wAAUs6wUhYREbVuTMoinTO0srgSiQSTJ0/G5s2bGxzXvn173LhxA2lpaYiKikLv3r0bHG9mZgZLS0uNhXSDSVlERESk5uHhITycUHvchxz0+GpavnE2Puk3ddW3Sj0+l8vLy3H69Gn4+fkJ60xMTODn5weFQlHnPu3atUNVVZXGusrKSmHfh42pj4ODAzp27Kjxedu5c2ccPXoUp0+fxrRp01jFugUYa8U3IqLWSC6XY/LkyQgICEBBQQGkUimkUinatGkDAOjatSsWL16MgQMHwsXFBS+99BK+++47HDt2DOfPnwcAHD58GBcvXsS2bdvQr18/jBgxAmFhYZDL5ayGpac693CHqUiEvKxsFOTc0XU4RA/l0MsdZm3boOjuPWSlpOo6HCIiogaxfSHpnLpS1s0kw0jKGjduHGxsbLB169Z6x1y5cgXTp0/HuXPnYG1tjQULFiAuLg59+vSpt5JCcHAwQkJCWiZoajS7Ls6wsrNFeWkp0s4l6TocIiIiegwWFhYa1VJcXV3Rv39/5ObmIj09HStWrICDgwOmTJkCAJg7dy5SUlKQlJSENm3a4K233sLzzz+PESNGCO8hl8sREBCAsWPHCg85gOrW1ffv30fXrl0REBCAgwcP4s6dO+jXrx9Wr16t8ZCDHp86AYCtpknfGUrVt4iICERGRuLUqVM4efIk5s2bBwsLC2zZsgUAEBkZiYyMDCxatAgAsH//fgQFBeHs2bNC+8Lly5dj//79QiLW/v378fHHHyMtLQ1JSUkYMGAA5syZI/xOCwsLLFu2DLt370ZmZia6deuGzz77DMnJyYiJiQFQk5CVmpqKBQsWaFT8UCqV2vrnMXhiVsoiImo1AgMDAaBWh4epU6ciMjISZWVlGD58uPC3Oj09Hbt37xbaBwNAVVUVxowZg/Xr10OhUKCoqAiRkZFYunSpVo+Fmo+6deFNti4kPeE6oD8AICWBrQuJiKj1Y1IW6ZSJiYlQKSv94iUdR9M8ZsyYgejo6AYrHZw4cQInTpwQXsfFxeHSpUt455136r15DQ8PR0REhPDa0tLyoa1wqPmpq2Slnkti5QUiIiI95+XlhaNHjwqvV69eDQDYunUrpk2bBnt7ezg7OwvbzczM8MUXX8DBwQHFxcU4d+4chg8frvEezfGQgx6furoQEwBI3xlK1bedO3fCzs4OoaGhkMlkSEhIwMiRI5GVlQUAcHZ21qh6FRYWBpVKhbCwMDg4OCA7O1tIwlJ77733sHz5cnz11Vfo1KkTbt26hS1btuCDDz4AUF01q1+/fpgyZQpsbGxw69YtHD58GEuWLBGqePj7+6N79+7o3r17rftrdUUuenxiiTq5UL/PYyIiQ/Cwv283b97E0KFDH/o+aWlpGD16dDNFRbpmaN1MyPC5DnyQlHWGSVlERNT6MSmLdMrWxQlt2lug/H4plH/d0HU4j83JyQnDhw/Hyy+/3KT9KioqcPbsWY1KDf9UVlbG8s+tQDfvgQCA62xdSEREpPeOHTvW4EOJadOmabxetWoVVq1a1eB7NtdDDno8IjMmAJBhqGn7pv8JhnK5HHK5vM5tw4YN03hdWVmJ0NBQhIaG1vt+hYWFmD9/PubPny+ss7S0FJKy7t+/j5EjRzYYU2RkJCIjIxt7CPSI1MmFlUyUJSIiapUMoVKWuvJ0fn6+xnq5XK5RTfXvJkyYgOXLl6NLly64du0aFi5ciOjo6BaPlR6f64B+AICUs4k6joSIiOjhTHUdABk3devCjMtXUVVZqeNoHt/kyZORlZWFAwcONGk/U1NTPPnkkw1W16LWoZtndaWs5D/P6DgSIiIiIqoPW2VpGjJkCPbt24eMjAyoVCqMHTu2wfHPPPMMjh8/jpycHBQXF+PSpUuYN2+expiPPvoIJ0+eRH5+PpRKJfbs2QN3d/eWPAyjVFP1jQmGpL8MKbmQiIjI0EjamEPatQsA/a6UpZ785ObmBplMhuHDhwMAfv755zrH+/j4YMeOHdi0aRMGDBiAqKgoREVFoU+fPtoKmR6RXRdntH+iA8rvl+p1IiERERkPJmWRTjn26QUASE8yjNaFkyZNQmRkJCr/kWAWGRmJFStWCK+XLFkCf39/uLq6YsCAAdi+fTtcXFzw7bffajtko/aEgz1snR1rLZI25nWO7+jkCGupHSrKypB6LknL0RIRERFRY9UkADCRBQAsLCyQmJiId999t1Hji4qKsG7dOjz33HPo1asXwsLCEBYWhrffflsY4+vrC7lcjqeffhr+/v6QSCQ4fPgw2rVr11KHYZSEc5kJhqTHxKxeSERE1Gp17tEdpiIR8nPuID87R9fhPLI7d+4AALKysqBUKjFmzBgkJyfj2LFjdY6fO3cuDh06hM8//xyXL1/G0qVLcebMmXqraqmZmZnB0tJSYyHtch1Q3bow7cJFVDLpn4iI9ADbF5JOqcvipifp7wyMv3N2dsbmzZvrXF9VVSW87tChAzZu3AiZTIa7d+/i9OnTGDx4MC5dMozkNH3w0vvvYejUgDq35aTfxOrXpuF+QaHGejfv6ipZqeeTUFFa2uIxEhEREdGjYaUsTYcOHcKhQ4caPT4hIQEJCQnC69TUVLz88ssYMmQINm7cCAAYNWqUxj5Tp05FdnY2PD098b///a95Aqe/teLkuUz6S8TPZCIiolbLsXd1NxN9rpL1TxKJBJMnT0ZERES9Y3x8fGptj4mJwbhx4xp87+DgYISEhDRHmPSIaloXntNxJERERI3DSlmkMyampnDspe5VbhgX/FZWVrh27Vqt9cOGDcO0adOE10FBQejSpQvatGkDe3t7jBkzRuOhB7W8bk8NBACUFhejJL9AWCrKy2Hr5IjxwUG19unqVZ2Udf0U/1sRERERtWZiSXUiSyWrsjQLDw8PDB48uN5Z5gBgbW0NAMjNza13DGeVN506wZDnMukz9WcyK2URERG1PuqJ84bUBm7cuHGwsbHB1q1b6x0jk8mgVCo11imVSsiDyOoKAAAgAElEQVRksgbfOzw8HFZWVsLi4ODQHCFTE9QkZSXqOBIiIqLGYaUs0plOXZxh3q4dSotLkJWSqutwyMjYSDsBANb+6x3cvposrHfu1wfvfbcBXi+NwsVjfyAx5jdhW7cHSVl/nTqr3WCJiIiIqEnY8q15pKenw87ODmKxGCEhIdi0aVOd40xMTPDll1/i+PHjSEqqv803Z5U3jYmJSU0yC9tykB5j9UIiIqLWyxArZc2YMQPR0dG4fft2s793WVkZypho3iys7GzhO+UNmLVtW2vbnbSbOPbdDqhUKo317Tt2gF2X6s40qYkXtBUqERHRY2FSFumMY59eAICMS1eg+ltrP6KWJjY3h2XHJwAA9zKzNLalnUtC7MZIjJg1HROWfIiUs+eQn5WNJxw7o4O9DBXl5UhNPK+LsImIiIiokYQEACayPJYhQ4agffv2ePrpp7Fy5UokJyfjxx9/rDVOLpejb9++ePbZZxt8v/DwcI0WIZaWlsjIyGj2uA2F6EFCFsAKQ6TfhETZcp7HRERErYnY3BzSrl0AGE5SlpOTE4YPH46XX365wXGZmZmQSqUa66RSKTIzM1syPPqbIZMnYuiUgHq3l5aUQLFzj8Y6V4/qKlmZyddRkl/QovERERE1FyZlkc449amegZFuIBf7pD9spHYAgNLiEpTk59fa/p8Nm9FriA+c+vTC66GL8M2s+UKVrPQLl1BWcl+r8RIRERFR04jM2CqrOdy4cQMAcOHCBUilUoSEhNRKylq7di3GjBmD55577qEJVpxV3jTqRBaAFYZIv9W04eR5TERE1Jp07uEGkViMgju5yFNm6zqcZjF58mRkZWXhwIEDDY5TKBTw8/PDmjVrhHX+/v5QKBQtHSI90NGxuvVj0pH/IS3pkrDe1skB3mNHY0zQu7j8PwXu3q5JlHMd2B8AkHKGrQuJiEh/MCmLdEYoi/u3iy0ibbCRVc+AuZeprHN7VUUlfgj+BEE7I9HjmafxzOuvwKlvbwDAX3+e0VqcRERERPRoxBK2ympupqamMDc311i3du1ajB8/HkOHDhUSuKj5qBNZAKCSVd9IjwltOJmUSURE1Ko49uoBwHCqZAHApEmTEBkZicrKSo31kZGRyMjIwKJFiwAAa9aswbFjxxAUFIQDBw7g9ddfh5eXF2bOnKmLsI2S9YPJ83/uO4jzsUeF9SYmJrB1coTrwP54ddlCfDNrvrDNdcCDpKyz57QaKxER0eMw1XUAZJxMRSI49HQHAKQnGc4FP+mHhyVlAUBWSir2R6wDALz0/nvoNcQHAPDXqbMtHyARERERPRYxK2VpsLCwQP/+/dG/f/UX2K6urujfvz+cnJwAAMuWLdMYHxgYiDFjxsDNzQ1ubm6YPn06FixYgO3btwtj5HI5Jk+ejICAABQUFEAqlUIqlaJNmzbaOzADJySylJdDpVLpOBqiR1fzmczkQiIiotZEmDh/8YqOI2k+zs7O2Lx5c53r7e3thdcKhQIBAQGYOXMmEhMTMWHCBIwbNw5JSUnaDNeoWXeqTsrKU2ZprFepVPhx6b9Rfr8UPZ55Gt7jRgMAzNq2gUOv6ueKrJRFRET6hJWySCc6de0Cs7ZtcL+wCDmp6boOh4yMjb06KSurwXFxP+5GH99n0OOZpyFpY47KigrcSDivjRCJiIiI6DGoKwxVsLoQAMDLywtHjx4VXq9evRoAsHXrVkybNg0ymUxjvKmpKcLDw+Hq6oqKigr89ddfWLhwITZs2CCMCQwMBAAcO3ZMY9+pU6ciMjKyhY7EuIjU5zGTC0nPifiZTERE1Co59lZXyjKcpCwrKysUFBTUWj9s2LBa63bt2oVdu3ZpIyz6BxNTU1jZ2QIA7tXROjMnNR2H5Bvx0vtzMPaDubjyRzw6ubpAJBbj7u3MBifcExERtTZMyiKdcOrzYAbGpSuc8UtaZyPrBKDhSlmAekbGCnzwy3a0s7ZCetIllJWUaCNEIiIiInoM6qoslUxmAVCdOGViYlLv9tmzZ2PSpEnC63Xr1mHdunUNvmdD70fNo+Y8ZiIL6TdWLyQiImp9xGZmkHXrCsCw2heSfrDs+AREYjGqKitReCe3zjH/3fYj+o94Hs5P9saEJR8i/cF5eoOtC4mISM+wfSHphFOfXgCAm2xdSDogtC+8/fDZFPlZ2fhxSRhK8gtw8pf9LR0aERERETUDoVIWk1lIj7HlGxkKsYSfyURERK2NvbsbRBIxCnPvsuoQaZ26dWF+zh1UVVbWOaaqshI/Lf03KsrL0WfYEAwJeBUAkMKkLCIi0jNMyiKdUPcqT0+6pONIyBh1UCdlKRt3s5l05H9Y/MwIxBtAUlZgYCBSUlJQUlKCEydOwNvbu8Hxc+fOxeXLl1FcXIy0tDRERETA3Nxc2G5qaorQ0FBcv34dxcXFSE5OxuLFi1v6MIiIiIgaJJYwmYX0X00bTlYXIv3GSllEREStjyG2LiT9YS2t7maSl5nV4LjM5Ov4z4YtAACLDjYAgOtnEls2uBbGZzRERMaH7QtJ60zFInTu4QYASGelLNIBoVLWQy74Dc3EiRMRERGBWbNmIT4+HvPmzUNMTAx69OiB7OzafdvfeOMNrFy5EtOnT0dcXBzc3d2xdetWqFQqvP/++wCAhQsXYvbs2ZgyZQqSkpLg5eWFLVu2IC8vD2vXrtX2IRIREREBAERMACADwORCMhTqBEO24iQiImo9nB5MnGfrQtIFG1l1pay8rNrPJf7p903fod/woXDo6Y6SgkJkJl9v6fBaDJ/REBEZJ1bKIq2TdnWFxNwcJfkFuJN+U9fhkJFp094CbdpbAIDRlWUOCgrCxo0bsXXrVly6dAmzZs1CcXExpk+fXuf4wYMH448//sCOHTuQmpqK//znP9ixYweeeuopjTF79+7FwYMHkZqait27d+Pw4cMaY4iIiIi0rabCEBMASH/VtOFkciHpN6FSFqu+ERERtRqOTMoiHVK3L7ynfPjE+aqKSvy4OAyFuXfx594DUFVVtXR4LYbPaIiIjBOTskjrpK4uAIDMv1J0HAkZI3WVrKJ7eSgrua/jaLRHIpHA09MTsbGxwjqVSoXY2Fj4+PjUuU9cXBw8PT2F8rmurq548cUXcfDgQY0xfn5+6N69OwCgX79+ePbZZxEdHV1vLGZmZrC0tNRYiIiIiJoTW2WRIag5j5lcSPpNxKpvRERErYpILIbMrSsAti8k3RDaFyofXikLAG5duYaQoaOx99MvWzKsFsVnNERExovtC0nrbF2cAAA5aek6joSMkY29unWhcVXJsrW1hVgshlKpedxKpRI9e/asc58dO3bA1tYWx48fh4mJCSQSCdavX4/w8HBhzMqVK2FlZYXLly+jsrISIpEIH3/8MX744Yd6YwkODkZISEizHBcRERFRXcQSdYUhJgCQ/hIJFd+YXEj6jVXfiIiIWpeOTg4QScS4X1SEu7czdR0OGSEhKasR7QvVVCpVS4WjFXxGQ0RkvFgpi7TOzsUZAJB9g0lZpH3qSln3bhtXUtaj8PX1xaJFixAYGIiBAwdi/PjxGD16NBYvXiyMmThxIiZNmoSAgAAMHDgQU6ZMwYIFC/Dmm2/W+77h4eGwsrISFgcHB20cDhmYwMBApKSkoKSkBCdOnBBmC9VnwoQJuHTpEkpKSnDu3DmMGjVK2CYWi7Fy5UqcO3cOhYWFyMjIQGRkJOzt7Vv6MIiIqIWoKwxVMgGA9FjNeczkQtJvrPpWG+9niIhIlzo6OQIA7qRl6DgSMlbq9oV5jWhfaMz4jIZaM97TEDUek7JI62xdqi/4s1kpi3TARlY9A6MxvcoNSU5ODioqKiCVSjXWS6VSZGbWPRtq+fLl2LZtGzZt2oQLFy4gKioKixYtQnBwMExMTAAAq1atwsqVK/HTTz/hwoUL2L59O1avXo3g4OB6YykrK0NBQYHGQtQUEydOREREBD755BMMHDgQiYmJiImJgZ2dXZ3jfXx8sGPHDmzatAkDBgxAVFQUoqKi0KdPHwBAu3btMHDgQCxfvhwDBw7Eyy+/jB49emDfvn3aPCwi0oEhQ4Zg3759yMjIgEqlwtixYxsc7+vrC5VKVWv559/Xh30pYW5ujnXr1iEnJwcFBQXYtWsXOnXq1OzHZ8yEqizlTAAg/cWKb2QoJObmAFj1TY33M0REpGt2D7qZ8BkN6YqN1Pie0/AZDRkS3tMQNQ2Tskjr7JwftC9M5QU/aV8HmQyA8bUvLC8vx+nTp+Hn5yesMzExgZ+fHxQKRZ37tGvXDlVVVRrrKisrhX0bGmNqyj8v1HKCgoKwceNGbN26FZcuXcKsWbNQXFyM6dOn1zl+7ty5OHToED7//HNcvnwZS5cuxZkzZzBnzhwAQH5+PkaMGIGff/4ZV69eRXx8PObMmQMvLy84OTlp89CISMssLCyQmJiId999t0n7ubu7QyaTCUtWVs2XiI35UmL16tV46aWX8Oqrr8LX1xedO3fGL7/80mzHRYBIqMrCBADSX2Kex2QARGKx8DMTDKvxfoaIiHTN1rl64nxO2k0dR0LGqJ21FSRtqpP287NydByN9vAZDRkS3tMQNQ0/kUmr2lpZwaKDDQBe8JNuCJWyjCwpCwAiIiLw9ttv480330TPnj2xfv16WFhYYMuWLQCADRs2aIzfv38/Zs+ejddeew1dunTB8OHDsXz5cuzfv1+4yN+/fz8+/vhjvPjii3BxccG4ceMQFBSEPXv2aP34yDhIJBJ4enoiNjZWWKdSqRAbGwsfH5869/Hx8dEYDwAxMTH1jgcAa2trVFVV4d69e3VuNzMzg6WlpcZCRPrn0KFDWLJkCaKiopq0X1ZWFpRKpbCoVCph28O+lLCyssKMGTMQFBSEI0eO4MyZM5g2bRqeeeYZDBo0qN7fyc+dphFL2CqL9B8rvpEhUJ/HAD+TgdZzPwPw2oKIyJjVJGVx4jxpn7W0etJaYe5do5uAwmc0ZAhayz0N72dIn4gfPoSo+dg9aF2Yp8xGWUmJjqMhY2Qjqy4Ne/e28SVl7dy5E3Z2dggNDYVMJkNCQgJGjhwpVPdwdHTUGB8WFgaVSoWwsDA4ODggOztbuMBXe++997B8+XJ89dVX6NSpE27duoUNGzYgNDRUq8dGxsPW1hZisRhKpeb/w0qlEj179qxzH5lMVud42YPKef9kbm6OTz/9FDt27Ki3dHNwcDBCQkKafgBEZBASEhJgbm6OCxcuICQkBHFxcQBqvpQIDw8Xxv7zSwlPT0+YmZlpfBFx5coVpKamwsfHB/Hx8XX+Tn7uNI2QzMIEANJjrJRFhkB9HgNAJc/lVnM/A/DagojImNmqu5lw4jzpgPWD1oV5ymwdR6J9fEZDhqC13NPwfob0CZOySKts2aucdMjExESYhWGMlbIAQC6XQy6X17lt9OjRyM/PF15XVlYiNDS0wYv3wsJCzJ8/H/Pnz2/2WIl0QSwWY+fOnTAxMcHs2bPrHRceHo6IiAjhtaWlJTIyMrQRIhHp0O3bt/HOO+/g1KlTMDc3x1tvvYWjR49i0KBBOHv2bKO+lJDJZCgtLUVeXl6tMfV9EQHwc6epmMxChoAV38gQiB4kyVaWV2hUlqSW0dj7GYDXFkRExkokkaCDffXE5ZxUPqch7bNRJ2VlGV9SFsBnNEQPw2c0ZIjYvpC0yk49A4MX+6QDFk/YQGJujqqqKqO94CfSdzk5OaioqIBUKtVYL5VKkZmZWec+mZmZjRqvvth3cXGBv79/g7PKy8rKUFBQoLEQkeG7evUqvvnmG5w5cwYKhQIzZsxAXFycVr744udO07DtGxkCkVDxzTCSCwMDA5GSkoKSkhKcOHEC3t7eDY6fO3cuLl++jOLiYqSlpSEiIgLm5ubCdlNTU4SGhuL69esoLi5GcnIyPvzwQ4332LJlC1QqlcYSHR2tMaZDhw7Yvn078vLycPfuXXz77bewsLBovgM3ckKSbLlhnMePq7XczwC8tiAiMlYdHTvDVCTC/aIiFNzJ1XU4ZISsOz2YOK/M0nEkRPQoWss9De9nSJ8wKYu0yk5dKYtJWaQDNg/+4Bdk30FVRaWOoyGiR1FeXo7Tp0/Dz89PWGdiYgI/Pz8oFIo691EoFBrjAcDf319jvPpiv3v37hg+fDhyc/mlFBE1zsmTJ+Hm5gagcV9KZGZmwtzcHNbW1vWOocdXU2GISQCkv9TJLJUGUClr4sSJiIiIwCeffIKBAwciMTERMTExsLOzq3P8G2+8gZUrV+KTTz5Br169MGPGDLz22mtYsWKFMGbhwoWYPXs25syZg169emHhwoWYO3durfeKjo6GTCYTljfeeENj+/fff48+ffrA398fY8aMwXPPPYdvvvmmef8BjBgrvmni/QwREelaR6fq9mh30lhNhHSjpn0hk7KI9BHvaYiajklZpFXq9oU5bF9IOmAjq35AaqytC4kMRUREBN5++228+eab6NmzJ9avXw8LCwts2bJFGLNs2TLh5zVr1mDkyJEICgpCjx49sGzZMnh5eWHdunUAqi/2d+3aBS8vL0yaNAkikQhSqRRSqRSSBw+RiIjq4+Hhgdu3bwNo3JcSp0+fRllZmcYYd3d3uLi41PvFBTWdulKWISSzkPEypIpvQUFB2LhxI7Zu3YpLly5h1qxZKC4uxvTp0+scP3jwYPzxxx/YsWMHUlNT8Z///Ac7duzAU089pTFm7969OHjwIFJTU7F79278/vvvtd6rtLQUSqVSWO7duyds69mzJ0aNGoW33noLJ0+exB9//IH33nsPr7/+Ouzt7Zv/H8IIiQ2s4ltzeNj9zIYNGzTG836GiIiakzBxns9oSEdspNUTM9jNhEh/8Z6GqGnEug6AjIutMytlke50sH+QlMUZGER6befOnbCzs0NoaChkMhkSEhIwcuRIZGVlwdLSEgAgk8mE8QqFAgEBAQgLC8OKFStw7do1jBs3DklJSQAABwcHjB07FgCQmJio8buGDh2KY8eOaenIiEjbLCwshCpXAODq6or+/fsjNzcX6enpWLFiBRwcHDBlyhQA1a20UlJSkJSUhDZt2uCtt97C888/jxEjRgjvERERgcjISJw6dQonT57EvHnzNL6UyM/Px6ZNmxAREYHc3Fzk5+dj7dq1iIuLQ3x8vHb/AQyYyIyVskj/GUrFN4lEAk9PT4SHhwvrVCoVYmNj4ePjU+c+cXFxmDx5Mry9vfHnn3/C1dUVL774IrZt26YxZubMmejevTuuXbuGfv361fl+Q4cOhVKpxN27d/H7779j8eLFwoxbHx8f3L17F6dPnxbGx8bGoqqqCoMGDUJUVFSt9zMzM9Noo6i+/qS6Ce0LmSQraOh+BgAcHR01xvN+hoiImpOtc/XfmZy0mzqOhIyV1YP2hayURaS/eE9D1DRMyiKtaf9EB7S1bI+qqircSWdpXNI+VsoiMhxyuRxyubze7bNnz9Z4vWvXLuzatavOsampqTAxMWnW+IhIP3h5eeHo0aPC69WrVwMAtm7dimnTpsHe3h7Ozs7CdjMzM3zxxRdwcHBAcXExzp07h+HDh2u8x8O+lACA+fPno6qqCrt374a5uTliYmIQGBjY4sdrLEzFIpiaVheFNoQKQ2S8aioM6fd5bGtrC7FYDKVS8z5MqVSiZ8+ede6zY8cO2Nra4vjx4zAxMYFEIsH69es1ErtWrlwJKysrXL58GZWVlRCJRAgNDUVISIgw5tChQ/jll1+QkpKCbt26YcWKFYiOjoaPjw+qqqogk8k0Pp8BoLKyErm5uRpJ/n8XHBys8TuoYULlQn4ea2jofmb06NHIz8/XWMf7GSIiai41SVmcOE+6YfOgfeG9TCZlEekz3tMQNR6Tskhr1GVx791W6v1MX9JPNrLqi/27t5mURURERMCxY8cavOGfNm2axutVq1Zh1apVD33fhyWOlpaWYs6cOZgzZ07jg6VGE0vMhJ9530H6TGzEFd98fX2xaNEiBAYGIj4+Hm5ublizZg0WL16MsLAwAMDEiRMxadIkBAQEICkpCR4eHlizZo3G+/z000/CzxcuXMC5c+dw/fp1DB06tM5Wh40RHh6OiIgI4bWlpSUyMjjxrD7GfB4TERG1RupuJqyURbpg1rYt2lpVV5pl+0IiIjIWTMoirbF1UV/scwYG6QYrZREREREZPnUCAKD/FYbIuAnJLHpeYSgnJwcVFRWQSqUa66VSKTIzM+vcZ/ny5di2bRs2bdoEoDqhysLCAt988w3+/e9/Q6VSYdWqVVi5cqWQeHXhwgW4u7tjyZIl9caSkpKC7OxsuLm54ffff0dmZiY6deqkMUYkEuGJJ56oN7aysjKUMcGo0UQSw6j4RkREZAhEEgk62Fdfk+Wk8jkNaZ+1tLp14f3CIpQWFes4GiIiIu0w1XUAZDzUMzCyebFPOmJjr07KYllcIiIiIkMltMqqqICqqkrH0RA9OpH6XNbzBKDy8nKcPn0afn5+wjoTExP4+flBoVDUuU+7du1Q9Y//fysrK4V9HzamPg4ODujYsSNu374NAFAoFOjQoQMGDhwojHn++edhamqK+Pj4Rh4hNYSVsoiIWpePPvoIJ0+eRH5+PpRKJfbs2QN3d3eNMebm5li3bh1ycnJQUFCAXbt21UpidnJywq+//oqioiIolUp89tlnEIlE2jwUegQdHTvDVCTC/aIiFNzJ1XU4ZISE1oVKPqMhIiLjwaQs0hp1+0ImZZEumIpEsLLtCAC4d7vuGc9EREREpP9qEgBYlYX0m1hiOOdyREQE3n77bbz55pvo2bMn1q9fDwsLC2zZsgUAEBkZiRUrVgjj9+/fj9mzZ+O1115Dly5dMHz4cCxfvhz79+8XErH279+Pjz/+GC+++CJcXFwwbtw4jbawFhYW+OyzzzBo0CC4uLjg+eefx969e5GcnIyYmBgAwOXLlxEdHY2NGzfC29sbgwcPxrp16/Djjz8KiVv0eNSJsvpe8Y2IyFD4+vpCLpfj6aefhr+/PyQSCQ4fPox27doJY1avXo2XXnoJr776Knx9fdG5c2f88ssvwnZTU1McOHAAZmZmGDx4MKZMmYKpU6ciNDRUF4dETdDRyREAcCeNrZdJN6wfJGXlMSmLiIiMCJOySGvUSVksi0u6YGVnC1ORCBXl5SjMvavrcIiIiIiohQiVspgAIBgyZAj27duHjIwMqFQqjB07tsHxzzzzDI4fP46cnBwUFxfj0qVLmDdvXq1xgYGBSElJQUlJCU6cOAFvb++WOgSjJCSzGECFoZ07d2LBggUIDQ1FQkICPDw8MHLkSGRlVT+McXZ2hr29vTA+LCwMX3zxBcLCwnDx4kVs2rQJMTExeOedd4Qx7733Hnbt2oWvvvoKly5dwueffy4keQHVVbP69euHffv24erVq9i0aRNOnz6NIUOGaLQfnDRpEi5fvozffvsNBw8exPHjxzFz5kwt/KsYB1bKIiJqXUaNGoXIyEhcvHgR586dw9SpU+Hi4gJPT08AgJWVFWbMmIGgoCAcOXIEZ86cwbRp0/DMM89g0KBBAIARI0agd+/emDx5MhITE3Ho0CEsWbIE7777LiQSSZ2/18zMDJaWlhoLaZ8wcT6Nz2hIN6w7VbcvzMvK1nEkRERE2iPWdQBkPNSzMHjBT7rQ4UHrwjxlFlQqlY6jISIiIqKWIpIwAeCfLCwskJiYiM2bN2PPnj0PHV9UVIR169bh3LlzKCoqwrPPPosNGzagqKgIGzduBABMnDgRERERmDVrFuLj4zFv3jzExMSgR48eyM7mF+zNwdCqvsnlcsjl8jq3DRs2TON1ZWUlQkNDG6y4UVhYiPnz52P+/PnCOktLS3zwwQcAgPv372PkyJEPjevu3buYNGlSYw6BHoFYok4uNIzzmIjI0FhbWwMAcnOrW9l5enrCzMwMsbGxwpgrV64gNTUVPj4+iI+Ph4+PD86fPy8kVwNATEwMvv76a/Tp0wcJCQm1fk9wcDBCQkJa9mDooWydq5/R5KTd1HEkZKyspQ+SspS8ZyQiIuOh1UpZs2bNQmJiIvLy8pCXl4e4uDiNL8jYq9xwWXWyg3m7tqisqEBuxi1dh0NGyEZWnZR197ZSx5EQERERUUuqqS7EBAA1dfWCqKioRo1PSEjAjz/+iIsXLyI1NRXff/89YmJiMGTIEGFMUFAQNm7ciK1bt+LSpUuYNWsWiouLMX369JY6DKPDtm9kCNTJhZVMlCUianVMTEzw5Zdf4vjx40hKSgIAyGQylJaWIi8vT2OsUqmETCYTxiiVylrb1dvqEh4eDisrK2FxcHBo7sOhRqhJyuLEedINmwftC++xfSERERkRrSZl3bx5Ex999BE8PT3h5eWF33//HXv37kXv3r0BsFe5IVOXxc3NuI2qikodR0PGyEb24GI/k0lZRERERIaMrbKan4eHBwYPHoxjx44BACQSCTw9PTUqKKhUKsTGxsLHx6fe92HbmqYRs+obGQDhM5nJhURErY5cLkffvn3x+uuvt/jvKisrQ0FBgcZC2mfrXP2chpWySFesWCmLiIiMkFaTsn799VdER0cjOTkZ165dw+LFi1FYWIinn366xXqVU+ugTsriDAzSFXWlrHuZnIFBREREZMhYXaj5pKen4/79+zh16hTkcjk2bdoEALC1tYVYLK6zQkJ91RGA6rY1+fn5wpKRkdGi8es7kYG1LyTjJGL1QiKiVmnt2rUYM2YMhg0bpnFNlpmZCXNzc6GtoZpUKkVmZqYwRiqV1tqu3katk0giQQf76v9OOal8TkO6oa6UlcdKWUREZES0mpSl8YtNTfHaa6/BwsICCoXiob3KAdTbq9za2hp9+vSp93dxNm7zcuzdA95jX6y1DBjlD/N27ercRz0DI5sX+6QjNvbqpCxWyiIiIiIyZKwu1HyGDBkCLy8vzJo1C/PmzXvsKgpsW9M0Na04ebAtjz8AACAASURBVC6T/mL1QiKi1mft2rUYP348nn/+edy4cUNj2+nTp1FWVgY/Pz9hnbu7O1xcXKBQKAAACoUCTz75JOzs7IQx/v7+yMvLw8WLF7VyDNR0HR07w1Qkwv2iIhTcydV1OGSERBIJLDs+AYBJWUREZFzE2v6Fffv2hUKhQJs2bVBYWIjx48fj0qVL8PDwaJFe5UD1bNyQkJDmPRAj1dbKEu9t+0b4cvifFD9HYVfop7XW23V5UCnLQJOyzp8/DwDIz8/XWC+XyzFnzpw695kwYQKWL1+OLl264Nq1a1i4cCGio6NbPFZjZfNgtta920zKIiIiIjJk6gSASlZleWzqh3QXLlyAVCpFSEgIfvzxR+Tk5KCioqLOCgkNVUcoKytDGRMzGk04l1n1jfSYWMJKWURErYlcLkdAQADGjh2LgoIC4XouLy8P9+/fR35+PjZt2oSIiAjk5uYiPz8fa9euRVxcHOLj4wEAhw8fxsWLF7Ft2zZ8+OGHkMlkCAsLg1wu57VeK9bRyREAcCeN1WpJN6zsOgIAyktLUXQv7yGjiYiIDIfWk7KuXLkCDw8PWFtbY8KECYiMjISvr2+L/s7w8HBEREQIry0tLdkm4RE90dkeYjMzlN8vxbWTp4T1EjNzdH/aCwNHj8C+Vf+HspISjf0MvVLW0KFDkZKSAjc3NxQWFqJv376IjY3Fzz//XOd4Hx8f7NixA8HBwfj1118REBCAqKgoDBw4EElJSVqO3jjYyKrL4t5TMimLiIiIyJCJ2SqrRZiamsLc3BwAUF5ejtOnT8PPzw979+4FAJiYmMDPzw/r1q3TZZgGpSaZhQ83SX8JlbLKeR4TEbUGgYGBAIBjx45prJ86dSoiIyMBAPPnz0dVVRV2794Nc3NzxMTECPsBQFVVFcaMGYP169dDoVCgqKgIkZGRWLp0qfYOxMiNnjcbA0e/UGt9VVUV/rvtJ/xv+0+1ttm5PHhGk2aYz2io9RNaF2Zl6zgSIiIi7dJ6UlZ5eTn++usvAMCZM2fg7e2NuXPn4qeffhJ6lf+9WtY/e5U/9dRTGu/XmF7lnI3bfCxtq0uLZt1IxaZ3F2hs++jXnbBzcUL/EcPw596DwnoTU1PYOlW3pcgx0Av+O3fuAACysrJQUFCAjz76CMnJybVubtXmzp2LQ4cO4fPPPwcALF26FP7+/pgzZw5mz55d5z5mZmbCQxAAbMPZBGJzc7R/ogMA4F4my+ISERERGTImANRmYWEBNzc34bWrqyv69++P3NxcpKenY9myZRrjAwMDkZaWhsuXLwMAnnvuOSxYsAD/93//J4yJiIhAZGQkTp06hZMnT2LevHmwsLDAli1btHNQRqCm7RsTDEl/MVGWiKh1MTExeeiY0tJSzJkzp94OEACQlpaG0aNHN2do1ARDJr8Gyd+eFfzdyHffxoldUSi/X6qx3ta5ulJWTtrNFo+PqC7W6qQsJZOyiIjIuJjqPIAHs23Zq1w/qPs9F+TU7jn+Z9QBAID3+DEa621knSA2M0NFWRnuGkHrOIlEgsmTJ2Pz5s31jvHx8UFsbKzGupiYGPj4+NS7T3BwMPLz84WF1d4aT10l635REUryC3QcDRERERG1JBETAGrx8vJCQkICEhISAACrV69GQkICQkNDAQAymUxjvKmpKcLDw5GQkIBTp07h3XffxcKFCzWqH+zcuRMLFixAaGgoEhIS4OHhgZEjRyIri5MgmoOpSARTkQgAK2WRfqtpKcvzmIiIqDm0sWwvJGStmfQWIiZOEZY7NzPQpr0FnvSr3Z2mJinLMCfOU+vHSllERGSstFopa8WKFYiOjkZaWhosLS0REBCAoUOH4oUXXmCvcj3RXp2Udad2Utap/Qcxcs7b6OY5ALbOjsKMCzsXZwBATnoGVFVV2gtWR8aNGwcbGxts3bq13jEymQzKf7TRUyqVtR6G/B3bcD66DrLqinqskkVERERk+MQSdXUh3iOqHTt2rMGqCLNnz8akSZOE1+vWrWtUG0K5XA65XN4sMZImdSILwARD0m81n8k8j4mIiJqDuiPE/cIipJ1L0th2au9BvPDu2/AeOxpnDhzW2GbrXN2+kJWySFespNUFN/L4nIaIiIyMVitlderUCd999x2uXLmC3377Dd7e3njhhReEikHz58/Hr7/+it27d+O///0vMjMz8fLLLwv7q3uVV1ZWQqFQYPv27fjuu+/Yq1yL1JWyCutIyspTZuNKXHUCnffYmtLF6l7lxjIDY8aMGYiOjsbt27eb9X3LyspQUFCgsVDjqCtl5WUafqU2IiIiImPHVllkCEQSM+FntuIkfcbqhURERM1LeEaTe7fWtlP7owEAboO8hKpEACCSSNDBvnrick6qcTynodZHfU7eUzIpi4iIjItWK2W99dZbDW5nr/LWz7KBSlkAcDLqAHoNGQyvsS/ikHwjVFVVwgyM7BuGf7Hv5OSE4cOHayQT1iUzMxNSqVRjnVQqRWZmZkuGZ7Rs7KsrkBlD+0wiIiIiY6euMMREFtJn6vO4qqoKVRWVOo6G6NHxM5mIiKh5NfSMJjfjNpL/PAM374HwfGkUfvs2EgDQ0bEzTEUi3C8qqvfZDlFLs1ZXymL7QiIiMjJarZRF+k9oX5hb94V70pH/oeheHmykneDu8xQAwK6L8VTKmjx5MrKysnDgwIEGxykUCvj5+Wms8/f3h0KhaMnwjBZnYBAREREZD3WlrEpWZSE9pk5k4XlM+o7VC4mIiJqXun1hfclVp/ZWP5vwHvuisK6jkyMA4E5aRgtHR1Q/604PkrL4nIaIiIwMk7KoSRpqXwgAleXlOP3rIQDAU+PHAKjpVZ5tBGVxJ02ahMjISFRWas5kjoyMxIoVK4TXa9aswciRIxEUFIQePXpg2bJl8PLywrp167QdslGwkVVXJbvH9oVEREREBk8seVCVhQkApMdqEllYXYj0W81nMs9lIiKi5vCwZzSJh4+gtLgYdl2c0aX/kwAAO5cHz2iMYOL8xo0bkZOTg+LiYpw7dw6enp71jvX19YVKpaq1/LPLCT0+E1NTWNnZAgDuKVkpi4iIjAuTsqhJHta+EAD+jKqeidF32BC079gBTzjYAzCOSlnOzs7YvHlznevt7e2F1wqFAgEBAZg5cyYSExMxYcIEjBs3DklJSdoM12jYyB5UysrkDAwiIiKqMWTIEOzbtw8ZGRlQqVQYO3Zso/cdPHgwysvLcfbsWY31KSkpdX6p+/fk+yNHjtTavn79+mY7LmMnMmMCAOm/mpZvTC4k/cZKWURERM1L3c2kMPdundvLSkpw7j9HAABe46qrZdk6V1fKykm7qYUIdcPGxgYAUF5ejlGjRqF37954//33cfdu3f9Of+fu7g6ZTCYsWVl8jtDcLDs+AZFYjKrKynoTComIiAyVWNcBkP4wFYnQzsYaQMNJWbeuXMPNi1fg2LsHhr89FSKxGKXFJcjPytFWqDpjZWWFgoKCWuuHDRtWa92uXbuwa9cubYRl9Gzsq2e23L2dqeNIiIiIqDWxsLBAYmIiNm/ejD179jR6P2tra3z33Xf47bffas2g9fb2hkgkEl737dsXsbGx+PnnnzXGffPNN1i6dKnwuri4+BGPgv5JSABgMgvpMbGElbLIMAitOMt5LhMRETWHh7UvBKonznuPHQ2PF4Zj76df/i0py3Anzs+bNw8AEBgYKDyjuXHjRqP2zcrKQl5eXqPGmpmZwdzcXHhtaWnZtECNlLp1YX7OHVT9o9MMERGRoWOlLGo0iw42MDU1RVVlJYruNnyBejLqVwCAz8TxAIA76TehUqlaPEaif2pj2R5tLCwAsFc5ERERaTp06BCWLFmCqKioJu339ddf44cffoBCoai1LScnB0qlUljGjBmD5ORkHDt2TGNccXGxxri6Evvp0YhZKYsMQM15zORC0m+slEVERNS8GtPN5PrpBNy5eQttLduj7/O+sHWubl+Yk2q4SVkvvlhdFSwyMhJKpRJnzpzBW2+91ah9ExIScOvWLRw+fBiDBw9ucGxwcDDy8/OFJSMj47FjNwbW0upuJnnsZkJEREaISVnUaEKv8rv3oKqqanDsmQOHUVFWBrGk+ovkbAO+2KfWzUZWXb2i6O49lN8v1XE0REREpO+mTp2Krl274pNPPnnoWIlEgsmTJ9fZ3nrSpEnIzs7G+fPnsWLFCrRt27bB9zIzM4OlpaXG8v/Zu/O4qOr1D+CfYVXHQU1kEQVxQVMvGriEN1MWy6VSc8vlqljXLUtcikhTQRPNwFLQckOlq+kvV3LH1FIQE0MRJTURjB1BQFGW4fz+wDk4MSwqMNvn/Xp9X/fOOd9zeI6v7+XO4TzneUg1JgCQLihfx0wuJO1maMxEWSIiotokq6Z9IQAIgoCLBw8DAFxGDUOzJ50kdLl9YZs2bQAAf/31F958802sX78ea9aswcSJEys9JjU1FdOmTcOIESMwYsQI3L17F6dPn8Yrr7xS6TH+/v4wMzMTh42NTW1fik5qalVWKSs3I1PNkRAREdU/ti+kGhO/7Neg3/OjvDxc/eVXdB/oAYBJWaQ+zaytAAA5qelqjoSIiIi0Xfv27bFixQr07dsX8hqU2x82bBiaNm2KrVu3Km3fsWMHEhMTkZKSAkdHR6xcuRIdO3bEiBEjKj2Xj48PlixZ8oJXoB+MmABAOsBQUSmLbThJy7HqGxERUe1q3Lz69oUAcDHsCN6c+QHa9ShLMHr88GG1x2gzA4OyGhR+fn7Iz89HTEwMunbtiunTp2P79u0qj7lx4wZu3Lghfo6MjES7du0wZ86cSpO5ioqKUMR7zWemaF94n91MiIhID7FSFtVY4xqUxX3ahX0/i/9dl3uVk2br8c4gAEDqzVtqjoSIiIi0mYGBAXbs2IHFixfj5s2bNTrm/fffx5EjR5Camqq0fePGjTh+/DiuXr2KHTt2YOLEiXj33XfRtm3bSs/Ft3FrTlFhSM4EANJiRsZcx6QbWPWNiIio9hg3MEUDqRRA9S/PZ/+dglu/XxI/30vS7TZ7aWlpFbZdv34dtra2z3SeCxcuoH379rUVFj0hti9MZ6UsIiLSP0zKohqrSa/yp904/zuyk8seQKXE1+zBFVFtsmxnD8cBrgCA09t2qjkaIiIi0mYymQw9e/ZEUFAQiouLUVxcjEWLFqF79+4oLi6Gq6ur0nxbW1t4eHhg06ZN1Z47KioKAKr8w29RURHy8/OVBqkmVmUpZgIAaa/y6kJcx6TdjFj1jYiIqNY0fqmsSlZxYSEeP3hY7XxFC0MAyNTxF+cV99VPc3BwQGJi4jOdp3v37hVerKIXJyZlsX0hERHpIbYvpBqTmSvaF1beq/xpQmkpvp82Gy3sbJEcf6P6A4hq2YBpnjAwMMDl478g7eZf6g6HiIiItFheXh66du2qtG3mzJlwc3PDyJEjkZCQoLTP09MTGRkZOHToULXn7t69OwDwD7+1xJCtskgHlFcX4jom7aao+sa1TERE9OIUL84/yK7ZM5orx09huM88mDZqiKykv+syNLULDg7GqFGjMG/ePISGhqJXr16YOnUqpk6dKs5Zvnw5bGxsMGnSJADA7NmzkZCQgLi4ODRo0AAffPAB3Nzc8MYbb6jrMnSWon1hLtsXEhGRHmJSFtXYs1bKAoCsxLvIStTtNzBIM1m2bYNub7oDAE58H6LmaIiIiEgTSaVSpepU9vb26NatG7Kzs3H37l2lP9gKgoC4uDil4zMyMvD48eMK2yUSCTw9PbFt2zbI5XKlfW3btsW4ceNw+PBh3Lt3D46Ojli9ejXOnDmD2NjYurtYPcIEANIFrPhGukAikcDQuOxPj3JWfSMiInphjV96tmc0hQUFiNp7EK9PGIO/fo+uy9DU7tKlslaNI0eOhLe3NxISEuDl5YUdO3aIc6ytrZXaGZqYmCAgIAA2NjYoKCjAlStX4OHhgdOnT9d3+Dqv6ZNKWfeZlEVERHqISVlUY8+TlEWkLh5TJ8PAwACxJ88g9cYtdYdDREREGqhHjx5Kf2xdvXo1AGDr1q3w9PSs8AfbmvLw8ICdnR22bNlSYV9RURE8PDzg5eUFqVSKu3fvYs+ePVi2bNlzXwcpY9s30gVGrPhGOsDwScU3gGuZiIioNsial7UvrGk3EwA4uGoNft3+I3JS0+oqLI3i4uKC/Px8lfs8PT2VPq9atQqrVq2qj7D0hmXbNnB8ww0SiUTcZmhsDOMGpgCAvIwsdYVGRESkNgbqDoC0R2NFUlbWPTVHQlS1Fm1s0X2gBwDgxHcVH4YSERERAcCZM2cgkUgqDMUfaj09PeHq6lrp8b6+vnjllVcqbD9x4gQkEglu3rxZYd/ff/+N/v37w9zcHA0bNoSDgwO8vb0r/aMxPTux7VsxEwBIe5VXfNOd5MKZM2ciISEBjx49wvnz59GzZ88q58+ePRvx8fEoKChAUlISAgMDYWpqKu43MDCAn58fbt++jYKCAty6dQuffvpppedbv349BEHA7NmzlbZ36NAB+/fvR2ZmJnJzc/Hbb7+hf//+L3StVEaRXAjo1lomIiJSl8bP2L4QAITSUr1JyCL1G7N0IQZ++F+8OfMDcXj8t6xdZG56Jr8TEhGRXmKlLKoxVsoibeExdTIMDA1x9dSvSI6/oe5wiIiIiKgesVIW6QLDJ+tYriPVhUaPHo3AwEBMnz4dUVFR8PLywrFjx9CxY0dkZmZWmD927FisWLECU6ZMQUREBBwcHLB161YIgoB58+YBALy9vTFjxgxMmjQJcXFx6NGjB0JCVLeuHzZsGF599VUkJydX2Pfzzz/j5s2bcHNzw6NHj+Dl5YWff/4Z7dq1Q3p6eu3+Q+iZp5Oy5CUlaoyEiIhIN/AZDWk6q/ZtAQAXDx5BYUGB0r7Yk2fUERIREZHasVIW1YjEwADSpk0AAA/4hZ80mLltKzgNfgMAq2QR6bJnrbQwcuRIXL9+HY8ePcKVK1cwaNCgCnN8fX2RkpKCgoICnDhxAu3bt6+r8ImIqA4pKgzpSjIL6Sddq/g2d+5cbNy4EVu3bsX169cxffp0FBQUYMqUKSrn9+nTB+fOncPOnTuRmJiIEydOYOfOnejVq5fSnAMHDuDw4cNITEzEnj178Msvv1Q4V8uWLbF27VqMHz8exf/492zevDkcHBywYsUKxMbG4tatW/jss88glUrRtWvX2v1H0EOK38fFhYVqjkTz8H6GiIieR+OXytoXMimLNJFZC3OYNmoIeUkJdi9ejr1ffq00bp7/Xd0hElEt4j0NUc0xKYtqRNqsCQwMDVFaWoqH93PVHQ5RpRRVsq6dOYe/r/2p7nA0Tm23DAHKHnKEhoYiKysLBQUFuHLlCpydnWslXpOGDTg4KoxxEyYgMDAQX/ovh5OTEy5fvoxjx46hRYsWKteRi4sLdu7cic2bN+OVV17B/v37sX//fnTp0kWc8+mnn+Ljjz/G9OnT0bt3bzx8+BDHjh2rsN6JiEjzsVIW6QJdWsfGxsZwdnZGeHi4uE0QBISHh8PFxUXlMREREXB2dhbvV+zt7TF48GAcPnxYaY67uzs6dOgAAHB0dKxwPolEgtDQUKxatQrXrl2r8HPu3buH+Ph4TJw4EY0aNYKhoSGmTZuG9PR0REdHq4zNxMQEMplMaZBq5etYN5ILa4uicpyvry/vZ4iI6JkoKmXxxXnSROZ2rQEAOalprJJaBT6j4dCFwWc0RM+G7QupRmTNmwMAHubcR6lcruZoiFRr3soGTkPeBAAcX79ZzdFonrpoGdK0aVOcO3cOp06dwqBBg5CZmYkOHTogJyfnheM1adgA/hdOvfB5SPeMbdsV1x/k4OWPpmB7aCimT5+OIUOGYMqUKVi3bl2F+bNnz8bRo0fx9ddfAwAWLVqEAQMGYNasWZgxYwYAwMvLC8uWLcPBgwcBABMnTkR6ejqGDRuGXbt2VTiniYmJ0s0AH8YREWkOQyYBkA5QVBjShXVsbm4OIyOjCq0A09PT0alTJ5XH7Ny5E+bm5jh79iwkEgmMjY2xfv16+Pv7i3NWrFgBMzMzxMfHQy6Xw9DQEH5+fliyZIk4x9vbGyUlJVizZk2l8Xl4eGD//v3Iz89HaWkpMjIyMHDgQNy/f1/lfB8fH6WfQZUTK77pQHJhbXq6chwApfuZlStXVphfF/czAO9piIi0UWNFUlb2i//tlai2tbBtBQDISvxbzZFoLj6jIV1R1TOa+rqn4f0MaRNWyqIakfHLPmkBj6mTYWhkhOu/ReBu3HV1h6Nx6qJliLe3N+7evYspU6bg999/x507d3DixAncvn27vi6L9IyBRALLhlIkPiiv2lhdpQUXFxelygwAcOzYMXG+vb09rK2tlebk5eUhKiqq0nP6+PggLy9PHMnJyS96aUREVEvK274xCYC0ly5Vynoe/fr1w+eff46ZM2fCyckJw4cPx5AhQ7Bw4UJxzujRozF+/HiMGzcOTk5OmDRpEj7++GNxv5OTE2bPno3JkydX+bOCg4ORkZGBvn37olevXti/fz/CwsJgZWWlcr6/vz/MzMzEYWNjUyvXrIsU61iuI204a8PzVI6ri/sZgPc0RETaSMb2haTBzBVJWUl31RyJ5uIzGtIFfEZD9OxYKYtqRJGUxS/7pKkMjAzhNOQNAMCJ70PUHI3mUfzh9+k3y2vSMmTChAno2bMnfv/9d7FlSGhoqDjnnXfewbFjx7B7927069cPycnJWLduHTZt2lRpLDXNXi969Bg+vVyf9VJJx1lbW8Prr9sImDQNUReiUPToMYCqKy1YWVmprMygeNCm+M+q5vyTv78/AgMDxc8ymYxf+omINIBEIoGRMStlkfYrrzCk/es4KysLJSUlsLS0VNpuaWmJtLQ0lccsXboUoaGh2Ly5rALy1atXIZVKsWHDBnz55ZcQBAGrVq3CihUrxDdmr169CgcHB3zxxRcAgL59+8LCwgJJSUnieY2MjBAQEAAvLy/Y29vDzc0Nb731Fpo1a4b8/HwAwIcffogBAwZg0qRJKt/wLSoqQpGeJss9K12q+FZbnqdyXF3czwC8pyEi0jYGRoaQNmsKgM9pSDOZ25a1L8xKYqUsVfiMhnQFn9EQPTsmZVGNsFc5abrmrWxgZGKCwoICJF6+qu5wNE5dtQxp27YtZsyYgcDAQCxfvhw9e/bEmjVrUFRUhO3bt6s877O0+1B8mSNSUKyJ4sJCta4PPowjItJMhk8SsgD9rTCkSt++ffHJJ5/A2dkZLVu2xLBhw3DgwIFK5w8fPhwzZsxA9+7dYWpqiri4OCxZsgTHjx8X5xgYGGDJkiWYMGECrKyskJKSgq1bt2LZsmX1cUk6T6yUpQMV34qLixEdHQ13d3dx3UkkEri7uyMoKEjlMY0aNUJpaanSNrlcLh4rCEKVcwAgNDRU5Zu4oaGhCAkJEX8OgArnKS0thYEBi8u/KEM9r/im6XhPQ0SkXRo3K6uSVSqXoyA3T83REFVkbleWlJXJSlkq8RkN6Qo+oyF6dvwLE9WIold5XtY9NUdCpJpFG1sAQOYdfuGvLTVpGWJgYIBLly5hwYIFiImJwcaNG7Fx40ZMnz690vOy3Qe9iOeptJCWllblfMV/Pss5iYhIMykSWQBWZnmaVCrF5cuX8eGHH9Zo/uuvv44TJ05g8ODBcHZ2xqlTpxAWFobu3buLc7y9vTFjxgzMmjULL7/8Mry9vfHpp5/io48+qqvL0CuKBEO5jqzjwMBA/Pe//8XEiRPRqVMnrF+/HlKpVEyO2rZtG5YvXy7ODwsLw4wZMzBmzBi0adMGHh4eWLp0KcLCwsQEqrCwMCxYsACDBw+GnZ0dhg0bhlmzZonnyM7ORlxcnNIoLi5GWloabty4AQCIjIxETk4Otm3bBkdHR3To0AFfffUV7O3tcejQoXr8F9JNulTxrbbwfoaIiJ6X+OJ8zn0I/0goJ9IE5q2ftC9M5DOa2sJnNKSJeE9D9OyYlEU1wkpZpOlatLEDAGQmJlUzUz+9aMuQq1evYv/+/fj888/h4+MDiUQCAEhNTcW1a9eUjrt+/TpsbW0rjaWoqAj5+flKg6imnq60oKCotBAZGanymMjISKX5ADBgwABxfkJCAlJTU5XmyGQy9O7du9JzEhGRZlIkAACAvJhJAApHjx7FF198gf3799do/pw5c7Bq1SpcvHgRt27dwoIFC3Dz5k28/fbb4pw+ffrgwIEDOHz4MBITE7Fnzx4cP34cvXr1qqvL0CvlySy68dbn7t27MX/+fPj5+SEmJgbdu3fHwIEDkZGRAQCwtbWFtbW1OH/ZsmUICAjAsmXLcO3aNWzevBnHjh3DtGnTxDkfffQRfvrpJ6xbtw7Xr1/H119/LSZ51dS9e/cwcOBANG7cGL/88gsuXryI1157DUOHDsWVK1dq5+L1mC5VfKstvJ8hIqLn1filskpZfEZDmsjMogVMGjaAvKQE2Smp6g5HI/EZDekK3tMQPTu2L6QakTUv+8Kffy9HzZEQqVZeKYtJWarUVcuQc+fOoWPHjkpzHBwckJiYWAdXQVQmMDAQ27Ztw8WLF3HhwgV4eXkpVVoAgMWLF2P+/PkAgG+//RZnzpzB3LlzcejQIbz33nvo0aMHpk6dKs7/5ptvsHDhQty8eRMJCQlYunQpUlJSavzwmoiINIORMVtl1QWJRAKZTIbs7PIHQBEREZg6dSo6dOiAmzdvwtHREa+99hrmzp1b6XlMTExgamoqfpbJZHUatzYTk1l0qMJQcHAwgoODVe5zdXVV+iyXy+Hn5wc/P79Kz/fgwQPMmTMHc+bMEbfJZDJ88sknlR5jb29fYVt0dDQGDhxYXfj0HFgpS7Xq7me+//57pfm8nyEiIqC8m0k+k7JIA7WwLauSlZOShtISeTWz9ROf0ZAu4T0N0bNhUhbVCL/wk6Yzb1PWrzyDSVmVM5Q38gAAIABJREFUetYvSWFhYZg7dy7++OMPREVFoX379hVahqxevRoRERHw8fHB7t270atXL0ydOlXpixRRbdu9ezdatGgBPz8/WFlZISYmRqy0oHi4a2VlJc6PjIzEuHHjsGzZMixfvhw3b97EsGHDEBcXJ8756quvIJVKsWHDBjRt2hRnz57FwIEDUVhYWO/XR0REz8+QCQB1Yv78+WjcuDF2794tbluxYgXMzMwQHx8PuVwOQ0NDLFiwADt27Kj0PD4+PliyZEk9RKz9xGQWVnwjLWYktuFkouzTqrqfAYBWrVopzef9DBERAU91M8nmi/OkecyfJGVlJrF1YVX4jIZ0Be9piJ6doG9DJpMJgiAIMplM7bFoy1h86mchIDZSsOnkoPZYNHGoY01xHSuPJacPCQGxkUKrzh3VHosmjw8//FC4c+eO8PjxY+H8+fNCr169xH2//vqr0poyNDQUFi1aJNy8eVMoKCgQEhMThaCgIKFJkyZK5xwyZIhw5coV4dGjR8K1a9eEDz744Jli4lrmqM2hrvXEdcxR24NriqO6wTWieli2sxcCYiMF3zOH1R6Lpg5BEIShQ4cqbatqPY0dO1Z48OCB4O7urrR9zJgxQlJSkjBmzBiha9euwoQJE4SsrCxh4sSJlf5sExMTQSaTiaNly5Zcx5WMj3/YKATERgpdXPuqPRZtGrw316zR+923hYDYSGHKmq/UHos2Dd7TcOjC4HriqG5wjTz7eGvuLCEgNlJ4e/5Hao9FEwf//1O9Y8icmUJAbKQw3Geu2mPR9MFnNBz6MHhvzqELozbXFCtlUbUkBgZo3KwpAFbKIs3UQNZYfFMo8w7fxKhKVS1DhgwZgry8PPFzTVqGAMChQ4dw6NChWo2TiIiI6HmILd9YXahWjBkzBps2bcKoUaNw8uRJpX2rVq3CihUrsGvXLgDA1atXYWdnBx8fH2zfvl3l+YqKilDEijk1wrZvpAtY8Y2IiKj2iJWy+IyGNJC5bVknk8xEPp+pDp/REBHpHwN1B0CaT9q0CQwMDQEAD3JYGpc0j0UbWwBAbnomCgsK1BwNEREREalLeSILE39e1HvvvYeQkBCMHTsWhw8frrC/UaNGYrsEBblcDgMD/pmhNhgqEgy5lkmLcR0TEWmmvn374uDBg0hOToYgCBg6dKjS/pCQEAiCoDSOHDmiNKdZs2b44YcfkJubi5ycHGzatAlSqbQ+L0PvyJo3A8D2haSZWtiVJWVlsX0hERFRBayURdVq/OQNjIc591FaIldzNEQVtWhjBwDITExScyREREREpE5GxooEAFZleZpUKkX79u3Fz/b29ujWrRuys7Nx9+5dLF68WGn+2LFjsW3bNsyePRtRUVGwtLQEADx69Eh8azcsLAwLFixAUlIS4uLi8Morr2Du3LnYsmVL/V2YDlNUfZNzLZMWMzJmxTciIk0klUpx+fJlbNmyBfv27VM558iRI/D09BQ/FxYWKu3/3//+B2trawwYMADGxsYICQnBhg0bMH78+DqNXZ8pntOwmwlpGolEguatbAAAWUl/qzkaIiIizcOkLKqWoixuXtY9NUdCpJqiUlbGHSZlEREREekzRaUsJrIo69GjB06fPi1+Xr16NQBg69at8PT0hJWVldL8qVOnwtjYGOvWrcO6devE7Yr5APDRRx9h6dKlWLduHSwsLJCSkoLvv/++2rYKVDPlbd9YYYi0lxErZRERaaSjR4/i6NGjVc4pLCxEenq6yn2dOnXCoEGD0KNHD0RHRwMo+254+PBhzJ8/H6mpqbUeMwGNXyqrlMWkLNI0ZhbmMGnYAPKSEmSn8H//RERE/8SkLKqWWBb3HsvikmZq8SQpK5NJWURERER6jQkAqp05cwYSiaTS/TNmzFCqauDq6lrtOR88eIA5c+Zgzpw5tRIjKWPVN9IF5cmFXMdERNqmf//+SE9PR05ODn755RcsXLgQ2dllyUAuLi7IyckRE7IAIDw8HKWlpejduzf2799f4XwmJiYwNTUVP8tksrq/CB0ikUjEpCy2LyRNY25b1rowOzmV3XaIiIhUMFB3AKT5xLK42XwDgzRTC7FSVqKaIyEiIiIidTJkAgDpCDGZhQmGpMXK23ByHRMRaZOjR49i4sSJcHd3h7e3N/r164cjR47AwKDscZKVlRUyMjKUjpHL5cjOzq5QgVXBx8cHeXl54khOTq7z69AljZqYwdCorMYCX54nTWNu2woAkHWXrQuJiIhUYVIWVcuseXMALItLmkkikaDFkzcxMhNYKYuIiIhqrm/fvjh48CCSk5MhCAKGDh1a42P79OmD4uJi/PHHH0rbFy9eDEEQlMb169eV5piamiIoKAhZWVnIz8/HTz/9BAsLi1q5Jn3HSlmkK8rXMhMMSXuVJxdyHRMRaZNdu3YhLCwMV69exYEDB/DWW2+hV69e6N+//3Of09/fH2ZmZuKwsbGpvYD1gKJKVkFuHuQlJWqOhkiZ4vlMVuJdNUdCRESkmZiURdVSVMp6wKQs0kBNrS1h3MAUJcXF7FdOREREz0QqleLy5cv48MMPn+m4Jk2aYPv27Th58qTK/VevXoWVlZU4XnvtNaX9q1evxttvv41Ro0ahX79+aNmyJfbu3fvc10HljIyZAEC6obztGxMMSXuxDScRkW5ISEhAZmYm2rdvDwBIS0ur8FKJoaEhXnrpJaSlpak8R1FREfLz85UG1ZzYzYTPaEgDmds9ScpKYlIWERGRKkbqDoA0n4xf+EmDWbSxAwBkJf0NobRUzdEQERGRNjl69CiOHj36zMd999132LFjB+RyOYYNG1Zhf0lJCdLT01Uea2Zmhvfffx/jxo3DqVOnAACenp6Ij49H7969ERUV9czxUDlWyiJdYPgkkQVgMgtpN0P+TiYi0gk2NjZo3rw5UlPLXoiNjIxEs2bN4OTkhEuXLgEA3NzcYGBgwPuZOqJ4RvMgm60LSfMo2hdmJrJ9IRERkSqslEXVYlIWabIWbWwBAJl32LqQiIiI6t7kyZPRtm1b+Pr6VjqnQ4cOSE5Oxl9//YUffvgBrVu3Fvc5OzvDxMQE4eHh4rY///wTiYmJcHFxqfScJiYmkMlkSoMqUlQXkhczkYW0lyK5EGBSFmm38opvXMdERJpEKpWiW7du6NatGwDA3t4e3bp1Q+vWrSGVSvHVV1+hd+/esLOzg5ubGw4cOIBbt27h2LFjAID4+HgcOXIEGzduRM+ePdGnTx8EBQXhxx9/FBO3qHYp2hfyGQ1pGolEAvPWZUlZWUlMyiIiIlKFSVlUrcbNy77ws30haaLypKxENUdCREREuq59+/ZYsWIFJkyYALlcrnJOVFQUJk+ejIEDB2LGjBmwt7fHb7/9hsaNGwMArKysUFhYiNzcXKXj0tPTYWVlVenP9vHxQV5enjiSk5Nr78J0SHmlLCYAkPZSJLIAgJwVhkiLsXohEZFm6tGjB2JiYhATEwOgrL16TEwM/Pz8IJfL4ejoiIMHD+LGjRvYvHkzoqOj0bdvXxQ99ft8/PjxiI+Px8mTJ3H48GGcPXsWU6dOVdcl6TyxUhaf0ZCGaWLRAsYNTCEvLkFOCpMyiYiIVGH7QqqSRCIR38LIy+IXftI8Fk+SsjJYKYuIiIjqkIGBAXbs2IHFixfj5s2blc57uh1ibGwsoqKikJiYiNGjR2PLli3P/fP9/f0RGBgofpbJZEzMUsHImAkApP0UiSzy4hIIgqDmaIien5Hxk0pZTJQlItIoZ86cgUQiqXT/wIEDqz1HTk4Oxo8fX5thURXEbiZsX0gaxtyurDJ4dnIKSit5eY2IiEjfsVIWValREzMYGpXl7j3IZlJWdTZu3IisrCwUFBTgypUrcHZ2rnRuv379IAhChWFpaVmPEWs/sVJWApOyiIiIqO7IZDL07NkTQUFBKC4uRnFxMRYtWoTu3bujuLgYrq6uKo/Lzc3FjRs30L59ewBAWloaTE1N0aRJE6V5lpaWSEtLq/TnFxUVIT8/X2lQRYYmTAAg7ScmshQzuZC0m5hgyERZIiKiF9KYlbJIQ5nbPmldeJetC4mIiCrDSllUJZl5cwDAw/u5KC1hlntlmjZtCgAoLi7GoEGDkJmZiQ4dOiAnp/o3VxwcHJCXlyd+zsjIqLM4dY1JwwZoZl3W5ieD7QuJiIioDuXl5aFr165K22bOnAk3NzeMHDkSCQkJKo+TSqVo164dQkNDAQDR0dEoKiqCu7s79u7dC6Ds+6CdnR0iIyPr9iL0gNgqi8kspMXYhpN0haIVZ0kx1zIREdGLUHQzyWdSFmkYc9uySlmZiXfVHAkREZHmYlIWVUksi8sv+1Xy8vICUPZgTlG14M6dOzU6NiMjA7m5uXUVmk5TfOF/eD8XBbl51cwmIiIiUiaVSsUKVgBgb2+Pbt26ITs7G3fv3sXy5cthY2ODSZMmQRAExMXFKR2fkZGBx48fK21ftWoVwsLCkJiYiJYtW8LX1xdyuRw7d+4EUJbctXnzZgQGBiI7Oxt5eXlYu3YtIiIiEBUVVT8XrsOMWCmLdED5OmZyIWk3QxO2lCUiIqoNfE5DmqqF3ZNKWUmslEVERFQZti+kKrEsbs0MHjwYALBt2zakp6fj0qVL+OCDD2p0bExMDFJSUnD8+HH06dOn0nkmJiaQyWRKQ99ZKFoX3mHrQiIiInp2PXr0QExMDGJiYgAAq1evRkxMDPz8/AAA1tbWsLW1faZztmrVCjt37sSff/6J3bt34969e3j11VeRlZUlzpkzZw5+/vln7NmzB7/++ivS0tLw7rvv1t6F6TEjYyYAkPYzZKUs0hHlv5O5lomIiF6EIinrQXb1nTmI6lPz1kzKIiIiqk69JmV99tlnuHDhAvLy8pCeno59+/bBwcFBaY6pqSmCgoKQlZWF/Px8/PTTT7CwsFCa07p1a/z88894+PAh0tPT8dVXX8HQ0LA+L0Vv8A2MmmnTpg0A4K+//sKbb76J9evXY82aNZg4cWKlx6SmpmLatGkYMWIERowYgbt37+L06dN45ZVXVM738fFBXl6eOJKTk+viUrSK+ZOkLLYuJCIioudx5swZSCSSCsPT0xMA4OnpCVdX10qP9/X1rfDdbezYsbCxsUGDBg3QunVrjB07Frdv31aaU1hYiFmzZqF58+Zo3LgxRowYgfT09Nq/QD2kqDAkZwIAaTFxHbPlG2k5Vi8kIiJ6caaNGsG4gSkAvjxPmkUikcBckZTF9oVERESVqtekrH79+iE4OBivvvoqBgwYAGNjYxw/fhyNGjUS56xevRpvv/02Ro0ahX79+qFly5bYu3dvecAGBjh06BBMTEzQp08fTJo0CZMnTxbfZqfaJWvOXuU1YWBQ9j8lPz8/xMTEYOPGjdi4cSOmT59e6TE3btzAhg0bcOnSJURGRuL9999HREQE5syZo3K+v78/zMzMxGFjY1Mn16JNWCmLiIiIiJ5mpKgwVMxKWaS9WPGNdIUR2xcSERG9MEU3k8KCAhQ9eqzmaIjKNbG0gHEDU8iLS5CTmqbucIiIiDSWUX3+sEGDBil9njx5MjIzM+Hs7IzffvsNZmZmeP/99zFu3DicOnUKQNnb6fHx8ejduzeioqLwxhtvoHPnzvDw8EBGRgYuX76ML774AitXrsSSJUtQzDdJa1V5+0KWxa1KWlpahdY2169fx4gRI57pPBcuXMBrr72mcl9RURGK+IdMJS0UlbISmJRFRERERE8nAPC+kLQXqwuRrhDXMv9WR0RE9NzYupA0lbltWZWs7OQUlMrlao6GiIhIc9Vrpax/atKkCQAgO7usCpOzszNMTEwQHh4uzvnzzz+RmJgIFxcXAICLiwtiY2ORkZEhzjl27BiaNGmCLl26qPw5JiYmkMlkSoNqRmxfmHVPzZFotqioqArbHBwckJj4bG31unfvjtTU1NoKS+dZtLEDAGSyfSERERERATBkMgvpAFYXIl3Bqm9EREQvjt1MSFOZ27UGAGQmsXUhERFRVdSWlCWRSPDNN9/g7NmziIuLAwBYWVmhsLAQubm5SnPT09NhZWUlzklPT6+wX7FPFR8fH+Tl5YkjOTm5ti9HZ8maNwfAL/zVCQ4OBgDMmzcP7dq1w9ixYzF16lRxOwAsX74c27ZtEz/Pnj0b77zzDtq1a4cuXbpg9erVcHNzUzqGKiczb44GjaUolcuRdZf/myYiIiIiJgCQbihvw8nkQtJuikpZcibKEhERPbfGLym6mfAZDWmWFrZlSVlZiX+rORIiIiLNVq/tC58WHByMrl27VtqqrTb5+/sjMDBQ/CyTyZiYVUNipSx+4a/SpUuXAAAjR46Et7c3EhIS4OXlhR07dohzrK2tlVocmpiYICAgADY2NigoKMCVK1fg4eGB06dP13f4WsniSevC7JRUyPmwgoiIiIjAtm+kG4yMFeuYyYWk3QxZ9Y2IiOiFlVfKYvtC0izmdmXtC7PuMimLiIioKmqplLV27Vq89dZbcHV1VUqOSktLg6mpqdjWUMHS0hJpaWniHEtLywr7FftUKSoqQn5+vtKg6kkkEjR+qewLP9/CqBkXFxc0bNgQnTt3xqZNm5T2eXp6wtXVVfy8atUqdOjQAY0aNYK5uTnc3NyYkPUMWjxJysq8k6TmSIiIiIhIU5RXGGICAGmv8kQW3UounDlzJhISEvDo0SOcP38ePXv2rHL+7NmzER8fj4KCAiQlJSEwMBCmpqbifgMDA/j5+eH27dsoKCjArVu38Omnn1Z6vvXr10MQBMyePbvCvsGDB+P8+fMoKChAdnY29u3b9/wXSgAAAyNDGBiU/dmRVd+IiIieX+MnL84/yGZSFmkW89ZPkrIS2b6QiIioKvWelLV27VoMHz4cbm5uuHPnjtK+6OhoFBUVwd3dXdzm4OAAOzs7REZGAgAiIyPxr3/9Cy1atBDnDBgwALm5ubh27Vq9XIO+aGgmg6FxWTG1fH7hJw2jSMrKYFIWERERET3BVlmkC8rXse4kF44ePRqBgYHw9fWFk5MTLl++jGPHjin9bedpY8eOxYoVK+Dr64uXX34Z77//PsaMGYPly5eLc7y9vTFjxgzMmjULL7/8Mry9vVUmXAHAsGHD8Oqrr6qsmv7uu+8iNDQUISEh6NatG/79738rVb2m56Oo+AawUhYREdGLULw4z24mNbNx40ZkZWWJ3UmcnZ2rnN+vXz9ER0fj8ePHuHnzJiZNmlRPkWo3iUSC5q1tAACZSUzKIiIiqkq9ti8MDg7GuHHjMHToUOTn54sVrnJzc/H48WPk5eVh8+bNCAwMRHZ2NvLy8rB27VpEREQgKioKAHD8+HFcu3YNoaGh+PTTT2FlZYVly5YhODgYRfwjT61StC4syMtjezjSOBZt7AAAmQlMyiIiIiKiMkbGbJVF2q+84pvu3IfPnTsXGzduxNatWwEA06dPx5AhQzBlyhSsXLmywvw+ffrg3Llz2LlzJwAgMTERO3fuRO/evZXmHDhwAIcPHxbn/Oc//8HQoUOVztWyZUusXbsWb775Jg4dOqS0z9DQEN9++y0++eQTbNmyRdx+/fr1Sq/FxMREqWKXTCar4b+CflGsY0D3qr4RERHVJ8VzGiZlVa1p06YAgOLiYgwaNAiZmZno0KEDcnIqLzjQpk0bHDp0CN999x3Gjx8Pd3d3bNq0CampqTh+/Hh9ha6VmlpZwtjUFPLiEtxPTVd3OERERBqtXitlzZw5E02bNsWZM2eQlpYmjjFjxohz5syZg59//hl79uzBr7/+irS0NLz77rvi/tLSUrz11luQy+WIjIzEDz/8gO3bt2PRokX1eSl6QSyLy17lpIHKK2UlqjkSIiIiItIUutr2jfSLolKWrqxjY2NjODs7Izw8XNwmCALCw8Ph4uKi8piIiAg4OzuLLQ7t7e0xePBgMQFLMcfd3R0dOnQAADg6OlY4n0QiQWhoKFatWqWyurqTkxNatWqF0tJSXLp0CSkpKTh8+DC6dOlS6fX4+PggLy9PHKqqb9FTFd9KSiCUlqo5GiIiIu0lY/vCGvHy8gJQ9hzy999/x507d3DixAncvn270mOmT5+OhIQEzJ8/H/Hx8QgODsZPP/2EOXPm1FfYWkHatAls/9VZaXTqW/a9+97fySiVy9UcIRERkWar10pZEomk2jmFhYWYNWsWZs2aVemcpKQkDBkypDZDIxX4BgZpKkMjI7xkYw0AyGS/ciIiIiJ6QkxmKWalLNJeulbxzdzcHEZGRkhPV36DPj09HZ06dVJ5zM6dO2Fubo6zZ89CIpHA2NgY69evh7+/vzhnxYoVMDMzQ3x8PORyOQwNDeHn54clS5aIc7y9vVFSUoI1a9ao/Dlt27YFACxZsgRz587FnTt3MG/ePJw+fRoODg4qKyv4+/sjMDBQ/CyTyZiYpYIRk2SJiIhqRfnL83xOU5XBgwcDALZt24Z///vfSE5Oxrp167Bp06ZKj3FxcVF6cQAAjh07hm+++abSY/Staqppo0b49MBOsY3mP2Xd/bueIyIiItI+9Vopi7SLzLw5ACA/656aIyFS1ry1DQyNjPD44UPkZWSqOxwiIiIi0hBMAlCtb9++OHjwIJKTkyEIQoX2bv80fPhwHD9+HBkZGcjNzUVERATeeOONCvNatmyJ0NBQZGVloaCgAFeuXIGzs3NdXYbe0LVKWc+jX79++PzzzzFz5kw4OTlh+PDhGDJkCBYuXCjOGT16NMaPH49x48bByckJkyZNwscffyzud3JywuzZszF58uRKf46BQdmfxb788kvs3bsXly5dgqenJwRBwKhRo1QeU1RUhPz8fKVBFYmVsnSoDScREVF9MzIxQUNZYwB8eb46bdq0AQD89ddfePPNN7F+/XqsWbMGEydOrPQYKysrlS8ONGnSBA0aNFB5jL5VTe34795o/FIzFD8uxL2/U5RGRkIiInbtU3eIREREGq9eK2WRdmGlLNJUFvZ2AFgli4iIiIiUGRkrkll0o8JQbZFKpbh8+TK2bNmCffuq/6P566+/jhMnTuDzzz/H/fv34enpibCwMPTu3RsxMTEAgKZNm+LcuXM4deoUBg0ahMzMTHTo0EFlZSF6NmJyoY5UfMvKykJJSQksLS2VtltaWiItLU3lMUuXLkVoaCg2b94MALh69SqkUik2bNiAL7/8EoIgYNWqVVixYgV27dolznFwcMAXX3wBoCwZ0cLCAklJSeJ5jYyMEBAQAC8vL9jb2yM1NRUAlFobFhUV4fbt27C1ta29fwQ9ZKhjFd+IiIjUQVGdqKS4GI/ymAheFUWyvZ+fH/Lz8xETE4OuXbti+vTp2L59e639HH2rmtrFtS8A4NyPexAWsFbN0RAREWknJmVRpZiURZqgq1s/NLNW/uN92x6vAAAy7ySpOoSIiIiI9BQrZal29OhRHD16tMbz58yZo/R5wYIFGDp0KN5++20xKcvb2xt3797FlClTxHl37typ8rz61urjeRnq2DouLi5GdHQ03N3dceDAAQCARCKBu7s7goKCVB7TqFEjlJaWKm2Ty+XisYIgVDkHAEJDQ1W2owkNDUVISAgAIDo6Go8fP0bHjh1x7tw5AGWJW23atEFiYuILXDWx4hsREdGLUzyjeZDNFx+qk5aWViGp/vr16xgxYkSVx6h6cSA3NxePHz9WeUxRURGK9CTp3MDQEJ1f/zcAIO70b2qOhoiISHuxfSFVqqmVBQD2Kif1adfjFXh+uwLDPpujNBw9+gMA0m/fUWt8RFT/mjVrhh9++AG5ubnIycnBpk2bIJVKqzzG1NQUQUFByMrKQn5+Pn766SdYWFiI+x0dHbFjxw4kJSWhoKAA165dU2p9Q0RE2sHA0BAGhoYAmARQ2yQSCWQyGbKzy+8N33nnHVy8eBG7d+9Geno6Ll26hA8++KDK8+hbq4/npaj4Jtehhz2BgYH473//i4kTJ6JTp05Yv349pFKpmBy1bds2LF++XJwfFhaGGTNmYMyYMWjTpg08PDywdOlShIWFiYlYYWFhWLBgAQYPHgw7OzsMGzYMs2bNEs+RnZ2NuLg4pVFcXIy0tDTcuHEDAJCfn4/vvvsOvr6+GDBgABwcHLB+/XoAwP/93//V1z+PTipPktWddVwbeD9DRETPQlEpiy/OVy8qKqrCNgcHhyoT7SMjI+Hu7q60bcCAAYiMjKz1+LSR/SuOaNTEDA9z7uNOTKy6wyEiDcF7GqJnx0pZpJJV+7Zo37sHACDp6nU1R0P6qvugAQCA1Jt/IfXmX0r7Huc/wPmf9qsjLCJSo//973+wtrbGgAEDYGxsjJCQEGzYsAHjx4+v9JjVq1djyJAhGDVqFHJzcxEUFIS9e/fitddeAwA4OzsjIyMDEyZMwN27d9GnTx9s2LABcrkcwcHB9XVpRET0ghQJAAAg15G2b5pi/vz5aNy4MXbv3i1ua9u2LWbMmIHAwEAsX74cPXv2xJo1a1BUVFRpexB9a/XxvHSx4tvu3bvRokUL+Pn5wcrKCjExMRg4cCAyMjIAALa2tkpVr5YtWwZBELBs2TLY2NggMzNTTMJS+Oijj7B06VKsW7cOFhYWSElJQUhICD755JNniu2TTz5BSUkJQkND0bBhQ0RFRcHNzQ3379+vnYvXU2KlrGLdWce1gfczRET0LMRKWUzKqlZwcDBGjRqFefPmITQ0FL169cLUqVMxdepUcc7y5cthY2ODSZMmAQC+++47zJo1CytXrsSWLVvg5uaG0aNHY8iQIeq6DI3Sxe11AMC1X8+h9KmKtESk33hPQ/R8BH0bMplMEARBkMlkao9FU4fntyuEgNhIYWLAl2qPRRuGOtaUrq9jiYGBsOT0ISEgNlLo2Ke32uPRh6GuNaXra5mj9kanTp0EQRAEZ2dncdubb74pyOVywdraWgAqriczMzOhsLBQGDFihHhMx44dBUEQhN69K//dEhQUJJwu9pB7AAAgAElEQVQ8ebLS/SYmJoJMJhNHy5YtuY45anXwdyNHdYNrpOJoaGYmBMRGCgGxkYKBoaHa49HUIQiCMHToUKVtVa2nsWPHCg8ePBDc3d2VthcWFgrnzp1T2vbtt98KERERNY6F61j1mPxN2f24y6jhao9F2wbvzTVnvNy3jxAQGynM3rlZ7bFoyqjJ/QygvKbq6n4G4D0NR90O/m7kqG5wjVQcHV7tKbiMHq40Jq32FwJiI4X3li1Ue3yaPhRr6urVq8KjR4+Ea9euCR988IHSnJCQEOHUqVNK2/r16ydcunRJePz4sXDr1i1h0qRJz/VzdXEtf37kJyEgNlLo6tZP7bHoy+AzGg5NH5p0T8P7GY66HrX5u5GVsqgCW8cu6OrWD6VyOY4GbVB3OKSn7J26Qdb8JRTk5uHmhYvqDoeINICLiwtycnIQHR0tbgsPD0dpaSl69+6N/fsrVs9zdnaGiYkJwsPDxW1//vknEhMT4eLiorK0OQA0adJEqUXTP/n4+GDJkiXPfzFERFTrFNWFSuVyvsVbS8aMGYNNmzZh1KhROHnypNK+1NRUXLt2TWnb9evXMWLEiPoMUSeJlbJY8Y20mGIdy3Wo4tuL0qT7GYD3NEREmsTC3g7TN66pdH9uemY9RqPdXFxckJ+fr3Kfp6dnhW1nzpyBk5NTXYeldazat0XzVjYoLizEjUjV3zeISP9o0j0N72dImzApiyoY/PF0AMDFg0eQkVB5v22iuuTo0R8AEHf6N5SW8KEaEQFWVlZiixsFuVyO7OxsWFlZVXpMYWEhcnNzlbanp6dXeoyLiwvGjBlTZalytl8iItI8utjyTZ3ee+89bNmyBe+99x4OHz5cYf+5c+fQsWNHpW0ODg5ITOQ95IsyMn7S9q2QSVmkvcT2hfydLNKk+xmA9zRERJrEzrELACA3IxN3YmKV9hUWFCDy/yo+5CaqS11c+wIAbp6/iKJHj9UcDRFpCk26p+H9DGkTA3UHQJrFwaUnOvTugZKiIhxbt0nd4ZCekkgk+NeTpKwrJ06rNRYiqnv+/v4QBKHK8c+HvnWlS5cuOHDgAHx9fXHixIlK5xUVFSE/P19pEJH26du3Lw4ePIjk5GQIgoChQ4fW+Ng+ffqguLgYf/zxh9L2zz77DBcuXEBeXh7S09Oxb98+ODg4KM05depUhd9z69evr5Vr0mdiAgCrC1UglUrRrVs3dOvWDQBgb2+Pbt26oXXr1gCAxYsXK80fO3Ystm/fjnnz5iEqKgqWlpawtLSEmZmZOGf16tV49dVX4ePjg3bt2mHs2LGYOnUqgoOD6+/CdFR5giHXMmkvfar4po33MwDvaYiINEnLjmX3jDFHw7F93gKlseuLL3E/LV3NEZK+6er6OgDg6qlf1RwJEdUHbbyn4f0MaRNWyiIlg2fPAACc27WXX/RJbWwdu6CppQUeP3iIG5EX1B0OEdWxgIAAbN26tco5t2/fRlpaGiwsLJS2Gxoa4qWXXkJaWprK49LS0mBqaoomTZoovYlhaWlZ4ZiXX34ZJ0+exIYNG/Dll18+38UQkVaRSqW4fPkytmzZgn379tX4uCZNmmD79u04efIkLC0tlfb169cPwcHB+P3332FkZITly5fj+PHj6Ny5MwoKCsR5GzZswKJFi8TPT++j58NKWZXr0aMHTp8+LX5evXo1AGDr1q3w9PSs8Gbi1KlTYWxsjHXr1mHdunXidsV8ALh48SKGDx8Of39/LFq0CAkJCfDy8sKOHTvq/oJ0nCHXMukAQz2qlMX7GSIielEtO3UAACTH31RzJESAWQtz2P6rM0pLS3Ht9Fl1h0NE9YD3NER1i0lZJHIc4IrWXV7G44cPcXLjNnWHQ3rM0cMVAHDt13N8O5xID2RlZSErK6vaeZGRkWjWrBmcnJxw6dIlAICbmxsMDAwq7TseHR2NoqIiuLu7Y+/evQDKWivZ2dkhMjJSnNe5c2f88ssv2LZtGxYuXFgLV0VE2uDo0aM4evToMx/33XffYceOHZDL5Rg2bJjSvkGDBil9njx5MjIzM+Hs7IzffvtN3F5QUID0dL4EUZvElm/8/ljBmTNnIJFIKt0/Y8YMjB8/Xvzs6upao/MeOnQIhw4deuH4SFl51TfdT2Yh3WVkrD8V33g/Q0REL8qmY1lSVsqfN9QcCRHQuf9rAICk2Djk38tWczREVB94T0NUt9i+kAAABoaGGPTRNADAr9t/xMOc+2qOiPSZ2Lrw+C/qDUQHzZw5EwkJCXj06BHOnz+Pnj17Vjl/9uzZiI+PR0FBAZKSkhAYGAhTU1OVc729vSEIglh5gai2xcfH48iRI9i4cSN69uyJPn36ICgoCD/++CNSU1MBANbW1gAAZ2dnAEBeXh42b96MwMBA9O/fH05OTggJCUFERIR4k9ClSxecOnUKx48fR2BgoNiiydzcXD0XSkQabfLkyWjbti18fX1rNL9JkyYAgOxs5T9kjh8/HpmZmYiNjcXy5cvRsGHDKs9jYmICmUymNEiZolKWXA+qspBu06dkFtJdRnpUKaumanI/07JlS1y8eFE8hvczRES6r1lLKzQ0k6GkqAgZtxPVHQ4Rurr2BQDEnfqtmpn0PPiMhrQZ72mIng8rZREAoMfbg2Bhb4eHOfdxehvbTZD6tOrcEc1btURhwSPEnzuv7nB0yujRoxEYGIjp06cjKioKXl5eOHbsGDp27IjMzMwK88eOHYsVK1ZgypQpiIiIgIODA7Zu3QpBEDBv3jyluT169MC0adNw+fLl+roc0lPjx49HUFAQTp48idLSUuzZswcff/yxuN/4yUPMp5Mb5syZI841NTXFsWPHMHPmTHH/yJEjYWFhgf/85z/4z3/+I26/c+cO7O3t6+GqiEhbtG/fHitWrEDfvn0hl8urnS+RSPDNN9/g7NmziIuLE7fv2LEDiYmJSElJgaOjI1auXImOHTtixIgRlZ7Lx8cHS5YsqY3L0FmsLkS6gskspAvElrLFTC58Wk3uZxwcHJSO4f0MEZFus+lU9ns/7VYC5CUlao6G9J1po0bo0LsHAODqL7+qORrdw2c0pAt4T0P0fAR9GzKZTBAEQZDJZGqPRROGkYmJsPD4PiEgNlJ4feJ7ao9HG4c61pSuruNBH08XAmIjhYkBX6o9Fl0b58+fF9auXSt+lkgkwt9//y14e3sLQMU1tXbtWiE8PFzpHF9//bXw22+/KW2TSqXCn3/+Kbi7uwunTp0SVq9e/Uxx6epa5lDPUNd64jrmqO3BNVX/QxAEYejQoZXuNzAwEC5cuCBMmzZN3LZ48WLhjz/+qPSYdevWCQkJCYKNjU2VP9vV1VUQBEFo27ZtpXNMTEwEmUwmjpYtW3KN/GN06usiBMRGCl4/blF7LNo2+P+fmjUW/xImBMRGCtYO7dUei7YN3ptrzhg4a6oQEBspDPeZq/ZYtG3wdzKHLgyuJ47qBtdI+XhjxvtCQGykMMZvgdpj0ebB//+sneE4wFUIiI0UPvt5t9pj0cXBZzQc+jJ4b86hC6M21xTbFxIcB/RHM2sr3E9LR8SPe9UdDum5bgNcAQBXTpxScyS6xdjYGM7OzggPDxe3CYKA8PBwuLi4qDwmIiICzs7OYvlce3t7DB48GIcPH1aaFxwcjEOHDuHkyZM1ioXtl4iISBvJZDL07NkTQUFBKC4uRnFxMRYtWoTu3bujuLgYrq6uSvPXrl2Lt956C66urkhOTq7y3IpS3e3bt690TlFREfLz85UGKTMyZnUh0g2KSllyVn0jLVbehpPrmIiIqCo2nToAAFL+vKnmSIiALmxdWGf4jIaISH+xfSGhTXdHAEDM0ZMoKWJZeVIfqw7t0KKNLYoLC3H91wh1h6NTzM3NYWRkhPT0dKXt6enp6NSpk8pjdu7cCXNzc5w9exYSiQTGxsZYv349/P39xTljxoyBk5NTtX3Pn8b2S0REpI3y8vLQtWtXpW0zZ86Em5sbRo4ciYSEBHH72rVrMXz4cPTv3x937typ9tzdu3cHAKSmptZqzPpGbJXFexrScobGXMuk/Qz5O5mIiKhGWnYsa/GUzKQsUjMDQ0N0fv3fAICrp9i6sLbxGQ0Rkf5ipSyCrWMXAEBibJyaIyF95+jRHwDwZ0QUCgsK1BsMoV+/fvj8888xc+ZMODk5Yfjw4RgyZAgWLlwIAGjVqhW+/fZbjB8/HoWFhTU+r7+/P8zMzMRhY2NTV5dARERUJalUim7duqFbt24Ayt447NatG1q3bg0AWL58ObZt2wag7O3FuLg4pZGRkYHHjx8jLi4OBU++uwQHB2PChAkYN24c8vPzYWlpCUtLSzRo0AAA0LZtWyxcuBBOTk6ws7PD22+/je3bt+PMmTOIjY1Vw7+C7lBUFyphdSHScuUJhlzLpL34O5mISHP17dsXBw8eRHJyMgRBwNChQyvM8fX1RUpKCgoKCnDixIkKVX2bNWuGH374Abm5ucjJycGmTZsglUrr6xJ0RgNZY7xkYw2AlbJI/exfcUSjJmZ4kJ2DOzH8+4Qm4DMaIiLdwEpZes7I1BQtO5TdUCVdYVIWqZej2LrwtHoD0UFZWVkoKSmBpaWl0nZLS0ukpaWpPGbp0qUIDQ3F5s2bAQBXr16FVCrFhg0b8OWXX8LZ2RmWlpa4dOmSeIyRkRFef/11zJo1C6ampigtLa1w3qKiIhTxbWkiItIAPXr0wOnTp8XPq1evBgBs3boVnp6esLa2hq2t7TOdc+bMmQCAM2fOKG2fPHkytm3bhqKiInh4eMDLywtSqRR3797Fnj17sGzZshe7GBITWeT8nkFaTGJgAEOjsj/VsMIQaTNWLyQi0lxSqRSXL1/Gli1bsG/fvgr7P/30U3z88ceYNGkSEhISsHTpUhw7dgydO3cWH/r/73//g7W1NQYMGABjY2OEhIRgw4YNGD9+fH1fjlZr2bGsdeG9v1PwOP+BmqMhfdfVrR8A4Nqv5yCo+Ls+vRg+oyEi0l9MytJzrV7uCENjI+RlZuF+Wnr1BxDVkRZtbGHdoR3kxSW4duasusPROcXFxYiOjoa7uzsOHDgAAJBIJHB3d0dQUJDKYxo1alThC7tcLhePPXnyZIU2TiEhIYiPj8fKlStVftknIiLSJGfOnIFEIql0v6enZ5XH+/r6wtfXV2lbVecDgL///hv9+/evcYxUc6wuRLpAsY4BrmXSbmKlLK5jIiKNc/ToURw9erTS/V5eXli2bBkOHjwIAJg4cSLS09MxbNgw7Nq1C506dcKgQYPQo0cPREdHAwA++ugjHD58GPPnz1fZlt3ExASmpqbiZ5lMVstXpZ1sniRlsUoWqZtpo0boMXQQAL40X1f4jIaISH8xKUvP2Tp2BgAksXUhqZmjR1mVrBtRv+NRXr6ao9FNgYGB2LZtGy5evIgLFy6IFTpCQkIAAN9//73S/LCwMMydOxd//PEHoqKi0L59eyxduhRhYWEoLS3FgwcPEBen/Lvj4cOHuHfvXoXtRERERHXNyJgJAKT9FIksAFBSzDeXSXsZGbNSFhGRNrK3t4e1tTXCw8PFbXl5eYiKioKLiwt27doFFxcX5OTkiAlZABAeHo7S0lL07t0b+/fvr3BeHx8fLFmypD4uQau07PQkKSv+hpojIX3Xe+Q7aGRmhoyERMSfjVR3ODqLz2iIiPQTk7L0nN2/ugAAEq9cU3MkpO+6D/IAAMSeOKXmSHTX7t270aJFC/j5+cHKygoxMTEYOHAgMjIyAJT1H3/asmXLIAgCli1bBhsbG2RmZiIsLAwLFixQR/hEREREVTJkqyzSAYpEltLSUpSWyNUcDdHzUyQYypkoS0SkVaysrAAA6enKXTXS09PFfVZWVuLfExXkcjmys7PFOf/k7++PwMBA8bNMJkNycnJthq6VbDo6AACSWSmL1MjQyAj9/vMeAOD01v+xdWEd4jMaIiL9xKQsPWf7JCmLlbJInV7u2wctHdqjsKAAV8LPqDscnRYcHIzg4GCV+4YMGYK8vDzxs1wuh5+fH/z8/P6fvTsPi6ps/wD+HRhAGTZzYdFEFBHNHQ1xV6xc8qdprliKtqiv5pJmmqYiidYbauKSuEColLlGqSjmhgsaiSUJLiEqCIIQoCDLcH5/EKPzsqrDnJkz3891net955znzNzP8Y7hMPfcT7Wfv0+fPi8cIxEREdHzUC2VVcgCANJfLGQhqVAtKcuOb0REBKCgoAAF/PKEGmO5HLbOTgCA5DgWZZF4Ogx8HTZ2tshOS8dvYRUvbUqawc9oiIgMj5HYAZB4LOrWwUsN7VFcXIw7sVfFDocM2GsfegMAzn6/F3lP/cJJRERERFRdcnbKIglgxzeSiie5zAJDIiJ9kpKSAgCwtbVV229ra6s6lpKSggYNGqgdNzY2xksvvaQaQ1Vr0LQJ5CYmyM3ORuY9XjcSh0wmQ+8JYwEAp7b/ACW/5ERERKRxLMoyYKVLF6beTED+o1yRoyFD5eLxKhzbtUZB3mOc+G6n2OEQERERkZ6Sm/zbKYsFAKTH2PGNpII/k4mI9FNCQgLu3bsHT09P1T5LS0u4u7vj3LlzAIBz586hTp066Nixo2pM3759YWRkhKioKK3HrK8aupYsXZgcf0PkSMiQufboCvvmzfD44SOc27VP7HCIiIgkicsXGrAnSxf+JXIkZMhenzwRAHBu9348fJApcjREREREpK9KO2Up2WGI9JjchJ2ySBrYvZCISHcpFAo4OzurHjs5OaFdu3bIyMjAnTt3sHr1aixcuBDXr19HQkICli1bhuTkZOzfvx8AEBcXh0OHDiEwMBCTJ0+GiYkJAgIC8P333+PevXtiTUvvOLQo+Tfg0oUkpr4TxwEAzu3ah8cPH4kcDRERkTSxKMuANW5bWpQVK3IkZKiade4Ip47tUJifjxPbdogdDhERERHpMXYYIilQ5TG7C5Ge489kIiLd1alTJ5w4cUL1eNWqVQCAoKAgeHt748svv4RCocCmTZtgY2ODyMhI9O/fH/n5+apzvLy8EBAQgGPHjqG4uBh79uzBRx99pO2p6DWHFs0BAMnx10SOhAxVk3Zt0NStPYoKC3Fq+w9ih0NERCRZLMoyUDKZDC+/0hIAkPgHi7JIHK996A0AiNobhuy0dJGjISIiIiJ99qQrCwsASH+xuxBJBXOZiEh3nTx5EjKZrNIxixcvxuLFiys8npmZCS8vL02HZlBKly9MYqcsEkmfiSX/DUeHHebnM0RERDXISOwASBwNnBxR29IC+bl5SL2ZIHY4ZICcOrRFc/dOKCosxPEtIWKHQ0RERER6zpjLvpEEqApZ2F2I9JzcpKRTlpKFskRERGXY2NnC3NoKRYWF/HyGRNHAyRGt+/ZCcXExTgRxFRMiIqKaxKIsA1W6dOHdv+JQrFSKHA0ZotIuWRf2/Yx/Uu+LHA0RERER6Tsu+0ZSUJrHLGQhfcdOWURERBVr6FqydGHqzQQoi4pEjoYMUe8JJV2yYo+fxv2ERJGjISIikjYWZRmoxm1KirJuc+lCEkHjNq3QolsXKAuL8OuW78QOh4iIiIgk4EmHIRYAkP6SS7jj29SpU5GQkIC8vDycP38enTt3rnT8jBkzEBcXh9zcXNy+fRv+/v4wMzNTHTcyMoKPjw/+/vtv5Obm4saNG/jkk08qfL4NGzZAEATMmDGj3OOmpqa4dOkSBEFAu3btnm+SpGLMJWWJiIgq5PDv0oXJ8Vy6kGpW30nvYGrQ+jKb2+D+AIDj27aLHCEREZH0sSjLQDn+W5SV+CeLsjQpMDAQ6enpyM3NxR9//AE3N7dKx/fq1QvR0dF4/Pgxrl+/jvHjx2spUnG99uFEAMBvYYeQmZwicjREREREJAXslEVSYCzRPB45ciT8/f2xdOlSdOzYEZcvX0Z4eDjq169f7vgxY8ZgxYoVWLp0KVq2bIlJkyZh1KhRWL58uWrMvHnzMGXKFEybNg0tW7bEvHnzKiy4Gjp0KLp06YKkpKQKY/zyyy+RnJz8YhMlFdXPZBbKEhERleHQoqRTVlIci7Ko5jRwcsSgmVPRzK1DmU1uYoIbF6KRePmK2GESERFJnlzsAEj7TGqZwa55UwDAbRZlaYSNjQ0AoLCwEAMGDEBaWhqaN2+OzMzMCs9p0qQJfvnlF2zcuBFeXl7w9PTE5s2bce/ePRw5ckRbodcYmUyGfh96w66Zk9p+I2NjtOrVDcVKJY5tZpcsIiIiItKM0g5DSgl2GCLDIdWOb7Nnz0ZgYCCCgoIAAJMnT8agQYMwceJErFy5ssz4rl274syZMwgNDQUAJCYmIjQ0FO7u7mpjDhw4gIMHD6rGvPPOOxgyZIjaczk4OGDt2rV444038Msvv5QbX//+/fH6669j+PDhGDhwoCambNBkMtlTXd+kVWBIRESkCaXLF7JTFtWknu+MBgBcP/8bzu7aq3asWFmMm79dEiMsIiIig8OiLAPUqJUrjOVyZKWmISs1TexwJGHmzJkASpZjyMnJAQDcunWr0nMmT56MhIQEzJkzBwAQFxeH7t27Y9asWZIoymrVqxv6/+f9Co///ssRPLhzV4sREREREZGUsVNWxXr06IG5c+fCzc0NDg4OGDp0KA4cOFDh+LfeegtTpkxB+/btYWZmhtjYWCxZsqTC+5R58+ZhxYoVWL16NWbNmlVT0zAIUsxjExMTuLm5wc/PT7VPEARERETAw8Oj3HPOnj2LcePGoXPnzrh48SKcnJwwcOBAhISEqI354IMP0Lx5c1y/fh1t27Yt83wymQwhISH46quv8Ndff5X7Wg0aNEBgYCCGDh2K3NzcKudjamqqtoyipaVllecYGuN/C7IAaS7FSURE9CJqWShQt1FDAEBy/A2RoyGpUthYo9PgAQCA8A2bkfD7ZZEjIiIiMlwsyjJAXLpQ80q/SRscHIxu3bohKSkJ69evx+bNmys8x8PDAxEREWr7wsPDsXr16nLH69sffvtOehcAcPnIr2W+cVFUUIDL4cfECIuIiIiIJMq4tMMQCwDKUCgUuHz5MrZu3Yp9+/ZVOb5nz544evQoFixYgH/++Qfe3t4ICwuDu7s7YmJi1MZ26tQJH374IS5f5h/5NeFJdyHp5HG9evUgl8uRmpqqtj81NRWurq7lnhMaGop69eohMjISMpkMJiYm2LBhg1ph14oVK2BlZYW4uDgolUoYGxvDx8cHS5YsUY2ZN28eioqK8M0331QYX1BQEDZu3Ijo6Gg4OjpWOZ/58+ervQaVVdrxDZBWgSEREZEm2Ls4AwAyku8hLztb5GhIqrqMGAqTWma4E3uVBVlEREQiY1GWAWrctqQoi0sXak6TJk0AADdv3oSPjw86d+6Mb775BgUFBfjuu/KX6LOzsyv3j9LW1taoVasWHj9+rHZMn/7w69SxHZq0b4PC/HzsW/41ch5kiB0SEREREUnck2XfWADwvw4fPozDhw9Xe/z/drv67LPPMGTIEAwePFitKEuhUGDHjh14//33sXDhQo3Fa8hKO2UpDbyQpVevXliwYAGmTp2KqKgoODs7Y82aNVi4cCF8fX0BACNHjoSXlxfGjh2L2NhYtG/fHmvWrFE9R8eOHTFjxgx07NixwteZPn06LC0t1Yq9quLn5wd/f3/VY0tLSyQlJT3HLKWrNI8BQMmfyURERGq4dCHVNGO5HN1GDwcAnAr5XuRoiIiIiEVZBqhxm1YAgNt/sChLU4yMjAAAPj4+yMnJQUxMDFq3bo3JkydXWJT1rPTpD799J70DALh44CALsoiIiIhIK54s+yadDkO6QiaTwdLSEhkZ6r/br1u3Dr/88guOHTtWraIsfev+KwYpFhemp6ejqKgItra2avttbW2RkpJS7jnLli1DSEgItmzZAgC4cuUKFAoFNm3ahC+++AKCIOCrr77CihUr8MMPP6jGuLi4YNGiRQBKlu1s0KABbt++rXpeuVyOr7/+GjNnzoSTkxP69u0LDw8P5Ofnq73+b7/9hh07dmDChAllYisoKEABf85USood34iIiJ6VTCZDs84dYWZeW22/a/eS5ZaT41iURTWjff9+sG5QH1mpabgc/qvY4RARERk8FmUZGMt6dVHH3g7FSiXuxMaJHY5kpKSkoHHjxmr7rl69iuHDh1d6Tnl/lM7KyirTJQvQnz/82rs0Q6ue3VCsVOJE0E6xwyEiIiIiA/GkCEA6xSy6Ys6cObCwsMCuXbtU+0aNGoWOHTuic+fO1X4efer+Kxa5BJfhLCwsRHR0NDw9PXHgwAEAJR9Senp6IiAgoNxzzM3NUVxcrLZPqVSqzhUEodIxABASEoKIiAi14+Hh4QgJCcG2bdsAAB999JFaQaGDgwOOHDmCUaNGISoq6jlnTMaqIln+PCYiIsPl+f54DJj+YYXH2SmLakrPd0YDACJDd0NZVCRyNERERGQkdgCkXY7/Ll2YcjMBBXl5IkcjHeX9sdbFxQWJiYkVnnPu3Dl4enqq7Xvttddw7tw5jcenTX28xwEA/jh6HA/u3BU5GiIiIqKK9ejRAz/99BOSkpIgCAKGDBlS7XO7du2KwsJCXLp0qcyxqVOnIiEhAXl5eTh//nyZohUzMzMEBAQgPT0dOTk52L17Nxo0aPDC8zF0chYB1IgxY8Zg8eLFGDlyJNLS0gAAjRo1wpo1a+Dl5VWmw1Bl/Pz8YGVlpdoaNmxYU2HrLakWs/j7++P999/Hu+++C1dXV2zYsAEKhUJVHBUcHIzly5erxoeFhWHKlCkYNWoUmjRpgn79+mHZsmUICwtTFWKFhYXhs88+w8CBA+Ho6IihQ4di2rRpqufIyMhAbGys2lZYWIiUlBRcu3YNAHDnzh2146X7b968qbOdqfWBFIsLiYiInkXdRg3R74MJAIC7f8Uj8fIVtS3mcASuRp4XN0iSpKadOqBRqxYoyHuMcz/uFzscIiIiAjtlGZzGbUqKsls2P8oAACAASURBVLh0oWatW7cOI0aMwMcff4yQkBC8+uqr+OCDD/DBBx+oxixfvhwNGzbE+PHjAQAbN27EtGnTsHLlSmzduhV9+/bFyJEjMWjQILGm8cLqONihff9+AIBft4aIHA0RERFR5RQKBS5fvoytW7di37591T7P2toa3333HY4dO1am8+nIkSPh7++PyZMnIyoqCjNnzkR4eDhatGihKmhZtWoVBg0ahBEjRiArKwsBAQHYu3cvunfvrtH5GZrSIgAliwA0ZtSoUdi8eTNGjBiBY8eOqfa7ubnB1tYWv//+u2qfXC5Hz549MW3aNJiZmZXpYAToT/dfMUl12bddu3ahfv368PHxgZ2dHWJiYtC/f3/cv38fANC4cWO1nPH19YUgCPD19UXDhg2RlpamKsIqNX36dCxbtgzr169HgwYNkJycjG3btmHu3Llanx+pk+IynERERM/irc8+homZGeLPRmHThzPFDocMSK93S7pk/fbTQeRlZ4scDREREQEsypIsI2Nj2DdvBiO5+j9xs84dAAC3/2RRliaVfhjx9ttvY968eUhISMDMmTOxc+eT5fvs7e3Vlji8desWBg0ahFWrVmHGjBm4e/cu3nvvPRw5ckTr8WtK7/FjYSyXI/7MeSRdvSZ2OERERESVOnz4MA4fPvzM523cuBE7d+6EUqnE0KFD1Y7Nnj0bgYGBCAoKAgBMnjwZgwYNwsSJE7Fy5UpYWVlh0qRJGDt2LI4fPw4A8Pb2RlxcHNzd3blc1gtQdcpiEYBGjB49Glu3bsXo0aNx8OBBtWPHjh1D69at1fZt27YNcXFxWLlyZbkFWVQ9Uu74tm7dOqxbt67cY3369FF7rFQq4ePjAx8fnwqf7+HDh5g1axZmzZql2mdpaVlpUZaTk1OlMSYmJkImk1U6hqr2JI+lVVxIRERUHW08e6Fldw8UFRRg7/KvxQ6HDEjdlxuhVa+SL3ud2v6DyNEQERFRKRZlSdSIJZ/i1aFvVng88c+/tBiN4fDw8EBOTk65x7y9vcvsO3nyJDp27FjTYWmFxUt14D7s/wAAv27dLnI0RERERDVjwoQJaNq0KcaNG4eFCxeqHTMxMYGbmxv8/PxU+wRBQEREBDw8PACUdBgyNTVFRESEakx8fDwSExPh4eFRYVGWqakpzMzMVI8tLS01OS29Z/xvdyGARQDlUSgUcHZ2Vj12cnJCu3btkJGRgTt37mDx4sVq48eMGYPg4GDMmDEDUVFRqo5weXl5yM7OxsOHDxEbq/5Fn0ePHuHBgwdl9tOzedJhiHlM+utJxzfpFRcSERFVxrR2bQz9tKRg/Pi2HUhPvCNyRGRIeo4bCSMjI/x16gzSbt0WOxwiIiL6l5HYAZDmtXvDE68OfRPFSiUe3E0us106eASpN/4WO0ySmO5jR8Cklhlu//kXblyIFjscIiIiIo1zdnbGihUrMG7cOCiVyjLH69WrB7lcjtTUVLX9qampsLOzAwDY2dkhPz8fWVlZFY4pz/z585Gdna3akpKSNDAj6SgtZAFYBFCeTp06ISYmBjExMQBKltCMiYlRdSH639z74IMPYGJigvXr1yMlJUW1rVmzRuuxG5rSDkNK5jHpMeYxEREZqtcnT4SNnS0e3E1CRGCw2OGQAallaYHOQwcBAE6FsEsWERGRLtFqp6wePXpg7ty5cHNzg4ODA4YOHYoDBw6ojVm6dCnef/992NjY4MyZM5gyZQpu3LihOl6nTh2sXbsWgwcPRnFxMfbs2YMZM2bg0aNH2pyKzrJqUB9vL/oEABARGIzwdYEiR0SGwMzcHN3GDAcA/Lo1RORoiIiIiDTPyMgIO3fuxOLFi3H9+nWtv76fnx/8/f1Vjy0tLVmY9ZTSAgAAUHL5wjJOnjxZ6ZJsU6ZMgZeXl+rx/y4lVx3Pcw6V9aTDEDtlkf5SdXxjHhMRkQGxc26Knu+MBgDs81uFovx8kSMiQ9Jl2P/BzNwcyddu4Pr5i2KHQ0RERE/RaqcshUKBy5cv4z//+U+5xz/55BN89NFHmDx5Mtzd3fHo0SOEh4erLdOxY8cOvPLKK3jttdfw5ptvomfPnti0aZO2pqDTZDIZxvguhLm1FW7/+ReOfrtV7JDIQLi//X8wt7LC/YREXPn1lNjhEBEREWmcpaUlOnfujICAABQWFqKwsBCff/452rdvj8LCQvTp0wfp6ekoKipSLfVWytbWFikpKQCAlJQUmJmZwdrausIx5SkoKEBOTo7aRk88WfKtEIIgiBwN0fN7UszC4kLSX8b/FsoWsUiWiIgMyLCFc2BsIsefx07i6qkzYodjcObPnw8AyM7OhiAIEAQBV69erXD8+PHjVeNKt7y8PG2Fq1EymQxdRw8DAJzevkvkaIiIiOh/abUo6/Dhw1i0aBH2799f7vGZM2fC19cXP/30E/7880+8++67qo5aAODq6ooBAwbgvffew4ULF3DmzBlMnz4do0ePhr29fYWva2pqCktLS7VNirp7jYSLx6soyHuMnQuWorio7JIqRJpmJDdGr3+/AXQiaAeE4mKRIyIiKatTpw62b9+OrKwsZGZmYvPmzVAoFJWeY2ZmhoCAAKSnpyMnJwe7d+9GgwYNyh370ksv4c6dOxAEoUzBBBEZtuzsbLRu3Rrt27dXbRs3bkRcXBzat2+PqKgoFBYWIjo6Gp6enqrzZDIZPD09ce7cOQBAdHQ0CgoK1Ma4uLjA0dFRNYaendzk3wIAdmUhPcdiFpICdsqqGO9niIikyW3wADRz64D83DwcWLla7HAMmrOzM+zs7GBnZ4fu3btXOjYrK0s11s7ODo6OjlqKUrNadHNH3UYNkZudjUuHjogdDhFJHO9piJ6dVouyKuPk5AR7e3tERESo9mVnZyMqKgoeHh4AAA8PD2RmZiI6Olo1JiIiAsXFxXB3d6/wuefPn4/s7GzVJsVlPuycm2LQzCkAgJ+++gZpt26LHBEZijaevWFjZ4ucBxmI/jlc7HCISOKep2PmqlWrMHjwYIwYMQK9evWCg4MD9u7dW+7YLVu24I8//qiJ0IlIBykUCrRr1w7t2rUDUHJP0q5dO7z88ssAgOXLlyM4OBgAIAgCYmNj1bb79+/j8ePHiI2NRW5uLgDA398f77//Pt599124urpiw4YNUCgU2LZtG4CSe5wtW7bA398fvXv3RseOHbFt2zacPXsWUVFRIlwFaSgtAFCyuxDpORazkBQ8KZTlz+T/xfsZIiLpsbGzxeCPpwEAjn67FZn3Ku6ATDXv/v37SE1NRWpqKh48eFDpWEEQVGNTU1Nx//59LUWpWV1HlnTJurj/FxQ+5rKZRFSzeE9D9Ox0pijLzs4OAJCamqq2PzU1VXXMzs6uzC9FSqUSGRkZqjHl8fPzg5WVlWpr2LChhqMXl7GJCcb6LYaJmRn+OnkG537cJ3ZIZEB6eI0EAJzbtY8fHBBRjXqejplWVlaYNGkSZs+ejePHj+P333+Ht7c3unXrVqage/LkybCxscF///tfbUyHiHRAp06dEBMTg5iYGAAlfyCIiYmBj48PAMDe3h6NGzd+pufctWsX5syZAx8fH8TExKB9+/bo37+/2n3MrFmz8PPPP2PPnj04deoUUlJSMGzYMM1NzADJTVkAQNLAYhaSAhYXlo/3M0RE0lPLQoH31n8Ny7ovITn+Ok59973YIRm8+Ph43Lx5E9u3b1d94aoiFhYWuHXrFm7fvo39+/ejVatWVT6/rq3MU8fBDi17dQMAnN3FzwaJqGbxnobo+ehMUVZNKigoQE5OjtomJf2nvY+Gri54mJGJXYuXix0OGZCXW7eCU4e2KCosxNkfyq9oJiLSlOfpmOnm5gZTU1O1Tpzx8fFITExUdeIEgJYtW+Lzzz/Hu+++i+JqLMOqa3+AIaLnc/LkSchksjKbt7c3AMDb2xt9+vSp8PylS5eiQ4cOZfavW7cOTZo0Qa1atdClSxdcuHBB7Xh+fj6mTZuGunXrwsLCAsOHDy/z5RR6NsalBQCFLAAg/cZiFpKC0kJZJZfhVKNL9zMA72mIiF6UkdwY4/2Xw755M2SnpWPLtLlQFhWJHZbB+u233wAAw4YNw5QpU+Dk5ITTp0/DwsKi3PHx8fGYOHEihgwZgnHjxsHIyAhnz56tsqmDrq3M0+XtoTAyMsK1cxeQnnhH1FiISPp06Z6G9zOkT3SmKCslpaSlq62trdp+W1tb1bGUlJQy64saGxvjpZdeUo0xNO3f8ETvCV4AgF1L/JDzIEPkiMiQ9BxX0iXr0sGjzD0iqnHP0zHTzs4O+fn5yMrKUtv/dCdOU1NThIaGYu7cubhzp3p/vNC1P8AQERk6dsoiqVAVszCXSY89KS5kHj9Nl+5nAN7TEBG9qLcXzYOLx6vIz83F5v98jH9S+EUbMR09ehQAEBsbiyNHjmDgwIGwsbHByJEjyx1//vx5hISE4PLlyzh16hSGDRuGtLQ0fPjhh5W+ji6tzGNsYgL3YYMBgF+aJyKt0KV7Gt7PkD7RmaKshIQE3Lt3D56enqp9lpaWcHd3x7lz5wAA586dQ506ddCxY0fVmL59+8LIyAhRUVFaj1ls7d/whNfKpTAyMkJk6G7EHj8tdkhkQKwa1Ee710v+ez294weRoyEifebn5wdBECrdWrRoUaOvf/XqVezYseOZztGVP8AQEREgN2F3IZIGObu+kQQY2s9kfbyfKT2P9zRERM/H873xcB82GMVKJULmfo6kq9fEDon+R1ZWFq5duwZnZ+dqjS8qKsKlS5eqHK9LK/O07dcblnVfQlZqGmJPRIoWBxHpP328p+H9DOkTuTZfTKFQqP1C4+TkhHbt2iEjIwN37tzB6tWrsXDhQly/fh0JCQlYtmwZkpOTsX//fgBAXFwcDh06hMDAQEyePBkmJiYICAjA999/j3v37mlzKqJr94Ynxq5YAiNjY1zY9zP2+/mLHRIZmK6j3oKxiRw3oy/xppOIXsjXX3+NoKCgSsf8/fffz9UxMyUlBWZmZrC2tlb7JsbTnTj79u2LNm3a4O233wYAyGQyAEB6ejq++OILLFmypMzzFhQUoMBAPmQiItIH7JRFUmFswg5DpP+MDexnsj7ezwC8pyEiel4dBr6OgTMmAwD2+fnj6qkzIkdE5VEoFGjWrBlCQkKqNd7IyAht2rTBwYMHazgyzfEY9RYA4Pzu/ShWKkWOhoj0mT7e0/B+hvSJVouyOnXqhBMnTqger1q1CgAQFBQEb29vfPnll1AoFNi0aRNsbGwQGRmJ/v37Iz8/X3WOl5cXAgICcOzYMRQXF2PPnj346KOPtDkN0bV9vS+8ViyBsVyOC/t/xq7FyyEIgthhkQGRm5mh64iSX/hPh7BLFhG9mPT0dKSnp1c57umOmb///juAqjtmRkdHo6CgAJ6enti7t6SNt4uLCxwdHVWdOIcPH47atWurzuncuTO2bduGHj164ObNmy86PSIi0gJ2FyKpeFJgyFwm/WVoP5N5P0NEJD2mtWuj25jhsKpfT22/sVyuWi7uRNBOLhmnQ3x9fQEAjRs3hpWVFZYuXQqlUonQ0FAAQHBwMJKSkrBgwQIAwKJFi3D+/HncuHEDNjY2mDt3LhwdHbF582bR5vAs7Jo3QzO3DlAWFeH8np/EDoeI9BzvaYhqllaLsk6ePKmqbKzI4sWLsXjx4gqPZ2ZmwsvLS9Oh6Y22r/fFuJVLYSyX4+KBX7BrsR8Lskjr3Aa9DkUdGzy4m4wrXDaTiLSkOh0z7e3tAQBubm44ceIEsrOzsWXLFvj7+yMjIwPZ2dlYu3Ytzp49q7pJ+Pvvv9Vep169kj+4Xb16tcw650REpJtKCwCUBtKVhaRLVczCXCY9xu6F5avO/YyDgwOOHz+uOof3M0RE2ic3NYX3Nyvh0qVzhWMuH/kVP/sHaDEqqkrpslXR0dFIS0tDZGQkunTpoioyaNy4MYqLi1Xj69Spg8DAQNjZ2SEzMxPR0dHo2rUrrl69Kkr8z6rryJIvzV/59RSy06oupCAi0gTe0xA9H60WZVH1WNStg1eHvgkzc3O1/aXfzigtyPrh8+UQnvolkkhbeowbBQA4E7qbOUhEWlVVx0yTf5f8efpbFbNmzVKNNTMzQ3h4OKZOnar12ImIqObITVgAQNJgYmYGwHA6DJE0yVXLcDKP/1d17mdcXFzUzuH9DBGR9hjJjfHOVz5w6dIZjx89wtnv96BYqf7376z7abiw72d+WV7HeHt7Y/jw4ahfvz5ycnLKHO/Tp4/a49mzZ2P27NnaCk+jzMzN4Ta4PwCwWxsRaR3vaYieHYuydEzdRg3xYeAa1G3UsMIxFw8cZEEWiaa5eyfYN2+G/NxcRO0LEzscIjIwVXXMvH37NgAgMjJStS8/Px/Tpk3DtGnTqvUa1ensSUREusXYlAUApP+M5U/+RMMCQ9JnpZ2y2L2wrKruZxITE2FlZYXs7GzVPt7PEBFph0wmwyifz9C6by8U5udj67S5uPnbJbHDIgNgZGyMFl3d8TAjEyk3/0bh4/xKx3d88w3UUihwPyERNy5EaylKIqISvKchenYsytIh9i7N8MHG1bCqXw8P7iYh9kRkmTH3ExJxfvcBFmSRxjRq1QJdRw5DZkoqUm78jdSbCUi/fRfFSmW540u7ZF3c/wse5zzUZqhEREREROVSLZVVyAIA0l+leQywKIv0m2oZTnZ8IyIiPfLWgo/RafAAKAuLEDz7MxZkkdb0fe9dDJj2AQCguLgYD27fxb3rN3Hv2g08uJsMQVD/PLCH10gA7JJFRESkL1iUpSOatG+LSeu+grmVFZKv3cCmD2ciJ/2B2GGRxMlkMoz54nPYOTdV219UUID7t24j+346BDxpwyyDDC5dXwUAnN6xS6uxEhERERFVRM5OWSQBpXkMAErmMumxJz+TWVxIRET6YcBHk9Ft9HAUFxcj9DMfXD11RuyQyECY1DJDj7EjAAB52TmobWWJ+k0ao36Txmj7Wp8KzyvIe4yLPx3UVphERET0AliUpQNcu3fBeH8/mNauhYTfL2PL9LnIyy675jWRprXq3R12zk3x+OEj/HnsBGybOcG2qRPMzGvDwcUZDi7O5Z535fgppN++q+VoiYiIiIjKp+qUxQIA0mPGpUu+FRZBEIQqRhPpLmP+TCYi0muLFy/GkiVL1PbFxcWhZcuWAAAzMzN8/fXXGD16NMzMzBAeHo6pU6fi/v37IkT74vpMHId+748HAOzx/QqXDh0VOSIyJJ0GD4TFS3WQkXQPfoNGwNzGCg4uzrBr3gwOLs6wblC/zDmCIOD3X45wJRMiIiI9waIskXUY8BrGfPE5jE3kuHr6LIJnL6hyvWgiTfF8r+Rm88z3e3BwzQYAJd2z6jjYwbZZU5hbW5U5p7ioCHFnzms1TiIiIiKiyshN2CmL9B+XfCOp4M9kIiL9d+XKFfTr10/1uKioSPX/V61ahUGDBmHEiBHIyspCQEAA9u7di+7du4sR6gvpPcELb876DwDgZ/8AnP9xv8gRkSGRyWTo+c4oAMCp7T+gWKnEwweZuHbuIq6duyhydERERKQpRmIHYMh6jx+LsSuWwNhEjt8PHsG2j+axIIu0prl7Jzi2fQWFj/Nxavv3qv2CICAj6R6unjqD6LBDZbZLh46yk5semzp1KhISEpCXl4fz58+jc+fOlY6fMWMG4uLikJubi9u3b8Pf3x9mZmaq459++ikuXLiA7OxspKamYt++fXBxcanpaRARERGpKe2UpWRXFtJjTwpZmMek39i9kIhI/xUVFSE1NVW1PXjwAABgZWWFSZMmYfbs2Th+/Dh+//13eHt7o1u3bnB3dxc56mfTx9sLgz+eBgAIX78Zx7ftEDkiMjStenVDAydH5GXn4MLeMLHDIS3hZzRERIaHRVkiMDI2xrDP5mDwnOkwMjJC5M4fsfPTJVA+9W0ToprW9713AQBRe3/CwweZIkdD2jBy5Ej4+/tj6dKl6NixIy5fvozw8HDUr1+2BTIAjBkzBitWrMDSpUvRsmVLTJo0CaNGjcLy5ctVY3r16oV169ahS5cueO2112BiYoIjR47A3NxcW9MiIiIieqrDEAsASH89KWRhdyHSb+z6RkSk/5o3b46kpCTcvHkT27dvx8svvwwAcHNzg6mpKSIiIlRj4+PjkZiYCA8Pjwqfz9TUFJaWlmqbmPpMHIc3Z/9bkLUuEEc2bBE1HjJMvcaPBQCc270f+bm5IkdD2sDPaIiIDBOXL9Qy09q18c5/l6FVz24oLi5G2H/X4lTI91WfSKRBjdu0gkuXzlAWFuFE0E6xwyEtmT17NgIDAxEUFAQAmDx5MgYNGoSJEydi5cqVZcZ37doVZ86cQWhoKAAgMTERoaGhat96GzBggNo5EyZMQFpaGtzc3HD69Oly4zA1NVX7JofYf4QhIiIi/WdsyqWySP+pClnYXYj0HLsXEhHpt6ioKEyYMAHx8fGwt7fH4sWLcfr0abRu3Rp2dnbIz89HVlaW2jmpqamws7Or8Dnnz5+PJUuW1HDk1dN30jsYNHMqAODwukAc3bhV5IjIEDVq5YpmnTpAWViEyJ0/ih0OaQk/oyEiMkzslKVFVvXr4T9BG9CqZzcUPs7Hd7MXsCCLROH5b5es3w+GI/NeisjRkDaYmJjAzc1N7VtsgiAgIiKiwm+xnT17Fm5ubqr2uU5OThg4cCAOHjxY4etYW1sDADIyMiocM3/+fGRnZ6u2pKSk55kSERERkYrchEtlkf5TFbKw4xvpuSdLcbJQlohIHx0+fBi7d+/Gn3/+iSNHjmDgwIGwsbHByJEjn/s5/fz8YGVlpdoaNmyokVhfauSAjm++gZY9u8GxXWvUc3wZ5tZWkMlk5Y7vO+ldVUHWoYBNLMgi0fQePwYAcOnwUWSlpokcDWkDP6MhIjJc7JT1nBQ21hg4YwpsmzZBXs5D5GZn43HOQ+Rm5yAvJwfFRUq18UbGxuj17mjY2Nki50EGtk6fi9t//iVS9GTI7JybonXfXiguLsavW0LEDoe0pF69epDL5UhNTVXbn5qaCldX13LPCQ0NRb169RAZGQmZTAYTExNs2LABfn5+5Y6XyWRYvXo1IiMjERsbW2Esfn5+8Pf3Vz22tLTkL/1ERET0QuTslEUSIPU8njp1KubOnQs7OztcvnwZ06dPx8WLFyscP2PGDEyZMgWNGzdGeno6du/ejfnz5yM/Px8AYGRkhCVLlmDcuHGws7NDcnKy6hvk5dmwYQMmT56MmTNnYs2aNQAAR0dHLFq0CH379lU9x/bt2/HFF1+gkMVxz82YXd+IiCQlKysL165dg7OzM44ePQozMzNYW1urdcuytbVFSkrFX/4tKChAgYZ/x2nfvx9G+XwG09q1yhwrLi4ut9Dd5N/OMIfWfouITUEajYeoumzsbNH29b4AgJPBFf/+StLCz2iIiAwXi7KeQ4tuXTB62Wewql/vmc9N/fsWNv/nY2TcTa6ByIiq1mfiOADAnxEncD8hUeRoSJf16tULCxYswNSpUxEVFQVnZ2esWbMGCxcuhK+vb5nx69atQ+vWrdG9e/dKn7cm/ghDREREhq20w1ARiyjK1aNHD8ydOxdubm5wcHDA0KFDceDAgQrHv/XWW5gyZQrat28PMzMzxMbGYsmSJThy5IhqzKeffophw4bB1dUVeXl5OHv2LObNm4dr165pY0qSZCzhjm8jR46Ev78/Jk+ejKioKMycORPh4eFo0aIF0tLKdgYYM2YMVqxYgYkTJ+Ls2bNwcXFBUFAQBEHAxx9/DACYN28epkyZgvHjxyM2NhadOnXCtm3byn39oUOHokuXLmU+aHB1dYWRkRE+/PBD3LhxA61bt0ZgYCAUCgXmzp2r+QthIJ78TOZ9HxGRFCgUCjRr1gwhISGIjo5GQUEBPD09sXfvXgCAi4sLHB0dce7cOa3EIzMywoDpH6pWg7h3/SaKCgpgbm0NhY01alkoYGRkBKOnluYqpSwqwuGAQPy65TutxEpUnh7jRsJYLsf1878hOf662OGQDuNnNERE0sCirGcgNzPDm7OmoodXSZvelJsJOBYYBLmpGWpbWqC2tSXMraxQ29Ki3Pa4WWnpiNgUhLzsHG2HTgSgpJ1zhwGvAQBvPA1Meno6ioqKYGtrq7a/sm+xLVu2DCEhIdiyZQsA4MqVK1AoFNi0aRO++OILCIKgGrt27Vq8+eab6NmzJ79RQURERFpX2mFIyT8qlkuhUODy5cvYunUr9u3bV+X4nj174ujRo1iwYAH++ecfeHt7IywsDO7u7oiJiQFQ8sfhdevW4eLFi5DL5Vi+fDmOHDmCVq1aITc3t6anJElS7pQ1e/ZsBAYGIigoCAAwefJkDBo0CBMnTsTKlSvLjO/atSvOnDmj6nyVmJiI0NBQuLu7q405cOCAaumOxMREvPPOOxgyZIjaczk4OGDt2rV444038Msvv6gdCw8PR3h4uOpxQkIC/vvf/2LKlCksynoBcnbKIiLSa1999RXCwsKQmJgIBwcHLF26FEqlEqGhocjOzsaWLVvg7++PjIwMZGdnY+3atTh79iyioqJqPLZaFgp4rVyKVj27AQB+3RqCg2s2QiguVo0xlsthbm0FY3nZj7/y8/L4+QyJqpaFAl2Gl/y+euK7nSJHQ9rEz2iIiAwXi7Kqyd7FGV4rlsC+eTMAwOkdu/DzqvUo+rdtPpE+6DPBC8ZyOeLPnMfdv+LFDoe0qLCwENHR0fD09FR1RZDJZPD09ERAQEC555ibm6P4qT9oAIBSqVSdW/oL/9q1a/HWW2+hd+/euHXrVs1NgoiISMOetXtQt27dsHLlSri6usLc3ByJiYn49ttvsXr1atWYhIQENGnSpMy569atw7Rp0wAAx48fR+/evdWOb9y4EVOmTNHIvAyRXMIdhjTh8OHDOHz4cLXHz5o1S+3xZ599rluRjgAAIABJREFUhiFDhmDw4MGqoqwBAwaojZkwYQLS0tLg5uaG06dPv3jQBkiqHd9MTEzg5uamtsSGIAiIiIiAh4dHueecPXsW48aNQ+fOnXHx4kU4OTlh4MCBCAkJURvzwQcfoHnz5rh+/Tratm1b5vlkMhlCQkLw1Vdf4a+//qpWvNbW1sjIyKjwuKmpKcye6rxhaWlZrec1JE9+JkuvwJCIyBA0atQIoaGhqFu3LtLS0hAZGYkuXbogPT0dQMnvisXFxdizZw/MzMwQHh6OqVOn1nhcDZwc4b1mJRo4OaLwcT5++PwLXDp0tMw4ZVERch5U/F5OJCb3Yf+HWhYKpNxMQHzkebHDIS3iZzRERIaLRVlPcfF4FW9/Pg+CUAyhWIBQXAxBKPnfeo0bQW5qiuz0B/hhkS/i+MsS6bCFR/ahtqUllIWFKCoshLKwCMrCQrzU0AEAELGZXbIMkb+/P4KDg/Hbb7/hwoULmDlzJhQKhWqJj2+//VZtfFhYGGbPno1Lly6pWuMuW7YMYWFhqhuBdevWYezYsRgyZAhycnJU3/LIysrC48ePtTtBIiKiZ/Ss3YMePXqEgIAA/PHHH3j06BG6d++Ob7/9Fo8ePUJgYCAAoHPnzjA2Nlad07p1a0RERODHH39Ue65Nmzbh888/Vz3WVGehtz+fhybt22jkufRJ6e+5LACoGTKZDJaWlpUWqlhbWwOARopZWnR1x+A5058zWv1V26rkekgtj+vVqwe5XI7U1FS1/ampqXB1dS33nNDQUNSrVw+RkZGQyWQwMTHBhg0b1Aq7VqxYASsrK8TFxUGpVMLY2Bg+Pj5YsmSJasy8efNQVFSEb775plqxNmvWDNOnT8ecOXMqHDN//ny116jMR9sDYWpeu1pjpcS0di0ALJQlItJXY8aMqfR4fn4+pk2bpvrSiSbZ2NniP8Ebnnw+8+9nNMVKJeo42MHM3ByZ91KwbcY8JF3lstmkuz7YuApNOrSDsqjk85miggIoC4tgWa8uAODUd6FqXY7IMPAzGiIiw8SirKeY1q6Nuo0cKjx+5deT2LVkBR5l/qPFqIienZnCHLUsFOUeu3Hxd/z92yUtR0S6YNeuXahfvz58fHxgZ2eHmJgY9O/fH/fv3wdQ8i24p/n6+kIQBPj6+qJhw4ZIS0tDWFgYPvvsM9WY0m/BnTx5Uu3cCRMmIDg4uIZnRERE9GKetXtQTEyMqksQULJU1rBhw9CjRw9VUVbpt8dLffrpp7hx40aZ98rc3NwyBQqa8JKDnaq7ryFKv3NX7BAkac6cObCwsMCuXbvKPS6TybB69WpERkYiNja2wuepbjFLLUsLw87j28zjXr16YcGCBZg6darqw4c1a9Zg4cKF8PX1BQCMHDkSXl5eGDt2LGJjY9G+fXusWbNG9RwdO3bEjBkz0LFjx2q9poODAw4fPowff/wRmzdvrnCcn58f/P39VY8tLS0rXB7EtplThffmUvfonyzkZmWLHQYREekZYxMTvORgX+Hxm9GX8N3sz/AwI1OLURE9O5NatWBmXhtA2QL9f1JSEf1zeNmTSPL4GQ0RkWGSATC4UmxLS0tkZ2fDysoKOTlP1g+vbWWF+o6NIDMygkxmBJmR7N//L8Pjhw/5zQuqUEU5JdZr2tg2gLGpKeQmchibmJRscjmM5MZI+ise+RrqxEDSIkYei/m6JE3MY5IK5pT2CYJQ5fKF/6t9+/Y4dOgQFi5ciC1btpQ5bmJiguTkZPj7+6t1dzl+/DheeeUVyGQypKSkICwsDMuWLUNeXl6Fr1Veh6GkpKQyOdLQ1QXm1lbVnoOU/JN6H2m3bosdhs4rL9cr+5kzZswYBAYGYsiQITh27Fi5z7l+/XoMGDAA3bt3r7A4Bah+HlvUrQN7Z8MsyioqLETiH1dQXKQUOxSNMTExQW5uLt5++221vAsKCoKNjQ2GDh1a5pxTp07h/Pnz+OSTT1T7vLy8sGnTJlhYWEAQBNy+fRsrVqzA+vXrVWN8fHywaNEiWFlZYeLEifD391db7kMul0OpVOLOnTtwcnJS7be3t8eJEydw/vx5TJgw4Zm6FlT230+zTh1g9FT3REOScuNvLh31nHhPQ1LAfKKqVJQjclNT2DdvBpmRDEZGxmqf0RQVFuLOlasoVkrn9yTSHF17/1TUsYGZeW3V5zPyfzdjEzlS/77FwkIql67lMdHz0rXPzYmehyZzip2ynpKXnY3bf/4ldhhEL+yf1Ptih0BEREQkWXfu3EH9+vUhl8uxZMmScguyAGDo0KGwsbFBUFCQ2v6dO3ciMTERycnJaNu2LVauXIkWLVpg+PDhFb5mdTsMJcXxiySkOaNGjcLmzZsxYsSICguy1q5dizfffBM9e/astCALAAoKClBQjaX5Hj7IxPUHvz1XzKR7CgsLER0dDU9PT1VRlkwmg6enJwICAso9x9zcXK2YCgCU/34AK5PJIAhCpWMAICQkBBEREWrHw8PDERISoloeBCjpkHX8+HFER0fD29tbo8vI3GSXaiIiomdSVFCAO7FXxQ6D6IU9yvyHq+4QERERABZlERERERERPZMePXrAwsICXbp0wYoVK3Djxg18//33ZcZNmjQJhw4dwr1799T2ly51CABXrlzBvXv38Ouvv6Jp06b4+++/y33NZ1kui0gTRo8eja1bt2L06NE4ePBguWPWrl2Lt956C71798atW7e0GyDpFX9/fwQHB+O3337DhQsXMHPmTCgUClVxVHBwMJKSkrBgwQIAQFhYGGbPno1Lly6pli9ctmwZwsLCVIVYpct23L59G7GxsejQoQOmTZumes2MjAxkZKh3aiosLERKSgquXSspYHVwcMCJEyeQmJiIOXPmoH79+qqxNbHELBERERERERERGRYWZRERERERET2D0uKTK1euwNbWFkuWLClTlNW4cWP069cPw4YNq/L5oqKiAADOzs4VFmVVt8MQUXkUCgWcnZ1Vj52cnNCuXTtkZGTgzp07WLx4sdr4MWPGIDg4GDNmzEBUVBRsbW0BAHl5ecjOzgYArFu3DmPHjsWQIUOQk5OjGpOVlYXHjx9raWakL3bt2oX69evDx8cHdnZ2iImJQf/+/XH/fkmX58aNG6t1vfL19YUgCPD19UXDhg2RlpamKsIqNX36dCxbtgzr169HgwYNkJycjG3btmHu3LnVjuu1115D8+bN0bx58zKFrjKZ7AVnTUREREREREREBAiGtllaWgqCIAiWlpaix8JNGpsYOcU85qbpTaycYi5z0+TGPOYmlY05pf1NEARhyJAhz3zeokWLhISEhDL7Fy9eLCQnJwvGxsZVPkfXrl0FQRCENm3aMEe41cjWq1cvoTzbtm0TAAjbt29Xy6fjx49XOh5AuccFQRDGjx9f7biYx9w0vfHenJsUNt7TcJPCxnziVtXGHOGm6Y3vn9yksDGPuUll4705Nylsmswpdsoi0oD58+cDgOpb4wAQFxeHli1bljt+/PjxCAoKUtv3+PFj1K5du8ZiJCIiIiJ1VXUPWr58ORo2bIjx48cDAKZOnYrbt28jLi4OANCzZ0/MmTMH33zzjdrzymQyeHt7Izg4GEqlUu1Y06ZNMXbsWBw8eBAPHjxA27ZtsWrVKpw8eRJ//vlnDc+YDNXJkycr7fozZcoUeHl5qR736dOnyudkFyEiIiIiIiIiIiKiyrEoi0iDnJ2d8fDhQwBAUVFRpWOzsrLQokUL1WNBEGo0NiIiIiJS16lTJ5w4cUL1eNWqVQCAoKAgeHt7w97eHo0bN1YdNzIygp+fH5ycnFBUVISbN29i3rx5+Pbbb9Wet1+/fnB0dMTWrVvLvGZBQQH69euHmTNnQqFQ4M6dO9izZw98fX1rZpJERERERERERERERCQKFmURadD9+/eRk5NTrbGCICA1NbWGIyIiIiKiilTVPcjb21vtcUBAAAICAqp83qNHj1b4vHfv3kXv3r2fKU4iIiIiIiIiIiIiItI/RmIHQCQl8fHxuHnzJrZv346XX3650rEWFha4desWbt++jf3796NVq1aVjjc1NYWlpaXaRkRERERERERERERERERERES6x6A7ZbGohTQlNjYWADBs2DBYWVlh8eLFOH36NFq3bq1azvBp8fHxmDhxIv744w9YW1tjzpw5OHv2LF555RUkJSWV+xrz58/HkiVLyuxnHpOmiJ1LYr8+SYPYeST265N0MJeoupgrpAli55HYr0/SIWYuMY9JU8TOJbFfn6SBeUTVxVwhTRE7l8R+fZIGsfNI7Ncn6eC9OUmBJnNJBkDQ2LPpCQcHhwoLX4heRMOGDZGcnAxra2skJiZi9uzZ2Lp1a5XnyeVyXL16FaGhofj888/LHWNqagozMzPVY3t7e8THx2ssdqJSpXmsLfyZTDWBeUxSoe1cJv3BnztUE/j+SVKhzVxmHlNN4c9kkgLez1BF+DOHagrfP0kKmMckFbw3JynQRB4bZFEWALi4uCA+Ph4NGzZETk6O2OFonKWlJZKSkiQ7P0D35mhpaan2H+SFCxcQERGBBQsWVOv8Xbt2oaioCGPHjq32a0o9jwHd+3fWNF2b3//msbZIPZd17d9Z03RtfmLlsYODQ7nz17XrIyZeC3VVXQ+xcpn0B98/9ZuuzY+/B9YMXft3rgm6NkcxclnqeQzo3r+zpuna/HTpnkbXro3YeD3UVXY9eD9DVeH7p/7TtfnxnqZm6Nq/s6bp2vyYxzVD1/6da4KuzVGMXOZnNNXD6/GEtj6jMdjlC+/duwcAyMnJkXSySX1+gO7M8ekYFAoFmjVrhpCQkGqda2RkhDZt2uDgwYPP9JqGkseA9OeoK/MTKwZDyWXOT3txiKGqX8x05froAl4LdRVdD14jqgrfP6VBV+bH3wNrltTnB+jOHMWIwVDyGJD+HHVlfrp4T6Mr10ZX8HqoK+968PpQVfj+KR26Mj/e09Qszk97cYiBeSwdujJHMWLgZzTPhtfjiZr+jMZII89CZOC++uor9OzZE46OjvDw8MC+ffugVCoRGhoKAAgODsby5ctV4xctWoTXXnsNTk5O6NChA7Zv3w5HR0ds3rxZrCkQERERERERERERERERERERkYYYbKcsIk1q1KgRQkNDUbduXaSlpSEyMhJdunRBeno6AKBx48YoLi5Wja9Tpw4CAwNhZ2eHzMxMREdHo2vXrrh69apYUyAiIiIiIiIiIiIiIiIiIiIiDTEGsETsIMSiVCpx4sQJKJVKsUOpEVKfH6A7c9yzZw/8/f3h6+uLVatWYc+ePcjMzFQdDw4OxoEDB1SPw8PDsXr1avj6+uLrr7/Gzp07kZKS8lyvrSvXoCZJfY5Sn191Sf06cH6GjdfnCV4Ldbwe9KKknkOcn2GQ+nWQ+vwAw5hjVQzhGkh9jlKf34vgtVHH66GO14NehCHkj9TnKPX5VZfUrwPnZxikfh2kPj/AMOb4vHht1PF6PKGNayEDINTYsxMRERERERERERERERERERERERkYI7EDICIiIiIiIiIiIiIiIiIiIiIikhIWZREREREREREREREREREREREREWkQi7KIiIiIiIiIiIiIiIiIiIiIiIg0iEVZREREREREREREREREREREREREGiTpoqypU6ciISEBeXl5OH/+PDp37lzh2FatWmH37t1ISEiAIAiYMWOGFiN9Ps8yv/feew+nTp1CRkYGMjIycPTo0UrH64pnmeNbb72FixcvIjMzEw8fPsSlS5cwbtw4LUZbM6Sex4D0c5l5XELqucw8fkLKeVyeOnXqYPv27cjKykJmZiY2b94MhUJR6TlmZmYICAhAeno6cnJysHv3bjRo0EBtjCAIZbZRo0bV5FSey7PkBgC8/fbbuHr1KvLy8vDHH39gwIABZcYsXboUycnJyM3NxdGjR+Hs7FxT4Wucpq/Htm3byuTBoUOHanIKpGP4/vkE3z/1F/P4CX3MY4C5DEg/jwHp5zLzuGK8p+E9TSnez5Cm8f1THd8/9ZfUc5l5/ATzuATzWDcxl8vH+xnezzxNV+9pBCluI0eOFB4/fixMmDBBaNmypfDtt98KGRkZQv369csd36lTJ+HLL78URo0aJSQnJwszZswQfQ6anN/27duFKVOmCO3atRNatGghbN26VcjMzBQcHBxEn4um5tirVy9h6NChgqurq9C0aVPho48+EgoLC4XXX39d9Llo6xroWx4/zxz1LZeZx893HfQtl5nH6ptU87ii7eDBg8KlS5eEV199VejWrZtw7do1YceOHZWes379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\n","text/plain":["<Figure size 3000x1000 with 30 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 15 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"GZ0y_x9ugOUD"},"source":["##### check dent_detph"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"ETgm1avml0fE","executionInfo":{"status":"ok","timestamp":1637297839515,"user_tz":-540,"elapsed":593,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9df7a819-691a-4fdc-93bb-d6489812419b"},"source":["target_pr = total_long_pr\n","\n","plt.figure(figsize=(4, 8))\n","gs = gridspec.GridSpec(nrows=2,\n","                        ncols=1,\n","                        height_ratios=[1, 1]\n","                      )\n","\n","plt.subplot(gs[0])\n","plt.plot(target_pr)\n","h_roll = pd.Series(target_pr).rolling(10).max()\n","plt.plot(h_roll)\n","# plt.show()\n","# print()\n","\n","plt.subplot(gs[1])\n","dent_depth = target_pr / h_roll\n","plt.plot(dent_depth)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 400x800 with 2 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"v2Gjv019AEz8"},"source":["##### check frequency "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"atdBjod9-e21","executionInfo":{"status":"ok","timestamp":1636862363013,"user_tz":-540,"elapsed":720,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5925d52a-da23-40cd-a9b3-6c0323024bc0"},"source":["total_len = np.zeros(len(res_df))\n","print(total_len)\n","np_trade_list = np.array(trade_list)\n","# print(np_trade_list.shape)\n","print(np_trade_list[:, [0], [0]].shape)\n","total_len[np_trade_list[:, [0], [0]]] = 1\n","\n","plt.plot(total_len)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 0. ... 0. 0. 0.]\n","(70, 1)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"o-XjNS1L31YB"},"source":["##### ep const. legacy"]},{"cell_type":"code","metadata":{"id":"taB2j7kT33iN"},"source":["\n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","          \n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # ÏùºÎ∞òÏ†ÅÏúºÎ°ú dr ÏÉÅÏóêÏÑú tp ÎπÑÏú®Ïù¥ Îçî Ïª§Ïßê (tr Î≥¥Îã§)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-IbP_Z3Dlwk4"},"source":["### nontp survey"]},{"cell_type":"markdown","metadata":{"id":"FxJ1y8v2fkCR"},"source":["##### term & liqd"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"id":"-qIWa48pl1GO","executionInfo":{"elapsed":8,"status":"ok","timestamp":1628300788555,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"b2687c93-e070-4d45-8a67-4cc783fd78f1"},"source":["# print(nontp_long_indexs)\n","\n","plot_size = 100\n","\n","for s_i in range(plot_size, len(trade_list), plot_size):\n","\n","  slice_trade_list = trade_list[s_i - plot_size:s_i]\n","  slice_liqd_list = liqd_list[s_i - plot_size:s_i]\n","\n","  # print(len(slice_trade_list))\n","  np_trade = np.array(slice_trade_list)\n","  trade_term = np_trade[:, [2]] - np_trade[:, [1]]\n","\n","  plt.figure(figsize=(5, 10))\n","  plt.subplot(211)\n","  plt.bar(np.arange(len(trade_term)), trade_term.reshape(-1,), width=1, color='b')\n","\n","  # plt.plot(trade_term.reshape(-1,))\n","  plt.ylim(0, 1000)\n","  # plt.show()\n","  # print()\n","\n","  plt.subplot(212)\n","  # print(len(liqd_list))\n","  # plt.bar(np.arange(len(liqd_list)), liqd_list)\n","  plt.bar(np.arange(len(slice_liqd_list)), np.array(slice_liqd_list), width=1, color='r')\n","  # plt.plot(slice_liqd_list)\n","  plt.show()\n","\n","print()"],"execution_count":null,"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 360x720 with 2 Axes>"]},"metadata":{"tags":[]},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"VBwVaUkvfnOd"},"source":["##### check nontp index"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mRCMBOU4frNY","executionInfo":{"elapsed":454,"status":"ok","timestamp":1628220543161,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"ce4a9c9b-3589-40b3-8a19-4be03d5b9a1e"},"source":["# np_nontp_short_indexs = np.array(nontp_short_indexs)\n","# np_nontp_long_indexs = np.array(nontp_long_indexs)\n","\n","# short_til_term = len(res_df) - np_nontp_short_indexs\n","# long_til_term = len(res_df) - np_nontp_long_indexs\n","\n","max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","print(max_nontp_long_term)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["32747\n"]}]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## basic strategy"]},{"cell_type":"markdown","metadata":{"id":"FaRGwR4NEop2"},"source":["### shifting"]},{"cell_type":"code","metadata":{"id":"a8aYsjEgQnGF"},"source":["org_res_df = res_df.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RF3RM2G2RCb1","executionInfo":{"elapsed":291,"status":"ok","timestamp":1626515312874,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"ba8f6a75-d4df-4f85-cd0f-190935341f7a"},"source":["#         refresh res_df      #\n","res_df = org_res_df.copy()\n","print(org_res_df.tail(5))\n","\n","# break\n","\n","\n","shift_size = -4\n","# shift_size = -1\n","# shift_size = -7\n","# shift_size = +3\n","\n","res_df['min_upper'] = res_df['min_upper'].shift(shift_size)\n","res_df['max_lower'] = res_df['max_lower'].shift(shift_size)\n","res_df['minor_ST1_Trend'] = res_df['minor_ST1_Trend'].shift(shift_size)\n","res_df['minor_ST2_Trend'] = res_df['minor_ST2_Trend'].shift(shift_size)\n","res_df['minor_ST3_Trend'] = res_df['minor_ST3_Trend'].shift(shift_size)\n","res_df['middle_line'] = res_df['middle_line'].shift(shift_size)\n","\n","print(res_df.tail(5))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272145    0.27005\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...   0.272145    0.27005\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...   0.272523    0.27021\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...   0.272523    0.27021\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...   0.272523    0.27021\n","\n","[5 rows x 37 columns]\n","                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272523    0.27021\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...        NaN        NaN\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...        NaN        NaN\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...        NaN        NaN\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...        NaN        NaN\n","\n","[5 rows x 37 columns]\n"]}]},{"cell_type":"markdown","metadata":{"id":"2gxvme1PC6ha"},"source":["### load model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dtYdAuSsC72_","executionInfo":{"elapsed":5831,"status":"ok","timestamp":1628862368878,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"e8dccc53-aaa7-4bab-ed8d-753f634c08d6"},"source":["# model_name = 'inner_tick_cnnreg_lscalemm_prefee_gpu_%s_%s_%s_%s_%s.h5'\n","\n","# model = tf.keras.models.load_model(ckpt_path + model_name)\n","\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","\n","model = ResNet50(weights='imagenet', include_top=False)\n","# model.summary()\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n"]}]},{"cell_type":"markdown","metadata":{"id":"5la6usMOFzkX"},"source":["#### gen selected vector"]},{"cell_type":"code","metadata":{"id":"oQk3-jbKF8FB"},"source":["def min_max_scale(npy_x):\n","\n","  return (npy_x - np.min(npy_x)) / (np.max(npy_x) - np.min(npy_x))\n","\n","def expand_dims(npy_x):\n","\n","  row, col = npy_x.shape\n","  npy_x2 = np.array(npy_x).reshape(-1, row, col, 1).astype(np.float32)\n","  # input_x = np.array(data_x).reshape(-1, row, col).astype(np.float32)\n","\n","  #     1c to 3c    #\n","  npy_x3 = npy_x2 * np.ones(3, dtype=np.float32)[None, None, None, :]\n","\n","  return npy_x3\n","\n","\n","def vector_dist(f1, f2):\n","  return np.linalg.norm(f1-f2)\n","\n","\n","\n","# ------------------------ params ------------------------  #\n","selected_i = 500\n","input_size = 100\n","\n","\n","\n","#   1. ÏÑ†ÌÉùÎêú Ïù∏Îç±Ïä§Î•º ÏûÖÎ†•Î∞õÏïòÏùÑ Îïå, input generating ÌòïÌÉúÎßå ÎßåÎì§Ïñ¥ÎÜìÍ≥†,     #\n","#   1-1. input cols ÌïÑÏöîÌï®    #\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","sma_list = ['sma']\n","\n","#     -------------- outer price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","\n","selected_price_colname = basic_list + senkoua_list + senkoub_list + sar_list\n","selected_outprice_colname = [macd_list]\n","\n","\n","#         global scaling for outer price data       #\n","#         1. nan Ï≤òÎ¶¨       #\n","\n","# # print((np.isnan(df.values)))\n","# print(\"np.sum(np.isnan(df.values), axis=0) :\", np.sum(np.isnan(df.values), axis=0))\n","\n","# max_nan = np.max(np.sum(np.isnan(df.values), axis=0))\n","# # print(max_nan)\n","\n","# df = df.iloc[max_nan:-max_nan]\n","\n","# total_gdata = []\n","# for g_col in selected_outprice_colname:\n","\n","#   temp_data = min_max_scale(res_df[g_col])\n","#   total_gdata.append(temp_data)\n","\n","\n","\n","#   1-2. cols Ïóê Îî∞Î•∏, scaling method Íµ¨Î∂ÑÌï®    #\n","onprice_input_x = min_max_scale(res_df[selected_price_colname].iloc[selected_i - input_size:selected_i].values)\n","print(onprice_input_x.shape)\n","\n","\n","#   2. plot_check ÏóêÏÑú Î≥∏Ïù∏Ïù¥ ÏõêÌïòÎäî shape Ïùò Ïù∏Îç±Ïä§Î•º ÏÑ†ÌÉù   #\n","#   3. vertorize, \n","#   3-1. input generator Î•º Ïù¥Ïö©Ìï¥ entry signal Î∞úÏÉùÌï† ÎïåÎßàÎã§ dist ÎπÑÍµê ÏßÑÌñâ    #\n","re_onprice_input_x = expand_dims(onprice_input_x)\n","print(re_onprice_input_x.shape)\n","      \n","# break\n","\n","selected_vector = model.predict(re_onprice_input_x, verbose=1)\n","print(selected_vector.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gcpo4MGd9Wm4","executionInfo":{"elapsed":446,"status":"ok","timestamp":1636015063790,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"434b56b3-3a3c-45c1-f559-42681fea5f05"},"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   Îã®Î¶¨    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"Î≥µÎ¶¨Î•º ÏúÑÌïú tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   Î≥µÎ¶¨ tr_thresh  #\n","#   1. trade_num Ïóê ÏòÅÌñ• Î∞õÏßÄ ÏïäÏùå\n","#   2. loss_gap Ïóê ÎπÑÎ°ÄÌï®\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"Îã®Î¶¨Î•º ÏúÑÌïú tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["res_wr : 0.6\n","tr_thresh : 0.6766666666666667\n","[0.95, 1.0338333333333334, 0.95, 0.95, 1.0338333333333334, 0.95, 0.95, 1.0338333333333334, 0.95, 1.0338333333333334]\n","\n","Î≥µÎ¶¨Î•º ÏúÑÌïú tr_thresh_ : 1.0\n","np.cumprod(test_trade_list)[-1] : 0.5751227991397774\n","total_pr :  0.5751227991397774\n","\n","[-0.05        0.03383333 -0.05       -0.05        0.03383333 -0.05\n"," -0.05        0.03383333 -0.05        0.03383333]\n","Îã®Î¶¨Î•º ÏúÑÌïú tr_thresh_ : 1.0\n","np.cumsum(np_test_trade)[-1] : 0.30000000000001137\n","total_pr :  1.3000000000000114\n"]}]},{"cell_type":"markdown","metadata":{"id":"JNQxkb06ZdTe"},"source":["# traded section plot"]},{"cell_type":"markdown","metadata":{"id":"UmH_Pb5BZUtm"},"source":["## plot with off-color st with dash"]},{"cell_type":"markdown","metadata":{"id":"5z4L3MMYmUI0"},"source":["### sorted plot_check"]},{"cell_type":"code","metadata":{"id":"Qv1MM2MemZnF","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1638762958971,"user_tz":-540,"elapsed":13588,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"d6c5aa7b-67b8-41b7-81ae-eb355f8cc2e1"},"source":["assert len(open_list) == len(trade_list), \"len(open_list) != len(trade_list)\"\n","assert len(tp_state_list) == len(fee_list), \"len(tp_state_list) != len(fee_list)\"\n","\n","save_plot = 0\n","pr_sort = 1     # Ïù¥ÏÉÅÌïú Ï≤¥Í≤∞ ÌôïÏù∏ÌïòÍ∏∞ Ï¢ãÏùå\n","pr_descend = 0\n","wl_case = 0     # win loss study \n","position = 1    # -1 / 1 / 0 (short / long / both)\n","\n","inversion = 0\n","hedge = 0\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","\n","if position == -1:\n","  position = config.ep_set.short_entry_score\n","elif position == 1:\n","  position = -config.ep_set.short_entry_score\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","h_candle_intv1 = 5\n","h_candle_intv2 = 15\n","res_df = h_candle(res_df, h_candle_intv1)\n","res_df = h_candle(res_df, h_candle_intv2)\n","\n","\n","res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1\", \"short_tp_gap\", \"long_tp_1\", \"long_tp_gap\"]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1\", \"short_dtk_gap\", \"long_dtk_1\", \"long_dtk_gap\",\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2', 'dc_lower_v2']\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hopen_%s' % h_candle_intv2, 'hclose_%s' % h_candle_intv2]\n","\n","# --------------------- dc & bb level --------------------- #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","bbwp_list = ['bbwp', 'bbwp_ma']\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_15m']\n","\n","# ma_list = ['sma1', 'sma4']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_5m']\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# -------------- under price phase -------------- #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3']\n","# stoch_list = ['stoch_5m']\n","# fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","# cctbbo_list = ['cctbbo']\n","# emaroc_list = ['ema_roc']\n","rsi_list = ['rsi_%s' % config.loc_set.point.exp_itv] \n","\n","\n","# -------------- summation -------------- #\n","# input_colname = ohlc_list + basic_st_list + pline_list + bb_list + hbb_list + sma_list + cb_list + stoch_list + sar_list + dc_list\n","input_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dtk_list + dc_v2_list + rsi_list + ema_list\n","\n","# yrange_colname = ohlc_list + basic_st_list + pline_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","\n","\n","# aggr_obj = dict(zip(plot_pr_list, open_list, enumerate(trade_list)))\n","aggr_obj = dict(zip(plot_pr_list, zip(open_list, enumerate(trade_list))))\n","\n","sorted_obj = sorted(aggr_obj.items(), key=(lambda x: x[0]), reverse=pr_descend)\n","# print(aggr_obj)\n","# print(sorted_obj)\n","\n","if pr_sort:\n","  iter_obj = sorted_obj\n","else:\n","  iter_obj = aggr_obj.items()\n","\n","for temp_pr, (open_idx, (t_i, (ep_idx_list_, tp_idx_list_))) in iter_obj:  # 0.699700153073042, (291402, (3014, ([370012], [370014])))\n","\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  if wl_case == 1:\n","    if plot_pr_list[t_i] < 1.0:\n","      continue  \n","  \n","  elif wl_case == -1:\n","    if plot_pr_list[t_i] > 1.0:\n","      continue  \n","  \n","  #   open size indexing by open_idx    #\n","  open_side = res_df['entry'].iloc[open_idx]\n","\n","  # ---------- const. zone ---------- #\n","\n","  if position != 0:\n","    if open_side == -position:\n","      continue\n","\n","  # if open_idx == 63901:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  if tp_state_list[t_i] != 'long close tp':\n","  # if tp_state_list[t_i] != 's-long_tp':\n","    continue\n","\n","  # if tp_ratio_list[t_i] > 0.4:\n","  #   continue\n","\n"," \n","  # print(\"open_idx :\", open_idx)\n","  print(\"open_side :\", open_side)\n","  print(\"np_timeidx[open_idx] :\", np_timeidx[open_idx])\n","  print(\"open_idx, ep_idx_list_[0], tp_idx_list_[-1] :\", open_idx, ep_idx_list_[0], tp_idx_list_[-1])\n","  # break\n","\n","\n","  plot_df = res_df.iloc[open_idx - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df[['ST1_Trend%s' % basic_st_interval, 'ST2_Trend%s' % basic_st_interval, 'ST3_Trend%s' % basic_st_interval]].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=0, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","  \n","  plt.style.use('dark_background')\n","\n","  fig = plt.figure(figsize=(14, 18))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row Î™á Í∞ú \n","                       ncols=1, # col Î™á Í∞ú \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ---------- h_candle ---------- #\n","  alpha = 1\n","  lw = 1\n","  for cd_i, candle in enumerate(hcandle_list):\n","\n","    if cd_i == 2:\n","      lw = 2      \n","    plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.1\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","  #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  \n","\n","   # --------- ema --------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(ema_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","\n","  # ---------------------- dc_v2 ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_v2_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # ---------------------- dc ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(dc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # ---------------------- hdc ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(hdc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","\n","  # ---------------------- hhdc ---------------------- #\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(hhdc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","\n","\n","  # ---------------------- bb ---------------------- #\n","  alpha = 1\n","  lw = 1\n","  for sm_i, item in enumerate(bb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","                      where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","\n","  # ---------------------- hbb ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(hbb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","  \n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","                      where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  \n","  # ---------------------- hhbb ---------------------- #\n","\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(hhbb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","  \n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","                      where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  \n","  # ------------------- dtk_line (old, tp_line) ------------------- #\n","  \n","  # alpha = 1\n","  # lw = 2\n","  # rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  \n","  # for rtc_k in rtc_ratio_list:    \n","  #   # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","  # alpha = 1\n","  # lw = 4\n","  # # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  # h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","  # # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  \n","  # for h_rtc_k in h_rtc_ratio_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","  # # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","\n","  # ------------------------------------------------------------- #\n","\n","\n","  # ------------- ep ------------- #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","    #        initial order         #\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='#ffeb3b')\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--', color='#ffeb3b')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    # plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.7, linestyle='--', color='#ffeb3b')\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","\n","  x0,x1 = plt.gca().get_xlim()\n","\n","  # ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0])) / x1\n","  ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - open_idx)) / x1\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='--', xmin=ep_xmin, xmax=1, alpha=1, color='lime')  # ep line axhline  \n","  plt.text(x1, ep_tp_list[t_i][0][0], ' ep :\\n %s' % ep_tp_list[t_i][0][0], ha='left', va='center', fontweight='bold') # ep line label\n","\n","  \n","  # ------------- tp ------------- #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","\n","    # tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0])) / x1\n","    tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - open_idx)) / x1\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='--', xmin=tp_xmin , xmax=1, alpha=1, color='lime')  # tp line axhline\n","    plt.text(x1, ep_tp_list[t_i][1][sub_i], ' tp :\\n %s' % ep_tp_list[t_i][1][sub_i], ha='left', va='center', fontweight='bold') # tp line label\n","     \n","    # plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","\n","  # ------------- rtc horizontal range ------------- #\n","  # rtc_ratio_list = [-0.5, 0.272, 0.36, 0.4, 0.5]\n","  # rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  rtc_ratio_list = [0.]\n","  if open_side == config.ep_set.short_entry_score:\n","    # plt.axhline(res_df['short_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['short_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.axhline(res_df['short_out'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, res_df['short_out'].iloc[open_idx], ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","      \n","    y_max = res_df['h_short_rtc_0'].iloc[open_idx]\n","    y_min = res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k\n","\n","    print(\"short_tp :\", res_df['short_tp'].iloc[open_idx])\n","    print(\"short_out :\", res_df['short_out'].iloc[open_idx])\n","\n","  else:\n","    # plt.axhline(res_df['long_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['long_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff') \n","    plt.axhline(res_df['long_out'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, res_df['long_out'].iloc[open_idx], ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","\n","    y_max = res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k\n","    y_min = res_df['h_long_rtc_0'].iloc[open_idx]\n","\n","    print(\"long_tp :\", res_df['long_tp'].iloc[open_idx])\n","    print(\"long_out :\", res_df['long_out'].iloc[open_idx])\n","  \n","    # t_tr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx] - tp_fee * res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx] + out_fee * res_df['close'].iloc[open_idx]))\n","    # t_dr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx]))     \n","    # print(\"t_tr :\", t_tr)\n","    # print(\"t_dr :\", t_dr)\n","\n","  #         hedge ep & tp         #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    # plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axvline(prev_plotsize + (h_i - open_idx), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  temp_pr = plot_pr_list[t_i]\n","  # if temp_pr > 1:\n","  #   temp_pr_gap = (temp_pr - 1) / lvrg + fee\n","  #   pgfr = (temp_pr_gap - fee) / abs(temp_pr_gap + fee)\n","  # else:\n","  #   pgfr = np.nan\n","\n","  #         check pr        #\n","  if not config.lvrg_set.static_lvrg:\n","    \n","    #   list length Îßå sync ÎßûÏúºÎ©¥ t_i Í±±Ï†ï ÏïàÌï¥ÎèÑÎê®, zip Ìï¥ÏÑú ÏàúÏÑúÍ∞Ä Î∞îÎÄåÏóàÏùÑ Îøê, original serialized order ÏóêÏÑú t_i Î°ú indexing ÌïòÎäî Í≤ÉÎøêÏûÑ   #\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n lvrg : %s\\ntp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                                h_plot_pr_list[t_i], leverage_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)    \n","\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n tp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                     h_plot_pr_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","  \n","  #           y lim           #  \n","  y_max_ = max(np.max(plot_df[yrange_colname]))\n","  y_min_ = min(np.min(plot_df[yrange_colname]))\n","  y_max = max(y_max, y_max_)\n","  y_min = min(y_min, y_min_)\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","  \n","\n","  plt.ylim(y_min, y_max)\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  #           rsi          #    \n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for rsi_ in rsi_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(rsi_upper, linestyle='--')\n","  plt.axhline(rsi_lower, linestyle='--')\n","  \n","  plt.axvline(prev_plotsize, linestyle='--')\n","  \n","  #     vline open     #\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","  \n","  #     vline close     #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","\n","  if not save_plot:\n","    plt.show()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  \n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["open_side : 2.0\n","np_timeidx[open_idx] : 39\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 377980 377989 378006\n","long_tp : 2920.9831882029857\n","long_out : 2835.6261721334504\n","short real pr : [1.01310405]\n","long real pr : [0.97733593]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 14\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 546855 546904 547118\n","long_tp : 3131.839578514585\n","long_out : 2989.7058744538913\n","short real pr : [1.01208118]\n","long real pr : [0.97835437]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 19\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 253220 253228 253265\n","long_tp : 1370.4851915930942\n","long_out : 1321.3607322033436\n","short real pr : [0.99811104]\n","long real pr : [0.98989065]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 44\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 187965 187966 188133\n","long_tp : 1181.8485524390333\n","long_out : 1141.4737325143503\n","short real pr : [0.99924321]\n","long real pr : [0.99235848]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"13a-U32Uy50I"},"source":["### brief np_pr survey"]},{"cell_type":"code","metadata":{"id":"L9LdjV2uUWnp"},"source":["# plot_pr_list[:100]\n","\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TBE0l6dHRYrE"},"source":["### whole pr & chart sync"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"id":"-txULkhXRbz5","executionInfo":{"elapsed":1436,"status":"ok","timestamp":1636355589887,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"7cda9fc7-4a4e-4c52-ffa3-a974b5f7c66f"},"source":["#     chunky survey ÌïÑÏöîÌï®    #\n","chunk_size = 50000\n","\n","sync_pr = np.ones(len(res_df))\n","sync_tr = np.zeros(len(res_df))\n","# sync_tr = np.empty(len(res_df))\n","# sync_tr[:] = np.nan\n","\n","max_tr = np.max(tp_ratio_list)\n","min_tr = np.min(tp_ratio_list)\n","\n","for ck_i in range(0, len(res_df), chunk_size):\n","\n","  chunked_df = res_df.iloc[ck_i:ck_i + chunk_size]\n","  # break\n","\n","  for pr_, eptp_idx, tr_ in zip(pr_list[ck_i:ck_i + chunk_size], trade_list[ck_i:ck_i + chunk_size], tp_ratio_list[ck_i:ck_i + chunk_size]):\n","    # print(pr_, eptp_idx)\n","    sync_pr[eptp_idx[-1][0]] = pr_\n","    sync_tr[eptp_idx[-1][0]] = tr_\n","    # break\n","\n","  chunked_pr = sync_pr[ck_i:ck_i + chunk_size]\n","  chunked_tr = sync_tr[ck_i:ck_i + chunk_size]\n","  chunked_tr = np.where(np.isnan(chunked_tr), pd.Series(chunked_tr).shift(1), chunked_tr)\n","\n","  # plt.figure(figsize=(8, 6))\n","\n","  plt.subplot(311)\n","  plt.plot(np.arange(len(chunked_df)), chunked_df['close'])\n","  # plt.show()\n","\n","  plt.subplot(312)\n","  plt.plot(np.cumprod(chunked_pr))\n","  \n","  plt.subplot(313)\n","  plt.plot(chunked_tr)\n","  plt.ylim(min_tr + 0.5 * (max_tr - min_tr), max_tr)\n","  \n","  plt.show()\n","  print()\n"],"execution_count":null,"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"Qys2Bw5Ou3u9"},"source":["### plot indi. legacy"]},{"cell_type":"code","metadata":{"id":"pi5ntOOVu6JT"},"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  #               sar               #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"59nW2aKYzkN8"},"source":["### plot all indicator (stepline ver.)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":828},"id":"JDH4rXgNzno6","executionInfo":{"elapsed":3326,"status":"ok","timestamp":1631665238032,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"3ee8589d-27d7-4433-ed78-7bb1233cf175"},"source":["save_plot = False\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".xlsx\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","# prev_plotsize = 120\n","prev_plotsize = 150\n","post_plotsize = 20\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","#         select plot columns       #\n","major_st_list = ['major_ST1_Up', 'major_ST1_Down', 'major_ST2_Up', 'major_ST2_Down', 'major_ST3_Up', 'major_ST3_Down',\n","                 'major_middle_line', 'major_upper_middle', 'major_lower_middle']\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower'] # + major_st_list\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1',  'senkou_a2']\n","senkoub_list = ['senkou_b1',  'senkou_b2']\n","\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1']\n","\n","# ma_list = ['sma1', 'sma4']\n","ma_list = ['ema5']\n","\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","trix_list = ['trix1', 'trix2', 'trix3']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","emaroc_list = ['ema_roc']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + ma_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + ma_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","input_colname = basic_list + major_st_list + senkoua_list + senkoub_list + sar_list + stoch_list + fisher_list + emaroc_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list # currently just used for ymin, ymax\n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","\n","\n","# for t_i, (initial_i, i, j) in enumerate(trade_list):\n","for t_i, (ep_idx_list_, tp_idx_list_) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # if 100 < i < 1860:\n","  if ep_idx_list_[0] == 370530:\n","    pass\n","  else:\n","    continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > short_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + post_plotsize, input_cols]\n","  plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize, [7, 10, 13]]\n","  # st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend', 'major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  # htf_st_trend_plot_df = res_df[['major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","  \n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, plot_df['minor_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, plot_df['minor_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, plot_df['minor_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, plot_df['minor_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, plot_df['minor_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, plot_df['minor_ST3_Down'], np.nan)\n","\n","  plot_df[\"off_color_upper_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, plot_df['major_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, plot_df['major_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, plot_df['major_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, plot_df['major_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, plot_df['major_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, plot_df['major_ST3_Down'], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df['minor_ST1_Up'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, np.nan, plot_df['minor_ST1_Up'])\n","  plot_df['minor_ST2_Up'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, np.nan, plot_df['minor_ST2_Up'])\n","  plot_df['minor_ST3_Up'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, np.nan, plot_df['minor_ST3_Up'])\n","  plot_df['minor_ST1_Down'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, np.nan, plot_df['minor_ST1_Down'])\n","  plot_df['minor_ST2_Down'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, np.nan, plot_df['minor_ST2_Down'])\n","  plot_df['minor_ST3_Down'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, np.nan, plot_df['minor_ST3_Down'])\n","\n","  plot_df['major_ST1_Up'] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, np.nan, plot_df['major_ST1_Up'])\n","  plot_df['major_ST2_Up'] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, np.nan, plot_df['major_ST2_Up'])\n","  plot_df['major_ST3_Up'] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, np.nan, plot_df['major_ST3_Up'])\n","  plot_df['major_ST1_Down'] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, np.nan, plot_df['major_ST1_Down'])\n","  plot_df['major_ST2_Down'] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, np.nan, plot_df['major_ST2_Down'])\n","  plot_df['major_ST3_Down'] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, np.nan, plot_df['major_ST3_Down'])\n","\n","\n","  plot_short_ep = short_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_ep = long_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_tp = long_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]  \n","\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=False, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row Î™á Í∞ú \n","                       ncols=1, # col Î™á Í∞ú \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  plt.step(plot_df[['minor_ST1_Up', 'minor_ST2_Up', 'minor_ST3_Up']].values, 'r', alpha=1)  # upper on color\n","  plt.step(plot_df[['minor_ST1_Down', 'minor_ST2_Down', 'minor_ST3_Down']].values, 'b', alpha=1)  # lower on color\n","  \n","  plt.step(plot_df[['major_ST1_Up', 'major_ST2_Up', 'major_ST3_Up']].values, 'r', alpha=1, linewidth=3)  # major upper on color\n","  plt.step(plot_df[['major_ST1_Down', 'major_ST2_Down', 'major_ST3_Down']].values, 'b', alpha=1, linewidth=3)  # major lower on color\n","\n","  plt.step(plot_df[['middle_line']].values, 'fuchsia', alpha=1)  # middle \n","  plt.step(plot_df[['major_middle_line']].values, 'fuchsia', alpha=1, linewidth=3)  # major_middle \n","  \n","  plt.step(plot_df[['off_color_upper_st1', 'off_color_upper_st2', 'off_color_upper_st3']].values, 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df[['off_color_lower_st1', 'off_color_lower_st2', 'off_color_lower_st3']].values, 'b', alpha=1, linestyle=':')  # lower off color\n","  \n","  plt.step(plot_df[['off_color_upper_hst1', 'off_color_upper_hst2', 'off_color_upper_hst3']].values, 'r', alpha=1, linestyle=':', linewidth=3)  # major upper off color\n","  plt.step(plot_df[['off_color_lower_hst1', 'off_color_lower_hst2', 'off_color_lower_hst3']].values, 'b', alpha=1, linestyle=':', linewidth=3)  # major lower off color\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_long_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  plt.step(plot_df[['major_upper_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  plt.step(plot_df[['major_lower_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  \n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- on price indicator part ---------------------- #\n","\n","  # ---------------------- sma ---------------------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(ma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='black', linewidth=lw)\n","  #   alpha -= 0.2\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","  # ------------- initial order ------------- #\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline  \n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","\n","  #         hedge ep & tp         #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  if not static_lvrg:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\nlvrg : %s\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], lvrg_list[t_i], tp_ratio_list[t_i]))\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], tp_ratio_list[t_i]))\n","\n","  print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee - 1) * lvrg + 1)\n","  print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee - 1) * lvrg + 1)\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for emaroc in emaroc_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  plt.axhline(0, linestyle='--')\n","\n","\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  if not save_plot:\n","    plt.show()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  \n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["short real pr : [0.95849245]\n","long real pr : [1.0378222]\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 864x1152 with 2 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"code","metadata":{"id":"KGuJu2j4Aby9"},"source":["# print()\n","for item in os.listdir(current_path + \"plot_check/\"):\n","  if item.endswith('png'):\n","    os.remove(current_path + \"plot_check/\" + item)\n","    print(current_path + \"plot_check/\" + item, \"removed !\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cj9X6S1jJjER"},"source":["### plot nontp case"]},{"cell_type":"code","metadata":{"id":"Gb1jGrS4Jl8A"},"source":["prev_plotsize = 50\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","short_ver = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    h_plot_pr_list = h_np_pr\n","\n","\n","\n","#         select plot columns       #\n","# basic_cols = [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14] # you don't need to touch\n","\n","# sar_cols = [15, 18] # 15 ~ 19\n","# ichimoku_cols = [20, 21]  # 20 ~ 29\n","# # ichimoku_cols = [22, 23]  # 20 ~ 29\n","# ichimoku_cols2 = [22, 23]  # 20 ~ 29\n","# macd_cols = [30]  # 30 ~ 34\n","\n","# print(res_df.columns[basic_cols])\n","# break\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher']\n","cctbbo_list = ['cctbbo']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","if short_ver:\n","  nontp_indexs = nontp_short_indexs\n","  nontp_liqd_list = nontp_short_liqd_list\n","  nontp_pr_list = nontp_short_pr_list\n","  nontp_ep = nontp_short_ep_list\n","else:\n","  nontp_indexs = nontp_long_indexs\n","  nontp_liqd_list = nontp_long_liqd_list\n","  nontp_pr_list = nontp_long_pr_list\n","  nontp_ep = nontp_long_ep_list\n","\n","\n","for t_i, i in enumerate(nontp_indexs):\n","\n","  j = len(res_df) - 1\n","\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # # if 1800 < i < 1860:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > upper_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + 1, input_cols]\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, plot_df.iloc[:, [4]], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, plot_df.iloc[:, [6]], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, plot_df.iloc[:, [8]], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, plot_df.iloc[:, [5]], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, plot_df.iloc[:, [7]], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, plot_df.iloc[:, [9]], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[i - prev_plotsize:j + 1]\n","  plot_long_tp = long_tp.iloc[i - prev_plotsize:j + 1]  \n","\n","\n","\n","  # fig = plt.figure(figsize=(12, 16))\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row Î™á Í∞ú \n","                       ncols=1, # col Î™á Í∞ú \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.step(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  # plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  plt.step(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower on color\n","  plt.step(plot_df.values[:, [10]], 'fuchsia', alpha=1)  # middle\n","  \n","  plt.step(plot_df.values[:, -6:-3], 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df.values[:, -3:], 'b', alpha=1, linestyle=':')  # lower off color\n","\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_upper_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_lower_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- indicator part ---------------------- #\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  if i != initial_i:\n","    plt.axvline(prev_plotsize - (i - initial_i), alpha=0.5, linestyle='--')\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(nontp_ep[t_i], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  # for sub_i in range(len(ep_tp_list[t_i][1])):\n","  #   plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline    \n","\n","  #         hedge ep & tp         #\n","  # h_i = h_trade_list[t_i][1]\n","  # if h_i is not None:\n","  #   plt.axvline(prev_plotsize + (h_i - i), linestyle='--')\n","  #   plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","  #   plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  plt.title(\"%s ~ %s -> liqd : %.2f\\npr : %.2f\" % (i, j, nontp_liqd_list[t_i], nontp_pr_list[t_i]))\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # #           macd          #\n","  # # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(313)\n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for stoch in stoch_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(stoch_upper, linestyle='--')\n","  plt.axhline(stoch_lower, linestyle='--')\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  plt.show()\n","  # plt.draw()\n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-g7YY5BvMcLS"},"source":["### show detail values"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5TxQ3rDnKMa7","executionInfo":{"elapsed":255,"status":"ok","timestamp":1625228960601,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"422ac214-8c88-4f39-ec3a-7c823574f6da"},"source":["i, j = 27267, 27268\n","print(\"upper_ep.iloc[i] :\", upper_ep.iloc[i])\n","print(\"short_tp.iloc[j] :\", short_tp.iloc[j])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["upper_ep.iloc[i] : 2348.266954813089\n","short_tp.iloc[j] : 2205.609333246829\n"]}]},{"cell_type":"markdown","metadata":{"id":"7AIl6EBuZNOL"},"source":["## none plot off-color st"]},{"cell_type":"code","metadata":{"id":"yaVxrNGzZgrF"},"source":["prev_plotsize = 50\n","\n","for t_i, (i, j) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if pr_list[t_i] >= 1:\n","  #   continue\n","\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1, [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 16]]\n","\n","  #       replace st values with np.nan, using st trend     #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  fig = plt.figure(figsize=(8, 6))\n","  ax = fig.add_subplot(111)\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper\n","  plt.plot(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower\n","  plt.plot(plot_df.values[:, [10]], 'g', alpha=1)  # middle\n","\n","  plt.plot(plot_df.values[:, [11]], 'c*', alpha=1, markersize=5)  # sar mic\n","  plt.plot(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  plt.plot(plot_upper_ep.values, alpha=1, linestyle='--')  # ep\n","  plt.plot(plot_lower_ep.values, alpha=1, linestyle='--')  # ep\n","\n","  plt.axvline(prev_plotsize, linestyle='--')\n","\n","  plt.title(\"%s ~ %s -> %.5f\" % (i, j, pr_list[t_i]))\n","  plt.show()\n","  # plt.draw()\n","  plt.close()"],"execution_count":null,"outputs":[]}]}