{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22208,"status":"ok","timestamp":1646096619315,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6rmQpzEGXfCw","outputId":"6c024c05-c161-42c6-c1f4-825b7dda8e71"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)\n","\n","strat_pkg = 'IDE'\n","\n","mpl_finance_path = '/content/drive/My Drive/Colab Notebooks/JnQ/mpl_finance'\n","\n","if mpl_finance_path not in sys.path:\n","\n","  try:\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ')\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/{}'.format(strat_pkg))\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/funcs')\n","    sys.path.insert(0, mpl_finance_path)\n","    \n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"8uqYv5StTazo"},"source":["# requirements"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9qGt60DKTZmf"},"outputs":[],"source":["# !pip install findiff\n","\n","# import nvstrings, nvcategory, cudf\n","# import cuml\n","# import cudf\n","\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","from tqdm.notebook import tqdm\n","from funcs.funcs_idep import *\n","from funcs.funcs_duration_v2 import *\n","from funcs.funcs_plot_check import *\n","from funcs.funcs_pairing import *\n","# from funcs.funcs_ide import *\n","# from funcs.funcs_indicator_candlescore import *\n","from funcs.funcs_indicator import *\n","from funcs.funcs_trader import *\n","import logging\n","import importlib\n","\n","import mpl_finance as mf\n","import os\n","import datetime\n","\n","import IPython\n","import IPython.display\n","import matplotlib as mpl\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","# import seaborn as sns\n","# import tensorflow as tf\n","\n","import pickle\n","import shutil\n","import json\n","from easydict import EasyDict\n","\n","# from trendln import trendln\n","\n","from datetime import datetime\n","import random\n","import time\n","# import warnings\n","\n","# warnings.simplefilter(\"ignore\", category=RuntimeWarning)\n","\n","np.seterr(invalid=\"ignore\")\n","np.set_printoptions(suppress=True)\n","np.set_printoptions(linewidth=2000) \n","\n","pd.set_option('mode.chained_assignment',  None)\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset - with to_htf dataframes"]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## sync_check_make"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QmhLikYlSuzi"},"outputs":[],"source":["def sync_check_make(df):\n","\n","    make_itv_list = ['3T', '5T', '15T', '30T', 'H', '4H', 'D']\n","    offset_list = ['1h', '1h', '1h', '1h', '1h', '1h', '9h']\n","\n","    assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        \n","    htf_df_list = [to_htf(df, itv_=itv_, offset=offset_) for itv_, offset_ in zip(make_itv_list, offset_list)]\n","\n","    df_3T, df_5T, df_15T, df_30T, df_H, df_4H, df_D = htf_df_list\n","\n","    for htf_df in htf_df_list:\n","      print(\"{} -> \".format(pd.infer_freq(htf_df.index)), htf_df.tail(1))\n","\n","    # return\n","\n","    #           supertrend          #\n","    # # print(df.head(100))\n","    # # return\n","    \n","    df = st_price_line(df, df_3T, '3m')\n","    # df = st_price_line(df, df_5T, '5m')\n","    # df = st_price_line(df, df_15T, '15m')\n","    # df = st_price_line(df, df_30T, '30m')\n","    # df = st_price_line(df, df_H, '1h')\n","    # df = st_price_line(df, df_4H, '4h')\n","\n","    print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    # df['rsi_1m'] = rsi(df, 14)    \n","    # df_5T['rsi_5m'] = rsi(df_5T, 14)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['rsi_5m']))\n","    \n","    # print(\"rsi phase done\")\n","\n","\n","    # --------------- cci --------------- #  \n","    # df['cci_1m'] = cci(df, 20)\n","\n","    # print(\"cci phase done\")\n","\n","\n","    # --------------- ema --------------- #      \n","    # df_5T['ema_5m'] = ema(df_5T['close'], 195)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['ema_5m']))\n","    \n","    # print(\"ema phase done\")\n","\n","\n","    # # --------------- dc --------------- #  \n","    # df = dc_line(df, None, '1m', dc_period=20)\n","    # df = dc_line(df, df_3T, '3m', dc_period=20)\n","    # df = dc_line(df, df_5T, '5m', dc_period=20)\n","    # df = dc_line(df, df_15T, '15m', dc_period=20)\n","    # df = dc_line(df, df_30T, '30m', dc_period=20)\n","    # df = dc_line(df, df_H, '1h', dc_period=20)\n","    # df = dc_line(df, df_4H, '4h', dc_period=20)\n","    # df = dc_line(df, df_D, '1d', dc_period=20)\n","\n","    # print(\"dc phase done\")\n","    \n","    # # --------------- bband --------------- #  \n","    # df = bb_line(df, None, '1m')\n","    # df = bb_line(df, df_3T, '3m')\n","    # df = bb_line(df, df_5T, '5m')\n","    # df = bb_line(df, df_15T, '15m')\n","    # df = bb_line(df, df_30T, '30m')\n","    # df = bb_line(df, df_H, '1h')\n","    # df = bb_line(df, df_4H, '4h')\n","    # df = bb_line(df, df_D, '1d')\n","\n","    # print(\"bband phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # df_3T['cloud_bline_3m'] = cloud_bline(df_3T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_3T, [-1]), columns=['cloud_bline_3m']))\n","    # df_5T['cloud_bline_5m'] = cloud_bline(df_5T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['cloud_bline_5m']))\n","    # df_15T['cloud_bline_15m'] = cloud_bline(df_15T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_15T, [-1]), columns=['cloud_bline_15m']))\n","    # df_30T['cloud_bline_30m'] = cloud_bline(df_30T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_30T, [-1]), columns=['cloud_bline_30m']))\n","    # df_H['cloud_bline_1h'] = cloud_bline(df_H, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_H, [-1]), columns=['cloud_bline_1h']))\n","    # df_4H['cloud_bline_4h'] = cloud_bline(df_4H, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_4H, [-1]), columns=['cloud_bline_4h']))\n","\n","    # print(\"cbline phase done\")\n","    \n","\n","    #           lucid sar              #\n","    # df['sar_1m'], df['sar_uptrend_1m'] = lucid_sar(df, return_uptrend=True)\n","\n","    # df_3T['sar_3m'], df_3T['sar_uptrend_3m'] = lucid_sar(df_3T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_3T, [-2, -1], backing_i=1), columns=['sar_3m', 'sar_uptrend_3m']))\n","\n","    # df_5T['sar_5m'], df_5T['sar_uptrend_5m'] = lucid_sar(df_5T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-2, -1], backing_i=1), columns=['sar_5m', 'sar_uptrend_5m']))\n","\n","    # df_15T['sar_15m'], df_15T['sar_uptrend_15m'] = lucid_sar(df_15T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_15T, [-2, -1], backing_i=1), columns=['sar_15m', 'sar_uptrend_15m']))\n","\n","    # df_4H['sar_4h'], df_4H['sar_uptrend_4h'] = lucid_sar(df_4H, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_4H, [-2, -1], backing_i=1), columns=['sar_4h', 'sar_uptrend_4h']))\n","    \n","    # print(\"sar phase done\")\n","\n","    \n","    #           stochastic              #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # df_5T['stoch'] = stoch(df_5T, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat 생각하면, timeindex sync 맞춰야함)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"error","timestamp":1636201718856,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"khKb9nhlSuzj","outputId":"02bf2c60-f298-4fe9-e6bb-78230ac1348c"},"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ee034491b257>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0ma_day\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3600\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m24\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtqdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mkeys\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_list' is not defined"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355,"referenced_widgets":["be2b848dbcb14a079a2b7bd605af6435"]},"id":"VA-_gcA7Suzj","outputId":"f6f3b55d-ec2c-4b2c-d62e-3de7c0384dc4"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be2b848dbcb14a079a2b7bd605af6435","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/156 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n","DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223,"referenced_widgets":["e3225655da874b8d89cc8b2a381b3fb6"]},"executionInfo":{"elapsed":43664,"status":"ok","timestamp":1638246331122,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"M-gl30KxSuzk","outputId":"1cfcb580-8d25-4bd0-fdd0-213640779ce2"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3225655da874b8d89cc8b2a381b3fb6","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/175 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BCHUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XRPUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 EOSUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LINKUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XLMUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ADAUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETHUSDT_1m.ftr\n"]}],"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448,"referenced_widgets":["15a8f265417c47d88bf5b1907353afa8","4f4c5fba8f1d4543a46d6dd7e658b7b3","2d4fae08e5364faf83b0bcdc8e6ece4c","0f94b5763ea344adbb20cf3517a25d2f","e5594180fccb4d2787579ee6034cd6ab","af7a8b3e0365404ea9de8bea08d1a4a6","4f9b787786494e79959bc49b6da4ff4d","06f4ecc65be347ac80deee1965545f27","f8462155d04e4c8da2e4c26f02213bb4","18817cdc20574020976bc2f2c6acc6b2","fefe35e08d734a20aa38986f42f27b13"]},"executionInfo":{"elapsed":239284,"status":"ok","timestamp":1642739615683,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"vgVHpnUsSuzk","outputId":"6224eedf-c127-4d18-f095-3a543cd3f1f8"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"15a8f265417c47d88bf5b1907353afa8","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/7 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["3T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:18:00  3163.02  3164.29  3162.41  3164.28\n","5T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3164.28\n","15T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3164.28\n","30T ->                         open     high      low    close\n","index                                                 \n","2022-01-10 15:00:00  3171.7  3173.11  3156.02  3164.28\n","H ->                         open     high      low    close\n","index                                                 \n","2022-01-10 15:00:00  3171.7  3173.11  3156.02  3164.28\n","4H ->                         open     high      low    close\n","index                                                 \n","2022-01-10 13:00:00  3153.0  3179.16  3149.95  3164.28\n","D ->                          open     high      low    close\n","index                                                  \n","2022-01-10 09:00:00  3149.99  3179.16  3125.88  3164.28\n","supertrend phase done\n","./candlestick_concated/res_df/st3m_backi2/noncat/cum/2022-01-10/2022-01-10 ETHUSDT.ftr saved succesfully !\n"]}],"source":["# db_path = './candlestick_concated/database_ub/' # upbit\n","db_path = './candlestick_concated/database_bn/'   # binance\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","save_dir_path = \"st3m_backi2\"\n","\n","date = '2022-01-10'\n","\n","cum_path = \"cum\"\n","# cum_path = \"non_cum\"  # non_cum 으로 진행하는 경우, row concat 용도이기 때문에 noncat -> concat 으로 변경 (base cols 를 모두 담고 있음)\n","\n","concat_path = 'noncat' # 새로운 cols 를 기존 cum/concat 에 붙이려는 경우\n","# concat_path = 'concat'\n","\n","data_path = os.path.join(db_path, cum_path, date)\n","save_path = os.path.join(save_path, save_dir_path, concat_path, cum_path, date)\n","\n","os.makedirs(save_path, exist_ok=True)\n","\n","file_list = os.listdir(data_path)\n","exist_list = os.listdir(save_path)\n","# break\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    df = pd.read_feather(os.path.join(data_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    res_df = sync_check_make(df)\n","\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_path, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"E0n53hflJbnp"},"source":["### htf candle check"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":489,"status":"ok","timestamp":1642148504926,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6xW0yugCWvGz","outputId":"58106ff9-9709-4a62-bca2-1f6795d13322"},"outputs":[{"name":"stdout","output_type":"stream","text":["itv_ : 3T\n","                        open     high      low    close\n","index                                                  \n","2022-01-10 15:06:00  3169.97  3170.22  3159.51  3161.22\n","2022-01-10 15:09:00  3161.22  3163.98  3161.22  3163.82\n","2022-01-10 15:12:00  3163.82  3163.83  3156.02  3160.49\n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3162.93\n","2022-01-10 15:18:00  3163.02  3164.29  3162.41  3164.28\n","                            open     high      low    close    volume\n","index                                                                \n","2022-01-10 15:08:59.999  3169.97  3170.22  3159.51  3161.22  4241.449\n","2022-01-10 15:11:59.999  3161.22  3163.98  3161.22  3163.82  1143.874\n","2022-01-10 15:14:59.999  3163.82  3163.83  3156.02  3160.49  2135.292\n","2022-01-10 15:17:59.999  3160.51  3164.29  3159.01  3162.93  1011.598\n","2022-01-10 15:20:59.999  3163.02  3164.29  3162.41  3163.82   466.868\n"]}],"source":["itv_list = ['3T', '5T', '15T', '30T', '1H', '4H']\n","comp_df_list = [second_df, third_df, fourth_df, fifth_df, sixth_df, seventh_df]\n","offset_list = ['1h', '2min', '2min', '2min', '2min', '2min']\n","# itv_list = ['4H']\n","# comp_df_list = [seventh_df]\n","\n","slice_len = 100\n","for itv_, comp_df_, offset in zip(itv_list, comp_df_list, offset_list):\n","\n","  print(\"itv_ :\", itv_)\n","\n","  # df = h_candle_v2(df, '3T')\n","  # end_ts = \n","  h_res_df = df.resample(itv_, offset=offset).agg({\n","          'open': 'first',\n","          'high': 'max',\n","          'low': 'min',\n","          'close': 'last'\n","      })\n","\n","  #   앞은 길이가 다르고, 뒤에서부터 잘라서 비교    #\n","  #   last_row 빼고는 동일, 4h 제외\n","  # print(df.tail())\n","  print(h_res_df.tail())\n","  print(comp_df_.tail())\n","  # # print(h_res_df.head())\n","  # # print(second_df.head())\n","\n","  # print(len(h_res_df))\n","  # print(len(second_df))\n","\n","  # print(h_res_df.values[-slice_len:])\n","  # print(second_df.iloc[:, :4].values[-slice_len:])\n","  # print(np.argwhere(h_res_df.values[-slice_len:] != comp_df_.iloc[:, :4].values[-slice_len:]))\n","  # print()\n","  break"]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U-3QkfbFSuzl"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xyI5NrM7Suzm"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  print(os.path.join(new_save_path, key), \"saved !\")\n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2001,"status":"ok","timestamp":1642739652513,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6cu-Y82iSuzl","outputId":"273507b8-0d33-48b5-d9c5-00547688ef73"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2022-01-10 ETHUSDT.ftr']\n","./candlestick_concated/res_df/st3m_backi2/concat/cum/2022-01-10/2022-01-10 ETHUSDT.ftr saved !\n"]}],"source":["new_dir_path = \"st3m_backi2\"\n","base_dir_path = \"bb1d_backi2\"\n","\n","# new_date = \"2021-11-17\"\n","new_date = \"2022-01-10\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)   \n","# save_path = os.path.join(save_path, new_dir_path, \"concat/non_cum\", new_date)   # row col 하려면 concat 맞음, noncum 사용\n","os.makedirs(save_path, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat/\", \"noncat/\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  try:\n","\n","    #       read from base postfix's directory    #\n","    base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","    res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    # print(base_df.head())\n","    # print(res_df.head())\n","    # break\n","\n","    new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","    # new_res_df.head()\n","\n","    droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","    # droped_new_res_df.head()\n","    # break\n","\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df\n","    print(os.path.join(save_path, key), \"saved !\")\n","  \n","  except Exception as e:\n","    print(\"error occured ! :\", e)\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4GiF2NJPSuzm"},"outputs":[],"source":["print(*droped_new_res_df.columns, sep = '\\n')"]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat) , database cum 도 호환가능"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7893,"status":"ok","timestamp":1645188189702,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"XG2p9OhhSuzm","outputId":"e67874ba-0710-4f38-966f-5ea7d42403cb"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-02-17 ETHUSDT_1m.ftr']\n","                            open     high     low    close  volume\n","index                                                             \n","2019-11-27 16:45:59.999   146.00   146.00   146.0   146.00   0.010\n","2022-02-17 10:29:59.999  3146.86  3147.22  3146.4  3146.76  26.727\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-02-17/2022-02-17 ETHUSDT_1m.ftr saved !\n"]}],"source":["save_path = './candlestick_concated/res_df/'        # cols 추가된 cum db 에 new_row's cols 기준으로 합치는 경우\n","save_path = './candlestick_concated/database_bn/'   # ohlcv cum db 만들 경우\n","\n","base_date = '2022-01-10'\n","new_date = '2022-02-17'\n","\n","#     load ftr list    #\n","if \"database\" in save_path:\n","  base_dir_path = \"\"\n","  new_dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  base_dir_path = \"sar_backi2\"\n","  new_dir_path = \"bb4h_backi2\"  # dir_path 가 base / new 서로 달라질 수 있어서 분할함\n","  concat_dir = \"concat\"\n","\n","base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"cum\", base_date)      # 기존 cum db 와 new_date db 를 cum 진행\n","# base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"non_cum\", base_date)    # non_cum db 와 new_date db 를 cum 진행\n","\n","# new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"cum\", new_date)      # 상황별로 직접 선택해야할 듯\n","new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"non_cum\", new_date)\n","\n","\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")   # non_cum 아니여도 무관\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat 두가지 경우 존재가능할 것\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","exist_list = os.listdir(save_path)\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:   # date rejection\n","    continue\n","  if '1m' not in key:  # itv rejection\n","    continue\n","\n","  # if key in exist_list:\n","  #   print(key, \"already exist !\")\n","  #   continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")   # key 에 new_date 담겨있음\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break  \n","  \n","  print(droped_new_res_df.iloc[[0, -1]])  \n","\n","  # ------------- verify df continuity directly itv by itv ------------- #\n","  true_continue = True\n","  if \"_\" in key:\n","\n","    interval = key.split(\".\")[0].split(\"_\")[-1] \n","    itv_num = to_itvnum(interval)\n","\n","    # verified_df = consecutive_df(droped_new_res_df, to_itvnum(interval))\n","    # verified_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df  \n","\n","    np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","    ideal_ts_gap = 60 * itv_num\n","\n","    for ts_i in range(len(np_idx_ts)):\n","      \n","      if ts_i != 0:\n","        ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","        if ts_gap > ideal_ts_gap or ts_gap < ideal_ts_gap:\n","        # if ts_gap == ideal_ts_gap:\n","          print(droped_new_res_df.index[ts_i - 1])\n","          print(droped_new_res_df.index[ts_i])\n","          # print(ts_gap)\n","          print(\"------------------ unideal ts_gap ------------------\")\n","          true_continue = False\n","\n","    print(\"continuity checked !\")\n","\n","  if true_continue:\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n"]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["### check continuity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nGzMGyC3Suzn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643987442996,"user_tz":-540,"elapsed":5408,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"4fface63-62d9-4e2a-e22d-bdd26f428e0e"},"outputs":[{"output_type":"stream","name":"stdout","text":["                             open    high       low     close   volume\n","index                                                                 \n","2020-09-14 16:00:59.999    3.2002    4.91    3.2002    3.2745  11567.0\n","2022-02-04 23:57:59.999  103.7500  103.75  103.6000  103.6000   6427.0\n","[1.60009926e+09 1.60009932e+09 1.60009938e+09 1.60009944e+09\n"," 1.60009950e+09 1.60009956e+09 1.60009962e+09 1.60009968e+09\n"," 1.60009974e+09 1.60009980e+09]\n"]}],"source":["# print(droped_new_res_df.columns)\n","\n","print(droped_new_res_df.iloc[[0, -1]])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","\n","      print(\"invalid ts_gap found !\")\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"]},{"cell_type":"markdown","metadata":{"id":"x_XGJqBi8Jex"},"source":["### check length of front missing value + middle_data non_missing validity"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":311,"status":"ok","timestamp":1641887318959,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"yRNwqVeAu8X8","outputId":"fb236bde-4527-4bc7-eac4-4bee42532c5a"},"outputs":[{"name":"stdout","output_type":"stream","text":["2.167361111111111\n","38\n"]}],"source":["#       1. new_date 의 시작 timeidx 와 base_date end timeidx 의 최소 days' gap     #\n","#       2. new_date 의 시작 부분 indi. value 는 np.nan 으로 채워질 거기 때문에 계산해야함    #\n","\n","df_count = droped_new_res_df.count()\n","len_missing = df_count.max() - df_count.min()\n","print(len_missing / 1440)\n","\n","#       3. \n","missing_sliced_df = droped_new_res_df.iloc[len_missing:]\n","df_count2 = missing_sliced_df.count()\n","# print(df_count2)\n","print((df_count2.max() - df_count2.min()))    # this value should be zero !\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AY7E2_hTBsyM"},"outputs":[],"source":["# df_count2.index[df_count2.argmin()]\n","# missing_sliced_df.head(5)\n","\n","stay_missed = np.sum(pd.isnull(missing_sliced_df), axis=0)\n","print(stay_missed)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p9yqewOw9g33"},"outputs":[],"source":["stay_missed_cols = stay_missed[stay_missed != 0].index\n","\n","for sm_col in stay_missed_cols:\n","  \n","  row_idx = np.argwhere(pd.isnull(missing_sliced_df[sm_col].values))\n","\n","  plt.figure(figsize=(3,3))\n","  plt.plot(row_idx)\n","  plt.ylim(0, len(missing_sliced_df))\n","  plt.title(sm_col)\n","\n","  plt.show()\n"]},{"cell_type":"markdown","source":["## legacy"],"metadata":{"id":"MSUY4nnku3s9"}},{"cell_type":"markdown","source":["### mv files"],"metadata":{"id":"epgS5Dksu-HX"}},{"cell_type":"code","source":["df_path = './candlestick_concated/survey_df_v2'\n","files_ = os.listdir(df_path)"],"metadata":{"id":"aJcVpEdrslA5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dirs = [file_ for file_ in files_ if not file_.endswith('.ftr')]\n","files = [file_ for file_ in files_ if file_.endswith('.ftr')]"],"metadata":{"id":"cEKyEYkotFDy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dirs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IgM79tcxtPVZ","executionInfo":{"status":"ok","timestamp":1644111921194,"user_tz":-540,"elapsed":4,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"84305b35-eb52-49fc-d5fd-fdbc64cc8679"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['2022-01-10 ETHUSDT', '2022-01-10 ETHUSDT_all', '2022-02-04 SOLUSDT']"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["def move_fn(dir_, file_):\n","  src_path = os.path.join(df_path, file_)\n","  dst_path = os.path.join(df_path, dir_, file_)\n","  shutil.move(src_path, dst_path)\n","  print(\"moved to {}\".format(dst_path))\n","\n","_ = [move_fn('2022-01-10 ETHUSDT_all', file_) for file_ in files if 'eth'.upper() in file_]\n","# sols\n"],"metadata":{"id":"M767iRtwtRQP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ci_jUnNTZbm9"},"source":["### load data (old)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22503,"status":"ok","timestamp":1638246127510,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"_bXyS2yrZYC6","outputId":"b24a8a66-48b1-42b5-aa79-63f5a8542bac"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 LTCUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 ETHUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-08-31 SUSHIUSDT.xlsx', '2021-08-31 CVCUSDT.xlsx', '2021-08-31 BTSUSDT.xlsx', '2021-08-31 HOTUSDT.xlsx', '2021-08-31 ZRXUSDT.xlsx', '2021-08-31 QTUMUSDT.xlsx', '2021-08-31 IOTAUSDT.xlsx', '2021-08-31 BTCBUSD.xlsx', '2021-08-31 WAVESUSDT.xlsx', '2021-08-31 ADAUSDT.xlsx', '2021-08-31 LITUSDT.xlsx', '2021-08-31 XTZUSDT.xlsx', '2021-08-31 BNBUSDT.xlsx', '2021-08-31 AKROUSDT.xlsx', '2021-08-31 HNTUSDT.xlsx', '2021-08-31 ETCUSDT.xlsx', '2021-08-31 XMRUSDT.xlsx', '2021-08-31 YFIUSDT.xlsx', '2021-08-31 ETHUSDT.xlsx', '2021-08-31 ALICEUSDT.xlsx', '2021-08-31 ALPHAUSDT.xlsx', '2021-08-31 SFPUSDT.xlsx', '2021-08-31 REEFUSDT.xlsx', '2021-08-31 BATUSDT.xlsx', '2021-08-31 DOGEUSDT.xlsx', '2021-08-31 TRXUSDT.xlsx', '2021-08-31 RLCUSDT.xlsx', '2021-08-31 BTCSTUSDT.xlsx', '2021-08-31 STORJUSDT.xlsx', '2021-08-31 SNXUSDT.xlsx', '2021-08-31 XLMUSDT.xlsx', '2021-08-31 NEOUSDT.xlsx', '2021-08-31 UNFIUSDT.xlsx', '2021-08-31 SANDUSDT.xlsx', '2021-08-31 DASHUSDT.xlsx', '2021-08-31 KAVAUSDT.xlsx', '2021-08-31 RUNEUSDT.xlsx', '2021-08-31 CTKUSDT.xlsx', '2021-08-31 LINKUSDT.xlsx', '2021-08-31 CELRUSDT.xlsx', '2021-08-31 RSRUSDT.xlsx', '2021-08-31 DGBUSDT.xlsx', '2021-08-31 SKLUSDT.xlsx', '2021-08-31 RENUSDT.xlsx', '2021-08-31 TOMOUSDT.xlsx', '2021-08-31 MTLUSDT.xlsx', '2021-08-31 LTCUSDT.xlsx', '2021-08-31 DODOUSDT.xlsx', '2021-08-31 EGLDUSDT.xlsx', '2021-08-31 KSMUSDT.xlsx', '2021-08-31 ONTUSDT.xlsx', '2021-08-31 VETUSDT.xlsx', '2021-08-31 TRBUSDT.xlsx', '2021-08-31 MANAUSDT.xlsx', '2021-08-31 COTIUSDT.xlsx', '2021-08-31 CHRUSDT.xlsx', '2021-08-31 ETHUSDT_210924.xlsx', '2021-08-31 BAKEUSDT.xlsx', '2021-08-31 GRTUSDT.xlsx', '2021-08-31 FLMUSDT.xlsx', '2021-08-31 EOSUSDT.xlsx', '2021-08-31 OGNUSDT.xlsx', '2021-08-31 SCUSDT.xlsx', '2021-08-31 BALUSDT.xlsx', '2021-08-31 STMXUSDT.xlsx', '2021-08-31 BTTUSDT.xlsx', '2021-08-31 LUNAUSDT.xlsx', '2021-08-31 DENTUSDT.xlsx', '2021-08-31 KNCUSDT.xlsx', '2021-08-31 SRMUSDT.xlsx', '2021-08-31 ENJUSDT.xlsx', '2021-08-31 ZENUSDT.xlsx', '2021-08-31 ATOMUSDT.xlsx', '2021-08-31 NEARUSDT.xlsx', '2021-08-31 BCHUSDT.xlsx', '2021-08-31 IOSTUSDT.xlsx', '2021-08-31 HBARUSDT.xlsx', '2021-08-31 ZECUSDT.xlsx', '2021-08-31 1000SHIBUSDT.xlsx', '2021-08-31 TLMUSDT.xlsx', '2021-08-31 BZRXUSDT.xlsx', '2021-08-31 ETHBUSD.xlsx', '2021-08-31 AAVEUSDT.xlsx', '2021-08-31 GTCUSDT.xlsx', '2021-08-31 ALGOUSDT.xlsx', '2021-08-31 ICPUSDT.xlsx', '2021-08-31 BTCUSDT_210924.xlsx', '2021-08-31 LRCUSDT.xlsx', '2021-08-31 AVAXUSDT.xlsx', '2021-08-31 MATICUSDT.xlsx', '2021-08-31 1INCHUSDT.xlsx', '2021-08-31 MKRUSDT.xlsx', '2021-08-31 THETAUSDT.xlsx', '2021-08-31 UNIUSDT.xlsx', '2021-08-31 LINAUSDT.xlsx', '2021-08-31 RVNUSDT.xlsx', '2021-08-31 FILUSDT.xlsx', '2021-08-31 NKNUSDT.xlsx', '2021-08-31 DEFIUSDT.xlsx', '2021-08-31 COMPUSDT.xlsx', '2021-08-31 BTCDOMUSDT.xlsx', '2021-08-31 SOLUSDT.xlsx', '2021-08-31 BTCUSDT.xlsx', '2021-08-31 OMGUSDT.xlsx', '2021-08-31 ICXUSDT.xlsx', '2021-08-31 BLZUSDT.xlsx', '2021-08-31 FTMUSDT.xlsx', '2021-08-31 YFIIUSDT.xlsx', '2021-08-31 KEEPUSDT.xlsx', '2021-08-31 BANDUSDT.xlsx', '2021-08-31 XRPUSDT.xlsx', '2021-08-31 SXPUSDT.xlsx', '2021-08-31 CRVUSDT.xlsx', '2021-08-31 BELUSDT.xlsx', '2021-08-31 DOTUSDT.xlsx', '2021-08-31 XEMUSDT.xlsx', '2021-08-31 ONEUSDT.xlsx', '2021-08-31 ZILUSDT.xlsx', '2021-08-31 AXSUSDT.xlsx', '2021-08-31 OCEANUSDT.xlsx', '2021-08-31 CHZUSDT.xlsx', '2021-08-31 ANKRUSDT.xlsx', '2021-08-31 SUSHIUSDT_res_dfs.pkl', '2021-07-01 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-02-07 BTC.xlsx', '2021-02-07 ETH.xlsx', '2021-02-11 BCHUSDT.xlsx', '2021-02-11 XRPUSDT.xlsx', '2021-02-11 EOSUSDT.xlsx', '2021-02-11 LTCUSDT.xlsx', '2021-02-11 ETCUSDT.xlsx', '2021-02-11 LINKUSDT.xlsx', '2021-02-11 XLMUSDT.xlsx', '2021-02-11 ADAUSDT.xlsx', '2021-02-11 XMRUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr']\n","['2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx']\n"]}],"source":["interval = '1m'\n","date_path = './candlestick_concated/%s/quant_v2/' % interval\n","file_list = os.listdir(date_path)\n","print((file_list))\n","\n","interval2 = '3m'\n","date_path2 = './candlestick_concated/%s/quant_v2/' % interval2\n","file_list2 = os.listdir(date_path2)\n","print((file_list2))\n","\n","interval3 = '5m'\n","date_path3 = './candlestick_concated/%s/quant_v2/' % interval3\n","file_list3 = os.listdir(date_path3)\n","print((file_list3))\n","\n","interval4 = '15m'\n","date_path4 = './candlestick_concated/%s/quant_v2/' % interval4\n","file_list4 = os.listdir(date_path4)\n","print((file_list4))\n","\n","interval5 = '30m'\n","date_path5 = './candlestick_concated/%s/quant_v2/' % interval5\n","file_list5 = os.listdir(date_path5)\n","print((file_list5))\n","\n","interval6 = '1h'\n","date_path6 = './candlestick_concated/%s/quant_v2/' % interval6\n","file_list6 = os.listdir(date_path6)\n","print((file_list6))\n","\n","interval7 = '4h'\n","date_path7 = './candlestick_concated/%s/quant_v2/' % interval7\n","file_list7 = os.listdir(date_path7)\n","print((file_list7))\n","\n","interval8 = '1d'\n","date_path8 = './candlestick_concated/%s/quant_v2/' % interval8\n","file_list8 = os.listdir(date_path8)\n","print((file_list8))"]},{"cell_type":"markdown","metadata":{"id":"M8-EChy0VsDr"},"source":["## cudf"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1638754008241,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"b09qAb1sVtRP","outputId":"3a824202-064a-4544-b791-ffc777bb3f9c"},"outputs":[{"name":"stdout","output_type":"stream","text":["usage: conda [-h] [-V] command ...\n","conda: error: unrecognized arguments: -t=/content/notebooks\n"]}],"source":["# !conda install -c rapidsai-nightly -c nvidia -c numba -c conda-forge \\\n","#     cudf python=3.7 cudatoolkit=11.1 -t=$nb_path"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1638754715310,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"Jnz6i7ZqRnb0","outputId":"207bc57b-a17a-4f67-fb26-24e46e2c6e26"},"outputs":[{"name":"stdout","output_type":"stream","text":["***********************************************************************\n","Woo! Your instance has the right kind of GPU, a Tesla P100-PCIE-16GB!\n","***********************************************************************\n","\n"]}],"source":["# !git clone https://github.com/rapidsai/rapidsai-csp-utils.git\n","!python rapidsai-csp-utils/colab/env-check.py"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4sKA_9Dbg4s2"},"outputs":[],"source":["# This will update the Colab environment and restart the kernel.  Don't run the next cell until you see the session crash.\n","!bash rapidsai-csp-utils/colab/update_gcc.sh\n","import os\n","os._exit(00)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d1C4pNiBhYHX"},"outputs":[],"source":["# This will install CondaColab.  This will restart your kernel one last time.  Run this cell by itself and only run the next cell once you see the session crash.\n","import condacolab\n","condacolab.install()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1638754863073,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"iGx3ACTvZqck","outputId":"e8379cc4-c325-4fe0-ac46-5fbbd7d38829"},"outputs":[{"name":"stdout","output_type":"stream","text":["✨🍰✨ Everything looks OK!\n"]}],"source":["# you can now run the rest of the cells as normal\n","import condacolab\n","condacolab.check()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oR8s7U8c7C28","outputId":"22be2731-fae1-45fc-f310-e48f60774bb2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Installing RAPIDS Stable 21.10\n","Starting the RAPIDS install on Colab.  This will take about 15 minutes.\n","Collecting package metadata (current_repodata.json): ...working... done\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with initial frozen solve. Retrying with flexible solve.\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with repodata from current_repodata.json, will retry with next repodata source.\n","Collecting package metadata (repodata.json): ...working... done\n"]}],"source":["# Installing RAPIDS is now 'python rapidsai-csp-utils/colab/install_rapids.py <release> <packages>'\n","# The <release> options are 'stable' and 'nightly'.  Leaving it blank or adding any other words will default to stable.\n","# The <packages> option are default blank or 'core'.  By default, we install RAPIDSAI and BlazingSQL.  The 'core' option will install only RAPIDSAI and not include BlazingSQL, \n","!python rapidsai-csp-utils/colab/install_rapids.py stable\n","import os\n","os.environ['NUMBAPRO_NVVM'] = '/usr/local/cuda/nvvm/lib64/libnvvm.so'\n","os.environ['NUMBAPRO_LIBDEVICE'] = '/usr/local/cuda/nvvm/libdevice/'\n","os.environ['CONDA_PREFIX'] = '/usr/local'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kWsxi4ZpKtGt"},"outputs":[],"source":["import shutil\n","import sys\n","\n","colab_env = \"/usr/lib\"\n","\n","rapids_path = os.path.join(current_path, \"rapidsai-csp-utils/lib\")\n","rapids_libs = os.listdir(rapids_path)\n","print(rapids_libs)\n","# break\n","\n","for lib_ in rapids_libs:\n","  try:\n","    shutil.copy(os.path.join(rapids_path, lib_), os.path.join(colab_env, lib_))\n","    sys.path.append(os.path.join(colab_env, lib_))\n","    print(\"copied to\" + os.path.join(colab_env, lib_))\n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"Iy76iO7gztne"},"source":["## move legacy files"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hMRht32Czwry"},"outputs":[],"source":["# print()\n","cur_dir_list = os.listdir('.')\n","for f in cur_dir_list:\n","  if 'legacy' in f :\n","    # print(f)\n","    if os.path.isdir(current_path + f,):\n","      continue\n","\n","    shutil.move(current_path + f, current_path + 'legacy/' + f)\n","    print(\"moved to\" + current_path + 'legacy/' +  f)"]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["# IDE platform\n"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","execution_count":157,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2330,"status":"ok","timestamp":1646110555766,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"7FPBG5Qqg2jB","outputId":"5f8fd15a-b8ce-42ba-fa75-aaca55500c98"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-02-17 ETHUSDT.ftr']\n","2022-02-17 ETHUSDT.ftr loaded !\n","2021-09-07 21:21:59.999000\n","load res_df_ elapsed time : 1.862504005432129\n"]}],"source":["save_path = './candlestick_concated/res_df/'\n","\n","dir_path = \"bb4h_backi2\"\n","dir_path = \"bb1d_backi2\"\n","date = \"2022-01-10\"\n","date = \"2022-02-17\"\n","\n","ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","# ------ load ftr list ------ #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)\n","\n","start_0 = time.time()\n","key = ftr_list[0]  # tempoaray use single key\n","res_df_ = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")\n","# print(res_df_.head())\n","print(key, \"loaded !\")\n","print(\"load res_df_ elapsed time :\", time.time() - start_0)"]},{"cell_type":"markdown","metadata":{"id":"xpyP5t8Ht_pE","jp-MarkdownHeadingCollapsed":true,"tags":[]},"source":["### calc recursive indi's min_period"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"elapsed":15,"status":"error","timestamp":1645810346810,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"N1Hbm4OA4Tkk","outputId":"e6a3fc2f-316c-4a0d-9c91-df759c816b88"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-c602b9e1b7e6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mticker_prcn\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_precision_by_price\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mtarget_len\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m300000\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mslice_len_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10000\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m100\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mslice_len_list\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsert\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_len\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'res_df' is not defined"]}],"source":["ticker_prcn = get_precision_by_price(res_df.close.iloc[-1]) + 2\n","\n","target_len = 300000\n","slice_len_list = list(range(50, 10000, 100))\n","slice_len_list.insert(0, target_len)\n","\n","start_0 = time.time()\n","# prev_int_, prev_pnts_ = None, None\n","offset = 1\n","\n","for sl_idx, sample_len in enumerate(slice_len_list):\n","\n","  sample_df = res_df.iloc[-sample_len -offset:-offset]\n","  sample_len2 = sample_len\n","\n","  # --------- input using indi.s --------- #\n","  # res = ema_v0(sample_df['close'], 190)\n","  res = rsi(sample_df, 14)\n","\n","    #    to_htf()    #\n","  # df_5T = to_htf(sample_df, itv_='5T', offset='1h')\n","  # sample_len2 = len(df_5T)\n","\n","  # # --------- input using htf_indi. --------- #\n","  # res = ema(df_5T['close'], 195)\n","  # -------------------------------------- #\n","\n","  res_last_row = res.iloc[-1]\n","  if pd.isnull(res_last_row):\n","    continue\n","\n","  # print(res_last_row)\n","  # break\n","\n","  # sample_df = sample_df.join(to_lower_tf_v2(sample_df, df_5T, [-1]), how='inner')\n","\n","\n","  #   자리수 분할 계산    #\n","  int_, points_ = str(res_last_row).split('.')\n","  pnts_ = points_[:ticker_prcn]\n","\n","  if sl_idx == 0:\n","    target_int_ = int_\n","    target_pnts_ = pnts_\n","    print(\"target {} ({}) -> {} {}\".format(sample_len, sample_len2, int_, points_))\n","\n","  else:\n","    if target_int_ == int_ and target_pnts_ == pnts_:\n","      # print(sample_len, \"({})\".format(sample_len2), '->', int_, pnts_, end='\\n\\n')\n","      print(\"{} ({}) -> {} {}\\n\".format(sample_len, sample_len2, int_, points_))\n","      break\n","\n","print(time.time() - start_0)  # (1301)(1361)(1301)"]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D","tags":[]},"source":["## import utils & config"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SeJan_0t95yL"},"outputs":[],"source":["frame_ver = \"0114_htf\"\n","ID_arr = np.array(['v3', 'v5_2'])\n","\n","utils_public_name = \"{}.utils.{}_utils_public\".format(strat_pkg, frame_ver)\n","utils_public_lib = importlib.import_module(utils_public_name)\n","utils_public = utils_public_lib   # temporary\n","\n","u_name_list = [\"{}.utils.{}_utils_{}\".format(strat_pkg, frame_ver, id_) for id_ in ID_arr]\n","utils_arr = np.array([importlib.import_module(u_name) for u_name in u_name_list])\n","\n","config_name_list = [\"{}_config_{}.json\".format(frame_ver, id_) for id_ in ID_arr]\n","cfg_path_list = [os.path.join(current_path, strat_pkg, \"config\", name_) for name_ in config_name_list]\n","cfg_file_list = [open(cfg_path) for cfg_path in cfg_path_list]\n","config_arr = np.array([EasyDict(json.load(cfg_)) for cfg_ in cfg_file_list])\n","\n","# ------ opened files should be closed --> 닫지 않으면 reopen 시 error occurs ------ #\n","_ = [cfg_.close() for cfg_ in cfg_file_list]\n","show_plot = 1   # idep's var - do not touch"]},{"cell_type":"markdown","metadata":{"id":"leSQlImg4_9L","jp-MarkdownHeadingCollapsed":true,"tags":[]},"source":["### utils_"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CB2yZdQ95Cdg"},"outputs":[],"source":["# from funcs.funcs_indicator_candlescore import *\n","# import numpy as np\n","\n","\n","def enlist_rtc(res_df, config, np_timeidx):\n","    strat_version = config.strat_version\n","    \n","    res_df['short_rtc_1_{}'.format(strat_version)] = res_df['bb_lower_%s' % config.loc_set.point.outg_itv1]\n","    res_df['short_rtc_0_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.point.outg_itv0]\n","\n","    res_df['long_rtc_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.outg_itv1]\n","    res_df['long_rtc_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.outg_itv0]\n","\n","    #      entry reversion    #\n","    if config.ep_set.short_entry_score > 0:  # Todo - 추후 다른 변수로 변경해야함 (entry_score deprecated)\n","        short_rtc_1_copy = res_df['short_rtc_1_{}'.format(strat_version)].copy()\n","        res_df['short_rtc_1_{}'.format(strat_version)] = res_df['long_rtc_1_{}'.format(strat_version)]\n","        res_df['long_rtc_1_{}'.format(strat_version)] = short_rtc_1_copy\n","\n","        short_rtc_0_copy = res_df['short_rtc_0_{}'.format(strat_version)].copy()\n","        res_df['short_rtc_0_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)]\n","        res_df['long_rtc_0_{}'.format(strat_version)] = short_rtc_0_copy\n","\n","    res_df['short_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['short_rtc_0_{}'.format(strat_version)] - res_df['short_rtc_1_{}'.format(strat_version)])\n","    res_df['long_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['long_rtc_1_{}'.format(strat_version)] - res_df['long_rtc_0_{}'.format(strat_version)])\n","\n","    res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['bb_lower_%s' % config.loc_set.point.tpg_itv1]\n","    # res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_0_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.point.tpg_itv0]\n","\n","    res_df['h_long_rtc_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv1]\n","    # res_df['h_long_rtc_1_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv0]\n","\n","    #      entry reversion    #\n","    if config.ep_set.short_entry_score > 0:\n","        h_short_rtc_1_copy = res_df['h_short_rtc_1_{}'.format(strat_version)].copy()\n","        res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)]\n","        res_df['h_long_rtc_1_{}'.format(strat_version)] = h_short_rtc_1_copy\n","\n","        h_short_rtc_0_copy = res_df['h_short_rtc_0_{}'.format(strat_version)].copy()\n","        res_df['h_short_rtc_0_{}'.format(strat_version)] = res_df['h_long_rtc_0_{}'.format(strat_version)]\n","        res_df['h_long_rtc_0_{}'.format(strat_version)] = h_short_rtc_0_copy\n","\n","    res_df['h_short_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['h_short_rtc_0_{}'.format(strat_version)] - res_df['h_short_rtc_1_{}'.format(strat_version)])\n","    res_df['h_long_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df['h_long_rtc_0_{}'.format(strat_version)])\n","\n","    res_df['short_dtk_1_{}'.format(strat_version)] = res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_0_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.zone.dtk_itv]\n","\n","    res_df['long_dtk_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.zone.dtk_itv]\n","\n","    res_df['short_dtk_gap_{}'.format(strat_version)] = abs(\n","        res_df['short_dtk_0_{}'.format(strat_version)] - res_df['short_dtk_1_{}'.format(strat_version)])\n","    res_df['long_dtk_gap_{}'.format(strat_version)] = abs(\n","        res_df['long_dtk_1_{}'.format(strat_version)] - res_df['long_dtk_0_{}'.format(strat_version)])\n","\n","    return res_df\n","\n","\n","def enlist_tr(res_df, config, np_timeidx, mode='OPEN'):\n","    strat_version = config.strat_version\n","    # ---------------- get open_res ---------------- #    \n","    len_df = len(res_df)\n","    short_open_res = np.ones(len_df)\n","    long_open_res = np.ones(len_df)\n","    \n","    data_cols = ['open', 'close', 'bb_lower_%s' % config.loc_set.point.exp_itv, 'bb_upper_%s' % config.loc_set.point.exp_itv]   # Todo - public_indi 이전에 해야할지도 모름\n","    o, c, bb_lower_, bb_upper_ = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","    short_open_res *= (o >= bb_lower_) &(c < bb_lower_)                        \n","    short_open_res *= np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1)\n","    res_df['short_open_{}'.format(strat_version)] = short_open_res\n","\n","    long_open_res *= (o <= bb_upper_) &(c > bb_upper_)                     \n","    long_open_res *= np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1)    \n","    res_df['long_open_{}'.format(strat_version)] = long_open_res\n","\n","    # ---------------- set ep level ---------------- #\n","    # -------- limit ver. -------- #\n","    if config.ep_set.entry_type == \"LIMIT\":\n","      res_df['short_ep_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] + res_df['h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","      res_df['long_ep_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df['h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","\n","      # res_df['short_ep_{}'.format(strat_version)] = res_df['close'] + res_df['h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","      # res_df['long_ep_{}'.format(strat_version)] = res_df['close'] - res_df['h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap       \n","\n","    # -------- market ver. -------- #\n","    else:\n","        res_df['short_ep_{}'.format(strat_version)] = res_df['close']\n","        res_df['long_ep_{}'.format(strat_version)] = res_df['close']\n","\n","    # -------- zoned_ep -------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        # res_df['short_ep_org_{}'.format(strat_version)] = res_df['short_ep_{}'.format(strat_version)].copy()\n","        # res_df['long_ep_org_{}'.format(strat_version)] = res_df['long_ep_{}'.format(strat_version)].copy()\n","        res_df['short_ep2_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] + res_df[\n","            'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","        res_df['long_ep2_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df[\n","            'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","\n","    # --------------- tp --------------- #\n","    res_df['short_tp_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] - res_df[\n","        'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.tp_gap\n","    res_df['long_tp_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] + res_df[\n","        'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.tp_gap\n","\n","    # --------------- out --------------- #\n","    if config.loc_set.point.outg_dc_period != \"None\":  # out 만 영향 줄려고 tp 까지 해놓고, rtc_0 변경 \n","        res_df['short_rtc_0_{}'.format(strat_version)] = res_df['high'].rolling(config.loc_set.point.outg_dc_period).max()\n","        res_df['long_rtc_0_{}'.format(strat_version)] = res_df['low'].rolling(config.loc_set.point.outg_dc_period).min()\n","\n","    res_df['short_out_{}'.format(strat_version)] = res_df['short_rtc_0_{}'.format(strat_version)] + res_df[\n","        'short_rtc_gap_{}'.format(strat_version)] * config.tr_set.out_gap\n","    res_df['long_out_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)] - res_df[\n","        'long_rtc_gap_{}'.format(strat_version)] * config.tr_set.out_gap\n","\n","    # -------- zoned_out -------- #\n","    if config.tr_set.t_out_gap != \"None\":\n","        # res_df['short_out_org_{}'.format(strat_version)] = res_df['short_out_{}'.format(strat_version)].copy()\n","        # res_df['long_out_org_{}'.format(strat_version)] = res_df['long_out_{}'.format(strat_version)].copy()\n","        res_df['short_out2_{}'.format(strat_version)] = res_df['short_rtc_0_{}'.format(strat_version)] + res_df[\n","            'short_rtc_gap_{}'.format(strat_version)] * config.tr_set.t_out_gap\n","        res_df['long_out2_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)] - res_df[\n","            'long_rtc_gap_{}'.format(strat_version)] * config.tr_set.t_out_gap\n","\n","        \n","    return res_df\n"]},{"cell_type":"markdown","metadata":{"id":"HKdUKKl-483N","jp-MarkdownHeadingCollapsed":true,"tags":[]},"source":["### utils_public"]},{"cell_type":"code","execution_count":144,"metadata":{"id":"nzOYWA2kqZ0d","executionInfo":{"status":"ok","timestamp":1646108100198,"user_tz":-540,"elapsed":835,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"outputs":[],"source":["# from funcs.funcs_indicator import *\n","# from funcs.funcs_trader import *\n","# import logging\n","# from ast import literal_eval\n","\n","sys_log = logging.getLogger()\n","\n","\n","class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def lvrg_set(res_df, config, open_side, ep_, out_, fee, limit_leverage=50):\n","    strat_version = config.strat_version\n","    if not pd.isnull(out_) and not config.lvrg_set.static_lvrg:\n","        if open_side == OrderSide.SELL:\n","            if strat_version in ['v3']:\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / (out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","                config.lvrg_set.leverage = config.lvrg_set.target_pct / (\n","                        out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","                #     zone 에 따른 c_ep_gap 를 고려 (loss 완화 방향) / 윗 줄은 수익 극대화 방향\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / (out_ / res_df['short_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","            elif strat_version in ['v5_2', 'v7_3']:\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","                config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(\n","                    ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep_org'].iloc[ep_j] / out_ - 1 - (fee + config.trader_set.market_fee))\n","        else:\n","            #   윗 phase 는 min_pr 의 오차가 커짐\n","            if strat_version in ['v3']:\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / (ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","                config.lvrg_set.leverage = config.lvrg_set.target_pct / (\n","                        ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep_org'].iloc[ep_j] / out_ - 1 - (fee + config.trader_set.market_fee))\n","            elif strat_version in ['v5_2', 'v7_3']:\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","                config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(\n","                    out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","                # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(out_ / res_df['long_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","    if not config.lvrg_set.allow_float:\n","        config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","    # ------------ leverage rejection ------------ #\n","    #       Todo - return None ? -> 1 (일단 임시로 수정함)\n","    if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","        return 1\n","    config.lvrg_set.leverage = min(limit_leverage, max(config.lvrg_set.leverage, 1))\n","\n","    return config.lvrg_set.leverage\n","\n","\n","def sync_check(df_, config, order_side=\"OPEN\", row_slice=True):\n","    try:\n","        make_itv_list = [m_itv.replace('m', 'T') for m_itv in literal_eval(config.trader_set.itv_list)]\n","        row_list = literal_eval(config.trader_set.row_list)\n","        rec_row_list = literal_eval(config.trader_set.rec_row_list)\n","        offset_list = literal_eval(config.trader_set.offset_list)\n","\n","        assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        htf_df_list = [to_htf(df_, itv_=itv_, offset=offset_) for itv_idx, (itv_, offset_)\n","                       in enumerate(zip(make_itv_list, offset_list)) if itv_idx != 0]  #\n","        htf_df_list.insert(0, df_)\n","\n","        # for htf_df_ in htf_df_list:\n","        #     print(htf_df_.tail())\n","\n","        #       Todo        #\n","        #        1. row_list calc.\n","        #           a. indi. 를 만들기 위한 최소 period 가 존재하고, 그 indi. 를 사용한 lb_period 가 존재함\n","        #           b. => default_period + lb_period\n","        #               i. from sync_check, public_indi, ep_point2, ep_dur 의 tf 별 max lb_period check\n","        #                   1. default_period + max lb_period check\n","        #                       a. 현재까지 lb_period_list\n","        #                           h_prev_idx (open / close) 60\n","        #                           dc_period 135\n","        #                           zone_dc_period 135\n","\n","        # --------- slicing (in trader phase only) --------- #\n","        #               --> latency 영향도가 높은 곳은 이곳\n","        if row_slice:   # recursive 가 아닌 indi. 의 latency 를 고려한 slicing\n","            df, df_5T, df_15T, df_30T, df_4H = [df_s.iloc[-row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","            rec_df, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_4H = [df_s.iloc[-rec_row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","        else:\n","            df, df_5T, df_15T, df_30T, df_4H = htf_df_list\n","            rec_df, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_4H = htf_df_list\n","\n","        # --------- add indi. --------- #\n","\n","        #        1. 필요한 indi. 는 enlist_epouttp & mr_check 보면서 삽입\n","        #        2. min use_rows 계산을 위해서, tf 별로 gathering 함        #\n","        start_0 = time.time()\n","\n","        df = dc_line(df, None, '1m', dc_period=20)\n","        df = bb_line(df, None, '1m')\n","        # print(df.tail())\n","\n","        df = dc_line(df, df_5T, '5m')\n","        df = bb_line(df, df_5T, '5m')\n","\n","        df = dc_line(df, df_15T, '15m')\n","        df = bb_line(df, df_15T, '15m')\n","\n","        df = bb_line(df, df_30T, '30m')\n","\n","        # print(time.time() - start_0)\n","\n","        # start_0 = time.time()\n","        df = bb_line(df, df_4H, '4h')\n","        # print(time.time() - start_0)\n","\n","        rec_df['rsi_1m'] = rsi(rec_df, 14)  # Todo - recursive, 250 period\n","        df = df.join(to_lower_tf_v2(df, rec_df.iloc[:, [-1]], [-1], backing_i=0), how='inner')  # <-- join same_tf manual\n","        # print(df.rsi_1m.tail())\n","\n","        if order_side in [\"OPEN\"]:\n","            rec_df_5T['ema_5m'] = ema(rec_df_5T['close'], 195)  # Todo - recursive, 1100 period (5T)\n","            df = df.join(to_lower_tf_v2(df, rec_df_5T, [-1]), how='inner')\n","\n","    except Exception as e:\n","        sys_log.error(\"error in sync_check :\", e)\n","    else:\n","        return df\n","\n","\n","def public_indi(res_df, config, np_timeidx, order_side=\"OPEN\"):\n","\n","    strat_version = config.strat_version\n","    res_df = dc_level(res_df, '5m', 1)\n","    res_df = bb_level(res_df, '5m', 1)\n","    # res_df = st_level(res_df, '5m', 1)\n","\n","    res_df = dc_level(res_df, '15m', 1)\n","    res_df = bb_level(res_df, '15m', 1)\n","    res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    # res_df = st_level(res_df, '15m', 1)\n","\n","    # res_df = dc_level(res_df, '30m', 1)\n","    # res_df = bb_level(res_df, '30m', 1)\n","    # res_df = st_level(res_df, '30m', 1)\n","\n","    # res_df = bb_level(res_df, '1h', 1)\n","\n","    res_df = bb_level(res_df, '4h', 1)\n","\n","    res_df['dc_upper_v2'.format(strat_version)] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()\n","    res_df['dc_lower_v2'.format(strat_version)] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","\n","    res_df['zone_dc_upper_v2'.format(strat_version)] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()\n","    res_df['zone_dc_lower_v2'.format(strat_version)] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    if order_side in [\"OPEN\"]:\n","        start_0 = time.time()\n","\n","        res_df[\"wick_score\"], res_df['body_score'] = candle_score(res_df, unsigned=False)\n","\n","        # print(\"~ wick_score() elapsed time : {}\".format(time.time() - start_0))\n","\n","        start_0 = time.time()\n","\n","        h_c_intv1 = '15T'\n","        h_c_intv2 = 'H'\n","        res_df = h_candle_v2(res_df, h_c_intv1)\n","        res_df = h_candle_v2(res_df, h_c_intv2)\n","\n","        # sys_log.warning(\"~ h_wick_score elapsed time : {}\".format(time.time() - start_0))\n","        # print(\"wick_score() ~ h_candle() elapsed time : {}\".format(time.time() - start_0))\n","\n","        h_candle_col = ['hopen_{}'.format(h_c_intv2), 'hhigh_{}'.format(h_c_intv2), 'hlow_{}'.format(h_c_intv2),\n","                        'hclose_{}'.format(h_c_intv2)]\n","\n","        res_df['h_wick_score'], res_df['h_body_score'] = candle_score(res_df, ohlc_col=h_candle_col, unsigned=False)\n","\n","    #     temp indi.    #\n","    # res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","    # res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","    # res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    return res_df\n","\n","\n","def ep_loc_point2(res_df, config, i, out_j, side=OrderSide.SELL):\n","  allow_ep_in = 0\n","  if config.strat_version in ['v5_2']:\n","    if side == OrderSide.SELL:            \n","      if (res_df['dc_upper_1m'].iloc[i - 1] <= res_df['dc_upper_15m'].iloc[i]) & \\\n","              (res_df['dc_upper_15m'].iloc[i - 1] != res_df['dc_upper_15m'].iloc[i]):\n","        allow_ep_in = 1\n","    else:\n","      if (res_df['dc_lower_1m'].iloc[i - 1] >= res_df['dc_lower_15m'].iloc[i]) & \\\n","              (res_df['dc_lower_15m'].iloc[i - 1] != res_df['dc_lower_15m'].iloc[i]):\n","        allow_ep_in = 1\n","\n","  if allow_ep_in:\n","    out_j = i\n","  return allow_ep_in, out_j\n","\n","\n","# vectorized calc.\n","def ep_loc_v2(res_df, config, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):\n","    strat_version = config.strat_version\n","\n","    # ------- param init ------- #\n","    open_side = None\n","    len_df = len(res_df)\n","    mr_res = np.ones(len_df)\n","    zone_arr = np.full(len_df, 'n')\n","\n","    # ------ process 한번에 처리해서 param_check 만 ver. 별로 하면 될 것 ------ #\n","    #     => public_indi() 가 될 것\n","    #     1. 사용한 param 정보와 matching 된 data 병렬로 나열 logging 될 것\n","    #     2. binarize 할 것 => short 와 long 은 같은 조건식 사용할 수 있게됨 - 보류 (생각보다 상반된 조건식이 많음)\n","    #       a. 조건식이 다른 경우는 ?\n","    tp_fee, out_fee = calc_tp_out_fee(config)\n","\n","    # -------------- candle_score -------------- #\n","    if config.loc_set.point.wick_score != \"None\":\n","      # -------------- candle_score_v0 (1m initial tick 기준임)  -------------- #\n","      if strat_version in ['v5_2', '1_1']:\n","        wick_score = res_df['wick_score'].to_numpy()\n","        if ep_loc_side == OrderSide.SELL:\n","          mr_res *= wick_score <= -config.loc_set.point.wick_score\n","        else:\n","          mr_res *= wick_score >= config.loc_set.point.wick_score\n","\n","    # -------------- spread scheduling -------------- #\n","    if config.loc_set.zone.short_spread != \"None\":\n","      bb_base_5m = res_df['bb_base_5m'].to_numpy()  # to_numpy() 는 ep_loc 에서 진행됨\n","      bb_lower_5m = res_df['bb_lower_5m'].to_numpy()\n","      bb_upper_5m = res_df['bb_upper_5m'].to_numpy()\n","      dc_lower_5m = res_df['dc_lower_5m'].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= (bb_base_5m - bb_lower_5m - tp_fee * bb_base_5m) / (bb_base_5m - bb_lower_5m + out_fee * bb_base_5m) >= config.loc_set.zone.short_spread\n","      else:\n","        # mr_res *= (bb_base_5m - dc_lower_5m - tp_fee * bb_upper_5m) / (bb_base_5m - dc_lower_5m + out_fee * bb_base_5m) >= config.loc_set.zone.long_spread\n","        mr_res *= (bb_upper_5m - dc_lower_5m - tp_fee * bb_upper_5m) / (bb_upper_5m - dc_lower_5m + out_fee * bb_upper_5m) >= config.loc_set.zone.long_spread\n","\n","    # -------------- dtk -------------- #\n","    if config.loc_set.zone.dt_k != \"None\":\n","        # ------ dc_v2 ------ #\n","      dc_lower_v2 = res_df['dc_lower_v2'.format(strat_version)].to_numpy()\n","      short_dtk_1_ = res_df['short_dtk_1_{}'.format(strat_version)].to_numpy() - \\\n","              res_df['short_dtk_gap_{}'.format(strat_version)].to_numpy() * config.loc_set.zone.dt_k\n","      dc_upper_v2 = res_df['dc_upper_v2'.format(strat_version)].to_numpy()\n","      long_dtk_1_ = res_df['long_dtk_1_{}'.format(strat_version)].to_numpy() + \\\n","              res_df['long_dtk_gap_{}'.format(strat_version)].to_numpy() * config.loc_set.zone.dt_k\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= dc_lower_v2 >= short_dtk_1_\n","      else:\n","        mr_res *= dc_upper_v2 <= long_dtk_1_\n","\n","    # -------------- zone rejection  -------------- #\n","    if config.loc_set.zone.zone_rejection:\n","        #       config 로 통제할 수 없는 rejection 은 strat_version 으로 조건문을 나눔 (lvrg_set 과 동일)\n","        # ------------ by bb ------------ #\n","        # ------ bb & close ------ #\n","        close = res_df['close'].to_numpy()\n","\n","        if strat_version in ['v5_2']:\n","          bb_upper2_ = res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","          bb_lower2_ = res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","          if ep_loc_side == OrderSide.SELL:\n","            mr_res *= bb_upper2_ < close\n","          else:\n","            mr_res *= bb_lower2_ > close\n","\n","        # ------ close, bb & ema ------ #\n","        if strat_version in ['v5_2']: # 'v3'\n","          ema_5m = res_df['ema_5m'].to_numpy()\n","          if ep_loc_side == OrderSide.SELL:\n","            mr_res *= close < ema_5m\n","          else:\n","            mr_res *= close > ema_5m\n","\n","    # -------------- zoned tr_set - post_work -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        #       by zone_dtk       #\n","        #         c_zone        #\n","        zone_dc_upper_v2_ = res_df['zone_dc_upper_v2'.format(strat_version)].to_numpy()\n","        long_dtk_plot_1 = res_df['long_dtk_plot_1'].to_numpy() + res_df['long_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        zone_dc_lower_v2_ = res_df['zone_dc_lower_v2'.format(strat_version)].to_numpy()\n","        short_dtk_plot_1 = res_df['short_dtk_plot_1'].to_numpy() - res_df['short_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        if ep_loc_side == OrderSide.SELL:\n","          zone_res = zone_dc_upper_v2_ > long_dtk_plot_1  # mr_res 와는 별개임\n","          pos = 'short'\n","        else:\n","          zone_res = zone_dc_lower_v2_ < short_dtk_plot_1\n","          pos = 'long'\n","\n","        # static 여부에 따른 vectorized adj. - dynamic 은 vectorize 불가\n","        if config.ep_set.static_ep:\n","          res_df['{}_ep_{}'.format(pos, strat_version)][zone_res] = res_df['{}_ep2_{}'.format(pos, strat_version)][zone_res]\n","        if config.out_set.static_out:\n","          res_df['{}_out_{}'.format(pos, strat_version)][~zone_res] = res_df['{}_out2_{}'.format(pos, strat_version)][~zone_res]  # t_zone 에 대한 out2 setting \n","        zone_arr = np.where(zone_res == 1, 'c', 't')\n","\n","    return mr_res, zone_arr  # mr_res 의 True idx 가 open signal"]},{"cell_type":"markdown","metadata":{"id":"JjKHyqftzhD7","tags":[]},"source":["### set config (override available)"]},{"cell_type":"code","execution_count":145,"metadata":{"id":"q_4E-zH02WJy","executionInfo":{"status":"ok","timestamp":1646108128974,"user_tz":-540,"elapsed":325,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"outputs":[],"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = \\\n","{\n","  \"strat_version\": \"v3\",\n","  \"trader_set\": {\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"open_index\": -1,\n","    \"complete_index\": -2,\n","    \"limit_fee\": 0.0002,\n","    \"market_fee\": 0.0004,\n","    \"initial_asset\": 3500,\n","    \"asset_changed\": 0,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"itv_list\": \"['1m', '5m', '15m', '30m', '4h']\",\n","    \"row_list\": \"[200, 160, 30, 25, 25]\",\n","    \"rec_row_list\": \"[250, 1100, 1, 1, 1]\",\n","    \"offset_list\": \"['1h', '1h', '1h', '1h', '1h']\",\n","    \"rsi_out_stratver\": [\n","      \"v7_3\",\n","      \"1_1\"\n","    ],\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"api_retry_term\": 3,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"pos_set\": {\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"short_ban\": 1,\n","    \"long_ban\": 0\n","  },\n","  \"loc_set\": {\n","    \"zone\": {\n","      \"short_spread\": \"None\",\n","      \"long_spread\": \"None\",\n","      \"tr_thresh\": \"None\",\n","      \"dtk_dc_itv\": \"None\",\n","      \"dtk_itv\": \"5m\",\n","      \"dt_k\": \"None\",\n","      \"dc_period\": 135,\n","      \"ei_k\": 0.095,\n","      \"use_dtk_line\": 0,\n","      \"zone_rejection\": 0,\n","      \"gap_mply\": 1,\n","      \"c_itv_ticks\": 60,\n","      \"ad_idx\": 19,\n","      \"bbz_itv\": \"None\",\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135,\n","      \"dr_error\": 0.1,\n","      \"bbwp_thresh\": 0.5,\n","      \"entry_incycle\": 5,\n","      \"max_eplim_pct\": 0.05,\n","      \"min_eplim_pct\": 0.013\n","    },\n","    \"point\": {\n","      \"exp_itv\": \"5m\",\n","      \"tpg_itv1\": \"5m\",\n","      \"tpg_itv0\": \"5m\",\n","      \"outg_itv1\": \"5m\",\n","      \"outg_itv0\": \"5m\",\n","      \"outg_dc_period\": \"None\",\n","      \"tf_entry\": 5,\n","      \"htf_entry\": 15,\n","      \"wick_score\": \"None\",\n","      \"body_score\": \"None\",\n","      \"wick_score2\": \"None\",\n","      \"body_score2\": \"None\",\n","      \"osc_band\": 20\n","    },\n","    \"point2\": {\n","      \"ce_gap\": 0.5\n","    }\n","  },\n","  \"tr_set\": {\n","    \"ep_gap\": 0.083,\n","    \"tp_gap\": 0.36,\n","    \"decay_gap\": \"None\",\n","    \"out_gap\": -0.5,\n","    \"c_ep_gap\": 0.232,\n","    \"t_out_gap\": -0.5\n","  },\n","  \"ep_set\": {\n","    \"short_entry_score\": -2,\n","    \"entry_type\": \"LIMIT\",\n","    \"static_ep\": 1,\n","    \"tpout_onexec\": 0\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"tp_type\": \"LIMIT\",\n","    \"static_tp\": 1,\n","    \"decay_term\": 60,\n","    \"time_tp\": 0,\n","    \"partial_num\": 1,\n","    \"partial_qty_divider\": 1.5\n","  },\n","  \"out_set\": {\n","    \"out_type\": \"MARKET\",\n","    \"use_out\": 1,\n","    \"static_out\": 1,\n","    \"hl_out\": 1,\n","    \"price_restoration\": 0,\n","    \"retouch\": 0,\n","    \"retouch_out_period\": 500,\n","    \"second_out\": 0,\n","    \"approval_st_gap\": 1.5,\n","    \"second_out_gap\": 0.5\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 0,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.12,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)\n","# param_json = json.dumps(param_dict, indent=2)"]},{"cell_type":"markdown","metadata":{"id":"dzla8i9_ysmP","jp-MarkdownHeadingCollapsed":true,"tags":[]},"source":["#### save config"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":544,"status":"ok","timestamp":1639994748940,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"FlNGKvW_w2za","outputId":"c575ce69-def0-4e6c-c949-a63707467b2e"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/JnQ/config/config_v5_2.1220_candlejson dumped !\n"]}],"source":["config_name = \"config_v5_2.1220_candlejson\"\n","# config_name = \"config_v3.json\"\n","cfg_full_path = os.path.join(current_path, \"config\", config_name)\n","\n","\n","with open(cfg_full_path, 'w') as cfg:\n","    json.dump(config1, cfg, indent=2)\n","    print(\"{} dumped !\".format(cfg_full_path))"]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC","tags":[]},"source":["## run"]},{"cell_type":"code","source":["id_idx_list = [0]  # ID_arr 에서 import 할 id_idx 선택\n","public_override = 1\n","utils_override = 1\n","config_override = 1\n","\n","# ------ config_list 와 같은 org_var 에 override 하는거 다시 생각하기 ------ #\n","ID_list = ID_arr[id_idx_list]\n","utils_list = utils_arr[id_idx_list]\n","config_list = config_arr[id_idx_list]\n","\n","if config_override:\n","  assert len(config_list) == 1\n","  config_list[0] = config\n","else:\n","  config = config_list[0]  # multiple id_idx 사용시, custom base config\n","\n","tp_fee, out_fee = calc_tp_out_fee(config)   # -> rev_pr 때문에 일단 이곳에도 선언함\n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","\n","# ------- plot param ------- #\n","show_detail = 0\n","\n","# ------- temp param ------- #\n","allow_osc_touch = 0\n","rsi_gap = 5\n","\n","early_out_tpg = 0.36\n","\n","# ------- survey param ------- #\n","itv_num_list = [1, 3, 5, 15]\n","\n","itv_list = ['15m', '30m', '1h', '4h']\n","# itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","\n","# x_val_list = np.arange(, 2.0, 0.1)     # prcn 1\n","x_val_list = np.arange(-0.69, -0.8, -0.01)  # prcn 2\n","# x_val_list = np.arange(-0.695, -0.75, -0.005)    # prcn 3\n","# x_val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","# x_val_list = np.arange(1, 10, 1)   # prcn -1\n","x_val_list = np.arange(200, 180, -5)   # prcn -2\n","\n","y_val_cols = [\"wr\", \"sr\", \"frq\", \"dpf\", \"acc_pr\", \"sum_pr\", \"acc_mdd\", \"sum_mdd\", \"liqd\", \"min_pr\", \"tr\", \"dr\"]\n","y_rev_val_cols = [\"wr\", \"sr\", \"acc_pr\", \"sum_pr\", \"acc_mdd\", \"sum_mdd\", \"min_pr\"]\n","\n","# ['strat_version', 'pos_set', 'loc_set', 'tr_set', 'ep_set', 'tp_set', 'out_set', 'lvrg_set']\n","_ = [print(json.dumps(config[key_], indent=1), end=' ') for key_ in ['strat_version', 'loc_set', 'tr_set', 'ep_set', 'tp_set', 'out_set', 'lvrg_set']]"],"metadata":{"id":"qBJfPsmJzVIr","executionInfo":{"status":"ok","timestamp":1646107310416,"user_tz":-540,"elapsed":317,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8ac4c3e0-df17-4df6-9703-a15dd478a1ba"},"execution_count":140,"outputs":[{"output_type":"stream","name":"stdout","text":["\"v3\" {\n"," \"zone\": {\n","  \"short_spread\": 0.915,\n","  \"long_spread\": 0.953,\n","  \"tr_thresh\": \"None\",\n","  \"dtk_dc_itv\": \"None\",\n","  \"dtk_itv\": \"5m\",\n","  \"dt_k\": 0.225,\n","  \"dc_period\": 135,\n","  \"ei_k\": 0.095,\n","  \"use_dtk_line\": 0,\n","  \"zone_rejection\": 1,\n","  \"gap_mply\": 1,\n","  \"c_itv_ticks\": 60,\n","  \"ad_idx\": 19,\n","  \"bbz_itv\": \"None\",\n","  \"zone_dt_k\": 0.4,\n","  \"zone_dc_period\": 135,\n","  \"dr_error\": 0.1,\n","  \"bbwp_thresh\": 0.5,\n","  \"entry_incycle\": 5,\n","  \"max_eplim_pct\": 0.05,\n","  \"min_eplim_pct\": 0.013\n"," },\n"," \"point\": {\n","  \"exp_itv\": \"5m\",\n","  \"tpg_itv1\": \"5m\",\n","  \"tpg_itv0\": \"5m\",\n","  \"outg_itv1\": \"5m\",\n","  \"outg_itv0\": \"5m\",\n","  \"outg_dc_period\": \"None\",\n","  \"tf_entry\": 5,\n","  \"htf_entry\": 15,\n","  \"wick_score\": \"None\",\n","  \"body_score\": \"None\",\n","  \"wick_score2\": \"None\",\n","  \"body_score2\": \"None\",\n","  \"osc_band\": 20\n"," },\n"," \"point2\": {\n","  \"ce_gap\": 0.5\n"," }\n","} {\n"," \"ep_gap\": 0.083,\n"," \"tp_gap\": 0.36,\n"," \"decay_gap\": \"None\",\n"," \"out_gap\": -0.5,\n"," \"c_ep_gap\": 0.232,\n"," \"t_out_gap\": -0.5\n","} {\n"," \"short_entry_score\": -2,\n"," \"entry_type\": \"LIMIT\",\n"," \"static_ep\": 1,\n"," \"tpout_onexec\": 0\n","} {\n"," \"non_tp\": 0,\n"," \"tp_type\": \"LIMIT\",\n"," \"static_tp\": 1,\n"," \"decay_term\": 60,\n"," \"time_tp\": 0,\n"," \"partial_num\": 1,\n"," \"partial_qty_divider\": 1.5\n","} {\n"," \"out_type\": \"MARKET\",\n"," \"use_out\": 1,\n"," \"static_out\": 1,\n"," \"hl_out\": 1,\n"," \"price_restoration\": 0,\n"," \"retouch\": 0,\n"," \"retouch_out_period\": 500,\n"," \"second_out\": 0,\n"," \"approval_st_gap\": 1.5,\n"," \"second_out_gap\": 0.5\n","} {\n"," \"leverage\": 2,\n"," \"static_lvrg\": 0,\n"," \"allow_float\": 0,\n"," \"target_pct\": 0.12,\n"," \"lvrg_rejection\": 0\n","} "]}]},{"cell_type":"code","source":["# ------ slicing res_df ------ #\n","res_df = res_df_.loc[pd.to_datetime(\"2020-09-05 00:00:59.999\"):] # pd.to_datetime(\"2022-01-10 00:00:59.999\"), pd.to_datetime(\"2021-10-04 02:39:59.999000\")\n","\n","np_timeidx = np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","\n","start_0 = time.time()\n","if public_override:\n","    res_df = public_indi(res_df, config, np_timeidx)  # 현재 대부분의 시간은 h_candle 에서 소비되고 있음\n","else:\n","    res_df = utils_public.public_indi(res_df, config, np_timeidx)\n","print(\"public_indi elapsed time :\", time.time() - start_0)\n","\n","# ------------ entlist rtc & tr 은 중복되는 여부에 따라 user 가 flexible coding 해야할 것 ------------ #\n","if utils_override:\n","  start_0 = time.time()\n","  res_df = enlist_rtc(res_df, config, np_timeidx)\n","  print(\"enlist_rtc elapsed time :\", time.time() - start_0)\n","  start_0 = time.time()\n","  res_df = enlist_tr(res_df, config, np_timeidx)    \n","  print(\"enlist_tr elapsed time :\", time.time() - start_0)\n","else:\n","    start_0 = time.time()\n","    for utils_, config_ in zip(utils_list, config_list):\n","        res_df = utils_.enlist_rtc(res_df, config_, np_timeidx)\n","        res_df = utils_.enlist_tr(res_df, config_, np_timeidx)\n","    print(\"elapsed time :\", time.time() - start_0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WstWVNihCNH8","executionInfo":{"status":"ok","timestamp":1646110570286,"user_tz":-540,"elapsed":3216,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"a43dd038-c86b-4bf0-e51d-105c0ee65a3b"},"execution_count":158,"outputs":[{"output_type":"stream","name":"stdout","text":["public_indi elapsed time : 1.700958490371704\n","enlist_rtc elapsed time : 0.05468869209289551\n","enlist_tr elapsed time : 0.07871484756469727\n"]}]},{"cell_type":"markdown","source":["### ep_loc mr_res"],"metadata":{"id":"RqRF1eyZ0xBL"}},{"cell_type":"code","source":["start_0 = time.time()\n","# ------ get mr_res, zone_arr ------ #\n","short_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL) for config_ in config_list])\n","long_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.BUY) for config_ in config_list])\n","short_open_idx_list = [np.where(res_df['short_open_{}'.format(id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, short_mr_res_obj[:, 0].astype(np.float64))]  # zip 으로 zone (str) 과 묶어서 dtype 변경됨\n","long_open_idx_list = [np.where(res_df['long_open_{}'.format(id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, long_mr_res_obj[:, 0].astype(np.float64))]\n","\n","# ------ open_info_arr ------ #\n","short_side_list = [np.full(len(list_), OrderSide.SELL) for list_ in short_open_idx_list]\n","long_side_list = [np.full(len(list_), OrderSide.BUY) for list_ in long_open_idx_list]\n","\n","short_zone_list = [zone_res[short_open_idx] for zone_res, short_open_idx in zip(short_mr_res_obj[:, 1], short_open_idx_list)]\n","long_zone_list = [zone_res[long_open_idx] for zone_res, long_open_idx in zip(long_mr_res_obj[:, 1], long_open_idx_list)]\n","\n","short_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, short_open_idx_list)]\n","long_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, long_open_idx_list)]\n","\n","selected_id_idx = np.arange(len(id_idx_list))\n","short_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, short_open_idx_list)]\n","long_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, long_open_idx_list)]\n","\n","# ------ get open_info_df ------ #\n","#   series 만들어서 short / long 끼리 합치고 둘이 합치고, 중복은 우선 순위 정해서 제거\n","short_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(short_open_idx_list, zip(short_side_list, short_zone_list, short_id_list, short_id_idx_list))]\n","long_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(long_open_idx_list, zip(long_side_list, long_zone_list, long_id_list, long_id_idx_list))]\n","\n","open_info_df = pd.concat(short_open_df_list + long_open_df_list)\n","# ------ sorting + unique ------ #\n","open_info_df.sort_index(inplace=True)\n","print(len(open_info_df))\n","open_info_df[~open_info_df.index.duplicated(keep='first')]  # 먼저 순서를 우선으로 지정\n","print(len(open_info_df))\n","# open_info_df.head()\n","\n","print(\"elapsed time :\", time.time() - start_0)"],"metadata":{"id":"MY1csdNRLGsk","executionInfo":{"status":"ok","timestamp":1646110571447,"user_tz":-540,"elapsed":1167,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"964f0e01-90af-4e40-abeb-d7aed03c6f21"},"execution_count":159,"outputs":[{"output_type":"stream","name":"stdout","text":["271\n","271\n","elapsed time : 1.040459156036377\n"]}]},{"cell_type":"markdown","source":["#### main - get paired_res"],"metadata":{"id":"IWO7KkqltMFt"}},{"cell_type":"code","source":["# open_info_df.head()\n","test_ratio = 0.2\n","int(len(res_df) * (1 - test_ratio))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QuYAIsIX1nTq","executionInfo":{"status":"ok","timestamp":1646110703862,"user_tz":-540,"elapsed":311,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"0f43187f-461e-464d-b27d-960c0f2f8080"},"execution_count":163,"outputs":[{"output_type":"execute_result","data":{"text/plain":["611064"]},"metadata":{},"execution_count":163}]},{"cell_type":"code","source":["open_idx"],"metadata":{"id":"bjBQi63S2CR0","executionInfo":{"status":"ok","timestamp":1646110714630,"user_tz":-540,"elapsed":338,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"bda28861-bd7d-49d0-b5d2-9f615105ef1f","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":164,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([  1424,   5769,   8554,  30489,  39034,  51124,  90844,  90854,  92299,  92529,  92534, 108114, 110689, 111479, 113899, 113909, 114584, 115129, 115674, 115684, 117609, 118679, 122514, 127324, 137934, 149749, 158609, 160269, 164199, 164204, 164764, 166789, 166794, 172059, 175074, 175094, 175939, 175944, 177574, 178704, 178914, 178919, 179684, 180149, 180814, 180929, 182504, 183054, 183059, 183084, 185964, 187744, 188944, 189704, 189709, 190709, 191959, 192114, 192129, 193559, 193589, 193614, 195444, 198839, 198849, 200864, 201889, 207899, 209454, 209539, 219094, 220524, 224634, 224804, 224844, 225489, 227159, 229109, 233169, 233194, 236834, 236839, 239739, 244459, 244579, 245499, 246604, 247539, 247619, 248109, 248419, 252059, 252354, 252669, 253349, 254959, 255224, 259809, 260014, 262309, 262319, 262324, 263749, 263754, 265564, 269754, 277479, 289009, 291514, 299804, 301244, 301274, 309944, 309959, 322524, 322609, 324154, 325749, 327094, 327124, 327694, 327974, 328004, 330724, 332934, 334174, 334339, 335419, 336014, 338989, 338994, 343429, 347209, 347519, 348189, 350979, 354224, 356499, 360379, 360419, 360469, 362499, 362594, 364694, 366229, 366414, 366734, 367494, 367784, 367799, 367804, 368079, 370074, 370144, 370354, 370784, 370919, 371904, 371914, 371944, 373759, 375754, 377114, 377654, 378924, 379719, 380569, 380654, 381209, 381564, 382564, 383689, 383699, 384689, 386084, 387849, 387854, 393009, 393034, 393764, 393769, 397199, 398459, 398499, 398889, 400339, 402529, 404469, 407494, 413674, 417164, 419694, 422099, 423599, 423614, 424419, 433974, 438614, 438639, 438644, 438909, 443459, 445149, 450449, 450694, 453569, 472884, 482324, 483734, 483739, 483944, 483984, 487979, 494299, 494309, 502569, 507414, 529674, 529709, 531054, 548594, 550269, 550599, 550754, 555564, 564284, 578524, 583024, 588929, 593004, 593009, 595999, 596014, 596019, 599159, 608514, 608529, 608694, 628454, 630514, 630549, 631969, 631989, 633809, 636734, 648324, 655629, 656189, 659984,\n","       665944, 684239, 705784, 709994, 712809, 714319, 718554, 721884, 727604, 727609, 727824, 728044, 729024, 729039, 733409, 734939, 735174, 744919, 760254, 760264, 761009, 763519])"]},"metadata":{},"execution_count":164}]},{"cell_type":"code","source":["# ------------ public announcement ------------ #\n","open_idx = open_info_df.index.to_numpy()\n","open_info_list = [open_info_df[col_].to_numpy() for col_ in open_info_df.columns]\n","side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","\n","data_cols = ['open', 'high', 'low', 'close', 'bb_lower_5m', 'bb_upper_5m', 'rsi_1m']   # Todo - public_indi 이전에 해야할지도 모름\n","data_list = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","h, l = data_list[1:3]\n","len_df = len(res_df)\n","\n","# ------------ get paired_res ------------ #\n","start_0 = time.time()\n","paired_res = en_ex_pairing(res_df, open_idx, open_info_list, data_list, config_list, np_timeidx, [ep_loc_point2, lvrg_set])\n","# valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","print(\"en_ex_pairing elapsed time :\", time.time() - start_0)  #  0.37 --> 0.3660471439361572 --> 0.21(lesser if)\n","\n","# ------------ idep_plot ------------ #\n","start_0 = time.time()\n","short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr = \\\n","  idep_plot_v4(len_df, h, l, open_idx, side_arr, paired_res, inversion=False, sample_ratio=0.7)\n","print(\"idep_plot_v4 elapsed time :\", time.time() - start_0)   # 2.23 s"],"metadata":{"id":"eiQ36_SLLE3w","colab":{"base_uri":"https://localhost:8080/","height":571},"executionInfo":{"status":"ok","timestamp":1646110575145,"user_tz":-540,"elapsed":2425,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"fbf9c08d-f107-4a52-fe2a-7a2e6bc31517"},"execution_count":160,"outputs":[{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.0718069076538086\n","short_obj.shape : (6, 5)\n","long_obj.shape : (79, 5)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1728x576 with 6 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["idep_plot_v4 elapsed time : 1.5235185623168945\n"]}]},{"cell_type":"markdown","metadata":{"jp-MarkdownHeadingCollapsed":true,"tags":[],"id":"Ksth13T0spcQ"},"source":["### check statistical significance"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pZlZCr2lspcR"},"outputs":[],"source":["plt.style.use('dark_background')\n","\n","title_name_list = [[\"total\", \"short\", \"long\"], [\"rev_total\", \"rev_short\", \"rev_long\"]]\n","survey_dfs_list = [[survey_df, short_survey_df, long_survey_df], [rev_survey_df, rev_short_survey_df, rev_long_survey_df]]\n","# title_name = \n","# survey_df_list = \n","\n","space_ = \" \" * 140\n","\n","for d_idx, (title_name, survey_dfs) in enumerate(zip(title_name_list, survey_dfs_list)):\n","\n","  fig = plt.figure(figsize=(30, 10))\n","\n","  gs = gridspec.GridSpec(nrows=1, # row 몇 개 \n","                          ncols=3, # col 몇 개 \n","                          # height_ratios=[1, 1, 1]\n","                        )\n","\n","  # gs = fig.add_gridspec(1, 3, wspace=0, hspace=0)\n","\n","  # nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","  nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","  # nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","\n","  # if d_idx == 0:\n","  # else:\n","    # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","  for gs_idx, (title, s_df) in enumerate(zip(title_name, survey_dfs)):  \n","\n","\n","    inner_gs = gs[gs_idx].subgridspec(nrows=nrows, # row 몇 개 \n","                          ncols=ncols, # col 몇 개 \n","                          height_ratios=h_r\n","                        )\n","\n","    for col_idx, s_cols in enumerate(s_df.columns):\n","      plt.subplot(inner_gs[col_idx])\n","      plt.plot(s_df[s_cols])\n","      plt.title(s_cols)\n","\n","  # plt.suptitle(\"total\" + \" \" * 140 + \"short\" + \" \" * 140 + \"long\")\n","  plt.suptitle(space_.join(title_name))\n","  plt.show()\n","  print(\"\\n\")"]},{"cell_type":"markdown","source":["### legacy"],"metadata":{"id":"1GVZ03zDyU2N"}},{"cell_type":"markdown","source":["#### get paired_res function"],"metadata":{"id":"EFyWTuscH8VH"}},{"cell_type":"code","source":["def en_ex_pairing(res_df, open_idx, open_info_list, data_list, config_list, np_timeidx, funcs):  # 이미 충분히 줄여놓은 idx 임\n","    side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","    id_idx_arr = id_idx_arr.astype(int)\n","\n","    o, h, l, c, bb_lower_5m, bb_upper_5m, rsi_exit = data_list\n","    ep_loc_point2, lvrg_set = funcs\n","\n","    valid_openi_list, pair_idx_list, pair_price_list, lvrg_list, fee_list, tpout_list = [[] for li in range(6)]\n","    len_df = len(res_df)\n","    len_open_idx = len(open_idx)\n","    i, open_i = 0, 0  # i for total_res_df indexing\n","\n","    while 1:\n","        # ------------ entry phase ------------ #\n","        # ------ ep_loc ------ #\n","        op_idx = open_idx[open_i]  # open_i 는 i 와 별개로 운영\n","        if op_idx < i:  # i = 이전 거래 끝난후의 res_df index, '<' : 거래 종료시점 진입 가능하다는 의미\n","            open_i += 1\n","            if open_i >= len_open_idx:\n","                break\n","            continue\n","\n","        #     1. 해당 id 로 config 재할당해야함 - 적정 config 를 뽑아내기 위한 id_idx_arr 도 필요할 것으로 보임\n","        id_idx = id_idx_arr[open_i]\n","        config = config_list[id_idx]\n","        strat_version = config.strat_version\n","        open_side = side_arr[open_i]\n","\n","        side_pos = 'short' if open_side == OrderSide.SELL else 'long'\n","        ep_arr = res_df['{}_ep_{}'.format(side_pos, strat_version)].to_numpy()  # Todo - while loop 내에서 to_numpy() 반복하느니, pd_indexing 이 낫지 않을까\n","        tp_arr = res_df['{}_tp_{}'.format(side_pos, strat_version)].to_numpy()  # => eptpout arr_list 만들어서 꺼내 사용하면 될 것\n","        out_arr = res_df['{}_out_{}'.format(side_pos, strat_version)].to_numpy()\n","\n","        # ------ ei_k & point2 ------ #\n","        i = op_idx + 1  # open_signal 이 close_bar.shift(1) 이라고 가정하고 다음 bar 부터 체결확인한다는 의미\n","        if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        exec_j, ep_j, tp_j, out_j, entry_done, ep, fee = check_eik_point2_exec(res_df, config, op_idx, len_df, open_side, [o, h, l, c, ep_arr], ep_loc_point2)\n","        i = exec_j\n","\n","        if not entry_done:  # 이 phase 는 exit_phase 뒤에도 있어야할 것 - entry_done var. 사용은 안하겠지만\n","            open_i += 1  # 확인 끝났으면 조기 이탈(+1), 다음 open_idx 조사 진행\n","            if open_i >= len_open_idx:\n","                break\n","            continue\n","\n","        # ------ leverage ------ #\n","        out = out_arr[out_j]\n","        leverage = lvrg_set(res_df, config, open_side, ep, out, fee)  # res_df 변수 사용됨 - 주석 처리 된 상태일뿐\n","\n","        exit_done, cross_on = 0, 0\n","        # ------ cehck tpout_onexec ------ #\n","        if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","            if config.tp_set.static_tp:\n","                tp_j = ep_j  # tpout_onexec = using dynamic_ep --> using ep_j 에 대한 이유\n","            if config.out_set.static_out:\n","                out_j = ep_j\n","        while 1:\n","            # ------------ exit phase ------------ #\n","            i += 1  # entry 다음 tick 부터 exit 허용\n","            if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","                break\n","\n","            if not config.tp_set.static_tp:\n","                tp_j = i\n","            if not config.out_set.static_out:\n","                out_j = i\n","\n","            # ------------ tp ------------ #\n","            if not config.tp_set.non_tp:\n","                # ------ limit_tp ------ #\n","                if config.tp_set.tp_type in ['LIMIT', 'BOTH']:\n","                    exit_done, tp, fee = check_limit_tp_exec(res_df, config, open_i, i, tp_j, len_df, fee, open_side, exit_done, [o, h, l, c, [tp_arr]])  # 여기서는 j -> i 로 변경해야함\n","                # ------ market_tp ------ #\n","                if not exit_done and config.tp_set.tp_type in ['MARKET', 'BOTH']:\n","                    exit_done, cross_on, tp, fee = check_market_tp_exec(config, open_i, i, len_df, fee, open_side, cross_on, exit_done,\n","                                                                        [np_timeidx, c, bb_lower_5m, bb_upper_5m, rsi_exit])\n","            # ------ out ------ #\n","            if not exit_done and config.out_set.use_out and i != len_df - 1:\n","                exit_done, tp, fee = check_out(config, open_i, i, out_j, len_df, fee, open_side, exit_done, [o, h, l, c, out_arr])\n","\n","            if exit_done:  # 이 phase 는 exit_phase 뒤에도 있어야할 것 - entry_done var. 사용은 안하겠지만\n","                # ------ append dynamic vars. ------ #\n","                valid_openi_list.append(open_i)  # side, zone, start_ver arr 모두 openi_list 로 접근하기 위해 open_i 를 담음\n","                pair_idx_list.append([exec_j, i])  # entry & exit (체결 기준임)\n","                pair_price_list.append([ep, tp])\n","                lvrg_list.append(leverage)\n","                fee_list.append(fee)\n","                tpout_list.append([tp_arr[tp_j], out_arr[out_j]])  # for tpout_line plot_check\n","\n","                open_i += 1  # 다음 open_idx 조사 진행\n","                break\n","\n","        if i >= len_df or open_i >= len_open_idx:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        else:\n","            continue\n","\n","    return np.array(valid_openi_list), np.array(pair_idx_list), np.array(pair_price_list), np.array(lvrg_list), np.array(fee_list), np.array(tpout_list)\n","\n","\n","def check_eik_point2_exec(res_df, config, op_idx, len_df, open_side, np_datas, ep_loc_point2):\n","    o, h, l, c, ep_arr = np_datas\n","    ep_j = op_idx\n","    tp_j = op_idx\n","    out_j = op_idx\n","\n","    strat_version = config.strat_version\n","    allow_ep_in = 0 if strat_version in ['v5_2'] else 1\n","    # allow_ep_in = 0\n","    entry_done = 0\n","    entry_open = 0\n","    ep = None\n","\n","    if config.ep_set.entry_type == \"LIMIT\":\n","        fee = config.trader_set.limit_fee\n","\n","        for e_j in range(op_idx + 1, len_df):\n","            # ------ index setting for dynamic options ------ #\n","            if not config.ep_set.static_ep:\n","                ep_j = e_j  # dynamic_ep 를 위한 ep_index var.\n","                out_j = e_j  # dynamic_out 를 위한 out_index var. - 조건식이 static_ep 와 같이 있는 이유 모름 => dynamic_lvrg 로 사료됨\n","\n","            if not config.tp_set.static_tp:\n","                tp_j = e_j\n","\n","            # if short_ep.iloc[initial_i] == np.inf:  #  np.inf caution\n","            #   break\n","            # ------ ei_k ------ # - limit 사용하면 default 로 ei_k 가 존재해야함\n","            #   Todo\n","            #    1. rtc_1 & gap => numpy 화 안해도 되나\n","            if open_side == OrderSide.SELL:\n","                if l[e_j] <= res_df['h_short_rtc_1_{}'.format(strat_version)].iloc[tp_j] - \\\n","                        res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[tp_j] * config.loc_set.zone.ei_k:\n","                    break\n","            else:\n","                if h[e_j] >= res_df['h_long_rtc_1_{}'.format(strat_version)].iloc[tp_j] + \\\n","                        res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[tp_j] * config.loc_set.zone.ei_k:\n","                    break\n","\n","            # ------ point2 ------ #\n","            if not allow_ep_in:\n","                allow_ep_in, out_j = ep_loc_point2(res_df, config, e_j, out_j, side=open_side)\n","\n","            # ------ check ep_exec ------ #\n","            if allow_ep_in:\n","                if open_side == OrderSide.SELL:\n","                    if h[e_j] >= ep_arr[ep_j]:\n","                        entry_done = 1\n","                        if o[e_j] >= ep_arr[ep_j]:\n","                            ep = o[e_j]\n","                        else:\n","                            ep = ep_arr[ep_j]\n","                        break\n","                else:\n","                    if l[e_j] <= ep_arr[ep_j]:\n","                        entry_done = 1\n","                        if o[e_j] <= ep_arr[ep_j]:\n","                            ep = o[e_j]\n","                        else:\n","                            ep = ep_arr[ep_j]\n","                        break\n","\n","    else:  # market entry\n","        e_j = op_idx + 1\n","        entry_done = True\n","        ep = c[op_idx]\n","        fee = config.trader_set.market_fee\n","\n","    return e_j, ep_j, tp_j, out_j, entry_done, ep, fee  # 다음 start_i <-- e_j 로 변경\n","    #   e_j => 다음 phase 의 시작 index <-> ep_j : ep 의 기준 index\n","    #   ep_j, tp_j, out_j 가 return 되어야함 - exit phase 에서 이어가기 위함\n","\n","\n","def check_limit_tp_exec(res_df, config, open_i, j, tp_j, len_df, fee, open_side, exit_done, np_datas):\n","    o, h, l, c, tps = np_datas\n","    tp = None\n","    strat_version = config.strat_version\n","    len_tps = len(tps)\n","\n","    for tp_i, tp_arr in enumerate(tps):\n","        #     decay adjustment    #\n","        #     tp_j includes dynamic_j - functionalize  #\n","        try:\n","            if config.tr_set.decay_gap != \"None\":\n","                decay_share = (j - open_i) // config.tp_set.decay_term\n","                decay_remain = (j - open_i) % config.tp_set.decay_term\n","                if j != open_i and decay_remain == 0:\n","                    if open_side == OrderSide.SELL:\n","                        tp_arr[tp_j] += res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","                    else:\n","                        tp_arr[tp_j] -= res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","        except:\n","            pass\n","\n","        if open_side == OrderSide.SELL:\n","            if l[j] <= tp_arr[tp_j]:  # and partial_tp_cnt == tp_i:  # we use static tp now\n","                # if l[j] <= tp_arr[j] <= h[j]: --> 이건 잘못되었음\n","                # partial_tp_cnt += 1 --> partial_tp 보류\n","\n","                # ------ dynamic tp ------ #\n","                if tp_arr[j] != tp_arr[j - 1] and not config.tp_set.static_tp:\n","                    # tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if o[j] < tp_arr[j]:\n","                        tp = o[j]\n","                    # tp limit 이 가능한 경우 - open 이 아직, tp 를 넘지 않은 경우\n","                    else:\n","                        tp = tp_arr[j]\n","                # ------ static tp ------ #\n","                else:\n","                    #   tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if o[j] < tp_arr[tp_j]:  # static 해놓고 decay 사용하면 dynamic 이니까\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = o[j]  # tp_j -> open_i 를 가리키기 때문에 decay 는 한번만 진행되는게 맞음\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","        else:\n","            if h[j] >= tp_arr[tp_j]:\n","                # ------ dynamic tp ------ #\n","                if tp_arr[j] != tp_arr[j - 1] and not config.tp_set.static_tp:\n","                    if o[j] > tp_arr[j]:\n","                        tp = o[j]\n","                    else:\n","                        tp = tp_arr[j]\n","\n","                # ------ static tp ------ #\n","                else:\n","                    if o[j] > tp_arr[tp_j]:\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = o[j]\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","    if exit_done:\n","        fee += config.trader_set.limit_fee\n","\n","    return exit_done, tp, fee\n","\n","\n","def check_market_tp_exec(config, open_i, j, len_df, fee, open_side, cross_on, exit_done, np_datas):\n","    np_timeidx, c, bb_lower_5m, bb_upper_5m, rsi_exit = np_datas\n","    tp = None\n","    strat_version = config.strat_version\n","\n","    # ------ timestamp ------ #\n","    if config.tp_set.time_tp:\n","        if np_timeidx[j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1 and j - open_i >= config.loc_set.point.tf_entry:\n","            exit_done = 1\n","\n","    # ------ rsi ------ # -> vectorize 가능함 => 추후 적용\n","    if strat_version in config.trader_set.rsi_out_stratver:\n","        if open_side == OrderSide.SELL:\n","            if (rsi_exit[j - 1] >= 50 - config.loc_set.point.osc_band) & (rsi_exit[j] < 50 - config.loc_set.point.osc_band):\n","                exit_done = 1\n","        else:\n","            if (rsi_exit[j - 1] <= 50 + config.loc_set.point.osc_band) & (rsi_exit[j] > 50 + config.loc_set.point.osc_band):\n","                exit_done = 1\n","\n","    # ------------ early out ------------ #\n","    # ------ bb_upper early out ------ # --> cross_on 기능은 ide latency 개선 여부에 해당되지 않음\n","    if strat_version in ['v5_2']:\n","        if open_side == OrderSide.SELL:\n","            if c[j] < bb_lower_5m[j] < c[j - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and c[j] > bb_upper_5m[j] > c[j - 1]:\n","                exit_done = 1\n","        else:\n","            if c[j] > bb_upper_5m[j] > c[j - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and c[j] < bb_lower_5m[j] < c[j - 1]:\n","                exit_done = 1\n","\n","    if exit_done:\n","        tp = c[j]\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, cross_on, tp, fee\n","\n","\n","def check_out(config, open_i, j, out_j, len_df, fee, open_side, exit_done, np_datas):\n","    o, h, l, c, out_arr = np_datas\n","    tp = None\n","\n","    if config.out_set.hl_out:\n","        if open_side == OrderSide.SELL:\n","            if h[j] >= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","        else:\n","            if l[j] <= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","    else:  # close_out\n","        if open_side == OrderSide.SELL:\n","            if c[j] >= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","        else:\n","            if c[j] <= out_arr[out_j]:  # check out only once\n","                tp = c[j]\n","                exit_done = 1\n","\n","    if exit_done:\n","        if config.out_set.hl_out:\n","            tp = out_arr[out_j]\n","        else:\n","            tp = c[j]\n","\n","        if open_side == OrderSide.SELL:\n","            if o[j] >= out_arr[out_j]:\n","                tp = o[j]\n","        else:\n","            if o[j] <= out_arr[out_j]:\n","                tp = o[j]\n","\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, tp, fee\n"],"metadata":{"id":"qfbtFVMR01UJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### idep_plot function"],"metadata":{"id":"zhZuT7pbCj4h"}},{"cell_type":"code","source":["def idep_plot_v4(len_df, h, l, open_idx, side_arr, paired_res, inversion=False, sample_ratio=0.7, title_position=(0.5, 0.5), fontsize=15):\n","    plt.style.use(['dark_background', 'fast'])\n","    fig = plt.figure(figsize=(24, 8))\n","    gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                           ncols=3,  # col 몇 개\n","                           height_ratios=[10, 1]\n","                           # height_ratios=[10, 10, 1]\n","                           )\n","    gs_idx = 0\n","    # plt.suptitle(key)\n","\n","    v_line = int(len_df * sample_ratio)\n","\n","    # ------ short & long data preparation ------ #\n","    # start_0 = time.time()\n","    valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","    short_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.SELL)[0]  # valid_openi_arr 에 대한 idx, # side_arr,\n","    long_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.BUY)[0]\n","\n","    valid_open_idx = open_idx[valid_openi_arr].reshape(-1, 1)\n","\n","    short_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[short_valid_openi_idx]\n","    long_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[long_valid_openi_idx]\n","    both_obj = np.vstack((short_obj, long_obj))\n","    print(\"short_obj.shape :\", short_obj.shape)\n","    print(\"long_obj.shape :\", long_obj.shape)\n","\n","    short_obj, long_obj, both_obj = [np.split(obj_, 5, axis=1) for obj_ in [short_obj, long_obj, both_obj]]\n","\n","    short_lvrg_arr, long_lvrg_arr = [lvrg_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_fee_arr, long_fee_arr = [fee_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_tpout_arr, long_tpout_arr = [tpout_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    # ------ plot_data ------ #\n","    # start_0 = time.time()\n","    s_liqd = liquidation(OrderSide.SELL, h, short_obj[:4], short_lvrg_arr, short_fee_arr)\n","    short_pr = get_pr(OrderSide.SELL, *short_obj[:2], short_lvrg_arr, short_fee_arr, inversion)\n","    short_total_pr = to_total_pr(len_df, short_pr, short_obj[-2])\n","    short_cum_pr = np.cumprod(short_total_pr)\n","    gs_idx = plot_info_v2(gs, gs_idx, len_df, short_pr, short_total_pr, short_cum_pr, s_liqd, short_lvrg_arr[-1], v_line, title_position, fontsize)\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    # start_0 = time.time()\n","    l_liqd = liquidation(OrderSide.BUY, l, long_obj[:4], long_lvrg_arr, long_fee_arr)\n","    long_pr = get_pr(OrderSide.BUY, *long_obj[:2], long_lvrg_arr, long_fee_arr, inversion)\n","    long_total_pr = to_total_pr(len_df, long_pr, long_obj[-2])\n","    long_cum_pr = np.cumprod(long_total_pr)\n","    gs_idx = plot_info_v2(gs, gs_idx, len_df, long_pr, long_total_pr, long_cum_pr, l_liqd, long_lvrg_arr[-1], v_line, title_position, fontsize)\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    # start_0 = time.time()\n","    b_liqd = min(s_liqd, l_liqd)\n","    both_pr = np.vstack((short_pr, long_pr))\n","    both_total_pr = to_total_pr(len_df, both_pr, both_obj[-2])\n","    both_cum_pr = np.cumprod(both_total_pr)\n","    gs_idx = plot_info_v2(gs, gs_idx, len_df, both_pr, both_total_pr, both_cum_pr, b_liqd, lvrg_arr[-1], v_line, title_position, fontsize)\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    # start_0 = time.time()\n","    gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, short_obj[-2], short_cum_pr[-1], fontsize)\n","    gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, long_obj[-2], long_cum_pr[-1], fontsize)\n","    gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, both_obj[-2], both_cum_pr[-1], fontsize)\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    plt.show()\n","    plt.close()\n","\n","    return short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr"],"metadata":{"id":"F5E9llWOTZi6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Up1TNNxbfKbk","jp-MarkdownHeadingCollapsed":true,"tags":[]},"source":["#### fucntional res_plot()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YEruNXz_jYo4"},"outputs":[],"source":["# t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","# t_w_s2 = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list in ['s']), 1, 0))\n","# t_w_s == t_w_s2\n","\n","# tc_zone_wl(np_zone_list, np_pr, np_side_list, zone=['l', 's'])\n","res_info(np_pr, tp_ratio_list, dr_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WQ0ISsnIdwH7"},"outputs":[],"source":["def tc_zone_wl(np_zone_list, np_pr, np_side_list, zone=['l', 's']):  \n","\n","  t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list in zone), 1, 0))\n","  c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list in zone), 1, 0))\n","  t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list in zone), 1, 0))\n","  c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list in zone), 1, 0))\n","\n","  return t_w, c_w, t_ls, c_ls\n","\n","\n","def res_info(np_pr, tp_ratio_list, dr_list):\n","\n","  total_pr = np.cumprod(np_pr)\n","\n","  for_sum_pr = np_pr - 1\n","  for_sum_pr[0] = 1\n","  sum_pr = np.cumsum(for_sum_pr)\n","  sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","  wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","  \n","  total_rollmax_pr = np.maximum.accumulate(total_pr)\n","  total_acc_mdd = np.max((total_rollmax_pr - total_pr) / total_rollmax_pr)\n","  total_rollmax_sumpr = np.maximum.accumulate(sum_pr)\n","  total_sum_mdd = np.max((total_rollmax_sumpr - sum_pr) / total_rollmax_sumpr)\n","\n","  np_tp_ratio_list = np.array(tp_ratio_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","  mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","  np_dr_list = np.array(dr_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","  mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","  return total_pr, sum_pr, wr, total_acc_mdd, total_sum_mdd, mean_tr, mean_dr\n","\n","\n","# def res_plot(res_df, pr_list, zone_list, side_list, tp_ratio_list, dr_list, nontp_liqd_list, nontp_pr_list, config, liqd_list):\n","def res_plot():\n","\n","    fontsize = 10\n","    plt.style.use('default')\n","    # mpl.rcParams.update(mpl.rcParamsDefault)\n","\n","    fig = plt.figure(figsize=(14, 10))\n","\n","    gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                            ncols=3, # col 몇 개 \n","                            height_ratios=[10, 10, 1]\n","                          )\n","    # plt.figure(figsize=(16, 12))\n","    # plt.figure(figsize=(12, 8))\n","    # plt.figure(figsize=(10, 6))\n","    plt.suptitle(key)\n","\n","    try:\n","      np_pr = np.array(pr_list)\n","\n","      sr = sharpe_ratio(np_pr)\n","\n","      dpf = (len(res_df) / 1440) / len(np_pr)\n","\n","      np_zone_list = np.array(zone_list)\n","      # np_pr_list = np.array(pr_list)\n","      np_side_list = np.array(side_list)\n","\n","      t_w = np.sum(np.where((np_zone_list == 't') & (np_pr > 1), 1, 0))\n","      c_w = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1), 1, 0))\n","      t_ls = np.sum(np.where((np_zone_list == 't') & (np_pr < 1), 1, 0))\n","      c_ls = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1), 1, 0))\n","\n","      # np_pr = (np.array(pr_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # ----- fake_pr ----- #\n","      # np_pr = np.where(np_pr > 1, 1 + (np_pr - 1) * 3, np_pr)\n","\n","      total_pr = np.cumprod(np_pr)\n","\n","      for_sum_pr = np_pr - 1\n","      for_sum_pr[0] = 1\n","      sum_pr = np.cumsum(for_sum_pr)\n","      sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","      wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","      \n","      total_rollmax_pr = np.maximum.accumulate(total_pr)\n","      total_acc_mdd = np.max((total_rollmax_pr - total_pr) / total_rollmax_pr)\n","      total_rollmax_sumpr = np.maximum.accumulate(sum_pr)\n","      total_sum_mdd = np.max((total_rollmax_sumpr - sum_pr) / total_rollmax_sumpr)\n","\n","      np_tp_ratio_list = np.array(tp_ratio_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","      np_dr_list = np.array(dr_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","      # pr_gap = (np_pr - 1) / config.lvrg_set.leverage + fee\n","      # tp_gap_ = pr_gap[pr_gap > 0]\n","      # # mean_config.tr_set.tp_gap = np.mean(pr_gap[pr_gap > 0])\n","      # mean_ls_gap = np.mean(pr_gap[pr_gap < 0])\n","\n","      # ---- profit fee ratio ---- #\n","      # mean_pgfr = np.mean((tp_gap_ - fee) / abs(tp_gap_ + fee))\n","\n","      plt.subplot(gs[0])\n","      plt.plot(total_pr)\n","      plt.plot(sum_pr, color='gold')\n","      if len(nontp_liqd_list) != 0:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\nnontp_liqd : %.3f\\nontp_liqd_pr : %.3f\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), min(nontp_liqd_list), min(nontp_pr_list), t_w, c_w, t_ls, c_ls) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), t_w, c_w, t_ls, c_ls) ,\n","                  position=title_position, fontsize=fontsize)\n","      # plt.show()\n","\n","      survey_df.iloc[survey_i] = wr, sr, len(np_pr[np_pr != 1]), dpf, \\\n","        total_pr[-1], sum_pr[-1], total_acc_mdd, total_sum_mdd, min(liqd_list), np.min(np_pr), mean_tr, mean_dr\n","\n","      print('supblot231 passed')\n","\n","    except Exception as e:\n","      print(\"error in 231 :\", e)\n","\n","\n","    try:\n","      #         short only      #\n","      short_np_pr = np.array(short_list)\n","\n","      short_sr = sharpe_ratio(short_np_pr)\n","\n","      short_dpf = (len(res_df) / 1440) / len(short_np_pr)\n","\n","      short_total_pr = np.cumprod(short_np_pr)\n","      \n","      short_for_sum_pr = short_np_pr - 1\n","      short_for_sum_pr[0] = 1\n","      short_sum_pr = np.cumsum(short_for_sum_pr)\n","      short_sum_pr = np.where(short_sum_pr < 0, 0, short_sum_pr)\n","\n","      short_wr = len(short_np_pr[short_np_pr > 1]) / len(short_np_pr[short_np_pr != 1])\n","      \n","      t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","\n","      short_rollmax_pr = np.maximum.accumulate(short_total_pr)\n","      short_acc_mdd = np.max((short_rollmax_pr - short_total_pr) / short_rollmax_pr)\n","      short_rollmax_sumpr = np.maximum.accumulate(short_sum_pr)\n","      short_sum_mdd = np.max((short_rollmax_sumpr - short_sum_pr) / short_rollmax_sumpr)\n","\n","      np_short_tp_ratio_list = np.array(short_tp_ratio_list)\n","      mean_short_tr = np.mean(np_short_tp_ratio_list[np.isnan(np_short_tp_ratio_list) == 0])\n","      \n","      np_short_dr_list = np.array(short_dr_list)\n","      mean_short_dr = np.mean(np_short_dr_list[np.isnan(np_short_dr_list) == 0])\n","      \n","      # short_pr_gap = (short_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # short_tp_gap = short_pr_gap[short_pr_gap > 0]\n","      # # mean_short_tp_gap = np.mean(short_pr_gap[short_pr_gap > 0])\n","      # # mean_short_ls_gap = np.mean(short_pr_gap[short_pr_gap < 0])\n","\n","      # mean_short_pgfr = np.mean((short_tp_gap - fee) / abs(short_tp_gap + fee))\n","      \n","      # plt.subplot(232)\n","      plt.subplot(gs[1])\n","      plt.plot(short_total_pr)\n","      plt.plot(short_sum_pr, color='gold')\n","      if len(nontp_short_liqd_list) != 0:   \n","\n","        max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","        \n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), min(nontp_short_liqd_list), min(nontp_short_pr_list), max_nontp_short_term, t_w_s, c_w_s, t_ls_s, c_ls_s) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position, fontsize=fontsize)\n","   \n","      short_survey_df.iloc[survey_i] = short_wr, short_sr, len(short_np_pr[short_np_pr != 1]), short_dpf, \\\n","        short_total_pr[-1], short_sum_pr[-1], short_acc_mdd, short_sum_mdd, min(short_liqd_list), np.min(short_np_pr), mean_short_tr, mean_short_dr\n","        \n","      print('supblot232 passed')\n","    \n","    except Exception as e:\n","      print(\"error in 232 :\", e)\n","\n","    try:\n","      #         long only      #\n","      long_np_pr = np.array(long_list)\n","      # long_np_pr = (np.array(long_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      long_sr = sharpe_ratio(long_np_pr)\n","\n","      long_dpf = (len(res_df) / 1440) / len(long_np_pr)\n","\n","      long_total_pr = np.cumprod(long_np_pr)\n","      \n","      long_for_sum_pr = long_np_pr - 1\n","      long_for_sum_pr[0] = 1\n","      long_sum_pr = np.cumsum(long_for_sum_pr)\n","      long_sum_pr = np.where(long_sum_pr < 0, 0, long_sum_pr)\n","\n","      long_wr = len(long_np_pr[long_np_pr > 1]) / len(long_np_pr[long_np_pr != 1])\n","\n","      t_w_l = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      c_w_l = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      t_ls_l = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      c_ls_l = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","\n","      long_rollmax_pr = np.maximum.accumulate(long_total_pr)\n","      long_acc_mdd = np.max((long_rollmax_pr - long_total_pr) / long_rollmax_pr)\n","      long_rollmax_sumpr = np.maximum.accumulate(long_sum_pr)\n","      long_sum_mdd = np.max((long_rollmax_sumpr - long_sum_pr) / long_rollmax_sumpr)\n","\n","      np_long_tp_ratio_list = np.array(long_tp_ratio_list)\n","      mean_long_tr = np.mean(np_long_tp_ratio_list[np.isnan(np_long_tp_ratio_list) == 0])\n","      \n","      np_long_dr_list = np.array(long_dr_list)\n","      mean_long_dr = np.mean(np_long_dr_list[np.isnan(np_long_dr_list) == 0])\n","\n","      # long_pr_gap = (long_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # long_tp_gap = long_pr_gap[long_pr_gap > 0]\n","      # # mean_long_tp_gap = np.mean(long_pr_gap[long_pr_gap > 0])\n","      # # mean_long_ls_gap = np.mean(long_pr_gap[long_pr_gap < 0])\n","\n","      # mean_long_pgfr = np.mean((long_tp_gap - fee) / abs(long_tp_gap + fee))\n","\n","      plt.subplot(gs[2])\n","      plt.plot(long_total_pr)\n","      plt.plot(long_sum_pr, color='gold')\n","      if len(nontp_long_liqd_list) != 0:\n","\n","        max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_long_liqd_list), min(nontp_long_liqd_list), min(nontp_long_pr_list), max_nontp_long_term, t_w_l, c_w_l, t_ls_l, c_ls_l) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_long_liqd_list), t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position, fontsize=fontsize)\n","\n","      long_survey_df.iloc[survey_i] = long_wr, long_sr, len(long_np_pr[long_np_pr != 1]), long_dpf, \\\n","        long_total_pr[-1], long_sum_pr[-1], long_acc_mdd, long_sum_mdd, min(long_liqd_list), np.min(long_np_pr), mean_long_tr, mean_long_dr\n","\n","      print('supblot233 passed')\n","\n","    except Exception as e:\n","      print(\"error in 233 :\", e)\n","\n","\n","    try:\n","      #     reversion adjustment      #\n","      # rev_np_pr = 1 / (np.array(pr_list) + fee) - fee\n","      rev_fee = tp_fee + out_fee - np.array(fee_list)\n","      rev_np_pr = (1 / ((np.array(pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - rev_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_np_pr = (1 / (np.array(pr_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_sr = sharpe_ratio(rev_np_pr)\n","\n","      rev_total_pr = np.cumprod(rev_np_pr)\n","      rev_wr = len(rev_np_pr[rev_np_pr > 1]) / len(rev_np_pr[rev_np_pr != 1])\n","\n","      rev_total_for_sum_pr = rev_np_pr - 1\n","      rev_total_for_sum_pr[0] = 1\n","      rev_total_sum_pr = np.cumsum(rev_total_for_sum_pr)\n","      rev_total_sum_pr = np.where(rev_total_sum_pr < 0, 0, rev_total_sum_pr)\n","\n","      rev_rollmax_pr = np.maximum.accumulate(rev_total_pr)\n","      rev_acc_mdd = np.max((rev_rollmax_pr - rev_total_pr) / rev_rollmax_pr)\n","      rev_rollmax_sumpr = np.maximum.accumulate(rev_total_sum_pr)\n","      rev_sum_mdd = np.max((rev_rollmax_sumpr - rev_total_sum_pr) / rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[3])\n","\n","      plt.plot(rev_total_pr)\n","      plt.plot(rev_total_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[-1], \n","                   rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)), fontsize=fontsize)\n","      \n","      rev_survey_df.iloc[survey_i] = rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[-1], rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)\n","\n","    except Exception as e:\n","      print(\"error in 234 :\", e)\n","\n","    try:\n","      #         short       #\n","      # rev_short_np_pr = 1 / (np.array(short_list) + fee) - fee\n","      rev_short_fee = tp_fee + out_fee - np.array(short_fee_list)\n","      rev_short_np_pr = (1 / ((np.array(short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - rev_short_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_short_np_pr = (1 / (np.array(short_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","      \n","      rev_short_sr = sharpe_ratio(rev_short_np_pr)\n","          \n","      short_rev_total_pr = np.cumprod(rev_short_np_pr)\n","      rev_short_wr = len(rev_short_np_pr[rev_short_np_pr > 1]) / len(rev_short_np_pr[rev_short_np_pr != 1])\n","\n","      rev_short_for_sum_pr = rev_short_np_pr - 1\n","      rev_short_for_sum_pr[0] = 1\n","      short_rev_sum_pr = np.cumsum(rev_short_for_sum_pr)\n","      short_rev_sum_pr = np.where(short_rev_sum_pr < 0, 0, short_rev_sum_pr)\n","\n","      short_rev_rollmax_pr = np.maximum.accumulate(short_rev_total_pr)\n","      short_rev_acc_mdd = np.max((short_rev_rollmax_pr - short_rev_total_pr) / short_rev_rollmax_pr)\n","      short_rev_rollmax_sumpr = np.maximum.accumulate(short_rev_sum_pr)\n","      short_rev_sum_mdd = np.max((short_rev_rollmax_sumpr - short_rev_sum_pr) / short_rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[4])\n","\n","      plt.plot(short_rev_total_pr)\n","      plt.plot(short_rev_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[-1], \n","                   short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)), fontsize=fontsize)\n","      \n","      rev_short_survey_df.iloc[survey_i] = rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[-1], short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)\n","\n","    except Exception as e:\n","      print(\"error in 235 :\", e)\n","\n","    try:\n","      #         long       #\n","      # rev_long_np_pr = 1 / (np.array(long_list) + fee) - fee\n","      rev_long_fee = tp_fee + out_fee - np.array(long_fee_list)\n","      rev_long_np_pr = (1 / ((np.array(long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - rev_long_fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_long_sr = sharpe_ratio(rev_long_np_pr)\n","\n","      long_rev_total_pr = np.cumprod(rev_long_np_pr)\n","      rev_long_wr = len(rev_long_np_pr[rev_long_np_pr > 1]) / len(rev_long_np_pr[rev_long_np_pr != 1])\n","\n","      rev_long_for_sum_pr = rev_long_np_pr - 1\n","      rev_long_for_sum_pr[0] = 1\n","      long_rev_sum_pr = np.cumsum(rev_long_for_sum_pr)\n","      long_rev_sum_pr = np.where(long_rev_sum_pr < 0, 0, long_rev_sum_pr)\n","\n","      long_rev_rollmax_pr = np.maximum.accumulate(long_rev_total_pr)\n","      long_rev_acc_mdd = np.max((long_rev_rollmax_pr - long_rev_total_pr) / long_rev_rollmax_pr)\n","      long_rev_rollmax_sumpr = np.maximum.accumulate(long_rev_sum_pr)\n","      long_rev_sum_mdd = np.max((long_rev_rollmax_sumpr - long_rev_sum_pr) / long_rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[5])\n","\n","      plt.plot(long_rev_total_pr)\n","      plt.plot(long_rev_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[-1], \n","                   long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)), fontsize=fontsize)\n","      \n","      rev_long_survey_df.iloc[survey_i] = rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[-1], long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)\n","      \n","    except Exception as e:\n","      print(\"error in 236 :\", e)\n","\n","    if show_plot:\n","      \n","      frq_dev, s_frq_dev, l_frq_dev = frq_dev_plot(res_df, trade_list, side_list, plot=False)      \n","      plt.subplot(gs[6])\n","      plt.plot(frq_dev)\n","\n","      plt.subplot(gs[7])\n","      plt.plot(s_frq_dev)\n","\n","      plt.subplot(gs[8])\n","      plt.plot(l_frq_dev)\n","\n","      plt.show()\n","    \n","\n","    try:\n","\n","      h_np_pr = np.array(h_pr_list)\n","      # h_rev_np_pr = 1 / (np.array(h_pr_list) + fee) - fee    # define, for plot_check below cell\n","      h_rev_np_pr = (1 / ((np.array(h_pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - np.array(fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # --------------------- h pr plot --------------------- #\n","      if len(h_np_pr[h_np_pr != 1]) != 0:\n","\n","        plt.figure(figsize=(16, 12))\n","        plt.suptitle(key + \" hedge\")\n","\n","        h_total_pr = np.cumprod(h_np_pr)\n","        h_wr = len(h_np_pr[h_np_pr > 1]) / len(h_np_pr[h_np_pr != 1])\n","\n","        plt.subplot(gs[0])\n","\n","        plt.plot(h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_wr, np.min(h_np_pr), h_total_pr[-1], config.lvrg_set.leverage))\n","        # plt.show()\n","\n","        #         short only      #\n","        h_short_np_pr = np.array(h_short_list)\n","\n","        short_h_total_pr = np.cumprod(h_short_np_pr)\n","        h_short_wr = len(h_short_np_pr[h_short_np_pr > 1]) / len(h_short_np_pr[h_short_np_pr != 1])\n","        \n","        plt.subplot(gs[1])\n","        plt.plot(short_h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_short_wr, np.min(h_short_np_pr), short_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long only      #\n","        h_long_np_pr = np.array(h_long_list)\n","\n","        long_h_total_pr = np.cumprod(h_long_np_pr)\n","        h_long_wr = len(h_long_np_pr[h_long_np_pr > 1]) / len(h_long_np_pr[h_long_np_pr != 1])\n","        \n","        plt.subplot(gs[2])\n","        plt.plot(long_h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_long_wr, np.min(h_long_np_pr), long_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","\n","        #     reversion adjustment      #\n","            \n","        h_rev_total_pr = np.cumprod(h_rev_np_pr)\n","        h_rev_wr = len(h_rev_np_pr[h_rev_np_pr > 1]) / len(h_rev_np_pr[h_rev_np_pr != 1])\n","\n","        plt.subplot(gs[3])\n","        plt.plot(h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_wr, np.min(h_rev_np_pr), h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         short       #\n","        # h_rev_short_np_pr = 1 / (np.array(h_short_list) + fee) - fee\n","        h_rev_short_np_pr =  (1 / ((np.array(h_short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - np.array(short_fee_list) - 1) * config.lvrg_set.leverage + 1\n","           \n","        short_h_rev_total_pr = np.cumprod(h_rev_short_np_pr)\n","        h_rev_short_wr = len(h_rev_short_np_pr[h_rev_short_np_pr > 1]) / len(h_rev_short_np_pr[h_rev_short_np_pr != 1])\n","\n","        plt.subplot(gs[4])\n","        plt.plot(short_h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_short_wr, np.min(h_rev_short_np_pr), short_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long       #\n","        # h_rev_long_np_pr = 1 / (np.array(h_long_list) + fee) - fee\n","        h_rev_long_np_pr =  (1 / ((np.array(h_long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - np.array(long_fee_list) - 1) * config.lvrg_set.leverage + 1\n","            \n","        long_h_rev_total_pr = np.cumprod(h_rev_long_np_pr)\n","        h_rev_long_wr = len(h_rev_long_np_pr[h_rev_long_np_pr > 1]) / len(h_rev_long_np_pr[h_rev_long_np_pr != 1])\n","\n","        plt.subplot(gs[5])\n","        plt.plot(long_h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_long_wr, np.min(h_rev_long_np_pr), long_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","        \n","        if show_plot:\n","          plt.show()\n","          \n","    except Exception as e:\n","      print('error in h_pr plot :', e)   "]},{"cell_type":"markdown","metadata":{"jp-MarkdownHeadingCollapsed":true,"tags":[],"id":"zQ-roiifspcX"},"source":["#### ep_loc.point & zone legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Js5eL87VspcX"},"outputs":[],"source":["\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","\n","    \n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # ------------------------------------ short ------------------------------------ # \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 0:\n","        #   mr_score += 1          \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_upper_1m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_upper_3m'].iloc[i] <= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_upper_5m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","        # ------------------------------------ long ------------------------------------ # \n","          \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 1:\n","        #   mr_score += 1   \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 1:\n","        #   mr_score += 1     \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 1:\n","          # mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_lower_1m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_lower_3m'].iloc[i] >= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_lower_5m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"]},{"cell_type":"markdown","metadata":{"id":"JNQxkb06ZdTe"},"source":["## plot_check_v2"]},{"cell_type":"code","source":["# ------------------ plot_config ------------------ #\n","save_plot = 0\n","tf_plot = 1       # true - false plot\n","pr_descend = 1    # 1 -> 내림차순\n","position = 1      # -1 / 1, 0 (short / long)\n","front_plot = 0    # ide -> 1 / logic 검수 -> 0  \"limit plot_range til loc_set idx = replacing x_max value\"\n","# pr_sort = 1     # -> default 1,  이상한 체결 확인하기 좋음\n","# wl_case = 1     # 1 / -1 / 0 (win loss study) --> oid\n","\n","x_max = 500\n","x_margin = x_max / 30\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","inversion = 0\n","hedge = 0\n","\n","# ------ show or save ------ #\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","    # ------ remove existing dir ------ #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","\n","# ------------ 한 방향에 대해 plot_check 함 (by position var.) ------------ #\n","#   obj by position  \n","if position == -1:\n","  pos_str = \"SELL\"\n","  pr, obj, lvrg_arr, fee_arr, tpout_arr = sort_bypr_v2(short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, descending=pr_descend)\n","else:   # both option currently not supported\n","  pos_str = \"BUY\"\n","  pr, obj, lvrg_arr, fee_arr, tpout_arr = sort_bypr_v2(long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr, descending=pr_descend)\n","\n","pr_msg = \"%s\\n {} ~ {} -> {:.5f}\\n lvrg : {}\\n fee : {:.4f}\" % (pos_str)  # pos_str 으로 이곳에서 정의함\n","\n","# ------------------ data chunknize ------------------ #\n","left_end_idx = obj[2] - prev_plotsize  # left_margin 기준 - entry_idx\n","right_end_idx = obj[3] + post_plotsize\n","\n","np_plot_params = np.hstack((left_end_idx, right_end_idx, pr, *obj, lvrg_arr, fee_arr, tpout_arr))[np.sum(left_end_idx < 0):]\n","np_df = res_df.to_numpy()"],"metadata":{"id":"A6QSF9COaHO5","executionInfo":{"status":"ok","timestamp":1646106027539,"user_tz":-540,"elapsed":357,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":91,"outputs":[]},{"cell_type":"code","source":["plot_col_list = []\n","# ------ set period ------ #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","# ------ add_col, alpha, color, linewidth ------ #\n","plot_col_list.append([['hopen_15T', 'hclose_15T'], 1, '#ffffff', 2])\n","plot_col_list.append([['hopen_H', 'hclose_H'], 1, '#ffffff', 4])\n","\n","plot_col_list.append([['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval], 1, '#ffeb3b', 1])\n","plot_col_list.append([['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval], 1, '#e65100', 2])\n","plot_col_list.append([['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval], 1, '#c2185b', 4])\n","\n","plot_col_list.append([['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval], 1, '#ffffff', 1])\n","plot_col_list.append([['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval], 1, '#ff00ff', 2])\n","plot_col_list.append([['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval], 1, '#3179f5', 4])\n","\n","plot_col_list.append([['ema_5m'], 1, '#03ed30', 4])\n","\n","# st_list = ['st_base_%s' % hhdc_interval, 'st_upper_%s' % hhdc_interval, 'st_lower_%s' % hhdc_interval]\n","plot_col_arr = np.array(plot_col_list)\n","plot_col_arr[:, 0] = [get_col_idxs(res_df, col_) for col_ in plot_col_arr[:, 0]]   # str_col to number\n","\n","# ------------ make col_idx_dict config ------------ #\n","col_idx_dict = \\\n","{\n","  \"ohlc_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close']),\n","  \"step_col_info\": plot_col_arr\n","}"],"metadata":{"id":"FnSydxFXn_f9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646106038518,"user_tz":-540,"elapsed":313,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"d557fd0d-0998-4a62-852a-2cb8938f0ed3"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:26: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n"]}]},{"cell_type":"code","source":["[plot_check_v2(np_df, config, param_zip, pr_msg, x_max, x_margin, front_plot, **col_idx_dict) for param_zip in zip(np_plot_params, np_plot_params[::-1])]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Roy40BmByyZc","executionInfo":{"status":"error","timestamp":1646106054415,"user_tz":-540,"elapsed":12230,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"c69d9a02-5a58-4ecf-a98e-3a8be01e4caf"},"execution_count":93,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"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fvrJHnzwQZNkrVu3tgEDBlhUVJQFBgbamDFjLDk52TlvnTp1rGrVqibJwsLC7MMPP7RJkyY522fPnm1z5861sLAwi4+Pt+zsbGvWrJmzfdWqVfbKK69YeHi4BQYGWsuWLUut6+uvv7ZXXnnFKlSoYD179rSsrCyLjo4u0zYIDg628PDwy7rt4uLiLDEx0WrWrGn+/v42cOBAO3z4sIWFhbnlZ9LMrGHDhi7XNWzYMPvxxx+tevXqFhISYjNmzLB58+Zdlv2OEEIIIYSQ33KuvfZaZ/+tTZs2lpOTYzVr1jTp1P//a9WqZdKpPsRLL71kCxcuLLGOf/zjH7Zy5Ur76quvnNMiIiKc/QV/f3974oknLCkpqcSyI0aMsJUrV9r+/fud087X7zo748aNs1WrVllkZKRdffXVlpaWZp06dXLrdjpfX69Zs2YWHBxskqxJkyaWlpZm119/fbF1NGjQwDZu3GgpKSnWoUMH5/TGjRtbaGioSbKYmBjbvHmz3X333SbJrrrqKnM4HBYfH28BAQH27LPP2s6dO0v0ucvSH69ataplZ2dbr169LCQkxCZMmGBr164t8zY48/240G13If38Nm3aWF5ennPbDRo0yA4dOmT+/v7Oz3Dw4EHr06ePBQcHW6VKlezqq692ua7Sfv8QHx9vK1asKNGnLMv3kBBCCLnIeL0AQgjxWD744IPzDlLu3r3bEhISSm1fuHChPf300yWmf/XVVy4HKcPDw2379u3Wtm3bc3aK/va3v9myZctKfd81a9bYwIEDna8HDBhwQZ2mC0lAQMB5B9rat29vOTk5zg7j2YmKijIzsypVqpRoCwsLsxkzZti//vUvk2ShoaF2/Phxa9SokXOemTNn2vjx402S3XnnnbZnzx5n5+tcadSokR07dswqVarknLZq1aoyD+jGxMSYw+GwDz/80Dp06GB+fn5u33au4nA4Su3kXejP5LkGKd966y176aWXnK+7du1q27Ztuyw/R4QQQgghhFwpad26tR09etRat25doi04ONjGjRtnW7ZsKTb9pptusq+//tr69etXbJCyaAICAmzw4MF25MiRYtPr169vW7dutc6dOxcbpDw75+p3SbKUlBS78847na/HjBljc+bMuWzb6ey+3tlp3Lixpaam2h/+8Idi0z/77DPr0qWL7dmzp9ggZdHExMTYxo0bbdiwYSbJHn/8cVu8eLGz3c/Pz/Lz8+322293Titrf3zgwIG2Zs0a5+vQ0FDLz8+3Jk2alOlz33vvvZaenm5///vfrXnz5mXeXhfSz7/33nvt22+/LVajmTkHzl944QWbOXNmmd7X1e8fAgICbP369Xbttdees09Z2veQEEIIuZhwu1cAKOJ3v/udqlevrnnz5rlsr1Chglq3bq0tW7aUeZ3jxo1z3l7zXBISEjRjxoxS25s3b66kpCTn66SkJDVv3rzMdbhb3759NW/ePOXn57tsb9++vdLS0pSZmemcFh8fr+zsbOXl5emee+7RxIkTJUmNGzfWiRMntHPnTue8RT/fjTfeqO3bt2vGjBn65Zdf9N1336l9+/Yu37d58+b66aeflJeX53Jd55OamqrGjRtrw4YNeu2117Rnzx4999xziouLK9PyF6NFixYKDg7Wrl27SrRd7M/kqlWrlJaWpnnz5hW79ey0adMUHx+vWrVqqWLFivrjH/+ozz77zL0fCAAAALhCfPrppzp69Ki+++47rVixQt9//72zrW7dusrKytLRo0f15z//WRMmTHC2+fv764033tCQIUNkZi7XnZWVpWPHjmny5MkaN25csbbJkydrxIgROnr06Dnrc9XvOiMyMlIxMTEe6UeW1tc7480339SRI0e0fft2paWlacmSJc62Xr166fjx46X2S/7yl78oNzdXKSkpCgsL0+zZs51tfn5+xb728/PTNddc45xW1v742f3t/Px87d69u8zb6v/+7//UoUMHnTx5Uv/+97/13Xff6bHHHlNkZOQFve+5vj+fffaZAgIC1KZNG/n7+2vAgAHasGGD87PdeOONyszM1Jo1a3Tw4EEtWrRIdevWdbkuV79/SExM1KpVq7Rp0yaXy5zrewgAwKXw+kgpIYR4Kue7kvLdd9+16dOnl9r+/vvv22effeayzdWVlDfccINt2LDBAgICLDY2ttS/3GzXrp3l5uaWertPSXbixIlif8V51VVXmZ3q7ZaIn5+f/fnPf7atW7daSkqKvfnmm3bDDTdYlSpVbOjQoXb//fefczud72rAihUrmsPhsFtuucVle+3ate3AgQOlvk9MTIyNGjXKeeVku3btLC0trdg8Dz/8sC1fvtwk2dSpU83MbMCAARYYGGj33XefZWVlOW8pVDQPPPBAib88HTt27Dm/r+fK9ddfb5MmTbKDBw/a8uXL7X/+538uadudncqVK9vGjRvt2WefddvP5O9+9zsLCgqyiIgImzx5sm3atMn5cxceHm5z5swxM7OCggJbv369RUVFXdS2IYQQQgghpDwkMDDQOnfubImJiS7bo6Ki7JlnnrG2bds6pw0dOtTeeustk2R9+/Yt9UrK0NBQe+yxx6xr167OaT169LAlS5aYJLvllltKvZLyfP2uOnXqmJlZSEiIc9odd9xhe/bscTl/cHCwjR8/3nbt2mV79uyxF1980Zo1a2bVq1e3sWPH2u9+97vzbquz+3pF4+/vb/Hx8fbXv/7VeWvUSpUq2Y4dO5z9p3NdSdmyZUsbPXq08645TZo0sby8PLvlllssKCjIRo4caYWFhc6+VVn749KpfteZO/mcyerVq0t9pMu54u/vb127drWPPvrIsrKybM6cOVa5cmWX815IP1+SDR8+3H799VcrKCiww4cPW6tWrZxt27dvt6ysLGvVqpWFhITYpEmTbPXq1SXW4er3D3Xq1LGdO3c6H31S2pWUrr6HhBBCyKWEKykB4LSKFSvqD3/4Q6lXM06YMEHXXHON7r333jKtz8/PT2+99ZaeeuopFRYWnnPeM1clHjlypNR58vLyFB4e7nwdHh6u3Nxcl/PWq1dPsbGxuvnmm9WiRQvt2bNHH3zwgX788UfFxcVp0aJFZfoMpenZs6cyMzO1cuXKEm3R0dH697//rbfeektz5851uXxqaqqWLl3qbD/7s539+Y4ePao9e/bovffe04kTJ/TRRx9p//79io+PL7Hu862rqLp16yo3N9cZV3bu3KmkpCTt2rVLV1999Xn/EvZCVKhQQZ9++qm++eYbvfjiiyXaL/Zn8quvvlJBQYEcDoeeeuopxcXFqWnTppJO/fVrSEiIqlSporCwMH3yySdcSQkAAACcw4kTJ7R06VJ17NhR3bp1K9GelZWlGTNmaOHChQoICFCtWrX05JNP6q9//et5152fn6+3335bM2fOVLVq1RQaGqoJEyboySefPOdyZel3nbm7TFn7kW3bttWRI0d07bXXqn379vr111+1ePFiff311yooKNDXX3993s9zdl+vqJMnT2rNmjWqU6eOHnvsMUnS6NGj9cEHH2jv3r3nXfePP/6oo0eP6rnnnpMkbd++XX379tUbb7yhtLQ0RUdHa+vWrTpw4MAF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OnDggB577DH9+OOP3i4LAAAAAOCD6EMCAICiuN0rAAAAAAAAAAAAAI/idq8AAAAAAAAAAAAAPIpBSgAoR26++Wbt2LFDubm56t69u7fLAQAAAAD4MPqQAADgcmKQEgDKkTFjxuiNN95Q5cqVtXDhQo++9+23367k5GQdOXJEy5YtU7169UqdNzY2VsuWLdORI0eUnJysDh06FGsfOnSo0tLS5HA4NG3aNAUHB5d52TO+/PJLmZkCAgLc8wEBAAAA4ApDH1KKi4vTp59+qpycHB0+fFgvvfSSez8oAADlnBFCCCkf2blzp3Xo0MHj7wJ2mXIAACAASURBVFu1alXLzs62Xr16WUhIiE2YMMHWrl1b6vxff/21vfLKK1ahQgXr2bOnZWVlWXR0tEmyjh07Wnp6ujVr1swiIyNt+fLlNn78+DIteyZ9+vSxlStXmplZQECA178vhBBCCCGEEOKLKe99yKCgINu1a5clJiZaaGiohYSE2LXXXuv17wshhBByBcXrBRBCCPFAdu3aZYWFhZafn2+5ubkWHBxs4eHh9u6771pqaqodOHDAnn/+efP393cu079/f9u6datlZmba0qVLrV69ehf13gMHDrQ1a9Y4X4eGhlp+fr41adKkxLyNGjWyY8eOWaVKlZzTVq1aZY8++qhJslmzZtkLL7zgbLv99tstLS2tTMtKsvDwcNu+fbu1bduWQUpCCCGEEEIIKSX0IU/VsWrVKq9/LwghhJArNdzuFQDKiauuukr79u1Tt27dVLlyZf366696//33deLECV111VW67rrr1LFjRz388MOSpLvuuksjRoxQz549Va1aNX311VeaM2dOqetPSkpS7969XbY1b95cSUlJztf5+fnavXu3mjdv7nLen376SXl5ecXWfWbes9eVlJSkmjVrqkqVKuddVpLGjRunKVOmKD09/XybDAAAAADKLfqQ0o033qiff/5ZS5Ys0eHDh7V8+XJdc801Zdl8AACgDBikBIByqnr16uratauGDh2q/Px8HT58WK+99pruv/9+SdKgQYM0fvx4bdu2TYWFhRo3bpxatmxZ6nNAWrRoUWoHtFKlSnI4HMWmORwOVa5c+YLnPbv9zNeVK1c+77I33HCD4uPjNXny5FK3CwAAAACgpPLYh6xTp47uv/9+vf7664qJidG//vUvLVy4UEFBQaVuJwAA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VatWeu+995SZmSlJnmJe1apV1bVrV506dUrbt2+XJD3yyCP6/PPPtXOna7ycxYsX5yt4umVnZ+vRRx/V+++/r+Rk1//nCy+8oF9//VUtW7bUZZddpvr16ys7O1tVq1bV8uXLNXLkSJ07d06Sq2B38uRJZWVladasWXr11VcveSwvv/yy0tPT9cYbbxQoUhZ1TJL03XffqXXr1jp37pyefvppHTp0SO3bt5ckT+vItLQ0SdI111yTb9ujR4/WuXPn9I9//EOS1KJFC0mu4uWkSZN06tQpvfDCCwW6dr1Yenq6JKlTp07avn27mjRporCwMF199dWy2Wxq1aqVfv75Z08s48ePv+RrAqDi8XeOLOv2ysu9BQCEMv7+ARAqGJPSi9V2VlbbWaPDAHCe1XZW9szCCz3hLZrJMqi/JrZorjHXXauJLZoHPKbCCpSSa5zKf58vGh6e805QxqksKp7SslgsMplMMplMfm2RWmA/57tENdXdrKimPwVsP2VR2LicRf0EszVgvOJLHB8FyoqnflzJ/gWyQFmecR8YPKNHj5YkLVy4MN/0KlWq6OOPP1br1q01atQoHTt2TJL03HPPKS8vT0OGDNFHH32kUaNG6Z577imwXbPZrL/97W86fPiwBgwYoK+//lpTp05Vu3btVL16dUlS3bp1NWLECK1atUpDhw7V8OHDJUmrV6/WQw89pEGDBunAgQN65ZVX1KlT0S3imzRpoqeeekozZ870FBGrVaum2NjYSx6T+3V48MEH9ccff2jSpEmqW7dugX34+qLQNddco27duumrr77S/v37JclzfA6HQ/fdd59SUlI0b948NWnSpMhj+PTTT7Vp0yaNGTNGycnJqlatmiTp9OnTkqS9e/fqrrvu0uTJk1W/fn09//zzRW4PJbNO64ocfztYP8Cl+DtHknMBwHhciwGECoqUXoYNuULDhlxhdBgAzhs25Aq1u7t6ofPdLRxjwiOU6XAoJjwiiNH5X5bDobQcuya2aK4vu9welKKrm9VqldPplNPplM0W+BagFVlpCpul/aHgCPgP94HBUadOHd1///3atm2btm3b5pletWpVrVy5Uvfff78ee+wxLV++XJIUHR2tnj17atu2bVq5cqUWLVokyTUOpOQqTLoLdDfddJNatWqlDRs2KC4uTh999JGqVaumrl27av/+/crLy9POnTu1cuVKLVmyRJKrG1ZJevvtt7VixQqtXr3aUzx1t04sTP369WU2mxUXF6e9e/dKkpo2bap//etfRR6T208//aTly5fr448/Vr169dS5c2elpKRIkmJiYiRJDRo0kCT9/vvvnvVGjx6tsLAwLViwwDPNvV58fLzWrFmj+Ph4hYWFqXHjxkUew5kzZ9S5c2fddNNNatmypbZs2aKcnBzP/k6dOqUNGzbolVde0YEDBzR48OAit4eSCaVu2+lyHUXxd44k5wKA8bgWAwgVdPfqZfj5C/OHK45dYkkAgWTLcMiZ7urO89xZpxZ9f9rgiILj3+nHNSspWfPbtdU5p1Mx4RGq2blDQFpLugVjzEkAKA+4DwyOYcOGecZx9LZ06VINHDhQ69atU3Z2tv785z9ry5YtSk1N1YkTJ9ShQwc98cQTuuuuuyRJu3fvliT985//1B133KHo6GgdOHBADodDffr00ahRozRs2DDPslarVfHx8erevbueeOIJ9erVS5L0/fffq2bNmlqzZo3i4uKUk5Oj8ePH69y5c9q6dask19iSTZs2leQqsj766KPasWOHdu3apUGDBnmOYdWqVUpNTdW4ceOKPCabzaYVK1Zo3bp1MplMGjVqlPLy8pScnKxdu3bpl19+0ZAhQ7Rr1y6NGTNGWVlZWr16tSRXUXb48OHav3+/vvzyS8++169fr6NHj2rgwIHau3evBg4cqJMnTyohIUGSNHjwYN18882SXMXXRx99VPHx8Tp27JjmzJmjhIQE3XLLLerRo4def/11nT59WsOHD1fr1q31888/68Ybb1SjRo3000+h2fNBeWcS92AIbTMfu0J1qkkzcv2TIy3jXDnXX9sDAJQcf/8ACBW0pAQQcqKa/iRT3c36bnOmqlQt+Yc2GVlZcjqdslqtAYguuMx1o8u0vncLSV//JAW8W1cAANwee+wxZWZmFmhV2KFDB0lS3759tWLFCq1YsUJdunRRXl6eBg8erD179mj27Nlq3769Fi5cWKDIKUlHjx7V8OHDlZmZqTfffFONGjXSyy+/rLVr10qSHn/8cX3//fd67bXXdMMNN+jpp5/WV199pdzcXKWnp2vChAmaN2+eTp8+raFDh3oKfCNHjtS7774rydWy8d1331X//v11/PhxrV692vNPkrKysvT1118XeUwOh0M1a9bUjBkzNHv2bB0/flyP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OtPx4T1k91WxDu1qbGxMXoOVfjkOrAjHgeUYsBwHluPAsrrqsqet/S3Hh7W/5fiw3ms5Rqz9LceHtb/l+LDKvtzuFQAAAAAAACiUISUAAAAAAABQqJ4R8c3URXQHS5cuTV0CJeA4IMJxgGOAdzkOiHAcQFdjT7M/jg/2x/HBe3GMsD+OD/bH8UGZHRbv3vcVAAAAAAAAoBBu9woAAAAAAAAUypDyEPnGN74RGzdujKampmhqaooJEyZ0/NnUqVNjzZo1sWrVqhg/fnzCKinCBRdcEKtWrYo1a9bETTfdlLocCrR+/fpYvnx5NDU1RWNjY0REDBw4MBYtWhSrV6+ORYsWxYABAxJXSd4efPDBeOWVV2LFihUdj+3v+3733XfHmjVrYtmyZTF69OgUJXMIVDsOnBt0P/X19fHkk0/Gb37zm2hubo7rr78+IvQE6Gqc75P1fno/3U+PHj1i6dKl8fjjj0dExLBhw2LJkiWxZs2amDVrVvTq1StxhaR09NFHx49//ONYuXJltLS0xNixY/UQOtxwww3R3NwcK1asiB/+8IfRp08fPaSb83MouoKKlf/6xje+UZkyZcpej48aNary/PPPV3r37l0ZNmxYZe3atZUePXokr9c6NKtHjx6VtWvXVoYPH17p1atX5fnnn6+MGjUqeV1WMWv9+vWVY489do/HvvWtb1VuuummSkRUbrrppsptt92WvE4r3/WJT3yiMnr06MqKFSve8/s+YcKEys9//vNKRFTOOOOMypIlS5LXbx2648C5QfdbgwYNqowePboSEZUjjjii8sILL1RGjRqlJ1hWF1rO963/uQ6291vdc33lK1+pzJw5s/L4449XIqLyox/9qPK3f/u3lYio3H///ZUvfvGLyWu00q0f/OAHlc9//vOViKj06tWrcvTRR+shViUiKoMHD668+OKLlcMPP7wS8W7vmDx5sh7SzZefQ1ldYCUvoEuuff0gcurUqZWpU6d2/H7hwoWVsWPHJq/XOjRr7NixlYULF+7z+2917VVtSLlq1arKoEGDKhHv/gBj1apVyeu08l9Dhw7d4+RwX9/373znO5WGhoaqz7M6//qfx4FzA2vevHmV8847T0+wrC60nO9b77Xeq/db3W/V1dVVnnjiicq5557bMaR89dVXKz179qxE7N1XrO61jjrqqMqLL7641+N6iBXx7pByw4YNlYEDB1Z69uxZefzxxyvjx4/XQyw/h7I69XK710Pouuuui2XLlsWDDz7YcUl1XV1dtLa2djxn48aNUVdXl6pEDjHf7+6tUqnEokWL4te//nVcddVVERFx/PHHx+bNmyMiYvPmzXH88cenLJGC7Ov7rkd0P84Nuq+hQ4fG6NGj45lnntEToAuxb9mfA+n9dD933XVX3HjjjbFr166IiDj22GPj97//fezcuTMi9JHubvjw4fHqq6/GQw89FEuXLo0ZM2ZEv3799BAiImLTpk1x++23x4YNG+Lll1+ON954I5577jk9hL14z0lnYkj5ASxevDhWrFix17r44ovj/vvvjxNOOCE+9rGPxcsvvxx33HFH6nKBgp199tlx2mmnxYQJE+Laa6+NT3ziE3s9p1KpJKiM1HzfuyfnBt1X//79Y86cOXHDDTfEtm3b9vpzPQGg69H7qeYv//IvY8uWLbF06dLUpVBSNTU1ceqpp8b9998fp556arz55psxderUvZ6nh3RPAwYMiIkTJ8bw4cNj8ODB0b9//7jwwgtTl0UnoGdQZjWpC+jMzj///AN63owZM+KnP/1pRES0tbXFkCFDOv6svr4+2traDkl9pOf73b1t2rQpIiJeffXVmDt3bowZMyZeeeWVGDRoUGzevDkGDRoUW7ZsSVwlRdjX912P6F6y+925QfdRU1MTc+bMiZkzZ8bcuXMjQk+ArsS+pZqD6f10L2eddVZcfPHF8elPfzoOP/zwOOqoo+Luu++OAQMGRM+ePWPnzp36SDe3cePG2LhxYzz77LMREfHoo4/G1KlT9RAiIuK8886L9evXx2uvvRYREY899licddZZegh78Z6TzsSVlIfIoEGDOn7913/919Hc3BwREfPnz4+Ghobo3bt3DBs2LEaMGNFx4kHX09jYGCNGjIhhw4ZFr169oqGhIebPn5+6LArQr1+/OOKIIzp+PX78+Ghubo758+fH5MmTIyJi8uTJ8ZOf/CRlmRRkX9/3+fPnx+WXXx4REWeccUa88cYbHbfjoOtxbtA9Pfjgg7Fy5cq48847Ox7TE6DrcL5PNQfT++lepk2bFkOGDInhw4dHQ0NDPPnkk/H3f//38dRTT8Ull1wSEY6P7u6VV16J1tbWGDlyZEREjBs3LlpaWvQQIiJiw4YNMXbs2Ojbt29E/P/jQw/hf/Kek84m+QdjdsX18MMPV5YvX15ZtmxZ5Sc/+ckeH0A7bdq0ytq1ayurVq2qXHjhhclrtQ7tmjBhQuWFF16orF27tjJt2rTk9VjFrOHDh1eef/75yvPPP19pbm7u+N4fc8wxlSeeeKKyevXqyuLFiysDBw5MXquV7/rhD39Y2bRpU2XHjh2V1tbWypVXXrnf7/u3v/3tytq1ayvLly+vnHbaacnrtw7dceDcoPuts846q1KpVCrLli2rNDU1VZqamioTJkzQEyyriy3n+1Z2vZ/eb3XP9clPfrLy+OOPVyLeff/4zDPPVNasWVOZPXt2pXfv3snrs9KtU045pdLY2FhZtmxZZe7cuZUBAwboIVbH+uY3v1lZuXJlZcWKFZWHH3640rt3bz2kmy8/h7I6+zps9y8AAAAAAAAACuF2rwAAAAAAAEChDCkBAAAAAACAQhlSAgAAAAAAAIUypAQAAAAAAAAKZUgJAAAAAAAAFMqQEgAAAAAAACiUISUAAAAAAABQKENKAAAAAAAAoFD/DwjjP7FVKrJnAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 2160x1296 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-93-60cb252a088d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-93-60cb252a088d>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-49-2139a62eec71>\u001b[0m in \u001b[0;36mplot_check_v2\u001b[0;34m(data, config, param_zip, pr_msg, x_max, x_margin, front_plot, **col_idx_dict)\u001b[0m\n\u001b[1;32m     36\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpr_msg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mentry_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexit_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlvrg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfee\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m   \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m   \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m   \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    270\u001b[0m     \"\"\"\n\u001b[1;32m    271\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 272\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    273\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/pylab/backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(close, block)\u001b[0m\n\u001b[1;32m     37\u001b[0m             display(\n\u001b[1;32m     38\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m                 \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m             )\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(*objs, **kwargs)\u001b[0m\n\u001b[1;32m    304\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    305\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 306\u001b[0;31m             \u001b[0mformat_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    307\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m                 \u001b[0;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mformat\u001b[0;34m(self, obj, include, exclude)\u001b[0m\n\u001b[1;32m    171\u001b[0m             \u001b[0mmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 173\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    174\u001b[0m             \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m                 \u001b[0;31m# FIXME: log the exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-2>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[0;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m         \u001b[0;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    332\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 334\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    335\u001b[0m             \u001b[0;31m# Finally look for special method names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(fig)\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'png'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 241\u001b[0;31m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    242\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'retina'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m'png2x'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mretina_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(fig, fmt, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m    123\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m     \u001b[0mbytes_io\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 125\u001b[0;31m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    126\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'svg'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m   2124\u001b[0m                     \u001b[0morientation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morientation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2125\u001b[0m                     \u001b[0mbbox_inches_restore\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_bbox_inches_restore\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2126\u001b[0;31m                     **kwargs)\n\u001b[0m\u001b[1;32m   2127\u001b[0m             \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2128\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mbbox_inches\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mrestore_bbox\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py\u001b[0m in \u001b[0;36mprint_png\u001b[0;34m(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs)\u001b[0m\n\u001b[1;32m    535\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_file_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename_or_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wb\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfh\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    536\u001b[0m                 _png.write_png(renderer._renderer, fh, self.figure.dpi,\n\u001b[0;32m--> 537\u001b[0;31m                                metadata={**default_metadata, **metadata})\n\u001b[0m\u001b[1;32m    538\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    539\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mprint_to_buffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["### plot_funcs - legacy"],"metadata":{"id":"MQ8w8nWVXlGj"}},{"cell_type":"code","source":["def col_fillbw_plot(np_col, alpha=1, color='#ffffff', linewidth=2):\n","  # assert np_col.shape[-1] == 2, \"assert np_col.shape[-1] == 2\"\n","  try:\n","    plt.step(np.arange(len(np_col)), np_col, alpha=alpha, color=color, linewidth=linewidth)\n","  except Exception as e:\n","    print(\"error in col_fillbw_plot :\", e)\n","\n","\n","def plot_check_v2(data, config, param_zip, pr_msg, x_max, x_margin, front_plot, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 18))\n","  nrows, ncols = 2, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                         ncols=ncols,\n","                         height_ratios=[3, 1]\n","                         )\n","  for gs_idx, params in enumerate(param_zip):\n","    ax = fig.add_subplot(gs[gs_idx])\n","    iin, iout, pr, ep, tp, entry_idx, exit_idx, open_idx, lvrg, fee, tp_line, out_line = params\n","\n","    # ------------ add_col section ------------ #\n","    a_data = data[int(iin):int(iout)]\n","    # a_data = data[iin:iout]\n","    # ------ candles ------ #\n","    candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax)\n","    \n","    # ------ add cols ------ #\n","    [col_step_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","\n","    # ------ ep, tp ------ #\n","    ep_tick = eptp_hvline_v2(config, ep, tp, entry_idx, exit_idx, open_idx, tp_line, out_line, entry_idx - iin)\n","    \n","    #     Todo    #\n","    #     2. y_lim by norm_range_cols\n","    #     3. outer_price plot 일 경우, gs_idx + nrows 하면 됨\n","    if front_plot:\n","      x_max = ep_tick\n","    if (iout - iin) > x_max:\n","      plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","    # ------ trade_info ------ #\n","    plt.title(pr_msg.format(entry_idx, exit_idx, pr, lvrg, fee))\n","\n","  plt.show()\n","  plt.close()\n","  print()\n","  # print(\"elapsed time :\", time.time() - start_0)\n","\n","  \n","def eptp_hvline_v2(config, ep, tp, entry_idx, exit_idx, open_idx, tp_line, out_line, prev_plotsize):\n","  # ------ vline entry & exit ------ #\n","  ep_tick = prev_plotsize\n","  open_tick = ep_tick - int(entry_idx - open_idx)\n","  # tp_tick = prev_plotsize + (exit_idx - entry_idx)\n","  tp_tick = ep_tick + int(exit_idx - entry_idx)\n","  plt.axvline(open_tick, alpha=1, linestyle='--', color='#ffeb3b')\n","  plt.axvline(ep_tick, alpha=1, linestyle='--', color='#ffeb3b')\n","  plt.axvline(tp_tick, alpha=1, linestyle='--', color='#ffeb3b')\n","\n","  # ------ hline entry & exit ------ #\n","  x0, x1 = plt.gca().get_xlim()\n","  ep_xmin = ep_tick / x1\n","  tp_xmin = tp_tick / x1\n","  plt.axhline(ep, linestyle='--', xmin=ep_xmin, xmax=1, alpha=1, color='lime')  # ep line axhline\n","  plt.text(x1, ep, ' ep :\\n {}'.format(ep), ha='left', va='center', fontweight='bold')  # ep line label\n","  plt.axhline(tp, linestyle='--', xmin=tp_xmin, xmax=1, alpha=1, color='lime')  # tp line axhline\n","  plt.text(x1, tp, ' tp :\\n {}'.format(tp), ha='left', va='center', fontweight='bold')  # tp line label\n","\n","  # ------ tpout_line ------ #\n","  plt.axhline(tp_line, linewidth=1, linestyle='-', alpha=1, color='#ffffff')\n","  plt.text(x0, tp_line, ' %s' % config.tr_set.tp_gap, ha='left', va='center', fontweight='bold')\n","  plt.axhline(out_line, linewidth=1, linestyle='-', alpha=1, color='#ffffff')\n","  plt.text(x0, out_line, ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","  return ep_tick"],"metadata":{"id":"ESReTMpP7SoO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### sync_check"],"metadata":{"id":"X0FsT-8FZRti"}},{"cell_type":"code","source":["save_plot = 0\n","\n","open_idx_range = reversed(range(0, len(res_df), 1000))\n","plot_range = 100\n","\n","x_max = 400\n","\n","inversion = 0\n","hedge = 0\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","\n","\n","h_candle_intv1 = 15\n","h_candle_intv2 = 60\n","if 'hopen_{}'.format(h_candle_intv2) not in res_df.columns:\n","  res_df = h_candle(res_df, h_candle_intv1)\n","  res_df = h_candle(res_df, h_candle_intv2)\n","\n","res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","\n","res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1_{}\".format(strat_version), \"short_tp_gap_{}\".format(strat_version), \"long_tp_1_{}\".format(strat_version), \"long_tp_gap_{}\".format(strat_version)]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1_{}\".format(strat_version), \"short_dtk_gap_{}\".format(strat_version), \"long_dtk_1_{}\".format(strat_version), \"long_dtk_gap_{}\".format(strat_version),\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2_{}'.format(strat_version), 'dc_lower_v2_{}'.format(strat_version)]\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hopen_%s' % h_candle_intv2, 'hclose_%s' % h_candle_intv2]\n","# hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hhigh_%s' % h_candle_intv2, 'hlow_%s' % h_candle_intv2]\n","\n","# --------------------- dc & bb level --------------------- #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","st_list = ['st_base_%s' % hhdc_interval, 'st_upper_%s' % hhdc_interval, 'st_lower_%s' % hhdc_interval]\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","bbwp_list = ['bbwp', 'bbwp_ma']\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_3m', 'sar_5m', 'sar_15m']\n","\n","ma_list = ['ma30_1m', 'ma60_1m']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_5m']\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# -------------- under price phase -------------- #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3']\n","# stoch_list = ['stoch_5m']\n","# fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","# cctbbo_list = ['cctbbo']\n","# emaroc_list = ['ema_roc']\n","rsi_list = ['rsi_%s' % config.loc_set.point.exp_itv] \n","cci_list = ['cci_%s' % config.loc_set.point.exp_itv] \n","\n","\n","# -------------- summation -------------- #\n","# input_colname = ohlc_list + basic_st_list + pline_list + bb_list + hbb_list + sma_list + cb_list + stoch_list + sar_list + dc_list\n","input_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dtk_list + dc_v2_list + rsi_list + ema_list + ma_list + st_list# + cci_list\n","\n","# yrange_colname = ohlc_list + basic_st_list + pline_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","\n","\n","\n","odd_cnt = 0\n","obj_i = -1\n","rev_obj_i = 0\n","\n","#   지금, continue 발생시 true / false idx 가 같이 상승하는 문제\n","\n","# while 1:\n","for open_idx in open_idx_range:\n","\n","  # if obj_i >= len_obj or rev_obj_i >= len_obj:\n","  #   break\n","\n","  # if odd_cnt % 2 == 1 and tf_plot: #  loss plot 을 채워야하는 상황\n","  #   rev_obj_i += 1\n","\n","  # else:\n","  #   obj_i += 1\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","  \n","\n","  odd_cnt += 1\n","\n","  # break\n","\n","  print(\"open_idx :\", open_idx)\n","  \n","  plot_df = res_df.iloc[open_idx - prev_plotsize:open_idx + plot_range + post_plotsize][input_colname]\n","  \n","  odds = 1 if odd_cnt % 2 == 1 else 2\n","  if odds == 1:\n","\n","    plt.style.use('dark_background')\n","\n","    fig = plt.figure(figsize=(26, 18))\n","    \n","    gs = gridspec.GridSpec(nrows=2, # row 몇 개 \n","                        ncols=2, # col 몇 개 \n","                        height_ratios=[3, 1]\n","                        )\n","    \n","  ax = fig.add_subplot(gs[odds - 1])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ---------- h_candle ---------- #\n","  alpha = 1\n","  lw = 1\n","  for cd_i, candle in enumerate(hcandle_list):\n","\n","    if cd_i == 2:\n","      lw = 2      \n","    plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.1\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","  #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  \n","\n","   # --------- ma --------- #\n","  alpha = 1\n","  lw = 2\n","  for ma_i, item in enumerate(ma_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","   # --------- ema --------- #\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(ema_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","    \n","   # --------- st --------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(st_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#00ff00', linewidth=lw)\n","\n","  # ---------------------- dc_v2 ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_v2_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- dc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- hdc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","\n","  # # ---------------------- hhdc ---------------------- #\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","\n","\n","  # # ---------------------- bb ---------------------- #\n","  # alpha = 1\n","  # lw = 1\n","  # for sm_i, item in enumerate(bb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","\n","  # # ---------------------- hbb ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  \n","  # # ---------------------- hhbb ---------------------- #\n","\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  \n","  # ------------------- dtk_line (old, tp_line) ------------------- #\n","  \n","  # alpha = 1\n","  # lw = 2\n","  # rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  \n","  # for rtc_k in rtc_ratio_list:    \n","  #   # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","  # alpha = 1\n","  # lw = 4\n","  # # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  # h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","  # # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  \n","  # for h_rtc_k in h_rtc_ratio_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","  # # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","\n","  # ------------- y lim ------------- #  \n","  y_max = max(np.max(plot_df[yrange_colname]))\n","  y_min = min(np.min(plot_df[yrange_colname]))\n","  # y_max = max(y_max, y_max_)\n","  # y_min = min(y_min, y_min_)\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  #           rsi          #    \n","  plt.subplot(gs[odds + 1])\n","  alpha = 1\n","  for rsi_ in rsi_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(50 + config.loc_set.point.osc_band, linestyle='--')\n","  plt.axhline(50 - config.loc_set.point.osc_band, linestyle='--')\n","  \n","  plt.axvline(prev_plotsize, linestyle='--')\n","  \n","  #           cci          #    \n","  # plt.subplot(gs[odds + 1])\n","  # alpha = 1\n","  # for cci_ in cci_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cci_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axhline(config.loc_set.point.osc_band, linestyle='--')\n","  # plt.axhline(-config.loc_set.point.osc_band, linestyle='--')\n","  \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","\n","\n","  if len(plot_df) > x_max:\n","    x_margin = x_max / 20\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","\n","  if not save_plot:\n","    if odds == 2:\n","      plt.show()\n","      plt.close()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  # plt.close()  \n","  print()\n","\n","  # break\n"],"metadata":{"id":"inQ6f-CDZYkr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"13a-U32Uy50I"},"source":["### brief np_pr survey"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L9LdjV2uUWnp"},"outputs":[],"source":["# plot_pr_list[:100]\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"TBE0l6dHRYrE"},"source":["### close & pr comp."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"elapsed":1436,"status":"ok","timestamp":1636355589887,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"-txULkhXRbz5","outputId":"7cda9fc7-4a4e-4c52-ffa3-a974b5f7c66f"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}],"source":["#     chunky survey 필요함    #\n","chunk_size = 50000\n","\n","sync_pr = np.ones(len(res_df))\n","sync_tr = np.zeros(len(res_df))\n","# sync_tr = np.empty(len(res_df))\n","# sync_tr[:] = np.nan\n","\n","max_tr = np.max(tp_ratio_list)\n","min_tr = np.min(tp_ratio_list)\n","\n","for ck_i in range(0, len(res_df), chunk_size):\n","\n","  chunked_df = res_df.iloc[ck_i:ck_i + chunk_size]\n","  # break\n","\n","  for pr_, eptp_idx, tr_ in zip(pr_list[ck_i:ck_i + chunk_size], trade_list[ck_i:ck_i + chunk_size], tp_ratio_list[ck_i:ck_i + chunk_size]):\n","    # print(pr_, eptp_idx)\n","    sync_pr[eptp_idx[-1][0]] = pr_\n","    sync_tr[eptp_idx[-1][0]] = tr_\n","    # break\n","\n","  chunked_pr = sync_pr[ck_i:ck_i + chunk_size]\n","  chunked_tr = sync_tr[ck_i:ck_i + chunk_size]\n","  chunked_tr = np.where(np.isnan(chunked_tr), pd.Series(chunked_tr).shift(1), chunked_tr)\n","\n","  # plt.figure(figsize=(8, 6))\n","\n","  plt.subplot(311)\n","  plt.plot(np.arange(len(chunked_df)), chunked_df['close'])\n","  # plt.show()\n","\n","  plt.subplot(312)\n","  plt.plot(np.cumprod(chunked_pr))\n","  \n","  plt.subplot(313)\n","  plt.plot(chunked_tr)\n","  plt.ylim(min_tr + 0.5 * (max_tr - min_tr), max_tr)\n","  \n","  plt.show()\n","  print()\n"]},{"cell_type":"markdown","metadata":{"id":"Qys2Bw5Ou3u9"},"source":["### plot indi. legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pi5ntOOVu6JT"},"outputs":[],"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  # ---------------------- sar ---------------------- #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cj9X6S1jJjER"},"source":["### plot nontp case"]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## legacy"]},{"cell_type":"markdown","metadata":{"id":"FaRGwR4NEop2"},"source":["### shifting"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a8aYsjEgQnGF"},"outputs":[],"source":["org_res_df = res_df.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":291,"status":"ok","timestamp":1626515312874,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"RF3RM2G2RCb1","outputId":"ba8f6a75-d4df-4f85-cd0f-190935341f7a"},"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272145    0.27005\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...   0.272145    0.27005\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...   0.272523    0.27021\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...   0.272523    0.27021\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...   0.272523    0.27021\n","\n","[5 rows x 37 columns]\n","                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272523    0.27021\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...        NaN        NaN\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...        NaN        NaN\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...        NaN        NaN\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...        NaN        NaN\n","\n","[5 rows x 37 columns]\n"]}],"source":["#         refresh res_df      #\n","res_df = org_res_df.copy()\n","print(org_res_df.tail(5))\n","\n","# break\n","\n","\n","shift_size = -4\n","# shift_size = -1\n","# shift_size = -7\n","# shift_size = +3\n","\n","res_df['min_upper'] = res_df['min_upper'].shift(shift_size)\n","res_df['max_lower'] = res_df['max_lower'].shift(shift_size)\n","res_df['minor_ST1_Trend'] = res_df['minor_ST1_Trend'].shift(shift_size)\n","res_df['minor_ST2_Trend'] = res_df['minor_ST2_Trend'].shift(shift_size)\n","res_df['minor_ST3_Trend'] = res_df['minor_ST3_Trend'].shift(shift_size)\n","res_df['middle_line'] = res_df['middle_line'].shift(shift_size)\n","\n","print(res_df.tail(5))"]},{"cell_type":"markdown","metadata":{"id":"2gxvme1PC6ha"},"source":["### load model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5831,"status":"ok","timestamp":1628862368878,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"dtYdAuSsC72_","outputId":"e8dccc53-aaa7-4bab-ed8d-753f634c08d6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n"]}],"source":["# model_name = 'inner_tick_cnnreg_lscalemm_prefee_gpu_%s_%s_%s_%s_%s.h5'\n","\n","# model = tf.keras.models.load_model(ckpt_path + model_name)\n","\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","\n","model = ResNet50(weights='imagenet', include_top=False)\n","# model.summary()\n"]},{"cell_type":"markdown","metadata":{"id":"5la6usMOFzkX"},"source":["#### gen selected vector"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oQk3-jbKF8FB"},"outputs":[],"source":["def min_max_scale(npy_x):\n","\n","  return (npy_x - np.min(npy_x)) / (np.max(npy_x) - np.min(npy_x))\n","\n","def expand_dims(npy_x):\n","\n","  row, col = npy_x.shape\n","  npy_x2 = np.array(npy_x).reshape(-1, row, col, 1).astype(np.float32)\n","  # input_x = np.array(data_x).reshape(-1, row, col).astype(np.float32)\n","\n","  #     1c to 3c    #\n","  npy_x3 = npy_x2 * np.ones(3, dtype=np.float32)[None, None, None, :]\n","\n","  return npy_x3\n","\n","\n","def vector_dist(f1, f2):\n","  return np.linalg.norm(f1-f2)\n","\n","\n","\n","# ------------------------ params ------------------------  #\n","selected_i = 500\n","input_size = 100\n","\n","\n","\n","#   1. 선택된 인덱스를 입력받았을 때, input generating 형태만 만들어놓고,     #\n","#   1-1. input cols 필요함    #\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","sma_list = ['sma']\n","\n","#     -------------- outer price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","\n","selected_price_colname = basic_list + senkoua_list + senkoub_list + sar_list\n","selected_outprice_colname = [macd_list]\n","\n","\n","#         global scaling for outer price data       #\n","#         1. nan 처리       #\n","\n","# # print((np.isnan(df.values)))\n","# print(\"np.sum(np.isnan(df.values), axis=0) :\", np.sum(np.isnan(df.values), axis=0))\n","\n","# max_nan = np.max(np.sum(np.isnan(df.values), axis=0))\n","# # print(max_nan)\n","\n","# df = df.iloc[max_nan:-max_nan]\n","\n","# total_gdata = []\n","# for g_col in selected_outprice_colname:\n","\n","#   temp_data = min_max_scale(res_df[g_col])\n","#   total_gdata.append(temp_data)\n","\n","\n","\n","#   1-2. cols 에 따른, scaling method 구분함    #\n","onprice_input_x = min_max_scale(res_df[selected_price_colname].iloc[selected_i - input_size:selected_i].values)\n","print(onprice_input_x.shape)\n","\n","\n","#   2. plot_check 에서 본인이 원하는 shape 의 인덱스를 선택   #\n","#   3. vertorize, \n","#   3-1. input generator 를 이용해 entry signal 발생할 때마다 dist 비교 진행    #\n","re_onprice_input_x = expand_dims(onprice_input_x)\n","print(re_onprice_input_x.shape)\n","      \n","# break\n","\n","selected_vector = model.predict(re_onprice_input_x, verbose=1)\n","print(selected_vector.shape)"]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gcpo4MGd9Wm4"},"outputs":[],"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   단리    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"복리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   복리 tr_thresh  #\n","#   1. trade_num 에 영향 받지 않음\n","#   2. loss_gap 에 비례함\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"단리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["Ic1mfmwWCIBu","AUSBU7T8Suzi","mEKyVbHWSuzi","VdukVo5-Suzj","Bw5JibDKSuzj","Pe0QpnORSuzk","4oZ1ohTtSuzk","E0n53hflJbnp","jTN3M842Suzl","MlFkpO1MSuzl","t1E_eAyPSuzm","nUs4fjVHSuzl","WVAKq3i8Suzm","L7l5CTJfSuzn","x_XGJqBi8Jex","MSUY4nnku3s9","epgS5Dksu-HX","M8-EChy0VsDr","xpyP5t8Ht_pE","dzla8i9_ysmP","EFyWTuscH8VH","zhZuT7pbCj4h","Up1TNNxbfKbk","zQ-roiifspcX","MQ8w8nWVXlGj","13a-U32Uy50I","TBE0l6dHRYrE","tApzvz_gK9lR","FaRGwR4NEop2","2gxvme1PC6ha","5la6usMOFzkX","OJqkmkpsLCYC"],"name":"IDv3_1_vec_backi2(0301).ipynb","toc_visible":true,"provenance":[],"authorship_tag":"ABX9TyMOO8zzuoxU8D9mQRQxjxYx"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}