{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"AT_v5_backi2(1203_limit_latestcfg).ipynb","provenance":[{"file_id":"1z4z_KLPzc6RWsxo3X_dHbpByxUAgjoMJ","timestamp":1583754134002}],"collapsed_sections":["Iy76iO7gztne","Ci_jUnNTZbm9","VdukVo5-Suzj","Bw5JibDKSuzj","Pe0QpnORSuzk","MlFkpO1MSuzl","nUs4fjVHSuzl","o-XjNS1L31YB","FxJ1y8v2fkCR","VBwVaUkvfnOd","tApzvz_gK9lR","5la6usMOFzkX","OJqkmkpsLCYC","59nW2aKYzkN8","cj9X6S1jJjER","-g7YY5BvMcLS","7AIl6EBuZNOL"],"toc_visible":true},"kernelspec":{"display_name":"Python [conda env:tensorflow2_p36]","language":"python","name":"conda-env-tensorflow2_p36-py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"widgets":{"application/vnd.jupyter.widget-state+json":{"be2b848dbcb14a079a2b7bd605af6435":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_2c7696db44fa402eafb2540c7a72d68c","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_502ec9042bab443e9407803d9ada1031","IPY_MODEL_75511cdf82714fb7be5b8688e396f69b","IPY_MODEL_b54d2eb7584d43e2916f69174d6e391d"]}},"2c7696db44fa402eafb2540c7a72d68c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"502ec9042bab443e9407803d9ada1031":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_7abd42b3c95c48ac910b581b74ba9b57","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 88%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a742f61210f24d949aeb1b9f5cd1f6a5"}},"75511cdf82714fb7be5b8688e396f69b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_2ff55a21df7742519b138ca795ec3f6d","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":156,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":137,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_9e7f44d996a341a19bf22f806da4756d"}},"b54d2eb7584d43e2916f69174d6e391d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_5552df18053d4d1294ea6a4185afee6e","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 137/156 [00:30&lt;00:05,  3.67it/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_196b72f68ba948ef96093981fbcd195f"}},"7abd42b3c95c48ac910b581b74ba9b57":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"a742f61210f24d949aeb1b9f5cd1f6a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2ff55a21df7742519b138ca795ec3f6d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"9e7f44d996a341a19bf22f806da4756d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5552df18053d4d1294ea6a4185afee6e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"196b72f68ba948ef96093981fbcd195f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6bad58fd9fdd4ac78f298f39469f4392":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_71cfdfdb3abb4c92972675b209a07589","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7ecf501ccc754dac94645c379df98856","IPY_MODEL_c89a694e02c84f68a786544670237a8f","IPY_MODEL_f09c9ac6a49b4f3b8dab8814a4a6e4c5"]}},"71cfdfdb3abb4c92972675b209a07589":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7ecf501ccc754dac94645c379df98856":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_f0cc0fb5650543de8db46523dfe19e47","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"  2%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_99ac1a92a07b4d6c9d2d8068f233ae1f"}},"c89a694e02c84f68a786544670237a8f":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_987d9d0ecbfb42d6af1c42e9ee86253d","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"","max":91,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":2,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4ea6f05bb1174a26b1e6e049c6a5120d"}},"f09c9ac6a49b4f3b8dab8814a4a6e4c5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_731e40beab684787a5f8e86c2cbd31bc","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 2/91 [07:33&lt;5:37:41, 227.66s/it]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_608a8945b1404a9da5a41c46b9208819"}},"f0cc0fb5650543de8db46523dfe19e47":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"99ac1a92a07b4d6c9d2d8068f233ae1f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"987d9d0ecbfb42d6af1c42e9ee86253d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"4ea6f05bb1174a26b1e6e049c6a5120d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"731e40beab684787a5f8e86c2cbd31bc":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"608a8945b1404a9da5a41c46b9208819":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AK9FjWwLOyay","executionInfo":{"status":"ok","timestamp":1638574594722,"user_tz":-540,"elapsed":20588,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"4a87bf38-77c6-4952-8dd0-1a79d0a74a25"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"8uqYv5StTazo"},"source":["# requirements"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9qGt60DKTZmf","executionInfo":{"status":"ok","timestamp":1638574619503,"user_tz":-540,"elapsed":24785,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"10fb748e-ebdb-4132-e898-ac49390289cd"},"source":["!pip install mpl_finance\n","# !pip install findiff\n","\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","from tqdm.notebook import tqdm\n","from funcs_indicator import *\n","from funcs_for_trade import *\n","\n","import mpl_finance as mf\n","import os\n","import datetime\n","\n","import IPython\n","import IPython.display\n","import matplotlib as mpl\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","import seaborn as sns\n","# import tensorflow as tf\n","\n","import pickle\n","import shutil\n","# import json\n","from easydict import EasyDict\n","\n","# from trendln import trendln\n","\n","from datetime import datetime\n","import random\n","import time\n","\n","# mpl.rcParams['figure.figsize'] = (8, 6)\n","# mpl.rcParams['axes.grid'] = False\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting mpl_finance\n","  Downloading mpl_finance-0.10.1-py3-none-any.whl (8.4 kB)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from mpl_finance) (3.2.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mpl_finance) (3.0.6)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mpl_finance) (2.8.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mpl_finance) (0.11.0)\n","Requirement already satisfied: numpy>=1.11 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mpl_finance) (1.19.5)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->mpl_finance) (1.3.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib->mpl_finance) (1.15.0)\n","Installing collected packages: mpl-finance\n","Successfully installed mpl-finance-0.10.1\n"]}]},{"cell_type":"markdown","metadata":{"id":"Iy76iO7gztne"},"source":["## move legacy files"]},{"cell_type":"code","metadata":{"id":"hMRht32Czwry"},"source":["# print()\n","cur_dir_list = os.listdir('.')\n","for f in cur_dir_list:\n","  if 'legacy' in f :\n","    # print(f)\n","    if os.path.isdir(current_path + f,):\n","      continue\n","\n","    shutil.move(current_path + f, current_path + 'legacy/' + f)\n","    print(\"moved to\" + current_path + 'legacy/' +  f)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset"]},{"cell_type":"markdown","metadata":{"id":"Ci_jUnNTZbm9"},"source":["## load data"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bXyS2yrZYC6","executionInfo":{"status":"ok","timestamp":1638246127510,"user_tz":-540,"elapsed":22503,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"b24a8a66-48b1-42b5-aa79-63f5a8542bac"},"source":["interval = '1m'\n","date_path = './candlestick_concated/%s/quant_v2/' % interval\n","file_list = os.listdir(date_path)\n","print((file_list))\n","\n","interval2 = '3m'\n","date_path2 = './candlestick_concated/%s/quant_v2/' % interval2\n","file_list2 = os.listdir(date_path2)\n","print((file_list2))\n","\n","interval3 = '5m'\n","date_path3 = './candlestick_concated/%s/quant_v2/' % interval3\n","file_list3 = os.listdir(date_path3)\n","print((file_list3))\n","\n","interval4 = '15m'\n","date_path4 = './candlestick_concated/%s/quant_v2/' % interval4\n","file_list4 = os.listdir(date_path4)\n","print((file_list4))\n","\n","interval5 = '30m'\n","date_path5 = './candlestick_concated/%s/quant_v2/' % interval5\n","file_list5 = os.listdir(date_path5)\n","print((file_list5))\n","\n","interval6 = '1h'\n","date_path6 = './candlestick_concated/%s/quant_v2/' % interval6\n","file_list6 = os.listdir(date_path6)\n","print((file_list6))\n","\n","interval7 = '4h'\n","date_path7 = './candlestick_concated/%s/quant_v2/' % interval7\n","file_list7 = os.listdir(date_path7)\n","print((file_list7))\n","\n","interval8 = '1d'\n","date_path8 = './candlestick_concated/%s/quant_v2/' % interval8\n","file_list8 = os.listdir(date_path8)\n","print((file_list8))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 LTCUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 ETHUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-08-31 SUSHIUSDT.xlsx', '2021-08-31 CVCUSDT.xlsx', '2021-08-31 BTSUSDT.xlsx', '2021-08-31 HOTUSDT.xlsx', '2021-08-31 ZRXUSDT.xlsx', '2021-08-31 QTUMUSDT.xlsx', '2021-08-31 IOTAUSDT.xlsx', '2021-08-31 BTCBUSD.xlsx', '2021-08-31 WAVESUSDT.xlsx', '2021-08-31 ADAUSDT.xlsx', '2021-08-31 LITUSDT.xlsx', '2021-08-31 XTZUSDT.xlsx', '2021-08-31 BNBUSDT.xlsx', '2021-08-31 AKROUSDT.xlsx', '2021-08-31 HNTUSDT.xlsx', '2021-08-31 ETCUSDT.xlsx', '2021-08-31 XMRUSDT.xlsx', '2021-08-31 YFIUSDT.xlsx', '2021-08-31 ETHUSDT.xlsx', '2021-08-31 ALICEUSDT.xlsx', '2021-08-31 ALPHAUSDT.xlsx', '2021-08-31 SFPUSDT.xlsx', '2021-08-31 REEFUSDT.xlsx', '2021-08-31 BATUSDT.xlsx', '2021-08-31 DOGEUSDT.xlsx', '2021-08-31 TRXUSDT.xlsx', '2021-08-31 RLCUSDT.xlsx', '2021-08-31 BTCSTUSDT.xlsx', '2021-08-31 STORJUSDT.xlsx', '2021-08-31 SNXUSDT.xlsx', '2021-08-31 XLMUSDT.xlsx', '2021-08-31 NEOUSDT.xlsx', '2021-08-31 UNFIUSDT.xlsx', '2021-08-31 SANDUSDT.xlsx', '2021-08-31 DASHUSDT.xlsx', '2021-08-31 KAVAUSDT.xlsx', '2021-08-31 RUNEUSDT.xlsx', '2021-08-31 CTKUSDT.xlsx', '2021-08-31 LINKUSDT.xlsx', '2021-08-31 CELRUSDT.xlsx', '2021-08-31 RSRUSDT.xlsx', '2021-08-31 DGBUSDT.xlsx', '2021-08-31 SKLUSDT.xlsx', '2021-08-31 RENUSDT.xlsx', '2021-08-31 TOMOUSDT.xlsx', '2021-08-31 MTLUSDT.xlsx', '2021-08-31 LTCUSDT.xlsx', '2021-08-31 DODOUSDT.xlsx', '2021-08-31 EGLDUSDT.xlsx', '2021-08-31 KSMUSDT.xlsx', '2021-08-31 ONTUSDT.xlsx', '2021-08-31 VETUSDT.xlsx', '2021-08-31 TRBUSDT.xlsx', '2021-08-31 MANAUSDT.xlsx', '2021-08-31 COTIUSDT.xlsx', '2021-08-31 CHRUSDT.xlsx', '2021-08-31 ETHUSDT_210924.xlsx', '2021-08-31 BAKEUSDT.xlsx', '2021-08-31 GRTUSDT.xlsx', '2021-08-31 FLMUSDT.xlsx', '2021-08-31 EOSUSDT.xlsx', '2021-08-31 OGNUSDT.xlsx', '2021-08-31 SCUSDT.xlsx', '2021-08-31 BALUSDT.xlsx', '2021-08-31 STMXUSDT.xlsx', '2021-08-31 BTTUSDT.xlsx', '2021-08-31 LUNAUSDT.xlsx', '2021-08-31 DENTUSDT.xlsx', '2021-08-31 KNCUSDT.xlsx', '2021-08-31 SRMUSDT.xlsx', '2021-08-31 ENJUSDT.xlsx', '2021-08-31 ZENUSDT.xlsx', '2021-08-31 ATOMUSDT.xlsx', '2021-08-31 NEARUSDT.xlsx', '2021-08-31 BCHUSDT.xlsx', '2021-08-31 IOSTUSDT.xlsx', '2021-08-31 HBARUSDT.xlsx', '2021-08-31 ZECUSDT.xlsx', '2021-08-31 1000SHIBUSDT.xlsx', '2021-08-31 TLMUSDT.xlsx', '2021-08-31 BZRXUSDT.xlsx', '2021-08-31 ETHBUSD.xlsx', '2021-08-31 AAVEUSDT.xlsx', '2021-08-31 GTCUSDT.xlsx', '2021-08-31 ALGOUSDT.xlsx', '2021-08-31 ICPUSDT.xlsx', '2021-08-31 BTCUSDT_210924.xlsx', '2021-08-31 LRCUSDT.xlsx', '2021-08-31 AVAXUSDT.xlsx', '2021-08-31 MATICUSDT.xlsx', '2021-08-31 1INCHUSDT.xlsx', '2021-08-31 MKRUSDT.xlsx', '2021-08-31 THETAUSDT.xlsx', '2021-08-31 UNIUSDT.xlsx', '2021-08-31 LINAUSDT.xlsx', '2021-08-31 RVNUSDT.xlsx', '2021-08-31 FILUSDT.xlsx', '2021-08-31 NKNUSDT.xlsx', '2021-08-31 DEFIUSDT.xlsx', '2021-08-31 COMPUSDT.xlsx', '2021-08-31 BTCDOMUSDT.xlsx', '2021-08-31 SOLUSDT.xlsx', '2021-08-31 BTCUSDT.xlsx', '2021-08-31 OMGUSDT.xlsx', '2021-08-31 ICXUSDT.xlsx', '2021-08-31 BLZUSDT.xlsx', '2021-08-31 FTMUSDT.xlsx', '2021-08-31 YFIIUSDT.xlsx', '2021-08-31 KEEPUSDT.xlsx', '2021-08-31 BANDUSDT.xlsx', '2021-08-31 XRPUSDT.xlsx', '2021-08-31 SXPUSDT.xlsx', '2021-08-31 CRVUSDT.xlsx', '2021-08-31 BELUSDT.xlsx', '2021-08-31 DOTUSDT.xlsx', '2021-08-31 XEMUSDT.xlsx', '2021-08-31 ONEUSDT.xlsx', '2021-08-31 ZILUSDT.xlsx', '2021-08-31 AXSUSDT.xlsx', '2021-08-31 OCEANUSDT.xlsx', '2021-08-31 CHZUSDT.xlsx', '2021-08-31 ANKRUSDT.xlsx', '2021-08-31 SUSHIUSDT_res_dfs.pkl', '2021-07-01 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-02-07 BTC.xlsx', '2021-02-07 ETH.xlsx', '2021-02-11 BCHUSDT.xlsx', '2021-02-11 XRPUSDT.xlsx', '2021-02-11 EOSUSDT.xlsx', '2021-02-11 LTCUSDT.xlsx', '2021-02-11 ETCUSDT.xlsx', '2021-02-11 LINKUSDT.xlsx', '2021-02-11 XLMUSDT.xlsx', '2021-02-11 ADAUSDT.xlsx', '2021-02-11 XMRUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr']\n","['2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx']\n"]}]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## basic_func"]},{"cell_type":"code","metadata":{"id":"QmhLikYlSuzi"},"source":["def sync_check(df, second_df=None, third_df=None, fourth_df=None, fifth_df=None,\n","               sixth_df=None, seventh_df=None, eighth_df=None):\n","\n","    #           supertrend          #\n","    # df = st_price_line(df, second_df, '3m')\n","    # # print(df.head(100))\n","    # # return\n","\n","    # df = st_price_line(df, third_df, '5m')\n","    # df = st_price_line(df, fourth_df, '15m')\n","    # df = st_price_line(df, fifth_df, '30m')\n","    # df = st_price_line(df, sixth_df, '1h')\n","    # df = st_price_line(df, seventh_df, '4h')\n","\n","    # print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    df['rsi_1m'] = rsi(df, 14)\n","    \n","    print(\"rsi phase done\")\n","\n","    # --------------- ema --------------- #  \n","    \n","    third_df['cloud_bline_5m'] = cloud_bline(third_df, 26)\n","    df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1]), columns=['cloud_bline_5m']))\n","    \n","    print(\"ema phase done\")\n","\n","\n","    # # --------------- dc --------------- #  \n","    # df = dc_line(df, None, '1m', dc_period=20)\n","    # df = dc_line(df, second_df, '3m', dc_period=20)\n","    # df = dc_line(df, third_df, '5m', dc_period=20)\n","    # df = dc_line(df, fourth_df, '15m', dc_period=20)\n","    # df = dc_line(df, fifth_df, '30m', dc_period=20)\n","    # df = dc_line(df, sixth_df, '1h', dc_period=20)\n","    # df = dc_line(df, seventh_df, '4h', dc_period=20)\n","\n","    # print(\"dc phase done\")\n","    \n","    # # --------------- bband --------------- #  \n","    # df = bb_line(df, None, '1m')\n","    # df = bb_line(df, second_df, '3m')\n","    # df = bb_line(df, third_df, '5m')\n","    # df = bb_line(df, fourth_df, '15m')\n","    # df = bb_line(df, fifth_df, '30m')\n","    # df = bb_line(df, sixth_df, '1h')\n","    # df = bb_line(df, seventh_df, '4h')\n","\n","    # print(\"bband phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # second_df['cloud_bline_3m'] = cloud_bline(second_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, second_df, [-1]), columns=['cloud_bline_3m']))\n","    # third_df['cloud_bline_5m'] = cloud_bline(third_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1]), columns=['cloud_bline_5m']))\n","    # fourth_df['cloud_bline_15m'] = cloud_bline(fourth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fourth_df, [-1]), columns=['cloud_bline_15m']))\n","    # fifth_df['cloud_bline_30m'] = cloud_bline(fifth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fifth_df, [-1]), columns=['cloud_bline_30m']))\n","    # sixth_df['cloud_bline_1h'] = cloud_bline(sixth_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, sixth_df, [-1]), columns=['cloud_bline_1h']))\n","    # seventh_df['cloud_bline_4h'] = cloud_bline(seventh_df, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, seventh_df, [-1]), columns=['cloud_bline_4h']))\n","\n","    # print(\"cbline phase done\")\n","    \n","\n","    #           lucid sar              #\n","    # df['sar_1m'], df['sar_uptrend_1m'] = lucid_sar(df, return_uptrend=True)\n","\n","    # third_df['sar_5m'], third_df['sar_uptrend_5m'] = lucid_sar(third_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-2, -1], backing_i=-1), columns=['sar_5m', 'sar_uptrend_5m']))\n","\n","    # fourth_df['sar_15m'], fourth_df['sar_uptrend_15m'] = lucid_sar(fourth_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, fourth_df, [-2, -1], backing_i=-1), columns=['sar_15m', 'sar_uptrend_15m']))\n","\n","    # seventh_df['sar_4h'], seventh_df['sar_uptrend_4h'] = lucid_sar(seventh_df, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, seventh_df, [-2, -1], backing_i=-1), columns=['sar_4h', 'sar_uptrend_4h']))\n","    \n","    # print(\"sar phase done\")\n","\n","    \n","    #           stochastic              #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # third_df['stoch'] = stoch(third_df, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf(df, third_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat 생각하면, timeindex sync 맞춰야함)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khKb9nhlSuzj","executionInfo":{"elapsed":11,"status":"error","timestamp":1636201718856,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"02bf2c60-f298-4fe9-e6bb-78230ac1348c"},"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"],"execution_count":null,"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ee034491b257>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0ma_day\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3600\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m24\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtqdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mkeys\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_list' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355,"referenced_widgets":["be2b848dbcb14a079a2b7bd605af6435","2c7696db44fa402eafb2540c7a72d68c","502ec9042bab443e9407803d9ada1031","75511cdf82714fb7be5b8688e396f69b","b54d2eb7584d43e2916f69174d6e391d","7abd42b3c95c48ac910b581b74ba9b57","a742f61210f24d949aeb1b9f5cd1f6a5","2ff55a21df7742519b138ca795ec3f6d","9e7f44d996a341a19bf22f806da4756d","5552df18053d4d1294ea6a4185afee6e","196b72f68ba948ef96093981fbcd195f"]},"id":"VA-_gcA7Suzj","outputId":"f6f3b55d-ec2c-4b2c-d62e-3de7c0384dc4"},"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be2b848dbcb14a079a2b7bd605af6435","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/156 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n","DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n"]}]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223,"referenced_widgets":["e3225655da874b8d89cc8b2a381b3fb6","217018421aa4406ea11f3c655977fc8c","25c09f6fad2b4f55aa5fcef70e109d7b","d6c715e951a04deb9b24cae42cd617cd","39059d3e2a784c5bacd763cde041fe84","8a7f1067082340aab3089c189ef2f110","00d5dc71b69045c887d09ff7cef9db2a","6fdae6e1b4e34e7bbc3aae8dcb3824ba","066f75e5dacf44b7b63d5b2a94c9e5a0","ea978679ff5b45d6a979d154bb51fbb1","03e244d79cae4b8b92bb09cc38a6f495"]},"id":"M-gl30KxSuzk","executionInfo":{"status":"ok","timestamp":1638246331122,"user_tz":-540,"elapsed":43664,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"1cfcb580-8d25-4bd0-fdd0-213640779ce2"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3225655da874b8d89cc8b2a381b3fb6","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/175 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BCHUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XRPUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 EOSUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LINKUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XLMUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ADAUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETHUSDT_1m.ftr\n"]}]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["6bad58fd9fdd4ac78f298f39469f4392","71cfdfdb3abb4c92972675b209a07589","7ecf501ccc754dac94645c379df98856","c89a694e02c84f68a786544670237a8f","f09c9ac6a49b4f3b8dab8814a4a6e4c5","f0cc0fb5650543de8db46523dfe19e47","99ac1a92a07b4d6c9d2d8068f233ae1f","987d9d0ecbfb42d6af1c42e9ee86253d","4ea6f05bb1174a26b1e6e049c6a5120d","731e40beab684787a5f8e86c2cbd31bc","608a8945b1404a9da5a41c46b9208819"]},"id":"vgVHpnUsSuzk","executionInfo":{"status":"ok","timestamp":1638194462386,"user_tz":-540,"elapsed":2303199,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"d4f63496-a2b8-4629-861f-2f9e5e6174a8"},"source":["# db_path = './candlestick_concated/database_ub/'\n","db_path = './candlestick_concated/database_bn/'\n","\n","file_list = os.listdir(os.path.join(db_path, \"cum\")))\n","\n","save_path = './candlestick_concated/res_df/'\n","save_dir_path = \"rsi_backi2\"\n","# save_dir_path = \"bbdc3m_backi2\"\n","date = '2021-11-17'\n","\n","save_path = os.path.join(save_path, save_dir_path, 'noncat/cum', date)\n","os.makedirs(save_path, exist_ok=True)\n","\n","exist_list = os.listdir(save_path)\n","# break\n","\n","interval = '1m'\n","interval2 = '3m'\n","interval3 = '5m'\n","interval4 = '15m'\n","interval5 = '30m'\n","interval6 = '1h'\n","interval7 = '4h'\n","interval8 = '1d'\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    end_indexes = []\n","    \n","    df = pd.read_feather(db_path + key, columns=None, use_threads=True).set_index(\"index\")\n","    second_df = pd.read_feather(db_path + key.replace(interval, interval2), columns=None, use_threads=True).set_index(\"index\")\n","    third_df = pd.read_feather(db_path + key.replace(interval, interval3), columns=None, use_threads=True).set_index(\"index\")\n","    fourth_df = pd.read_feather(db_path + key.replace(interval, interval4), columns=None, use_threads=True).set_index(\"index\")\n","    fifth_df = pd.read_feather(db_path + key.replace(interval, interval5), columns=None, use_threads=True).set_index(\"index\")\n","        \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    end_indexes.append(df.index[-1])\n","    end_indexes.append(second_df.index[-1])\n","    end_indexes.append(third_df.index[-1])\n","    end_indexes.append(fourth_df.index[-1])\n","    end_indexes.append(fifth_df.index[-1])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_feather(db_path + key.replace(interval, interval6), columns=None, use_threads=True).set_index(\"index\")\n","      seventh_df = pd.read_feather(db_path + key.replace(interval, interval7), columns=None, use_threads=True).set_index(\"index\")\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","      end_indexes.append(sixth_df.index[-1])\n","      end_indexes.append(seventh_df.index[-1])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    recent_end_index = sorted(end_indexes)[0]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    end_ts = datetime.timestamp(recent_end_index)\n","    recent_end_index_1m = datetime.fromtimestamp(end_ts - a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    if \"999000\" in str(df.index[-1]):\n","      # end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","      end_index = pd.to_datetime(str(recent_end_index_1m).split(\" \")[0] + \" 08:59:59.999000\")\n","    else:\n","      # end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 09:00:00\")\n","      end_index = pd.to_datetime(str(recent_end_index_1m).split(\" \")[0] + \" 09:00:00\")\n","      # end_index = pd.to_datetime(\"2021-11-15\" + \" 09:00:00\")\n","\n","    #   ***** 1m open_idx 는 htf 보다 커야함 --> to_lower_tf 를 사용하기 위함임   #\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    # res_df.to_feather(feather_path)\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_name, \"saved succesfully !\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6bad58fd9fdd4ac78f298f39469f4392","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0/91 [00:00<?, ?it/s]"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["2021-11-17 ETHUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:47:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n"]},{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs_indicator.py:228: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  ltf_df[dc_upper], ltf_df[dc_lower], ltf_df[dc_base] = donchian_channel(ltf_df, dc_period)\n","/content/drive/My Drive/Colab Notebooks/JnQ/funcs_indicator.py:223: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  htf_df[dc_upper], htf_df[dc_lower], htf_df[dc_base] = donchian_channel(htf_df, dc_period)\n"]},{"output_type":"stream","name":"stdout","text":["dc phase done\n"]},{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs_indicator.py:264: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  htf_df[bb_upper], htf_df[bb_lower], _ = bb_width(htf_df, 20, 1)\n"]},{"output_type":"stream","name":"stdout","text":["bband phase done\n","2021-11-17 ETHUSDT.ftr saved succesfully !\n","2021-11-17 BTCUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:47:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 BTCUSDT.ftr saved succesfully !\n","2021-11-17 ETCUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:47:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 ETCUSDT.ftr saved succesfully !\n","2021-11-17 ADAUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:48:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 ADAUSDT.ftr saved succesfully !\n","2021-11-17 XLMUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:48:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 XLMUSDT.ftr saved succesfully !\n","2021-11-17 LINKUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:49:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:53:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 LINKUSDT.ftr saved succesfully !\n","2021-11-17 LTCUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:49:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:56:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 LTCUSDT.ftr saved succesfully !\n","2021-11-17 EOSUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:50:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:56:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 EOSUSDT.ftr saved succesfully !\n","2021-11-17 XRPUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:50:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:56:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 XRPUSDT.ftr saved succesfully !\n","2021-11-17 BCHUSDT.ftr already exist !\n","DatetimeIndex(['2021-10-04 00:00:59.999000', '2021-11-17 00:51:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:02:59.999000', '2021-11-17 00:56:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:04:59.999000', '2021-11-17 00:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:14:59.999000', '2021-11-17 01:14:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:29:59.999000', '2021-11-17 01:29:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 00:59:59.999000', '2021-11-17 01:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-17 04:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","\n","sliced index\n","DatetimeIndex(['2021-10-05 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","DatetimeIndex(['2021-10-04 04:59:59.999000', '2021-11-16 08:59:59.999000'], dtype='datetime64[ns]', name='index', freq=None)\n","dc phase done\n","bband phase done\n","2021-11-17 BCHUSDT.ftr saved succesfully !\n"]}]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","metadata":{"id":"U-3QkfbFSuzl"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","metadata":{"id":"6cu-Y82iSuzl"},"source":["\n","# concat_dir = \"concat\"\n","# cum_dir = \"cum\"\n","\n","new_dir_path = \"bbdc3m_backi2\"\n","base_dir_path = \"sar15m4h_backi2\"\n","\n","new_date = \"2021-07-01\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)\n","os.makedirs(, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat\", \"noncat\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","  res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  # res_df_dict[key] = res_df\n","  # res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved !\")\n","\n","  # #     save with pickle    #\n","  # with open(save_path + dict_name, 'wb') as f:\n","  #   pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4GiF2NJPSuzm"},"source":["print(base_df['dc_upper_5m'].tail(50))\n","print(res_df['dc_upper_5m'].tail(50))\n","# droped_new_res_df.tail()\n","# new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","#   # new_res_df.head()\n","\n","# droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","# droped_new_res_df.head()\n","# break"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","metadata":{"id":"xyI5NrM7Suzm"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  # res_df_dict[key] = res_df\n","  # res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved !\")\n","\n","  # #     save with pickle    #\n","  # with open(save_path + dict_name, 'wb') as f:\n","  #   pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XG2p9OhhSuzm","executionInfo":{"status":"ok","timestamp":1638194533019,"user_tz":-540,"elapsed":39892,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"d3aa5eaa-93b0-4824-c35e-bd613cc64d60"},"source":["save_path = './candlestick_concated/res_df/'\n","# save_path = './candlestick_concated/database_bn/'\n","\n","new_date = '2021-11-17'\n","base_date = '2021-10-10'\n","\n","#     load ftr list    #\n","if \"database\" in save_path:\n","  dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  dir_path = \"bbdc3m_backi2\"\n","  concat_dir = \"concat\"\n","\n","base_date_path = os.path.join(save_path, dir_path, concat_dir, \"cum\", base_date)    # --> base 도 non_cum 가능함\n","new_date_path = os.path.join(save_path, dir_path, concat_dir, \"non_cum\", new_date)\n","  \n","\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat 두가지 경우 존재가능할 것\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  # res_df_dict[key] = res_df\n","  # res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved !\")\n","\n","  # #     save with pickle    #\n","  # with open(save_path + dict_name, 'wb') as f:\n","  #   pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-17 ETHUSDT.ftr', '2021-11-17 BTCUSDT.ftr', '2021-11-17 ETCUSDT.ftr', '2021-11-17 ADAUSDT.ftr', '2021-11-17 XLMUSDT.ftr', '2021-11-17 LINKUSDT.ftr', '2021-11-17 LTCUSDT.ftr', '2021-11-17 EOSUSDT.ftr', '2021-11-17 XRPUSDT.ftr', '2021-11-17 BCHUSDT.ftr']\n","2021-11-17 ETHUSDT.ftr saved !\n","2021-11-17 BTCUSDT.ftr saved !\n","2021-11-17 ETCUSDT.ftr saved !\n","2021-11-17 ADAUSDT.ftr saved !\n","2021-11-17 XLMUSDT.ftr saved !\n","2021-11-17 LINKUSDT.ftr saved !\n","2021-11-17 LTCUSDT.ftr saved !\n","2021-11-17 EOSUSDT.ftr saved !\n","2021-11-17 XRPUSDT.ftr saved !\n","2021-11-17 BCHUSDT.ftr saved !\n"]}]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["#### check continuity"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-swyIeZ-DG85","executionInfo":{"status":"ok","timestamp":1638195306902,"user_tz":-540,"elapsed":651,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"bdd04636-c1fe-4828-8e3f-3ab8fc186a1f"},"source":["\"bb_lower_1m\" in droped_new_res_df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nGzMGyC3Suzn","executionInfo":{"status":"ok","timestamp":1638195023822,"user_tz":-540,"elapsed":2664,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"652c0099-78f8-49c1-a3d1-18ddb205068e"},"source":["\n","# print(droped_new_res_df.columns)\n","# print()\n","# # break\n","\n","# print(base_df.tail().iloc[:, 0])\n","# print(droped_new_res_df.iloc[len(base_df) - 1:len(base_df) + 100, 0].head())\n","\n","\n","# #     check deserialized ts_idex    #\n","# ts_index = pd.Series(list(map(lambda x : datetime.timestamp(x), droped_new_res_df.index)))\n","\n","# for i in range(1, len(ts_index)):\n","#   if ts_index[i - 1] > ts_index[i]:\n","#     print(ts_index[i - 1] , ts_index[i])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.59936840e+09 1.59936846e+09 1.59936852e+09 1.59936858e+09\n"," 1.59936864e+09 1.59936870e+09 1.59936876e+09 1.59936882e+09\n"," 1.59936888e+09 1.59936894e+09]\n"]}]},{"cell_type":"markdown","metadata":{"id":"qNGeuYuGDXfv"},"source":["# pr check with strategy"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7FPBG5Qqg2jB","executionInfo":{"status":"ok","timestamp":1638574621228,"user_tz":-540,"elapsed":1735,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"e03fc65d-cc6e-487e-c73b-6904f69d92df"},"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"sar15m4h_backi2\"\n","# dir_path = \"bbdc3m_backi2\"\n","dir_path = \"rsi_backi2\"\n","\n","date = \"2021-11-17\"\n","# date = \"11-24\"\n","# date = \"07-01\"\n","\n","ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","#     load ftr list    #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["['2021-11-17 BTCUSDT.ftr', '2021-11-17 ETHUSDT.ftr', '2021-11-17 ETCUSDT.ftr', '2021-11-17 ADAUSDT.ftr', '2021-11-17 LINKUSDT.ftr', '2021-11-17 XLMUSDT.ftr', '2021-11-17 LTCUSDT.ftr', '2021-11-17 EOSUSDT.ftr', '2021-11-17 XRPUSDT.ftr', '2021-11-17 BCHUSDT.ftr']\n"]}]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["## hvp platform"]},{"cell_type":"markdown","metadata":{"id":"wmnyUTS-yjF1"},"source":["##### config"]},{"cell_type":"code","metadata":{"id":"q_4E-zH02WJy","executionInfo":{"status":"ok","timestamp":1638589676174,"user_tz":-540,"elapsed":657,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = \\\n","{\n","  \"trader_set\": {\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"last_index\": -2,\n","    \"limit_fee\": 0.0002,\n","    \"market_fee\": 0.0004,\n","    \"initial_asset\": 1000,\n","    \"asset_changed\" : 1,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"interval_list\": [\n","      \"1m\",\n","      \"5m\",\n","      \"15m\"\n","    ],\n","    \"row_list\": [\n","      200,\n","      100,\n","      100\n","    ],\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"api_retry_term\": 3,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"loc_set\": {\n","    \"zone\":{\n","      \"dtk_itv\": \"5m\",\n","      \"short_spread\": \"None\",    \n","      \"long_spread\": \"None\",    \n","      \"dtk_dc_itv\": \"None\",\n","      \"dt_k\": \"None\",\n","      \"dc_period\": 135,\n","      \"ei_k\": 0.095,\n","      \"use_dtk_line\": 0,\n","      \"zone_rejection\": 1,\n","      \"bbz_itv\": \"15m\",\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135,\n","      \"dr_error\": 0.1,\n","      \"bbwp_thresh\": 0.5,\n","      \"entry_incycle\": 5,\n","      \"max_eplim_pct\": 0.05,\n","      \"min_eplim_pct\": 0.013        \n","    },\n","    \"point\":{\n","    \"exp_itv\": \"1m\",\n","    \"tpg_itv\": \"5m\",\n","    \"outg_itv\": \"1m\",\n","    \"outg_dc_period\": \"None\",\n","    \"tf_entry\": 1,\n","    \"htf_entry\": 15\n","    }\n","  },\n","  \"tr_set\": {\n","    \"ep_gap\": 0.0,\n","    \"tp_gap\": 0.,\n","    \"out_gap\": 0.6,\n","    \"c_ep_gap\": \"None\",\n","    \"t_out_gap\": -0.\n","  },\n","  \"ep_set\": {\n","    \"short_entry_score\": -2,\n","    \"entry_type\": \"MARKET\",\n","    \"static_ep\": 1,\n","    \"tpout_onexec\": 0\n","  },\n","  \"out_set\": {\n","    \"out_type\": \"MARKET\",\n","    \"use_out\": 0,\n","    \"static_out\": 1,\n","    \"hl_out\": 1,\n","    \"price_restoration\": 0,\n","    \"retouch\": 0,\n","    \"retouch_out_period\": 500,\n","    \"second_out\": 0,\n","    \"approval_st_gap\": 1.5,\n","    \"second_out_gap\": 0.5\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"tp_type\": \"BOTH\",\n","    \"static_tp\": 0,\n","    \"partial_num\": 1,\n","    \"partial_qty_divider\": 1.5\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 1,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.1,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)\n","# param_json = json.dumps(param_dict, indent=2)"],"execution_count":70,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D"},"source":["##### sync_funcs"]},{"cell_type":"code","metadata":{"id":"nzOYWA2kqZ0d","executionInfo":{"status":"ok","timestamp":1638590071517,"user_tz":-540,"elapsed":2365,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"source":["class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def enlist_rtc(res_df, config):\n","\n","    # res_df[\"ema_1m\"] = ema(res_df[\"close\"], 200)\n","\n","    res_df = bb_level(res_df, '5m', 1)\n","    res_df = dc_level(res_df, '5m', 1)\n","    res_df = bb_level(res_df, '15m', 1)\n","    res_df = dc_level(res_df, '15m', 1)\n","    # res_df = bb_level(res_df, '30m', 1)\n","    # res_df = dc_level(res_df, '30m', 1)\n","\n","    res_df['short_rtc_1'] = res_df['bb_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['short_rtc_0'] = res_df['dc_upper_%s' % config.loc_set.point.outg_itv]\n","    res_df['short_rtc_gap'] = res_df['short_rtc_0'] - res_df['short_rtc_1']\n","\n","    res_df['h_short_rtc_1'] = res_df['bb_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_0'] = res_df['dc_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_gap'] = res_df['h_short_rtc_0'] - res_df['h_short_rtc_1']\n","\n","    res_df['long_rtc_1'] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['long_rtc_0'] = res_df['dc_lower_%s' % config.loc_set.point.outg_itv]\n","    res_df['long_rtc_gap'] = res_df['long_rtc_1'] - res_df['long_rtc_0']\n","\n","    res_df['h_long_rtc_1'] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_0'] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_gap'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_0']\n","\n","    res_df['short_dtk_1'] = res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_0'] = res_df['dc_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_gap'] = res_df['short_dtk_0'] - res_df['short_dtk_1']\n","\n","    res_df['long_dtk_1'] = res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_0'] = res_df['dc_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_gap'] = res_df['long_dtk_1'] - res_df['long_dtk_0']\n","\n","    res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","\n","    return res_df\n","\n","\n","\n","def enlist_tr(res_df, config, np_timeidx):\n","\n","    res_df['entry'] = np.zeros(len(res_df))\n","    res_df['h_entry'] = np.zeros(len(res_df))\n","\n","    # -------- set ep level -------- #\n","\n","    #       limit ver.     #\n","    #        bb ep         #\n","    res_df['short_ep'] = res_df['h_short_rtc_1'] + res_df['h_short_rtc_gap'] * config.tr_set.ep_gap\n","    res_df['long_ep'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_gap'] * config.tr_set.ep_gap\n","\n","    if config.tr_set.c_ep_gap != \"None\":\n","        res_df['short_ep_org'] = res_df['short_ep'].copy()\n","        res_df['long_ep_org'] = res_df['long_ep'].copy()\n","\n","        res_df['short_ep2'] = res_df['h_short_rtc_1'] + res_df['h_short_rtc_gap'] * config.tr_set.c_ep_gap\n","        res_df['long_ep2'] = res_df['h_long_rtc_1'] - res_df['h_long_rtc_gap'] * config.tr_set.c_ep_gap\n","\n","    # res_df['short_spread_ep'] = res_df['bb_lower_5m'] + res_df['h_short_rtc_gap'] * config.loc_set.zone.spread_ep_gap\n","    # res_df['long_spread_ep'] = res_df['bb_upper_5m'] - res_df['h_long_rtc_gap'] * config.loc_set.zone.spread_ep_gap\n","\n","    #       market ver.     #\n","    if config.ep_set.entry_type == \"MARKET\":\n","        res_df['short_ep'] = res_df['close']\n","        res_df['long_ep'] = res_df['close']\n","\n","    # ---------------------------------------- short = -1 ---------------------------------------- #\n","    # ---------------- ep_time  ---------------- #\n","    #        bb level entry      #\n","    res_df['rsi_%s_shift' % config.loc_set.point.exp_itv] = res_df['rsi_%s' % config.loc_set.point.exp_itv].shift(1)\n","\n","    res_df['entry'] = np.where((res_df['rsi_%s_shift' % config.loc_set.point.exp_itv] >= rsi_upper) &\n","                               (res_df['rsi_%s' % config.loc_set.point.exp_itv] < rsi_upper)\n","                               , res_df['entry'] - 1, res_df['entry'])\n","\n","    res_df['entry'] = np.where((res_df['entry'] < 0) &\n","                               (np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1))\n","                               , res_df['entry'] - 1, res_df['entry'])\n","\n","\n","    res_df['h_entry'] = np.where(  # (res_df['open'] >= res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) >= res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] < res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry'] - 1, res_df['h_entry'])\n","\n","    # ---------------------------------------- long = 1 ---------------------------------------- #\n","    # ---------------------- ep_time ---------------------- #\n","\n","    #      bb level entry      #\n","    res_df['entry'] = np.where((res_df['rsi_%s_shift' % config.loc_set.point.exp_itv] <= rsi_lower) &\n","                               (res_df['rsi_%s' % config.loc_set.point.exp_itv] > rsi_lower)\n","                               , res_df['entry'] + 1, res_df['entry'])\n","\n","    res_df['entry'] = np.where((res_df['entry'] > 0) &\n","                               (np_timeidx % config.loc_set.point.tf_entry == (config.loc_set.point.tf_entry - 1))\n","                               , res_df['entry'] + 1, res_df['entry'])\n","    \n","\n","    res_df['h_entry'] = np.where(  # (res_df['open'] <= res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) <= res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] > res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry'] + 1, res_df['h_entry'])\n","\n","    # ------------------------------ rtc tp & out ------------------------------ #\n","    # --------------- bb rtc out --------------- #\n","\n","    if config.loc_set.point.outg_dc_period != \"None\":\n","        res_df['short_rtc_0'] = res_df['high'].rolling(config.loc_set.point.outg_dc_period).max()\n","        res_df['long_rtc_0'] = res_df['low'].rolling(config.loc_set.point.outg_dc_period).min()\n","\n","    res_df['short_out'] = res_df['h_short_rtc_0'] + res_df['h_short_rtc_gap'] * config.tr_set.out_gap\n","    res_df['long_out'] = res_df['h_long_rtc_0'] - res_df['h_long_rtc_gap'] * config.tr_set.out_gap\n","\n","    if config.tr_set.t_out_gap != \"None\":\n","\n","        res_df['short_out_org'] = res_df['short_out'].copy()\n","        res_df['long_out_org'] = res_df['long_out'].copy()\n","\n","        res_df['short_out2'] = res_df['short_rtc_0'] + res_df['short_rtc_gap'] * config.tr_set.t_out_gap\n","        res_df['long_out2'] = res_df['long_rtc_0'] - res_df['long_rtc_gap'] * config.tr_set.t_out_gap\n","\n","    # ------------------------------ tp ------------------------------ #\n","    # --------------- bb rtc tp --------------- #\n","    res_df['short_tp'] = res_df['h_short_rtc_1'] - res_df['h_short_rtc_gap'] * config.tr_set.tp_gap\n","    res_df['long_tp'] = res_df['h_long_rtc_1'] + res_df['h_long_rtc_gap'] * config.tr_set.tp_gap\n","\n","    # --------------- set tp_line / dtk_line --------------- #\n","    # res_df['short_tp_1'] = np.where(res_df['h_entry'] == -1, res_df['short_rtc_1'], np.nan)\n","    # res_df['short_tp_1'] = ffill(res_df['short_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['short_tp_gap'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_gap'], np.nan)  # ltf_gap 은 out 을 위한 gap 임\n","    # res_df['short_tp_gap'] = ffill(res_df['short_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['long_tp_1'] = np.where(res_df['h_entry'] == 1, res_df['long_rtc_1'], np.nan)\n","    # res_df['long_tp_1'] = ffill(res_df['long_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['long_tp_gap'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_gap'], np.nan)\n","    # res_df['long_tp_gap'] = ffill(res_df['long_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_short_tp_1'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_1'], np.nan)\n","    # res_df['h_short_tp_1'] = ffill(res_df['h_short_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_short_tp_gap'] = np.where(res_df['h_entry'] == -1, res_df['h_short_rtc_gap'], np.nan)\n","    # res_df['h_short_tp_gap'] = ffill(res_df['h_short_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_long_tp_1'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_1'], np.nan)\n","    # res_df['h_long_tp_1'] = ffill(res_df['h_long_tp_1'].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_long_tp_gap'] = np.where(res_df['h_entry'] == 1, res_df['h_long_rtc_gap'], np.nan)\n","    # res_df['h_long_tp_gap'] = ffill(res_df['h_long_tp_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    if config.loc_set.zone.use_dtk_line:\n","        res_df['short_dtk_1'] = np.where(res_df['h_entry'] == -1, res_df['short_dtk_1'], np.nan)\n","        res_df['short_dtk_1'] = ffill(res_df['short_dtk_1'].values.reshape(1, -1)).reshape(-1, 1)\n","        res_df['short_dtk_gap'] = np.where(res_df['h_entry'] == -1, res_df['short_dtk_gap'], np.nan)\n","        res_df['short_dtk_gap'] = ffill(res_df['short_dtk_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","        res_df['long_dtk_1'] = np.where(res_df['h_entry'] == 1, res_df['long_dtk_1'], np.nan)\n","        res_df['long_dtk_1'] = ffill(res_df['long_dtk_1'].values.reshape(1, -1)).reshape(-1, 1)\n","        res_df['long_dtk_gap'] = np.where(res_df['h_entry'] == 1, res_df['long_dtk_gap'], np.nan)\n","        res_df['long_dtk_gap'] = ffill(res_df['long_dtk_gap'].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    res_df['dc_upper_v2'] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()\n","    res_df['dc_lower_v2'] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","    \n","    res_df['zone_dc_upper_v2'] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()\n","    res_df['zone_dc_lower_v2'] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    return res_df\n","\n","\n","\n","\n","def short_ep_loc(res_df, config, i, show_detail=True):\n","\n","    # ------- param init ------- #\n","    open_side = None\n","\n","    mr_const_cnt = 0\n","    mr_score = 0\n","    zone = 'n'\n","\n","\n","    if config.ep_set.entry_type == 'MARKET':\n","        if config.tp_set.tp_type == 'LIMIT':\n","            tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","    else:\n","        if config.tp_set.tp_type == 'LIMIT':\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","\n","\n","    # -------------- tr scheduling -------------- #\n","    if config.loc_set.zone.short_spread != \"None\":\n","\n","      mr_const_cnt += 1\n","\n","      tr = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_5m'].iloc[\n","      # tr = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - out_fee * res_df['bb_base_5m'].iloc[\n","          # i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + tp_fee *\n","          i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","                  res_df['bb_base_5m'].iloc[i])\n","      # tr = (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_15m'].iloc[\n","      #     i]) / (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_15m'].iloc[i])\n","          \n","      # tr = (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_lower_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_lower_5m'].iloc[i])\n","      # tr = (res_df['short_rtc_gap'].iloc[i] * (0.443) - tp_fee * res_df['short_ep'].iloc[\n","      #     i]) / (res_df['short_rtc_gap'].iloc[i] * (0.417) + out_fee * res_df['short_ep'].iloc[i])\n","\n","      # tr = (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['dc_lower_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['dc_lower_5m'].iloc[i])\n","      # tr = ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 - tp_fee * res_df['dc_lower_5m'].iloc[\n","      #     i]) / ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 + out_fee *\n","      #             res_df['dc_lower_5m'].iloc[i])\n","      \n","      if tr >= config.loc_set.zone.short_spread:\n","          mr_score += 1\n","\n","      if show_detail:\n","          print(\"tr :\", tr)\n","\n","    # -------------- dtk -------------- #\n","    if config.loc_set.zone.dt_k != \"None\":\n","\n","      mr_const_cnt += 1\n","      # if res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i] >= res_df['short_rtc_1'].iloc[i] - res_df['h_short_rtc_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","      #     dtk_v1 & v2 platform     #\n","      if config.loc_set.zone.dtk_dc_itv != \"None\":\n","          dc = res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","          dt_k = res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","          if dc >= dt_k:\n","              mr_score += 1\n","\n","              #     dc_v2   #\n","      else:\n","          dc = res_df['dc_lower_v2'].iloc[i]\n","          dt_k = res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","          if dc >= dt_k:\n","              # if res_df['dc_lower_v2'].iloc[i] >= res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k and \\\n","              # res_df['dc_upper_v2'].iloc[i] <= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","              mr_score += 1\n","\n","      if show_detail:\n","          print(\"dc :\", dc)\n","          print(\"dt_k :\", dt_k)\n","\n","\n","    # -------------- zone rejection  -------------- #\n","    if config.loc_set.zone.zone_rejection:\n","    \n","      #       by bb and dc - rsi      # \n","      # mr_const_cnt += 1\n","      # if res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i] <= res_df['dc_upper_1m'].iloc[i] <= res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","      #   mr_score += 1\n","        \n","      #   #       by bb       # \n","      mr_const_cnt += 1      \n","      # if res_df['bb_lower_5m'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:      \n","\n","      # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:   # org\n","      # if res_df['close'].iloc[i] > res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:  # inv\n","      if res_df['close'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:    \n","      # if res_df['close'].iloc[i] > res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        mr_score += 1\n","\n","        #       by ema       # \n","      mr_const_cnt += 1      \n","      if res_df['close'].iloc[i] < res_df['ema_1m'].iloc[i]:\n","        mr_score += 1\n","\n","        #       by zone_dtk       #\n","      # mr_const_cnt += 1\n","      # if res_df['zone_dc_upper_v2'].iloc[i] < res_df['long_dtk_plot_1'].iloc[i] + res_df['long_dtk_plot_gap'].iloc[\n","      #     i] * config.loc_set.zone.zone_dt_k:\n","      #   mr_score += 1\n","\n","\n","    # -------------- zoning -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","\n","        #       by bb       # \n","        # if res_df['close'].iloc[i] > res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        #       by zone_dtk       #\n","\n","          #         c_zone        #\n","        if res_df['zone_dc_upper_v2'].iloc[i] > res_df['long_dtk_plot_1'].iloc[i] + res_df['long_dtk_plot_gap'].iloc[\n","            i] * config.loc_set.zone.zone_dt_k:\n","\n","            if config.ep_set.static_ep:\n","              res_df['short_ep'].iloc[i] = res_df['short_ep2'].iloc[i]\n","            else:\n","              res_df['short_ep'] = res_df['short_ep2']\n","              \n","            if config.out_set.static_out:\n","              res_df['short_out'].iloc[i] = res_df['short_out_org'].iloc[i]\n","            else:\n","              res_df['short_out'] = res_df['short_out_org']\n","\n","            zone = 'c'\n","\n","          #         t_zone        #\n","        else:\n","            if config.ep_set.static_ep:\n","              res_df['short_ep'].iloc[i] = res_df['short_ep_org'].iloc[i]\n","            else:\n","              res_df['short_ep'] = res_df['short_ep_org']\n","\n","            if config.out_set.static_out:\n","              res_df['short_out'].iloc[i] = res_df['short_out2'].iloc[i]\n","            else:\n","              res_df['short_out'] = res_df['short_out2']\n","\n","            zone = 't'\n","\n","    if mr_const_cnt == mr_score:\n","        open_side = OrderSide.SELL\n","\n","    return res_df, open_side, zone\n","\n","\n","\n","def long_ep_loc(res_df, config, i, show_detail=True):\n","\n","    # ------- param init ------- #\n","    open_side = None\n","\n","    mr_const_cnt = 0\n","    mr_score = 0\n","    zone = 'n'\n","\n","\n","    if config.ep_set.entry_type == 'MARKET':\n","        if config.tp_set.tp_type == 'LIMIT':\n","            tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","    else:\n","        if config.tp_set.tp_type == 'LIMIT':\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","        else:\n","            tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","        out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","\n","\n","    # -------------- tr scheduling -------------- #       \n","    if config.loc_set.zone.long_spread != \"None\":\n","\n","      mr_const_cnt += 1\n","      \n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_5m'].iloc[i] - tp_fee * res_df['bb_base_5m'].iloc[\n","      #     i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_5m'].iloc[i])\n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_15m'].iloc[i] - tp_fee * res_df['bb_base_15m'].iloc[\n","      #     i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['bb_base_15m'].iloc[i] + out_fee *\n","      #             res_df['bb_base_15m'].iloc[i])\n","          \n","      tr = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['bb_upper_5m'].iloc[\n","      # tr = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - out_fee * res_df['bb_upper_5m'].iloc[\n","          # i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + tp_fee *\n","          i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","                  res_df['bb_upper_5m'].iloc[i])          \n","      # tr = (res_df['long_rtc_gap'].iloc[i] * (0.443) - tp_fee * res_df['long_ep'].iloc[\n","      #     i]) / (res_df['long_rtc_gap'].iloc[i] * (0.417) + out_fee * res_df['long_ep'].iloc[i])\n","\n","      # tr = (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] - tp_fee * res_df['dc_upper_5m'].iloc[\n","      #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] + out_fee *\n","      #             res_df['dc_upper_5m'].iloc[i])\n","      # tr = ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 - tp_fee * res_df['dc_upper_5m'].iloc[\n","      #     i]) / ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 + out_fee *\n","      #             res_df['dc_upper_5m'].iloc[i])\n","          \n","      if tr >= config.loc_set.zone.long_spread:\n","          mr_score += 1\n","\n","      if show_detail:\n","          print(\"tr :\", tr)\n","    \n","\n","    # -------------- dtk -------------- #\n","    if config.loc_set.zone.dt_k != \"None\":  \n","\n","      mr_const_cnt += 1\n","      # if res_df['dc_upper_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i] <= res_df['long_rtc_1'].iloc[i] + res_df['long_rtc_gap'].iloc[i] * config.loc_set.zone.dt_k:          \n","          #     dtk_v1 & v2 platform    #\n","      if config.loc_set.zone.dtk_dc_itv != \"None\":\n","        dc = res_df['dc_upper_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","        dt_k = res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","        if dc <= dt_k:  \n","          mr_score += 1  \n","\n","      else:\n","          #     dc_v2     #\n","        dc = res_df['dc_upper_v2'].iloc[i]\n","        dt_k = res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k\n","        if dc <= dt_k:  \n","        # if res_df['dc_upper_v2'].iloc[i] >= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","        # if res_df['dc_upper_v2'].iloc[i] <= res_df['long_dtk_1'].iloc[i] + res_df['long_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k and \\\n","        #   res_df['dc_lower_v2'].iloc[i] >= res_df['short_dtk_1'].iloc[i] - res_df['short_dtk_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","\n","          mr_score += 1  \n","      \n","      if show_detail:\n","          print(\"dc :\", dc)\n","          print(\"dt_k :\", dt_k)\n","\n","    \n","    # -------------- zone rejection  -------------- #\n","    if config.loc_set.zone.zone_rejection:\n","      \n","      # #       by bb and dc - rsi      # \n","      # mr_const_cnt += 1\n","      # if res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i] >= res_df['dc_lower_1m'].iloc[i] >= res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:        \n","      #   mr_score += 1                   \n","      \n","        #       by bb       #       \n","      mr_const_cnt += 1\n","      # if  res_df['bb_upper_5m'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","      # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:    # org\n","      # if res_df['close'].iloc[i] < res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:  # inv\n","      if res_df['close'].iloc[i] < res_df['bb_lower_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","      # if res_df['close'].iloc[i] < res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","        mr_score += 1      \n","\n","        #       by ema       #       \n","      mr_const_cnt += 1\n","      if  res_df['close'].iloc[i] > res_df['ema_1m'].iloc[i]:\n","        mr_score += 1                \n","\n","\n","        #       by zone_dtk       #\n","      # mr_const_cnt += 1\n","      # if res_df['zone_dc_lower_v2'].iloc[i] > res_df['short_dtk_plot_1'].iloc[i] - res_df['short_dtk_plot_gap'].iloc[i] * config.loc_set.zone.zone_dt_k:      \n","      #   mr_score += 1                   \n","\n","\n","    # -------------- zoning -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        #       by bb       # \n","      # if res_df['close'].iloc[i] < res_df['bb_upper_%s' % config.loc_set.zone.bbz_itv].iloc[i]:\n","\n","        #       by zone_dtk       #\n","\n","          #         c_zone        #\n","      if res_df['zone_dc_lower_v2'].iloc[i] < res_df['short_dtk_plot_1'].iloc[i] - res_df['short_dtk_plot_gap'].iloc[i] * config.loc_set.zone.zone_dt_k:\n","        \n","        if config.ep_set.static_ep:\n","          res_df['long_ep'].iloc[i] = res_df['long_ep2'].iloc[i]\n","        else:\n","          res_df['long_ep'] = res_df['long_ep2']\n","          \n","        if config.out_set.static_out:\n","          res_df['long_out'].iloc[i] = res_df['long_out_org'].iloc[i]\n","        else:\n","          res_df['long_out'] = res_df['long_out_org']\n","\n","        zone = 'c'\n","\n","        # mr_const_cnt += 1\n","        # dc_lb_period = 100\n","        # if np.sum((res_df['dc_upper_15m'] > res_df['dc_upper_15m'].shift(15)).iloc[i - dc_lb_period:i]) == 0:\n","        #   mr_score += 1\n","        \n","\n","          #         t_zone        #\n","      else:\n","\n","        if config.ep_set.static_ep:\n","          res_df['long_ep'].iloc[i] = res_df['long_ep_org'].iloc[i]\n","        else:\n","          res_df['long_ep'] = res_df['long_ep_org']\n","\n","        if config.out_set.static_out:\n","          res_df['long_out'].iloc[i] = res_df['long_out2'].iloc[i]\n","        else:\n","          res_df['long_out'] = res_df['long_out2']\n","\n","        zone = 't'\n","\n","\n","    if mr_const_cnt == mr_score:\n","        open_side = OrderSide.BUY\n","\n","    return res_df, open_side, zone"],"execution_count":75,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC"},"source":["##### run"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TdAn2bHHBWMF","executionInfo":{"status":"ok","timestamp":1638590105497,"user_tz":-540,"elapsed":31012,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"b915d51f-57c7-4a40-a80e-813daf666cb6"},"source":["# ------- tp / out fee calc ------- #\n","if config.ep_set.entry_type == 'MARKET':\n","  if config.tp_set.tp_type == 'LIMIT':\n","    tp_fee = config.trader_set.market_fee + config.trader_set.limit_fee\n","  else:\n","    tp_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","  out_fee = config.trader_set.market_fee + config.trader_set.market_fee\n","else:\n","  if config.tp_set.tp_type == 'LIMIT':\n","    tp_fee = config.trader_set.limit_fee + config.trader_set.limit_fee\n","  else:\n","    tp_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","  out_fee = config.trader_set.limit_fee + config.trader_set.market_fee\n","  \n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","\n","title_position = (0.30, 1)\n","show_plot = 1\n","show_detail = 0\n","\n","for key in ftr_list:\n","\n","  if config.trader_set.symbol in key:\n","    pass\n","  else:\n","    continue\n","\n","  # break\n","\n","  res_df = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")#.loc[pd.to_datetime(\"2021-07-10 04:59:59.999000\"):]\n","  print(key, \"loaded !\")\n","  \n","  # print(\"res_df.columns :\", res_df.columns)  \n","  # print(res_df.tail(100))\n","  # print(\"res_df.index[0] :\", res_df.index[0])\n","  # # print(\"intmin(res_df.index[0]) :\", intmin(res_df.index[0]))\n","  # break\n","\n","  # -------------------- additional indi. -------------------- #    \n","  np_timeidx = np.array(list(map(lambda x : intmin(x), res_df.index)))\n","  \n","  res_df = enlist_rtc(res_df, config)\n","\n","  #   temp param    #\n","  allow_rsi_touch = 1\n","  rsi_lb = 50\n","  rsi_gap = 5\n","\n","  rsi_upper = 70\n","  rsi_lower = 30\n","\n","  itv_num_list = [1, 3, 5, 15]\n","\n","  itv_list = ['15m', '30m', '1h', '4h']\n","  # itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","\n","  # x_val_list = np.arange(0.95, 0.88, -0.01)     # prcn 2\n","  # x_val_list = np.arange(0.95, 0.943, -0.001)    # prcn 3\n","  x_val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","  # x_val_list = np.arange(5, 10., 1.0)\n","  # x_val_list = np.arange(0.1, 0.16, 0.01)\n","  # x_val_list = np.arange(0.225, 0.09, -0.01)\n","\n","  y_val_cols = [\"wr\", \"frq\", \"dpf\", \"min_pr\", \"acc_pr\", \"sum_pr\", \"liqd\", \"tr\", \"dr\", \"sr\"]\n","  # y_rev_val_cols = [\"wr\", \"min_pr\", \"acc_pr\", \"sum_pr\"]\n","  y_rev_val_cols = [\"wr\", \"min_pr\", \"acc_pr\", \"sum_pr\", \"sr\"]\n","\n","  survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  short_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  long_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","  rev_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","  rev_short_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","  rev_long_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","\n","  for survey_i, just_loop in enumerate(range(1)):\n","  # for survey_i, config.loc_set.zone.short_spread in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.zone.long_spread in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.zone.dt_k in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.dc_period in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.ei_k in enumerate(x_val_list):   \n","  # for survey_i, config.loc_set.zone.dr_error in enumerate(x_val_list): \n","  # for survey_i, config.loc_set.point.tf_entry in enumerate(x_val_list):\n","  # for survey_i, config.loc_set.zone.bbz_itv in enumerate(itv_list):\n","  # for survey_i, config.tr_set.ep_gap in enumerate(x_val_list): \n","  # for survey_i, config.tr_set.out_gap in enumerate(x_val_list): \n","  # for survey_i, config.tr_set.tp_gap in enumerate(x_val_list): \n","  # for survey_i, config.lvrg_set.leverage in enumerate(x_val_list):\n","  # for survey_i, config.lvrg_set.target_pct in enumerate(x_val_list):   \n","  # for survey_i, outg_dc_itv_num in enumerate(x_val_list): \n","  # for survey_i, exp_itv in enumerate(itv_list): \n","  # for survey_i, zone_dt_k in enumerate(x_val_list): \n","  # for survey_i, t_out_gap in enumerate(x_val_list): \n","  # for survey_i, zone_dc_period in enumerate(x_val_list): \n","  \n","    start_0 = time.time()\n","\n","    print(\"config.loc_set.point.exp_itv :\", config.loc_set.point.exp_itv)\n","    print(\"config.loc_set.point.tpg_itv :\", config.loc_set.point.tpg_itv)\n","    print(\"config.loc_set.point.outg_itv :\", config.loc_set.point.outg_itv)\n","    print(\"config.loc_set.point.outg_dc_period :\", config.loc_set.point.outg_dc_period)\n","    print(\"config.loc_set.zone.dtk_itv :\", config.loc_set.zone.dtk_itv)\n","    print(\"-----------------------------------\")    \n","    # print(\"dtk_dc_itv :\", dtk_dc_itv)    \n","    # print(\"config.loc_set.dtk_dc_itv_num :\", config.loc_set.dtk_dc_itv_num :\",)\n","    print(\"config.loc_set.zone.short_spread :\", config.loc_set.zone.short_spread)\n","    print(\"config.loc_set.zone.long_spread :\", config.loc_set.zone.long_spread)\n","    print(\"config.loc_set.zone.dt_k :\", config.loc_set.zone.dt_k)\n","    print(\"config.loc_set.zone.ei_k :\", config.loc_set.zone.ei_k)\n","    print(\"config.loc_set.zone.dc_period :\", config.loc_set.zone.dc_period)\n","    print(\"config.loc_set.zone.use_dtk_line :\", config.loc_set.zone.use_dtk_line)\n","\n","    print(\"config.loc_set.zone.zone_rejection :\", config.loc_set.zone.zone_rejection)\n","    print(\"config.loc_set.zone.bbz_itv :\", config.loc_set.zone.bbz_itv)\n","    print(\"config.loc_set.zone.zone_dt_k :\", config.loc_set.zone.zone_dt_k)\n","    print(\"config.loc_set.zone.zone_dc_period :\", config.loc_set.zone.zone_dc_period)\n","    # print(\"config.loc_set.open_shift :\", config.loc_set.open_shift)\n","    print(\"-----------------------------------\")\n","    # print(\"config.ep_set.dr_error :\", config.ep_set.dr_error)\n","    print(\"config.loc_set.point.tf_entry :\", config.loc_set.point.tf_entry)\n","    print(\"config.loc_set.point.htf_entry :\", config.loc_set.point.htf_entry)\n","    print(\"config.tr_set.ep_gap :\", config.tr_set.ep_gap)\n","    print(\"config.tr_set.out_gap :\", config.tr_set.out_gap)\n","    print(\"config.tr_set.tp_gap :\", config.tr_set.tp_gap)  \n","    print(\"config.tr_set.c_ep_gap :\", config.tr_set.c_ep_gap)\n","    print(\"config.tr_set.t_out_gap :\", config.tr_set.t_out_gap)\n","    print(\"-----------------------------------\")\n","    print(\"config.lvrg_set.leverage :\", config.lvrg_set.leverage)\n","    print(\"config.lvrg_set.target_pct :\", config.lvrg_set.target_pct)\n","\n","    # res_df['sma_1m'] = res_df['close'].rolling(sma_period).mean()  \n","    # res_df = bb_level(res_df, '5m', bbg)\n","    \n","    res_df = enlist_tr(res_df, config, np_timeidx)\n","\n","    # --------------- set partial tp --------------- #\n","    short_tps = [res_df['short_tp']]\n","    long_tps = [res_df['long_tp']]\n","\n","    # short_tps = [short_tp2]\n","    # long_tps = [long_tp2]\n","\n","    # short_tps = [short_tp2, short_tp] # org\n","    # long_tps = [long_tp2, long_tp]\n","    \n","    # short_tps = [short_tp, short_tp2]\n","    # long_tps = [long_tp, long_tp2]\n","\n","\n","\n","    #       trading : 여기도 체결 결과에 대해 묘사함       #\n","    trade_list = []\n","    h_trade_list = []\n","    leverage_list = []\n","    fee_list = []\n","    short_fee_list = []\n","    long_fee_list = []\n","    open_list = []\n","    zone_list = []\n","    side_list = []\n","\n","    tp_ratio_list = []\n","    short_tp_ratio_list = []\n","    long_tp_ratio_list = []\n","\n","    dr_list = []\n","    short_dr_list = []\n","    long_dr_list = []\n","\n","    liqd_list = []\n","    short_liqd_list = []\n","    long_liqd_list = []\n","\n","    nontp_liqd_list = []\n","    nontp_short_liqd_list = []\n","    nontp_long_liqd_list = []\n","\n","    nontp_pr_list = []\n","    nontp_short_pr_list = []\n","    nontp_long_pr_list = []\n","\n","    nontp_short_indexs = []\n","    nontp_long_indexs = []\n","\n","    nontp_short_ep_list = []\n","    nontp_long_ep_list = []\n","\n","    pr_list = []\n","    long_list = []\n","    short_list = []\n","\n","    h_pr_list = []\n","    h_long_list = []\n","    h_short_list = []\n","\n","    ep_tp_list = []\n","    h_ep_tp_list = []\n","    tp_state_list = []\n","\n","    i = 0\n","    while 1:\n","    # for i in range(len(res_df)):  \n","    \n","      # ------- fee init ------- #\n","      if config.ep_set.entry_type == 'LIMIT':\n","        fee = config.trader_set.limit_fee\n","      else:\n","        fee = config.trader_set.market_fee\n","\n","\n","      if res_df['entry'][i] == config.ep_set.short_entry_score: \n","\n","        # print(\"i in short :\", i)\n","\n","        initial_i = i\n","\n","        if config.out_set.static_out:\n","          p_i = initial_i\n","        else:\n","          p_i = i\n","\n","\n","        res_df, open_side_str, zone = short_ep_loc(res_df, config, i, show_detail)\n","\n","\n","        # -------------- mr_score summation -------------- #\n","        if open_side_str is not None:          \n","          pass\n","\n","        else:\n","          i += 1\n","          if i >= len(res_df):\n","            break\n","          continue\n","\n","\n","        ep_j = initial_i\n","\n","        # -------------- limit waiting : limit_out -------------- #\n","\n","        if config.ep_set.entry_type == \"LIMIT\":\n","\n","          entry_done = 0\n","          entry_open = 0\n","          prev_sar = None\n","\n","          # for e_j in range(i, len(res_df)): # entry_signal 이 open 기준 (해당 bar 에서 체결 가능함)\n","          if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","            break\n","          for e_j in range(i + 1, len(res_df)): # entry signal이 close 기준 일 경우\n","        \n","            if not config.ep_set.static_ep:\n","              ep_j = e_j\n","\n","            if config.tp_set.static_tp:\n","              # if config.ep_set.tpout_onexec:\n","              #   tp_j = e_j\n","              # else:\n","                tp_j = initial_i\n","            else:\n","              tp_j = e_j  \n","\n","            #             1. ep 설정 \n","            # -------------- np.inf ep -------------- #\n","            # if short_ep.iloc[initial_i] == np.inf:\n","            #   break\n","\n","\n","            #             1. check ep_out      #\n","            if config.loc_set.zone.ei_k != \"None\":\n","\n","              if res_df['low'].iloc[e_j] <= res_df['h_short_rtc_1'].iloc[tp_j] - res_df['h_short_rtc_gap'].iloc[tp_j] * config.loc_set.zone.ei_k:\n","              # if res_df['low'].iloc[e_j] <= res_df['short_tp'].iloc[tp_j]: # ep_out : tp_done\n","              # if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                break\n","\n","              # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] >= rsi_lower) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] < rsi_lower):\n","              #   break\n","\n","            #             2. check ep_in       #\n","            if res_df['high'].iloc[e_j] >= res_df['short_ep'].iloc[ep_j]:\n","              entry_done = 1\n","              # print(\"res_df['high'].iloc[e_j] :\", res_df['high'].iloc[e_j])\n","              # print(\"e_j :\", e_j)\n","\n","              #     이미, e_j open 이 ep 보다 높은 경우, entry[ep_j] => -2 로 변경   #\n","              if res_df['open'].iloc[e_j] >= res_df['short_ep'].iloc[ep_j]:\n","                entry_open = 1\n","\n","              break\n","\n","\n","          i = e_j\n","          # print(\"i = e_j :\", i)\n","\n","          if entry_done:      \n","            pass\n","\n","          else:\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","        # ----------------- end wait ----------------- #\n","\n","        # if e_j - initial_i >= 200:\n","        #   print(\"e_j, initial_i :\", e_j, initial_i)\n","        # print(\"e_j - initial_i :\", e_j - initial_i)\n","        # print()\n","\n","        open_list.append(initial_i)\n","        zone_list.append(zone)\n","        side_list.append('s')\n","        \n","        #     e_j 라는 변수는 MARKET 에 있어서 정의되서는 안되는 변수임   #\n","        if config.ep_set.entry_type is 'MARKET':\n","          # try:\n","          #   ep_list = [res_df['close'].iloc[e_j]]\n","          # except Exception as e:\n","          #   # print('error in ep_list (initial) :', e)\n","          ep_list = [res_df['close'].iloc[ep_j]]\n","\n","        else:          \n","          if not entry_open:\n","            ep_list = [res_df['short_ep'].iloc[ep_j]]\n","          \n","          else:\n","            #   ep_j 는 항상 있음, LIMIT 인 경우 e_j 도 항상 존재함 --> dynamic_ep 여부에 따라 ep_j = e_j 가 되는 경우만 존재할 뿐임 \n","            #   따라서, ep_j 로 통일 가능함 (dynamic_ep 인 경우, ep_j = e_j 되어있음)\n","            ep_list = [res_df['open'].iloc[ep_j]]\n","\n","        if not config.lvrg_set.static_lvrg:\n","          config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['short_out'].iloc[ep_j] / res_df['short_ep'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['short_out'].iloc[ep_j] / res_df['short_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep'].iloc[ep_j] / res_df['short_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep_org'].iloc[ep_j] / res_df['short_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          \n","          if not config.lvrg_set.allow_float:\n","            config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","          # -------------- leverage rejection -------------- #\n","          if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","            open_list.pop()\n","            zone_list.pop()\n","            side_list.pop()\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","          config.lvrg_set.leverage = max(config.lvrg_set.leverage, 1)\n","          leverage_list.append(config.lvrg_set.leverage)\n","        \n","        config.lvrg_set.leverage = min(50, config.lvrg_set.leverage)\n","\n","\n","        # try:\n","        ep_idx_list = [ep_j]  # ep_j 는 ep_type 유관하게 존재하는 변수니까 try 에 걸어두는게 맞음 <-- # market 인데, e_j 변수가 할당된 경우 고려해야함\n","        # except Exception as e:\n","        #   # print('error in ep_idx_list :', e)        \n","        #   ep_idx_list = [e_j]\n","\n","        tp_list = []\n","        tp_idx_list = []\n","\n","        partial_tp_cnt = 0\n","        hedge_cnt = 1\n","\n","        h_ep, h_tp = None, None\n","        h_i, h_j = None, None\n","        \n","        trade_done = False\n","        out = False\n","        # config.out_set.retouch\n","\n","        #     Todo    #\n","        #      1. future_work : 상단의 retouch 와 겹침 \n","        config.out_set.retouch = False\n","        \n","\n","        if i == len(res_df) - 1: # if j start from i + 1 \n","          open_list.pop()       \n","          zone_list.pop()       \n","          side_list.pop()       \n","        for j in range(i + 1, len(res_df)):\n","\n","        # for j in range(i, len(res_df)):\n","\n","          if config.tp_set.static_tp:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              tp_j = ep_j  # tp 가 dynamic_ep 기준인 경우니까, ep_j 를 사용하는 게 맞음\n","            else:\n","              tp_j = initial_i\n","          else:\n","            tp_j = j\n","\n","          if config.out_set.static_out:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              out_j = ep_j\n","            else:           \n","              out_j = initial_i\n","          else:\n","            out_j = j\n","\n","\n","          # -------------- sub ep -------------- #\n","          # if res_df['high'].iloc[j - 1] <= res_df['sar2'].iloc[j - 1] and res_df['high'].iloc[j] > res_df['sar2'].iloc[j]:\n","            \n","          #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","          #   if sub_ep < ep_list[-1]:\n","          #     ep_list.append(sub_ep)\n","          #     ep_idx_list.append(j)\n","\n","          \n","          # -------------- hedge only once -------------- #\n","          #             일단, h_quantity 는 초기 진입과 동일하게 설정         #\n","          # if res_df['high'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] >= res_df['minor_ST3_Up'].iloc[j] and hedge_cnt == 1:\n","\n","          #   h_ep = res_df['close'].iloc[j]\n","          #   hedge_cnt -= 1\n","          #   h_i = j\n","\n","\n","          # -------------- ultimate limit tp -------------- #\n","          if not config.tp_set.non_tp:\n","\n","            #               1. by price line             #\n","            if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == \"BOTH\":\n","\n","              for s_i, short_tp_ in enumerate(short_tps):\n","\n","                if res_df['low'].iloc[j] <= short_tp_.iloc[tp_j] and partial_tp_cnt == s_i: # we use static tp now\n","                # if res_df['low'].iloc[j] <= short_tp_.iloc[j]:\n","                # if res_df['low'].iloc[j] <= short_tp_.iloc[j] <= res_df['high'].iloc[j]: --> 이건 잘못되었음\n","\n","                  if s_i == len(short_tps) - 1:\n","                    trade_done = 1\n","                  \n","                  partial_tp_cnt += 1\n","\n","                  #         dynamic tp        #\n","                  # if 0:\n","                  if short_tp_.iloc[j] != short_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                    #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 # \n","                    # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] < short_tp_.iloc[j]:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-short_open\")\n","\n","                    #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 # \n","                    else:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[j]\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-short_tp\")\n","\n","                  #         static tp         #\n","                  else:\n","                    \n","                    #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 # \n","                    #   non_inversion 의 경우, short_tp 가 가능함   #              \n","\n","                    # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] < short_tp_.iloc[tp_j]:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-short_tp\")\n","\n","                    #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 # \n","                    else:\n","\n","                      # tp = short_tp_.iloc[initial_i]\n","                      tp = short_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-short_tp\")   \n","\n","                  tp_list.append(tp)     \n","                  tp_idx_list.append(j)\n","                  fee += config.trader_set.limit_fee\n","\n","\n","            #           2. by signal        #\n","            if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","              market_tp = 0\n","\n","              # -------------- sar tp -------------- #\n","              # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","              #       inversion     #\n","              # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","              \n","              # ----------- st short ----------- #\n","              # if res_df['close'].iloc[j] <= res_df['short_tp'].iloc[tp_j]:\n","              \n","              # -------------- sar pb tp -------------- #\n","              # if res_df['low'].iloc[j] <= res_df['short_tp'].iloc[initial_i]:\n","\n","              # -------------- st tp -------------- #\n","              # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:       \n","\n","              # -------------- fisher tp -------------- #            \n","              # if entry[j] == 1:\n","              \n","              # -------------- timestamp -------------- #\n","              # if np_timeidx[j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:       \n","\n","              # -------------- rsi -------------- #\n","              if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] >= rsi_lower) & \\\n","                               (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] < rsi_lower):                            \n","                market_tp = 1\n","\n","              # -------------- rsi slight touch -------------- #\n","              elif allow_rsi_touch:\n","                if (np.min(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[initial_i:j]) < rsi_lower + rsi_gap) & \\\n","                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] >= 50):\n","                  market_tp = 1\n","\n","              if market_tp:\n","                \n","                tp = res_df['close'].iloc[j]\n","                # tp = res_df['open'].iloc[j]\n","                trade_done = 1\n","\n","                if trade_done:\n","                  tp_state_list.append(\"short close tp\")\n","\n","                tp_list.append(tp) \n","                tp_idx_list.append(j)\n","                fee += config.trader_set.market_fee\n","\n","\n","                  \n","          # -------------- out -------------- #\n","          if not trade_done and config.out_set.use_out and j != len(res_df) - 1:\n","\n","            # -------------- macd -------------- #\n","            # if res_df['macd_hist3'].iloc[j] > 0:  #  macd out\n","            # if res_df['macd_hist3'].iloc[i] < 0 and res_df['macd_hist3'].iloc[j] > 0:\n","\n","            # -------------- st config.out_set.retouch -------------- #\n","            # out = 1 상태면 동일 tick 에서 config.out_set.retouch 를 조사할 거기 때문에, 먼저 검사함\n","            # 그리고, out 기준이 close 라 이게 맞음 \n","            # close 가 short_out 보다 올라가있는 상태일테니 low 를 조사하는게 맞음           \n","            # if out and res_df['low'].iloc[j] <= short_out.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","            \n","             # ------- 일정시간 이상, dynamic_out 적용 ------ #\n","            try:\n","              if j - out_idx >= config.out_set.retouch_out_period:\n","                static_short_out = res_df['short_out'].iloc[j]\n","            \n","            except Exception as e:\n","              pass\n","\n","              # ------- static out ------ #\n","            try:\n","              if out and res_df['low'].iloc[j] <= static_short_out:\n","                config.out_set.retouch = 1\n","            except Exception as e:\n","              pass\n","\n","            \n","              # ------- config.out_set.retouch out ------ #\n","            # if out and res_df['low'].iloc[j] <= short_out2.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","\n","            # -------------- st -------------- #\n","            # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:    \n","            # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j]:\n","            # if res_df['close'].iloc[j] > upper_middle.iloc[j]:\n","            # if res_df['close'].iloc[j] > res_df['minor_ST1_Up'].iloc[j]:\n","            if out == 0:              \n","              if config.out_set.hl_out:\n","                if res_df['high'].iloc[j] >= res_df['short_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              else:\n","                if res_df['close'].iloc[j] >= res_df['short_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              # out_idx = j\n","              # static_short_out = short_out.iloc[out_j]\n","              # if config.out_set.second_out:              \n","                # static_short_out = short_out.iloc[out_j] + res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","            \n","            # if out == 0 and res_df['high'].iloc[j] >= short_out.iloc[out_j]: # check out only once\n","            #   out = 1\n","             \n","\n","            # -------------- sma -------------- #\n","            # if res_df['close'].iloc[j] > res_df[sma].iloc[j]:\n","\n","            # -------------- sar -------------- #\n","            # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j] \\\n","            #   or res_df['sar2'].iloc[j] <= res_df['high'].iloc[j]:\n","            # if res_df['close'].iloc[j] > short_out.iloc[initial_i]: # or \\\n","            #   out = 1\n","              # res_df['sar2_uptrend'].iloc[j] == 1: # or \\\n","\n","            # if res_df['sar2_uptrend'].iloc[j] == 1:\n","\n","            #   if prev_sar is None:\n","            #     prev_sar = res_df['sar2'].iloc[j - 1]\n","              \n","            #   if res_df['close'].iloc[j] > prev_sar:\n","            #     out = 1\n","\n","            # else:\n","            #   if res_df['close'].iloc[j] > res_df['sar2'].iloc[j]:\n","            #     out = 1\n","              \n","            # -------------- hl -------------- #\n","            # if res_df['close'].iloc[j] > short_out.iloc[tp_j]:\n","            \n","            # -------------- stoch -------------- #\n","            # if res_df['stoch'].iloc[j - 2] >= res_df['stoch'].iloc[j - 1] and \\\n","            #   res_df['stoch'].iloc[j - 1] < res_df['stoch'].iloc[j] and \\\n","            #   res_df['stoch'].iloc[j - 1] <= stoch_lower:\n","            #   out = 1\n","\n","            # config.out_set.retouch 1 경우, config.out_set.retouch 조건도 있어야함\n","            if out:\n","              if config.out_set.retouch:\n","                if config.out_set.retouch:\n","                  pass\n","                else:\n","                    continue\n","\n","              else:\n","                pass\n","\n","              if config.out_set.price_restoration:\n","                tp = res_df['short_out'].iloc[out_j]\n","                if config.out_set.second_out:\n","                  tp = res_df['short_out2'].iloc[out_j]\n","                \n","                # if res_df['close'].iloc[j] > tp: # 이 경우를 protect 하는건 insane 임\n","                #   tp = res_df['close'].iloc[j]\n","\n","              else:\n","                \n","                if res_df['open'].iloc[j] >= res_df['short_out'].iloc[out_j]:\n","                  tp = res_df['open'].iloc[j]\n","                else:\n","                  if config.out_set.hl_out:\n","                    tp = res_df['short_out'].iloc[out_j]\n","                  else:\n","                    tp = res_df['close'].iloc[j]\n","                \n","                # if not config.out_set.static_out:\n","                #   if res_df['open'].iloc[j] >= res_df['short_out'].iloc[out_j]: # close 기준이라 이런 조건을 못씀, 차라리 j 를 i 부터 시작\n","                #     tp = res_df['open'].iloc[j]\n","                #   else:\n","                #     tp = res_df['close'].iloc[j]\n","\n","                # else:\n","                #   tp = res_df['close'].iloc[j]\n","\n","              \n","              if config.out_set.retouch: # out 과 open 비교\n","                if config.out_set.second_out:\n","                  if res_df['open'].iloc[j] <= res_df['short_out2'].iloc[out_j]:\n","                    tp = res_df['open'].iloc[j]\n","                else:\n","                  if res_df['open'].iloc[j] <= res_df['short_out'].iloc[out_j]:\n","                    tp = res_df['open'].iloc[j]\n","\n","                try: # static_short_out 인 경우, open 도 고려한 tp set\n","                  if res_df['open'].iloc[j] <= static_short_out:\n","                    tp = res_df['open'].iloc[j]\n","                  else:\n","                    tp = static_short_out\n","                except Exception as e:\n","                  pass\n","\n","              trade_done = 1\n","              tp_state_list.append(\"short close_out\")\n","            \n","\n","              tp_list.append(tp) \n","              tp_idx_list.append(j)\n","              fee += config.trader_set.market_fee\n","\n","\n","          # -------------- non tp -------------- #\n","          if j == len(res_df) - 1:\n","            trade_done = 1\n","            tp = res_df['close'].iloc[j]\n","            tp_list.append(tp) \n","            tp_idx_list.append(j)\n","            fee += config.trader_set.market_fee\n","          \n","\n","\n","          # -------------- append trade data -------------- #\n","          if trade_done:\n","\n","            # --------------- tp_ratio info --------------- #\n","            #         Todo        #\n","            #          short_out 에 대한 정보는 존재함,\n","            #          short_tp 에 대한 정보는 존재함,\n","            #       => initial_i 기준으로 ,dynamic | static set 을 tp 와 out 에 각각 적용\n","            #          config.lvrg_set.leverage 는 initial_i 기준으로 적용되니까\n","            #          적용된 tp & out 으로 abs((tp - ep) / (ep - out)) 계산\n","            try:\n","              if use_out:\n","                done_tp = res_df['short_tp'].iloc[ep_j]\n","                done_out = res_df['short_out'].iloc[ep_j]\n","\n","                if done_out <= ep_list[0]: # loss > 1\n","                  dr = np.nan\n","                  tp_ratio = np.nan\n","                else:                \n","                  dr = ((ep_list[0] - done_tp) / (done_out - ep_list[0]))\n","                  tp_ratio = ((ep_list[0] - done_tp - tp_fee * ep_list[0]) / (done_out - ep_list[0] + out_fee * ep_list[0]))\n","                \n","              else:\n","                dr = np.nan\n","                tp_ratio = np.nan  \n","\n","\n","            except Exception as e:\n","              dr = np.nan \n","              tp_ratio = np.nan  \n","            \n","            tp_ratio_list.append(tp_ratio)\n","            short_tp_ratio_list.append(tp_ratio)     \n","            dr_list.append(dr)\n","            short_dr_list.append(dr)   \n","\n","\n","            # -------------------- partial tp -------------------- #\n","            #        1. len(tp_list) 에 대응하는 qty_list 를 만들어야함    #\n","            #        2. temp_pr_list 를 만들어 총합 + 1 을 pr_list 에 저장      #\n","            #        2-1. temp_pr = sum((ep / tp_list[i] - fee - 1) * qty_list[i])   #\n","            #        3. temp_pr_list 의 첫 tp 에는 r_qty 를 할당함        #\n","            qty_list = []\n","            temp_pr_list = []\n","            r_qty = 1\n","            for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","              if len(tp_list) == 1:\n","                temp_qty = r_qty\n","              else:\n","                if q_i !=0:\n","                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                else:\n","                  temp_qty = r_qty\n","\n","              temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","              # temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty\n","              r_qty -= temp_qty\n","\n","              temp_pr_list.append(temp_pr)\n","              qty_list.append(temp_qty)\n","\n","            # if len(temp_pr_list) == 1:\n","            #   print(\"qty_list :\", qty_list)\n","            #   print(\"temp_pr_list :\", temp_pr_list)\n","\n","            temp_pr = sum(temp_pr_list) + 1\n","\n","            # -------------------- sub ep -> pr calc -------------------- #\n","            if len(ep_list) > 1:\n","            \n","              p_ep_pr = []\n","              for sub_ep_ in ep_list:\n","                sub_pr = (sub_ep_ / tp - fee - 1) * config.lvrg_set.leverage\n","                p_ep_pr.append(sub_pr)\n","\n","              temp_pr = sum(p_ep_pr) + 1\n","\n","              print(\"temp_pr :\", temp_pr)\n","\n","            # ------------ hedge + non_hedge pr summation ------------ #\n","            #         hedge pr direction is opposite to the origin       #\n","            hedge_pr = 1\n","            if hedge_cnt == 0:\n","\n","              #       hedge tp      #\n","              h_tp = res_df['close'].iloc[j]\n","              hedge_pr = (h_tp / h_ep - fee - 1) * config.lvrg_set.leverage  # hedge long\n","              temp_pr += hedge_pr\n","              h_j = j\n","\n","            \n","            # hh = max(res_df['high'].iloc[i:j + 1])\n","            hh = max(res_df['high'].iloc[i:j])    # pos. 정리하기 바로 직전까지\n","            short_liq = (ep_list[0] / hh - fee - 1) * config.lvrg_set.leverage + 1\n","\n","            if j != len(res_df) - 1:\n","\n","              # ep_tp_list.append((ep, tp_list))  \n","              ep_tp_list.append((ep_list, tp_list))  \n","              # trade_list.append([initial_i, i, j])\n","              trade_list.append((ep_idx_list, tp_idx_list))\n","\n","              liqd_list.append(short_liq)\n","              short_liqd_list.append(short_liq)\n","\n","              h_ep_tp_list.append((h_ep, h_tp))      # hedge 도 ep_tp_list 처럼 변경해주어야하는데 아직 안건드림, 딱히 사용할 일이 없어보여   \n","              h_trade_list.append([initial_i, h_i, h_j])                \n","\n","              pr_list.append(temp_pr)\n","              fee_list.append(fee)\n","              short_list.append(temp_pr)\n","              short_fee_list.append(fee)\n","\n","              h_pr_list.append(hedge_pr)\n","              h_short_list.append(hedge_pr)\n","\n","              i = j\n","              break\n","\n","            else:\n","\n","              # ep_tp_list.append((ep_list, tp_list))\n","              # trade_list.append((ep_idx_list, tp_idx_list))\n","              # plot_check 때문에, pr_list 까지 하게되면 acc_pr eval 이 꼬이게댐\n","          \n","              # pr_list 를 넣지 않을거니까, open_list 에서 해당 idx 는 pop\n","              open_list.pop()\n","              zone_list.pop()\n","              side_list.pop()\n","              \n","              #         tp 미체결 survey        #\n","              nontp_liqd_list.append(short_liq)\n","              nontp_short_liqd_list.append(short_liq)\n","              nontp_short_indexs.append(i)\n","              nontp_short_ep_list.append(ep_list[0])\n","\n","              nontp_short_pr = (ep_list[0] / tp - fee - 1) * config.lvrg_set.leverage + 1\n","              nontp_pr_list.append(nontp_short_pr)\n","              nontp_short_pr_list.append(nontp_short_pr)\n","\n","\n","      #                  long  phase                #\n","      elif res_df['entry'][i] == -config.ep_set.short_entry_score: \n","      \n","\n","        initial_i = i\n","\n","        if config.out_set.static_out:\n","          p_i = initial_i\n","        else:\n","          p_i = i\n","\n","        \n","        res_df, open_side_str, zone = long_ep_loc(res_df, config, i, show_detail)\n","\n","        # -------------- mr_score summation -------------- #\n","        if open_side_str is not None:        \n","          pass\n","        \n","        else:\n","          i += 1\n","          if i >= len(res_df):\n","            break\n","          continue\n","\n","        # print(\"i after long_ep_loc :\", i)\n","\n","\n","        ep_j = initial_i\n","      \n","        # -------------- limit waiting const. -------------- #      \n","        if config.ep_set.entry_type == \"LIMIT\":\n","\n","          entry_done = 0\n","          entry_open = 0\n","          prev_sar = None\n","\n","          # for e_j in range(i, len(res_df)):   \n","\n","          if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","            break\n","          for e_j in range(i + 1, len(res_df)):  # entry 가 close 기준일 경우 사용 (open 기준일 경우 i 부터 시작해도 무방함)\n","            \n","            if not config.ep_set.static_ep:\n","              ep_j = e_j  \n","            \n","            if config.tp_set.static_tp:\n","              # if config.ep_set.tpout_onexec:\n","              #   tp_j = e_j\n","              # else:\n","                tp_j = initial_i\n","            else:\n","              tp_j = e_j  \n","\n","            \n","            #          np.inf ep         #\n","            # if long_ep.iloc[initial_i] == np.inf:\n","            #   break\n","            \n","            #          1. check ep_out          #\n","            if config.loc_set.zone.ei_k != \"None\":\n","              if res_df['high'].iloc[e_j] >= res_df['h_long_rtc_1'].iloc[tp_j] + res_df['h_long_rtc_gap'].iloc[tp_j] * config.loc_set.zone.ei_k:\n","              # if res_df['high'].iloc[e_j] >= res_df['long_tp'].iloc[tp_j]:                \n","              # if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                break\n","\n","              # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] <= rsi_upper) & \\\n","              #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] > rsi_upper):\n","              #   break\n","\n","            #          2. check ep_in          #\n","            if res_df['low'].iloc[e_j] <= res_df['long_ep'].iloc[ep_j]:\n","              entry_done = 1\n","              # print(\"e_j :\", e_j)\n","              \n","              #     이미, e_j open 이 ep 보다 낮은 경우, entry[initial_i] => -2 로 변경   #\n","              if res_df['open'].iloc[e_j] <= res_df['long_ep'].iloc[ep_j]:\n","                entry_open = 1\n","\n","              break\n","\n","\n","          i = e_j\n","          # print(\"i = e_j :\", i)\n","\n","          if entry_done:      \n","            pass\n","            # print(\"i, entry_done :\", i, entry_done)\n","\n","          else:\n","            i += 1\n","            if i >= len(res_df):\n","              # print(\"i :\", i)\n","              break\n","\n","            # print(\"i in continue :\", i)          \n","            continue\n","\n","\n","        # ---------------- end wait ---------------- #\n","        # if e_j - initial_i >= 200:\n","        #   print(\"e_j, initial_i :\", e_j, initial_i)\n","        \n","        # print(i)\n","\n","        open_list.append(initial_i)\n","        zone_list.append(zone)\n","        side_list.append('l')\n","\n","        if config.ep_set.entry_type is 'MARKET':\n","          ep_list = [res_df['close'].iloc[ep_j]]\n","        else:\n","          if not entry_open:\n","            ep_list = [res_df['long_ep'].iloc[ep_j]]\n","          else:\n","            # try:\n","            #   ep_list = [res_df['open'].iloc[e_j]]\n","            # except Exception as e:\n","            ep_list = [res_df['open'].iloc[ep_j]]\n","\n","        if not config.lvrg_set.static_lvrg:\n","          config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep'].iloc[ep_j] / res_df['long_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep_org'].iloc[ep_j] / res_df['long_out'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['long_out'].iloc[ep_j] / res_df['long_ep'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['long_out'].iloc[ep_j] / res_df['long_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","          \n","          if not config.lvrg_set.allow_float:\n","            config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","          # -------------- leverage rejection -------------- #\n","          if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","            open_list.pop()\n","            zone_list.pop()\n","            side_list.pop()\n","            i += 1\n","            if i >= len(res_df):\n","              break\n","            continue\n","\n","          config.lvrg_set.leverage = max(config.lvrg_set.leverage, 1)\n","          leverage_list.append(config.lvrg_set.leverage)\n","\n","        config.lvrg_set.leverage = min(50, config.lvrg_set.leverage)        \n","          \n","        # try:\n","        #   ep_idx_list = [e_j]\n","        # except Exception as e:\n","          # print('error in ep_idx_list :', e)\n","        ep_idx_list = [ep_j]\n","\n","        tp_list = []\n","        tp_idx_list = []\n","\n","        partial_tp_cnt = 0\n","        hedge_cnt = 1\n","\n","        h_ep, h_tp = None, None        \n","        h_i, h_j = None, None      \n","\n","        trade_done = False\n","        out = False          \n","        config.out_set.retouch = False\n","\n","\n","        if i == len(res_df) - 1: # if j start from i + 1 \n","          open_list.pop()\n","          zone_list.pop()\n","          side_list.pop()\n","\n","        for j in range(i + 1, len(res_df)):\n","\n","        # for j in range(i, len(res_df)):  \n","          \n","          if config.tp_set.static_tp:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              tp_j = ep_j\n","            else:\n","              tp_j = initial_i\n","          else:\n","            tp_j = j\n","\n","          if config.out_set.static_out:\n","            if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","              out_j = ep_j\n","            else:           \n","              out_j = initial_i\n","          else:\n","            out_j = j   \n","\n","          # -------------- hedge only once -------------- #\n","          #             일단, h_quantity 는 초기 진입과 동일하게 설정         #\n","          # if res_df['low'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","          # if res_df['close'].iloc[j] <= res_df['minor_ST3_Down'].iloc[j] and hedge_cnt == 1:\n","\n","          #   h_ep = res_df['close'].iloc[j]\n","          #   hedge_cnt -= 1\n","          #   h_i = j\n","\n","          # -------------- sub ep -------------- #\n","          # if res_df['low'].iloc[j - 1] >= res_df['sar2'].iloc[j - 1] and res_df['low'].iloc[j] < res_df['sar2'].iloc[j]:\n","            \n","          #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","          #   if sub_ep > ep_list[-1]:\n","          #     ep_list.append(sub_ep)\n","          #     ep_idx_list.append(j)\n","\n","\n","          # -------------- ultimate tp -------------- #\n","          if not config.tp_set.non_tp:\n","            #            1. by level          #\n","            if config.tp_set.tp_type == \"LIMIT\" or config.tp_set.tp_type == \"BOTH\":\n","              \n","\n","              for l_i, long_tp_ in enumerate(long_tps):\n","\n","                if res_df['high'].iloc[j] >= long_tp_.iloc[tp_j] and partial_tp_cnt == l_i:\n","                # if res_df['high'].iloc[j] >= long_tp.iloc[j]:\n","\n","                  if l_i == len(long_tps) - 1:\n","                    trade_done = 1\n","\n","                  partial_tp_cnt += 1\n","\n","                  #         dynamic tp        #\n","                  # if 0:\n","                  if long_tp_.iloc[j] != long_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                    #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 # \n","                    # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","                    if res_df['open'].iloc[j] >= long_tp_.iloc[j]:\n","\n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"d-long_open\")\n","\n","                    \n","                    #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 # \n","                    else:\n","                      \n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[j]\n","                      # tp = res_df['open'].iloc[j]\n","                      \n","                      if trade_done:\n","                        tp_state_list.append(\"d-long_tp\")\n","\n","                  #         static tp         #\n","                  else:\n","\n","                    #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 # \n","                    #   non_inversion 의 경우, short_tp 가 가능함   #\n","\n","                    if res_df['open'].iloc[j] >= long_tp_.iloc[tp_j]:\n","                    # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","\n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-long_tp\")\n","\n","                    \n","                    #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 # \n","                    else:\n","                      \n","                      # tp = long_tp_.iloc[initial_i]\n","                      tp = long_tp_.iloc[tp_j]\n","\n","                      # tp = res_df['open'].iloc[j]\n","\n","                      if trade_done:\n","                        tp_state_list.append(\"s-long_tp\")         \n","                  \n","                  tp_list.append(tp)\n","                  tp_idx_list.append(j)\n","                  fee += config.trader_set.limit_fee\n","\n","            #           2. by time        #\n","            if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","              market_tp = 0\n","\n","              # -------------- sar tp -------------- #\n","              # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","              \n","              #       inversion     #\n","              # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","              #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","              #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","\n","              # ----------- st long ----------- #\n","              # if res_df['close'].iloc[j] >= res_df['long_tp'].iloc[tp_j]:\n","\n","              # -------------- sar pb tp -------------- #\n","              # if res_df['high'].iloc[j] >= res_df['long_tp'].iloc[initial_i]:\n","\n","              # -------------- st tp -------------- #\n","              # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","\n","              # -------------- fisher tp -------------- #\n","              # if entry[j] == -1:\n","              \n","              # -------------- timestamp -------------- #\n","              # if np_timeidx[j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","\n","              # -------------- rsi -------------- #\n","              if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] <= rsi_upper) & \\\n","                               (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] > rsi_upper):\n","                market_tp = 1\n","              \n","              # -------------- rsi slight touch -------------- #\n","              elif allow_rsi_touch:\n","                if (np.max(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[initial_i:j]) > rsi_upper - rsi_gap) & \\\n","                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] <= 50):\n","                  market_tp = 1\n","                              \n","              if market_tp:\n","\n","                tp = res_df['close'].iloc[j]\n","                # tp = res_df['open'].iloc[j]\n","                trade_done = 1\n","\n","                if trade_done:\n","                  tp_state_list.append(\"long close tp\")\n","\n","                tp_list.append(tp) \n","                tp_idx_list.append(j)\n","                fee += config.trader_set.market_fee\n","\n","\n","\n","          # -------------- out -------------- #\n","          if not trade_done and config.out_set.use_out and j != len(res_df) - 1:              \n","\n","            # -------------- macd -------------- #\n","            # if res_df['macd_hist3'].iloc[j] < 0:\n","            # # if res_df['macd_hist3'].iloc[i] > 0 and res_df['macd_hist3'].iloc[j] < 0:\n","\n","            # -------------- st config.out_set.retouch -------------- #\n","            # out = 1 상태면 동일 tick 에서 config.out_set.retouch 를 조사할 거기 때문에, 먼저 검사함\n","            # 그리고, out 기준이 close 라 이게 맞음 \n","            # close 가 long_out 보다 내려가있는 상태일테니 high 를 조사하는게 맞음           \n","            # if out and res_df['high'].iloc[j] >= long_out.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","            \n","            # ------- 일정시간 이상, dynamic_out 적용 ------ #\n","            try:\n","              if j - out_idx >= config.out_set.retouch_out_period:\n","                static_long_out = res_df['long_out'].iloc[j]\n","            \n","            except Exception as e:\n","              pass\n","\n","              # ------- static out ------ #\n","            try:\n","              if out and res_df['high'].iloc[j] >= static_long_out:\n","                config.out_set.retouch = 1\n","            except Exception as e:\n","              pass\n","\n","              # ------- config.out_set.retouch out ------ #\n","            # if out and res_df['high'].iloc[j] >= long_out2.iloc[out_j]:\n","            #   config.out_set.retouch = 1\n","\n","\n","\n","            # -------------- st -------------- #\n","            # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","            # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j]:\n","            # if res_df['close'].iloc[j] < lower_middle.iloc[j]:\n","            # if res_df['close'].iloc[j] < res_df['minor_ST1_Down'].iloc[j]:\n","            if out == 0:\n","              if config.out_set.hl_out:\n","                if res_df['low'].iloc[j] <= res_df['long_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              else:\n","                if res_df['close'].iloc[j] <= res_df['long_out'].iloc[out_j]: # check out only once\n","                  out = 1\n","\n","              # out_idx = j\n","              # static_long_out = long_out.iloc[out_j]\n","              # if config.out_set.second_out:\n","              # static_long_out = long_out.iloc[out_j] - res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","\n","            # if out == 0 and res_df['low'].iloc[j] <= long_out.iloc[out_j]: # check out only once\n","            #   out = 1            \n","            \n","\n","\n","            # -------------- sma -------------- #\n","            # if res_df['close'].iloc[j] < res_df[sma].iloc[j]:\n","\n","            # -------------- sar -------------- #\n","            # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j] \\\n","            #   or res_df['sar2'].iloc[j] >= res_df['low'].iloc[j]:\n","            # if res_df['close'].iloc[j] < long_out.iloc[initial_i]: # or \\\n","            #   #  res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","            #   #  res_df['sar2_uptrend'].iloc[j] == 0 or \\\n","            #   out = 1\n","            \n","            # if res_df['sar2_uptrend'].iloc[j] == 0:\n","\n","            #     if prev_sar is None:\n","            #       prev_sar = res_df['sar2'].iloc[j - 1]\n","                \n","            #     if res_df['close'].iloc[j] < prev_sar:\n","            #       out = 1\n","\n","            # else:\n","            #   if res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","            #     out = 1\n","\n","            # -------------- hl -------------- #\n","            # if res_df['close'].iloc[j] < long_out.iloc[tp_j]:\n","\n","            # -------------- stoch -------------- #\n","            # if res_df['stoch'].iloc[j - 2] <= res_df['stoch'].iloc[j - 1] and \\\n","            #   res_df['stoch'].iloc[j - 1] > res_df['stoch'].iloc[j] and \\\n","            #   res_df['stoch'].iloc[j - 1] >= stoch_upper:\n","            #   out = 1\n","\n","            # config.out_set.retouch 1 경우, config.out_set.retouch 조건도 있어야함\n","            if out:\n","              if config.out_set.retouch:\n","                if config.out_set.retouch:\n","                  pass\n","                else:\n","                    continue\n","\n","              else:\n","                pass\n","\n","              if config.out_set.price_restoration:\n","                tp = res_df['long_out'].iloc[out_j]\n","                if config.out_set.second_out:\n","                  tp = res_df['long_out2'].iloc[out_j]\n","\n","                # if res_df['close'].iloc[j] < tp: # 이 경우를 protect 하는건 insane 임\n","                # # if res_df['high'].iloc[j] < tp: # --> config.out_set.hl_out 사용시 이 조건은 valid 함\n","                #   tp = res_df['close'].iloc[j]\n","\n","              else:\n","\n","                if res_df['open'].iloc[j] <= res_df['long_out'].iloc[out_j]:\n","                  tp = res_df['open'].iloc[j]\n","                else:\n","                  if config.out_set.hl_out:\n","                    tp = res_df['long_out'].iloc[out_j]\n","                  else:\n","                    tp = res_df['close'].iloc[j]\n","\n","                # if not config.out_set.static_out:\n","                #   if res_df['open'].iloc[j] <= res_df['long_out'].iloc[out_j]: # dynamic close out 의 open 고려\n","                #     tp = res_df['open'].iloc[j]\n","                #   else:\n","                #     tp = res_df['close'].iloc[j]\n","\n","                # else:\n","                #   tp = res_df['close'].iloc[j]\n","\n","              if config.out_set.retouch: # out 과 open 비교\n","                if config.out_set.second_out:  # long_out = sell\n","                # config.out_set.second_out 은 기본적으로 limit 이라 이 구조가 가능함\n","                  if res_df['open'].iloc[j] >= res_df['long_out2'].iloc[out_j]: # dynamic_out 일 경우 고려해야함\n","                    tp = res_df['open'].iloc[j]\n","                else:\n","                  if res_df['open'].iloc[j] >= res_df['long_out'].iloc[out_j]: # dynamic_out 일 경우 고려해야함\n","                    tp = res_df['open'].iloc[j]\n","\n","                try:\n","                  if res_df['open'].iloc[j] >= static_long_out:\n","                    tp = res_df['open'].iloc[j]\n","                  else:\n","                    tp = static_long_out\n","                except Exception as e:\n","                  pass\n","\n","              # tp = res_df['open'].iloc[j]\n","              tp_state_list.append(\"long close_out\")\n","              trade_done = 1\n","\n","              tp_list.append(tp)\n","              tp_idx_list.append(j)\n","              fee += config.trader_set.market_fee\n","\n","          \n","          # -------------- non tp -------------- #\n","          if j == len(res_df) - 1:\n","            trade_done = 1\n","            tp = res_df['close'].iloc[j]\n","            tp_list.append(tp) \n","            tp_idx_list.append(j)\n","            fee += config.trader_set.market_fee\n","\n","\n","          if trade_done:\n","\n","            # --------------- tp_ratio info --------------- #\n","            try:\n","              if use_out:\n","                done_tp = res_df['long_tp'].iloc[ep_j]\n","                done_out = res_df['long_out'].iloc[ep_j]\n","\n","                if done_out >= ep_list[0]: # loss >= 1\n","                  tp_ratio = np.nan\n","                  dr = np.nan\n","                else:\n","                  tp_ratio = ((done_tp - ep_list[0] - tp_fee * ep_list[0]) / (ep_list[0] - done_out + out_fee * ep_list[0]))                \n","                  dr = ((done_tp - ep_list[0]) / (ep_list[0] - done_out))          \n","\n","              else:      \n","                dr = np.nan\n","                tp_ratio = np.nan\n","\n","            except Exception as e:\n","              dr = np.nan              \n","              tp_ratio = np.nan\n","            \n","            tp_ratio_list.append(tp_ratio)\n","            long_tp_ratio_list.append(tp_ratio)\n","            dr_list.append(dr)\n","            long_dr_list.append(dr)\n","\n","\n","            qty_list = []\n","            temp_pr_list = []\n","            r_qty = 1\n","            for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","              if len(tp_list) == 1:\n","                temp_qty = r_qty\n","              else:\n","                if q_i !=0:\n","                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                else:\n","                  temp_qty = r_qty\n","\n","              # temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty\n","              temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","              r_qty -= temp_qty\n","\n","              temp_pr_list.append(temp_pr)\n","\n","            temp_pr = sum(temp_pr_list) + 1\n","\n","            # -------------------- sub ep -> pr calc -------------------- #\n","            if len(ep_list) > 1:\n","            \n","              p_ep_pr = []\n","              for sub_ep_ in ep_list:\n","                sub_pr = (tp / sub_ep_ - fee - 1) * config.lvrg_set.leverage\n","                p_ep_pr.append(sub_pr)\n","\n","              temp_pr = sum(p_ep_pr) + 1\n","\n","              print(\"temp_pr :\", temp_pr)\n","\n","            # ------------ hedge + non_hedge pr summation ------------ #\n","            #         hedge pr direction is opposite to the origin       #\n","            hedge_pr = 1\n","            if hedge_cnt == 0:\n","\n","              #       hedge tp      #\n","              h_tp = res_df['close'].iloc[j]\n","              hedge_pr = (h_ep / h_tp - fee - 1) * config.lvrg_set.leverage  # hedge short\n","              temp_pr += hedge_pr\n","              h_j = j\n","\n","\n","            # ll = min(res_df['low'].iloc[i:j + 1])\n","            ll = min(res_df['low'].iloc[i:j])   # pos. 정리하기 바로 직전까지\n","            long_liq = (ll / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","\n","            if j != len(res_df) - 1:\n","\n","              ep_tp_list.append((ep_list, tp_list))\n","              trade_list.append((ep_idx_list, tp_idx_list))\n","\n","              liqd_list.append(long_liq)\n","              long_liqd_list.append(long_liq)\n","\n","              h_ep_tp_list.append((h_ep, h_tp))        \n","              h_trade_list.append([initial_i, h_i, h_j])                \n","\n","              pr_list.append(temp_pr)\n","              fee_list.append(fee)\n","              long_list.append(temp_pr)\n","              long_fee_list.append(fee)\n","\n","              h_pr_list.append(hedge_pr)\n","              h_long_list.append(hedge_pr)                    \n","\n","              i = j\n","              break\n","            \n","            else:\n","\n","              # ep_tp_list.append((ep_list, tp_list))\n","              # trade_list.append((ep_idx_list, tp_idx_list))\n","              \n","              # pr_list 를 넣지 않을거니까, open_list 에서 해당 idx 는 pop\n","              open_list.pop()\n","              zone_list.pop()\n","              side_list.pop()\n","          \n","              #         tp 미체결 survey        #\n","              nontp_liqd_list.append(long_liq)\n","              nontp_long_liqd_list.append(long_liq)\n","              nontp_long_indexs.append(i)\n","              nontp_long_ep_list.append(ep_list[0])\n","              \n","              nontp_long_pr = (tp / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","              nontp_pr_list.append(nontp_long_pr)\n","              nontp_long_pr_list.append(nontp_long_pr)\n","\n","            if len(open_list) > len(trade_list):\n","              print('debug from index :', i)\n","              print(len(open_list), len(trade_list))\n","              print(\"len(res_df) :\", len(res_df))\n","              assert len(open_list) == len(trade_list), 'stopped'\n","      \n","      i += 1  # if entry starts with prev trade's close, do not use it ! \n","      # print(\"i in end :\", i)\n","      if i >= len(res_df):\n","        break\n","\n","\n","\n","    # -------------------- result analysis -------------------- #\n","    # try:\n","    print(\"elapsed_time :\", time.time() - start_0)\n","\n","    plt.style.use('default')\n","    # mpl.rcParams.update(mpl.rcParamsDefault)\n","\n","    plt.figure(figsize=(16, 12))\n","    # plt.figure(figsize=(12, 8))\n","    # plt.figure(figsize=(10, 6))\n","    plt.suptitle(key)\n","\n","    try:\n","      np_pr = np.array(pr_list)\n","\n","      sr = sharpe_ratio(np_pr)\n","\n","      dpf = (len(res_df) / 1440) / len(np_pr)\n","\n","      np_zone_list = np.array(zone_list)\n","      # np_pr_list = np.array(pr_list)\n","      np_side_list = np.array(side_list)\n","\n","      t_w = np.sum(np.where((np_zone_list == 't') & (np_pr > 1), 1, 0))\n","      c_w = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1), 1, 0))\n","      t_ls = np.sum(np.where((np_zone_list == 't') & (np_pr < 1), 1, 0))\n","      c_ls = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1), 1, 0))\n","\n","      # np_pr = (np.array(pr_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # ----- fake_pr ----- #\n","      # np_pr = np.where(np_pr > 1, 1 + (np_pr - 1) * 3, np_pr)\n","\n","      total_pr = np.cumprod(np_pr)\n","\n","      for_sum_pr = np_pr - 1\n","      for_sum_pr[0] = 1\n","      sum_pr = np.cumsum(for_sum_pr)\n","      sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","      wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","\n","      np_tp_ratio_list = np.array(tp_ratio_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","      np_dr_list = np.array(dr_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","      # pr_gap = (np_pr - 1) / config.lvrg_set.leverage + fee\n","      # tp_gap_ = pr_gap[pr_gap > 0]\n","      # # mean_config.tr_set.tp_gap = np.mean(pr_gap[pr_gap > 0])\n","      # mean_ls_gap = np.mean(pr_gap[pr_gap < 0])\n","\n","      # ---- profit fee ratio ---- #\n","      # mean_pgfr = np.mean((tp_gap_ - fee) / abs(tp_gap_ + fee))\n","\n","      # plt.subplot(121)\n","      plt.subplot(231)\n","      plt.plot(total_pr)\n","      plt.plot(sum_pr, color='gold')\n","      if len(nontp_liqd_list) != 0:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_liqd_cnt : %s\\nnontp_liqd : %.3f\\nontp_liqd_pr : %.3f\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr, len(nontp_liqd_list), \n","                     min(nontp_liqd_list), min(nontp_pr_list), t_w, c_w, t_ls, c_ls),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr, len(nontp_liqd_list), t_w, c_w, t_ls, c_ls), \n","                  position=title_position)\n","      # plt.show()\n","\n","      survey_df.iloc[survey_i] = wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), \\\n","        total_pr[-1], sum_pr[-1], min(liqd_list), mean_tr, mean_dr, sr \n","\n","      print('supblot231 passed')\n","\n","    except Exception as e:\n","      print(\"error in 231 :\", e)\n","\n","\n","    try:\n","      #         short only      #\n","      short_np_pr = np.array(short_list)\n","\n","      short_sr = sharpe_ratio(short_np_pr)\n","\n","      short_dpf = (len(res_df) / 1440) / len(short_np_pr)\n","\n","      total_short_pr = np.cumprod(short_np_pr)\n","      \n","      short_for_sum_pr = short_np_pr - 1\n","      short_for_sum_pr[0] = 1\n","      short_sum_pr = np.cumsum(short_for_sum_pr)\n","      short_sum_pr = np.where(short_sum_pr < 0, 0, short_sum_pr)\n","\n","      short_wr = len(short_np_pr[short_np_pr > 1]) / len(short_np_pr[short_np_pr != 1])\n","      \n","      t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      # short_cumprod_profit = np.cumprod(short_np_pr[short_np_pr > 1])[-1]\n","      # short_cumprod_loss = np.cumprod(short_np_pr[short_np_pr < 1])[-1]\n","      # short_pr_tr = short_cumprod_profit * short_cumprod_loss\n","\n","      np_short_tp_ratio_list = np.array(short_tp_ratio_list)\n","      mean_short_tr = np.mean(np_short_tp_ratio_list[np.isnan(np_short_tp_ratio_list) == 0])\n","      \n","      np_short_dr_list = np.array(short_dr_list)\n","      mean_short_dr = np.mean(np_short_dr_list[np.isnan(np_short_dr_list) == 0])\n","      \n","      # short_pr_gap = (short_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # short_tp_gap = short_pr_gap[short_pr_gap > 0]\n","      # # mean_short_tp_gap = np.mean(short_pr_gap[short_pr_gap > 0])\n","      # # mean_short_ls_gap = np.mean(short_pr_gap[short_pr_gap < 0])\n","\n","      # mean_short_pgfr = np.mean((short_tp_gap - fee) / abs(short_tp_gap + fee))\n","      \n","      plt.subplot(232)\n","      plt.plot(total_short_pr)\n","      plt.plot(short_sum_pr, color='gold')\n","      if len(nontp_short_liqd_list) != 0:   \n","\n","        max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","        \n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), total_short_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_short_liqd_cnt : %s\\nnontp_short_liqd : %.3f\\nontp_short_liqd_pr : %.3f\\nmax_nontp_short_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr, \n","                     len(nontp_short_liqd_list), min(nontp_short_liqd_list), min(nontp_short_pr_list), max_nontp_short_term, t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), total_short_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_short_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr, len(nontp_short_liqd_list), t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position)\n","\n","      short_survey_df.iloc[survey_i] = short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), \\\n","          total_short_pr[-1], short_sum_pr[-1], min(short_liqd_list), mean_short_tr, mean_short_dr, short_sr     \n","\n","      print('supblot232 passed')\n","    \n","    except Exception as e:\n","      print(\"error in 232 :\", e)\n","\n","    try:\n","      #         long only      #\n","      long_np_pr = np.array(long_list)\n","      # long_np_pr = (np.array(long_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      long_sr = sharpe_ratio(long_np_pr)\n","\n","      long_dpf = (len(res_df) / 1440) / len(long_np_pr)\n","\n","      total_long_pr = np.cumprod(long_np_pr)\n","      \n","      long_for_sum_pr = long_np_pr - 1\n","      long_for_sum_pr[0] = 1\n","      long_sum_pr = np.cumsum(long_for_sum_pr)\n","      long_sum_pr = np.where(long_sum_pr < 0, 0, long_sum_pr)\n","\n","      long_wr = len(long_np_pr[long_np_pr > 1]) / len(long_np_pr[long_np_pr != 1])\n","\n","      t_w_l = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      c_w_l = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      t_ls_l = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      c_ls_l = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      # long_cumprod_profit = np.cumprod(long_np_pr[long_np_pr > 1])[-1]\n","      # long_cumprod_loss = np.cumprod(long_np_pr[long_np_pr < 1])[-1]\n","      # long_pr_tr = long_cumprod_profit * long_cumprod_loss\n","\n","      np_long_tp_ratio_list = np.array(long_tp_ratio_list)\n","      mean_long_tr = np.mean(np_long_tp_ratio_list[np.isnan(np_long_tp_ratio_list) == 0])\n","      \n","      np_long_dr_list = np.array(long_dr_list)\n","      mean_long_dr = np.mean(np_long_dr_list[np.isnan(np_long_dr_list) == 0])\n","\n","      # long_pr_gap = (long_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # long_tp_gap = long_pr_gap[long_pr_gap > 0]\n","      # # mean_long_tp_gap = np.mean(long_pr_gap[long_pr_gap > 0])\n","      # # mean_long_ls_gap = np.mean(long_pr_gap[long_pr_gap < 0])\n","\n","      # mean_long_pgfr = np.mean((long_tp_gap - fee) / abs(long_tp_gap + fee))\n","\n","      plt.subplot(233)\n","      plt.plot(total_long_pr)\n","      plt.plot(long_sum_pr, color='gold')\n","      if len(nontp_long_liqd_list) != 0:\n","\n","        max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), total_long_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_long_liqd_cnt : %s\\nnontp_long_liqd : %.3f\\nontp_long_liqd_pr : %.3f\\nmax_nontp_long_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr, \n","                     len(nontp_long_liqd_list), min(nontp_long_liqd_list), min(nontp_long_pr_list), max_nontp_long_term, t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), total_long_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n leverage %s\\nliqd : %.3f\\nmean_tr : %.3f\\n mean_dr : %.3f\\n nontp_long_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\" \n","                  % (config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr, len(nontp_long_liqd_list), t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position)\n","\n","      long_survey_df.iloc[survey_i] = long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), \\\n","        total_long_pr[-1], long_sum_pr[-1], min(long_liqd_list), mean_long_tr, mean_long_dr, long_sr     \n","\n","      print('supblot233 passed')\n","\n","    except Exception as e:\n","      print(\"error in 233 :\", e)\n","\n","\n","    try:\n","      #     reversion adjustment      #\n","      # rev_np_pr = 1 / (np.array(pr_list) + fee) - fee\n","      rev_fee = tp_fee + out_fee - np.array(fee_list)\n","      rev_np_pr = (1 / ((np.array(pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - rev_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_np_pr = (1 / (np.array(pr_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_sr = sharpe_ratio(rev_np_pr)\n","\n","      rev_total_pr = np.cumprod(rev_np_pr)\n","      rev_wr = len(rev_np_pr[rev_np_pr > 1]) / len(rev_np_pr[rev_np_pr != 1])\n","\n","      rev_total_for_sum_pr = rev_np_pr - 1\n","      rev_total_for_sum_pr[0] = 1\n","      rev_total_sum_pr = np.cumsum(rev_total_for_sum_pr)\n","      rev_total_sum_pr = np.where(rev_total_sum_pr < 0, 0, rev_total_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(234)\n","      plt.plot(rev_total_pr)\n","      plt.plot(rev_total_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_wr, np.min(rev_np_pr), rev_total_pr[-1], rev_total_sum_pr[-1], rev_sr))\n","      \n","      rev_survey_df.iloc[survey_i] = rev_wr, np.min(rev_np_pr), rev_total_pr[-1], rev_total_sum_pr[-1], rev_sr\n","\n","    except Exception as e:\n","      print(\"error in 234 :\", e)\n","\n","    try:\n","      #         short       #\n","      # rev_short_np_pr = 1 / (np.array(short_list) + fee) - fee\n","      rev_short_fee = tp_fee + out_fee - np.array(short_fee_list)\n","      rev_short_np_pr = (1 / ((np.array(short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - rev_short_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_short_np_pr = (1 / (np.array(short_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","      \n","      rev_short_sr = sharpe_ratio(rev_short_np_pr)\n","          \n","      rev_total_short_pr = np.cumprod(rev_short_np_pr)\n","      rev_short_wr = len(rev_short_np_pr[rev_short_np_pr > 1]) / len(rev_short_np_pr[rev_short_np_pr != 1])\n","\n","      rev_short_for_sum_pr = rev_short_np_pr - 1\n","      rev_short_for_sum_pr[0] = 1\n","      rev_short_sum_pr = np.cumsum(rev_short_for_sum_pr)\n","      rev_short_sum_pr = np.where(rev_short_sum_pr < 0, 0, rev_short_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(235)\n","      plt.plot(rev_total_short_pr)\n","      plt.plot(rev_short_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_short_wr, np.min(rev_short_np_pr), rev_total_short_pr[-1], rev_short_sum_pr[-1], rev_short_sr))\n","\n","      rev_short_survey_df.iloc[survey_i] = rev_short_wr, np.min(rev_short_np_pr), rev_total_short_pr[-1], rev_short_sum_pr[-1], rev_short_sr\n","\n","    except Exception as e:\n","      print(\"error in 235 :\", e)\n","\n","    try:\n","      #         long       #\n","      # rev_long_np_pr = 1 / (np.array(long_list) + fee) - fee\n","      rev_long_fee = tp_fee + out_fee - np.array(long_fee_list)\n","      rev_long_np_pr = (1 / ((np.array(long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - rev_long_fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_long_sr = sharpe_ratio(rev_long_np_pr)\n","\n","      rev_total_long_pr = np.cumprod(rev_long_np_pr)\n","      rev_long_wr = len(rev_long_np_pr[rev_long_np_pr > 1]) / len(rev_long_np_pr[rev_long_np_pr != 1])\n","\n","      rev_long_for_sum_pr = rev_long_np_pr - 1\n","      rev_long_for_sum_pr[0] = 1\n","      rev_long_sum_pr = np.cumsum(rev_long_for_sum_pr)\n","      rev_long_sum_pr = np.where(rev_long_sum_pr < 0, 0, rev_long_sum_pr)\n","\n","      # plt.subplot(122)\n","      plt.subplot(236)\n","      plt.plot(rev_total_long_pr)\n","      plt.plot(rev_long_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                % (rev_long_wr, np.min(rev_long_np_pr), rev_total_long_pr[-1], rev_long_sum_pr[-1], rev_long_sr))\n","      \n","      rev_long_survey_df.iloc[survey_i] = rev_long_wr, np.min(rev_long_np_pr), rev_total_long_pr[-1], rev_long_sum_pr[-1], rev_long_sr\n","      \n","    except Exception as e:\n","      print(\"error in 236 :\", e)\n","\n","    if show_plot:\n","      plt.show()\n","    \n","\n","    try:\n","\n","      h_np_pr = np.array(h_pr_list)\n","      # h_rev_np_pr = 1 / (np.array(h_pr_list) + fee) - fee    # define, for plot_check below cell\n","      h_rev_np_pr = (1 / ((np.array(h_pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - np.array(fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # --------------------- h pr plot --------------------- #\n","      if len(h_np_pr[h_np_pr != 1]) != 0:\n","\n","        plt.figure(figsize=(16, 12))\n","        plt.suptitle(key + \" hedge\")\n","\n","        h_total_pr = np.cumprod(h_np_pr)\n","        h_wr = len(h_np_pr[h_np_pr > 1]) / len(h_np_pr[h_np_pr != 1])\n","\n","        # plt.subplot(121)\n","        plt.subplot(231)\n","        plt.plot(h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_wr, np.min(h_np_pr), h_total_pr[-1], config.lvrg_set.leverage))\n","        # plt.show()\n","\n","        #         short only      #\n","        h_short_np_pr = np.array(h_short_list)\n","\n","        h_total_short_pr = np.cumprod(h_short_np_pr)\n","        h_short_wr = len(h_short_np_pr[h_short_np_pr > 1]) / len(h_short_np_pr[h_short_np_pr != 1])\n","        \n","        plt.subplot(232)\n","        plt.plot(h_total_short_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_short_wr, np.min(h_short_np_pr), h_total_short_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long only      #\n","        h_long_np_pr = np.array(h_long_list)\n","\n","        h_total_long_pr = np.cumprod(h_long_np_pr)\n","        h_long_wr = len(h_long_np_pr[h_long_np_pr > 1]) / len(h_long_np_pr[h_long_np_pr != 1])\n","        \n","        plt.subplot(233)\n","        plt.plot(h_total_long_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_long_wr, np.min(h_long_np_pr), h_total_long_pr[-1], config.lvrg_set.leverage))\n","\n","\n","        #     reversion adjustment      #\n","            \n","        h_rev_total_pr = np.cumprod(h_rev_np_pr)\n","        h_rev_wr = len(h_rev_np_pr[h_rev_np_pr > 1]) / len(h_rev_np_pr[h_rev_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(234)\n","        plt.plot(h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_wr, np.min(h_rev_np_pr), h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         short       #\n","        # h_rev_short_np_pr = 1 / (np.array(h_short_list) + fee) - fee\n","        h_rev_short_np_pr =  (1 / ((np.array(h_short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - np.array(short_fee_list) - 1) * config.lvrg_set.leverage + 1\n","           \n","        h_rev_total_short_pr = np.cumprod(h_rev_short_np_pr)\n","        h_rev_short_wr = len(h_rev_short_np_pr[h_rev_short_np_pr > 1]) / len(h_rev_short_np_pr[h_rev_short_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(235)\n","        plt.plot(h_rev_total_short_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_short_wr, np.min(h_rev_short_np_pr), h_rev_total_short_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long       #\n","        # h_rev_long_np_pr = 1 / (np.array(h_long_list) + fee) - fee\n","        h_rev_long_np_pr =  (1 / ((np.array(h_long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - np.array(long_fee_list) - 1) * config.lvrg_set.leverage + 1\n","            \n","        h_rev_total_long_pr = np.cumprod(h_rev_long_np_pr)\n","        h_rev_long_wr = len(h_rev_long_np_pr[h_rev_long_np_pr > 1]) / len(h_rev_long_np_pr[h_rev_long_np_pr != 1])\n","\n","        # plt.subplot(122)\n","        plt.subplot(236)\n","        plt.plot(h_rev_total_long_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_long_wr, np.min(h_rev_long_np_pr), h_rev_total_long_pr[-1], config.lvrg_set.leverage))\n","        \n","        if show_plot:\n","          plt.show()\n","          \n","    except Exception as e:\n","      print('error in h_pr plot :', e)   \n","    \n","    print()\n","\n","\n","  # break # pair loop"],"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["2021-11-17 ETHUSDT.ftr loaded !\n","config.loc_set.point.exp_itv : 1m\n","config.loc_set.point.tpg_itv : 5m\n","config.loc_set.point.outg_itv : 1m\n","config.loc_set.point.outg_dc_period : None\n","config.loc_set.zone.dtk_itv : 5m\n","-----------------------------------\n","config.loc_set.zone.short_spread : None\n","config.loc_set.zone.long_spread : None\n","config.loc_set.zone.dt_k : None\n","config.loc_set.zone.ei_k : 0.095\n","config.loc_set.zone.dc_period : 135\n","config.loc_set.zone.use_dtk_line : 0\n","config.loc_set.zone.zone_rejection : 1\n","config.loc_set.zone.bbz_itv : 15m\n","config.loc_set.zone.zone_dt_k : 0.4\n","config.loc_set.zone.zone_dc_period : 135\n","-----------------------------------\n","config.loc_set.point.tf_entry : 1\n","config.loc_set.point.htf_entry : 15\n","config.tr_set.ep_gap : 0.0\n","config.tr_set.out_gap : 0.6\n","config.tr_set.tp_gap : 0.0\n","config.tr_set.c_ep_gap : None\n","config.tr_set.t_out_gap : -0.0\n","-----------------------------------\n","config.lvrg_set.leverage : 2\n","config.lvrg_set.target_pct : 0.1\n","elapsed_time : 9.573454856872559\n","supblot231 passed\n","error in 232 : float division by zero\n","supblot233 passed\n","error in 235 : division by zero\n"]},{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs_for_trade.py:120: RuntimeWarning: divide by zero encountered in double_scalars\n","  sr_ = (mean_pr_ - risk_free_rate) / s\n","/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:234: RuntimeWarning: Degrees of freedom <= 0 for slice\n","  keepdims=keepdims)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:195: RuntimeWarning: invalid value encountered in true_divide\n","  arrmean, rcount, out=arrmean, casting='unsafe', subok=False)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/content/drive/My Drive/Colab Notebooks/JnQ/funcs_for_trade.py:120: RuntimeWarning: divide by zero encountered in double_scalars\n","  sr_ = (mean_pr_ - risk_free_rate) / s\n","/content/drive/My Drive/Colab Notebooks/JnQ/funcs_for_trade.py:120: RuntimeWarning: divide by zero encountered in double_scalars\n","  sr_ = (mean_pr_ - risk_free_rate) / s\n","/usr/local/lib/python3.7/dist-packages/numpy/core/fromnumeric.py:3373: RuntimeWarning: Mean of empty slice.\n","  out=out, **kwargs)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:170: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:234: RuntimeWarning: Degrees of freedom <= 0 for slice\n","  keepdims=keepdims)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:195: RuntimeWarning: invalid value encountered in true_divide\n","  arrmean, rcount, out=arrmean, casting='unsafe', subok=False)\n","/usr/local/lib/python3.7/dist-packages/numpy/core/_methods.py:226: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n","/content/drive/My Drive/Colab Notebooks/JnQ/funcs_for_trade.py:120: RuntimeWarning: divide by zero encountered in double_scalars\n","  sr_ = (mean_pr_ - risk_free_rate) / s\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1600x1200 with 4 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"MteLY9PS2ZeK"},"source":["##### check statistical significance"]},{"cell_type":"code","metadata":{"id":"NzbWuwSw2jaj","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1638352354509,"user_tz":-540,"elapsed":5529,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"bd5ddc0f-5458-463e-c649-6d3b276618db"},"source":["# print(survey_df)\n","\n","plt.style.use('dark_background')\n","\n","title_name_list = [[\"total\", \"short\", \"long\"], [\"rev_total\", \"rev_short\", \"rev_long\"]]\n","survey_dfs_list = [[survey_df, short_survey_df, long_survey_df], [rev_survey_df, rev_short_survey_df, rev_long_survey_df]]\n","# title_name = \n","# survey_df_list = \n","\n","space_ = \" \" * 140\n","\n","for d_idx, (title_name, survey_dfs) in enumerate(zip(title_name_list, survey_dfs_list)):\n","\n","  fig = plt.figure(figsize=(30, 10))\n","\n","  gs = gridspec.GridSpec(nrows=1, # row 몇 개 \n","                          ncols=3, # col 몇 개 \n","                          # height_ratios=[1, 1, 1]\n","                        )\n","\n","  # gs = fig.add_gridspec(1, 3, wspace=0, hspace=0)\n","\n","  # nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","  nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","  # nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","\n","  # if d_idx == 0:\n","  # else:\n","    # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","  for gs_idx, (title, s_df) in enumerate(zip(title_name, survey_dfs)):  \n","\n","\n","    inner_gs = gs[gs_idx].subgridspec(nrows=nrows, # row 몇 개 \n","                          ncols=ncols, # col 몇 개 \n","                          height_ratios=h_r\n","                        )\n","\n","    for col_idx, s_cols in enumerate(s_df.columns):\n","      plt.subplot(inner_gs[col_idx])\n","      plt.plot(s_df[s_cols])\n","      plt.title(s_cols)\n","\n","  # plt.suptitle(\"total\" + \" \" * 140 + \"short\" + \" \" * 140 + \"long\")\n","  plt.suptitle(space_.join(title_name))\n","  plt.show()\n","  print(\"\\n\")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 30 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 15 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"GZ0y_x9ugOUD"},"source":["##### check dent_detph"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":676},"id":"ETgm1avml0fE","executionInfo":{"status":"ok","timestamp":1637297839515,"user_tz":-540,"elapsed":593,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9df7a819-691a-4fdc-93bb-d6489812419b"},"source":["target_pr = total_long_pr\n","\n","plt.figure(figsize=(4, 8))\n","gs = gridspec.GridSpec(nrows=2,\n","                        ncols=1,\n","                        height_ratios=[1, 1]\n","                      )\n","\n","plt.subplot(gs[0])\n","plt.plot(target_pr)\n","h_roll = pd.Series(target_pr).rolling(10).max()\n","plt.plot(h_roll)\n","# plt.show()\n","# print()\n","\n","plt.subplot(gs[1])\n","dent_depth = target_pr / h_roll\n","plt.plot(dent_depth)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 400x800 with 2 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"v2Gjv019AEz8"},"source":["##### check frequency "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":464},"id":"atdBjod9-e21","executionInfo":{"status":"ok","timestamp":1636862363013,"user_tz":-540,"elapsed":720,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5925d52a-da23-40cd-a9b3-6c0323024bc0"},"source":["total_len = np.zeros(len(res_df))\n","print(total_len)\n","np_trade_list = np.array(trade_list)\n","# print(np_trade_list.shape)\n","print(np_trade_list[:, [0], [0]].shape)\n","total_len[np_trade_list[:, [0], [0]]] = 1\n","\n","plt.plot(total_len)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0. 0. ... 0. 0. 0.]\n","(70, 1)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"o-XjNS1L31YB"},"source":["##### ep const. legacy"]},{"cell_type":"code","metadata":{"id":"taB2j7kT33iN"},"source":["\n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","          \n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-IbP_Z3Dlwk4"},"source":["### nontp survey"]},{"cell_type":"markdown","metadata":{"id":"FxJ1y8v2fkCR"},"source":["##### term & liqd"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"id":"-qIWa48pl1GO","executionInfo":{"elapsed":8,"status":"ok","timestamp":1628300788555,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"b2687c93-e070-4d45-8a67-4cc783fd78f1"},"source":["# print(nontp_long_indexs)\n","\n","plot_size = 100\n","\n","for s_i in range(plot_size, len(trade_list), plot_size):\n","\n","  slice_trade_list = trade_list[s_i - plot_size:s_i]\n","  slice_liqd_list = liqd_list[s_i - plot_size:s_i]\n","\n","  # print(len(slice_trade_list))\n","  np_trade = np.array(slice_trade_list)\n","  trade_term = np_trade[:, [2]] - np_trade[:, [1]]\n","\n","  plt.figure(figsize=(5, 10))\n","  plt.subplot(211)\n","  plt.bar(np.arange(len(trade_term)), trade_term.reshape(-1,), width=1, color='b')\n","\n","  # plt.plot(trade_term.reshape(-1,))\n","  plt.ylim(0, 1000)\n","  # plt.show()\n","  # print()\n","\n","  plt.subplot(212)\n","  # print(len(liqd_list))\n","  # plt.bar(np.arange(len(liqd_list)), liqd_list)\n","  plt.bar(np.arange(len(slice_liqd_list)), np.array(slice_liqd_list), width=1, color='r')\n","  # plt.plot(slice_liqd_list)\n","  plt.show()\n","\n","print()"],"execution_count":null,"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 360x720 with 2 Axes>"]},"metadata":{"tags":[]},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"VBwVaUkvfnOd"},"source":["##### check nontp index"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mRCMBOU4frNY","executionInfo":{"elapsed":454,"status":"ok","timestamp":1628220543161,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"ce4a9c9b-3589-40b3-8a19-4be03d5b9a1e"},"source":["# np_nontp_short_indexs = np.array(nontp_short_indexs)\n","# np_nontp_long_indexs = np.array(nontp_long_indexs)\n","\n","# short_til_term = len(res_df) - np_nontp_short_indexs\n","# long_til_term = len(res_df) - np_nontp_long_indexs\n","\n","max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","print(max_nontp_long_term)"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["32747\n"]}]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## basic strategy"]},{"cell_type":"markdown","metadata":{"id":"FaRGwR4NEop2"},"source":["### shifting"]},{"cell_type":"code","metadata":{"id":"a8aYsjEgQnGF"},"source":["org_res_df = res_df.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RF3RM2G2RCb1","executionInfo":{"elapsed":291,"status":"ok","timestamp":1626515312874,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"ba8f6a75-d4df-4f85-cd0f-190935341f7a"},"source":["#         refresh res_df      #\n","res_df = org_res_df.copy()\n","print(org_res_df.tail(5))\n","\n","# break\n","\n","\n","shift_size = -4\n","# shift_size = -1\n","# shift_size = -7\n","# shift_size = +3\n","\n","res_df['min_upper'] = res_df['min_upper'].shift(shift_size)\n","res_df['max_lower'] = res_df['max_lower'].shift(shift_size)\n","res_df['minor_ST1_Trend'] = res_df['minor_ST1_Trend'].shift(shift_size)\n","res_df['minor_ST2_Trend'] = res_df['minor_ST2_Trend'].shift(shift_size)\n","res_df['minor_ST3_Trend'] = res_df['minor_ST3_Trend'].shift(shift_size)\n","res_df['middle_line'] = res_df['middle_line'].shift(shift_size)\n","\n","print(res_df.tail(5))"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272145    0.27005\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...   0.272145    0.27005\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...   0.272523    0.27021\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...   0.272523    0.27021\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...   0.272523    0.27021\n","\n","[5 rows x 37 columns]\n","                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272523    0.27021\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...        NaN        NaN\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...        NaN        NaN\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...        NaN        NaN\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...        NaN        NaN\n","\n","[5 rows x 37 columns]\n"]}]},{"cell_type":"markdown","metadata":{"id":"2gxvme1PC6ha"},"source":["### load model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dtYdAuSsC72_","executionInfo":{"elapsed":5831,"status":"ok","timestamp":1628862368878,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"e8dccc53-aaa7-4bab-ed8d-753f634c08d6"},"source":["# model_name = 'inner_tick_cnnreg_lscalemm_prefee_gpu_%s_%s_%s_%s_%s.h5'\n","\n","# model = tf.keras.models.load_model(ckpt_path + model_name)\n","\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","\n","model = ResNet50(weights='imagenet', include_top=False)\n","# model.summary()\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n"]}]},{"cell_type":"markdown","metadata":{"id":"5la6usMOFzkX"},"source":["#### gen selected vector"]},{"cell_type":"code","metadata":{"id":"oQk3-jbKF8FB"},"source":["def min_max_scale(npy_x):\n","\n","  return (npy_x - np.min(npy_x)) / (np.max(npy_x) - np.min(npy_x))\n","\n","def expand_dims(npy_x):\n","\n","  row, col = npy_x.shape\n","  npy_x2 = np.array(npy_x).reshape(-1, row, col, 1).astype(np.float32)\n","  # input_x = np.array(data_x).reshape(-1, row, col).astype(np.float32)\n","\n","  #     1c to 3c    #\n","  npy_x3 = npy_x2 * np.ones(3, dtype=np.float32)[None, None, None, :]\n","\n","  return npy_x3\n","\n","\n","def vector_dist(f1, f2):\n","  return np.linalg.norm(f1-f2)\n","\n","\n","\n","# ------------------------ params ------------------------  #\n","selected_i = 500\n","input_size = 100\n","\n","\n","\n","#   1. 선택된 인덱스를 입력받았을 때, input generating 형태만 만들어놓고,     #\n","#   1-1. input cols 필요함    #\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","sma_list = ['sma']\n","\n","#     -------------- outer price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","\n","selected_price_colname = basic_list + senkoua_list + senkoub_list + sar_list\n","selected_outprice_colname = [macd_list]\n","\n","\n","#         global scaling for outer price data       #\n","#         1. nan 처리       #\n","\n","# # print((np.isnan(df.values)))\n","# print(\"np.sum(np.isnan(df.values), axis=0) :\", np.sum(np.isnan(df.values), axis=0))\n","\n","# max_nan = np.max(np.sum(np.isnan(df.values), axis=0))\n","# # print(max_nan)\n","\n","# df = df.iloc[max_nan:-max_nan]\n","\n","# total_gdata = []\n","# for g_col in selected_outprice_colname:\n","\n","#   temp_data = min_max_scale(res_df[g_col])\n","#   total_gdata.append(temp_data)\n","\n","\n","\n","#   1-2. cols 에 따른, scaling method 구분함    #\n","onprice_input_x = min_max_scale(res_df[selected_price_colname].iloc[selected_i - input_size:selected_i].values)\n","print(onprice_input_x.shape)\n","\n","\n","#   2. plot_check 에서 본인이 원하는 shape 의 인덱스를 선택   #\n","#   3. vertorize, \n","#   3-1. input generator 를 이용해 entry signal 발생할 때마다 dist 비교 진행    #\n","re_onprice_input_x = expand_dims(onprice_input_x)\n","print(re_onprice_input_x.shape)\n","      \n","# break\n","\n","selected_vector = model.predict(re_onprice_input_x, verbose=1)\n","print(selected_vector.shape)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gcpo4MGd9Wm4","executionInfo":{"elapsed":446,"status":"ok","timestamp":1636015063790,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"434b56b3-3a3c-45c1-f559-42681fea5f05"},"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   단리    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"복리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   복리 tr_thresh  #\n","#   1. trade_num 에 영향 받지 않음\n","#   2. loss_gap 에 비례함\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"단리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["res_wr : 0.6\n","tr_thresh : 0.6766666666666667\n","[0.95, 1.0338333333333334, 0.95, 0.95, 1.0338333333333334, 0.95, 0.95, 1.0338333333333334, 0.95, 1.0338333333333334]\n","\n","복리를 위한 tr_thresh_ : 1.0\n","np.cumprod(test_trade_list)[-1] : 0.5751227991397774\n","total_pr :  0.5751227991397774\n","\n","[-0.05        0.03383333 -0.05       -0.05        0.03383333 -0.05\n"," -0.05        0.03383333 -0.05        0.03383333]\n","단리를 위한 tr_thresh_ : 1.0\n","np.cumsum(np_test_trade)[-1] : 0.30000000000001137\n","total_pr :  1.3000000000000114\n"]}]},{"cell_type":"markdown","metadata":{"id":"JNQxkb06ZdTe"},"source":["# traded section plot"]},{"cell_type":"markdown","metadata":{"id":"UmH_Pb5BZUtm"},"source":["## plot with off-color st with dash"]},{"cell_type":"markdown","metadata":{"id":"5z4L3MMYmUI0"},"source":["### sorted plot_check"]},{"cell_type":"code","metadata":{"id":"Qv1MM2MemZnF","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1638589839286,"user_tz":-540,"elapsed":19310,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"840e062d-a84e-4834-bf81-d0b99a9f4005"},"source":["assert len(open_list) == len(trade_list), \"len(open_list) != len(trade_list)\"\n","assert len(tp_state_list) == len(fee_list), \"len(tp_state_list) != len(fee_list)\"\n","\n","save_plot = 0\n","pr_sort = 0     # 이상한 체결 확인하기 좋음\n","pr_descend = 1\n","wl_case = 0    # win loss study \n","# position = config.ep_set.short_entry_score  \n","position = 0    # non pos.\n","\n","inversion = 0\n","hedge = 0\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","h_candle_intv1 = 5\n","h_candle_intv2 = 15\n","res_df = h_candle(res_df, h_candle_intv1)\n","res_df = h_candle(res_df, h_candle_intv2)\n","\n","\n","res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1\", \"short_tp_gap\", \"long_tp_1\", \"long_tp_gap\"]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1\", \"short_dtk_gap\", \"long_dtk_1\", \"long_dtk_gap\",\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2', 'dc_lower_v2']\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hopen_%s' % h_candle_intv2, 'hclose_%s' % h_candle_intv2]\n","\n","# --------------------- dc & bb level --------------------- #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","bbwp_list = ['bbwp', 'bbwp_ma']\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_15m']\n","\n","# ma_list = ['sma1', 'sma4']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_1m']\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# -------------- under price phase -------------- #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist%s' % basic_st_interval]\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix%s' % basic_st_interval]\n","trix_list = ['trix1', 'trix2', 'trix3']\n","stoch_list = ['stoch_5m']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","emaroc_list = ['ema_roc']\n","rsi_list = ['rsi_1m']\n","\n","\n","# -------------- summation -------------- #\n","# input_colname = ohlc_list + basic_st_list + pline_list + bb_list + hbb_list + sma_list + cb_list + stoch_list + sar_list + dc_list\n","input_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dtk_list + dc_v2_list + rsi_list + ema_list\n","\n","# yrange_colname = ohlc_list + basic_st_list + pline_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dc_v2_list # currently just used for ymin, ymax\n","\n","\n","# aggr_obj = dict(zip(plot_pr_list, open_list, enumerate(trade_list)))\n","aggr_obj = dict(zip(plot_pr_list, zip(open_list, enumerate(trade_list))))\n","\n","sorted_obj = sorted(aggr_obj.items(), key=(lambda x: x[0]), reverse=pr_descend)\n","# print(aggr_obj)\n","# print(sorted_obj)\n","\n","if pr_sort:\n","  iter_obj = sorted_obj\n","else:\n","  iter_obj = aggr_obj.items()\n","\n","for temp_pr, (open_idx, (t_i, (ep_idx_list_, tp_idx_list_))) in iter_obj:  # 0.699700153073042, (291402, (3014, ([370012], [370014])))\n","\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  if wl_case == 1:\n","    if plot_pr_list[t_i] < 1.0:\n","      continue  \n","  \n","  elif wl_case == -1:\n","    if plot_pr_list[t_i] > 1.0:\n","      continue  \n","  \n","  #   open size indexing by open_idx    #\n","  open_side = res_df['entry'].iloc[open_idx]\n","  print(\"open_side :\", open_side)\n","\n","\n","  # ---------- const. zone ---------- #\n","\n","  if position != 0:\n","    if open_side == -position:\n","      continue\n","\n","  # if open_idx == 63901:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","\n","  # if tp_ratio_list[t_i] > 0.4:\n","  #   continue\n","\n"," \n","  # print(\"open_idx :\", open_idx)\n","  print(\"np_timeidx[open_idx] :\", np_timeidx[open_idx])\n","  print(\"open_idx, ep_idx_list_[0], tp_idx_list_[-1] :\", open_idx, ep_idx_list_[0], tp_idx_list_[-1])\n","  # break\n","\n","\n","  plot_df = res_df.iloc[open_idx - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df[['ST1_Trend%s' % basic_st_interval, 'ST2_Trend%s' % basic_st_interval, 'ST3_Trend%s' % basic_st_interval]].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=0, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","  \n","  plt.style.use('dark_background')\n","\n","  fig = plt.figure(figsize=(14, 18))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                       ncols=1, # col 몇 개 \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ---------- h_candle ---------- #\n","  alpha = 1\n","  lw = 0.5\n","  for cd_i, candle in enumerate(hcandle_list):\n","\n","    if cd_i == 2:\n","      lw = 2      \n","    plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.1\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","  #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  \n","\n","   # --------- ema --------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(ema_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","\n","  # ---------------------- dc_v2 ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_v2_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # ---------------------- dc ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(dc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # ---------------------- hdc ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(hdc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","\n","  # ---------------------- hhdc ---------------------- #\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(hhdc_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","\n","\n","  # ---------------------- bb ---------------------- #\n","  alpha = 1\n","  lw = 1\n","  for sm_i, item in enumerate(bb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","                      where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","\n","  # ---------------------- hbb ---------------------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(hbb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","  \n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","                      where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  \n","  # ---------------------- hhbb ---------------------- #\n","\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(hhbb_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","  \n","  alpha = 0.2\n","  plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","                      where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  \n","  # ------------------- dtk_line (old, tp_line) ------------------- #\n","  \n","  # alpha = 1\n","  # lw = 2\n","  # rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  \n","  # for rtc_k in rtc_ratio_list:    \n","  #   # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","  # alpha = 1\n","  # lw = 4\n","  # # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  # h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","  # # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  \n","  # for h_rtc_k in h_rtc_ratio_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","  # # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","\n","  # ------------------------------------------------------------- #\n","\n","\n","  # ------------- ep ------------- #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","    #        initial order         #\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='#ffeb3b')\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--', color='#ffeb3b')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    # plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.7, linestyle='--', color='#ffeb3b')\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","\n","  x0,x1 = plt.gca().get_xlim()\n","\n","  # ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0])) / x1\n","  ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - open_idx)) / x1\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='--', xmin=ep_xmin, xmax=1, alpha=1, color='lime')  # ep line axhline  \n","  plt.text(x1, ep_tp_list[t_i][0][0], ' ep :\\n %s' % ep_tp_list[t_i][0][0], ha='left', va='center', fontweight='bold') # ep line label\n","\n","  \n","  # ------------- tp ------------- #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","\n","    # tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0])) / x1\n","    tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - open_idx)) / x1\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='--', xmin=tp_xmin , xmax=1, alpha=1, color='lime')  # tp line axhline\n","    plt.text(x1, ep_tp_list[t_i][1][sub_i], ' tp :\\n %s' % ep_tp_list[t_i][1][sub_i], ha='left', va='center', fontweight='bold') # tp line label\n","     \n","    # plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","\n","  # ------------- rtc horizontal range ------------- #\n","  # rtc_ratio_list = [-0.5, 0.272, 0.36, 0.4, 0.5]\n","  # rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  rtc_ratio_list = [0.]\n","  if open_side == config.ep_set.short_entry_score:\n","    # plt.axhline(res_df['short_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['short_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.axhline(res_df['short_out'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, res_df['short_out'].iloc[open_idx], ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","      \n","    y_max = res_df['h_short_rtc_0'].iloc[open_idx]\n","    y_min = res_df['h_short_rtc_1'].iloc[open_idx] - res_df['h_short_rtc_gap'].iloc[open_idx] * rtc_k\n","\n","    print(\"short_tp :\", res_df['short_tp'].iloc[open_idx])\n","    print(\"short_out :\", res_df['short_out'].iloc[open_idx])\n","\n","  else:\n","    # plt.axhline(res_df['long_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['long_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff') \n","    plt.axhline(res_df['long_out'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, res_df['long_out'].iloc[open_idx], ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","\n","    y_max = res_df['h_long_rtc_1'].iloc[open_idx] + res_df['h_long_rtc_gap'].iloc[open_idx] * rtc_k\n","    y_min = res_df['h_long_rtc_0'].iloc[open_idx]\n","\n","    print(\"long_tp :\", res_df['long_tp'].iloc[open_idx])\n","    print(\"long_out :\", res_df['long_out'].iloc[open_idx])\n","  \n","    # t_tr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx] - tp_fee * res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx] + out_fee * res_df['close'].iloc[open_idx]))\n","    # t_dr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx]))     \n","    # print(\"t_tr :\", t_tr)\n","    # print(\"t_dr :\", t_dr)\n","\n","  #         hedge ep & tp         #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    # plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axvline(prev_plotsize + (h_i - open_idx), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  temp_pr = plot_pr_list[t_i]\n","  # if temp_pr > 1:\n","  #   temp_pr_gap = (temp_pr - 1) / lvrg + fee\n","  #   pgfr = (temp_pr_gap - fee) / abs(temp_pr_gap + fee)\n","  # else:\n","  #   pgfr = np.nan\n","\n","  #         check pr        #\n","  if not config.lvrg_set.static_lvrg:\n","    \n","    #   list length 만 sync 맞으면 t_i 걱정 안해도됨, zip 해서 순서가 바뀌었을 뿐, original serialized order 에서 t_i 로 indexing 하는 것뿐임   #\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n lvrg : %s\\ntp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                                h_plot_pr_list[t_i], leverage_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)    \n","\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n tp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                     h_plot_pr_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","  \n","  #           y lim           #  \n","  y_max_ = max(np.max(plot_df[yrange_colname]))\n","  y_min_ = min(np.min(plot_df[yrange_colname]))\n","  y_max = max(y_max, y_max_)\n","  y_min = min(y_min, y_min_)\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","  \n","\n","  plt.ylim(y_min, y_max)\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  #           rsi          #    \n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for rsi_ in rsi_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(rsi_upper, linestyle='--')\n","  plt.axhline(rsi_lower, linestyle='--')\n","  \n","  plt.axvline(prev_plotsize, linestyle='--')\n","  \n","  #     vline open     #\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","  \n","  #     vline close     #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","\n","  if not save_plot:\n","    plt.show()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  \n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["open_side : 2.0\n","np_timeidx[open_idx] : 5\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 6 6 17\n","long_tp : 329.6979431178308\n","long_out : 293.9572341293015\n","short real pr : [0.95603253]\n","long real pr : [1.04250199]\n"]},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAABLMAAAUwCAYAAAC40RegAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAPYQAAD2EBqD+naQAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeViVdf7/8ddBQJBFTUfFJRzMSCczlxa1Blu1fUrbTL+YWi4tNm3WqGmbTpuOOlNm9cUss7Q0I5dcBsnUyl1MyQ1BBcEFkeWwiO/fH309v04ggqKHI8/Hdb2u65zP/fl87vc52jXynvu+cUgyAQAAAAAAAF7Ax9MFAAAAAAAAAOVFMwsAAAAAAABeg2YWAAAAAAAAvAbNLAAAAAAAAHgNmlkAAAAAAADwGjSzAAAAAAAA4DVoZgEAAAAAAMBr0MwCAAAAAACA16CZBQAAAAAAAK9BMwsAAAAAAABeg2YWAAColtq1a6e5c+fq0KFDys3NVUJCgp544olzWkNQUJBGjx6tBQsW6NChQzIzRUdHlzrXzE6aRYsWndO6T+amm27Shx9+qISEBB07dkxJSUkV3uOOO+7Q2rVr5XQ6lZycrNGjR6tGjRplrpkyZYrMTLGxsW7jF1xwgZ599lnFx8crIyNDmZmZWrVqle67774Se0RFRZ30+73qqqtKzO/UqZOWL1+u3NxcpaWlacKECQoKCqrw5wUAABXn6+kCAAAAzrWbbrpJsbGxWr9+vV599VXl5OSoRYsWatq06Tmto379+ho1apSSk5O1ceNGXXfddSed27t37xJjHTt21FNPPVVlmlm9evXS/fffr3Xr1ik1NbXC67t3766vv/5ay5Yt0xNPPKE2bdpoxIgRatCggYYMGVLqmg4dOqhv375yOp0ljnXq1Emvv/665s+fr9dee03Hjh1Tjx499MUXX6h169YaPXp0iTUTJkzQ6tWr3cZ27Njh9r5t27ZaunSptm7dqqefflpNmzbVs88+q5YtW+rWW2+t8OcGAAAVZ4QQQggh1SUhISGWlpZmX331lTkcDo/W4u/vbw0bNjRJ1qFDBzMzi46OLvf6Dz74wIqLi61JkyanXUObNm0q7fOEhYWZr6+vSbLY2FhLSkqq0PrNmzfb+vXrrUaNGq6xV1991YqLiy0yMrLUNStWrLAPP/zQkpKSLDY21u1Y8+bN7cILLyyxZsmSJeZ0Oq1WrVqusaioKDMz69GjxynrnDdvnu3bt89CQkJcY/379zczs5tuusmjf6cIIYSQ6hBuMwQAANVKr1691KhRIw0fPlxmplq1asnhcHiklsLCQqWnp5/WWn9/f/Xo0UPx8fHat2/fadewadMm/fTTT3r00UcVEhJy2vtIUlpamo4dO3Zaa1u1aqW//OUvmjJlioqLi13j7777rnx8fNSzZ88Sa/r06aNLL71Uw4cPL3XP3bt3KyUlpcT4119/rYCAAEVERJS6Ljg4+KS3NoaEhOimm27Sp59+quzsbNf4tGnTlJ2dXeotjAAAoHLRzAIAANXKjTfeqKysLDVp0kSJiYnKzc3V0aNH9e6776pmzZqeLq/cbr31VtWtW1fTp08/o30eeeQRFRcX6/3331daWppiYmJ0zTXXVFKV5deuXTtJ0po1a9zG09LStGfPHtfxE4KDg/XGG29ozJgxFW4INmrUSJJ08ODBEsdiYmKUnZ2t/Px8/fe//1WHDh3cjrdp00Z+fn4l6iwqKtKGDRtK1AkAACofzSwAAFCttGzZUr6+vpo7d66+++473XPPPfrf//1fDR48WDExMRXaKzg4+KTHQkNDz7TUMj300EPKz8/Xl19+eUb7fPjhh+rcubNatWqld999V927d9fy5cuVmJio559/Xg0bNqykissWFhYm6bfm1R+lpaWpcePGbmMvvfSSnE6nxo8fX6Hz1K1bVwMGDND333+v/fv3u8YLCwv15ZdfaujQobrzzjs1YsQItWnTRsuXL9fll19+2nUCAICzw+P3OhJCCCGEnKvs2LHDzMzeffddt/H33nvPzMwuuuiiMteHhITYP//5T0tPTzczs+zsbPv666+tX79+FhkZaS1btrShQ4daYmJiheqqyDOzQkJCLC8vz7766qtK/35q1Khhd9xxh82ZM8cKCgqssLDQ5syZU+Fna1X0mVkjRowwM7M//elPJY7Fx8fb+vXrXe9btmxpBQUFds8997jGSntm1h/jcDhs/vz5lp+fb5dddtkpa2rRooXl5ubaggULXGO9e/c2M7MrrriixPyPP/7YMjMzPfL3mhBCCKlO4bcZAgCAauXEb72bMWOG2/hnn32mQYMGqVOnTiV+e93v/f3vf1f37t01evRopaSkKDIyUnfccYcmT54sPz8/SVJqaqpeeumls/YZevToocDAwHLfYli/fn23Z0Dl5OQoNze31LnFxcWKjY1VbGys7rvvPk2ZMkV/+9vftGzZMiUkJFRK/aU58edS2q2eAQEBbr+tcMKECVq5cqVmz55doXNMmjRJt9xyi/r06aNNmzadcv7OnTs1d+5c3XPPPfLx8dHx48crVCcAADg7aGYBAIBqJTU1VZdeemmJ5yxlZGRI+u02tLJ8/vnneu2113T8+HFJ0rx58zRu3DjVrl1brVq1Un5+vhISEtweYl7ZHnroIR05ckTffvttueavXr1azZs3d70fPXq0Xn755VLnXnjhhYqOjlbfvn0VERGhpKQkvfPOOyWaf5XtxG17YWFh2rt3r9uxsLAw/fzzz5Kk6667TrfccovuvvtuhYeHu+b4+voqMDBQ4eHhOnz4sNvD2aXfbkt87LHHNGzYMH366aflrmvPnj2qWbOmgoKClJ2d7VbnH4WFhSk1NbXcewMAgNNDMwsAAFQra9eu1c0336wmTZpo27ZtrvETzzo6cOBAmet/v+b3srKy9OOPP1ZeoSfRqFEjXXfddZo6daoKCwvLteahhx5SYGCg6/2uXbvcjgcEBOjuu+9Wv379dP3116uwsFBff/21Bg4cqCVLllRq/SezYcMGSVLHjh21evVq13hYWJiaNWumKVOmSPqt2SZJc+bMKbFH06ZNtXv3bj311FOaMGGCa3zIkCF6+eWXNX78eL355psVqisiIkJOp1M5OTmSpM2bN6uoqEgdO3bUrFmzXPP8/Px0+eWXa+bMmRXaHwAAnB6P3+tICCGEEHKucvnll5uZ2aeffuo2Pn36dCssLLSwsDCP1FXeZ2Y99dRTZmZ23XXXVcp533vvPcvMzDQzs02bNtnQoUPtggsuOON9y3pmlq+vr0VGRlqjRo3cxrds2WLr1683Hx8f19grr7xixcXFdskll5gka9asmd11110lkp6ebj///LPdddddFhER4Vp/33332bFjx+yTTz4ps9769euXGLvsssusoKDAvv76a7fx+fPn2759+yw4ONg11q9fPzMz69atm0f+/hBCCCHVKY7/ewEAAFBtfPjhh+rfv7+++OILxcfHq2vXrrrvvvs0ZswYDR8+/JzW8thjj6lOnTpq3LixhgwZoq+++krr16+X9Nszno4ePeo2f/Xq1a6rlczO/J9xWVlZ+uKLL/Thhx+6buU7XW3atNGdd94pSerdu7caNmyod955R5K0ceNG122R4eHh2r17t6ZOnaqHH37Ytf62227TN998o7i4OH3++ee69NJL9fjjj+ujjz7SwIEDyzx3UlKSNm/erDvuuMM1dsUVV2j58uXKysrSsGHDVFRU5LZm5cqVSkpKkiQtXbpUTqdTK1euVEZGhlq3bq1HH31URUVF6tSpkxITE13r2rVrp5UrV2rLli2aMmWKmjZtqmeeeUbff/+9unfvfgbfIAAAKC+Pd9QIIYQQQs5lfH197aWXXrKkpCQrKCiwbdu22dChQz1SS1JSkp1MeHi429yLL77YzMzefvvtSjt/rVq1Km2v6Ojok36WmJgY17zw8PASYydy11132bp168zpdFpKSoq98sor5uvrW67v8Y+/zbCsev54FdwTTzxhP/74ox08eNAKCwtt3759Nm3aNGvRokWp5+vSpYv98MMPlpeXZ+np6TZp0iS3K7UIIYQQcvbClVkAAAAAAADwGj6eLgAAAAAAAAAoL5pZAAAAAAAA8Bo0swAAAAAAAOA1aGYBAAAAAADAa9DMAgAAAAAAgNegmQUAAAAAAACvQTMLAADgPDNq1CiZmafLAAAAOCtoZgEAAMCjOnXqpFGjRql27dqeLgUAAHgBmlkAAADwqM6dO2v06NGqU6eOp0sBAABegGYWAAAAAAAAvAbNLAAAgCrq8ccf1+bNm5Wbm6vDhw9r9erVevDBB09rrxo1amjEiBHasWOH8vPzlZSUpNdff13+/v5u85KSkhQbG6suXbrop59+ktPp1M6dO9WnT58Se7Zp00bLli1TXl6e9uzZo+HDh6tv374yM4WHh5errlGjRuntt9+WJO3evVtm5rbezDRp0iT16tVLiYmJcjqdWrNmja699trT+h4AAID38/V0AQAAAChpwIABmjRpkmbNmqUJEyYoICBAl112ma666irNmDGjwvt9+OGH6tu3r2bNmqV33nlHV111lf7xj3+oVatWuueee9zmXnTRRfryyy/10Ucf6eOPP1a/fv00depUrV27Vlu2bJEkNW7cWHFxcTIzjR07Vrm5uRowYIAKCgoqVNfs2bN18cUXq1evXnrqqad08OBBSdKBAwdcc6KionT//fdr4sSJKigo0JAhQ7Rw4UJdeeWV+uWXXyr8XQAAAO9nhBBC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ebI+//xzRUVFuY5nZmbq1ltvVceOHfXWW2+pWbNmeuyxx/Thhx9Wyvm3bdumnj17ysz09ttva9CgQZoyZYomTJhQYu4rr7yi+fPn6/nnn9fnn3+ul1566aT7fvzxx7rvvvvk7++vN954QwMHDtScOXN0zTXXKCsrq1Jqr4jDhw/r9ttvV1paml577TU9++yzWrx4sZ5//vlzXgsAADi3HJLK97AEAAAAnJG4uDjVr19fbdq08XQpAAAAXosrswAAAAAAAOA1eGYWAABAFVK/fn3VqFHjpMcLCwuVmZl5DisCAACoWmhmAQAAVCGrVyGzVVMAACAASURBVK9W8+bNT3p82bJluu66685dQQAAAFUMz8wCAACoQjp37qzAwMCTHs/MzNS6devOYUUAAABVC80sAAAAAAAAeA0eAA8AAAAAAACvQTMLAADAy0VFRcnMFBUV5elSAAAAzjqaWQAAAAAAAPAaNLMAAAAAAADgNWhmAQAAVBNl/ZZEAAAAb0EzCwAAwIs0adJEc+bMUU5OjtLT0zVu3DjVrFmzxLy4uDglJCSoffv2io+PV25ursaMGXPSfX19fRUZGalGjRqdsoaYmBhlZ2ercePGmjNnjrKzs5WRkaG33npLPj7u/7x85plntGLFCh08eFB5eXlas2aNevToUWJPM9OkSZN01113KSEhQfn5+dq8ebO6detWjm8FAABUJw5J5ukiAAAAcGoBAQHasGGDLrzwQk2cOFGpqanq06eP/Pz81LZtW3Xt2lXx8fGSfmtmRUZGqkaNGvr888+1efNmpaen65tvvil17/DwcO3evVtTp07Vww8/XGYdMTExuv/++7Vz50799NNPWr16tW688Ub17NlTgwcP1uTJk11zU1JS9M0332jLli3y9/fXAw88oKuuukq33Xab5s+f75pnZtqwYYMaNGigd999V9nZ2XryySfVqFEjXXjhhTp8+HAlfIMAAOB8YYQQQgghpOrnySefNDOznj17usYCAwNt27ZtZmYWFRXlGo+LizMzs0cffbRce4eHh5uZWUxMzCnnxsTEmJnZiBEj3MbXrl1rq1evdhsLCAhwe+/r62ubNm2yJUuWuI2bmeXn51tERIRrrE2bNmZm9thjj3n8uyeEEEJI1Qm3GQIAAHiJW2+9Vampqfryyy9dY06nU1OmTCl1fn5+vmJiYsq1d3JyshwOxymvyvq931+BJUnLly9XREREiRpOqFOnjmrXrq3ly5erffv2JfZbsmSJdu3a5XqfkJCgrKysEnsCAIDqzdfTBQAAAKB8wsPDtWPHjhLjv/76a6nz9+3bp6KiorNSi9Pp1MGDB93GMjMzdcEFF7iN3XbbbRoxYoQuv/xyBQQEuMaPHz9eYs+UlJQSY5mZmapbt24lVQ0AAM4HXJkFAABwnnI6nWdt7+Li4lPOueaaa/TNN98oPz9fQ4YM0S233KIbb7xR06dPL/Gg+LL2dDgcZ1wvAAA4f3BlFgAAgJdITk7WpZdeWmI8MjLSA9WcWo8ePZSfn69u3bqpsLDQNV6RWxkBAAD+iCuzAAAAvMT8+fPVpEkT9ezZ0zUWGBioRx999Iz39vX1VWRkpBo1anTGe51QXFwsM1ONGjVcY+Hh4frb3/5WaecAAADVD80sAAAAL/HBBx9o+/btmjZtmsaOHasnn3xS33//vfLy8s547yZNmigxMVFjx46thEp/M2/ePAUFBWnhwoUaOHCgRo4cqZ9++qnU534BAACUF80sAAAAL+F0OnXDDTdo0aJFeuKJJzRixAj98MMPev755z1dWqni4uLUr18/NWrUSP/617/04IMPatiwYZozZ46nSwMAAF7MIck8XQQAAAAAAABQHlyZBQAAAAAAAK9BMwsAAAAAAABeg2YWAAAAAAAAvAbNLAAAAAAAAHgNmlkAAAAAAADwGjSzAAAAAAAA4DVoZgEAAJwDDRo00KxZs3Tw4EGZmYYOHerpkgAAALwSzSwAAIBzYPz48erWrZvGjh2r3r17a+HChZ4u6aRq166t999/XxkZGcrJydF///tftWvXrtzrL7nkEi1YsEDZ2dk6dOiQpk2bpvr165eY53A49Nxzz2nXrl1yOp3auHGjHnjggTPaU5IiIiI0ffp0paenKy8vT9u2bdNrr71W7voBAEDV5pBkni4CAADgfJeWlqYlS5aoT58+ni6lTA6HQ8uXL1fbtm311ltv6eDBgxoyZIiaNWumDh06aMeOHWWub9KkidavX6+srCxNnDhRwcHBevbZZ5WSkqIrr7xSRUVFrrljxozRiy++qClTpmj16tW66667dPvtt+uBBx7QF198cVp7tm3bVsuWLdO+ffs0bdo0HTp0SBdeeKGaNWumfv36Vf4XBgAAPMIIIYQQQsjZTXFxsU2aNMnjdZwq9957r5mZ9ejRwzVWv359O3z4sE2fPv2U6//zn/9Ybm6uNWvWzDV2ww03mJnZI4884hpr3LixFRQUlPhO4uPjLSUlxXx8fCq8p8PhsE2bNtmqVassICDA498lIYQQQs5aPF4AIYQQQsh5m+joaCvNieO1a9e28ePHW0pKiuXn59v27dvt+eefN4fD4baPw+GwoUOH2ubNm83pdNr+/ftt8uTJVqdOnVPW4Ovra5GRkdaoUaNTzv3iiy8sLS2txPknT55sOTk55u/vX+b6/fv32xdffFFiPDEx0RYvXux6P3jwYDMza9Wqldu8Bx54wMzMunTpUuE9u3XrZmZm3bt3N0kWGBjo1hQjhBBCyPkRnpkFAABwFn3//ffq3bu3JGnRokXq3bu3631gYKDi4+PVu3dvTZs2TU8++aRWrFihsWPHaty4cW77vP/++3rrrbe0YsUKDR06VDExMXrooYf03XffydfXt8wamjRposTERI0dO/aU9bZr107r1q3Tb/22/+/nn39WUFCQLr744pOubdy4sRo2bKg1a9aUOPbzzz+7PXerXbt2ysnJ0datW0vMO3G8onveeOONkqSCggKtXr1aeXl5ysvL04wZM1S3bt1TfXQAAOAlyv6XDwAAAM5IUlKSkpKS9Omnn2rbtm2aPn2669jTTz+tFi1aqF27dq5nUU2ZMkWpqal67rnn9M4772jv3r3q0qWLHnnkEfXq1UszZsxwrY+Li9N3332ne++91238TISFhen7778vMZ6Wlibpt+bS5s2bT7r293P/uL5evXry9/dXYWGhwsLClJ6eXuZ5Krpny5YtJUkzZ87UwoULNXbsWLVt21YvvviimjVrpmuuueaUnx8AAFR9XJkFAADgIffee6+WL1+uzMxM1atXz5UlS5bI19dXf/3rX13zjhw5osWLF7vNW7t2rbKzs3XdddeVeZ7k5GQ5HA49/PDDp6wpMDBQBQUFJcbz8/Ndx8taK6lc68t7norsGRwcLElavXq1+vTpo9mzZ2vUqFEaOXKkunTpohtuuOGktQMAAO/BlVkAAAAe0rJlS7Vt21YHDx4s9XiDBg1c8+rUqaMDBw6UOa8yOJ1O1axZs8R4QECA63hZayWVa315z1PRPSWVuErts88+0z//+U917txZS5cuPWn9AADAO9DMAgAA8BAfHx8tWrRIb775ZqnHt23b5pqXnp6uhx56qNR5J2tynY60tDTXrX2/d2IsNTW1zLW/n/vH9YcOHVJhYaFrbmlXlP3xPBXZ88SaP96+mJGRIUk8NwsAgPMEzSwAAAAP2blzp4KDg095tdDOnTt14403asWKFa5b686WDRs26Nprr5XD4XB7CPxVV12l3NxcV4OtNKmpqcrIyFDHjh1LHLvyyiu1YcMGt/M88sgjatWqldtD4K+66irX8YruuXbtWkm/PfD+9048f6sym34AAMBzeGYWAACAh8ycOVOdO3fWzTffXOJY7dq1VaNGDdc8X19fjRw5ssS8GjVqqHbt2mWex9fXV5GRkWrUqNEpa/ryyy/VqFEj3XPPPa6xevXq6d5771VsbKzrKihJioiIUEREhNv6r776SrfffruaNm3qGrv++usVGRmpWbNmucbmzp2rwsJCDRkyxG39oEGDtHfvXq1cufK09szPz9fDDz8sh8PhGh8wYIAkafHixaf8/AAAwDsYIYQQQgg5uzEzmzRpkttYYGCgrVmzxgoLC23KlCk2cOBAe/rppy0mJsays7OtXr16rrnvvfeemZnNmzfPhg4dakOGDLHx48fb3r17rUePHmWeOzw83MzMYmJiTlmnj4+PrVy50o4ePWojR460wYMHW0JCgmVlZdnFF1/sNjcpKcmSkpLcxpo2bWoHDhyw7du32+OPP24vvPCCHTp0yDZu3Gj+/v5uc9944w0zM5s8ebL179/fYmNjzczswQcfPO09R4wYYWZm3333nQ0ePNgmT55sxcXFNn36dI//HSCEEEJIpcXjBRBCCCGEnPcprZklyYKCguz111+3bdu2WX5+vmVkZNgPP/xgTz/9tPn6+rrNHTBggK1evdpyc3MtKyvLNm7caP/85z+tUaNGZZ67Is0sSVanTh374IMP7MCBA5aTk2NxcXHWoUOHEvNKa2ZJstatW9vChQstJyfHDh8+bJ988ok1aNCgxDyHw2EvvPCCJSUlWX5+viUkJFivXr1Kram8e0qyxx57zBITE62goMCSk5PtlVdeKfFdEkIIIcR74/i/FwAAAAAAAECVxzOzAAAAAAAA4DUqpZn1+OOP65dfflF+fr7S09P10UcfqUGDBqdc5+vrq5deekk7d+5UQUGB9uzZo3HjxikoKKgyygIAAAAAAMB55oxvM3zllVdcv1ln27Zt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fbt99tlnzs+vvvpqyj/3hBBCCCGEuDWn0PNIfbHkrPxhCUn7ZGdnJ/w8b948p+nQsmVLk2TXXHONjR071mkCdejQwQ4cOGBmZqtXrz7hsceOHesc69imSUO57777rGvXrs7P9957r/Pe+++//4Tv+9vf/mZmic238ePHO++9/PLLTZJNnTrVaeCEQiFnbGZmpn366ae2b98+W7JkSYPNrK/+jn796187x+/bt69JMr/fb/v27TMzs9/85jfm8/mc8YFAwNmeP3++mZlt3brVAoGA+Xw+C4fDZma2Zs0aZ9zChQvNzGzp0qWWn5/v7M/JyXGO3di/S1ZWVkL9Q4cOder/+c9/7uxv3bq1ZWZm2uDBg0/YzBozZozz2vXXX2+S7Kc//amzr0+fPibJXnjhBTMzq6iosIyMDJNk//jHP8zM7JNPPkn5554QQgghhBC3hmZWM01ziUOP8QAAIABJREFUaGZdfFG2XXxRdsrrIOmRe+65xz7++OOEmVmfffbZSd+zZs0aMzNbvnz5CcccbdJ88MEHp1xTnz59nFruueeeBsd07drV4vG4mZl9//vfd/Zfcsklzsysffv2OTOzDhw4YD/+8Y8TjvHb3/7WzMzGjBljc+bMabCZJcluvvlmC4fDCTOz9uzZ4zSqRo8e7dQ7Z84cKy0ttX379tn8+fPt4osvNknm8/mc2VPPPfecc+zJkyc7723Xrp2dd955znW9+uqrtnnzZotEIhYOh23YsGFN+rt06NDBwuGwrVq1yqmhrq7OBg4ceNwxTtbMmjVrlpmZVVVVmcfjMUnWrl07Z/zkyZNNkn3ve99z9h07M2vr1q125ZVXpvwzTwghhBBC0isej6zjhdnW8cJs83hSX8/phGZWM43bm1mBgNeKw32tONzXAgFvyushzT8zZsywY61cudLatWt3wvFXX32109A5tol0bK666irneDfffPMp13S0abJv3z5r3bp1g2Nmz55tZmZffvnlcbOPrrrqKtuzZ0/Cda1bt86GDBnijLn22mstHo/brFmzTNJJm1k/+tGPEo61ZcsW6969u/P6Aw884LwWj8dt3bp1TtNo586dFgqFrE2bNs6YX//61857J06c6OwfMGCAXXbZZcedq6yszMyOLEc8OtvsVP4uXbp0SThmNBq1cePGNXickzWzjs4Y27Fjh7PP6/U642fOnOns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vPNyyCGHZPbs2bnllltyzTXXZP/990+SdHZ25rrrrsvChQu3+j6f+cxnMnXq1HpddNFFW52/aNGivPvd784JJ5yQefPmZdq0abn66qt32ucCAAAAaBZFs9eTTz5ZnH766Zs8Nm/evKIoimLy5Mkvmb9q1arirLPOGvH7d3V1FQMDA8Vxxx1Xf2zGjBlFURTFnDlztqvXarVaFEVRVKvVhv+57WhNmlQpJk2qNLwPpZRSSimllFJqLFRnZ6Xo7Cz/efZIM4+muzLrD1UqlZx44omZOHFiuru7t+u15513XtatW5cVK1bknHPOybhx47Y495BDDsmECRNy00031R9buXJlVq9enblz5+5w/2XV1zecvr7hRrcBAAAAY0J//3D6+5vnPHt8oxtohJkzZ6a7uzvt7e3p6+vLsccem/vvv3/Er//Sl76UFStWZP369fmTP/mTXHDBBdljjz3yyU9+crPzp06dmoGBgfT09Gzy+Nq1azN16tSt/q4JEyakra2t/nO1Wh1xnwAAAABjTVOGWStXrsysWbMyefLkHH/88bn00kszb968EQdaixYtqo/vueeeDA4O5utf/3rOP//8DA4O7tRezz///CxYsGCnvmcjtbW15Muf2ztJ8vFzf5OBgaLBHQEAAEB5TZjQkq//zzckST76yQczODj2z7Obcpvh0NBQHnzwwaxYsSKf/vSnc/fdd+ess87a4fe744470tramr322muzzz/22GNpa2t7yTcjTpkyJY899thW3/uCCy5IV1dXvfbcc88d7vPVoLW1JX86Z3L+dM7ktLa2NLodAAAAKLXx41ty6gen5NQPTsn48c1xnt2UYdaLVSqVTbbyba9Zs2Zl48aNefzxxzf7/PLlyzM4OJgjjjii/ti+++6b6dOnb/NeXYODg6nVapsUAAAAQLNqum2GCxcuzLXXXps1a9akWq3mpJNOyuGHH56jjz46yfNXS02dOjX77LNPkuSAAw5IrVbLmjVr8tRTT+Wwww7LnDlzsnTp0tRqtcydOzeLFi3K5ZdfnqeffjpJMm3atNx88805+eSTc+edd6a3tzdLlizJhRdemPXr16e3tzcXXXRRli1bljvuuKNhfxYAAAAAZdN0Ydbuu++eyy67LHvssUd6enryi1/8IkcffXT9mwbnz5+/yT2qfvrTnyZJTj311Fx66aUZGBjIBz/4wSxYsCBtbW1ZtWpVFi1alAsvvLD+mtbW1uy3337p7OysP3b22WdneHg4V111Vdra2nL99dfnzDPPHJ0PDQAAADBGtCQZ+3cGG0Oq1Wp6e3vT1dVVyi2HkyZV8vMbZyVJZh91V/r6muerQwEAAGBn6+ys5JnVc5MkE6d3p7+/vOfZI8083DMLAAAAgNIQZgEAAABQGk13zywaq69vOIe/7576GAAAANhx/f3D2W2/O+rjZiDMYtQ9tnao0S0AAADAmLHuyeca3cKoss0QAAAAgNIQZjGq2tpasvhze2fx5/ZOW1tLo9sBAACAUpsw4ffn2RMmNMd5tm2GjKrW1pYc+WevqY8HBooGdwQAAADlNX58Sz5++h5Jkv/29w9lcHDsn2e7MgsAAACA0hBmAQAAAFAawiwAAAAASkOYBQAAAEBpCLMAAAAAKA1hFgAAAAClMb7RDdBc+vqG886T/r0+BgAAAHbcs88OZ6+Df14fNwNhFqPuwVUDjW4BAAAAxoSiSFb/trnOs20zBAAAAKA0hFmMqtbW5J//fq/889/vldbWRncDAAAA5dba2pLPf3avfP6ze6W1taXR7YwKYRajqq2tknf9p9fmXf/ptWlrs/wAAADg5Whtbcmn/uue+dR/3VOYBQAAAACvNsIsAAAAAEpDmAUAAABAaQizAAAAACgNYRYAAAAApSHMAgAAAKA0xje6AZpLX99wPvhXK+tjAAAAYMc9+xC52xQAACAASURBVOxw3vynK+rjZiDMYtTddc8zjW4BAAAAxoSiSO5b+Wyj2xhVthkCAAAAUBquzGJUtbYmn/nk/5Uk+cf/+dsMDTW4IQAAACix1taWfPoTr0uSLPzCwxkaKhrc0SuvJcnY/5RjSLVaTW9vb7q6ulKr1RrdznabNKmSn984K0ky+6i73DcLAAAAXobOzkqeWT03STJxenf6+8t7nj3SzMM2QwAAAABKQ5gFAAAAQGkIswAAAAAoDWEWAAAAAKUhzAIAAACgNIRZAAAAAJTG+EY3QHPp7x/OGWf9qj4GAAAAdtyGDcM59Ki76+NmIMxiVA0PJ7f/rNboNgAAAGBMGB5Ofn5XX6PbGFW2GQIAAABQGq7MYlS1tibnfHzPJMk/f/mRDA01uCEAAAAosdbWlpz1V9OSJF/8xu8yNFQ0uKNXXkuSsf8px5BqtZre3t50dXWlVivfdr1Jkyr5+Y2zkiSzj7orfX3NsZ8XAAAAXgmdnZU8s3pukmTi9O5S3596pJmHbYYAAAAAlIYwCwAAAIDSEGYBAAAAUBrCLAAAAABKQ5gFAAAAQGkIswAAAAAojfGNboDm0t8/nL/59G/qYwAAAGDHbdgwnMPfe0993AyEWYyq4eHkhqVPN7oNAAAAGBOGh5PblvU2uo1RZZshAAAAAKXhyixGVWtr8vHT90iSfPlbj2ZoqMENAQAAQImNH9+Svzp5SpLkG5etzXPPFQ3u6JUnzGJUtbVVMv/U58Osi7+zNkNDzbGfFwAAAF4JEya05Mufe0OS5JLvPd4UYZZthgAAAACUhjALAAAAgNIQZgEAAABQGsIsAAAAAEpDmAUAAABAaQizAAAAACiN8Y1ugOby7LPD+fT/eKg+BgAAAHbcwMBw3nnSffVxM2hJUjS6CUauWq2mt7c3XV1dqdVqjW4HAAAAYKcYaeZhmyEAAAAApWGbIaOqtTU59S+mJEku+V9rMzTU4IYAAACgxMaPb8mHjt8tSfKdK5/Ic8+N/Q14wixGVVtbJZ/82J5Jkv919RMZGmqO/bwAAADwSpgwoSWXXPTGJMkPfrSuKcIs2wwBAAAAKA1hFgAAAAClIcwCAAAAoDSEWQAAAACUhjALAAAAgNIQZgEAAABQGuMb3QDN5dlnh/M/LlxTHwMAAAA7bmBgOCec8UB93AxakhSNboKRq1ar6e3tTVdXV2q1WqPbAQAAANgpRpp52GYIAAAAQGnYZsioGjcu+Yv375ok+V9Xr8vGjQ1uCAAAAEps3Ljk2Hf+UZLk//3Jk01xnt10V2bNnz8/d999d3p6etLT05Nly5blmGOOqT//kY98JEuXLk1PT0+KosjkyZM3ef306dNz8cUX5ze/+U36+/vz61//OgsWLEhra+tWf+/SpUtTFMUm9dWvfvUV+YyvZh0dlfzd374+f/e3r09HR9MtPwAAANip2toq+cGS/fKDJfulra05zrOb7sqshx9+OOedd15+9atfpaWlJaecckquueaaHHTQQbnvvvvS2dmZ6667Ltddd13+6Z/+6SWv32+//VKpVPLRj340v/71rzNz5sx885vfzMSJE/OpT31qq7/7G9/4Rv77f//v9Z/7+/t3+ucDAAAAGMuaLsz68Y9/vMnPf/d3f5ePfexjOeyww3Lffffli1/8YpJk3rx5m3399ddfn+uvv77+86pVq/LP//zP+djHPrbNMKu/vz9r1659mZ8AAAAAoHk1x/VnW1CpVHLiiSdm4sSJ6e7u3uH3mTx5ctavX7/NeR/60IfyxBNP5J577snChQvT0dGxzddMmDAh1Wp1kwIAAABoVk13ZVaSzJw5M93d3Wlvb09fX1+OPfbY3H///Tv0Xm94wxvy13/91znnnHO2Ou+73/1uVq9end/97nc58MAD87nPfS4zZszIcccdt9XXnX/++VmwYMEO9QYAAAAw1jRlmLVy5crMmjUrkydPzvHHH59LL7008+bN2+5Aa9q0abnuuuvygx/8IBdffPFW537zm9+sj++99948+uijueWWW7L33nvnN7/5zRZfd8EFF+TCCy+s/1ytVvPII49sV58AAAAAY0VThllDQ0N58MEHkyQrVqzIoYcemrPOOivz588f8XvsscceWbp0aZYtW5a/+qu/2u4e7rjjjiTJPvvss9Uwa3BwMIODg9v9/gAAAABjUVOGWS9WqVTS1tY24vnTpk3L0qVLs3z58px22mkpimK7f+esWbOSJI8++uh2v7bMBgaG8z+/+kh9DAAAAOy4wcEip/71r+rjZtB0YdbChQtz7bXXZs2aNalWqznppJNy+OGH5+ijj06STJkyJVOnTs0+++yTJDnggANSq9WyZs2aPPXUU5k2bVpuvfXWrF69Ouecc0522223+nu/8E2F06ZNy80335yTTz45d955Z/bee++cdNJJ+dd//dc8+eSTOfDAA7No0aLcdtttueeee0b/D6GBhoaSb17mGx0BAABgZ3juuSKXfu/xRrcx6opmqosvvrhYtWpVsWHDhmLt2rXFjTfeWBx55JH15z/72c8Wm3PKKacUSYpTTjlls88Xz1+eVSQppk+fXhRFUcybN69IUrzuda8rbr311mLdunXFs88+W/zyl78sPve5zxXVanW7+69Wq0VRFDv0WqWUUkoppZRSSqlXa40082j5jwElUa1W09vbm66urtRqtUa3s93GjUvee8xrkyTXXLc+Gzc2uCEAAAAosXHjkqPfsUuS5Ppbnir1efZIM4+m22ZIY3V0VLLw7/ZKktxw29Pp63PfLAAAANhRbW2V/OS7+ydJJk7vTn//2D/PrjS6AQAAAAAYKWEWAAAAAKUhzAIAAACgNIRZAAAAAJSGMAsAAACA0hBmAQAAAFAa4xvdAM1lYGA4X7vk0foYAAAA2HGDg0U+fu6D9XEzaEnSHJ90jKhWq+nt7U1XV1dqtVqj2wEAAADYKUaaedhmCAAAAEBp2GbIqKpUkiPnvSZJctNtT2fYTkMAAADYYZVK8rbDupIkP/0/vU1xni3MYlR1dlbypYV7J0lmH3VX+vqa4G8ZAAAAvELa2yu59ZoDkiQTp3env3/sn2fbZggAAABAaQizAAAAACgNYRYAAAAApSHMAgAAAKA0hFkAAAAAlIYwCwAAAIDSGN/oBmguAwPDufT7a+tjAAAAYMcNDRX51IKH6uNm0JKkOT7pGFGtVtPb25uurq7UarVGtwMAAACwU4w087DNEAAAAIDSsM2QUVWpJHNnV5Mk3T+vZdhOQwAAANhhlUpy8IGTkiQrftHXFOfZwixGVWdnJUu++MYkyeyj7kpfXxP8LQMAAIBXSHt7JXfe+JYkycTp3envH/vn2bYZAgAAAFAawiwAAAAASkOYBQAAAEBpCLMAAAAAKA1hFgAAAAClIcwCAAAAoDTGN7oBmsvAwHCuuOaJ+hgAAADYcUNDRRZ8fk193AxakjTHJx0jqtVqent709XVlVqt1uh2AAAAAHaKkWYethkCAAAAUBq2GTLqZh0wMUly1z3PNLgTAAAAKLeWluRN+3YkSe7/5bMpmmD/nTCLUTVpUiXf+8aMJMnso+5KX5/7ZgEAAMCO6uio5N//98FJkonTu9PfP/bPs20zBAAAAKA0hFkAAAAAlIYwCwAAAIDSEGYBAAAAUBrCLAAAAABKQ5gFAAAAQGmMb3QDNJeBgeH8+Ib19TEAAACw44aGivw/ix+pj5tBS5Lm+KRjRLVaTW9vb7q6ulKr1RrdDgAAAMBOMdLMwzZDAAAAAErDNkNG3Rv+77YkyYOrBhrcCQAAAJRbS0vy+tc9f5695uGBFE2w/06YxaiaNKmSn3z3zUmS2Ufdlb4+980CAACAHdXRUclDK2YnSSZO705//9g/z7bNEAAAAIDSEGYBAAAAUBrCLAAAAABKQ5gFAAAAQGkIswAAAAAoDWEWAAAAAKUxvtEN0FyGhorc9P89XR8DAAAAO+6554p8+VuP1sfNoCVJc3zSMaJaraa3tzddXV2p1WqNbgcAAABgpxhp5mGbIQAAAAClIcxi1E2d0pqpU1ob3QYAAACMCbv+0fjs+kfNcyep5vmkvCpMmlTJrT88IEky+6i70tc33OCOAAAAoLw6Oyt54oE5SZKJ07vT3z/2z7NdmQUAAABAaQizAAAAACgNYRYAAAAApSHMAgAAAKA0hFkAAAAAlIYwCwAAAIDSGN/oBmguQ0NF/vcdPfUxAAAAsOOee67IJd9bWx83g5YkzfFJx4hqtZre3t50dXWlVqs1uh0AAACAnWKkmYdthgAAAACUhjCLUTdpUiWTJll6AAAAsDN0dlbS2dk859nN80l5VZg0qZKf3zgrP79xlkALAAAAXqbOzkqeWT03z6ye2zSBVnN8SgAAAADGBGEWAAAAAKUhzAIAAACgNIRZAAAAAJRG04VZ8+fPz913352enp709PRk2bJlOeaYY+rPf+QjH8nSpUvT09OToigyefLkl7zHLrvskssvvzw9PT156qmncvHFF2fixIlb/b1tbW1ZvHhx1q1bl1qtliuvvDK77777Tv98AAAAAGNZ04VZDz/8cM4777wccsghmT17dm655ZZcc8012X///ZMknZ2due6667Jw4cItvsd3vvOdvPnNb85RRx2Vd73rXfmzP/uzfOMb39jq7120aFHe/e5354QTTsi8efMybdq0XH311Tv1swEAAAA0g6LZ68knnyxOP/30TR6bN29eURRFMXny5E0e32+//YqiKIpDDjmk/tjRRx9dbNy4sdhjjz02+/5dXV3FwMBAcdxxx9UfmzFjRlEURTFnzpzt6rVarRZFURTVarXhf247Uu3tLcXlX3tjcfnX3li0t7c0vB+llFJKKaWUUqrM1dbWUlyxZEZxxZIZRVtbuc+zR5p5jE8Tq1QqOeGEEzJx4sR0d3eP6DVz587NU089leXLl9cfu+mmmzI8PJw5c+bkhz/84Utec8ghh2TChAm56aab6o+tXLkyq1evzty5c3PHHXds8fdNmDAhbW1t9Z+r1eqI+ny12rChyIfn/6rRbQAAAMCYMDBQ5ANnrGx0G6Oq6bYZJsnMmTNTq9UyMDCQr33tazn22GNz//33j+i1U6dOzeOPP77JYxs3bsz69eszderULb5mYGAgPT09mzy+du3aLb7mBeeff356e3vr9cgjj4yoTwAAAICxqCnDrJUrV2bWrFmZM2dOvvrVr+bSSy/Nm970pka3tVkXXHBBurq66rXnnns2uiUAAACAhmnKbYZD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t7fn7W9/+xZ/76pVq7JkyZJ885vfrD9Wq9XS398/4t6r1Wp6e3vT1dWVWq22nZ+88drbW3L5V/ZNknz4zF9mw4amW34AAACw07S1teSqb++XJDnutAcyMFDe8+ztyTwKleLJJ58sTj/99KKrq6sYGBgojjvuuPpzM2bMKIqiKObMmbPZ1+66667FwMBA8eEPf3irv2PVqlXFWWed9bL6rFarRVEURbVabfif2Y7UpEmV4oHug4sHug8uJk2qNLwfpZRSSimllFKqzNXZWSmKJ95aFE+8tejsLPd59kgzj6bcZviHKpVKTjzxxEycODHd3d055JBDMmHChNx00031OStXrszq1aszd+7czb7HySefnP7+/lx55ZXb/H3nnXde1q1blxUrVuScc87JuHHjtjp/woQJqVarmxQAAABAs2rabzOcOXNmuru7097enr6+vhx77LG5//77M2vWrAwMDKSnp2eT+WvXrs3UqVM3+15nnHFGvvvd72bDhg1b/Z1f+tKXsmLFiqxfvz5/8id/kgsuuCB77LFHPvnJT27xNeeff34WLFiw3Z8PAAAAYCxq2jBr5cqVmTVrViZPnpzjjz8+l156aebNm7fd73PYYYdl//33z3/5L/9lm3MXLVpUH99zzz0ZHBzM17/+9Zx//vkZHBzc7GsuuOCCXHjhhfWfq9VqHnnkke3uEwAAAGAsaNowa2hoKA8++GCSZMWKFTn00ENz1lln5fvf/37a2toyefLkTa7OmjJlSh577LGXvM9f/uVf5t/+7d+yYsWK7e7hjjvuSGtra/baa6/88pe/3OycwcHBLQZdAAAAAM2m6e+Z9YJKpZK2trYsX748g4ODOeKII+rP7bvvvpk+fXq6u7s3ec3EiRPzgQ98IEuWLNmh3zlr1qxs3Lgxjz/++MvqHQAAAKBZNOWVWQsXLsy1116bNWvWpFqt5qSTTsrhhx+eo48+Or29vVmyZEkuvPDCrF+/Pr29vbnooouybNmy3HHHHZu8z4knnpjx48fn8ssvf8nvOPTQQ3PZZZfliCOOyO9+97scdthhmTNnTpYuXZparZa5c+dm0aJFufzyy/P0009v92co643gJ02qpDJuYpLnP0NLy3CDOwIAAIDy6uysJC2dSZ4/zx43rrzn2SPNOpoyzNp9991z2WWXZY899khPT09+8Ytf5Oijj65/g+HZ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29vjox/9aIwfPz7+5m/+JrZt21bq+du//dv40pe+FJdeemlMmTIltm/fHg888EBUVVWlODkAAABAdrgAfD+58sor47nnnouLL764dNu6deu69Fx++eXxne98J+69996IiLjgggti48aNcdZZZ8Wdd945kOMCAAAAZJJPZvWTM844Ix555JGYP39+bNy4MR577LH47Gc/W7p/7Nix8ba3vS0WLlxYuq1QKMTy5ctj2rRp3T5vZWVl5PP5LgUAAAAwVAmz+smRRx4ZX/jCF+KZZ56JU045JX70ox/FD3/4w7jgggsiImLMmDEREbFx48Yuj9u4cWPpvjcyZ86cKBQKpdqwYcPBexEAAAAAb3JOM+wn5eXl8cgjj8TXvva1iIh4/PHHY8KECXHppZfGHXfc0efn/d73vhfXX3996ed8Pp/pQKu5uTW+8b01pTUAAADQd21tnXHOJatL66FAmNVPXnzxxXj66ae73LZq1ao4++yzIyLipZdeioiI0aNHl9Z7fn788ce7fd6dO3fGzp07D8LE6Whv74jv/ODetMcAAACAQaGjI+Kue19Oe4wB5TTDfrJkyZI4+uiju9w2bty4WL9+fURErF27Nl588cU4+eSTS/fn8/mYMmVKLFu2bEBnBQAAAMgqn8zqJ3Pnzo2lS5fGnDlzYv78+fG+970vPve5z8XnPve5Us8NN9wQX//61+OZZ56JtWvXxre//e144YUX4le/+lWKkw+s4cOHxZVf/lhERPzg+vujvb0j5YkAAAAgu4YNi/j4x94SERH/9/6Xo2OIvM1OVP/Uxz72seTJJ59MduzYkTz99NPJZz/72b16vvnNbyYvvvhismPHjmTBggXJu971rv36M/L5fJIkSZLP51N/vX2p+vraJHnlK0nyyleS+vra1OdRSimllFJKKaWyXLlceZJsPiFJNp+Q5HLlqc9zINXbzKPsfxZkRD6fj0KhEHV1dVEsFtMeZ7/V19fG1rUzIyLisLG3xLZt21OeCAAAALIrlyuP7eunRUREbeOyaGnJ7kXge5t5uGYWAAAAAJkhzAIAAAAgM4RZAAAAAGSGMAsAAACAzBBmAQAAAJAZFWkPwNDS0tIWP7hpXWkNAAAA9N3OnUl85n8/U1oPBWURMTRe6SDR26+pBAAAAMiS3mYeTjMEAAAAIDOcZsiAGj58WMz83MkREXHLjxdF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\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 2\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 183 183 218\n","long_tp : 333.6251154476814\n","long_out : 311.82493073139125\n","short real pr : [0.93133094]\n","long real pr : [1.06862456]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : -2.0\n","np_timeidx[open_idx] : 42\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 223 223 313\n","short_tp : 325.2889349255682\n","short_out : 343.77063904465905\n","short real pr : [0.98313102]\n","long real pr : [1.01378645]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 27\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 388 388 428\n","long_tp : 337.2438215910591\n","long_out : 317.92570704536456\n","short real pr : [0.96845807]\n","long real pr : [1.028797]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : 2.0\n","np_timeidx[open_idx] : 21\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 502 502 574\n","long_tp : 330.9184832209484\n","long_out : 321.3209100674309\n","short real pr : [0.9959427]\n","long real pr : [1.00086033]\n"]},{"output_type":"display_data","data":{"image/png":"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DSw1NdV27txp/fr1s5deesmOHj1qP/30k/n7+7vMfeONN8zMbMKECfbEE0/YnDlzzMysW7duXrUmIYQQQogH4/ECCCGEEFKJ403Nq6CgoApZp2bNmla1alWTZM8//3y5m1fvv/++5eTkWMOGDZ1jt9xyi5mZPfnkk86x+vXrW0FBgY0dO9Zl/2XLltn+/fvNx8fHK9YkhBBCCPFkuG0QAABUCB8fH7388ss6cOCA8vLy9O2336pJkyblWiMmJkZmphtvvFHjx49Xenq6MjMz9emnn6pGjRouc5OSkjRnzhx16tRJa9euVV5ennr27HnatYODgxUZGalatWqdtY6MjAxlZ2eXq/bfio6O1jfffKMDBw44x5YsWaLt27fr/vvvd4516dJFAQEBGjdunMv+H3zwgRo2bKjrrrvOK9YEAADwJJpXAACgQgwaNEh/+9vf9Pbbb2vEiBG69tprNXny5HNa61//+peaN2+u4cOHa9KkSerevbtmzpzpNi8yMlJTpkzR4sWL1b9/f23cuPG0a15zzTXatm2bnn766XOqqazq16+vunXrat26dW7b1qxZo9atWzvft27dWtnZ2dq6davbvFPbvWFNAAAAT/LzdAEAAODCEBQUpFatWqmoqEjSr1cvvffee7ryyiu1ZcuWcq1VWFioW265RcXFxZKkffv26a233tLdd9+tOXPmOOddccUVuu2227Ro0aKKO5HfqV69epKk5ORkt23JycmqVauWAgICVFhYqHr16iklJaXUedKvDSZvWBMAAMCTuPIKAABUiLi4OGfjSpISEhIkSREREeVe68MPP3Q2rqRfb3krKipS586dXebt2bOnzI2rZcuWyeFw6B//+Ee56ymP4OBgSVJBQYHbtvz8fJc5wcHBZZ7nyTUBAAA8ieYVAACoEPv373d5n5GRIUmqWbNmudfauXOny/ucnBwlJyerUaNGLuNJSUnlXvuPlpeXJ0kKDAx02xYUFOQyJy8vr8zzPLkmAACAJ9G8AgAAFaKkpKTUcYfD8Ycd0xubK6duwzt1W95v1atXT0ePHnXeipecnKywsLBS50nS4cOHvWJNAAAAT6J5BQAAvM4VV1zh8j4kJET16tXT3r17PVNQORw+fFipqalq166d27ZrrrnG5aHyGzduVEhIiJo3b+4yr3379s7t3rAmAACAJ9G8AgAAXuepp56S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V181bdpUkrR3797fffy7775bQUFBuueee3TgwAHneIcOHcpd6yn79u2T9OsD4k/9RcJTIiMjndvPp5tuukm1a9fWvffe63wwvlT2B8IDAABUBpXj/3YEAACVSk5OjiSpRo0apW739/dXz5493d6npqZq/fr1v/v4p64w+u0VRdWqVVOPHj1KrfV0df7WunXrlJKSol69eikgIMA5fvvtt6tFixaaO3fuWdeIiIio0OdLlXae/v7+6tOnT4UdAwAAwNO48goAAFS43bt3KyMjQ7169VJWVpZycnL0448/Oq+qOnTokF588UU1atRIO3bsULdu3dS6dWs9+eSTKi4u/t3HX7RokQoKCjRnzhxNmDBBVatW1ZNPPqnU1FTVr1/fZe769evVu3dvDR48WLt27VJqaqrblVWSVFxcrBdffFHx8fFatmyZpkyZorp166p///5KSkrS6NGjz1rXkiVLJFXclVGrVq3SsWPH9Omnn+q9996TmemRRx7hNkAAAHBB4corAABQ4YqLixUTE6OSkhKNHz9eX3zxhaKiopzbMzIy1LlzZ7Vr105vvfWWGjZsqL59++qjjz6qkOPv2LFDXbt2lZnp7bffVq9evfThhx9qzJgxbnNfeeUVzZs3TwMHDtQXX3yhYcOGnXbdTz/9VPfff78CAgL0z3/+Uz179tTXX3+tv/71r8rMzKyQ2svj2LFjuuuuu5ScnKzXXntNf//737V48WINHDjwvNcCAADwR3FIKtuDHgAAACrA0qVLVbt2bbVs2dLTpQAAAKAS4MorAAAAAAAAeC2eeQUAALxO7dq15evre9rthYWFysjIOI8VAQAAwFNoXgEAAK+zdu1aNWrU6LTbv//+e3Xo0OH8FQQAAACP4ZlXAADA61x//fUKDg4+7faMjAxt2LDhPFYEAAAAT6F5BQAAAAAAAK/FA9sBAAAAAADgtWheAQCAC0JUVJTMTFFRUZ4uBQAAABWI5hUAAAAAAAC8Fs0rAAAAAAAAeC2aVwAA4KJypr9iCAAAAO9D8woAAFQ6DRo00Ndff63s7GylpKRo1KhRCgwMdJu3dOlSJSYmqk2bNlq2bJlycnL0xhtvnHZdPz8/RUZGKiws7Kw1xMXFKSsrS/Xr19fXX3+trKwspaam6q233pKPj+tXrOeff14rV65Uenq6cnNztW7dOkVHR7utaWYaO3asunTposTEROXn52vz5s267bbbyvBTAQAAuDA5JJmniwAAACiroKAgbdy4UX/605/03nvv6fDhw3rkkUfk7++vq6++WjfddJOWLVsm6dfmVWRkpHx9ffXFF19o8+bNSklJ0ezZs0tdOzw8XHv37lV8fLx69Ohxxjri4uLUrVs37d69Wz/++KPWrl2rjh07qmvXrurdu7fGjx/vnLt//37Nnj1bv/zyiwICAvTAAw+offv2uvPOOzVv3jznPDPTxo0bVadOHY0bN05ZWVl65plnFBYWpj/96U86duxYBfwEAQAAKh8jhBBCCKkseeaZZ8zMrGvXrs6x4OBg27Fjh5mZRUVFOceXLl1qZmZPPfVUmdYODw83M7O4uLizzo2LizMzsyFDhriMr1+/3tauXesyFhQU5PLez8/Pfv75Z/v2229dxs3M8vPzLSIiwjnWsmVLMzPr27evx3/2hBBCCCGeCLcNAgCASqVz5846fPiwvvrqK+dYXl6ePvzww1Ln5+fnKy4urkxr79u3Tw6H46xXXf3Wb6+wkqSEhARFRES41XBKjRo1VL16dSUkJKhNmzZu63377bfas2eP831iYqIyMzPd1gQAALhY+Hm6AAAAgPIIDw/Xrl273Ma3b99e6vxDhw6pqKjoD6klLy9P6enpLmMZGRm65JJLXMbuvPNODRkyRK1atVJQUJBz/OTJk25r7t+/320sIyNDNWvWrKCqAQAAKheuvAIAABe0vLy8P2ztkpKSs87561//qtmzZys/P199+vTRHXfcoY4dO2ry5MluD3Y/05oOh+N31wsAAFAZceUVAACoVPbt26errrrKbTwyMtID1ZxddHS08vPzddttt6mwsNA5Xp5bEwEAAC5mXHkFAAAqlXnz5qlBgwbq2rWrcyw4OFhPPfXU717bz89PkZGRCgsL+91rnVJSUiIzk6+vr3MsPDxc//M//1NhxwAAALiQ0bwCAACVysSJE7Vz505NmjRJI0aM0DPPPKPly5crNzf3d6/doEEDbdu2TSNGjKiASn81d+5chYSEaMGCBerZs6eGDh2qH3/8sdTndgEAAMAdzSsAAFCp5OXl6ZZbbtGiRYvUr18/DRkyRCtWrNDAgQM9XVqpli5dqscee0xhYWF699139eCDD+rFF1/U119/7enSAAAAKgWHJPN0EQAAAAAAAEBpuPIKAAAAAAAAXovmFQAAAAAAALwWzSsAAAAAAAB4LZpXAAAAAAAA8Fo0rwAAAAAAAOC1aF4BAAAAAADAa9G8AgAA51WdOnU0bdo0paeny8zUv39/T5cEAAAAL0bzCgAAnFejR4/WbbfdphEjRujhhx/WggULPF3SaVWvXl0TJkxQamqqsrOz9d1336l169Zl3r9Zs2aaP3++srKydPToUU2aNEm1a9d2m+dwOPTCCy9oz549ysvL06ZNm/TAAw/8rjXDwsI0YcIE7dmzR7m5udq1a5feeecdXXLJJWX/AQAAAHgJI4QQQgg5X0lOTrbPPvvM43WcLQ6Hw1asWGFZWVk2bNgw69Onj23evNkyMzPt8ssvP+v+DRo0sNTUVNu5c6f169fPXnrpJTt69Kj99NNP5u/v7zL3jTfeMDOzCRMm2BNPPGFz5swxM7Nu3bqd05ohISGWlJRkqampNnz4cHv88cftvffes4KCAtuwYYM5HA6P/3wJIYQQQsoRjxdACCGEkIsoJSUlNnbsWI/Xcbbcd999ZmYWHR3tHKtdu7YdO3bMJk+efNb933//fcvJybGGDRs6x2655RYzM3vyySedY/Xr17eCggK3n8myZcts//795uPjU+41H3zwQTMz69y5s8uaw4cPNzOzVq1aefznSwghhBBSjni8AEIIIYRcBImJibHSnNpevXp1Gz16tO3fv9/y8/Nt586dNnDgQLerhBwOh/Xv3982b95seXl5duTIERs/frzVqFHjrDX4+flZZGSkhYWFnXXul19+acnJyW7HHz9+vGVnZ1tAQMAZ9z9y5Ih9+eWXbuPbtm2zxYsXO9/37t3bzMyaN2/uMu+BBx4wM7Mbbrih3Gv27NnTzMzatm3rMu/UeGRkpMc/D4QQQgghZQ3PvAIAAOfF8uXL9fDDD0uSFi1apIcfftj5Pjg4WMuWLdPDDz+sSZMm6ZlnntHKlSs1YsQIjRo1ymWdCRMm6K233tLKlSvVv39/xcXFqXv37lq4cKH8/PzOWEODBg20bds2jRgx4qz1tm7dWhs2bNCv/bX/WLNmjUJCQtS0adPT7lu/fn3VrVtX69atc9u2Zs0al+dmtW7dWtnZ2dq6davbvFPby7vm8uXLVVJSojFjxqh9+/Zq0KCB7rjjDg0ePFhff/21tm/fftbzBwAA8CYe76ARQggh5OKJmbndIjd48GDLyspye5bUG2+8YUVFRXbZZZeZJLvhhhvMzOzBBx90mdepU6dSx/874eHhZmYWFxd31jqzsrLso48+chu/4447zMysU6dOp923bdu2Zmb28MMPu2375z//aWbmvHJrzpw5tmvXLrd5wcHBZmb2xhtvlHtNSfbYY4/ZsWPHXK5yi4uLM19fX49/BgghhBBCyhOuvAIAAB533333KSEhQRkZGapVq5Yz3377rfz8/PT//t//c847fvy4Fi9e7DJv/fr1ysrKUocOHc54nH379snhcKhHjx5nrSk4OFgFBQVu4/n5+c7tZ9pXUpn2L+txyrOmJB06dEhr1qxR//799T//8z9655131L17d7355punrRsAAMAbnfnaegAAgPPgiiuu0NVXX6309PRSt9epU8c5r0aNGkpLSzvjvIqQl5enwMBAt/GgoCDn9jPtK6lM+5f1OOVZ8/rrr9c333yja6+9VuvXr5ckzZo1SydOnFBsbKw++eQTt9sUAQAAvBXNKwAA4HE+Pj5atGiRRo4cWer2HTt2OOelpKSoe/fupc47XVPrXCQnJ6tevXpu46fGDh8+fMZ9fzv3v/c/evSoCgsLnXNLu2Lsv49TnjV79uyplJQUZ+PqlNmzZ+sf//iHrr/+eppXAACg0qB5BQAAPG737t2qWrWqlixZctZ5HTt21MqVK523yv1RNm7cqBtvvFEOh8Ploe3t27dXTk6Os6FWmsOHDys1NVXt2rVz23bNNddo48aNLsd58skn1bx5c5eGUvv27Z3by7tm3bp15evr6zbP399fks76YHsAAABvwjOvAACAx02dOlXXX3+9OnXq5LatevXqzkbM1KlT5efnp6FDh7rN8/X1VfXq1c94HD8/P0VGRiosLOysNX311VcKCwvTvffe6xyrVauW7rvvPs2ZM8d5lZMkRUREKCIiwmX/6dOn66677tJll13mHLv55psVGRmpadOmOcdmzZqlwsJC9enTx2X/Xr166eDBg1q1alW519yxY4fCwsIUFRXlsuaDDz4oSfrpp5/Oev4AAADexONPjSeEEELIxZPS/tpgcHCwrVu3zgoLC+3DDz+0nj172oABAywuLs6ysrKsVq1azrkffPCBmZnNnTvX+vfvb3369LHRo0fbwYMHLTo6+ozHLs9fG/Tx8bFVq1bZiRMnbOjQoda7d29LTEy0zMxMa9q0qcvc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iSfcw4cPu36/P+fx62NxfGzZssXt6upyr7nmGnf16tXuDTfc4A4ODrp/9Vd/NTZG96E+svHxznf+X/buPT7K+s77/3smmZkcTABLIaAStRWVH6tWQMqKRYretrj1sEW9y94/Keq6SmmLW08s3ovW9QR7A0pwe9K0HrcUaddCXRWbbldBENB6o0JrTUADBCkxByeZmcx87z+SDBmSuWaSOVzXzLyej8f38bgy88nkm+R7fee6PvM9fMXce++95oorrjDGGHP55ZfHPJ9Mu/vNb35j3nzzTXPeeeeZ888/3/zxj380Tz/9tO2/GyV3ilU7rKysNC+99JK56qqrzPjx483UqVPN66+/bt54442Y16AdFkyxvQIFW15//XWzevXq6Ncul8t89NFH5o477rC9bpTCKCNHjjTGGHPBBRcYqfsNIhAImK9//evRmNNPP90YY8zUqVNtry8lv0p5ebnZs2ePmTVrlqmrq4smr2iHlGyVBx54wPz+97+3jNm/f7/53ve+F/26srLSdHR0mGuuucb2+lPyo/z61782P/nJT2IeW7dunXnyySejX9MOKZkuAyWvErW7M844wxhjzKRJk6Ixl1xyiQmHw2bMmDG2/06U3CsDtcNjy+TJk40xxpx00klGoh0WUmHaoE08Ho8mTZqkTZs2RR8zxmjTpk2aNm2ajTVDIRk2bJgk6ciRI5KkSZMmyev1xrTLPXv2aO/evbRLpN2aNWu0ceNGvfLKKzGP0w6RLZdddpm2b9+utWvXqqmpSTt37tQNN9wQff6UU07RmDFjYtpia2urtm7dSltE2mzevFmzZs3SaaedJkk666yzNH36dL3wwguSaIewRzLtbtq0aWpubtaOHTuiMZs2bVIkEtHUqVOzXmcUhmHDhikSieiTTz6RRDssJMV2V6BQjRw5UsXFxWpqaop5vKmpSWeccYZNtUIhcblcWrVqlV599VW98847kqSqqioFAgG1tLTExDY1NamqqsqOaiJPXXPNNTr33HMHXOePdohsOfXUU3XzzTdrxYoVuv/++zVlyhQ98sgjCgaDeuKJJ6LtbaD3atoi0uXBBx9UZWWldu/erXA4rKKiIi1ZskTPPPOMJNEOYYtk2l1VVZUOHToU83w4HNaRI0dom8gIn8+nhx56SM8++6za2tok0Q4LCckroECtWbNGEydO1PTp0+2uCgrM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vfzyy/r85z9vU22Rr9xut77//e/rgw8+kN/v1/vvv6+77rqrXxxtEel2wQUX6Pnnn1djY6OMMbr88sv7xSRqdyNGjNBTTz2llpYWNTc36yc/+YnKy8uz9SsgT1i1xeLiYj344IN6++231d7ersbGRv3sZz/TmDFjYl6Dtpj/DCW75eqrrzadnZ3mm9/8pjnzzDPND3/4Q3PkyBHz2c9+1va6UfK3vPDCC2bevHlmwoQJ5qyzzjIbNmwwDQ0NpqysLBrz6KOPmr1795qZM2eac88912zevNm8+uqrttedkp9l8uTJ5oMPPjBvvfWWWblyZfRx2iElW2X48OGmvr7ePP7442bKlCnm5JNPNhdffLE59dRTozG33367aW5uNpdddpn5q7/6K/OrX/3K/PnPfzY+n8/2+lPypyxevNh8/PHHZvbs2aa6utp8/etfN62trebb3/52NIa2SMlE+cpXvmLuvfdec8UVVxhjjLn88stjnk+m3f3mN78xb775pjnvvPPM+eefb/74xz+ap59+2vbfjZJbxaotVlZWmpdeeslcddVVZvz48Wbq1Knm9ddfN2+88UbMa9AW877YXoGCK6+//rpZvXp19GuXy2U++ugjc8cdd9heN0rhlJEjRxpjjLnggguM1P2mEAgEzNe//vVozOmnn26MMWbq1Km215eSX6W8vNzs2bPHzJo1y9TV1UWTV7RDSjbLAw88YH7/+99bxuzfv99873vfi35dWVlpOjo6zDXXXGN7/Sn5U37961+bn/zkJzGPrVu3zjz55JPRr2mLlEyXgZJXidrdGWecYYwxZtKkSdGYSy65xITDYTNmzBjbfydKbpaB2uKxZfLkycYYY0466SQj0RYLoTBtMMs8Ho8mTZqkTZs2RR8zxmjTpk2aNm2ajTVDoRk2bJgk6ciRI5KkSZMmyev1xrTNPXv2aO/evbRNpN2aNWu0ceNGvfLKKzGP0w6RTZdddpm2b9+utWvXqqmpSTt37tQNN9wQff6UU07RmDFjYtpja2urtm7dSntEWm3evFmzZs3SaaedJkk666yzNH36dL3wwguSaIuwRzLtbtq0aWpubtaOHTuiMZs2bVIkEtHUqVOzXmcUjmHDhikSieiTTz6RRFssBMV2V6DQjBw5UsXFxWpqaop5vKmpSWeccYZNtUKhcblcWrVqlV599VW98847kqSqqioFAgG1tLTExDY1NamqqsqOaiJPXXPNNTr33HMHXOuPdohsOvXUU3XzzTdrxYoVuv/++zVlyhQ98sgjCgaDeuKJJ6JtbqD3bNoj0unBBx9UZWWldu/erXA4rKKiIi1ZskTPPPOMJNEWYYtk2l1VVZUOHToU83w4HNaRI0dom8gYn8+nhx56SM8++6za2tok0RYLAckroACtWbNGEydO1PTp0+2uCgrMiSeeqIcfflgXX3yxAoGA3dVBgXO73dq+fbuWLFkiSXrrrbc0ceJE3XTTTfp/7d0/aFNrGMfxJzWSYtohDp6tGUpih2BC/AcOJiZ28Q+0S8AIuriIIE5CxuIScIiQVrpIQMxgQXRykY4hisZBbIogGCuaKBpFQiNJ28fh3h7M7dVbuDXnmHw/8IPy9iW8gR8056E55+bNmxafDv0kkUjI6dOnJZlMysLCgoRCIbl27Zq8e/eOLgLAD5xOp8zNzYnD4ZDz589bfRx0EV8b7LKPHz/KysqKGIbRsW4YhtRqNYtOhX6SzWblxIkTcuTIEXn79q25XqvVxOVymV8nXEc3sZX27t0rhmHI06dPpd1uS7vdlmg0KhcvXpR2uy3v37+nh+iaarUq5XK5Y21xcVFGRkZERMzO8Tcbv9vVq1clnU7L7du35fnz53Lr1i3JZDKSSqVEhC7CGpvpXa1W2/BE4G3btsnOnTvpJrbc+uDK6/XK+Pi4+V9XInSxHzC86rJ2uy2lUkni8bi55nA4JB6PS7FYtPBk6AfZbFYmJyclFotJpVLp+F2pVJJWq9XRTb/fL16vl25iy8zPz0sgEJBQKGTm8ePHks/nJRQKyZMnT+ghuqZQKMju3bs71vx+v7x+/VpERF69eiXVarWjj8PDw3Lw4EH6iC21Y8cOWVtb61hbXV2VgYG/PqrTRVhhM70rFovi8XgkHA6be2KxmAwMDMijR4+6fmb0rvXBlc/nk6NHj5r37V1HF/uD5XeN77ckEgltNpt65swZHRsb09nZWa3X67pr1y7Lz0Z6NzMzM/r582c9fPiwGoZhZnBw0Nxz/fp1rVQqGo1GNRwOa6FQ0EKhYPnZSW/nx6cNitBD0r3s27dPW62WplIpHR0d1VOnTmmj0dBkMmnuuXz5stbrdT158qQGAgG9e/fuhsfEE/J/k8vl9M2bN3rs2DH1er06MTGhHz580HQ6be6hi+R3xO12azAY1GAwqKqqly5d0mAwaD7BbTO9u3//vpZKJd2/f78eOnRIX7x4ofl83vL3Rv6s/KqLTqdT7927p0tLS7pnz56Oa5nt27ebr0EXez6WH6Avc+HCBa1UKvrt2zd9+PChHjhwwPIzkd7Oz5w9e9bc43K5dHp6Wj99+qSNRkPv3LmjhmFYfnbS2/nn8Ioekm7m+PHj+uzZM202m1oul/XcuXMb9kxNTWm1WtVms6kPHjxQn89n+blJb2VoaEgzmYxWKhVdXl7Wly9f6pUrVzouykToItn6RCKRf/18mMvlzD3/1TuPx6P5fF6/fv2qX7580Rs3bqjb7bb8vZE/K7/qotfr/em1TCQSMV+DLvZ2HH//AAAAAAAAANgO97wCAAAAAACAbTG8AgAAAAAAgG0xvAIAAAAAAIBtMbwCAAAAAACAbTG8AgAAAAAAgG0xvAIAAAAAAIBtMbwCAAAAAACAbTG8AgAAAAAAgG0xvAIAAAAAAIBtMbwCAAAAAACAbTG8AgAAAAAAgG0xvAIAAAAAAIBtfQdyjwyjV8vw0AAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : -2.0\n","np_timeidx[open_idx] : 1\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 662 662 829\n","short_tp : 321.4039014867266\n","short_out : 339.81365910796404\n","short real pr : [0.93529287]\n","long real pr : [1.06438984]\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1800 with 2 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","open_side : -2.0\n","np_timeidx[open_idx] : 56\n","open_idx, ep_idx_list_[0], tp_idx_list_[-1] : 897 897 1018\n","short_tp : 343.47106340901763\n","short_out : 355.19736195458944\n","short real pr : [0.97406209]\n","long real pr : [1.02303772]\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-72-d2f3401561e7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m    466\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    467\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0msave_plot\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 468\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    469\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    470\u001b[0m   \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    270\u001b[0m     \"\"\"\n\u001b[1;32m    271\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 272\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    273\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/pylab/backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(close, block)\u001b[0m\n\u001b[1;32m     37\u001b[0m             display(\n\u001b[1;32m     38\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m                 \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m             )\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(*objs, **kwargs)\u001b[0m\n\u001b[1;32m    304\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    305\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 306\u001b[0;31m             \u001b[0mformat_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    307\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m                 \u001b[0;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mformat\u001b[0;34m(self, obj, include, exclude)\u001b[0m\n\u001b[1;32m    171\u001b[0m             \u001b[0mmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 173\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    174\u001b[0m             \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m                 \u001b[0;31m# FIXME: log the exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-2>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[0;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m         \u001b[0;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    332\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 334\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    335\u001b[0m             \u001b[0;31m# Finally look for special method names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(fig)\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'png'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 241\u001b[0;31m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    242\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'retina'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m'png2x'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mretina_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(fig, fmt, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m    123\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m     \u001b[0mbytes_io\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 125\u001b[0;31m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    126\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'svg'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m   2124\u001b[0m                     \u001b[0morientation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morientation\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2125\u001b[0m                     \u001b[0mbbox_inches_restore\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_bbox_inches_restore\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2126\u001b[0;31m                     **kwargs)\n\u001b[0m\u001b[1;32m   2127\u001b[0m             \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2128\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mbbox_inches\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mrestore_bbox\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py\u001b[0m in \u001b[0;36mprint_png\u001b[0;34m(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs)\u001b[0m\n\u001b[1;32m    535\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mopen_file_cm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilename_or_obj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wb\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfh\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    536\u001b[0m                 _png.write_png(renderer._renderer, fh, self.figure.dpi,\n\u001b[0;32m--> 537\u001b[0;31m                                metadata={**default_metadata, **metadata})\n\u001b[0m\u001b[1;32m    538\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    539\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mprint_to_buffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","metadata":{"id":"13a-U32Uy50I"},"source":["### brief np_pr survey"]},{"cell_type":"code","metadata":{"id":"L9LdjV2uUWnp"},"source":["# plot_pr_list[:100]\n","\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TBE0l6dHRYrE"},"source":["### whole pr & chart sync"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"id":"-txULkhXRbz5","executionInfo":{"elapsed":1436,"status":"ok","timestamp":1636355589887,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"7cda9fc7-4a4e-4c52-ffa3-a974b5f7c66f"},"source":["#     chunky survey 필요함    #\n","chunk_size = 50000\n","\n","sync_pr = np.ones(len(res_df))\n","sync_tr = np.zeros(len(res_df))\n","# sync_tr = np.empty(len(res_df))\n","# sync_tr[:] = np.nan\n","\n","max_tr = np.max(tp_ratio_list)\n","min_tr = np.min(tp_ratio_list)\n","\n","for ck_i in range(0, len(res_df), chunk_size):\n","\n","  chunked_df = res_df.iloc[ck_i:ck_i + chunk_size]\n","  # break\n","\n","  for pr_, eptp_idx, tr_ in zip(pr_list[ck_i:ck_i + chunk_size], trade_list[ck_i:ck_i + chunk_size], tp_ratio_list[ck_i:ck_i + chunk_size]):\n","    # print(pr_, eptp_idx)\n","    sync_pr[eptp_idx[-1][0]] = pr_\n","    sync_tr[eptp_idx[-1][0]] = tr_\n","    # break\n","\n","  chunked_pr = sync_pr[ck_i:ck_i + chunk_size]\n","  chunked_tr = sync_tr[ck_i:ck_i + chunk_size]\n","  chunked_tr = np.where(np.isnan(chunked_tr), pd.Series(chunked_tr).shift(1), chunked_tr)\n","\n","  # plt.figure(figsize=(8, 6))\n","\n","  plt.subplot(311)\n","  plt.plot(np.arange(len(chunked_df)), chunked_df['close'])\n","  # plt.show()\n","\n","  plt.subplot(312)\n","  plt.plot(np.cumprod(chunked_pr))\n","  \n","  plt.subplot(313)\n","  plt.plot(chunked_tr)\n","  plt.ylim(min_tr + 0.5 * (max_tr - min_tr), max_tr)\n","  \n","  plt.show()\n","  print()\n"],"execution_count":null,"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"markdown","metadata":{"id":"Qys2Bw5Ou3u9"},"source":["### plot indi. legacy"]},{"cell_type":"code","metadata":{"id":"pi5ntOOVu6JT"},"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  #               sar               #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"59nW2aKYzkN8"},"source":["### plot all indicator (stepline ver.)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":828},"id":"JDH4rXgNzno6","executionInfo":{"elapsed":3326,"status":"ok","timestamp":1631665238032,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"outputId":"3ee8589d-27d7-4433-ed78-7bb1233cf175"},"source":["save_plot = False\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".xlsx\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","# prev_plotsize = 120\n","prev_plotsize = 150\n","post_plotsize = 20\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","#         select plot columns       #\n","major_st_list = ['major_ST1_Up', 'major_ST1_Down', 'major_ST2_Up', 'major_ST2_Down', 'major_ST3_Up', 'major_ST3_Down',\n","                 'major_middle_line', 'major_upper_middle', 'major_lower_middle']\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower'] # + major_st_list\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1',  'senkou_a2']\n","senkoub_list = ['senkou_b1',  'senkou_b2']\n","\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1']\n","\n","# ma_list = ['sma1', 'sma4']\n","ma_list = ['ema5']\n","\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","trix_list = ['trix1', 'trix2', 'trix3']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","emaroc_list = ['ema_roc']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + ma_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + ma_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","input_colname = basic_list + major_st_list + senkoua_list + senkoub_list + sar_list + stoch_list + fisher_list + emaroc_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list # currently just used for ymin, ymax\n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","\n","\n","# for t_i, (initial_i, i, j) in enumerate(trade_list):\n","for t_i, (ep_idx_list_, tp_idx_list_) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # if 100 < i < 1860:\n","  if ep_idx_list_[0] == 370530:\n","    pass\n","  else:\n","    continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > short_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + post_plotsize, input_cols]\n","  plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize, [7, 10, 13]]\n","  # st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend', 'major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  # htf_st_trend_plot_df = res_df[['major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","  \n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, plot_df['minor_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, plot_df['minor_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, plot_df['minor_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, plot_df['minor_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, plot_df['minor_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, plot_df['minor_ST3_Down'], np.nan)\n","\n","  plot_df[\"off_color_upper_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, plot_df['major_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, plot_df['major_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, plot_df['major_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, plot_df['major_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, plot_df['major_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, plot_df['major_ST3_Down'], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df['minor_ST1_Up'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, np.nan, plot_df['minor_ST1_Up'])\n","  plot_df['minor_ST2_Up'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, np.nan, plot_df['minor_ST2_Up'])\n","  plot_df['minor_ST3_Up'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, np.nan, plot_df['minor_ST3_Up'])\n","  plot_df['minor_ST1_Down'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, np.nan, plot_df['minor_ST1_Down'])\n","  plot_df['minor_ST2_Down'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, np.nan, plot_df['minor_ST2_Down'])\n","  plot_df['minor_ST3_Down'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, np.nan, plot_df['minor_ST3_Down'])\n","\n","  plot_df['major_ST1_Up'] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, np.nan, plot_df['major_ST1_Up'])\n","  plot_df['major_ST2_Up'] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, np.nan, plot_df['major_ST2_Up'])\n","  plot_df['major_ST3_Up'] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, np.nan, plot_df['major_ST3_Up'])\n","  plot_df['major_ST1_Down'] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, np.nan, plot_df['major_ST1_Down'])\n","  plot_df['major_ST2_Down'] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, np.nan, plot_df['major_ST2_Down'])\n","  plot_df['major_ST3_Down'] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, np.nan, plot_df['major_ST3_Down'])\n","\n","\n","  plot_short_ep = short_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_ep = long_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_tp = long_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]  \n","\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=False, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                       ncols=1, # col 몇 개 \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  plt.step(plot_df[['minor_ST1_Up', 'minor_ST2_Up', 'minor_ST3_Up']].values, 'r', alpha=1)  # upper on color\n","  plt.step(plot_df[['minor_ST1_Down', 'minor_ST2_Down', 'minor_ST3_Down']].values, 'b', alpha=1)  # lower on color\n","  \n","  plt.step(plot_df[['major_ST1_Up', 'major_ST2_Up', 'major_ST3_Up']].values, 'r', alpha=1, linewidth=3)  # major upper on color\n","  plt.step(plot_df[['major_ST1_Down', 'major_ST2_Down', 'major_ST3_Down']].values, 'b', alpha=1, linewidth=3)  # major lower on color\n","\n","  plt.step(plot_df[['middle_line']].values, 'fuchsia', alpha=1)  # middle \n","  plt.step(plot_df[['major_middle_line']].values, 'fuchsia', alpha=1, linewidth=3)  # major_middle \n","  \n","  plt.step(plot_df[['off_color_upper_st1', 'off_color_upper_st2', 'off_color_upper_st3']].values, 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df[['off_color_lower_st1', 'off_color_lower_st2', 'off_color_lower_st3']].values, 'b', alpha=1, linestyle=':')  # lower off color\n","  \n","  plt.step(plot_df[['off_color_upper_hst1', 'off_color_upper_hst2', 'off_color_upper_hst3']].values, 'r', alpha=1, linestyle=':', linewidth=3)  # major upper off color\n","  plt.step(plot_df[['off_color_lower_hst1', 'off_color_lower_hst2', 'off_color_lower_hst3']].values, 'b', alpha=1, linestyle=':', linewidth=3)  # major lower off color\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_long_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  plt.step(plot_df[['major_upper_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  plt.step(plot_df[['major_lower_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  \n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- on price indicator part ---------------------- #\n","\n","  # ---------------------- sma ---------------------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(ma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='black', linewidth=lw)\n","  #   alpha -= 0.2\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","  # ------------- initial order ------------- #\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline  \n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","\n","  #         hedge ep & tp         #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  if not static_lvrg:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\nlvrg : %s\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], lvrg_list[t_i], tp_ratio_list[t_i]))\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], tp_ratio_list[t_i]))\n","\n","  print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee - 1) * lvrg + 1)\n","  print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee - 1) * lvrg + 1)\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for emaroc in emaroc_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  plt.axhline(0, linestyle='--')\n","\n","\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  if not save_plot:\n","    plt.show()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  \n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["short real pr : [0.95849245]\n","long real pr : [1.0378222]\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 864x1152 with 2 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}]},{"cell_type":"code","metadata":{"id":"KGuJu2j4Aby9"},"source":["# print()\n","for item in os.listdir(current_path + \"plot_check/\"):\n","  if item.endswith('png'):\n","    os.remove(current_path + \"plot_check/\" + item)\n","    print(current_path + \"plot_check/\" + item, \"removed !\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cj9X6S1jJjER"},"source":["### plot nontp case"]},{"cell_type":"code","metadata":{"id":"Gb1jGrS4Jl8A"},"source":["prev_plotsize = 50\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","short_ver = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    h_plot_pr_list = h_np_pr\n","\n","\n","\n","#         select plot columns       #\n","# basic_cols = [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14] # you don't need to touch\n","\n","# sar_cols = [15, 18] # 15 ~ 19\n","# ichimoku_cols = [20, 21]  # 20 ~ 29\n","# # ichimoku_cols = [22, 23]  # 20 ~ 29\n","# ichimoku_cols2 = [22, 23]  # 20 ~ 29\n","# macd_cols = [30]  # 30 ~ 34\n","\n","# print(res_df.columns[basic_cols])\n","# break\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher']\n","cctbbo_list = ['cctbbo']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","if short_ver:\n","  nontp_indexs = nontp_short_indexs\n","  nontp_liqd_list = nontp_short_liqd_list\n","  nontp_pr_list = nontp_short_pr_list\n","  nontp_ep = nontp_short_ep_list\n","else:\n","  nontp_indexs = nontp_long_indexs\n","  nontp_liqd_list = nontp_long_liqd_list\n","  nontp_pr_list = nontp_long_pr_list\n","  nontp_ep = nontp_long_ep_list\n","\n","\n","for t_i, i in enumerate(nontp_indexs):\n","\n","  j = len(res_df) - 1\n","\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # # if 1800 < i < 1860:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > upper_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + 1, input_cols]\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, plot_df.iloc[:, [4]], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, plot_df.iloc[:, [6]], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, plot_df.iloc[:, [8]], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, plot_df.iloc[:, [5]], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, plot_df.iloc[:, [7]], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, plot_df.iloc[:, [9]], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[i - prev_plotsize:j + 1]\n","  plot_long_tp = long_tp.iloc[i - prev_plotsize:j + 1]  \n","\n","\n","\n","  # fig = plt.figure(figsize=(12, 16))\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                       ncols=1, # col 몇 개 \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.step(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  # plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  plt.step(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower on color\n","  plt.step(plot_df.values[:, [10]], 'fuchsia', alpha=1)  # middle\n","  \n","  plt.step(plot_df.values[:, -6:-3], 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df.values[:, -3:], 'b', alpha=1, linestyle=':')  # lower off color\n","\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_upper_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_lower_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- indicator part ---------------------- #\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  if i != initial_i:\n","    plt.axvline(prev_plotsize - (i - initial_i), alpha=0.5, linestyle='--')\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(nontp_ep[t_i], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  # for sub_i in range(len(ep_tp_list[t_i][1])):\n","  #   plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline    \n","\n","  #         hedge ep & tp         #\n","  # h_i = h_trade_list[t_i][1]\n","  # if h_i is not None:\n","  #   plt.axvline(prev_plotsize + (h_i - i), linestyle='--')\n","  #   plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","  #   plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  plt.title(\"%s ~ %s -> liqd : %.2f\\npr : %.2f\" % (i, j, nontp_liqd_list[t_i], nontp_pr_list[t_i]))\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # #           macd          #\n","  # # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(313)\n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for stoch in stoch_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(stoch_upper, linestyle='--')\n","  plt.axhline(stoch_lower, linestyle='--')\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  plt.show()\n","  # plt.draw()\n","  plt.close()\n","  print()\n","\n","  # break\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-g7YY5BvMcLS"},"source":["### show detail values"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5TxQ3rDnKMa7","executionInfo":{"elapsed":255,"status":"ok","timestamp":1625228960601,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"outputId":"422ac214-8c88-4f39-ec3a-7c823574f6da"},"source":["i, j = 27267, 27268\n","print(\"upper_ep.iloc[i] :\", upper_ep.iloc[i])\n","print(\"short_tp.iloc[j] :\", short_tp.iloc[j])"],"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["upper_ep.iloc[i] : 2348.266954813089\n","short_tp.iloc[j] : 2205.609333246829\n"]}]},{"cell_type":"markdown","metadata":{"id":"7AIl6EBuZNOL"},"source":["## none plot off-color st"]},{"cell_type":"code","metadata":{"id":"yaVxrNGzZgrF"},"source":["prev_plotsize = 50\n","\n","for t_i, (i, j) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if pr_list[t_i] >= 1:\n","  #   continue\n","\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1, [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 16]]\n","\n","  #       replace st values with np.nan, using st trend     #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  fig = plt.figure(figsize=(8, 6))\n","  ax = fig.add_subplot(111)\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper\n","  plt.plot(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower\n","  plt.plot(plot_df.values[:, [10]], 'g', alpha=1)  # middle\n","\n","  plt.plot(plot_df.values[:, [11]], 'c*', alpha=1, markersize=5)  # sar mic\n","  plt.plot(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  plt.plot(plot_upper_ep.values, alpha=1, linestyle='--')  # ep\n","  plt.plot(plot_lower_ep.values, alpha=1, linestyle='--')  # ep\n","\n","  plt.axvline(prev_plotsize, linestyle='--')\n","\n","  plt.title(\"%s ~ %s -> %.5f\" % (i, j, pr_list[t_i]))\n","  plt.show()\n","  # plt.draw()\n","  plt.close()"],"execution_count":null,"outputs":[]}]}