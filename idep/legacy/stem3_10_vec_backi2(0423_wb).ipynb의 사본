{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6rmQpzEGXfCw","executionInfo":{"status":"ok","timestamp":1650682531571,"user_tz":-540,"elapsed":4959,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"56d81ca6-025b-400d-a140-5c967a058c04"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)\n","\n","strat_pkg = 'IDE'\n","\n","mpl_finance_path = '/content/drive/My Drive/Colab Notebooks/JnQ/mpl_finance'\n","ta_lib_path = '/content/drive/My Drive/Colab Notebooks/JnQ/ta_lib'\n","\n","if mpl_finance_path not in sys.path:\n","\n","  try:\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ')\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/{}'.format(strat_pkg))\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/funcs')\n","    sys.path.insert(0, mpl_finance_path)\n","    sys.path.insert(0, ta_lib_path)\n","    \n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"8uqYv5StTazo"},"source":["# requirements"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"9qGt60DKTZmf","executionInfo":{"status":"ok","timestamp":1650671507633,"user_tz":-540,"elapsed":16650,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# !pip install zigzag --target=$'/content/drive/My Drive/Colab Notebooks/JnQ/zigzag'\n","# !pip install talib-binary --target=$'/content/drive/My Drive/Colab Notebooks/JnQ/ta_lib'\n","# !pip install findiff\n","\n","# import nvstrings, nvcategory, cudf\n","# import cuml\n","# import cudf\n","\n","import os\n","import talib\n","from funcs.funcs_idep import *\n","from funcs.funcs_duration_v2 import *\n","from funcs.funcs_plot_check import *\n","from funcs.funcs_pairing import *\n","# from funcs.funcs_ide import *\n","# from funcs.funcs_indicator_candlescore import *\n","from funcs.funcs_indicator import *\n","from funcs.funcs_trader import *\n","from ast import literal_eval\n","import logging\n","import importlib\n","\n","import mpl_finance as mf\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","# from zigzag import *\n","# from tqdm.notebook import tqdm\n","\n","import IPython\n","import IPython.display\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","# import seaborn as sns\n","# import tensorflow as tf\n","from scipy import stats, signal\n","\n","import pickle\n","import shutil\n","import json\n","from easydict import EasyDict\n","import copy\n","\n","import datetime\n","from datetime import datetime\n","import random\n","import time\n","# import warnings\n","\n","# warnings.simplefilter(\"ignore\", category=RuntimeWarning)\n","\n","np.seterr(invalid=\"ignore\")\n","np.set_printoptions(suppress=True)\n","np.set_printoptions(linewidth=2000) \n","\n","pd.set_option('mode.chained_assignment',  None)\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset - with to_htf dataframes"]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## sync_check_make"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QmhLikYlSuzi"},"outputs":[],"source":["def sync_check_make(df):\n","\n","    make_itv_list = ['3T', '5T', '15T', '30T', 'H', '4H', 'D']\n","    offset_list = ['1h', '1h', '1h', '1h', '1h', '1h', '9h']\n","\n","    assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        \n","    htf_df_list = [to_htf(df, itv_=itv_, offset=offset_) for itv_, offset_ in zip(make_itv_list, offset_list)]\n","\n","    df_3T, df_5T, df_15T, df_30T, df_H, df_4H, df_D = htf_df_list\n","\n","    for htf_df in htf_df_list:\n","      print(\"{} -> \".format(pd.infer_freq(htf_df.index)), htf_df.tail(1))\n","\n","    # heikinashi_v2(res_df_)\n","\n","    # h_candle_v3(res_df, '5T')\n","\n","    # --------------- bb --------------- #  \n","    # bb_period = 20\n","\n","    # # bb_width_v2(df, period=bb_period, multiple=1)\n","    # # # df = bb_line(df, df_5T, '5T')\n","    # # # df = bb_line(df, df_15T, '15T')\n","    # # print(\"bb phase done\")\n","\n","    c_itv = '15T'\n","\n","    # # bb_itv= 'T'\n","    # # candle_pumping_ratio(df, c_itv, bb_itv, bb_period)\n","\n","    dc_itv= '15T'\n","    dc_period = 4\n","    # df = candle_pumping_ratio_v2(df, c_itv, dc_itv, dc_period)\n","    # print(\"candle_pumping_ratio_v2 phase done\")\n","\n","    # df = dc_over_body_ratio(df, c_itv, dc_itv, dc_period)\n","    # print(\"dc_over_body_ratio phase done\")\n","\n","    df = body_rel_ratio(df, c_itv)\n","    print(\"body_rel_ratio phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # cloud_bline(df_3T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_3T, [-1]), how='inner')\n","    # # cloud_bline(df_5T, 20)\n","    # # df = df.join(to_lower_tf_v2(df, df_5T, [-1]), how='inner')\n","    # cloud_bline(df_15T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_15T, [-1]), how='inner')\n","    # cloud_bline(df_30T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_30T, [-1]), how='inner')\n","    # cloud_bline(df_H, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_H, [-1]), how='inner')\n","    # cloud_bline(df_4H, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_4H, [-1]), how='inner')\n","\n","    # print(\"cbline phase done\")\n","\n","    # --------------- dc --------------- #  \n","    # df = dc_line(df, df_5T, '5T')  # join 사용시에만 return df 허용함\n","    # df = dc_line(df, df_15T, '15T')\n","    # df = dc_line_v2(df, df_H, 'H', dc_period=5)\n","\n","    # print(\"dc phase done\")\n","\n","\n","    # --------------- sd_dc --------------- #\n","    # df = sd_dc(df, 20, 40)\n","    # df = sd_dc(df, 20, 20)\n","    # df = sd_dc(df_5T, 20, 40, df)\n","    # df = sd_dc(df_H, 20, 40, df)\n","\n","    # print(\"sd_dc phase done\")\n","\n","    # --------------- imb_ratio --------------- #\n","    # imb_ratio(df, '5T')\n","    # imb_ratio_v3(df, \"5T\")\n","    # imb_ratio_v4(df, \"5T\")\n","\n","    # imb_ratio(df, 'H')\n","    # imb_ratio_v2(df, '5T')\n","    \n","    # print(\"imb_ratio phase done\")\n","\n","    # --------------- rel_abs_ratio --------------- #\n","    # rel_abs_ratio(df, '5T', norm_period=120)\n","\n","    # --------------- normalize data --------------- #\n","    # itv = 'T'\n","    # lb_period = 15\n","    # target_col = 'close_{}{}'.format(itv, lb_period)\n","    # target_data = df['close'].diff(lb_period).to_numpy()\n","    # norm_data(df, target_data, target_col)    \n","    # print(\"normalize data phase done !\")\n","\n","    # --------------- lucid sar --------------- #\n","    # lucid_sar_v2(df)\n","    # lucid_sar_v2(df_3T)\n","    # df = df.join(to_lower_tf_v2(df, df_3T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_5T)\n","    # df = df.join(to_lower_tf_v2(df, df_5T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_15T)\n","    # df = df.join(to_lower_tf_v2(df, df_15T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_30T)\n","    # df = df.join(to_lower_tf_v2(df, df_30T, [-2, -1]), how='inner')       \n","\n","    # print(\"sar phase done\")\n","\n","    # --------------- supertrend --------------- #\n","    # df = st_price_line(df, df_3T, '3m')\n","    # df = st_price_line(df, df_5T, '5m')\n","    # df = st_price_line(df, df_15T, '15m')\n","    # df = st_price_line(df, df_30T, '30m')\n","    # df = st_price_line(df, df_H, '1h')\n","    # df = st_price_line(df, df_4H, '4h')\n","\n","    # print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    # df['rsi_1m'] = rsi(df, 14)    \n","    # df_5T['rsi_5m'] = rsi(df_5T, 14)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['rsi_5m']))\n","    \n","    # print(\"rsi phase done\")\n","\n","\n","    # --------------- cci --------------- #  \n","    # df['cci_1m'] = cci(df, 20)\n","\n","    # print(\"cci phase done\")\n","\n","    # --------------- ema --------------- #      \n","    # df_5T['ema_5m'] = ema(df_5T['close'], 195)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['ema_5m']))\n","    \n","    # print(\"ema phase done\")\n","        \n","    # --------------- stochastic --------------- #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # df_5T['stoch'] = stoch(df_5T, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat 생각하면, timeindex sync 맞춰야함)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"error","timestamp":1636201718856,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"khKb9nhlSuzj","outputId":"02bf2c60-f298-4fe9-e6bb-78230ac1348c"},"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ee034491b257>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0ma_day\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3600\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m24\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtqdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mkeys\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_list' is not defined"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"VA-_gcA7Suzj","outputId":"f6f3b55d-ec2c-4b2c-d62e-3de7c0384dc4"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be2b848dbcb14a079a2b7bd605af6435","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/156 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n","DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"executionInfo":{"elapsed":43664,"status":"ok","timestamp":1638246331122,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"M-gl30KxSuzk","outputId":"1cfcb580-8d25-4bd0-fdd0-213640779ce2"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3225655da874b8d89cc8b2a381b3fb6","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/175 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BCHUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XRPUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 EOSUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LINKUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XLMUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ADAUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETHUSDT_1m.ftr\n"]}],"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver. (database to res_df)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vgVHpnUsSuzk"},"outputs":[],"source":["# db_path = './candlestick_concated/database_ub/' # upbit\n","db_path = './candlestick_concated/database_bn/'   # binance\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","save_dir_path = \"bb1d_backi2\"\n","date = '2022-02-17'\n","\n","# concat_path = 'noncat' # 새로운 cols 를 기존 cum/concat 에 붙이려는 경우\n","concat_path = 'concat'\n","cum_path = \"cum\"\n","# cum_path = \"non_cum\"  # non_cum 으로 진행하는 경우, row concat 용도이기 때문에 noncat -> concat 으로 변경 (base cols 를 모두 담고 있음)\n","\n","load_path = os.path.join(db_path, cum_path, date)\n","save_path = os.path.join(save_path, save_dir_path, concat_path, cum_path, date)\n","\n","os.makedirs(save_path, exist_ok=True)\n","\n","file_list = os.listdir(load_path)\n","exist_list = os.listdir(save_path)\n","# break\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    df = pd.read_feather(os.path.join(load_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    res_df = sync_check_make(df)\n","\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_path, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"YxCPUzoyidwH"},"source":["#### just add col to loaded df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"odqVwQHpYo1M","colab":{"base_uri":"https://localhost:8080/","height":620},"executionInfo":{"status":"ok","timestamp":1650611121685,"user_tz":-540,"elapsed":4513,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"9a0036b5-e5f8-4bdd-9aca-eb7c50e16366"},"outputs":[{"output_type":"stream","name":"stdout","text":["3T ->                          open     high      low    close\n","index                                                  \n","2022-02-17 10:27:00  3148.85  3150.08  3146.38  3146.76\n","5T ->                          open     high      low    close\n","index                                                  \n","2022-02-17 10:25:00  3146.85  3150.08  3145.44  3146.76\n","15T ->                          open    high      low    close\n","index                                                 \n","2022-02-17 10:15:00  3143.99  3151.0  3139.14  3146.76\n","30T ->                         open     high      low    close\n","index                                                 \n","2022-02-17 10:00:00  3148.8  3158.68  3139.14  3146.76\n","H ->                         open     high      low    close\n","index                                                 \n","2022-02-17 10:00:00  3148.8  3158.68  3139.14  3146.76\n","4H ->                         open     high     low    close\n","index                                                \n","2022-02-17 09:00:00  3121.8  3158.68  3120.0  3146.76\n","D ->                         open     high     low    close\n","index                                                \n","2022-02-17 09:00:00  3121.8  3158.68  3120.0  3146.76\n","body_rel_ratio phase done\n"]},{"output_type":"execute_result","data":{"text/plain":["                         dc_upper_3T20  dc_lower_3T20  dc_base_3T20  dc_upper_H20  dc_lower_H20  dc_base_H20  dc_upper_15T4_br  dc_lower_15T4_br   brr_15T  body_rel_ratio_15T\n","index                                                                                                                                                                         \n","2022-02-17 10:25:59.999        3158.68        3129.66      3144.170       3186.79       3040.42     3113.605         -4.303249         -9.111913  0.575884            0.575884\n","2022-02-17 10:26:59.999        3158.68        3129.66      3144.170       3186.79       3040.42     3113.605         -4.303249         -9.111913  0.575884            0.575884\n","2022-02-17 10:27:59.999        3158.68        3131.05      3144.865       3186.79       3040.42     3113.605         -4.303249         -9.111913  0.575884            0.575884\n","2022-02-17 10:28:59.999        3158.68        3131.05      3144.865       3186.79       3040.42     3113.605         -4.303249         -9.111913  0.575884            0.575884\n","2022-02-17 10:29:59.999        3158.68        3131.05      3144.865       3186.79       3040.42     3113.605         -4.303249         -9.111913  0.575884            0.575884"],"text/html":["\n","  <div id=\"df-341f4367-04ad-4c8e-a971-72a6a16d39da\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>dc_upper_3T20</th>\n","      <th>dc_lower_3T20</th>\n","      <th>dc_base_3T20</th>\n","      <th>dc_upper_H20</th>\n","      <th>dc_lower_H20</th>\n","      <th>dc_base_H20</th>\n","      <th>dc_upper_15T4_br</th>\n","      <th>dc_lower_15T4_br</th>\n","      <th>brr_15T</th>\n","      <th>body_rel_ratio_15T</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-02-17 10:25:59.999</th>\n","      <td>3158.68</td>\n","      <td>3129.66</td>\n","      <td>3144.170</td>\n","      <td>3186.79</td>\n","      <td>3040.42</td>\n","      <td>3113.605</td>\n","      <td>-4.303249</td>\n","      <td>-9.111913</td>\n","      <td>0.575884</td>\n","      <td>0.575884</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-17 10:26:59.999</th>\n","      <td>3158.68</td>\n","      <td>3129.66</td>\n","      <td>3144.170</td>\n","      <td>3186.79</td>\n","      <td>3040.42</td>\n","      <td>3113.605</td>\n","      <td>-4.303249</td>\n","      <td>-9.111913</td>\n","      <td>0.575884</td>\n","      <td>0.575884</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-17 10:27:59.999</th>\n","      <td>3158.68</td>\n","      <td>3131.05</td>\n","      <td>3144.865</td>\n","      <td>3186.79</td>\n","      <td>3040.42</td>\n","      <td>3113.605</td>\n","      <td>-4.303249</td>\n","      <td>-9.111913</td>\n","      <td>0.575884</td>\n","      <td>0.575884</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-17 10:28:59.999</th>\n","      <td>3158.68</td>\n","      <td>3131.05</td>\n","      <td>3144.865</td>\n","      <td>3186.79</td>\n","      <td>3040.42</td>\n","      <td>3113.605</td>\n","      <td>-4.303249</td>\n","      <td>-9.111913</td>\n","      <td>0.575884</td>\n","      <td>0.575884</td>\n","    </tr>\n","    <tr>\n","      <th>2022-02-17 10:29:59.999</th>\n","      <td>3158.68</td>\n","      <td>3131.05</td>\n","      <td>3144.865</td>\n","      <td>3186.79</td>\n","      <td>3040.42</td>\n","      <td>3113.605</td>\n","      <td>-4.303249</td>\n","      <td>-9.111913</td>\n","      <td>0.575884</td>\n","      <td>0.575884</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-341f4367-04ad-4c8e-a971-72a6a16d39da')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-341f4367-04ad-4c8e-a971-72a6a16d39da button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-341f4367-04ad-4c8e-a971-72a6a16d39da');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":145}],"source":["res_df_ = sync_check_make(res_df_)  # suffix duplication 유의\n","res_df_.tail().iloc[:, -10:]\n","# res_df_.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3SKglsQCj5_x"},"outputs":[],"source":["test_df_ = sync_check_make(res_df_.iloc[-4000:])  # suffix duplication 유의\n","test_df_.tail().iloc[:, -10:]"]},{"cell_type":"code","source":["# ------ validation ------ #\n","# res_df_.cppr_15T.describe()\n","print((res_df_.open_15T.to_numpy() - res_df_.close_15T.to_numpy())[-10:])\n","print((res_df_.dc_upper_15T4.to_numpy() - res_df_.dc_lower_15T4.to_numpy())[-10:])"],"metadata":{"id":"gOQxwYqK0jCS"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3261,"status":"ok","timestamp":1650611129318,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"XrgJPQRuisCa","outputId":"a9a2387a-4a5c-4705-c62b-70d6c18372e6"},"outputs":[{"output_type":"stream","name":"stdout","text":["./candlestick_concated/database_bn/cum/2022-02-17/2022-02-17 ETHUSDT.ftr saved !\n"]}],"source":["# ------------ save current res_df ------------ #\n","ftr_path = os.path.join(save_path.replace(\"res_df\", \"database_bn\"), \"cum\", date)\n","ftr_full_path = os.path.join(ftr_path, key)\n","\n","res_df_.reset_index().to_feather(ftr_full_path, compression='lz4')  # key 잘 확인하고 저장\n","print(ftr_full_path, 'saved !')"]},{"cell_type":"markdown","metadata":{"id":"E0n53hflJbnp"},"source":["### htf candle check"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":489,"status":"ok","timestamp":1642148504926,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6xW0yugCWvGz","outputId":"58106ff9-9709-4a62-bca2-1f6795d13322"},"outputs":[{"name":"stdout","output_type":"stream","text":["itv_ : 3T\n","                        open     high      low    close\n","index                                                  \n","2022-01-10 15:06:00  3169.97  3170.22  3159.51  3161.22\n","2022-01-10 15:09:00  3161.22  3163.98  3161.22  3163.82\n","2022-01-10 15:12:00  3163.82  3163.83  3156.02  3160.49\n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3162.93\n","2022-01-10 15:18:00  3163.02  3164.29  3162.41  3164.28\n","                            open     high      low    close    volume\n","index                                                                \n","2022-01-10 15:08:59.999  3169.97  3170.22  3159.51  3161.22  4241.449\n","2022-01-10 15:11:59.999  3161.22  3163.98  3161.22  3163.82  1143.874\n","2022-01-10 15:14:59.999  3163.82  3163.83  3156.02  3160.49  2135.292\n","2022-01-10 15:17:59.999  3160.51  3164.29  3159.01  3162.93  1011.598\n","2022-01-10 15:20:59.999  3163.02  3164.29  3162.41  3163.82   466.868\n"]}],"source":["itv_list = ['3T', '5T', '15T', '30T', '1H', '4H']\n","comp_df_list = [second_df, third_df, fourth_df, fifth_df, sixth_df, seventh_df]\n","offset_list = ['1h', '2min', '2min', '2min', '2min', '2min']\n","# itv_list = ['4H']\n","# comp_df_list = [seventh_df]\n","\n","slice_len = 100\n","for itv_, comp_df_, offset in zip(itv_list, comp_df_list, offset_list):\n","\n","  print(\"itv_ :\", itv_)\n","\n","  # df = h_candle_v2(df, '3T')\n","  # end_ts = \n","  h_res_df = df.resample(itv_, offset=offset).agg({\n","          'open': 'first',\n","          'high': 'max',\n","          'low': 'min',\n","          'close': 'last'\n","      })\n","\n","  #   앞은 길이가 다르고, 뒤에서부터 잘라서 비교    #\n","  #   last_row 빼고는 동일, 4h 제외\n","  # print(df.tail())\n","  print(h_res_df.tail())\n","  print(comp_df_.tail())\n","  # # print(h_res_df.head())\n","  # # print(second_df.head())\n","\n","  # print(len(h_res_df))\n","  # print(len(second_df))\n","\n","  # print(h_res_df.values[-slice_len:])\n","  # print(second_df.iloc[:, :4].values[-slice_len:])\n","  # print(np.argwhere(h_res_df.values[-slice_len:] != comp_df_.iloc[:, :4].values[-slice_len:]))\n","  # print()\n","  break"]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U-3QkfbFSuzl"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xyI5NrM7Suzm"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  print(os.path.join(new_save_path, key), \"saved !\")\n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2001,"status":"ok","timestamp":1642739652513,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6cu-Y82iSuzl","outputId":"273507b8-0d33-48b5-d9c5-00547688ef73"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2022-01-10 ETHUSDT.ftr']\n","./candlestick_concated/res_df/st3m_backi2/concat/cum/2022-01-10/2022-01-10 ETHUSDT.ftr saved !\n"]}],"source":["new_dir_path = \"st3m_backi2\"\n","base_dir_path = \"bb1d_backi2\"\n","\n","# new_date = \"2021-11-17\"\n","new_date = \"2022-01-10\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)   \n","# save_path = os.path.join(save_path, new_dir_path, \"concat/non_cum\", new_date)   # row col 하려면 concat 맞음, noncum 사용\n","os.makedirs(save_path, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat/\", \"noncat/\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  try:\n","\n","    #       read from base postfix's directory    #\n","    base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","    res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    # print(base_df.head())\n","    # print(res_df.head())\n","    # break\n","\n","    new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","    # new_res_df.head()\n","\n","    droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","    # droped_new_res_df.head()\n","    # break\n","\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df\n","    print(os.path.join(save_path, key), \"saved !\")\n","  \n","  except Exception as e:\n","    print(\"error occured ! :\", e)\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat) , database cum 도 호환가능"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7893,"status":"ok","timestamp":1645188189702,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"XG2p9OhhSuzm","outputId":"e67874ba-0710-4f38-966f-5ea7d42403cb"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2022-02-17 ETHUSDT_1m.ftr']\n","                            open     high     low    close  volume\n","index                                                             \n","2019-11-27 16:45:59.999   146.00   146.00   146.0   146.00   0.010\n","2022-02-17 10:29:59.999  3146.86  3147.22  3146.4  3146.76  26.727\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-02-17/2022-02-17 ETHUSDT_1m.ftr saved !\n"]}],"source":["save_path = './candlestick_concated/res_df/'        # cols 추가된 cum db 에 new_row's cols 기준으로 합치는 경우\n","save_path = './candlestick_concated/database_bn/'   # ohlcv cum db 만들 경우\n","\n","base_date = '2022-01-10'\n","new_date = '2022-02-17'\n","\n","#     load ftr list    #\n","if \"database\" in save_path:\n","  base_dir_path = \"\"\n","  new_dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  base_dir_path = \"sar_backi2\"\n","  new_dir_path = \"bb4h_backi2\"  # dir_path 가 base / new 서로 달라질 수 있어서 분할함\n","  concat_dir = \"concat\"\n","\n","base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"cum\", base_date)      # 기존 cum db 와 new_date db 를 cum 진행\n","# base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"non_cum\", base_date)    # non_cum db 와 new_date db 를 cum 진행\n","\n","# new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"cum\", new_date)      # 상황별로 직접 선택해야할 듯\n","new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"non_cum\", new_date)\n","\n","\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")   # non_cum 아니여도 무관\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat 두가지 경우 존재가능할 것\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","exist_list = os.listdir(save_path)\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:   # date rejection\n","    continue\n","  if '1m' not in key:  # itv rejection\n","    continue\n","\n","  # if key in exist_list:\n","  #   print(key, \"already exist !\")\n","  #   continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")   # key 에 new_date 담겨있음\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break  \n","  \n","  print(droped_new_res_df.iloc[[0, -1]])  \n","\n","  # ------------- verify df continuity directly itv by itv ------------- #\n","  true_continue = True\n","  if \"_\" in key:\n","\n","    interval = key.split(\".\")[0].split(\"_\")[-1] \n","    itv_num = to_itvnum(interval)\n","\n","    # verified_df = consecutive_df(droped_new_res_df, to_itvnum(interval))\n","    # verified_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df  \n","\n","    np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","    ideal_ts_gap = 60 * itv_num\n","\n","    for ts_i in range(len(np_idx_ts)):\n","      \n","      if ts_i != 0:\n","        ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","        if ts_gap > ideal_ts_gap or ts_gap < ideal_ts_gap:\n","        # if ts_gap == ideal_ts_gap:\n","          print(droped_new_res_df.index[ts_i - 1])\n","          print(droped_new_res_df.index[ts_i])\n","          # print(ts_gap)\n","          print(\"------------------ unideal ts_gap ------------------\")\n","          true_continue = False\n","\n","    print(\"continuity checked !\")\n","\n","  if true_continue:\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n"]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["### check continuity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w-5jn9opBl73"},"outputs":[],"source":["droped_new_res_df = res_df_"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4621,"status":"ok","timestamp":1649653761880,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"nGzMGyC3Suzn","outputId":"5007eef3-8a2f-4085-bf3d-f2b415395bc4"},"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high     low    close  volume  dc_upper_5T  dc_lower_5T  dc_base_5T  dc_upper_15T  dc_lower_15T  dc_base_15T  bb_upper_5T  bb_lower_5T  bb_upper_15T  bb_lower_15T\n","index                                                                                                                                                                                                  \n","2019-11-27 16:45:59.999   146.00   146.00   146.0   146.00   0.010          NaN          NaN         NaN           NaN           NaN          NaN          NaN          NaN           NaN           NaN\n","2022-02-17 10:29:59.999  3146.86  3147.22  3146.4  3146.76  26.727      3158.68      3131.05    3144.865       3174.54       3114.98      3144.76  3147.061024  3127.711976   3153.606702   3132.698298\n","[1.57487316e+09 1.57487322e+09 1.57487328e+09 1.57487334e+09 1.57487340e+09 1.57487346e+09 1.57487352e+09 1.57487358e+09 1.57487364e+09 1.57487370e+09]\n"]}],"source":["# print(droped_new_res_df.columns)\n","\n","print(droped_new_res_df.iloc[[0, -1]])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","\n","      print(\"invalid ts_gap found !\")\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"]},{"cell_type":"markdown","metadata":{"id":"x_XGJqBi8Jex"},"source":["### check length of front missing value + middle_data non_missing validity"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":311,"status":"ok","timestamp":1641887318959,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"yRNwqVeAu8X8","outputId":"fb236bde-4527-4bc7-eac4-4bee42532c5a"},"outputs":[{"name":"stdout","output_type":"stream","text":["2.167361111111111\n","38\n"]}],"source":["#       1. new_date 의 시작 timeidx 와 base_date end timeidx 의 최소 days' gap     #\n","#       2. new_date 의 시작 부분 indi. value 는 np.nan 으로 채워질 거기 때문에 계산해야함    #\n","\n","df_count = droped_new_res_df.count()\n","len_missing = df_count.max() - df_count.min()\n","print(len_missing / 1440)\n","\n","#       3. \n","missing_sliced_df = droped_new_res_df.iloc[len_missing:]\n","df_count2 = missing_sliced_df.count()\n","# print(df_count2)\n","print((df_count2.max() - df_count2.min()))    # this value should be zero !\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AY7E2_hTBsyM"},"outputs":[],"source":["# df_count2.index[df_count2.argmin()]\n","# missing_sliced_df.head(5)\n","\n","stay_missed = np.sum(pd.isnull(missing_sliced_df), axis=0)\n","print(stay_missed)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p9yqewOw9g33"},"outputs":[],"source":["stay_missed_cols = stay_missed[stay_missed != 0].index\n","\n","for sm_col in stay_missed_cols:\n","  \n","  row_idx = np.argwhere(pd.isnull(missing_sliced_df[sm_col].values))\n","\n","  plt.figure(figsize=(3,3))\n","  plt.plot(row_idx)\n","  plt.ylim(0, len(missing_sliced_df))\n","  plt.title(sm_col)\n","\n","  plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"MSUY4nnku3s9"},"source":["## legacy"]},{"cell_type":"markdown","metadata":{"id":"epgS5Dksu-HX"},"source":["### mv files"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aJcVpEdrslA5"},"outputs":[],"source":["df_path = './candlestick_concated/survey_df_v2'\n","files_ = os.listdir(df_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cEKyEYkotFDy"},"outputs":[],"source":["dirs = [file_ for file_ in files_ if not file_.endswith('.ftr')]\n","files = [file_ for file_ in files_ if file_.endswith('.ftr')]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1644111921194,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"IgM79tcxtPVZ","outputId":"84305b35-eb52-49fc-d5fd-fdbc64cc8679"},"outputs":[{"data":{"text/plain":["['2022-01-10 ETHUSDT', '2022-01-10 ETHUSDT_all', '2022-02-04 SOLUSDT']"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["dirs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M767iRtwtRQP"},"outputs":[],"source":["def move_fn(dir_, file_):\n","  src_path = os.path.join(df_path, file_)\n","  dst_path = os.path.join(df_path, dir_, file_)\n","  shutil.move(src_path, dst_path)\n","  print(\"moved to {}\".format(dst_path))\n","\n","_ = [move_fn('2022-01-10 ETHUSDT_all', file_) for file_ in files if 'eth'.upper() in file_]\n","# sols\n"]},{"cell_type":"markdown","metadata":{"id":"Ci_jUnNTZbm9"},"source":["### load data (old)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22503,"status":"ok","timestamp":1638246127510,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"_bXyS2yrZYC6","outputId":"b24a8a66-48b1-42b5-aa79-63f5a8542bac"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 LTCUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 ETHUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-08-31 SUSHIUSDT.xlsx', '2021-08-31 CVCUSDT.xlsx', '2021-08-31 BTSUSDT.xlsx', '2021-08-31 HOTUSDT.xlsx', '2021-08-31 ZRXUSDT.xlsx', '2021-08-31 QTUMUSDT.xlsx', '2021-08-31 IOTAUSDT.xlsx', '2021-08-31 BTCBUSD.xlsx', '2021-08-31 WAVESUSDT.xlsx', '2021-08-31 ADAUSDT.xlsx', '2021-08-31 LITUSDT.xlsx', '2021-08-31 XTZUSDT.xlsx', '2021-08-31 BNBUSDT.xlsx', '2021-08-31 AKROUSDT.xlsx', '2021-08-31 HNTUSDT.xlsx', '2021-08-31 ETCUSDT.xlsx', '2021-08-31 XMRUSDT.xlsx', '2021-08-31 YFIUSDT.xlsx', '2021-08-31 ETHUSDT.xlsx', '2021-08-31 ALICEUSDT.xlsx', '2021-08-31 ALPHAUSDT.xlsx', '2021-08-31 SFPUSDT.xlsx', '2021-08-31 REEFUSDT.xlsx', '2021-08-31 BATUSDT.xlsx', '2021-08-31 DOGEUSDT.xlsx', '2021-08-31 TRXUSDT.xlsx', '2021-08-31 RLCUSDT.xlsx', '2021-08-31 BTCSTUSDT.xlsx', '2021-08-31 STORJUSDT.xlsx', '2021-08-31 SNXUSDT.xlsx', '2021-08-31 XLMUSDT.xlsx', '2021-08-31 NEOUSDT.xlsx', '2021-08-31 UNFIUSDT.xlsx', '2021-08-31 SANDUSDT.xlsx', '2021-08-31 DASHUSDT.xlsx', '2021-08-31 KAVAUSDT.xlsx', '2021-08-31 RUNEUSDT.xlsx', '2021-08-31 CTKUSDT.xlsx', '2021-08-31 LINKUSDT.xlsx', '2021-08-31 CELRUSDT.xlsx', '2021-08-31 RSRUSDT.xlsx', '2021-08-31 DGBUSDT.xlsx', '2021-08-31 SKLUSDT.xlsx', '2021-08-31 RENUSDT.xlsx', '2021-08-31 TOMOUSDT.xlsx', '2021-08-31 MTLUSDT.xlsx', '2021-08-31 LTCUSDT.xlsx', '2021-08-31 DODOUSDT.xlsx', '2021-08-31 EGLDUSDT.xlsx', '2021-08-31 KSMUSDT.xlsx', '2021-08-31 ONTUSDT.xlsx', '2021-08-31 VETUSDT.xlsx', '2021-08-31 TRBUSDT.xlsx', '2021-08-31 MANAUSDT.xlsx', '2021-08-31 COTIUSDT.xlsx', '2021-08-31 CHRUSDT.xlsx', '2021-08-31 ETHUSDT_210924.xlsx', '2021-08-31 BAKEUSDT.xlsx', '2021-08-31 GRTUSDT.xlsx', '2021-08-31 FLMUSDT.xlsx', '2021-08-31 EOSUSDT.xlsx', '2021-08-31 OGNUSDT.xlsx', '2021-08-31 SCUSDT.xlsx', '2021-08-31 BALUSDT.xlsx', '2021-08-31 STMXUSDT.xlsx', '2021-08-31 BTTUSDT.xlsx', '2021-08-31 LUNAUSDT.xlsx', '2021-08-31 DENTUSDT.xlsx', '2021-08-31 KNCUSDT.xlsx', '2021-08-31 SRMUSDT.xlsx', '2021-08-31 ENJUSDT.xlsx', '2021-08-31 ZENUSDT.xlsx', '2021-08-31 ATOMUSDT.xlsx', '2021-08-31 NEARUSDT.xlsx', '2021-08-31 BCHUSDT.xlsx', '2021-08-31 IOSTUSDT.xlsx', '2021-08-31 HBARUSDT.xlsx', '2021-08-31 ZECUSDT.xlsx', '2021-08-31 1000SHIBUSDT.xlsx', '2021-08-31 TLMUSDT.xlsx', '2021-08-31 BZRXUSDT.xlsx', '2021-08-31 ETHBUSD.xlsx', '2021-08-31 AAVEUSDT.xlsx', '2021-08-31 GTCUSDT.xlsx', '2021-08-31 ALGOUSDT.xlsx', '2021-08-31 ICPUSDT.xlsx', '2021-08-31 BTCUSDT_210924.xlsx', '2021-08-31 LRCUSDT.xlsx', '2021-08-31 AVAXUSDT.xlsx', '2021-08-31 MATICUSDT.xlsx', '2021-08-31 1INCHUSDT.xlsx', '2021-08-31 MKRUSDT.xlsx', '2021-08-31 THETAUSDT.xlsx', '2021-08-31 UNIUSDT.xlsx', '2021-08-31 LINAUSDT.xlsx', '2021-08-31 RVNUSDT.xlsx', '2021-08-31 FILUSDT.xlsx', '2021-08-31 NKNUSDT.xlsx', '2021-08-31 DEFIUSDT.xlsx', '2021-08-31 COMPUSDT.xlsx', '2021-08-31 BTCDOMUSDT.xlsx', '2021-08-31 SOLUSDT.xlsx', '2021-08-31 BTCUSDT.xlsx', '2021-08-31 OMGUSDT.xlsx', '2021-08-31 ICXUSDT.xlsx', '2021-08-31 BLZUSDT.xlsx', '2021-08-31 FTMUSDT.xlsx', '2021-08-31 YFIIUSDT.xlsx', '2021-08-31 KEEPUSDT.xlsx', '2021-08-31 BANDUSDT.xlsx', '2021-08-31 XRPUSDT.xlsx', '2021-08-31 SXPUSDT.xlsx', '2021-08-31 CRVUSDT.xlsx', '2021-08-31 BELUSDT.xlsx', '2021-08-31 DOTUSDT.xlsx', '2021-08-31 XEMUSDT.xlsx', '2021-08-31 ONEUSDT.xlsx', '2021-08-31 ZILUSDT.xlsx', '2021-08-31 AXSUSDT.xlsx', '2021-08-31 OCEANUSDT.xlsx', '2021-08-31 CHZUSDT.xlsx', '2021-08-31 ANKRUSDT.xlsx', '2021-08-31 SUSHIUSDT_res_dfs.pkl', '2021-07-01 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-02-07 BTC.xlsx', '2021-02-07 ETH.xlsx', '2021-02-11 BCHUSDT.xlsx', '2021-02-11 XRPUSDT.xlsx', '2021-02-11 EOSUSDT.xlsx', '2021-02-11 LTCUSDT.xlsx', '2021-02-11 ETCUSDT.xlsx', '2021-02-11 LINKUSDT.xlsx', '2021-02-11 XLMUSDT.xlsx', '2021-02-11 ADAUSDT.xlsx', '2021-02-11 XMRUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr']\n","['2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx']\n"]}],"source":["interval = '1m'\n","date_path = './candlestick_concated/%s/quant_v2/' % interval\n","file_list = os.listdir(date_path)\n","print((file_list))\n","\n","interval2 = '3m'\n","date_path2 = './candlestick_concated/%s/quant_v2/' % interval2\n","file_list2 = os.listdir(date_path2)\n","print((file_list2))\n","\n","interval3 = '5m'\n","date_path3 = './candlestick_concated/%s/quant_v2/' % interval3\n","file_list3 = os.listdir(date_path3)\n","print((file_list3))\n","\n","interval4 = '15m'\n","date_path4 = './candlestick_concated/%s/quant_v2/' % interval4\n","file_list4 = os.listdir(date_path4)\n","print((file_list4))\n","\n","interval5 = '30m'\n","date_path5 = './candlestick_concated/%s/quant_v2/' % interval5\n","file_list5 = os.listdir(date_path5)\n","print((file_list5))\n","\n","interval6 = '1h'\n","date_path6 = './candlestick_concated/%s/quant_v2/' % interval6\n","file_list6 = os.listdir(date_path6)\n","print((file_list6))\n","\n","interval7 = '4h'\n","date_path7 = './candlestick_concated/%s/quant_v2/' % interval7\n","file_list7 = os.listdir(date_path7)\n","print((file_list7))\n","\n","interval8 = '1d'\n","date_path8 = './candlestick_concated/%s/quant_v2/' % interval8\n","file_list8 = os.listdir(date_path8)\n","print((file_list8))"]},{"cell_type":"markdown","metadata":{"id":"M8-EChy0VsDr"},"source":["### cudf"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1638754008241,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"b09qAb1sVtRP","outputId":"3a824202-064a-4544-b791-ffc777bb3f9c"},"outputs":[{"name":"stdout","output_type":"stream","text":["usage: conda [-h] [-V] command ...\n","conda: error: unrecognized arguments: -t=/content/notebooks\n"]}],"source":["# !conda install -c rapidsai-nightly -c nvidia -c numba -c conda-forge \\\n","#     cudf python=3.7 cudatoolkit=11.1 -t=$nb_path"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":413,"status":"ok","timestamp":1638754715310,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"Jnz6i7ZqRnb0","outputId":"207bc57b-a17a-4f67-fb26-24e46e2c6e26"},"outputs":[{"name":"stdout","output_type":"stream","text":["***********************************************************************\n","Woo! Your instance has the right kind of GPU, a Tesla P100-PCIE-16GB!\n","***********************************************************************\n","\n"]}],"source":["# !git clone https://github.com/rapidsai/rapidsai-csp-utils.git\n","!python rapidsai-csp-utils/colab/env-check.py"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4sKA_9Dbg4s2"},"outputs":[],"source":["# This will update the Colab environment and restart the kernel.  Don't run the next cell until you see the session crash.\n","!bash rapidsai-csp-utils/colab/update_gcc.sh\n","import os\n","os._exit(00)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"d1C4pNiBhYHX"},"outputs":[],"source":["# This will install CondaColab.  This will restart your kernel one last time.  Run this cell by itself and only run the next cell once you see the session crash.\n","import condacolab\n","condacolab.install()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":414,"status":"ok","timestamp":1638754863073,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"iGx3ACTvZqck","outputId":"e8379cc4-c325-4fe0-ac46-5fbbd7d38829"},"outputs":[{"name":"stdout","output_type":"stream","text":["✨🍰✨ Everything looks OK!\n"]}],"source":["# you can now run the rest of the cells as normal\n","import condacolab\n","condacolab.check()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oR8s7U8c7C28","outputId":"22be2731-fae1-45fc-f310-e48f60774bb2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Installing RAPIDS Stable 21.10\n","Starting the RAPIDS install on Colab.  This will take about 15 minutes.\n","Collecting package metadata (current_repodata.json): ...working... done\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with initial frozen solve. Retrying with flexible solve.\n","Solving environment: ...working... WARNING conda.core.solve:_add_specs(611): pinned spec cudatoolkit=11.1 conflicts with explicit specs.  Overriding pinned spec.\n","failed with repodata from current_repodata.json, will retry with next repodata source.\n","Collecting package metadata (repodata.json): ...working... done\n"]}],"source":["# Installing RAPIDS is now 'python rapidsai-csp-utils/colab/install_rapids.py <release> <packages>'\n","# The <release> options are 'stable' and 'nightly'.  Leaving it blank or adding any other words will default to stable.\n","# The <packages> option are default blank or 'core'.  By default, we install RAPIDSAI and BlazingSQL.  The 'core' option will install only RAPIDSAI and not include BlazingSQL, \n","!python rapidsai-csp-utils/colab/install_rapids.py stable\n","import os\n","os.environ['NUMBAPRO_NVVM'] = '/usr/local/cuda/nvvm/lib64/libnvvm.so'\n","os.environ['NUMBAPRO_LIBDEVICE'] = '/usr/local/cuda/nvvm/libdevice/'\n","os.environ['CONDA_PREFIX'] = '/usr/local'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kWsxi4ZpKtGt"},"outputs":[],"source":["import shutil\n","import sys\n","\n","colab_env = \"/usr/lib\"\n","\n","rapids_path = os.path.join(current_path, \"rapidsai-csp-utils/lib\")\n","rapids_libs = os.listdir(rapids_path)\n","print(rapids_libs)\n","# break\n","\n","for lib_ in rapids_libs:\n","  try:\n","    shutil.copy(os.path.join(rapids_path, lib_), os.path.join(colab_env, lib_))\n","    sys.path.append(os.path.join(colab_env, lib_))\n","    print(\"copied to\" + os.path.join(colab_env, lib_))\n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"Iy76iO7gztne"},"source":["### move legacy files"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hMRht32Czwry"},"outputs":[],"source":["# print()\n","cur_dir_list = os.listdir('.')\n","for f in cur_dir_list:\n","  if 'legacy' in f :\n","    # print(f)\n","    if os.path.isdir(current_path + f,):\n","      continue\n","\n","    shutil.move(current_path + f, current_path + 'legacy/' + f)\n","    print(\"moved to\" + current_path + 'legacy/' +  f)"]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["# IDE platform\n"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4431,"status":"ok","timestamp":1650671512057,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"7FPBG5Qqg2jB","outputId":"0edc0351-1ec1-4530-851b-59007a4f8c63"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-02-17 ETHUSDT.ftr']\n","2022-02-17 ETHUSDT.ftr loaded !\n","load res_df_ elapsed time : 4.3947978019714355\n"]}],"source":["save_path = './candlestick_concated/database_bn/'\n","\n","# dir_path = \"bb1d_backi2\"\n","# date = \"2022-02-17\"\n","# ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","# ------ 1T_database ------ #\n","# date = \"2022-04-08\"\n","# ftr_path = os.path.join(save_path, \"non_cum\", date)\n","\n","date = \"2022-02-17\"\n","ftr_path = os.path.join(save_path, \"cum\", date)\n","\n","# ------ load ftr list ------ #\n","ftr_list = [file_ for file_ in os.listdir(ftr_path) if \"ftr\" in file_ if date in file_ if not '1m' in file_]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)\n","\n","start_0 = time.time()\n","key = ftr_list[0]  # tempoaray use single key\n","res_df_ = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")\n","# print(res_df_.head())\n","print(key, \"loaded !\")\n","print(\"load res_df_ elapsed time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RQH_l4opEh_O"},"outputs":[],"source":["res_df_.dtypes"]},{"cell_type":"markdown","metadata":{"id":"x2yj2SwAXDLp"},"source":["### edit cols"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x9wkWw15XCAm"},"outputs":[],"source":["col_list = list(res_df_.columns)\n","# # [col_ for col_ in col_list if 'score' in col_]\n","\n","# ------ drop ------ #\n","# res_df_.drop([col_ for col_ in col_list if '_T20' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list if '_T40' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list if 'long_base' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list[5:]], inplace=True, axis=1)\n","\n","# ------ replace ------ #\n","for c_i, col_ in enumerate(col_list):\n","  if 'basis' in col_:\n","#   # if col_[-1] in ['m', 'h', 'd', 'H'] and '_' in col_:eTa_5T\n","#   # if col_[0] in ['h'] and '_' in col_:\n","#   if 'bir_' in col_:\n","\n","    col_list[c_i] = col_.replace('basis', 'base')\n","#     # col_list[c_i] = col_.replace('m', 'T').replace('h', 'H').replace('1T', 'T')\n","#     # col_list[c_i] = col_.replace('1d', 'D')\n","#     # col_list[c_i] = col_.replace('eTa_5T', 'ema_5T')\n","#     # col_list[c_i] = col_list[c_i][1:]\n","#     # print(col_list[c_i][0])\n","res_df_.columns = col_list\n","col_list[-2:] = ['resi_T', 'sup_T']"]},{"cell_type":"markdown","metadata":{"id":"14chOHeXh6JD"},"source":["### lab"]},{"cell_type":"markdown","metadata":{"id":"O87s8_EUakqS"},"source":["#### instant indi."]},{"cell_type":"code","source":["def body_rel_ratio(res_df, c_itv):\n","\n","  itv_num = to_itvnum(c_itv)\n","  \n","  b1_close_ = res_df['close_{}'.format(c_itv)].shift(itv_num).to_numpy()\n","  b1_open_ = res_df['open_{}'.format(c_itv)].shift(itv_num).to_numpy()\n","  b1_body_range = abs(b1_close_ - b1_open_)\n","\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  body_range = abs(close_ - open_)\n","  \n","  res_df['body_rel_ratio_{}'.format(c_itv)] = body_range / b1_body_range\n","\n","  return res_df\n","\n","def dc_over_body_ratio(res_df, c_itv, dc_itv, dc_period):\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  body_range = abs(close_ - open_)\n","  \n","  dc_upper_ = res_df['dc_upper_{}{}'.format(dc_itv, dc_period)].to_numpy()\n","  dc_lower_ = res_df['dc_lower_{}{}'.format(dc_itv, dc_period)].to_numpy() \n","\n","  res_df['dc_upper_{}{}_br'.format(dc_itv, dc_period)] = (close_ - dc_upper_) / body_range\n","  res_df['dc_lower_{}{}_br'.format(dc_itv, dc_period)] = (dc_lower_ - close_) / body_range\n","\n","  return res_df"],"metadata":{"id":"u3yFd8Dcok5m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def candle_pumping_ratio_v2(res_df, c_itv, dc_itv, period):\n","\n","  res_df = dc_line_v3(res_df, dc_itv, dc_period=period)\n","\n","  dc_upper_ = res_df['dc_upper_{}{}'.format(dc_itv, period)].to_numpy()\n","  dc_lower_ = res_df['dc_lower_{}{}'.format(dc_itv, period)].to_numpy()\n","  dc_range = dc_upper_ - dc_lower_\n"," \n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  body = close_ - open_  # 부호로 양 / 음봉 구분 (양봉 > 0)\n","  \n","  res_df['cppr_{}'.format(c_itv)] = body / dc_range\n","\n","  return res_df\n","\n","\n","# Todo, future_data\n","def candle_pumping_ratio(res_df, c_itv, bb_itv, period):\n","\n","  itv_num = to_itvnum(c_itv)\n","\n","  # 여기에도 v2 처럼 bb_indi. 추가 (자동화)\n","\n","  b1_bb_upper_ = res_df['bb_upper_{}{}'.format(bb_itv, period)].shift(itv_num).to_numpy()\n","  b1_bb_lower_ = res_df['bb_lower_{}{}'.format(bb_itv, period)].shift(itv_num).to_numpy()\n","  bb_range = b1_bb_upper_ - b1_bb_lower_\n","\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  body = close_ - open_  # 부호로 양 / 음봉 구분 (양봉 > 0)\n","  \n","  res_df['cppr_{}'.format(c_itv)] = body / bb_range\n","\n","  return res_df\n","\n","\n","def pumping_ratio(res_df, config, itv, period1, period2):\n","\n","  bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","  bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","  bb_range = bb_upper_5T - bb_lower_5T\n","\n","  selection_id = config.selection_id\n","  \n","  res_df['short_ppr_{}'.format(selection_id)] = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy() / get_line(res_df['short_wave_high_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), bb_range)\n","  res_df['long_ppr_{}'.format(selection_id)] = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy() / get_line(res_df['long_wave_low_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), bb_range)\n"],"metadata":{"id":"JWj02LLGbnji"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OpkclLSzazZ-"},"outputs":[],"source":["def wave_body_ratio(res_df_, itv, period):\n","  dc_upper_ = res_df_['dc_upper_{}{}'.format(itv, period)].to_numpy()\n","  dc_lower_ = res_df_['dc_lower_{}{}'.format(itv, period)].to_numpy()\n","  close_ = res_df_['close_{}'.format(itv)].to_numpy()\n","  open_ = res_df_['open_{}'.format(itv)].to_numpy()\n","\n","  dc_range = dc_upper_ - dc_lower_\n","  body_range = abs(close_ - open_)\n","\n","  res_df_['wave_body_ratio'] = body_range / dc_range\n","  res_df_['dc_upper_body_ratio'] = (np.maximum(close_, open_) - dc_upper_) / body_range\n","  res_df_['dc_lower_body_ratio'] = (dc_lower_) - np.minimum(close_, open_) / body_range\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0-zzitQRbnz8"},"outputs":[],"source":["# res_df_['wave_body_ratio'].tail(200)\n","\n","itv = 'H'\n","period = 5\n","wave_body_ratio(res_df_, itv, period)"]},{"cell_type":"markdown","metadata":{"id":"LyGnAMvLYvOZ"},"source":["#### wave_range"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PV-dlAVZfehP"},"outputs":[],"source":["\n","def get_line(touch_idx, rtc_):\n","  touch_idx_copy = touch_idx.copy()\n","  touch_line = np.full_like(rtc_, np.nan)\n","\n","  nan_idx = np.isnan(touch_idx_copy)\n","  touch_idx_copy[nan_idx] = 0   # for indexing array\n","  touch_line = rtc_[touch_idx_copy.astype(int)]\n","  touch_line[nan_idx] = np.nan   # for true comp.\n","\n","  return touch_line\n","\n","def wave_range_v8(df, period1, period2, ltf_df=None, wave_min_bars=20, wave_max_bars=40):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(df.index)\n","\n","  donchian_channel_v2(df, period1) \n","  donchian_channel_v2(df, period2) \n","  dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","  dc_lower2_, dc_upper2_ = df['dc_lower_{}{}'.format(itv, period2)].to_numpy(), df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","  \n","  short_base = (dc_lower_ + dc_upper2_) / 2\n","  long_base = (dc_upper_ + dc_lower2_) / 2\n","  df['short_base_{}{}{}'.format(itv, period1, period2)] = short_base\n","  df['long_base_{}{}{}'.format(itv, period1, period2)] = long_base\n","\n","  len_df = len(df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","  short_upper_touch_idx = pd.Series(np.where(high >= dc_upper2_, np.arange(len_df), np.nan)).rolling(wave_max_bars, min_periods=1).max().to_numpy()  # min -> max\n","  short_lower_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(wave_max_bars, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  short_open_res *= (high >= short_base) & (short_base >= open) & (short_upper_touch_idx < short_lower_touch_idx)\n","  \n","  short_valid_idx = (short_lower_touch_idx - short_upper_touch_idx) >= wave_min_bars\n","  df['short_wave_high_idx_{}{}{}'.format(itv, period1, period2)] = short_upper_touch_idx\n","  df['short_wave_high_{}{}{}'.format(itv, period1, period2)] = get_line(short_upper_touch_idx, dc_upper2_)\n","  df['short_wave_low_{}{}{}'.format(itv, period1, period2)] = get_line(short_lower_touch_idx, dc_lower_)\n","  df['short_wave_point_{}{}{}'.format(itv, period1, period2)] = short_open_res * short_valid_idx  \n","       \n","  long_lower_touch_idx = pd.Series(np.where(low <= dc_lower2_, np.arange(len_df), np.nan)).rolling(wave_max_bars, min_periods=1).max().to_numpy()     \n","  long_upper_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(wave_max_bars, min_periods=1).max().to_numpy()\n","  long_open_res *= (open >= long_base) & (long_base >= low) & (long_lower_touch_idx < long_upper_touch_idx)\n","\n","  long_valid_idx = (long_upper_touch_idx - long_lower_touch_idx) >= wave_min_bars  \n","  df['long_wave_low_idx_{}{}{}'.format(itv, period1, period2)] = long_lower_touch_idx\n","  df['long_wave_low_{}{}{}'.format(itv, period1, period2)] = get_line(long_lower_touch_idx, dc_lower2_)\n","  df['long_wave_high_{}{}{}'.format(itv, period1, period2)] = get_line(long_upper_touch_idx, dc_upper_)\n","  df['long_wave_point_{}{}{}'.format(itv, period1, period2)] = long_open_res * long_valid_idx  # multi selection_id 로, formatting 하는 거임\n","\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-14, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, join_cols), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range()'s join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  return ltf_df\n","  \n","def wave_range_v6(df, period1, period2, ltf_df=None, touch_period=50):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(df.index)\n","\n","  donchian_channel_v2(df, period1) \n","  donchian_channel_v2(df, period2) \n","  dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","  dc_lower2_, dc_upper2_ = df['dc_lower_{}{}'.format(itv, period2)].to_numpy(), df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","  \n","  short_base = (dc_lower_ + dc_upper2_) / 2\n","  long_base = (dc_upper_ + dc_lower2_) / 2\n","  df['short_base_{}{}{}'.format(itv, period1, period2)] = short_base\n","  df['long_base_{}{}{}'.format(itv, period1, period2)] = long_base\n","\n","  len_df = len(df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","  short_a_touch_idx = pd.Series(np.where(high >= dc_upper2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","  short_b_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  short_open_res *= (high >= short_base) & (short_base >= open) & (short_a_touch_idx < short_b_touch_idx)\n","  df['short_a_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_a_touch_idx\n","  df['short_b_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_b_touch_idx\n","  df['short_a_line_{}{}{}'.format(itv, period1, period2)] = get_line(short_a_touch_idx, dc_upper2_)\n","  df['short_b_line_{}{}{}'.format(itv, period1, period2)] = get_line(short_b_touch_idx, dc_lower_)\n","  df['short_wave_point_{}{}{}'.format(itv, period1, period2)] = short_open_res\n","  \n","  long_a_touch_idx = pd.Series(np.where(low <= dc_lower2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()       \n","  long_b_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()    \n","  long_open_res *= (open >= long_base) & (long_base >= low) & (long_a_touch_idx < long_b_touch_idx)\n","  df['long_a_touch_idx_{}{}{}'.format(itv, period1, period2)] = long_a_touch_idx\n","  df['long_b_touch_idx_{}{}{}'.format(itv, period1, period2)] = long_b_touch_idx\n","  df['long_a_line_{}{}{}'.format(itv, period1, period2)] = get_line(long_a_touch_idx, dc_lower2_)\n","  df['long_b_line_{}{}{}'.format(itv, period1, period2)] = get_line(long_b_touch_idx, dc_upper_)\n","  df['long_wave_point_{}{}{}'.format(itv, period1, period2)] = long_open_res\n","\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-16, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, join_cols), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range_v5's join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  return ltf_df\n","\n","def wave_range_v5(df, period1, period2, ltf_df=None, touch_period=50):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(df.index)\n","\n","  donchian_channel_v2(df, period1) \n","  donchian_channel_v2(df, period2) \n","  dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","  dc_lower2_, dc_upper2_ = df['dc_lower_{}{}'.format(itv, period2)].to_numpy(), df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","  \n","  short_base = (dc_lower_ + dc_upper2_) / 2\n","  long_base = (dc_upper_ + dc_lower2_) / 2\n","  df['short_base_{}{}{}'.format(itv, period1, period2)] = short_base\n","  df['long_base_{}{}{}'.format(itv, period1, period2)] = long_base\n","\n","  len_df = len(df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","  short_a_touch_idx = pd.Series(np.where(high >= dc_upper2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","  short_b_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  short_open_res *= (high >= short_base) & (short_base >= open) & (short_a_touch_idx < short_b_touch_idx)\n","  df['short_a_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_a_touch_idx\n","  df['short_b_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_b_touch_idx\n","  df['short_wave_point_{}{}{}'.format(itv, period1, period2)] = short_open_res\n","  \n","  long_a_touch_idx = pd.Series(np.where(low <= dc_lower2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()       \n","  long_b_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()    \n","  long_open_res *= (open >= long_base) & (long_base >= low) & (long_a_touch_idx < long_b_touch_idx)\n","  df['long_a_touch_idx_{}{}{}'.format(itv, period1, period2)] = long_a_touch_idx\n","  df['long_b_touch_idx_{}{}{}'.format(itv, period1, period2)] = long_b_touch_idx\n","  df['long_wave_point_{}{}{}'.format(itv, period1, period2)] = long_open_res\n","\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-12, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, join_cols), how='inner')\n","      # ltf_df = ltf_df.merge(to_lower_tf_v2(ltf_df, df, [-7, -6, -5, -4, -3, -2, -1]), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range_v5's join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  return ltf_df\n","\n","def wave_range_v4(df, period1, ltf_df=None, touch_lbperiod=50):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(df.index)\n","\n","  donchian_channel_v2(df, period1) \n","  dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","\n","  df['wave_base_{}'.format(itv)] = (dc_lower_ + dc_upper_) / 2  # dc_base touch 사용하면 point 를 좀 더 일찍 잡을 수 있음  \n","  wave_base_ = df['wave_base_{}'.format(itv)].to_numpy()\n","  # short_base_ = df['short_base__{}'.format(itv)].to_numpy()\n","  # long_base_ = df['long_base__{}'.format(itv)].to_numpy()\n","\n","  len_df = len(df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","  df['upper_touch_idx_{}{}'.format(itv, period1)] = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()  # min -> max\n","  df['lower_touch_idx_{}{}'.format(itv, period1)] = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  \n","  upper_touch_idx_ = df['upper_touch_idx_{}{}'.format(itv, period1)].to_numpy()\n","  lower_touch_idx_ = df['lower_touch_idx_{}{}'.format(itv, period1)].to_numpy()\n","\n","  # df['wave_upper_{}'.format(itv)] = pd.Series(get_line(dc_upper_touch_idx, dc_upper_)).ffill().to_numpy() \n","  # df['wave_lower_{}'.format(itv)] = pd.Series(get_line(dc_lower_touch_idx, dc_lower_)).ffill().to_numpy() \n","\n","  short_open_res *= (high >= wave_base_) & (wave_base_ >= open) & (upper_touch_idx_ < lower_touch_idx_)\n","  df['short_wave_point_{}{}'.format(itv, period1)] = short_open_res\n","\n","  long_open_res *= (open >= wave_base_) & (wave_base_ >= low) & (lower_touch_idx_ < upper_touch_idx_)\n","  df['long_wave_point_{}{}'.format(itv, period1)] = long_open_res\n","\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","\n","    join_cols = np.arange(-7, 0 ,1).astype(int)\n","    ltf_df.drop(df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, join_cols), how='inner')\n","      # ltf_df = ltf_df.merge(to_lower_tf_v2(ltf_df, df, [-7, -6, -5, -4, -3, -2, -1]), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range_v4's join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  return ltf_df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YqBXjVPzdccC"},"outputs":[],"source":["i = random.randint(0, len(res_df))\n","\n","plot_size = 200\n","t_df = res_df.iloc[i - plot_size:i]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"executionInfo":{"elapsed":1657,"status":"ok","timestamp":1649124296856,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"-Dr_tTk9csFm","outputId":"4c495e36-8ff0-4067-eed0-962c24ada307"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1080x648 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 9))\n","nrows, ncols = 1, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        # height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","# _ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","\n","itv, period1, period2 = 'T', 20, 20\n","t_df = wave_range_v5(t_df, 20, 20, ltf_df=None, touch_period=50)\n","\n","dc_upper_ = t_df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","dc_lower_ = t_df['dc_lower_{}{}'.format(itv, period1)].to_numpy()\n","dc_upper2_ = t_df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","dc_lower2_ = t_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","plt.step(np.arange(len(dc_upper_)), dc_upper_, alpha=1.0, color='yellow', linewidth=2)\n","plt.step(np.arange(len(dc_lower_)), dc_lower_, alpha=1.0, color='yellow', linewidth=2)\n","# plt.step(np.arange(len(t_df.dc_base_T40.to_numpy())), t_df.dc_base_T40.to_numpy(), alpha=1.0, color='white', linewidth=1)\n","\n","\n","short_open_plot_idx = t_df['short_wave_point_{}{}{}'.format(itv, period1, period2)].to_numpy().astype(bool)\n","long_open_plot_idx = t_df['long_wave_point_{}{}{}'.format(itv, period1, period2)].to_numpy().astype(bool)\n","short_base_ = t_df['short_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","long_base_ = t_df['long_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","plt.step(np.arange(len(short_base_))[short_open_plot_idx], short_base_[short_open_plot_idx], \"o\", alpha=1.0, color='#ff00ff', markersize=11)\n","plt.step(np.arange(len(long_base_))[long_open_plot_idx], long_base_[long_open_plot_idx], \"o\", alpha=1.0, color='#ff00ff', markersize=11)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7_FX0rIP_vyE"},"outputs":[],"source":["def sd_dc(df, period1, period2, ltf_df=None):\n","    assert period1 <= period2, \"assert period1 <= period2\"\n","    donchian_channel_v2(df, period1)\n","    donchian_channel_v2(df, period2)\n","    itv = pd.infer_freq(df.index)\n","    if itv != 'T':\n","      assert ltf_df is not None, \"assert ltf_df is not None\"\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, [-4, -3, -2, -1]), how='inner')\n","    else:\n","      ltf_df = df\n","\n","    ltf_df['short_base_{}'.format(itv)] = (ltf_df['dc_lower_{}{}'.format(itv, period1)].to_numpy() + ltf_df['dc_upper_{}{}'.format(itv, period2)].to_numpy()) / 2\n","    ltf_df['long_base_{}'.format(itv)] = (ltf_df['dc_upper_{}{}'.format(itv, period1)].to_numpy() + ltf_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()) / 2\n","\n","    return ltf_df\n","\n","\n","def donchian_channel_v2(df, period):\n","  itv = pd.infer_freq(df.index)\n","  upper_name = 'dc_upper_{}{}'.format(itv, period)\n","  lower_name = 'dc_lower_{}{}'.format(itv, period)\n","\n","  df.drop([upper_name, lower_name], inplace=True, axis=1, errors='ignore')\n","\n","  df[upper_name] = df['high'].rolling(period).max()\n","  df[lower_name] = df['low'].rolling(period).min()\n","\n","  return\n","\n","def wave_range(df, period1, period2, ltf_df=None, touch_lbperiod=50):\n","    assert period1 <= period2, \"assert period1 <= period2\"\n","    donchian_channel_v2(df, period1)\n","    donchian_channel_v2(df, period2)\n","    itv = pd.infer_freq(df.index)\n","    if itv != 'T':\n","      assert ltf_df is not None, \"assert ltf_df is not None\"\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, [-4, -3, -2, -1]), how='inner')\n","    else:\n","      ltf_df = df\n","\n","    short_tp_1_, short_tp_0_ = ltf_df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), ltf_df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","    long_tp_1_, long_tp_0_ = ltf_df['dc_upper_{}{}'.format(itv, period1)].to_numpy(), ltf_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","\n","    ltf_df['short_base_{}'.format(itv)] = (short_tp_1_ + short_tp_0_) / 2  # dc_base touch 사용하면 point 를 좀 더 일찍 잡을 수 있음\n","    ltf_df['long_base_{}'.format(itv)] = (long_tp_1_ + long_tp_0_) / 2\n","    \n","    short_base = ltf_df['short_base_{}'.format(itv)].to_numpy()\n","    long_base = ltf_df['long_base_{}'.format(itv)].to_numpy()\n","\n","    len_df = len(ltf_df)   \n","    short_open_res = np.ones(len_df)\n","    long_open_res = np.ones(len_df)\n","    \n","    data_cols = ['open', 'high', 'low']\n","    open, high, low = [ltf_df[col_].to_numpy() for col_ in data_cols]\n","\n","    short_a_touch_idx = pd.Series(np.where(high >= short_tp_0_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()  # min -> max\n","    short_b_touch_idx = pd.Series(np.where(low <= short_tp_1_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","    short_open_res *= (high >= short_base) & (short_base >= open) & (short_a_touch_idx < short_b_touch_idx)\n","\n","    ltf_df['short_wave_1_{}'.format(itv)] = pd.Series(get_line(short_b_touch_idx, short_tp_1_)).ffill().to_numpy()   # ffill() 다음 to_numpy() 안하면 None 값\n","    ltf_df['short_wave_0_{}'.format(itv)] = pd.Series(get_line(short_a_touch_idx, short_tp_0_)).ffill().to_numpy()\n","    ltf_df['short_wave_point_{}'.format(itv)] = short_open_res.astype(bool)\n","\n","    long_a_touch_idx = pd.Series(np.where(low <= long_tp_0_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()       \n","    long_b_touch_idx = pd.Series(np.where(high >= long_tp_1_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()    \n","    long_open_res *= (open >= long_base) & (long_base >= low) & (long_a_touch_idx < long_b_touch_idx)\n","\n","    ltf_df['long_wave_1_{}'.format(itv)] = pd.Series(get_line(long_b_touch_idx, long_tp_1_)).ffill().to_numpy()\n","    ltf_df['long_wave_0_{}'.format(itv)] = pd.Series(get_line(long_a_touch_idx, long_tp_0_)).ffill().to_numpy()\n","    ltf_df['long_wave_point_{}'.format(itv)] = long_open_res.astype(bool)\n","\n","    return ltf_df\n","\n","def wave_range_v2(df, period1, ltf_df=None, touch_lbperiod=50):  # v2 for period1 only\n","\n","  donchian_channel_v2(df, period1) \n","\n","  itv = pd.infer_freq(df.index)\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, [-2, -1]), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range_v2's join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  dc_lower_, dc_upper_ = ltf_df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), ltf_df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","\n","  # print(ltf_df.tail().iloc[:, -4:])\n","\n","  ltf_df['wave_base_{}'.format(itv)] = (dc_lower_ + dc_upper_) / 2  # dc_base touch 사용하면 point 를 좀 더 일찍 잡을 수 있음\n","  \n","  wave_base_ = ltf_df['wave_base_{}'.format(itv)].to_numpy()\n","  # short_base_ = ltf_df['short_base__{}'.format(itv)].to_numpy()\n","  # long_base_ = ltf_df['long_base__{}'.format(itv)].to_numpy()\n","\n","  len_df = len(ltf_df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [ltf_df[col_].to_numpy() for col_ in data_cols]\n","\n","  dc_upper_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()  # min -> max\n","  dc_lower_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  \n","  ltf_df['wave_upper_{}'.format(itv)] = pd.Series(get_line(dc_upper_touch_idx, dc_upper_)).ffill().to_numpy() \n","  ltf_df['wave_lower_{}'.format(itv)] = pd.Series(get_line(dc_lower_touch_idx, dc_lower_)).ffill().to_numpy() \n","\n","  short_open_res *= (high >= wave_base_) & (wave_base_ >= open) & (dc_upper_touch_idx < dc_lower_touch_idx)\n","  ltf_df['short_wave_point_{}'.format(itv)] = short_open_res.astype(bool)\n","\n","  long_open_res *= (open >= wave_base_) & (wave_base_ >= low) & (dc_lower_touch_idx < dc_upper_touch_idx)\n","  ltf_df['long_wave_point_{}'.format(itv)] = long_open_res.astype(bool)\n","\n","  return ltf_df\n","\n","def wave_range_v3(df, period1, ltf_df=None, touch_lbperiod=50):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(df.index)\n","\n","  donchian_channel_v2(df, period1) \n","  dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","\n","  df['wave_base_{}'.format(itv)] = (dc_lower_ + dc_upper_) / 2  # dc_base touch 사용하면 point 를 좀 더 일찍 잡을 수 있음  \n","  wave_base_ = df['wave_base_{}'.format(itv)].to_numpy()\n","  # short_base_ = df['short_base__{}'.format(itv)].to_numpy()\n","  # long_base_ = df['long_base__{}'.format(itv)].to_numpy()\n","\n","  len_df = len(df)   \n","  short_open_res = np.ones(len_df)\n","  long_open_res = np.ones(len_df)\n","  \n","  data_cols = ['open', 'high', 'low']\n","  open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","  dc_upper_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()  # min -> max\n","  dc_lower_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_lbperiod, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","  \n","  # df['wave_upper_{}'.format(itv)] = pd.Series(get_line(dc_upper_touch_idx, dc_upper_)).ffill().to_numpy() \n","  # df['wave_lower_{}'.format(itv)] = pd.Series(get_line(dc_lower_touch_idx, dc_lower_)).ffill().to_numpy() \n","\n","  short_open_res *= (high >= wave_base_) & (wave_base_ >= open) & (dc_upper_touch_idx < dc_lower_touch_idx)\n","  df['short_wave_point_{}'.format(itv)] = short_open_res\n","\n","  long_open_res *= (open >= wave_base_) & (wave_base_ >= low) & (dc_lower_touch_idx < dc_upper_touch_idx)\n","  df['long_wave_point_{}'.format(itv)] = long_open_res\n","\n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","\n","    join_cols = np.arange(-7, 0 ,1).astype(int)\n","    ltf_df.drop(df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, df, join_cols), how='inner')\n","      # ltf_df = ltf_df.merge(to_lower_tf_v2(ltf_df, df, [-7, -6, -5, -4, -3, -2, -1]), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range_v3's join() :\", e)\n","  else:\n","    ltf_df = df    \n","\n","  return ltf_df\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-AmhhMxC-ltr"},"outputs":[],"source":["res = wave_range_v3(to_htf(res_df, '5T', '1h'), 12, ltf_df=res_df, touch_lbperiod=50)\n","# res = wave_range_v3(res_df, 12, ltf_df=None, touch_lbperiod=50)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gGDf6iBxFP_s"},"outputs":[],"source":["print(res.tail(100).iloc[:, -7:])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZoS_76wwAXhj"},"outputs":[],"source":["res.dtypes\n","# type(np.arange(-7,0,1).astype(int)[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z7bHV8CvC7eF"},"outputs":[],"source":["def to_lower_tf_v2(ltf_df, htf_df, column, backing_i=1, show_info=False):\n","    #       Todo        #\n","    #        1. 현재 downsampled df 만 허용, direct_df 사용시 issue 발생 가능할 것\n","    assert type(column[0]) in [int, np.int64], \"column value should be integer\"\n","    # if not replace_last_idx:\n","    #     assert datetime.timestamp(htf_df.index[-1]) >= datetime.timestamp(\n","    #         ltf_df.index[-1]), \"htf_lastidx should >= ltf_lastidx\"  # data sync confirmation\n","    #   htf idx ts 가 ltf 보다 작을 경우, intersec_idx 를 구할 수 없음\n","\n","    #   downsampled htf_df 만 허용 - 통일성\n","    #   non_resampled df 사용시 \"cannot reindex a non-unique index with a method or limit\" 라는 error_msg 확인\n","\n","    cols = htf_df.columns[column]  # to_lower_tf_v1 의 int col 반영\n","\n","    ltf_itv = pd.infer_freq(ltf_df.index)\n","    assert ltf_itv == 'T', \"currently only -> 'T' allowed..\"\n","\n","    if show_info:\n","        print(\"backing_i :\", backing_i)\n","\n","    #        1. htf last_ts_idx 의 second 가 :00 format (all rows same format)이 아닌 경우, bfill() 시 NaN 발생\n","    #           --> 상관 없음, 다른 윈인임\n","    #        2. single positional indexer is out-of-bounds => 대게 len(data) 부족 문제임 (row 증분)\n","    # iloc 뒤에 붙여야함, 아니면 timeidx 정상 출력 안됨\n","\n","    renamed_last_row = htf_df.rename(index={htf_df.index[-1]: ltf_df.index[-1]}, inplace=False).iloc[[-1]]\n","    if htf_df.index[-1] != renamed_last_row.index[-1]:  # cannot reindex a non-unique index with a method or limit 방지\n","        htf_df = htf_df.append(renamed_last_row)\n","\n","    # print(htf_df.tail())\n","\n","    # downsampled htf 의 freq_offset 기준으로 앞에서 뒤로 채우는게 맞음\n","    # --> hh:mm:00 format 을 사용해서 그럼 (59:999 면 bfill() 이였을 것)\n","    resampled_df = htf_df[cols].shift(backing_i).resample(ltf_itv).ffill()\n","    # print(resampled_df.tail())\n","    # print()\n","\n","    #        2. htf 가 downsampled 된 df 를 default 로 사용하기에, slicing 불필요해짐\n","    #        3. Shape of passed values is (799, 3), indices imply (3000, 3) -> len(ltf_df) > len(resampled_df) 란 의미\n","    #        4. solution => reindexing for inner join   #\n","    #         a. len(resampled_df) > len(ltf_df) 경우 slicing 진행\n","    #           -> ltf_index 를 다가져와도 resampled_indx 를 채울 수 없음 => error\n","    #           i. resampled length 를 ltf length 로 줄임\n","    #               1. 이미 htf_indi. 는 계산된 상태이고, \n","    #                   a. trader - 마지막 index 만 사용, 전혀 무리없음\n","    #                   b. idep - resampled_df.head(itv) 만큼만 소실된 것 -> 큰 무리없음\n","    #         b. len(resampled_df) < len(ltf_df)-> 상관없음 (ltf_index 에서 resampled_df length 만큼만 때가면 되니까)\n","    if len(resampled_df) > len(ltf_df):\n","        resampled_df = resampled_df.iloc[-len(ltf_df):]\n","    # print(\"len(ltf_df) :\", len(ltf_df))\n","    # print(\"len(resampled_df) :\", len(resampled_df))\n","    resampled_df.index = ltf_df.index[-len(resampled_df):]\n","    # assert len(ltf_df) <= len(resampled_df), \"for join method, assert len(ltf_df) <= len(resampled_df)\"\n","\n","    #       check last row's validity       #\n","    assert np.sum(\n","        pd.isnull(resampled_df.iloc[-1].values)) == 0, \"np.nan value occured, more {} rows might be reguired\".format(\n","        cols)\n","\n","    # if datetime.timestamp(htf_df.index[-1]) < datetime.timestamp(ltf_df.index[-1]):\n","    #     # resampled_df.rename(index={resampled_df.index[-1]: ltf_df.index[-1]}, inplace=True)\n","    #     print(resampled_df.tail())\n","    #     print(\"-----------\")\n","\n","    #        1. 필요한 len 계산해서 pre_proc. 진행 --> open_idx 를 동일하게 맞춰놓았고, shift 적용 상태이기 때문에 불필요함\n","\n","    #        1. ltf_df 의 마지막 timeidx 와 sync. 맞춰주어야함\n","    #           a. itv '1T' 가 아닌경우, 교집합 timeidx 가 존재하지 않을 수 있음\n","    # ltf_lastidx = ltf_df.tail(1).resample('1T').asfreq().index\n","    # intersec_idx_arr = np.argwhere(resampled_df.index == ltf_lastidx.item())\n","    # intersec_idx = intersec_idx_arr.item()\n","    # print(\"intersec_idx :\", intersec_idx)\n","    # print(\"len(resampled_df) :\", len(resampled_df))\n","    #\n","    # assert len(intersec_idx_arr) >= 1, \"len(intersec_idx_arr) is zero\"\n","    #\n","    # sliced_resampled_df = resampled_df[:intersec_idx + 1]\n","    # return sliced_resampled_df.values[-len(ltf_df):]\n","\n","    # return resampled_df.values[-len(ltf_df):]\n","    return resampled_df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WA094Xin1FGr"},"outputs":[],"source":["# 1. base_touch_idx 기준으로, 작정한다음, np.nan value 를 ffill() 진행\n","selection_id = config.selection_id\n","len_df = len(res_df)\n","short_open_res = np.ones(len_df)\n","long_open_res = np.ones(len_df)\n","\n","short_tp_1_col, short_tp_0_col, short_tp_gap_col = 'short_tp_1_{}'.format(selection_id), 'short_tp_0_{}'.format(selection_id), 'short_tp_gap_{}'.format(selection_id) \n","long_tp_1_col, long_tp_0_col, long_tp_gap_col = 'long_tp_1_{}'.format(selection_id), 'long_tp_0_{}'.format(selection_id), 'long_tp_gap_{}'.format(selection_id) \n","short_epout_1_col, short_epout_0_col, short_epout_gap_col = 'short_epout_1_{}'.format(selection_id), 'short_epout_0_{}'.format(selection_id), 'short_epout_gap_{}'.format(selection_id) \n","long_epout_1_col, long_epout_0_col, long_epout_gap_col = 'long_epout_1_{}'.format(selection_id), 'long_epout_0_{}'.format(selection_id), 'long_epout_gap_{}'.format(selection_id) \n","\n","data_cols = ['open', 'high', 'low']   # Todo - public_indi 이전에 해야할지도 모름 # 'close', 'haopen', 'hahigh', 'halow', 'haclose'\n","tp_cols = [short_tp_1_col, short_tp_0_col, short_tp_gap_col, long_tp_1_col, long_tp_0_col, long_tp_gap_col]   # Todo - public_indi 이전에 해야할지도 모름\n","epout_cols = [short_epout_1_col, short_epout_0_col, short_epout_gap_col, long_epout_1_col, long_epout_0_col, long_epout_gap_col]   # Todo - public_indi 이전에 해야할지도 모름\n","\n","short_tp_1_, short_tp_0_, short_tp_gap_, long_tp_1_, long_tp_0_, long_tp_gap_ = [res_df[col_].to_numpy() for col_ in tp_cols]\n","short_epout_1_, short_epout_0_, short_epout_gap_, long_epout_1_, long_epout_0_, long_epout_gap_ = [res_df[col_].to_numpy() for col_ in epout_cols]\n","open, high, low = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","short_base = (short_tp_1_ + short_tp_0_) / 2\n","long_base = (long_tp_1_ + long_tp_0_) / 2\n","\n","touch_period = 50\n","\n","short_a_touch_idx = pd.Series(np.where(high >= short_tp_0_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","short_b_touch_idx = pd.Series(np.where(low <= short_tp_1_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨\n","\n","short_en_p = (get_line(short_a_touch_idx, short_tp_0_) + get_line(short_b_touch_idx, short_tp_1_)) / 2\n","short_base_b = get_line(short_b_touch_idx, short_base)   # 현재, en_p == base_b, why ..?\n","short_tp_0_touch = get_line(short_a_touch_idx, short_tp_0_)\n","short_tp_1_touch = get_line(short_b_touch_idx, short_tp_1_)\n","short_tp_gap_b = get_line(short_b_touch_idx, short_tp_gap_)\n","short_open_res *= (high >= short_base) & (short_base >= open) & (short_a_touch_idx < short_b_touch_idx) #& (short_base_b + config.loc_set.point.base_gap * short_tp_gap_b >= short_base)\n","# short_open_res *= (high >= short_base_b) & (short_base_b >= low) & (short_a_touch_idx < short_b_touch_idx) & (short_base_b + config.loc_set.point.base_gap * short_tp_gap_b >= short_base)\n","\n","len_df = len(res_df)\n","long_a_touch_idx = pd.Series(np.where(low <= long_tp_0_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()       \n","long_b_touch_idx = pd.Series(np.where(high >= long_tp_1_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()\n","\n","long_en_p = (get_line(long_a_touch_idx, long_tp_0_) + get_line(long_b_touch_idx, long_tp_1_)) / 2\n","long_base_b = get_line(long_b_touch_idx, long_base)\n","long_tp_0_touch = get_line(long_a_touch_idx, long_tp_0_)\n","long_tp_1_touch = get_line(long_b_touch_idx, long_tp_1_)\n","long_tp_gap_b = get_line(long_b_touch_idx, long_tp_gap_)\n","long_open_res *= (open >= long_base) & (long_base >= low) & (long_a_touch_idx < long_b_touch_idx) # & (long_base_b - config.loc_set.point.base_gap * long_tp_gap_b <= long_base)\n","# long_open_res *= (open >= long_base) & (long_base >= low) # & (long_a_touch_idx < long_b_touch_idx) # & (long_base_b - config.loc_set.point.base_gap * long_tp_gap_b <= long_base)\n","# long_open_res *= (high >= long_base) & (long_base >= low) & (long_a_touch_idx < long_b_touch_idx) # & (long_base_b - config.loc_set.point.base_gap * long_tp_gap_b <= long_base)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"t4P2qIYAFiDm"},"outputs":[],"source":["i = random.randint(0, len(res_df))\n","\n","plot_size = 200\n","t_df = res_df.iloc[i - plot_size:i]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5SIWeZb24xdl"},"outputs":[],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 9))\n","nrows, ncols = 1, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        # height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","# _ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","\n","# t_df = wave_range(t_df, 20, 20, ltf_df=None, touch_lbperiod=50)\n","t_df = mcp(t_df, 20, ltf_df=None, touch_lbperiod=50)\n","\n","plt.step(np.arange(len(t_df.dc_upper_T40.to_numpy())), t_df.dc_upper_T40.to_numpy(), alpha=1.0, color='yellow', linewidth=2)\n","plt.step(np.arange(len(t_df.dc_lower_T40.to_numpy())), t_df.dc_lower_T40.to_numpy(), alpha=1.0, color='yellow', linewidth=2)\n","plt.step(np.arange(len(t_df.dc_base_T40.to_numpy())), t_df.dc_base_T40.to_numpy(), alpha=1.0, color='white', linewidth=1)\n","\n","short_open_plot_idx = t_df.short_mcp_point_T40.to_numpy().astype(bool)\n","long_open_plot_idx = t_df.long_mcp_point_T40.to_numpy().astype(bool)\n","long_open_plot_idx = t_df.long_mcp_point_T40.to_numpy().astype(bool)\n","plt.step(np.arange(len(t_df.dc_base_T40.to_numpy()))[short_open_plot_idx], t_df.dc_base_T40.to_numpy()[short_open_plot_idx], \"o\", alpha=1.0, color='#ff00ff', markersize=11)\n","plt.step(np.arange(len(t_df.dc_base_T40.to_numpy()))[long_open_plot_idx], t_df.dc_base_T40.to_numpy()[long_open_plot_idx], \"o\", alpha=1.0, color='#ff00ff', markersize=11)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":344,"status":"ok","timestamp":1648963836575,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"xPzel_I-5tdT","outputId":"107a4133-5161-4816-96e4-b57ebb22c1ea"},"outputs":[{"data":{"text/plain":["array([    nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan,     nan, 3800.06, 3800.06, 3800.06, 3800.06, 3800.06, 3800.06, 3800.06, 3800.06, 3793.03, 3785.83, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3783.77, 3788.66, 3791.08, 3780.65, 3780.52, 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3775.  , 3750.84, 3750.84, 3750.84, 3750.84, 3750.84, 3750.84, 3750.84, 3750.84, 3750.84, 3750.  , 3750.  , 3750.  , 3745.  , 3745.  , 3745.  , 3738.22, 3738.22, 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.2 , 3732.91, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3733.44, 3735.  , 3738.25, 3739.3 , 3741.91, 3741.91, 3741.91, 3741.91, 3741.91, 3741.91])"]},"execution_count":229,"metadata":{},"output_type":"execute_result"}],"source":["t_df.dc_lower_T40.to_numpy()\n","# t_df.dc_base_T40.to_numpy()[short_open_plot_idx]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"executionInfo":{"elapsed":977,"status":"ok","timestamp":1648599806041,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"7x80Xlje7j4Q","outputId":"90f467c9-ddb1-4f51-933f-b32de99a8c41"},"outputs":[{"data":{"image/png":"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\n","text/plain":["<Figure size 1080x648 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 9))\n","nrows, ncols = 1, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        # height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","_ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","\n","# t_df = wave_range(t_df, 20, 20, ltf_df=None, touch_lbperiod=50)\n","t_df = mcp(t_df, 40, ltf_df=None, touch_lbperiod=50)\n","\n","plt.step(np.arange(len(t_df.short_wave_1_T.to_numpy())), t_df.short_wave_1_T.to_numpy(), alpha=1.0, color='blue', linewidth=2)\n","plt.step(np.arange(len(t_df.short_wave_0_T.to_numpy())), t_df.short_wave_0_T.to_numpy(), alpha=1.0, color='blue', linewidth=2)\n","plt.step(np.arange(len(t_df.long_wave_1_T.to_numpy())), t_df.long_wave_1_T.to_numpy(), alpha=1.0, color='yellow', linewidth=2)\n","plt.step(np.arange(len(t_df.long_wave_0_T.to_numpy())), t_df.long_wave_0_T.to_numpy(), alpha=1.0, color='yellow', linewidth=2)\n","\n","short_open_plot_idx = t_df.short_wave_point_T\n","long_open_plot_idx = t_df.long_wave_point_T\n","plt.step(np.arange(len(short_base[i - plot_size:i]))[short_open_plot_idx], short_base[i - plot_size:i][short_open_plot_idx], \"o\", alpha=1.0, color='#ff00ff', markersize=11)\n","plt.step(np.arange(len(long_base[i - plot_size:i]))[long_open_plot_idx], long_base[i - plot_size:i][long_open_plot_idx], \"o\", alpha=1.0, color='#00ff00', markersize=11)\n","\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NXPgF90xMzas"},"outputs":[],"source":["t_df.short_wave_point_T == short_open_res.astype(bool)[i - plot_size:i]\n","t_df.long_wave_point_T[50:] == long_open_res.astype(bool)[i - plot_size:i][50:]\n","\n","# short_open_plot_idx = short_open_res.astype(bool)[i - plot_size:i]\n","# long_open_plot_idx = long_open_res.astype(bool)[i - plot_size:i]\n","\n","# short_open_plot_idx = t_df.short_wave_point_T\n","# # long_open_plot_idx = t_df.long_wave_point_T"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2OLM9XOI-HO5"},"outputs":[],"source":["# long_a_touch_idx[-plot_size:]\n","touch_idx_copy = long_a_touch_idx.copy()\n","# touch_line = long_tp_0_.copy()\n","touch_line = np.full_like(long_tp_0_, np.nan)\n","\n","nan_idx = np.isnan(touch_idx_copy)  # touch_period 동안 touch 이력이 없는 point\n","touch_idx_copy[nan_idx] = 0   # for indexing array\n","\n","int_touch_idx_copy = touch_idx_copy.astype(int)\n","# print(int_touch_idx_copy[-plot_size:])\n","print(touch_line[int_touch_idx_copy])\n","\n","touch_line = long_tp_0_[int_touch_idx_copy]\n","# touch_line[nan_idx] = np.nan   # for true comp.\n","# print(touch_idx_copy[-plot_size:])\n","print(touch_line[int_touch_idx_copy])\n","print(touch_line[-plot_size:])\n","\n","# long_tp_0_[long_a_touch_idx.astype(int)]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3cvi-eFR9Jsm"},"outputs":[],"source":["def get_line(touch_idx, rtc_):\n","  touch_idx_copy = touch_idx.copy()\n","  touch_line = np.full_like(rtc_, np.nan)\n","\n","  nan_idx = np.isnan(touch_idx_copy)\n","  touch_idx_copy[nan_idx] = 0   # for indexing array\n","  touch_line = rtc_[touch_idx_copy.astype(int)]\n","  touch_line[nan_idx] = np.nan   # for true comp.\n","\n","  return touch_line"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1PwSHOShZJNm"},"outputs":[],"source":["# high = t_df.high.to_numpy()\n","# low = t_df.low.to_numpy()\n","\n","# pivot_k = 0.001\n","# high_pivots = peak_valley_pivots(high, pivot_k, -pivot_k)\n","# low_pivots = peak_valley_pivots(low, pivot_k, -pivot_k)\n","# plot_pivots(high, high_pivots)\n","# plot_pivots(low, low_pivots)\n","\n","def plot_pivots(X, pivots):\n","    # plt.xlim(0, len(X))\n","    # plt.ylim(X.min()*0.99, X.max()*1.01)\n","    # plt.plot(np.arange(len(X)), X, 'k:', color='white')\n","    valid_idx = pivots != 0\n","    plt.plot(np.arange(len(X))[valid_idx], X[valid_idx], '-', color='white')\n","    # plt.scatter(np.arange(len(X))[pivots == 1], X[pivots == 1], color='g')\n","    # plt.scatter(np.arange(len(X))[pivots == -1], X[pivots == -1], color='r')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4lZwODlFYxSL"},"outputs":[],"source":["X = res_df_.close.iloc[-100:].to_numpy()\n","# X = res_df_.close.to_numpy()\n","pivots = peak_valley_pivots(X, 0.0005, -0.0005)\n","pivots = peak_valley_pivots(X, 0.5, -0.5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"W_xx9XWXZKJ5"},"outputs":[],"source":["plot_pivots(X, pivots)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"elapsed":935,"status":"ok","timestamp":1647999471974,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"ZAjpk42XarfY","outputId":"471a5d20-9df5-4b2a-9d04-53cdb0e35c2f"},"outputs":[{"data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f82b6491790>]"]},"execution_count":31,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["t_df = res_df_.iloc[-100:]\n","t_df['date'] = t_df.index\n","data_x = t_df['date'].values\n","data_y = t_df['close'].values\n","peak_indexes = signal.argrelextrema(data_y, np.greater)\n","peak_indexes = peak_indexes[0]\n"," \n","# Find valleys(min).\n","valley_indexes = signal.argrelextrema(data_y, np.less)\n","valley_indexes = valley_indexes[0]\n"," \n","# Instantiate axes.\n","(fig, ax) = plt.subplots()\n"," \n","# Merge peaks and valleys data points using pandas.\n","df_peaks = pd.DataFrame({'date': data_x[peak_indexes], 'zigzag_y': data_y[peak_indexes]})\n","df_valleys = pd.DataFrame({'date': data_x[valley_indexes], 'zigzag_y': data_y[valley_indexes]})\n","df_peaks_valleys = pd.concat([df_peaks, df_valleys], axis=0, ignore_index=True, sort=True)\n"," \n","# Sort peak and valley datapoints by date.\n","df_peaks_valleys = df_peaks_valleys.sort_values(by=['date'])\n"," \n","# Plot zigzag trendline.\n","ax.plot(df_peaks_valleys['date'].values, df_peaks_valleys['zigzag_y'].values, \n","                                                        color='red', label=\"zigzag\")\n"," \n","# Plot close price line.\n","ax.plot(data_x, data_y, linestyle='dashed', color='black', label=\"Close Price\", linewidth=1)\n"," "]},{"cell_type":"markdown","metadata":{"id":"1MNVIExLULhJ"},"source":["#### legacy"]},{"cell_type":"markdown","metadata":{"id":"EOXQbXixiQcK"},"source":["##### volume_profile"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7pFuazxpgx9B"},"outputs":[],"source":["session_df = res_df_.iloc[-1440:] # 0.159 -> 0.024 (14400 -> 1440)\n","volume = session_df['volume'].to_numpy()\n","close = session_df['close'].to_numpy()\n","# px.histogram(session_df, x='volume', y='close', nbins=150, orientation='h').show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":332,"status":"ok","timestamp":1647259514394,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"SoPJkiyKiXLM","outputId":"2e1d515d-7caf-4f82-b53b-a17f3e1d9ab9"},"outputs":[{"name":"stdout","output_type":"stream","text":["ticks_per_sample : 1.3911999999999989\n","kdy elapsed_time : 0.021226167678833008\n"]}],"source":["kde_factor = 0.05\n","num_samples = 100\n","\n","start_0 = time.time()\n","kde = stats.gaussian_kde(close,weights=volume,bw_method=kde_factor)\n","kdx = np.linspace(close.min(),close.max(),num_samples)\n","kdy = kde(kdx)\n","ticks_per_sample = (kdx.max() - kdx.min()) / num_samples\n","print(\"ticks_per_sample :\", ticks_per_sample)  # sample 당 가격\n","print(\"kdy elapsed_time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"elapsed":362,"status":"ok","timestamp":1647263622450,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"mK2jBddAxJ14","outputId":"74d7a810-1375-4db5-f74e-3cf58e0a0662"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 720x360 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["peaks,_ = signal.find_peaks(kdy)\n","pkx = kdx[peaks]\n","pky = kdy[peaks]\n","\n","plt.figure(figsize=(10,5))\n","# plt.hist(close, bins=num_samples, weights=volume, alpha=.8, color='#1592e6')\n","# plt.plot(kdx, kdy, color='white')\n","# plt.plot(pkx, pky, 'bo', color='yellow')\n","plt.plot(kdy, kdx, color='white')\n","plt.plot(pky, pkx, 'bo', color='yellow')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":326,"status":"ok","timestamp":1647260132868,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"a8tpQZCy0SO1","outputId":"24ee984e-db8d-4083-97a7-4d3ebb536d38"},"outputs":[{"data":{"text/plain":["array([3059.93252525, 3068.3640404 , 3082.41656566, 3093.65858586, 3104.90060606, 3120.35838384, 3130.19515152, 3140.03191919, 3158.30020202, 3168.1369697 , 3176.56848485])"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["pkx"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gfA946s8UgS0"},"outputs":[],"source":["# ------ vp 의 indi. 화가 필요함 -> point 설정 ------ #\n","# 1. 4 level 은 미리 만들어놓는게 맞는걸로 보임 -> 추종하는 function 이 많음 (utils_tr, ep_out ...)\n","#   a. 4 level 에 국한하는게 아니라, 모든 peaks 에 대해 levels 설정\n","#   b. 각 session 별로 peak_list 가 주어질 것\n","#     i. prev_data 사용해야하는점 주의 (session vp 는 future_data)"]},{"cell_type":"markdown","metadata":{"id":"3T-9FwWFXR4f"},"source":["###### prominence_info"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":558},"executionInfo":{"elapsed":781,"status":"ok","timestamp":1647183981567,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"RmBt2agljClE","outputId":"c61b0e13-ab0a-4e56-8a44-8bc480ec31cc"},"outputs":[{"name":"stdout","output_type":"stream","text":["prom_line elapsed_time : 0.0005087852478027344\n"]},{"data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"f0efc821-18d5-43b5-ad6e-1133ea0ad873\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"f0efc821-18d5-43b5-ad6e-1133ea0ad873\")) {                    Plotly.newPlot(                        \"f0efc821-18d5-43b5-ad6e-1133ea0ad873\",                        [{\"histfunc\":\"sum\",\"histnorm\":\"probability density\",\"marker\":{\"color\":\"#B0C4DE\"},\"name\":\"Vol Profile\",\"nbinsx\":150,\"x\":[3150.12,3150.91,3150.04,3152.76,3150.22,3148.21,3148.25,3148.3,3142.41,3145.56,3144.02,3145.11,3146.27,3142.97,3140.6,3142.02,3142.8,3141.34,3138.28,3138.09,3137.04,3135.5,3133.32,3134.84,3136.27,3137.1,3137.05,3139.74,3138.4,3138.17,3139.49,3141.68,3142.52,3143.14,3143.12,3142.4,3144.17,3142.7,3140.72,3138.89,3142.1,3140.96,3139.76,3138.51,3140.37,3139.0,3138.84,3138.57,3140.62,3143.09,3141.71,3140.05,3139.85,3139.12,3139.9,3139.24,3139.49,3138.88,3138.14,3136.66,3137.03,3138.04,3140.84,3138.27,3137.31,3139.03,3141.06,3141.5,3139.41,3137.62,3141.5,3142.8,3142.24,3143.42,3142.55,3143.9,3146.54,3146.38,3142.34,3144.01,3145.79,3147.35,3146.06,3146.75,3147.37,3153.62,3152.82,3154.53,3153.41,3154.3,3153.01,3156.01,3157.57,3157.36,3160.43,3159.0,3163.78,3164.2,3163.97,3168.45,3170.03,3169.46,3173.73,3169.48,3168.54,3167.57,3166.99,3164.73,3164.25,3166.33,3162.57,3156.97,3159.44,3159.19,3158.11,3156.97,3158.08,3158.32,3158.99,3157.01,3154.91,3147.89,3146.35,3142.36,3142.62,3138.81,3144.68,3143.32,3140.89,3140.16,3139.74,3140.33,3143.48,3145.12,3145.42,3147.13,3143.31,3144.88,3145.12,3143.89,3144.75,3143.91,3140.69,3141.35,3141.59,3141.62,3141.51,3141.96,3142.09,3140.61,3137.55,3138.18,3140.28,3139.39,3139.2,3139.85,3137.92,3138.08,3136.42,3134.93,3135.14,3133.15,3135.12,3133.37,3134.51,3131.06,3128.0,3126.97,3116.7,3122.46,3122.06,3118.8,3115.48,3119.5,3120.88,3110.75,3109.43,3107.1,3111.54,3107.5,3108.74,3111.3,3113.32,3115.38,3118.54,3115.27,3118.6,3120.1,3119.4,3119.35,3123.69,3123.54,3121.8,3121.82,3119.9,3122.01,3122.29,3119.64,3119.91,3118.67,3118.66,3119.45,3120.43,3122.38,3120.43,3121.94,3123.03,3123.6,3121.88,3123.81,3123.85,3121.51,3121.8,3122.29,3123.76,3127.99,3131.35,3131.12,3131.07,3132.76,3131.57,3131.8,3130.61,3134.68,3134.39,3132.91,3130.4,3129.86,3129.9,3129.38,3128.39,3125.57,3124.03,3123.68,3125.42,3125.98,3128.4,3130.98,3128.95,3129.26,3132.05,3131.17,3128.56,3126.45,3127.34,3128.33,3126.96,3128.84,3128.45,3128.34,3128.84,3126.09,3125.6,3125.95,3124.5,3122.44,3122.97,3128.29,3126.43,3127.98,3131.71,3132.68,3130.7,3129.63,3130.04,3129.68,3129.74,3129.36,3129.78,3128.6,3128.87,3130.34,3129.71,3127.47,3129.81,3129.16,3128.41,3126.57,3125.42,3128.63,3129.77,3130.9,3131.42,3129.66,3132.1,3130.24,3133.36,3138.65,3141.3,3144.9,3140.63,3141.08,3139.72,3142.67,3141.99,3140.43,3139.04,3134.85,3133.34,3133.14,3136.4,3138.89,3139.59,3143.64,3140.9,3140.38,3141.76,3140.14,3140.58,3137.29,3138.28,3138.27,3137.57,3139.11,3138.77,3138.93,3139.13,3139.57,3139.76,3141.02,3138.46,3138.77,3139.38,3135.77,3135.49,3136.19,3134.07,3135.5,3134.59,3134.37,3137.84,3139.81,3140.38,3143.15,3142.58,3143.12,3139.01,3137.68,3137.86,3137.6,3136.3,3136.34,3134.66,3136.0,3135.49,3133.83,3132.57,3127.5,3127.82,3130.61,3132.01,3126.05,3128.08,3127.75,3127.18,3128.5,3128.32,3129.79,3128.02,3129.28,3127.92,3129.56,3130.85,3131.61,3133.9,3133.36,3135.98,3136.89,3136.05,3138.23,3137.59,3139.65,3141.26,3140.09,3139.73,3139.13,3140.0,3138.28,3139.07,3140.15,3140.64,3141.14,3140.89,3141.56,3144.82,3146.11,3146.92,3147.37,3148.01,3148.11,3153.52,3153.63,3152.2,3145.75,3149.2,3150.38,3152.32,3148.33,3149.53,3151.03,3149.0,3148.97,3148.26,3148.09,3149.48,3150.14,3153.62,3154.73,3153.73,3154.58,3156.77,3157.02,3157.56,3159.21,3157.99,3157.28,3158.24,3157.75,3153.62,3156.32,3155.98,3156.09,3153.36,3154.85,3153.7,3153.26,3153.92,3152.18,3154.72,3153.76,3151.32,3147.99,3143.63,3142.84,3142.01,3142.34,3141.19,3144.4,3143.24,3146.07,3146.42,3142.71,3145.16,3144.34,3142.69,3139.69,3137.0,3139.75,3138.36,3137.76,3138.86,3141.21,3141.38,3147.22,3146.36,3145.32,3145.22,3143.33,3142.05,3138.36,3136.89,3138.59,3137.22,3138.73,3140.14,3140.55,3143.65,3142.01,3142.94,3141.82,3142.27,3142.38,3141.33,3139.54,3140.53,3141.91,3143.98,3145.27,3145.56,3145.8,3146.38,3146.33,3146.59,3148.72,3149.48,3149.99,3149.19,3147.89,3145.9,3144.89,3143.99,3144.38,3141.47,3141.26,3134.83,3136.75,3135.49,3137.49,3136.01,3138.03,3137.49,3135.5,3133.94,3131.24,3128.72,3131.32,3129.42,3129.77,3126.83,3127.0,3124.12,3125.0,3127.18,3130.0,3129.72,3129.07,3129.68,3129.97,3129.39,3130.92,3132.75,3132.92,3129.99,3133.15,3130.69,3132.15,3134.37,3132.81,3131.7,3130.61,3128.61,3128.99,3124.84,3116.56,3116.76,3116.92,3118.9,3119.05,3118.74,3118.24,3121.88,3121.41,3120.63,3119.45,3119.16,3117.66,3125.21,3122.01,3122.3,3122.27,3123.6,3123.71,3124.0,3126.14,3128.01,3125.94,3126.44,3128.0,3128.04,3128.5,3131.12,3129.44,3129.36,3130.58,3130.58,3130.74,3129.8,3130.8,3130.21,3130.0,3132.5,3132.77,3130.01,3138.72,3139.25,3138.11,3136.77,3136.71,3134.59,3135.98,3133.81,3131.4,3131.16,3133.29,3130.61,3132.0,3132.44,3133.58,3134.18,3133.44,3133.33,3135.37,3134.42,3132.16,3132.2,3130.93,3131.07,3128.89,3127.34,3129.46,3129.77,3130.33,3131.76,3132.28,3130.06,3132.43,3132.6,3134.33,3138.55,3138.49,3137.34,3135.68,3135.12,3133.0,3133.35,3135.1,3135.72,3135.45,3135.74,3134.31,3135.54,3135.0,3134.0,3135.5,3135.47,3138.57,3137.43,3137.26,3137.68,3134.65,3133.04,3134.23,3134.77,3137.77,3138.53,3137.99,3140.51,3141.66,3137.9,3130.11,3125.74,3126.7,3127.43,3126.03,3120.96,3121.81,3124.17,3124.31,3124.54,3125.11,3125.71,3126.3,3128.36,3129.59,3129.72,3130.19,3131.21,3130.5,3130.07,3129.81,3131.5,3134.35,3133.15,3135.09,3136.18,3132.93,3122.75,3122.1,3122.03,3121.84,3121.06,3118.65,3120.18,3119.31,3112.84,3117.62,3114.39,3114.41,3116.04,3117.45,3119.3,3120.57,3120.72,3121.07,3116.17,3110.8,3111.87,3110.61,3115.47,3117.35,3117.49,3117.32,3114.9,3112.16,3112.35,3108.01,3111.41,3109.76,3113.55,3118.27,3120.49,3119.38,3121.0,3119.82,3119.61,3118.49,3116.15,3116.56,3117.76,3115.36,3117.85,3117.1,3118.16,3118.6,3117.1,3114.79,3114.07,3116.16,3113.75,3112.4,3104.99,3118.68,3114.45,3103.37,3094.09,3103.67,3101.78,3098.48,3101.08,3101.52,3096.14,3095.06,3094.52,3093.74,3089.7,3094.76,3094.28,3082.9,3075.29,3071.6,3066.96,3068.99,3068.43,3072.83,3074.19,3068.47,3066.49,3068.45,3071.08,3072.8,3068.44,3067.71,3073.29,3073.62,3075.79,3074.76,3079.0,3077.27,3072.94,3073.42,3070.62,3070.97,3075.98,3073.64,3070.63,3073.96,3074.48,3076.25,3074.55,3072.14,3068.01,3068.44,3057.23,3061.75,3060.41,3060.23,3055.43,3062.96,3064.42,3063.7,3057.99,3057.97,3065.99,3069.05,3073.19,3068.84,3067.58,3067.45,3064.78,3066.87,3067.5,3068.74,3067.5,3070.61,3059.89,3062.56,3066.56,3065.24,3061.41,3060.9,3053.06,3061.95,3059.49,3056.27,3059.09,3059.6,3056.32,3057.96,3058.97,3061.6,3066.01,3068.68,3068.43,3070.66,3072.53,3070.4,3073.28,3072.86,3070.68,3067.65,3066.0,3066.25,3070.21,3071.52,3068.61,3064.15,3064.26,3063.48,3062.8,3060.3,3059.85,3060.47,3064.84,3065.03,3066.71,3066.55,3066.41,3065.24,3067.81,3066.93,3065.0,3067.85,3060.14,3062.51,3061.39,3064.93,3064.94,3066.09,3066.49,3067.75,3070.38,3067.84,3067.51,3072.07,3071.31,3070.05,3068.95,3068.57,3067.73,3068.88,3067.87,3067.89,3065.01,3066.0,3069.24,3065.3,3063.52,3063.06,3064.11,3064.99,3063.19,3062.69,3066.9,3066.87,3065.42,3058.47,3058.2,3068.7,3065.56,3065.52,3059.04,3060.61,3059.57,3058.08,3055.2,3053.72,3060.26,3055.86,3045.88,3046.6,3051.18,3052.99,3057.9,3056.38,3059.4,3061.48,3061.15,3064.36,3065.77,3066.35,3066.8,3067.68,3068.0,3065.05,3063.01,3066.42,3066.16,3064.8,3067.89,3066.3,3068.58,3064.81,3065.74,3064.23,3065.42,3070.43,3069.65,3070.48,3070.57,3073.44,3078.3,3082.89,3079.01,3080.76,3079.67,3082.0,3081.56,3082.01,3081.24,3078.61,3080.11,3080.95,3080.03,3080.65,3079.97,3078.86,3078.5,3078.6,3077.34,3077.0,3076.39,3076.45,3077.45,3076.23,3072.22,3073.67,3079.31,3077.21,3075.68,3076.91,3078.2,3075.92,3077.67,3076.33,3075.14,3076.47,3077.04,3080.69,3079.8,3080.33,3075.65,3074.66,3073.05,3070.38,3067.96,3068.78,3067.92,3069.26,3069.37,3070.76,3068.12,3069.49,3069.98,3071.78,3070.88,3068.71,3067.04,3069.34,3070.99,3070.39,3069.63,3068.6,3068.89,3070.08,3069.26,3069.57,3069.72,3069.53,3067.99,3069.23,3070.93,3071.33,3068.33,3066.84,3066.23,3066.76,3068.17,3070.0,3072.0,3075.66,3073.9,3073.99,3074.66,3074.0,3076.62,3077.82,3076.01,3076.18,3075.52,3075.42,3075.01,3075.67,3079.55,3078.46,3082.28,3080.74,3081.27,3083.38,3084.49,3086.42,3084.9,3086.53,3085.27,3084.7,3084.08,3084.82,3086.99,3092.0,3089.49,3089.26,3084.07,3084.44,3084.8,3083.55,3082.59,3082.36,3084.65,3086.97,3085.67,3085.43,3088.82,3089.81,3091.81,3093.96,3092.59,3093.58,3093.74,3092.61,3091.64,3091.26,3113.47,3104.88,3092.36,3101.44,3107.88,3113.58,3119.86,3128.34,3133.07,3128.34,3123.1,3129.07,3122.38,3127.43,3126.59,3132.79,3137.33,3143.07,3145.41,3147.86,3148.82,3157.67,3157.57,3160.7,3160.01,3163.6,3172.63,3171.77,3174.38,3176.44,3178.06,3179.99,3185.0,3176.75,3171.53,3179.12,3176.52,3168.9,3168.72,3170.03,3168.15,3165.58,3166.83,3167.56,3161.34,3162.78,3167.67,3162.8,3157.67,3155.79,3157.92,3161.37,3163.06,3165.11,3163.45,3164.45,3166.86,3166.61,3165.0,3167.59,3167.45,3164.59,3167.05,3172.29,3176.49,3170.87,3166.5,3165.51,3165.58,3164.96,3165.19,3161.59,3165.09,3162.72,3163.97,3162.62,3165.19,3165.77,3163.55,3173.99,3171.18,3170.87,3168.34,3169.49,3167.69,3169.72,3166.89,3168.42,3166.68,3168.84,3165.83,3162.55,3159.17,3160.93,3162.0,3160.83,3158.69,3159.99,3159.9,3159.88,3160.02,3158.98,3160.0,3158.01,3159.2,3158.6,3158.71,3156.25,3157.2,3156.77,3156.91,3156.6,3156.55,3153.94,3152.29,3151.49,3151.41,3146.89,3148.18,3147.2,3147.17,3147.89,3149.31,3151.59,3156.4,3153.84,3155.3,3155.23,3156.03,3156.24,3155.61,3158.4,3155.05,3155.38,3152.34,3152.18,3153.34,3152.91,3153.99,3151.52,3149.21,3152.48,3151.63,3150.9,3149.75,3148.0,3148.25,3149.4,3149.7,3148.41,3147.65,3146.06,3147.06,3147.41,3146.72,3145.51,3142.17,3142.8,3140.42,3139.24,3140.69,3140.67,3139.22,3136.44,3139.14,3137.55,3133.96,3131.83,3130.8,3130.95,3129.59,3127.0,3129.85,3133.0,3132.21,3132.15,3130.41,3132.9,3134.57,3139.85,3133.04,3138.13,3135.79,3136.96,3133.26,3129.64,3128.02,3127.75,3130.0,3132.21,3133.06,3132.06,3131.88,3132.99,3134.0,3135.79,3137.68,3136.0,3137.89,3133.88,3133.81,3133.84,3133.71,3138.28,3143.06,3144.0,3143.17,3143.02,3145.34,3144.83,3144.81,3144.61,3146.0,3147.91,3146.69,3145.03,3142.46,3142.5,3141.1,3140.17,3140.11,3141.4,3143.92,3144.66,3146.71,3148.95,3146.13,3135.82,3136.96,3139.34,3134.9,3134.48,3136.76,3137.37,3136.92,3136.99,3133.71,3134.44,3132.38,3135.25,3137.14,3135.07,3136.15,3136.15,3139.87,3138.92,3138.5,3141.6,3144.19,3145.44,3147.36,3147.51,3142.12,3143.94,3142.43,3142.02,3142.21,3144.66,3146.53,3144.3,3145.73,3145.94,3146.56,3145.42,3146.05,3150.58,3154.16,3151.01,3149.76,3150.51,3149.31,3146.43,3146.66,3147.47,3145.75,3146.7,3147.1,3143.28,3146.19,3145.38,3145.25,3140.13,3143.45,3140.18,3138.3,3139.7,3136.88,3132.99,3134.7,3135.09,3135.74,3129.89,3126.61,3123.87,3125.14,3119.64,3123.09,3123.35,3120.16,3121.8,3125.0,3132.0,3126.44,3124.57,3120.75,3125.9,3128.05,3127.12,3124.8,3126.19,3128.65,3130.03,3125.31,3125.8,3126.11,3123.22,3125.03,3126.05,3126.24,3129.98,3130.55,3130.97,3129.1,3129.66,3130.27,3130.36,3131.12,3136.13,3137.65,3133.69,3137.18,3137.25,3138.83,3138.58,3141.52,3139.41,3139.05,3137.7,3139.46,3139.8,3140.98,3139.78,3139.17,3140.0,3141.49,3138.86,3139.52,3140.5,3142.58,3142.34,3142.47,3142.91,3142.89,3144.0,3147.55,3148.71,3151.21,3150.66,3148.5,3148.96,3148.5,3150.32,3152.45,3150.83,3150.29,3151.2,3153.01,3152.48,3149.23,3147.45,3146.68,3157.71,3153.34,3147.37,3143.99,3141.45,3142.66,3146.98,3146.61,3148.46,3149.5,3149.29,3148.18,3145.05,3146.86,3145.76,3148.84,3149.31,3146.86,3146.76],\"y\":[1814.895,1182.023,1511.21,821.059,669.95,594.607,397.261,475.226,1430.563,1351.268,848.732,961.415,677.695,2241.498,771.686,3400.92,457.283,815.311,843.761,1456.898,1147.73,2592.488,939.438,695.06,664.589,839.272,344.224,524.897,1029.553,1257.254,764.586,1618.563,599.314,385.634,340.075,245.402,273.54,932.316,297.465,800.419,470.172,358.191,198.746,398.956,521.275,398.68,250.799,376.615,178.701,1034.812,349.27,365.934,193.939,199.584,148.806,343.965,258.079,238.408,273.382,508.892,455.586,1497.43,603.768,705.325,471.812,358.129,1222.79,447.666,603.433,350.189,684.554,404.765,918.631,713.382,803.374,220.673,1013.652,1757.238,887.223,420.149,422.235,642.444,379.785,126.201,499.773,2342.571,1945.816,1288.743,676.794,392.273,424.757,1084.062,1139.501,790.354,2007.705,1446.953,1842.648,777.958,945.39,2579.427,2955.737,1590.911,1476.864,2861.345,772.493,876.768,1835.01,875.833,585.31,765.122,767.852,1825.83,1060.932,682.04,688.755,737.484,429.945,293.821,300.116,1045.831,712.192,2711.994,2052.2,3340.02,897.035,2391.303,2186.713,1517.988,344.748,771.478,720.502,656.313,530.014,1327.673,508.321,904.994,1152.633,523.227,293.715,229.893,202.519,252.467,601.482,317.28,345.035,575.193,374.831,194.465,270.588,367.969,1280.729,1909.713,774.939,518.596,294.403,337.627,382.69,353.682,534.457,1713.387,360.944,713.113,1393.388,1289.595,610.727,739.131,1619.367,2194.335,8164.046,2879.21,2159.701,2512.548,3579.377,1841.206,2810.677,3893.288,1849.815,5497.891,2407.824,1844.752,1304.788,945.57,2745.772,2050.842,2354.528,1577.291,903.569,1269.654,2703.684,766.884,1965.466,1320.285,1111.835,521.223,822.176,942.413,497.538,499.364,222.856,316.366,355.702,243.842,362.266,593.914,349.424,308.565,540.138,769.079,463.481,163.895,237.299,285.424,466.1,224.654,493.52,1674.225,4063.392,1370.598,472.447,957.289,609.428,338.42,243.509,745.35,1417.319,762.417,553.865,616.945,305.569,511.777,416.061,2007.687,312.874,1760.715,470.299,170.102,514.177,647.315,425.481,274.85,415.924,896.493,396.062,588.357,231.181,273.932,245.847,212.412,116.329,109.858,274.394,323.434,335.066,347.193,459.166,944.41,601.327,889.712,412.644,317.84,986.261,934.932,572.116,181.168,460.876,145.156,108.878,210.202,77.92,295.25,300.008,412.518,463.649,312.424,342.369,602.553,325.602,288.656,458.643,344.168,189.501,378.501,506.806,405.58,266.931,508.179,577.092,1968.061,3128.798,2617.171,810.468,1071.792,482.71,702.007,298.08,1139.23,623.801,1162.914,1203.468,673.113,606.991,499.32,344.082,916.323,1133.798,236.462,323.745,227.404,305.618,859.751,541.196,262.919,221.3,135.795,94.984,185.741,146.342,216.582,150.862,227.198,373.705,332.486,216.229,778.895,1204.286,326.503,380.38,1047.579,257.681,288.363,944.527,1025.858,1888.092,606.18,219.281,573.418,618.131,579.352,643.473,227.201,596.85,266.111,593.418,412.236,518.62,714.492,807.998,1833.123,1485.911,696.152,1044.399,1178.696,682.768,339.908,614.242,333.987,289.083,426.036,434.767,363.008,294.274,249.675,759.092,233.645,259.457,692.772,530.582,751.244,252.918,324.292,565.306,530.138,634.433,621.443,362.445,1462.934,578.493,404.427,432.71,381.631,206.741,803.279,286.361,454.727,989.949,1000.012,534.381,1225.959,2611.002,1238.904,1808.266,2668.663,1734.437,1991.659,1533.497,673.975,1417.797,1002.213,689.714,474.831,775.993,612.321,674.988,586.885,486.539,6750.373,1240.763,1031.138,1064.433,810.097,2543.442,1714.432,1408.587,2076.241,891.454,802.952,990.123,356.49,909.726,969.575,1157.716,408.802,557.485,790.536,760.441,903.066,478.393,406.574,460.658,270.44,397.786,2943.217,4367.234,1259.451,1068.328,966.188,1414.714,579.827,511.738,412.874,654.607,675.654,504.93,356.198,858.616,1158.323,1447.125,787.173,728.954,636.948,628.265,669.612,465.412,1222.997,749.451,462.962,472.928,432.435,342.099,1618.728,2358.947,952.987,460.716,651.763,975.681,444.398,645.867,449.599,193.003,278.721,545.444,842.045,277.826,994.515,588.675,591.108,309.423,892.268,276.425,502.627,968.723,404.031,211.579,444.69,715.557,984.707,1097.859,551.379,692.514,900.106,360.002,948.053,805.637,489.368,1676.558,1304.157,367.592,283.184,1023.029,456.415,763.262,343.508,461.29,879.775,1776.793,1251.296,591.245,573.997,1673.844,1283.242,2767.718,1120.511,657.294,746.819,905.747,599.259,715.33,481.675,327.764,388.74,1256.088,1555.066,601.571,277.709,213.939,322.601,214.083,472.872,296.863,364.37,746.543,378.365,967.733,5140.211,4083.258,1994.542,1976.259,888.817,461.462,437.566,1416.611,716.221,1318.431,481.782,2014.435,936.676,1459.321,855.198,732.281,466.019,450.272,560.57,469.751,622.444,518.498,933.561,1274.182,362.645,417.461,200.685,1204.422,1085.208,437.325,388.368,522.196,414.681,402.1,458.488,176.931,774.455,662.126,617.206,452.137,4865.578,3871.135,1343.329,634.081,483.47,1681.018,514.598,502.913,1322.138,529.723,572.34,348.409,713.894,228.335,215.652,253.718,284.838,694.79,180.093,810.769,563.133,209.468,355.301,1084.715,204.09,893.371,557.044,320.725,236.971,360.995,404.746,202.665,416.594,295.445,369.598,1691.926,445.675,502.376,451.028,754.112,460.168,253.657,293.696,364.866,139.172,187.996,297.765,167.774,288.681,128.716,179.501,428.036,213.013,396.147,290.492,459.26,333.25,604.208,535.843,218.827,379.209,623.314,309.742,1047.188,2658.829,741.273,2765.267,2446.593,900.038,1232.736,817.002,2687.132,3309.465,1746.003,699.151,574.566,262.053,505.975,270.49,1023.427,533.5,488.001,536.457,432.03,945.469,1080.591,611.695,611.907,1095.621,485.481,688.799,375.255,1322.925,2347.935,1281.055,1713.871,563.816,371.289,1137.167,1011.662,433.968,4755.422,2060.545,1118.297,1058.42,991.226,512.798,725.336,476.284,633.408,903.175,644.941,2829.545,1218.33,1149.1,755.961,1252.379,2399.314,350.433,457.851,727.54,748.377,2585.751,4337.831,2453.675,1355.272,2073.169,1425.068,1751.715,901.639,353.899,368.582,636.142,1082.148,271.744,399.517,439.441,377.24,330.026,233.732,285.884,308.136,639.158,734.67,567.183,310.671,995.761,12392.217,5461.011,2988.344,5529.668,2618.77,11929.186,2928.894,5355.073,1533.817,2310.282,2210.125,1805.742,2500.52,3272.782,1332.249,2270.554,2483.668,8790.039,13105.425,16039.554,8317.661,6814.545,3909.444,2716.544,2823.368,2433.446,3042.327,4014.336,2680.476,2166.982,8299.153,2107.079,2585.491,3224.808,2437.339,2865.693,1574.387,2219.401,2214.305,2410.523,1263.301,1232.671,1213.058,1789.33,827.919,1530.653,1732.94,1439.558,1552.842,1345.879,1394.187,3147.626,6162.965,7032.083,1330.471,2505.725,7118.551,2288.653,1286.682,1102.423,3249.307,1670.88,2218.379,2946.052,2525.484,1719.79,1630.798,1474.484,1299.503,434.158,1462.856,1914.008,1336.711,872.552,2661.102,1921.851,1223.061,892.979,1675.459,2747.98,3398.563,4782.692,3130.671,914.08,3275.661,3677.987,1920.096,1582.481,626.202,1699.704,3016.389,2348.542,3936.201,1440.961,2551.41,2929.114,3910.54,1731.929,1423.134,1630.803,823.665,1596.309,1843.181,1446.542,850.694,2297.843,856.543,883.961,501.157,1621.147,856.971,707.791,1351.166,795.198,938.608,485.179,455.671,1061.071,580.457,263.109,715.892,1587.285,993.923,1251.255,2659.143,996.502,853.854,744.677,711.983,3232.026,3662.831,807.0,555.69,1043.709,1292.106,987.334,375.225,316.734,438.411,289.699,537.944,942.885,797.012,1077.267,379.583,611.293,521.083,934.505,1175.247,499.493,1141.633,563.435,872.319,811.753,773.096,1412.344,3620.225,4714.694,669.244,1065.55,1598.224,847.615,1923.708,1020.52,1883.069,3076.446,2134.064,1453.728,11270.233,2936.896,6307.007,2166.477,1551.387,1853.874,1372.167,2298.452,1069.092,896.017,1027.708,1205.234,1794.761,2595.809,890.418,848.032,650.893,1088.28,200.664,502.739,575.785,921.978,808.706,3029.201,602.68,309.435,495.715,959.404,569.062,492.893,686.058,1227.456,2415.351,6515.3,1556.79,953.548,1004.564,1320.414,4557.466,1098.609,911.352,1232.801,1241.033,1343.423,769.908,447.129,647.478,822.26,767.131,569.507,437.851,1190.093,378.865,290.814,440.004,366.664,1587.445,389.51,1948.052,1274.222,418.255,155.696,281.607,310.623,166.909,303.48,700.347,271.28,110.636,520.183,820.569,810.861,1088.369,858.322,1295.596,2094.312,1503.768,1037.796,500.033,559.479,227.634,704.975,702.474,560.973,1364.022,508.316,349.588,640.477,527.515,1470.646,248.411,315.355,194.49,727.557,208.254,329.772,769.204,559.27,220.603,179.101,514.706,337.329,450.668,1473.433,2256.979,539.366,738.786,421.76,808.357,281.104,544.472,1304.849,1022.835,193.211,205.636,773.849,215.729,546.43,625.921,225.712,512.885,292.199,264.804,592.964,1204.967,418.402,742.071,437.497,433.652,1078.844,331.74,1040.031,872.767,1004.157,722.758,430.616,408.399,245.932,484.168,3624.12,976.418,394.652,1682.369,625.343,239.747,380.251,1597.606,848.428,708.537,664.832,371.165,750.007,1026.259,843.009,1023.456,1917.749,952.579,870.347,502.286,1363.581,780.743,1448.612,12431.885,6893.299,8886.959,3907.062,9540.759,4740.252,5895.644,16625.626,6312.555,3615.152,3860.571,2514.261,2760.668,1523.597,1871.628,2528.961,7365.0,8920.169,5768.383,6710.649,3346.652,4463.499,3666.88,6450.55,4832.119,5510.211,8186.365,3537.525,8281.314,10045.157,6383.577,5079.938,3813.839,3660.97,5728.121,7917.184,2421.103,5177.868,3136.173,2217.563,3832.957,1720.129,1543.371,1636.799,8034.61,4788.474,3850.793,1514.508,5392.819,1927.194,1163.751,1585.945,1209.542,1998.829,877.24,823.488,781.809,826.931,913.803,742.025,3002.547,1367.89,1044.189,1100.946,2047.804,2818.993,1017.674,1889.338,1032.258,579.044,748.169,927.378,1345.4,516.194,810.503,845.27,650.086,556.495,716.068,3167.786,1365.503,1120.129,1632.121,494.557,495.811,356.546,271.948,320.235,366.049,349.466,550.775,843.882,2000.798,961.087,470.513,438.616,819.214,594.347,286.774,251.089,602.025,267.413,278.638,425.458,282.646,1696.154,921.061,374.925,625.157,346.19,1447.882,338.668,501.822,996.179,1126.58,967.442,927.906,4074.406,898.707,1271.993,720.906,758.176,506.787,1384.601,2630.754,1180.051,296.364,385.161,594.547,303.281,206.3,1509.706,417.533,430.407,350.638,614.913,217.67,109.158,296.924,307.087,827.106,850.038,562.773,402.213,853.225,619.708,185.33,229.867,207.248,255.341,347.69,914.271,348.17,280.522,461.744,242.677,1689.641,1235.344,943.835,1181.751,733.24,268.104,381.13,818.733,1090.052,548.373,754.94,989.387,773.47,1064.937,1070.959,703.035,2594.209,1302.569,682.392,552.382,309.738,466.737,793.098,2376.261,856.232,754.519,404.143,168.334,1477.862,943.652,711.273,1748.362,1006.485,789.572,594.946,279.75,178.433,290.649,215.983,493.113,338.384,762.448,611.586,1334.322,294.505,303.188,134.407,516.94,1550.403,1126.795,485.425,622.304,1249.031,373.648,346.683,211.699,519.095,1088.352,529.813,523.314,772.507,209.114,687.664,329.146,352.705,444.147,395.78,325.339,513.402,784.247,986.546,1584.942,2185.948,785.321,729.112,453.787,897.861,262.964,404.52,171.003,580.24,118.207,406.641,160.17,743.848,437.773,1369.397,191.219,1229.096,398.903,403.85,322.726,970.586,568.304,478.038,404.745,1239.612,454.913,442.573,288.41,264.373,524.088,130.674,443.39,586.952,167.731,307.728,263.88,311.737,866.873,1745.621,745.983,309.615,328.348,383.704,1118.281,450.373,387.296,188.089,629.117,158.39,829.748,364.026,136.85,324.278,1060.597,707.567,409.192,443.098,510.64,923.325,605.203,716.174,198.6,554.733,1635.338,1598.253,4035.924,1229.607,1608.824,2794.958,636.725,1971.132,1481.98,1093.152,3786.967,1736.518,1289.176,1179.711,677.348,1259.158,841.34,248.067,451.306,413.411,883.511,395.721,304.827,431.303,1106.7,599.37,354.735,747.528,810.7,835.158,481.175,629.481,323.974,608.739,557.978,525.368,1225.958,840.532,1067.311,718.545,716.335,312.894,563.057,1017.419,618.553,512.007,588.984,294.695,278.158,217.027,537.444,269.51,225.5,501.376,691.99,483.791,127.283,709.697,467.43,307.414,507.697,422.858,256.808,1153.716,1055.198,1414.849,1144.706,1064.626,623.477,877.503,444.839,742.027,415.472,677.548,1051.317,655.2,370.676,1077.143,1051.053,784.457,4542.468,1733.555,1213.929,1538.198,2121.016,918.853,882.448,654.86,1728.875,631.103,301.013,661.938,933.172,370.951,202.456,406.614,314.65,592.089,26.727],\"type\":\"histogram\"},{\"marker\":{\"color\":\"#D2691E\"},\"mode\":\"lines\",\"name\":\"KDE\",\"x\":[3045.88,3047.2852525252524,3048.690505050505,3050.0957575757575,3051.5010101010103,3052.9062626262626,3054.3115151515153,3055.7167676767676,3057.1220202020204,3058.5272727272727,3059.9325252525255,3061.337777777778,3062.7430303030305,3064.148282828283,3065.5535353535356,3066.958787878788,3068.3640404040407,3069.769292929293,3071.1745454545458,3072.579797979798,3073.9850505050504,3075.390303030303,3076.7955555555554,3078.200808080808,3079.6060606060605,3081.0113131313133,3082.4165656565656,3083.8218181818183,3085.2270707070707,3086.6323232323234,3088.0375757575757,3089.4428282828285,3090.848080808081,3092.2533333333336,3093.658585858586,3095.0638383838386,3096.469090909091,3097.8743434343437,3099.279595959596,3100.6848484848488,3102.090101010101,3103.4953535353534,3104.900606060606,3106.3058585858585,3107.711111111111,3109.1163636363635,3110.5216161616163,3111.9268686868686,3113.3321212121214,3114.7373737373737,3116.1426262626264,3117.5478787878787,3118.9531313131315,3120.358383838384,3121.7636363636366,3123.168888888889,3124.5741414141416,3125.979393939394,3127.3846464646467,3128.789898989899,3130.1951515151513,3131.600404040404,3133.0056565656564,3134.410909090909,3135.8161616161615,3137.2214141414142,3138.6266666666666,3140.0319191919193,3141.4371717171716,3142.8424242424244,3144.2476767676767,3145.6529292929295,3147.0581818181818,3148.4634343434345,3149.868686868687,3151.2739393939396,3152.679191919192,3154.0844444444447,3155.489696969697,3156.8949494949493,3158.300202020202,3159.7054545454544,3161.110707070707,3162.5159595959594,3163.921212121212,3165.3264646464645,3166.7317171717173,3168.1369696969696,3169.5422222222223,3170.9474747474746,3172.3527272727274,3173.7579797979797,3175.1632323232325,3176.568484848485,3177.9737373737375,3179.37898989899,3180.7842424242426,3182.189494949495,3183.5947474747472,3185.0],\"y\":[0.001832905419240713,0.0015170993773343943,0.0009811990405335794,0.0010910781869862753,0.001662787664619852,0.002276584209048065,0.003017679469815101,0.004091626542089751,0.005452920992053675,0.006818537038424319,0.0076664779747402535,0.007643887894555952,0.007344902200072563,0.00827273925583825,0.011220488982456029,0.01494681923660121,0.016672754263443067,0.015298211710060586,0.013000656836147326,0.01136447782936633,0.009905415113226086,0.007991277793749363,0.005915182769079316,0.004603614839180802,0.004340216581875808,0.004677084159634987,0.004804286094145265,0.003945664227425191,0.0025142257578005694,0.0014727830724446968,0.0011591657181478472,0.0015827815995405762,0.0026670028851318566,0.003810420375174876,0.004026389180218125,0.003107185282237217,0.001940076730122543,0.0013880150787554427,0.0015444989246854268,0.0023609061649200076,0.0037401025635127546,0.005029582983599697,0.005321434602966492,0.004778565138234207,0.004284633110071723,0.004142142333983544,0.004650245486454227,0.005790340541463709,0.0068018904562159735,0.007335214235017366,0.008011875247544532,0.009032977214800161,0.009862320541122151,0.01015891479438546,0.010077897051723251,0.009700191176833918,0.00944402389099212,0.010385374840307136,0.012487699392384763,0.014125807036359036,0.014335489751832464,0.013760773754902053,0.013070724606546664,0.012663567468535765,0.013407581002278695,0.0152918031502357,0.01671953731557649,0.01690758767766308,0.0165814827586469,0.01570664895796692,0.014255369464538745,0.013369278115428072,0.012993378487870194,0.011780241643981209,0.009592167939552232,0.007696976248164002,0.006823155935995189,0.006619023196157732,0.007110669748385475,0.008153180108070628,0.008357004173573936,0.007467120695723313,0.006541623694037697,0.005979030384818917,0.00565790251287167,0.005607397002735248,0.00599245781550611,0.006338445734583271,0.0060092038421343755,0.0053319582929410685,0.004754442260061802,0.004333231721163359,0.004227903631578969,0.004279536987396199,0.003930156107007355,0.0029754130410062354,0.0017041868280610027,0.0007672145372132436,0.0005056108010257643,0.0005155116532610217],\"type\":\"scatter\"},{\"marker\":{\"color\":\"black\",\"size\":10},\"mode\":\"markers\",\"name\":\"Peaks\",\"x\":[3059.9325252525255,3068.3640404040407,3082.4165656565656,3093.658585858586,3104.900606060606,3120.358383838384,3130.1951515151513,3140.0319191919193,3158.300202020202,3168.1369696969696,3176.568484848485],\"y\":[0.0076664779747402535,0.016672754263443067,0.004804286094145265,0.004026389180218125,0.005321434602966492,0.01015891479438546,0.014335489751832464,0.01690758767766308,0.008357004173573936,0.006338445734583271,0.004279536987396199],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"shapes\":[{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3059.9325252525255,\"x1\":3059.9325252525255,\"xref\":\"x\",\"y0\":0,\"y1\":0.007344902200072563,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3068.3640404040407,\"x1\":3068.3640404040407,\"xref\":\"x\",\"y0\":0,\"y1\":0.001159165718147847,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3082.4165656565656,\"x1\":3082.4165656565656,\"xref\":\"x\",\"y0\":0,\"y1\":0.004340216581875808,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3093.658585858586,\"x1\":3093.658585858586,\"xref\":\"x\",\"y0\":0,\"y1\":0.0013880150787554425,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3104.900606060606,\"x1\":3104.900606060606,\"xref\":\"x\",\"y0\":0,\"y1\":0.004142142333983544,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3120.358383838384,\"x1\":3120.358383838384,\"xref\":\"x\",\"y0\":0,\"y1\":0.00944402389099212,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3130.1951515151513,\"x1\":3130.1951515151513,\"xref\":\"x\",\"y0\":0,\"y1\":0.012663567468535765,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3140.0319191919193,\"x1\":3140.0319191919193,\"xref\":\"x\",\"y0\":0,\"y1\":0.0009811990405335785,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3158.300202020202,\"x1\":3158.300202020202,\"xref\":\"x\",\"y0\":0,\"y1\":0.006619023196157732,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3168.1369696969696,\"x1\":3168.1369696969696,\"xref\":\"x\",\"y0\":0,\"y1\":0.005607397002735248,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3176.568484848485,\"x1\":3176.568484848485,\"xref\":\"x\",\"y0\":0,\"y1\":0.004227903631578969,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3062.5744,\"xref\":\"x\",\"y0\":0.007505690087406408,\"y1\":0.007505690087406408,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.008915959990795457,\"y1\":0.008915959990795457,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3079.2688000000003,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.0045722513380105365,\"y1\":0.0045722513380105365,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3097.3544,\"xref\":\"x\",\"y0\":0.002707202129486784,\"y1\":0.002707202129486784,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3108.484,\"xref\":\"x\",\"y0\":0.004731788468475018,\"y1\":0.004731788468475018,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3123.7872,\"xref\":\"x\",\"y0\":0.00980146934268879,\"y1\":0.00980146934268879,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3133.5256,\"xref\":\"x\",\"y0\":0.013499528610184115,\"y1\":0.013499528610184115,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.00894439335909833,\"y1\":0.00894439335909833,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3153.0024,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.007488013684865834,\"y1\":0.007488013684865834,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3164.132,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.005972921368659259,\"y1\":0.005972921368659259,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3173.8704,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.004253720309487584,\"y1\":0.004253720309487584,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3059.9325252525255,\"x1\":3059.9325252525255,\"xref\":\"x\",\"y0\":0,\"y1\":0.0076664779747402535,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3068.3640404040407,\"x1\":3068.3640404040407,\"xref\":\"x\",\"y0\":0,\"y1\":0.016672754263443067,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3082.4165656565656,\"x1\":3082.4165656565656,\"xref\":\"x\",\"y0\":0,\"y1\":0.004804286094145265,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3093.658585858586,\"x1\":3093.658585858586,\"xref\":\"x\",\"y0\":0,\"y1\":0.004026389180218125,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3104.900606060606,\"x1\":3104.900606060606,\"xref\":\"x\",\"y0\":0,\"y1\":0.005321434602966492,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3120.358383838384,\"x1\":3120.358383838384,\"xref\":\"x\",\"y0\":0,\"y1\":0.01015891479438546,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3130.1951515151513,\"x1\":3130.1951515151513,\"xref\":\"x\",\"y0\":0,\"y1\":0.014335489751832464,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3140.0319191919193,\"x1\":3140.0319191919193,\"xref\":\"x\",\"y0\":0,\"y1\":0.01690758767766308,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3158.300202020202,\"x1\":3158.300202020202,\"xref\":\"x\",\"y0\":0,\"y1\":0.008357004173573936,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3168.1369696969696,\"x1\":3168.1369696969696,\"xref\":\"x\",\"y0\":0,\"y1\":0.006338445734583271,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3176.568484848485,\"x1\":3176.568484848485,\"xref\":\"x\",\"y0\":0,\"y1\":0.004279536987396199,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3062.5744,\"xref\":\"x\",\"y0\":0.007505690087406408,\"y1\":0.007505690087406408,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.008915959990795457,\"y1\":0.008915959990795457,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3079.2688000000003,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.0045722513380105365,\"y1\":0.0045722513380105365,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3097.3544,\"xref\":\"x\",\"y0\":0.002707202129486784,\"y1\":0.002707202129486784,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3108.484,\"xref\":\"x\",\"y0\":0.004731788468475018,\"y1\":0.004731788468475018,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3123.7872,\"xref\":\"x\",\"y0\":0.00980146934268879,\"y1\":0.00980146934268879,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3133.5256,\"xref\":\"x\",\"y0\":0.013499528610184115,\"y1\":0.013499528610184115,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.00894439335909833,\"y1\":0.00894439335909833,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3153.0024,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.007488013684865834,\"y1\":0.007488013684865834,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3164.132,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.005972921368659259,\"y1\":0.005972921368659259,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3173.8704,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.004253720309487584,\"y1\":0.004253720309487584,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3059.9325252525255,\"x1\":3059.9325252525255,\"xref\":\"x\",\"y0\":0,\"y1\":0.0076664779747402535,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3068.3640404040407,\"x1\":3068.3640404040407,\"xref\":\"x\",\"y0\":0,\"y1\":0.016672754263443067,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3082.4165656565656,\"x1\":3082.4165656565656,\"xref\":\"x\",\"y0\":0,\"y1\":0.004804286094145265,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3093.658585858586,\"x1\":3093.658585858586,\"xref\":\"x\",\"y0\":0,\"y1\":0.004026389180218125,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3104.900606060606,\"x1\":3104.900606060606,\"xref\":\"x\",\"y0\":0,\"y1\":0.005321434602966492,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3120.358383838384,\"x1\":3120.358383838384,\"xref\":\"x\",\"y0\":0,\"y1\":0.01015891479438546,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3130.1951515151513,\"x1\":3130.1951515151513,\"xref\":\"x\",\"y0\":0,\"y1\":0.014335489751832464,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3140.0319191919193,\"x1\":3140.0319191919193,\"xref\":\"x\",\"y0\":0,\"y1\":0.01690758767766308,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3158.300202020202,\"x1\":3158.300202020202,\"xref\":\"x\",\"y0\":0,\"y1\":0.008357004173573936,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3168.1369696969696,\"x1\":3168.1369696969696,\"xref\":\"x\",\"y0\":0,\"y1\":0.006338445734583271,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3176.568484848485,\"x1\":3176.568484848485,\"xref\":\"x\",\"y0\":0,\"y1\":0.004279536987396199,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3062.5744,\"xref\":\"x\",\"y0\":0.007505690087406408,\"y1\":0.007505690087406408,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.008915959990795457,\"y1\":0.008915959990795457,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3079.2688000000003,\"x1\":3087.616,\"xref\":\"x\",\"y0\":0.0045722513380105365,\"y1\":0.0045722513380105365,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3097.3544,\"xref\":\"x\",\"y0\":0.002707202129486784,\"y1\":0.002707202129486784,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3108.484,\"xref\":\"x\",\"y0\":0.004731788468475018,\"y1\":0.004731788468475018,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3123.7872,\"xref\":\"x\",\"y0\":0.00980146934268879,\"y1\":0.00980146934268879,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3087.616,\"x1\":3133.5256,\"xref\":\"x\",\"y0\":0.013499528610184115,\"y1\":0.013499528610184115,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3048.6624,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.00894439335909833,\"y1\":0.00894439335909833,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3153.0024,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.007488013684865834,\"y1\":0.007488013684865834,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3164.132,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.005972921368659259,\"y1\":0.005972921368659259,\"yref\":\"y\"},{\"line\":{\"color\":\"red\",\"width\":2},\"type\":\"line\",\"x0\":3173.8704,\"x1\":3182.2176,\"xref\":\"x\",\"y0\":0.004253720309487584,\"y1\":0.004253720309487584,\"yref\":\"y\"}]},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('f0efc821-18d5-43b5-ad6e-1133ea0ad873');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{},"output_type":"display_data"}],"source":["start_0 = time.time()\n","min_prom = kdy.max() * 0.0\n","pipsize = 0.01\n","max_width_pips = 20\n","# width_range=(1, max_width_pips * pipsize / ticks_per_sample)\n","width_range= max_width_pips * pipsize / ticks_per_sample\n","peaks, peak_props = signal.find_peaks(kdy, prominence=min_prom, width=width_range)\n","\n","peak_x = kdx[peaks]\n","peak_y = kdy[peaks]\n","# ------ prominence lines ------ #\n","left_base = peak_props['left_bases']\n","right_base = peak_props['right_bases']\n","line_x = peak_x\n","line_y0 = peak_y\n","line_y1 = peak_y # - peak_props['prominences']\n","print(\"prom_line elapsed_time :\", time.time() - start_0)\n","\n","\n","for x, y0, y1 in zip(line_x, line_y0, line_y1):\n","    fig.add_shape(type='line',\n","        xref='x', yref='y',\n","        # x0=x, y0=y0, x1=x, y1=y1,\n","        x0=x, y0=0, x1=x, y1=y1,\n","        line=dict(\n","            color='red',\n","            width=2,\n","        )\n","    )\n","\n","# ------ width ------ #\n","left_ips = peak_props['left_ips']\n","right_ips = peak_props['right_ips']\n","# width_x0 = kdx.min() + (left_ips * ticks_per_sample)\n","# width_x1 = kdx.min() + (right_ips * ticks_per_sample)\n","width_x0 = kdx.min() + (left_base * ticks_per_sample)\n","width_x1 = kdx.min() + (right_base * ticks_per_sample)\n","\n","# int_from = kdx.min() + (left_base * ticks_per_sample)\n","# int_to = kdx.min() + (right_base * ticks_per_sample)\n","# [kde.integrate_box_1d(x0, x1) for x0, x1 in zip(int_from, int_to)]\n","\n","width_y = peak_props['width_heights']\n","\n","for x0, x1, y in zip(width_x0, width_x1, width_y):\n","    fig.add_shape(type='line',\n","        xref='x', yref='y',\n","        x0=x0, y0=y, x1=x1, y1=y,\n","        line=dict(\n","            color='red',\n","            width=2,\n","        )\n","    )\n","fig.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zqj944n-WzyZ"},"outputs":[],"source":["# peaks  # ndarray\n","# kdx  # ndarray\n","# kdy  # ndarray\n","# kdx.min()\n","left_base * ticks_per_sample\n","# volume"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rvqv0RGojo9h"},"outputs":[],"source":["print(peak_y)\n","print(peak_props['prominences'])\n","peak_props"]},{"cell_type":"markdown","metadata":{"id":"c2729DJ6h720"},"source":["##### imb."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rucj-iepiR_-"},"outputs":[],"source":["t_df = res_df_.iloc[-120:-100]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1648801482583,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"ktm1aB-Bh7GH","outputId":"6aba1d34-3575-486a-9c29-941dc18a00fc"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1080x648 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 9))\n","nrows, ncols = 1, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        # height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","_ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jMQBhQ1Ljt5Y"},"outputs":[],"source":["def imb_ratio_v4(df, itv):\n","\n","  itv_num = to_itvnum(itv)\n","\n","  close = df['close_{}'.format(itv)].to_numpy()\n","  open = df['open_{}'.format(itv)].to_numpy()\n","\n","  b1_close = df['close_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_open = df['open_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_high = df['high_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_low = df['low_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","  body_range = abs(close - open)\n","  b1_body_range = abs(b1_close - b1_open)\n","\n","  df['body_rel_ratio_{}'.format(itv)] = body_range / b1_body_range\n","\n","  short_body_range = np.where(close <= b1_low, body_range, b1_body_range)\n","  long_body_range = np.where(close >= b1_high, body_range, b1_body_range)\n","\n","  # 추후에 통계 측정해야함 -> bir 에 따른 개별 trader 의 epout / tpep 이라던가 => short 에 양봉은 취급안함 (why use np.nan)\n","  df['short_ir_{}'.format(itv)] = np.where(close < open, (b1_low - close) / short_body_range, np.nan) # close < open & close < b1_low\n","  df['long_ir_{}'.format(itv)] = np.where(close > open, (close - b1_high) / long_body_range, np.nan) # close > open & close > b1_high\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I1Vq_BiKpY3P"},"outputs":[],"source":["def imb_ratio_v3(df, itv):\n","\n","  itv_num = to_itvnum(itv)\n","\n","  # high = df['high_{}'.format(itv)].to_numpy()\n","  # low = df['low_{}'.format(itv)].to_numpy()\n","  # candle_range = high - low\n","\n","  close = df['close_{}'.format(itv)].to_numpy()\n","  open = df['open_{}'.format(itv)].to_numpy()\n","\n","  b1_close = df['close_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_open = df['open_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_high = df['high_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_low = df['low_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","  body_range = abs(close - open)\n","  b1_body_range = abs(b1_close - b1_open)\n","\n","  df['body_rel_ratio_{}'.format(itv)] = body_range / b1_body_range\n","\n","  short_body_ratio = np.where(close <= b1_low, body_range, b1_body_range)\n","  long_body_range = np.where(close >= b1_high, body_range, b1_body_range)\n","\n","  # 추후에 통계 측정해야함 -> bir 에 따른 개별 trader 의 epout / tpep 이라던가 => short 에 양봉은 취급안함 (why use np.nan)\n","  df['short_ir_{}'.format(itv)] = np.where(close < open, (b1_low - close) / body_range, np.nan) # close < open & close < b1_low\n","  df['long_ir_{}'.format(itv)] = np.where(close > open, (close - b1_high) / body_range, np.nan) # close > open & close > b1_high\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":372,"status":"ok","timestamp":1648807273349,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"mtnMUkhwkdrE","outputId":"b7cff2cd-63d3-4109-8753-d2192079e565"},"outputs":[{"data":{"text/plain":["index\n","2022-02-17 08:30:59.999         NaN\n","2022-02-17 08:31:59.999         NaN\n","2022-02-17 08:32:59.999         NaN\n","2022-02-17 08:33:59.999         NaN\n","2022-02-17 08:34:59.999         NaN\n","2022-02-17 08:35:59.999   -0.022654\n","2022-02-17 08:36:59.999   -0.022654\n","2022-02-17 08:37:59.999   -0.022654\n","2022-02-17 08:38:59.999   -0.022654\n","2022-02-17 08:39:59.999   -0.022654\n","2022-02-17 08:40:59.999    0.559585\n","2022-02-17 08:41:59.999    0.559585\n","2022-02-17 08:42:59.999    0.559585\n","2022-02-17 08:43:59.999    0.559585\n","2022-02-17 08:44:59.999    0.559585\n","2022-02-17 08:45:59.999    0.429719\n","2022-02-17 08:46:59.999    0.429719\n","2022-02-17 08:47:59.999    0.429719\n","2022-02-17 08:48:59.999    0.429719\n","2022-02-17 08:49:59.999    0.429719\n","Name: short_ir_5T, dtype: float64"]},"execution_count":116,"metadata":{},"output_type":"execute_result"}],"source":["imb_ratio(t_df, \"5T\")\n","# imb_ratio_v3(t_df, \"5T\")\n","# imb_ratio_v4(t_df, \"5T\")\n","\n","t_df.tail(100).short_ir_5T  # .461871\n","# t_df.iloc[:, -10:]\n","# t_df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":375,"status":"ok","timestamp":1648807284664,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"RVUs1YE_pgBI","outputId":"0ad635a5-e0b9-40c9-c28f-6ebae5494c7b"},"outputs":[{"data":{"text/plain":["index\n","2022-02-17 08:30:59.999         NaN\n","2022-02-17 08:31:59.999         NaN\n","2022-02-17 08:32:59.999         NaN\n","2022-02-17 08:33:59.999         NaN\n","2022-02-17 08:34:59.999         NaN\n","2022-02-17 08:35:59.999   -0.030303\n","2022-02-17 08:36:59.999   -0.030303\n","2022-02-17 08:37:59.999   -0.030303\n","2022-02-17 08:38:59.999   -0.030303\n","2022-02-17 08:39:59.999   -0.030303\n","2022-02-17 08:40:59.999    0.621583\n","2022-02-17 08:41:59.999    0.621583\n","2022-02-17 08:42:59.999    0.621583\n","2022-02-17 08:43:59.999    0.621583\n","2022-02-17 08:44:59.999    0.621583\n","2022-02-17 08:45:59.999    1.000000\n","2022-02-17 08:46:59.999    1.000000\n","2022-02-17 08:47:59.999    1.000000\n","2022-02-17 08:48:59.999    1.000000\n","2022-02-17 08:49:59.999    1.000000\n","Name: short_ir_5T, dtype: float64"]},"execution_count":117,"metadata":{},"output_type":"execute_result"}],"source":["# imb_ratio(t_df, \"5T\")\n","# imb_ratio_v3(t_df, \"5T\")\n","imb_ratio_v4(t_df, \"5T\")\n","\n","t_df.tail(100).short_ir_5T  # .461871\n","# t_df.iloc[:, -10:]\n","# t_df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bieHiKjBkuFL"},"outputs":[],"source":["# ------ rtc 1, 0 개념 ------ #\n","# short_rtc_1 = close\n","# short_rtc_0 = b1_low\n","\n","# long_rtc_1 = close\n","# long_rtc_0 = b1_high\n","\n","# rtc 로 활용하려면, col 로 추가해야할 것 -> 추가할만한 col_name 은 아님\n","# 1. h_candle 인 경우 -> ?\n","#   a. h_candle_v3 먹이고, open_{}.shift(num_itv).to_numpy() 진행 -> ex. res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy() "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3X6bMXJIjPYy"},"outputs":[],"source":["# 1. 현재 종가 - 이전 고가 = imb_range (long)\n","long_imb_range = t_df.close - t_df.high.shift(1)\n","# 2. 이전 저가 - 현재 종가 - imb_range (short)\n","short_imb_range = t_df.low.shift(1) - t_df.close"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q1nEA19v7Qpj"},"outputs":[],"source":["from math import floor\n","\n","\n","def _calc_dev(base_price, price):\n","    return 100 * (price - base_price) / base_price\n","\n","\n","def zigzag(highs, lows, depth=10, dev_threshold=5):\n","    def pivots(src_raw, length, isHigh):\n","        src = list(reversed(src_raw))\n","        bar_index = list(range(len(src)))\n","        for start in range(0, len(src)):\n","            if start + 2 * length + 1 > len(src) - 1:\n","                return\n","            p = 0\n","            if length < len(src) - start:\n","                p = src[start + length]\n","            if length == 0:\n","                yield 0, p\n","            else:\n","                isFound = True\n","                for i in range(start, start + length):\n","                    if isHigh and src[i] > p:\n","                        isFound = False\n","                    if not isHigh and src[i] < p:\n","                        isFound = False\n","                for i in range(start + length + 1, start + 2 * length + 1):\n","                    if isHigh and src[i] >= p:\n","                        isFound = False\n","                    c = not isHigh and src[i] <= p\n","                    if c:\n","                        isFound = False\n","                if isFound:\n","                    yield (bar_index[start + length], p)\n","                else:\n","                    yield None, None\n","\n","    data_highs = [x for x in pivots(highs, floor(depth / 2), True) if x[0]]\n","    data_lows = [x for x in pivots(lows, floor(depth / 2), False) if x[0]]\n","\n","    raw_pairs = []\n","\n","    for i, (ind, p) in enumerate(data_highs):\n","        lows_d = sorted([(ind_l, p_l) for ind_l, p_l in data_lows if ind > ind_l], key=lambda x: x[0])\n","        if lows_d:\n","            lows = lows_d[-1]\n","\n","            if abs(_calc_dev(lows[1], p)) >= dev_threshold:\n","                raw_pairs.append(\n","                    ((ind, p),\n","                     (lows[0], lows[1]))\n","                )\n","\n","    result = []\n","\n","    for (i_h, p_h),(i_l, p_l) in raw_pairs:\n","        if not result:\n","            result.append(((i_h, p_h),(i_l, p_l)))\n","            continue\n","\n","        if i_l == result[-1][1][0]:\n","            if p_h > result[-1][0][1]:\n","                result = result[:-1]\n","            else:\n","                continue\n","\n","        result.append(((i_h, p_h),(i_l, p_l)))\n","\n","    return result\n","\n","# highs, lows = t_df.high.to_numpy(), t_df.low.to_numpy()\n","# zigzag(highs, lows, depth=5, dev_threshold=5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fGlmdyb97j4Q"},"outputs":[],"source":["t_df = res_df_.iloc[-120:]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ropzIp0wUPAA"},"outputs":[],"source":["# import plotly.express as px\n","# import plotly.graph_objects as go\n","\n","def get_dist_plot(c, v, kx, ky):\n","    fig = go.Figure()\n","    fig.add_trace(go.Histogram(name='Vol Profile', x=c, y=v, nbinsx=150, \n","                               histfunc='sum', histnorm='probability density',\n","                               marker_color='#B0C4DE'))\n","    fig.add_trace(go.Scatter(name='KDE', x=kx, y=ky, mode='lines', marker_color='#D2691E'))    \n","\n","    peaks,_ = signal.find_peaks(kdy)\n","    pkx = kdx[peaks]\n","    pky = kdy[peaks]\n","    pk_marker_args=dict(size=10, color='black')\n","    fig.add_trace(go.Scatter(name=\"Peaks\", x=pkx, y=pky, mode='markers', marker=pk_marker_args))\n","    fig.show()\n","\n","    return fig"]},{"cell_type":"markdown","metadata":{"id":"qsyPhNR8yP1c"},"source":["##### dump"]},{"cell_type":"code","source":["_ = wave_range_v8(res_df, config.loc_set.point.p1_period1, config.loc_set.point.p1_period2, ltf_df=None)"],"metadata":{"id":"YAspOgPqRU8b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = res_df\n","period1, period2 = config.loc_set.point.p1_period1, config.loc_set.point.p1_period2\n","ltf_df=None\n","touch_period=50"],"metadata":{"id":"saP02MvMUt1U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","itv = pd.infer_freq(df.index)\n","\n","donchian_channel_v2(df, period1) \n","donchian_channel_v2(df, period2) \n","dc_lower_, dc_upper_ = df['dc_lower_{}{}'.format(itv, period1)].to_numpy(), df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","dc_lower2_, dc_upper2_ = df['dc_lower_{}{}'.format(itv, period2)].to_numpy(), df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","\n","short_base = (dc_lower_ + dc_upper2_) / 2\n","long_base = (dc_upper_ + dc_lower2_) / 2\n","df['short_base_{}{}{}'.format(itv, period1, period2)] = short_base\n","df['long_base_{}{}{}'.format(itv, period1, period2)] = long_base\n","\n","len_df = len(df)   \n","short_open_res = np.ones(len_df)\n","long_open_res = np.ones(len_df)\n","\n","data_cols = ['open', 'high', 'low']\n","open, high, low = [df[col_].to_numpy() for col_ in data_cols]\n","\n","short_upper_touch_idx = pd.Series(np.where(high >= dc_upper2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","short_lower_touch_idx = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","short_lower_touch_idx_min = pd.Series(np.where(low <= dc_lower_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).min().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨    \n","short_open_res *= (high >= short_base) & (short_base >= open) & (short_upper_touch_idx < short_lower_touch_idx)\n","\n","\n","df['short_upper_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_upper_touch_idx\n","df['short_lower_touch_idx_{}{}{}'.format(itv, period1, period2)] = short_lower_touch_idx\n","# df['short_lower_touch_idx_min_{}{}{}'.format(itv, period1, period2)] = short_lower_touch_idx_min\n","df['short_upper_touch_line_{}{}{}'.format(itv, period1, period2)] = get_line(short_upper_touch_idx, dc_upper2_)\n","df['short_lower_touch_line_{}{}{}'.format(itv, period1, period2)] = get_line(short_lower_touch_idx, dc_lower_)\n","df['short_wave_point_{}{}{}'.format(itv, period1, period2)] = short_open_res\n","\n","long_lower_touch_idx = pd.Series(np.where(low <= dc_lower2_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()       \n","long_upper_touch_idx = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()    \n","long_upper_touch_idx_min = pd.Series(np.where(high >= dc_upper_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).min().to_numpy()    \n","long_open_res *= (open >= long_base) & (long_base >= low) & (long_lower_touch_idx < long_upper_touch_idx)\n","\n","wave_min_bars = 20\n","wave_max_bars = 40\n","short_p1_idx = np.where(res_df['short_wave_point_{}{}{}'.format(itv, period1, period2)], np.arange(len_df), np.nan)\n","short_prev_p1_idx = pd.Series(short_p1_idx).rolling(wave_max_bars, min_periods=1).min().to_numpy()\n","\n","short_high = np.full_like(high, np.nan)\n","short_valid_idx = (short_p1_idx - short_prev_p1_idx) >= wave_min_bars\n","short_high[short_valid_idx] = np.array([np.min(high[int(iin):int(iout)]) for iin, iout in zip(short_prev_p1_idx[short_valid_idx], short_p1_idx[short_valid_idx])])\n","\n","long_p1_idx = np.where(res_df['long_wave_point_{}{}{}'.format(itv, period1, period2)], np.arange(len_df), np.nan)\n","long_prev_p1_idx = pd.Series(long_p1_idx).rolling(wave_max_bars, min_periods=1).min().to_numpy()\n","\n","long_low = np.full_like(low, np.nan)\n","long_valid_idx = (long_p1_idx - long_prev_p1_idx) >= wave_min_bars\n","long_low[long_valid_idx] = np.array([np.min(low[int(iin):int(iout)]) for iin, iout in zip(long_prev_p1_idx[long_valid_idx], long_p1_idx[long_valid_idx])])\n"],"metadata":{"id":"A21BXePPSPcl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(len(long_p1_idx))\n","print(np.sum(np.isnan(long_p1_idx)))\n","print(np.sum(np.isnan(long_prev_p1_idx)))"],"metadata":{"id":"h8YQptgzU2kZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# min_low[~equal_idx] = \n","# long_p1_idx[~np.isnan(long_p1_idx)]"],"metadata":{"id":"xAbtsLi8VRNm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# valid_idx\n","# print(long_low)\n","print(long_low[valid_idx])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b01vSN6SWZYX","executionInfo":{"status":"ok","timestamp":1650364149142,"user_tz":-540,"elapsed":325,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"27297531-56d1-4130-8fdf-b15ecb317bc0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 386.2   386.2   387.96 ... 3058.58 3058.58 3052.65]\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M3OxtsKmEmjr"},"outputs":[],"source":["comp_col_list = res_df_.columns"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1649654863270,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"iuNX7A7MEnYk","outputId":"1f7a942f-b03e-46d4-904b-bac88624f2bb"},"outputs":[{"data":{"text/plain":["Index(['open', 'high', 'low', 'close', 'volume', 'dc_upper_5T', 'dc_lower_5T', 'dc_base_5T', 'dc_upper_15T', 'dc_lower_15T', 'dc_base_15T', 'bb_upper_5T', 'bb_lower_5T', 'bb_upper_15T', 'bb_lower_15T'], dtype='object')"]},"execution_count":102,"metadata":{},"output_type":"execute_result"}],"source":["comp_col_list"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D3UNq1Y4Ef1V"},"outputs":[],"source":["db_res_df = res_df_.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6tJ-B_GhEvHx"},"outputs":[],"source":["gap_df = res_df_[comp_col_list] - db_res_df"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":334,"status":"ok","timestamp":1649654897410,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"nEuH8TKrFA5J","outputId":"bb20a375-f7dd-439d-f10a-c7763766ff15"},"outputs":[{"data":{"text/plain":["open            0.000000e+00\n","high            0.000000e+00\n","low             0.000000e+00\n","close           0.000000e+00\n","volume          0.000000e+00\n","dc_upper_5T     0.000000e+00\n","dc_lower_5T     9.094947e-13\n","dc_base_5T      0.000000e+00\n","dc_upper_15T    0.000000e+00\n","dc_lower_15T    9.094947e-13\n","dc_base_15T     0.000000e+00\n","bb_upper_5T     0.000000e+00\n","bb_lower_5T     4.547474e-13\n","bb_upper_15T    0.000000e+00\n","bb_lower_15T    4.547474e-13\n","dtype: float64"]},"execution_count":106,"metadata":{},"output_type":"execute_result"}],"source":["gap_df.max() # .tail(1000)  # [gap_df > 0.1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9VOxiJB1yUTI"},"outputs":[],"source":["\n","def fill_na(arr_, iin, iout, fill_value):\n","  arr_[iin:iout + 1] = fill_value\n","\n","  # 1. cross_point 찾기\n","  #   a. cross_over & cross_under\n","# def wave_range(t_df):\n","tf_entry = 'T'\n","tf_entry_num = to_itvnum(tf_entry)\n","base_shift_size = 3 # 3T used\n","\n","np_timeidx = np.array([intmin_np(date_) for date_ in t_df.index.to_numpy()])\n","\n","close = t_df.close.to_numpy()\n","b1_close = t_df.close.shift(tf_entry_num).to_numpy()  # 일단, 1 로 설정\n","dc_base_3T = t_df.dc_base_3T.to_numpy()\n","b1_dc_base_3T = t_df.dc_base_3T.shift(3).to_numpy()\n","\n","crossover = (close > dc_base_3T) & (b1_dc_base_3T > b1_close) & (np_timeidx % tf_entry_num == tf_entry_num - 1)\n","crossunder = (close < dc_base_3T) & (b1_dc_base_3T < b1_close) & (np_timeidx % tf_entry_num == tf_entry_num - 1)\n","\n","# 1. crossover ~ crossunder's high (over 과 under 의 index 포함해야함)\n","# 2. crossunder ~ crossover's low\n","high = t_df.high.to_numpy()\n","low = t_df.low.to_numpy()\n","\n","# print(np.sum(crossover))\n","# print(np.sum(crossunder))\n","\n","# pairing -> 더 긴 배열의 시작 index 가 더 작음\n","co_idx = np.argwhere(crossover)\n","cu_idx = np.argwhere(crossunder)\n","\n","print(co_idx)\n","print(cu_idx)\n","\n","# 2. 길이가 다른 경우\n","#  a. 길이가 긴 쪽이 먼저\n","if len(co_idx) > len(cu_idx):\n","  upper_zone = np.hstack((co_idx[:-1], cu_idx))  \n","  lower_zone = np.hstack((cu_idx, co_idx[1:]))  \n","elif len(co_idx) < len(cu_idx):\n","  upper_zone = np.hstack((co_idx, cu_idx[1:]))  \n","  lower_zone = np.hstack((cu_idx[:-1], co_idx))  \n","else:\n","  # 1. 길이가 같은 경우\n","  #   뭐가 먼저인지 판단하는 logic\n","  if co_idx[0] < cu_idx[0]:\n","    #   a. co 가 먼저인 경우\n","    upper_zone = np.hstack((co_idx, cu_idx))  \n","    lower_zone = np.hstack((cu_idx[:-1], co_idx[1:]))  \n","  else:\n","    #   b. cu 가 먼저인 경우\n","    upper_zone = np.hstack((co_idx[:-1], cu_idx[1:]))  \n","    lower_zone = np.hstack((cu_idx, co_idx))  \n","\n","# print(upper_zone)\n","# print(lower_zone)\n","\n","# make envelope\n","wave_high = np.full_like(high, np.nan)\n","wave_low = np.full_like(low, np.nan)\n","\n","fill_upper_zone = np.hstack((upper_zone[:-1, [1]], upper_zone[1:, [1]]))\n","fill_lower_zone = np.hstack((lower_zone[:-1, [1]], lower_zone[1:, [1]]))\n","\n","for items in zip(fill_upper_zone, upper_zone):\n","  print(items)\n","\n","[fill_na(wave_high, f_iin, f_iout, high[iin:iout + 1].max()) for (f_iin, f_iout), (iin, iout) in zip(fill_upper_zone, upper_zone)]\n","[fill_na(wave_low, f_iin, f_iout, low[iin:iout + 1].min()) for (f_iin, f_iout), (iin, iout) in zip(fill_lower_zone, lower_zone)]\n","# [high[iin:iout + 1].max() for iin, iout in upper_zone]\n","# [low[iin:iout + 1].min() for iin, iout in lower_zone]\n","\n","# t_df['fill_wave_high'] = pd.Series(wave_high).bfill().to_numpy()\n","# t_df['fill_wave_low'] = pd.Series(wave_low).bfill().to_numpy()\n","# t_df['fill_wave_high'] = pd.Series(wave_high).ffill().to_numpy()\n","# t_df['fill_wave_low'] = pd.Series(wave_low).ffill().to_numpy()\n","t_df['fill_wave_high'] = wave_high\n","t_df['fill_wave_low'] = wave_low\n","\n","  # return "]},{"cell_type":"markdown","metadata":{"id":"xpyP5t8Ht_pE"},"source":["### calc recursive indi's min_period"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N1Hbm4OA4Tkk"},"outputs":[],"source":["ticker_prcn = get_precision_by_price(res_df.close.iloc[-1]) + 2\n","\n","target_len = 300000\n","slice_len_list = list(range(50, 10000, 100))\n","slice_len_list.insert(0, target_len)\n","\n","start_0 = time.time()\n","# prev_int_, prev_pnts_ = None, None\n","offset = 1\n","\n","for sl_idx, sample_len in enumerate(slice_len_list):\n","\n","  sample_df = res_df.iloc[-sample_len -offset:-offset]\n","  sample_len2 = sample_len\n","\n","  # --------- input using indi.s --------- #\n","  # res = ema_v0(sample_df['close'], 190)\n","  res = rsi(sample_df, 14)\n","\n","    #    to_htf()    #\n","  # df_5T = to_htf(sample_df, itv_='5T', offset='1h')\n","  # sample_len2 = len(df_5T)\n","\n","  # # --------- input using htf_indi. --------- #\n","  # res = ema(df_5T['close'], 195)\n","  # -------------------------------------- #\n","\n","  res_last_row = res.iloc[-1]\n","  if pd.isnull(res_last_row):\n","    continue\n","\n","  # print(res_last_row)\n","  # break\n","\n","  # sample_df = sample_df.join(to_lower_tf_v2(sample_df, df_5T, [-1]), how='inner')\n","\n","\n","  #   자리수 분할 계산    #\n","  int_, points_ = str(res_last_row).split('.')\n","  pnts_ = points_[:ticker_prcn]\n","\n","  if sl_idx == 0:\n","    target_int_ = int_\n","    target_pnts_ = pnts_\n","    print(\"target {} ({}) -> {} {}\".format(sample_len, sample_len2, int_, points_))\n","\n","  else:\n","    if target_int_ == int_ and target_pnts_ == pnts_:\n","      # print(sample_len, \"({})\".format(sample_len2), '->', int_, pnts_, end='\\n\\n')\n","      print(\"{} ({}) -> {} {}\\n\".format(sample_len, sample_len2, int_, points_))\n","      break\n","\n","print(time.time() - start_0)  # (1301)(1361)(1301)"]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D"},"source":["## import utils & config"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"SeJan_0t95yL","executionInfo":{"status":"ok","timestamp":1650671514106,"user_tz":-540,"elapsed":2058,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["frame_ver = \"0114_htf\"\n","ID_arr = np.array(['v3', 'v5_2'])\n","\n","utils_public_name = \"{}.utils.{}_utils_public\".format(strat_pkg, frame_ver)\n","utils_public_lib = importlib.import_module(utils_public_name)\n","utils_public = utils_public_lib   # temporary\n","\n","u_name_list = [\"{}.utils.{}_utils_{}\".format(strat_pkg, frame_ver, id_) for id_ in ID_arr]\n","utils_arr = np.array([importlib.import_module(u_name) for u_name in u_name_list])\n","\n","config_name_list = [\"{}_config_{}.json\".format(frame_ver, id_) for id_ in ID_arr]\n","cfg_path_list = [os.path.join(current_path, strat_pkg, \"config\", name_) for name_ in config_name_list]\n","cfg_file_list = [open(cfg_path) for cfg_path in cfg_path_list]\n","config_arr = np.array([EasyDict(json.load(cfg_)) for cfg_ in cfg_file_list])\n","\n","# ------ opened files should be closed --> 닫지 않으면 reopen 시 error occurs ------ #\n","_ = [cfg_.close() for cfg_ in cfg_file_list]\n","show_plot = 1   # idep's var - do not touch"]},{"cell_type":"markdown","metadata":{"id":"leSQlImg4_9L"},"source":["### utils_"]},{"cell_type":"code","execution_count":45,"metadata":{"id":"CB2yZdQ95Cdg","executionInfo":{"status":"ok","timestamp":1650672646157,"user_tz":-540,"elapsed":1186,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# import pandas as pd\n","# import numpy as np\n","# import logging\n","\n","sys_log = logging.getLogger()\n","\n","def get_line(touch_idx, rtc_):\n","    touch_idx_copy = touch_idx.copy()\n","\n","    nan_idx = np.isnan(touch_idx_copy)\n","    touch_idx_copy[nan_idx] = 0  # for indexing array\n","    touch_line = rtc_[touch_idx_copy.astype(int)].copy()\n","    touch_line[nan_idx] = np.nan  # for true comp.\n","\n","    return touch_line\n","\n","\n","def enlist_rtc(res_df, config, np_timeidx):\n","    selection_id = config.selection_id\n","    # ------------ rtc_gap ------------ #\n","    short_epout_1_, long_epout_1_ = 'short_epout_1_{}'.format(selection_id), 'long_epout_1_{}'.format(selection_id)\n","    short_epout_0_, long_epout_0_ = 'short_epout_0_{}'.format(selection_id), 'long_epout_0_{}'.format(selection_id)\n","    short_tp_1_, long_tp_1_ = 'short_tp_1_{}'.format(selection_id), 'long_tp_1_{}'.format(selection_id)\n","    short_tp_0_, long_tp_0_ = 'short_tp_0_{}'.format(selection_id), 'long_tp_0_{}'.format(selection_id)\n","\n","    # b1_itv_num = to_itvnum(config.tr_set.p2_itv0)\n","    # b2_itv_num = to_itvnum(config.tr_set.p2_itv0) * 2  # multi 2 for imb_v2\n","\n","    itv = config.tr_set.p1_itv1\n","    period1 = config.tr_set.p1_period1\n","    period2 = config.tr_set.p1_period2\n","\n","    res_df[short_tp_1_] = res_df['dc_lower_{}{}'.format(itv, period1)]\n","    # res_df[short_tp_0_] = res_df['dc_upper_{}{}'.format(itv, period2)]\n","    res_df[short_tp_0_] = res_df['dc_upper_15T4']\n","    res_df[long_tp_1_] = res_df['dc_upper_{}{}'.format(itv, period1)]\n","    # res_df[long_tp_0_] = res_df['dc_lower_{}{}'.format(itv, period2)]\n","    res_df[long_tp_0_] = res_df['dc_lower_15T4']\n","\n","    # res_df[short_tp_1_] = res_df['short_wave_low_{}{}{}'.format(itv, period1, period2)]\n","    # res_df[short_tp_0_] = res_df['short_wave_high_{}{}{}'.format(itv, period1, period2)]\n","    # res_df[long_tp_1_] = res_df['long_wave_high_{}{}{}'.format(itv, period1, period2)]\n","    # res_df[long_tp_0_] = res_df['long_wave_low_{}{}{}'.format(itv, period1, period2)]\n","\n","    if config.tr_set.p2_itv1 != \"None\":\n","        p2_period1 = config.tr_set.p2_period1\n","        p2_period2 = config.tr_set.p2_period2\n","        res_df[short_epout_1_] = res_df['dc_lower_{}{}'.format(config.tr_set.p2_itv1, p2_period1)]\n","        res_df[short_epout_0_] = res_df['dc_upper_{}{}'.format(config.tr_set.p2_itv0, p2_period2)]\n","        res_df[long_epout_1_] = res_df['dc_upper_{}{}'.format(config.tr_set.p2_itv1, p2_period1)]\n","        res_df[long_epout_0_] = res_df['dc_lower_{}{}'.format(config.tr_set.p2_itv0, p2_period2)]\n","    else:\n","        res_df[short_epout_1_] = res_df['dc_lower_{}{}'.format(itv, period1)]\n","        res_df[short_epout_0_] = res_df['dc_upper_15T4']\n","        res_df[long_epout_1_] = res_df['dc_upper_{}{}'.format(itv, period1)]\n","        res_df[long_epout_0_] = res_df['dc_lower_15T4']\n","\n","        # res_df[short_epout_1_] = res_df['short_wave_low_{}{}{}'.format(itv, period1, period2)]\n","        # res_df[short_epout_0_] = res_df['short_wave_high_{}{}{}'.format(itv, period1, period2)]\n","        # res_df[long_epout_1_] = res_df['long_wave_high_{}{}{}'.format(itv, period1, period2)]\n","        # res_df[long_epout_0_] = res_df['long_wave_low_{}{}{}'.format(itv, period1, period2)]\n","\n","    # ------ inversion ------ #\n","    if config.pos_set.short_inversion or config.pos_set.long_inversion:\n","        res_df.rename({short_tp_1_: long_tp_1_, long_tp_1_: short_tp_1_}, axis=1, inplace=True)\n","        res_df.rename({short_tp_0_: long_tp_0_, long_tp_0_: short_tp_0_}, axis=1, inplace=True)\n","        res_df.rename({short_epout_1_: long_epout_1_, long_epout_1_: short_epout_1_}, axis=1, inplace=True)\n","        res_df.rename({short_epout_0_: long_epout_0_, long_epout_0_: short_epout_0_}, axis=1, inplace=True)\n","\n","    res_df['short_tp_gap_{}'.format(selection_id)] = abs(res_df[short_tp_1_] - res_df[short_tp_0_])\n","    res_df['long_tp_gap_{}'.format(selection_id)] = abs(res_df[long_tp_1_] - res_df[long_tp_0_])\n","    res_df['short_epout_gap_{}'.format(selection_id)] = abs(res_df[short_epout_1_] - res_df[short_epout_0_])\n","    res_df['long_epout_gap_{}'.format(selection_id)] = abs(res_df[long_epout_1_] - res_df[long_epout_0_])\n","\n","    # ------------ dtk_gap ------------ #\n","    # res_df['short_dtk_1_{}'.format(selection_id)] = res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]\n","    # res_df['short_dtk_0_{}'.format(selection_id)] = res_df['dc_upper_%s' % config.loc_set.zone.dtk_itv]\n","    # res_df['long_dtk_1_{}'.format(selection_id)] = res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]\n","    # res_df['long_dtk_0_{}'.format(selection_id)] = res_df['dc_lower_%s' % config.loc_set.zone.dtk_itv]\n","\n","    # res_df['short_dtk_gap_{}'.format(selection_id)] = abs(\n","    #     res_df['short_dtk_0_{}'.format(selection_id)] - res_df['short_dtk_1_{}'.format(selection_id)])\n","    # res_df['long_dtk_gap_{}'.format(selection_id)] = abs(\n","    #     res_df['long_dtk_1_{}'.format(selection_id)] - res_df['long_dtk_0_{}'.format(selection_id)])\n","\n","    return res_df\n","\n","\n","def enlist_tr(res_df, config, np_timeidx, mode='OPEN', show_detail=True):\n","    selection_id = config.selection_id\n","    len_df = len(res_df)\n","    short_open_res = np.ones(len_df)\n","    long_open_res = np.ones(len_df)\n","\n","    short_tp_1_col, short_tp_0_col, short_tp_gap_col = 'short_tp_1_{}'.format(selection_id), 'short_tp_0_{}'.format(\n","        selection_id), 'short_tp_gap_{}'.format(selection_id)\n","    long_tp_1_col, long_tp_0_col, long_tp_gap_col = 'long_tp_1_{}'.format(selection_id), 'long_tp_0_{}'.format(\n","        selection_id), 'long_tp_gap_{}'.format(selection_id)\n","    short_epout_1_col, short_epout_0_col, short_epout_gap_col = 'short_epout_1_{}'.format(selection_id), 'short_epout_0_{}'.format(\n","        selection_id), 'short_epout_gap_{}'.format(selection_id)\n","    long_epout_1_col, long_epout_0_col, long_epout_gap_col = 'long_epout_1_{}'.format(selection_id), 'long_epout_0_{}'.format(\n","        selection_id), 'long_epout_gap_{}'.format(selection_id)\n","\n","    tp_cols = [short_tp_1_col, short_tp_0_col, short_tp_gap_col, long_tp_1_col, long_tp_0_col, long_tp_gap_col]  # Todo - public_indi 이전에 해야할지도 모름\n","    epout_cols = [short_epout_1_col, short_epout_0_col, short_epout_gap_col, long_epout_1_col, long_epout_0_col,\n","                  long_epout_gap_col]  # Todo - public_indi 이전에 해야할지도 모름\n","    data_cols = ['open', 'high', 'low', 'close']  # Todo - public_indi 이전에 해야할지도 모름 # 'close', 'haopen', 'hahigh', 'halow', 'haclose'\n","\n","    short_tp_1_, short_tp_0_, short_tp_gap_, long_tp_1_, long_tp_0_, long_tp_gap_ = [res_df[col_].to_numpy() for col_ in tp_cols]\n","    short_epout_1_, short_epout_0_, short_epout_gap_, long_epout_1_, long_epout_0_, long_epout_gap_ = [res_df[col_].to_numpy() for col_ in epout_cols]\n","    open, high, low, close = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","    # ---------------- point - support_confirmer---------------- #\n","    point1_to2_period = 60\n","    p1_itv1 = config.tr_set.p1_itv1\n","    p1_period1 = config.tr_set.p1_period1\n","    p1_period2 = config.tr_set.p1_period2\n","    p2_itv1 = config.tr_set.p2_itv1\n","    p2_period1 = config.tr_set.p2_period1\n","    p2_period2 = config.tr_set.p2_period2\n","\n","    if p2_itv1 != \"None\":\n","        short_point1_on2_idx = pd.Series(\n","            np.where(res_df['short_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)], np.arange(len_df), np.nan)).rolling(point1_to2_period,\n","                                                                                                                                    min_periods=1).max().to_numpy()  # period 내의 max_point1_idx\n","        long_point1_on2_idx = pd.Series(\n","            np.where(res_df['long_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)], np.arange(len_df), np.nan)).rolling(point1_to2_period,\n","                                                                                                                                   min_periods=1).max().to_numpy()\n","\n","        short_point2_idx = pd.Series(\n","            np.where(res_df['short_wave_point_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)], np.arange(len_df), np.nan)).to_numpy()\n","        long_point2_idx = pd.Series(\n","            np.where(res_df['long_wave_point_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)], np.arange(len_df), np.nan)).to_numpy()\n","\n","        res_df['short_point_idxgap_{}'.format(selection_id)] = short_point2_idx - short_point1_on2_idx\n","        res_df['long_point_idxgap_{}'.format(selection_id)] = long_point2_idx - long_point1_on2_idx\n","\n","        # ------ p1 & p2 ------ #\n","        short_open_res *= ~np.isnan(res_df['short_point_idxgap_{}'.format(selection_id)].to_numpy())\n","        long_open_res *= ~np.isnan(res_df['long_point_idxgap_{}'.format(selection_id)].to_numpy())\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ p2 amax > p1_idx (long) ------ #\n","        short_open_res *= res_df['short_upper_touch_idx_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy() > short_point1_on2_idx\n","        long_open_res *= res_df['long_lower_touch_idx_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy() > long_point1_on2_idx\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ higher low (long) ------ #\n","        # short_a_line1_on2_ = get_line(short_point1_on2_idx, res_df['short_a_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy())\n","        # long_a_line1_on2_ = get_line(long_point1_on2_idx, res_df['long_a_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy())\n","\n","        # short_a_line2_ = res_df['short_a_line_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy()\n","        # long_a_line2_ = res_df['long_a_line_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy()\n","\n","        # short_open_res *= short_a_line1_on2_ >= short_a_line2_\n","        # long_open_res *= long_a_line1_on2_ <= long_a_line2_\n","\n","        # print(np.sum(long_open_res == 1))\n","\n","    else:  \n","        # ------ p1 only ------ #\n","        res_df['short_point_idxgap_{}'.format(selection_id)] = 0  # default\n","        res_df['long_point_idxgap_{}'.format(selection_id)] = 0\n","\n","        # ------ lower_touch > upper_touch (long) ------ #\n","        # short_open_res *= res_df['short_upper_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > res_df['short_lower_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy()\n","        # long_open_res *= res_df['long_lower_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > res_df['long_upper_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy()\n","\n","        # # ------ base_3T cross ------ #\n","        # dc_base_3T = res_df['dc_base_3T'].to_numpy()\n","        # b1_close = res_df['close'].shift(1).to_numpy()\n","        # short_open_res *= (b1_close > dc_base_3T) & (dc_base_3T > close)\n","        # long_open_res *= (b1_close < dc_base_3T) & (dc_base_3T < close)\n","\n","        # # ------ lower_touch_line < base_5T (long) ------ #\n","        # dc_base_5T = res_df['dc_base_5T'].to_numpy()        \n","        # short_open_res *= res_df['short_upper_touch_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > dc_base_5T\n","        # long_open_res *= res_df['long_lower_touch_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() < dc_base_5T      \n","\n","        # ------ ppr ------ #\n","        # pumping_ratio(res_df, config, p1_itv1, p1_period1, p1_period2)              \n","        \n","        # ------ wave_point ------ #\n","        # short_open_res *= res_df['short_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy().astype(bool)\n","        # long_open_res *= res_df['long_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy().astype(bool)\n","\n","        # ------ cppr 로 양음봉 check ------ # \n","        tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","\n","        res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)] = res_df['cppr_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry)\n","        b1_cppr_ = res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()  # check b1's cppr in ep_loc\n","        cppr_ = res_df['cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        short_open_res *= (b1_cppr_ > 0) & (cppr_ < 0)\n","        long_open_res *= (b1_cppr_ < 0) & (cppr_ > 0)\n","\n","        res_df['b1_updbr'] = res_df['dc_upper_15T4_br'].shift(tf_entry).to_numpy()\n","        res_df['b1_lwdbr'] = res_df['dc_lower_15T4_br'].shift(tf_entry).to_numpy()\n","        \n","        res_df['b1_updbr_cppr'] = b1_cppr_ * res_df['b1_updbr'].to_numpy()\n","        res_df['b1_lwdbr_cppr'] = b1_cppr_ * res_df['b1_lwdbr'].to_numpy()\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ dc_cross ------ #\n","        b1_dc_upper_15T4 = res_df['dc_upper_15T4'].shift(tf_entry).to_numpy()\n","        b1_dc_lower_15T4 = res_df['dc_lower_15T4'].shift(tf_entry).to_numpy()\n","        # b1_high_ = res_df['high_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        # b1_low_ = res_df['low_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        # short_open_res *= b1_high_ > b1_dc_upper_15T4\n","        # long_open_res *= b1_low_ < b1_dc_lower_15T4\n","        \n","        # ------ dc_cc ------ #\n","        b1_close_ = res_df['close_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        short_open_res *= b1_close_ > b1_dc_upper_15T4\n","        long_open_res *= b1_close_ < b1_dc_lower_15T4\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ empty_space ------ #       \n","        dc_upper_15T4 = res_df['dc_upper_15T4'].to_numpy()\n","        dc_lower_15T4 = res_df['dc_lower_15T4'].to_numpy() \n","        high_ = res_df['high_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        low_ = res_df['low_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        short_open_res *= high_ < dc_upper_15T4\n","        long_open_res *= low_ > dc_lower_15T4\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ tf_entry ------ #\n","        short_open_res *= np_timeidx % tf_entry == (tf_entry - 1)\n","        long_open_res *= np_timeidx % tf_entry == (tf_entry - 1) \n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","    res_df['short_open_{}'.format(selection_id)] = short_open_res\n","    res_df['long_open_{}'.format(selection_id)] = long_open_res\n","\n","    # ------------------ tr_set ------------------ #\n","    # ------------ tpep ------------ #\n","    tpg = config.tr_set.tp_gap\n","    res_df['short_tp_{}'.format(selection_id)] = short_tp_1_ - short_tp_gap_ * tpg\n","    res_df['long_tp_{}'.format(selection_id)] = long_tp_1_ + long_tp_gap_ * tpg\n","\n","    # ------ limit_ep ------ #\n","    if config.ep_set.entry_type == \"LIMIT\":\n","        epg = config.tr_set.ep_gap\n","        res_df['short_ep_{}'.format(selection_id)] = short_epout_0_ + short_epout_gap_ * epg\n","        res_df['long_ep_{}'.format(selection_id)] = long_epout_0_ - long_epout_gap_ * epg\n","\n","    # ------ market_ep ------ #\n","    else:\n","        res_df['short_ep_{}'.format(selection_id)] = res_df['close']\n","        res_df['long_ep_{}'.format(selection_id)] = res_df['close']\n","\n","    # ------------ out ------------ #\n","    outg = config.tr_set.out_gap\n","    res_df['short_out_{}'.format(selection_id)] = short_epout_0_ + short_epout_gap_ * outg\n","    res_df['long_out_{}'.format(selection_id)] = long_epout_0_ - long_epout_gap_ * outg\n","\n","    # ------------ point validation ------------ #\n","    short_tp_ = res_df['short_tp_{}'.format(selection_id)].to_numpy()\n","    short_ep_ = res_df['short_ep_{}'.format(selection_id)].to_numpy()\n","    short_out_ = res_df['short_out_{}'.format(selection_id)].to_numpy()\n","    short_open_res *= (short_tp_ < short_ep_) & (short_ep_ < short_out_)\n","    res_df['short_open_{}'.format(selection_id)] = short_open_res * (not config.pos_set.short_ban)\n","\n","    long_tp_ = res_df['long_tp_{}'.format(selection_id)].to_numpy()\n","    long_ep_ = res_df['long_ep_{}'.format(selection_id)].to_numpy()\n","    long_out_ = res_df['long_out_{}'.format(selection_id)].to_numpy()\n","    long_open_res *= (long_tp_ > long_ep_) & (long_ep_ > long_out_)\n","    res_df['long_open_{}'.format(selection_id)] = long_open_res * (not config.pos_set.long_ban)\n","\n","    if show_detail:\n","      sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","      sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","    \n","    # ------------ wave_bias ------------ #\n","    wb_tpg = config.tr_set.wb_tp_gap\n","    wb_outg = config.tr_set.wb_out_gap\n","    res_df['short_wave_1_{}'.format(selection_id)] = short_tp_1_ - short_tp_gap_ * wb_tpg\n","    res_df['long_wave_1_{}'.format(selection_id)] = long_tp_1_ + long_tp_gap_ * wb_tpg\n","    res_df['short_wave_0_{}'.format(selection_id)] = short_epout_0_ + short_epout_gap_ * wb_outg\n","    res_df['long_wave_0_{}'.format(selection_id)] = long_epout_0_ - long_epout_gap_ * wb_outg\n","\n","    # ------ tr ------ #\n","    res_df['short_tr_{}'.format(selection_id)] = abs(\n","        (short_ep_ / short_tp_ - config.trader_set.limit_fee - 1) / (short_ep_ / short_out_ - config.trader_set.market_fee - 1))\n","    res_df['long_tr_{}'.format(selection_id)] = abs(\n","        (long_tp_ / long_ep_ - config.trader_set.limit_fee - 1) / (long_out_ / long_ep_ - config.trader_set.market_fee - 1))\n","\n","    # ------ zoned_ep ------ #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        # res_df['short_ep_org_{}'.format(selection_id)] = res_df['short_ep_{}'.format(selection_id)].copy()\n","        # res_df['long_ep_org_{}'.format(selection_id)] = res_df['long_ep_{}'.format(selection_id)].copy()\n","        res_df['short_ep2_{}'.format(selection_id)] = short_epout_1_ + short_epout_gap_ * config.tr_set.c_ep_gap\n","        res_df['long_ep2_{}'.format(selection_id)] = long_epout_1_ - long_epout_gap_ * config.tr_set.c_ep_gap\n","\n","    # ------ zoned_out ------ #\n","    if config.tr_set.t_out_gap != \"None\":\n","        # res_df['short_out_org_{}'.format(selection_id)] = res_df['short_out_{}'.format(selection_id)].copy()\n","        # res_df['long_out_org_{}'.format(selection_id)] = res_df['long_out_{}'.format(selection_id)].copy()\n","        res_df['short_out2_{}'.format(selection_id)] = res_df['short_epout_0_{}'.format(selection_id)] + res_df[\n","            'short_epout_gap_{}'.format(selection_id)] * config.tr_set.t_out_gap\n","        res_df['long_out2_{}'.format(selection_id)] = res_df['long_epout_0_{}'.format(selection_id)] - res_df[\n","            'long_epout_gap_{}'.format(selection_id)] * config.tr_set.t_out_gap\n","\n","    return res_df\n"]},{"cell_type":"markdown","metadata":{"id":"HKdUKKl-483N"},"source":["### utils_public"]},{"cell_type":"code","execution_count":93,"metadata":{"id":"nzOYWA2kqZ0d","executionInfo":{"status":"ok","timestamp":1650674363350,"user_tz":-540,"elapsed":5897,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["from funcs.funcs_indicator import *\n","from funcs.funcs_trader import *\n","import logging\n","from ast import literal_eval\n","\n","pd.set_option('mode.chained_assignment',  None)\n","sys_log = logging.getLogger()\n","\n","\n","class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def lvrg_set(res_df, config, open_side, ep_, out_, fee, limit_leverage=50):\n","    selection_id = config.selection_id\n","    if not pd.isnull(out_) and not config.lvrg_set.static_lvrg:\n","        if selection_id in ['v3']:\n","            if open_side == OrderSide.SELL:\n","                loss = out_ / ep_\n","            else:\n","                loss = ep_ / out_\n","        else:  # 이 phase 가 정석, 윗 phase 는 결과가 수익 극대화라 사용함\n","            if open_side == OrderSide.SELL:\n","                loss = ep_ / out_\n","            else:\n","                loss = out_ / ep_\n","\n","        config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(loss - 1 - (fee + config.trader_set.market_fee))\n","\n","    # ------------ leverage rejection ------------ #\n","    # 감당하기 힘든 fluc. 의 경우 진입하지 않음 - dynamic_lvrg 사용 경우\n","    if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","        # if config.lvrg_set.leverage >= 1 and config.lvrg_set.lvrg_rejection:\n","        return None\n","\n","    if not config.lvrg_set.allow_float:\n","        config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","    config.lvrg_set.leverage = min(limit_leverage, max(config.lvrg_set.leverage, 1))\n","\n","    return config.lvrg_set.leverage\n","\n","\n","def sync_check(df_, config, order_side=\"OPEN\", row_slice=True):\n","    try:\n","        make_itv_list = [m_itv.replace('m', 'T') for m_itv in literal_eval(config.trader_set.itv_list)]\n","        row_list = literal_eval(config.trader_set.row_list)\n","        rec_row_list = literal_eval(config.trader_set.rec_row_list)\n","        offset_list = literal_eval(config.trader_set.offset_list)\n","\n","        assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        htf_df_list = [to_htf(df_, itv_=itv_, offset=offset_) for itv_idx, (itv_, offset_)\n","                       in enumerate(zip(make_itv_list, offset_list)) if itv_idx != 0]  #\n","        htf_df_list.insert(0, df_)\n","\n","        # for htf_df_ in htf_df_list:\n","        #     print(htf_df_.tail())\n","\n","        #       Todo        #\n","        #        1. row_list calc.\n","        #           a. indi. 를 만들기 위한 최소 period 가 존재하고, 그 indi. 를 사용한 lb_period 가 존재함\n","        #           b. => default_period + lb_period\n","        #               i. from sync_check, public_indi, ep_point2, ep_dur 의 tf 별 max lb_period check\n","        #                   1. default_period + max lb_period check\n","        #                       a. 현재까지 lb_period_list\n","        #                           h_prev_idx (open / close) 60\n","        #                           dc_period 135\n","        #                           zone_dc_period 135\n","\n","        # --------- slicing (in trader phase only) --------- #\n","        #               --> latency 영향도가 높은 곳은 이곳\n","        if row_slice:  # recursive 가 아닌 indi. 의 latency 를 고려한 slicing\n","            df, df_3T, df_5T, df_15T, df_30T, df_H, df_4H = [df_s.iloc[-row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","            rec_df, rec_df_3T, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_H, rec_df_4H = [df_s.iloc[-rec_row_list[row_idx]:].copy() for row_idx, df_s\n","                                                                                         in\n","                                                                                         enumerate(htf_df_list)]\n","        else:\n","            df, df_3T, df_5T, df_15T, df_30T, df_H, df_4H = htf_df_list\n","            rec_df, rec_df_3T, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_H, rec_df_4H = htf_df_list\n","\n","        # --------- add indi. --------- #\n","\n","        #        1. 필요한 indi. 는 enlist_epouttp & mr_check 보면서 삽입\n","        #        2. min use_rows 계산을 위해서, tf 별로 gathering 함        #\n","        # start_0 = time.time()\n","\n","        # ------ T ------ #\n","        # df = dc_line(df, None, 'T', dc_period=20)\n","        # df = bb_line(df, None, 'T')\n","        #\n","        # ------ 3T ------ #\n","        # df = dc_line(df, df_3T, '3T')\n","\n","        # ------ 5T ------ #\n","        h_candle_v3(res_df, '5T')\n","        df = dc_line(df, df_5T, '5T')\n","        df = bb_line(df, df_5T, '5T')\n","        #\n","        # ------ 15T ------ #\n","        h_candle_v3(res_df, '15T')\n","        df = dc_line(df, df_15T, '15T')\n","        df = bb_line(df, df_15T, '15T')\n","        #\n","        # ------ 30T ------ #\n","        # df = bb_line(df, df_30T, '30T')\n","        #\n","        # ------ H ------ #\n","        h_candle_v3(res_df, 'H')\n","        # df = dc_line(df, df_H, 'H')\n","\n","        # ------ 4H ------ #\n","        # df = bb_line(df, df_4H, '4H')\n","\n","        # rec_df['rsi_1m'] = rsi(rec_df, 14)  # Todo - recursive, 250 period\n","        # df = df.join(to_lower_tf_v2(df, rec_df.iloc[:, [-1]], [-1], backing_i=0), how='inner')  # <-- join same_tf manual\n","        #\n","        # if order_side in [\"OPEN\"]:\n","        #     rec_df_5T['ema_5T'] = ema(rec_df_5T['close'], 195)  # Todo - recursive, 1100 period (5T)\n","        #     df = df.join(to_lower_tf_v2(df, rec_df_5T, [-1]), how='inner')\n","\n","    except Exception as e:\n","        sys_log.error(\"error in sync_check :\", e)\n","    else:\n","        return df\n","\n","\n","def public_indi(res_df, config, np_timeidx, order_side=\"OPEN\"):\n","    selection_id = config.selection_id\n","\n","    res_df = wave_range_v8(res_df, config.tr_set.p1_period1, config.tr_set.p1_period2, ltf_df=None, wave_min_bars=config.tr_set.wave_min, wave_max_bars=config.tr_set.wave_max)\n","    if config.tr_set.p2_itv1 != \"None\":\n","        res_df = wave_range_v8(res_df, config.tr_set.p2_period1, config.tr_set.p2_period2, ltf_df=None)\n","\n","    res_df = dc_level(res_df, '5T', 1)\n","    res_df = bb_level(res_df, '5T', 1)\n","\n","    # res_df = st_level(res_df, '5T', 1)\n","\n","    # res_df = dc_level(res_df, '15T', 1)\n","    # res_df = bb_level(res_df, '15T', 1)\n","    # res_df = dtk_plot(res_df, dtk_itv2='15T', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    # res_df = st_level(res_df, '15T', 1)\n","\n","    # res_df = dc_level(res_df, '30T', 1)\n","    # res_df = bb_level(res_df, '30T', 1)\n","    # res_df = st_level(res_df, '30T', 1)\n","\n","    # res_df = bb_level(res_df, 'H', 1)\n","\n","    # res_df = bb_level(res_df, '4H', 1)\n","\n","    # res_df['dc_upper_v2'.format(selection_id)] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()   # Todo, consider dc_period\n","    # res_df['dc_lower_v2'.format(selection_id)] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","\n","    # res_df['zone_dc_upper_v2'.format(selection_id)] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()   # Todo, consider zone_dc_period\n","    # res_df['zone_dc_lower_v2'.format(selection_id)] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    if order_side in [\"OPEN\"]:\n","        # candle_score_v3(res_df, 'T', unsigned=False)\n","        candle_score_v3(res_df, config.loc_set.point.exp_itv, unsigned=False)\n","\n","    #     temp indi.    #\n","    # res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","    # res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","    # res_df = dtk_plot(res_df, dtk_itv2='15T', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    return res_df\n","\n","\n","def ep_out_v0(res_df, config, op_idx, e_j, tp_j, np_datas, open_side):\n","    h, l = np_datas\n","    selection_id = config.selection_id\n","    ep_out = 0\n","\n","    if config.tr_set.ep_out_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.ep_out_tick:\n","            ep_out = 1\n","\n","    if config.tr_set.ei_k != \"None\":\n","        if open_side == OrderSide.SELL:\n","            short_tp_1_ = res_df['short_tp_1_{}'.format(selection_id)].to_numpy()  # id 에 따라 dynamic 변수라 이곳에서 numpy 화 진행\n","            short_tp_gap_ = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if l[e_j] <= short_tp_1_[tp_j] - short_tp_gap_[tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","        else:\n","            long_tp_1_ = res_df['long_tp_1_{}'.format(selection_id)].to_numpy()  # iloc 이 빠를까, to_numpy() 가 빠를까  # 3.94 ms --> 5.34 ms (iloc)\n","            long_tp_gap_ = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if h[e_j] >= long_tp_1_[tp_j] + long_tp_gap_[tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","\n","    return ep_out\n","\n","\n","def ep_out(res_df, config, op_idx, e_j, tp_j, np_datas, open_side):\n","    h, l = np_datas\n","    selection_id = config.selection_id\n","    ep_out = 0\n","\n","    if config.tr_set.ep_out_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.ep_out_tick:\n","            ep_out = 1\n","\n","    if config.tr_set.ei_k != \"None\":\n","        if open_side == OrderSide.SELL:\n","            short_tp_ = res_df['short_tp_{}'.format(selection_id)].to_numpy()  # id 에 따라 dynamic 변수라 이곳에서 numpy 화 진행\n","            short_tp_gap_ = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if l[e_j] <= short_tp_[tp_j] + short_tp_gap_[tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","        else:\n","            long_tp_ = res_df['long_tp_{}'.format(selection_id)].to_numpy()  # iloc 이 빠를까, to_numpy() 가 빠를까  # 3.94 ms --> 5.34 ms (iloc)\n","            long_tp_gap_ = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if h[e_j] >= long_tp_[tp_j] - long_tp_gap_[tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","\n","    return ep_out\n","\n","\n","def ep_out_v2(res_df, config, op_idx, e_j, tp_j, np_datas, open_side):\n","    h, l = np_datas\n","    selection_id = config.selection_id\n","    ep_out = 0\n","\n","    if config.tr_set.ep_out_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.ep_out_tick:\n","            ep_out = 1\n","\n","    if config.tr_set.ei_k != \"None\":\n","        if open_side == OrderSide.SELL:\n","            short_tp_1_ = res_df['short_tp_1_{}'.format(selection_id)].to_numpy()  # id 에 따라 dynamic 변수라 이곳에서 numpy 화 진행\n","            short_tp_0_ = res_df['short_tp_0_{}'.format(selection_id)].to_numpy()\n","            short_tp_gap_ = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if l[e_j] <= short_tp_1_[tp_j] + short_tp_gap_[tp_j] * config.tr_set.ei_k or h[e_j] >= short_tp_0_[tp_j] - short_tp_gap_[\n","                tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","        else:\n","            long_tp_1_ = res_df['long_tp_1_{}'.format(selection_id)].to_numpy()\n","            long_tp_0_ = res_df['long_tp_0_{}'.format(selection_id)].to_numpy()\n","            long_tp_gap_ = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if h[e_j] >= long_tp_1_[tp_j] - long_tp_gap_[tp_j] * config.tr_set.ei_k or l[e_j] <= long_tp_0_[tp_j] + long_tp_gap_[\n","                tp_j] * config.tr_set.ei_k:\n","                ep_out = 1\n","\n","    return ep_out\n","\n","\n","def ep_loc_point2_v2(res_df, config, i, out_j, side=OrderSide.SELL):\n","    allow_ep_in = 1\n","    if config.selection_id in ['v5_2']:\n","        if side == OrderSide.SELL:\n","            dc_upper_T = res_df['dc_upper_T'].to_numpy()\n","            dc_upper_15T = res_df['dc_upper_15T'].to_numpy()\n","            allow_ep_in *= (dc_upper_T[i - 1] <= dc_upper_15T[i]) & \\\n","                           (dc_upper_15T[i - 1] != dc_upper_15T[i])\n","        else:\n","            dc_lower_T = res_df['dc_lower_T'].to_numpy()\n","            dc_lower_15T = res_df['dc_lower_15T'].to_numpy()\n","            allow_ep_in *= (dc_lower_T[i - 1] >= dc_lower_15T[i]) & \\\n","                           (dc_lower_15T[i - 1] != dc_lower_15T[i])\n","\n","    if config.selection_id in ['v3_4']:\n","        wick_score_list = literal_eval(config.ep_set.point2.wick_score_list)\n","        wick_scores = [res_df['wick_score_{}'.format(s_itv)].to_numpy() for s_itv in literal_eval(config.ep_set.point2.score_itv_list)]\n","        close = res_df['close'].to_numpy()\n","        if side == OrderSide.SELL:\n","            sup_T = res_df['sup_T'].to_numpy()\n","            allow_ep_in *= close[i] < sup_T[i - 1]\n","            if len(wick_score_list) != 0:\n","                allow_ep_in *= wick_scores[0][i] < -wick_score_list[0]\n","        else:\n","            resi_T = res_df['resi_T'].to_numpy()\n","            allow_ep_in *= close[i] > resi_T[i - 1]\n","            if len(wick_score_list) != 0:\n","                allow_ep_in *= wick_scores[0][i] > wick_score_list[0]\n","\n","    if allow_ep_in:\n","        out_j = i\n","    return allow_ep_in, out_j\n","\n","\n","# vectorized calc.\n","# multi-stem 에 따라 dynamic vars.가 입력되기 때문에 class 내부 vars. 로 종속시키지 않음\n","def ep_loc_v3(res_df, config, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):\n","    # ------- param init ------- #\n","    selection_id = config.selection_id\n","    c_i = config.trader_set.complete_index\n","    len_df = len(res_df)\n","    mr_res = np.ones(len_df)\n","    zone_arr = np.full(len_df, 'n')\n","\n","    # ------ process 한번에 처리해서 param_check 만 ver. 별로 하면 될 것 ------ #\n","    #     => public_indi() 가 될 것\n","    #     1. 사용한 param 정보와 matching 된 data 병렬로 나열 logging 될 것\n","    tp_fee, out_fee = calc_tp_out_fee_v2(config)\n","\n","    # ------------ candle_score ------------ #\n","    wick_score_list = literal_eval(config.loc_set.point.wick_score_list)\n","    if len(wick_score_list) != 0:\n","        score_itv_list = literal_eval(config.loc_set.point.score_itv_list)\n","        # ------ candle_score_v0 (1m initial tick 기준임) ------ #  Todo - higher timeframe 경우 back_data 사용해야함\n","        for wick_score_, score_itv_ in zip(wick_score_list, score_itv_list):\n","            wick_score = res_df['wick_score_{}'.format(score_itv_)].to_numpy()\n","            if ep_loc_side == OrderSide.SELL:\n","                mr_res *= wick_score <= -wick_score_\n","                if show_detail:\n","                    sys_log.warning(\"wick_score <= -wick_score_ : {:.5f} {:.5f} ({})\".format(wick_score[c_i], -wick_score_, mr_res[c_i]))\n","            else:\n","                mr_res *= wick_score >= wick_score_\n","                if show_detail:\n","                    sys_log.warning(\"wick_score >= wick_score_ : {:.5f} {:.5f} ({})\".format(wick_score[c_i], wick_score_, mr_res[c_i]))\n","\n","    # -------------- tr_thresh -------------- #\n","    if config.loc_set.point.short_tr_thresh != \"None\":\n","        if ep_loc_side == OrderSide.SELL:\n","            short_tr_ = res_df['short_tr_{}'.format(selection_id)].to_numpy()\n","            mr_res *= short_tr_ >= config.loc_set.point.short_tr_thresh\n","            mr_res *= short_tr_ <= config.loc_set.point.short_tr_thresh + 0.1\n","            if show_detail:\n","                sys_log.warning(\n","                    \"short_tr_ >= short_tr_thresh : {:.5f} {:.5f} ({})\".format(short_tr_[c_i], config.loc_set.point.short_tr_thresh, mr_res[c_i]))\n","        else:\n","            long_tr_ = res_df['long_tr_{}'.format(selection_id)].to_numpy()\n","            mr_res *= long_tr_ >= config.loc_set.point.long_tr_thresh\n","            mr_res *= long_tr_ <= config.loc_set.point.long_tr_thresh + 0.1\n","            if show_detail:\n","                sys_log.warning(\n","                    \"long_tr_ >= long_tr_thresh : {:.5f} {:.5f} ({})\".format(long_tr_[c_i], config.loc_set.point.long_tr_thresh, mr_res[c_i]))\n","\n","    # -------------- spread - independent to tr_set -------------- #  --> Todo, 사용 안하고 싶은 wave_point\n","    if config.loc_set.point.short_spread != \"None\":\n","        if selection_id in ['v3']:\n","            if ep_loc_side == OrderSide.SELL:\n","                bb_base_5T = res_df['bb_base_5T'].to_numpy()  # to_numpy() 는 ep_loc 에서 진행됨\n","                bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","                short_spread = (bb_base_5T - bb_lower_5T - tp_fee * bb_base_5T) / (bb_base_5T - bb_lower_5T + out_fee * bb_base_5T)\n","                mr_res *= short_spread >= config.loc_set.point.short_spread\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"short_spread >= config.loc_set.point.short_spread : {:.5f} {:.5f} ({})\".format(short_spread[c_i], config.loc_set.point.short_spread, mr_res[c_i]))\n","            else:\n","                bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","                dc_lower_5T = res_df['dc_lower_5T'].to_numpy()\n","                # mr_res *= (bb_base_5T - dc_lower_5T - tp_fee * bb_upper_5T) / (bb_base_5T - dc_lower_5T + out_fee * bb_base_5T) >= config.loc_set.point.long_spread\n","                long_spread = (bb_upper_5T - dc_lower_5T - tp_fee * bb_upper_5T) / (bb_upper_5T - dc_lower_5T + out_fee * bb_upper_5T)\n","                mr_res *= long_spread >= config.loc_set.point.long_spread\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"long_spread >= config.loc_set.point.long_spread : {:.5f} {:.5f} ({})\".format(long_spread[c_i], config.loc_set.point.long_spread, mr_res[c_i]))                  \n","\n","    # ------------ ratios ------------ #\n","    # ------ candle_pumping_ratio ------ #\n","    if config.loc_set.point.cppr != \"None\":   \n","      tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","      b1_cppr_ = res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()  # check b1's cppr in ep_loc\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= b1_cppr_ >= config.loc_set.point.cppr\n","        if show_detail:\n","            sys_log.warning(\"b1_cppr_ >= config.loc_set.point.cppr : {:.5f} {:.5f} ({})\".format(b1_cppr_[c_i], config.loc_set.point.cppr, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_cppr_ <= -config.loc_set.point.cppr\n","        if show_detail:\n","            sys_log.warning(\"b1_cppr_ <= -config.loc_set.point.cppr : {:.5f} {:.5f} ({})\".format(b1_cppr_[c_i], config.loc_set.point.cppr, mr_res[c_i]))\n","    \n","    # ------ dc_over_body_ratio ------ #\n","    if config.loc_set.point.dbr != \"None\":\n","      b1_lwdbr = res_df['b1_lwdbr'].to_numpy()\n","      b1_updbr = res_df['b1_updbr'].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:        \n","        mr_res *= b1_lwdbr >= config.loc_set.point.dbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_lwdbr >= config.loc_set.point.dbr : {:.5f} {:.5f} ({})\".format(b1_lwdbr[c_i], config.loc_set.point.dbr, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_updbr >= config.loc_set.point.dbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_updbr >= config.loc_set.point.dbr : {:.5f} {:.5f} ({})\".format(b1_updbr[c_i], config.loc_set.point.dbr, mr_res[c_i]))\n","            \n","    if config.loc_set.point.dbr2 != \"None\":\n","      b1_lwdbr = res_df['b1_lwdbr'].to_numpy()\n","      b1_updbr = res_df['b1_updbr'].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:    \n","        mr_res *= b1_updbr >= config.loc_set.point.dbr2\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_updbr >= config.loc_set.point.dbr2 : {:.5f} {:.5f} ({})\".format(b1_updbr[c_i], config.loc_set.point.dbr2, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_lwdbr >= config.loc_set.point.dbr2\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_lwdbr >= config.loc_set.point.dbr2 : {:.5f} {:.5f} ({})\".format(b1_lwdbr[c_i], config.loc_set.point.dbr2, mr_res[c_i]))\n","\n","    # ------ wick_body_ratio ------ #\n","    if config.loc_set.point.wbr != \"None\":\n","        wave_body_ratio = res_df['wave_body_ratio'].to_numpy()\n","        mr_res *= wave_body_ratio >= config.loc_set.point.wbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"wave_body_ratio >= config.loc_set.point.wbr : {:.5f} {:.5f} ({})\".format(wave_body_ratio[c_i], config.loc_set.point.wbr, mr_res[c_i]))\n","            \n","    # ------ body_rel_ratio ------ #\n","    if config.loc_set.point.brr != \"None\":\n","        body_rel_ratio_ = res_df['body_rel_ratio_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        mr_res *= body_rel_ratio_ <= config.loc_set.point.brr\n","        if show_detail:\n","            sys_log.warning(\n","                \"body_rel_ratio_ <= config.loc_set.point.brr : {:.5f} {:.5f} ({})\".format(body_rel_ratio_[c_i], config.loc_set.point.brr, mr_res[c_i]))\n","\n","    # ------ pumping_ratio ------ #\n","    if config.loc_set.point.ppr != \"None\":\n","      if ep_loc_side == OrderSide.SELL:\n","        short_ppr_ = res_df['short_ppr_{}'.format(selection_id)].to_numpy()\n","        mr_res *= short_ppr_ >= config.loc_set.point.ppr\n","        if show_detail:\n","            sys_log.warning(\"short_ppr_ >= config.loc_set.point.ppr : {:.5f} {:.5f} ({})\".format(short_ppr_[c_i], config.loc_set.point.ppr, mr_res[c_i]))\n","      else:\n","        long_ppr_ = res_df['long_ppr_{}'.format(selection_id)].to_numpy()\n","        mr_res *= long_ppr_ >= config.loc_set.point.ppr\n","        if show_detail:\n","            sys_log.warning(\"long_ppr_ >= config.loc_set.point.ppr : {:.5f} {:.5f} ({})\".format(long_ppr_[c_i], config.loc_set.point.ppr, mr_res[c_i]))\n"," \n","    # ------------ rtc_zone  ------------ #  --> Todo, 사용 안하고 싶은 wave_dur., 추후 zone 으로 옮길 것\n","    # ------ dtk ------ #\n","    if config.loc_set.zone.dt_k != \"None\":\n","        # ------ dc_v2 ------ #\n","        dc_lower_v2 = res_df['dc_lower_v2'.format(selection_id)].to_numpy()\n","        short_dtk_1_ = res_df['short_dtk_1_{}'.format(selection_id)].to_numpy() - \\\n","                       res_df['short_dtk_gap_{}'.format(selection_id)].to_numpy() * config.loc_set.zone.dt_k\n","        dc_upper_v2 = res_df['dc_upper_v2'.format(selection_id)].to_numpy()\n","        long_dtk_1_ = res_df['long_dtk_1_{}'.format(selection_id)].to_numpy() + \\\n","                      res_df['long_dtk_gap_{}'.format(selection_id)].to_numpy() * config.loc_set.zone.dt_k\n","        if ep_loc_side == OrderSide.SELL:\n","            mr_res *= dc_lower_v2 >= short_dtk_1_\n","            if show_detail:\n","                sys_log.warning(\n","                    \"dc_lower_v2 >= short_dtk_1_ : {:.5f} {:.5f} ({})\".format(dc_lower_v2[c_i], short_dtk_1_[c_i], mr_res[c_i]))\n","        else:\n","            mr_res *= dc_upper_v2 <= long_dtk_1_\n","            if show_detail:\n","                sys_log.warning(\n","                    \"dc_upper_v2 <= long_dtk_1_ : {:.5f} {:.5f} ({})\".format(dc_upper_v2[c_i], long_dtk_1_[c_i], mr_res[c_i]))\n","                \n","    # ------------ zone ------------ #\n","    # config 로 통제할 수 없는 zone 은 selection_id 으로 조건문을 나눔 (lvrg_set 과 동일)\n","    if config.loc_set.zone.use_zone:\n","\n","        # ------------------ wave_biaser (sr_confirmer) ------------------ #\n","        if selection_id in ['3_9']:     \n","          itv, period1, period2 = config.tr_set.p1_itv1, config.tr_set.p1_period1, config.tr_set.p1_period2          \n","\n","          if ep_loc_side == OrderSide.SELL:\n","            short_wave_high_ = res_df['short_wave_high_{}{}{}'.format(itv, period1, period2)]\n","            bb_lower_5T_amax = get_line(res_df['short_wave_high_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), res_df['bb_lower_5T'].to_numpy())\n","            mr_res *= short_wave_high_ <= bb_lower_5T_amax\n","            if show_detail:\n","                sys_log.warning(\"short_wave_high_ <= bb_lower_5T_amax : {:.5f} {:.5f} ({})\".format(short_wave_high_[c_i], bb_lower_5T_amax[c_i], mr_res[c_i]))\n","          else:\n","            long_wave_low_ = res_df['long_wave_low_{}{}{}'.format(itv, period1, period2)]\n","            bb_upper_5T_amax = get_line(res_df['long_wave_low_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), res_df['bb_upper_5T'].to_numpy())\n","            mr_res *= long_wave_low_ >= bb_upper_5T_amax\n","            if show_detail:\n","                sys_log.warning(\"long_wave_low_ >= bb_upper_5T_amax : {:.5f} {:.5f} ({})\".format(long_wave_low_[c_i], bb_upper_5T_amax[c_i], mr_res[c_i]))\n","\n","\n","        if selection_id in ['4_3', '3_5', '3_51']:\n","            dc_base_T20 = res_df['dc_base_T20'].to_numpy()\n","            dc_base_3T20 = res_df['dc_base_3T20'].to_numpy()\n","            # b1_dc_base_3T20 = res_df['dc_base_3T20'].shift(3).to_numpy()\n","            # dc_base_5T = res_df['dc_base_5T'].to_numpy()\n","            # dc_base_15T = res_df['dc_base_15T'].to_numpy()\n","            # dc_base_30T = res_df['dc_base_30T'].to_numpy()\n","            dc_base_H20 = res_df['dc_base_H20'].to_numpy()\n","            # dc_base_4H = res_df['dc_base_4H'].to_numpy()\n","            # dc_base_D = res_df['dc_base_D'].to_numpy()\n","\n","            itv, period1, period2 = config.tr_set.p1_itv1, config.tr_set.p1_period1, config.tr_set.p1_period2\n","            if ep_loc_side == OrderSide.SELL:\n","                # ------ short_base_ <= dc_base_3T20 ------ #\n","                short_base_ = res_df['short_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","                mr_res *= short_base_ <= dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\"short_base_ <= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(short_base_[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # mr_res *= short_base_ <= dc_base_T20\n","                # if show_detail:\n","                #     sys_log.warning(\"short_base_ <= dc_base_T20 : {:.5f} {:.5f} ({})\".format(short_base_[c_i], dc_base_T20[c_i], mr_res[c_i]))\n","\n","                # ------ reject csd ------ #\n","                # dc_upper_ = res_df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","                # mr_res *= dc_upper_ <= dc_base_3T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_upper_ <= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(dc_upper_[c_i], dc_base_3T[c_i], mr_res[c_i]))\n","\n","                # Todo, 부호 조심\n","                # dc_upper2_ = res_df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","                # mr_res *= dc_upper2_ >= dc_base_H\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_upper2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_upper2_[c_i], dc_base_H[c_i], mr_res[c_i]))  \n","\n","                # long 과 동일한 dur.\n","                dc_lower2_ = res_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","                mr_res *= dc_lower2_ >= dc_base_H20\n","                if show_detail:\n","                    sys_log.warning(\"dc_lower2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], dc_base_H20[c_i], mr_res[c_i]))  \n","\n","                # ------ consecutive base ascender ------ #\n","                # ------ 1. roll_min ------ #\n","                dc_base_3T20_rollmin = res_df['dc_base_3T20'].rolling(config.loc_set.zone.base_roll_period).min().to_numpy()\n","                mr_res *= dc_base_3T20_rollmin == dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"dc_base_3T20_rollmin == dc_base_3T2020 : {:.5f} {:.5f} ({})\".format(dc_base_3T20_rollmin[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","            else:\n","                # ------ long_base >= dc_base_3T20 ------ #\n","                long_base_ = res_df['long_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","                mr_res *= long_base_ >= dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\"long_base_ >= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(long_base_[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # mr_res *= long_base_ >= dc_base_T20\n","                # if show_detail:\n","                #     sys_log.warning(\"long_base_ >= dc_base_T20 : {:.5f} {:.5f} ({})\".format(long_base_[c_i], dc_base_T20[c_i], mr_res[c_i]))\n","\n","                # ------ reject csd ------ #\n","                # dc_lower_ = res_df['dc_lower_{}{}'.format(itv, period1)].to_numpy()\n","                # mr_res *= dc_lower_ >= dc_base_3T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_lower_ >= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(dc_lower_[c_i], dc_base_3T[c_i], mr_res[c_i]))\n","\n","                dc_lower2_ = res_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","                mr_res *= dc_lower2_ >= dc_base_H20\n","                if show_detail:\n","                    sys_log.warning(\"dc_lower2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], dc_base_H20[c_i], mr_res[c_i]))\n","\n","                # bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","                # mr_res *= dc_lower2_ >= bb_lower_5T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_lower2_ >= bb_lower_5T : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], bb_lower_5T[c_i], mr_res[c_i]))\n","\n","                # ------ alignment ------ #\n","                # mr_res *= (dc_base_3T20 > dc_base_5T) & (dc_base_5T > dc_base_15T) & (dc_base_15T > dc_base_30T)\n","\n","                # ------ consecutive base ascender ------ #\n","                # ------ 1. roll_max ------ #\n","                dc_base_3T20_rollmax = res_df['dc_base_3T20'].rolling(config.loc_set.zone.base_roll_period).max().to_numpy()\n","                mr_res *= dc_base_3T20_rollmax == dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"dc_base_3T20_rollmax == dc_base_3T2020 : {:.5f} {:.5f} ({})\".format(dc_base_3T20_rollmax[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # ------ 2. roll_max_v2 - ascender  ------ #\n","                # dc_base_3T_ascend = (res_df['dc_base_3T'] >= res_df['dc_base_3T'].shift(3)).rolling(config.loc_set.zone.base_roll_period).sum().to_numpy()\n","                # # mr_res *= dc_base_3T_ascend == config.loc_set.zone.base_roll_period\n","                # mr_res *= dc_base_3T_ascend != config.loc_set.zone.base_roll_period\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_base_3T_ascend == config.loc_set.zone.base_roll_period : {:.5f} {:.5f} ({})\".format(dc_base_3T_ascend[c_i], config.loc_set.zone.base_roll_period, mr_res[c_i]))\n","\n","\n","\n","    # -------------- zoned tr_set - post_work -------------- #\n","    if config.tr_set.c_ep_gap != \"None\" or config.tr_set.t_out_gap != \"None\":\n","        #       by zone_dtk       #\n","        #         c_zone        #\n","        zone_dc_upper_v2_ = res_df['zone_dc_upper_v2'.format(selection_id)].to_numpy()\n","        long_dtk_plot_1 = res_df['long_dtk_plot_1'].to_numpy() + res_df['long_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        zone_dc_lower_v2_ = res_df['zone_dc_lower_v2'.format(selection_id)].to_numpy()\n","        short_dtk_plot_1 = res_df['short_dtk_plot_1'].to_numpy() - res_df['short_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        if ep_loc_side == OrderSide.SELL:\n","            zone_res = zone_dc_upper_v2_ > long_dtk_plot_1  # mr_res 와는 별개임\n","            pos = 'short'\n","        else:\n","            zone_res = zone_dc_lower_v2_ < short_dtk_plot_1\n","            pos = 'long'\n","\n","        # static 여부에 따른 vectorized adj. - dynamic 은 vectorize 불가\n","        if config.ep_set.static_ep and config.tr_set.c_ep_gap != \"None\":\n","            res_df['{}_ep_{}'.format(pos, selection_id)][zone_res] = res_df['{}_ep2_{}'.format(pos, selection_id)][zone_res]\n","        if config.out_set.static_out and config.tr_set.t_out_gap != \"None\":\n","            res_df['{}_out_{}'.format(pos, selection_id)][~zone_res] = res_df['{}_out2_{}'.format(pos, selection_id)][\n","                ~zone_res]  # t_zone 에 대한 out2 setting\n","        zone_arr = np.where(zone_res == 1, 'c', 't')\n","\n","    return mr_res, zone_arr  # mr_res 의 True idx 가 open signal"]},{"cell_type":"markdown","source":["#### ep_loc legacy"],"metadata":{"id":"EQ63Jwpvr7qA"}},{"cell_type":"code","source":["\n","            \n","\n","        # ------------------ swing_middle ------------------ #\n","        # ------------ 1. envelope ------------ #\n","\n","        # ------ a. dc ------ #\n","        # ep_loc check 기준 idx 가 entry 기준이라는 걸 명심\n","        if selection_id in ['v3_2']:\n","            hc_itv = '15T'\n","            dc_itv = '15T'\n","            shift_num = [0, to_itvnum(hc_itv)]\n","            div_res = [1, 0]\n","            for itv_num, res in zip(shift_num, div_res):\n","                close_ = res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy()  # close_bar timein 사용하는 경우, 특수로 shift(0) 사용가능\n","                if ep_loc_side == OrderSide.SELL:\n","                    dc_lower_ = res_df['dc_lower_%s' % dc_itv].shift(itv_num).to_numpy()\n","                    mr_res *= (close_ < dc_lower_) == res\n","                else:\n","                    dc_upper_ = res_df['dc_upper_%s' % dc_itv].shift(itv_num).to_numpy()\n","                    mr_res *= (close_ > dc_upper_) == res\n","\n","        # ------------ 2. degree ------------ #\n","        # ------ a. norm_body_ratio ------ #\n","        if config.loc_set.zone.abs_ratio != \"None\":\n","            itv = config.loc_set.point.tf_entry\n","            abs_ratio_ = res_df['abs_ratio_{}'.format(itv)].to_numpy()\n","            mr_res *= abs_ratio_ >= config.loc_set.zone.abs_ratio\n","            # mr_res *= abs_ratio_ <= config.loc_set.zone.abs_ratio\n","\n","    # ------------ 2. imbalance_ratio ------------ #\n","    if config.loc_set.zone.ir != \"None\":\n","        itv = config.loc_set.point.tf_entry\n","        itv_num = to_itvnum(itv)\n","        if ep_loc_side == OrderSide.SELL:\n","            short_ir_ = res_df['short_ir_{}'.format(itv)].to_numpy()\n","            # short_ir_ = res_df['short_ir_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","            # mr_res *= short_ir_ >= config.loc_set.zone.ir     # greater\n","            mr_res *= short_ir_ <= config.loc_set.zone.ir  # lesser\n","            if show_detail:\n","                sys_log.warning(\n","                    \"short_ir_ <= config.loc_set.zone.ir : {:.5f} {:.5f} ({})\".format(short_ir_[c_i], config.loc_set.zone.ir, mr_res[c_i]))\n","        else:\n","            long_ir_ = res_df['long_ir_{}'.format(itv)].to_numpy()\n","            # long_ir_ = res_df['long_ir_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","            # mr_res *= long_ir_ >= config.loc_set.zone.ir\n","            mr_res *= long_ir_ <= config.loc_set.zone.ir\n","            if show_detail:\n","                sys_log.warning(\n","                    \"long_ir_ <= config.loc_set.zone.ir : {:.5f} {:.5f} ({})\".format(long_ir_[c_i], config.loc_set.zone.ir, mr_res[c_i]))\n","                \n","        # if selection_id in ['3_6']:\n","        #   itv, period1, period2 = config.loc_set.point.p1_itv0, config.loc_set.point.p1_period1, config.loc_set.point.p1_period2          \n","\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     high_5T = res_df['high_5T'].to_numpy()  # Todo, tf_entry - 1 open 기준이라 future_data 사용 가능\n","        #     short_base_ = res_df['short_base_{}{}{}'.format(itv, period1, period2)]\n","        #     mr_res *= high_5T < short_base_\n","        #     if show_detail:\n","        #         sys_log.warning(\n","        #             \"high_5T < short_base_ : {:.5f} {:.5f} ({})\".format(high_5T[c_i], short_base_[c_i], mr_res[c_i]))\n","        #   else:\n","        #     low_5T = res_df['low_5T'].to_numpy()  # Todo, tf_entry - 1 open 기준이라 future_data 사용 가능\n","        #     long_base_ = res_df['long_base_{}{}{}'.format(itv, period1, period2)]\n","        #     mr_res *= low_5T > long_base_\n","        #     if show_detail:\n","        #         sys_log.warning(\n","        #             \"low_5T > long_base_ : {:.5f} {:.5f} ({})\".format(low_5T[c_i], long_base_[c_i], mr_res[c_i]))'\n","        \n","        # ------ dc_base ------ #\n","        # if selection_id in ['4']:  # 'v3_3', 'v3_4',\n","        #   hc_itv = '5T'\n","        #   dc_itv = '5T'\n","        #   itv_num = to_itvnum(hc_itv)\n","        #   close_ = res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy()   # 따라서 future_data 사용시, shifting 필요함\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     dc_lower_ = res_df['dc_lower_%s' % dc_itv].shift(itv_num).to_numpy()\n","        #     mr_res *= close_ < dc_lower_\n","        #   else:\n","        #     dc_upper_ = res_df['dc_upper_%s' % dc_itv].shift(itv_num).to_numpy()\n","        #     mr_res *= close_ > dc_upper_\n","\n","        # ------ ema ------ #\n","        # if selection_id in ['v5_2']: # 'v3'\n","        #   ema_5T = res_df['ema_5T'].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= close < ema_5T\n","        #   else:\n","        #     mr_res *= close > ema_5T\n","        \n","        # ------ b. bb ------ #\n","        # close = res_df['close'].to_numpy()\n","\n","        # if selection_id in ['v3_3']:\n","        #   open = res_df['open'].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     bb_lower_1m = res_df['bb_lower_1m'].to_numpy()\n","        #     # mr_res *= close <= bb_lower_1m\n","        #     mr_res *= open <= bb_lower_1m\n","        #   else:\n","        #     bb_upper_1m = res_df['bb_upper_1m'].to_numpy()\n","        #     # mr_res *= close >= bb_upper_1m\n","        #     mr_res *= open >= bb_upper_1m\n","\n","        if selection_id in ['4_1']:\n","            if ep_loc_side == OrderSide.SELL:\n","                bb_lower_15T = res_df['bb_lower_15T'].to_numpy()\n","                short_ep_ = res_df['short_ep_{}'.format(selection_id)].to_numpy()\n","                mr_res *= bb_lower_15T >= short_ep_\n","            else:\n","                bb_upper_15T = res_df['bb_upper_15T'].to_numpy()\n","                long_ep_ = res_df['long_ep_{}'.format(selection_id)].to_numpy()\n","                mr_res *= bb_upper_15T <= long_ep_\n","\n","        # if selection_id in ['v5_2']:\n","        #   bb_upper2_ = res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","        #   bb_lower2_ = res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= bb_upper2_ < close\n","        #   else:\n","        #     mr_res *= bb_lower2_ > close\n","\n","        # degree_list = literal_eval(config.loc_set.zone.degree_list)\n","        # if len(degree_list) != 0:\n","        # # if selection_id in ['v3_3', 'v3_4']:\n","        #   norm_close_15 = res_df['norm_close_15'].to_numpy()   # -> 이거 뭘로 만들었는지 불분명함,,\n","        #   b1_norm_close_15 = res_df['norm_close_15'].shift(15).to_numpy()\n","\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= norm_close_15 <= -degree_list[0]\n","        #     # mr_res *= b1_norm_close_15 <= -degree_list[1]\n","        #   else:\n","        #     mr_res *= norm_close_15 >= degree_list[0]\n","        #     # mr_res *= b1_norm_close_15 >= degree_list[1]\n","\n","        # ------ b. dc ------ #\n","        # if selection_id in ['v3_3']:\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     dc_lower_ = res_df['dc_lower_1m'].to_numpy()\n","        #     b1_dc_lower_ = res_df['dc_lower_1m'].shift(1).to_numpy()\n","        #     mr_res *= dc_lower_ < b1_dc_lower_\n","        #   else:\n","        #     dc_upper_ = res_df['dc_upper_1m'].to_numpy()\n","        #     b1_dc_upper_ = res_df['dc_upper_1m'].shift(1).to_numpy()\n","        #     mr_res *= dc_upper_ > b1_dc_upper_\n","\n","        # ------ c. sar ------ #\n","        # if selection_id in ['v3_3']:\n","        # sar_uptrend_3T = res_df['sar_uptrend_3T'].to_numpy()\n","        # if ep_loc_side == OrderSide.SELL:\n","        #   mr_res *= sar_uptrend_3T == 0\n","        # else:\n","        #   mr_res *= sar_uptrend_3T == 1"],"metadata":{"id":"csZwxsP5r_Pz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JjKHyqftzhD7"},"source":["### set config (override available)"]},{"cell_type":"code","execution_count":41,"metadata":{"id":"q_4E-zH02WJy","executionInfo":{"status":"ok","timestamp":1650672523566,"user_tz":-540,"elapsed":549,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = {\n","  \"selection_id\": \"3_10\",\n","  \"trader_set\": {\n","    \"backtrade\": 0,\n","    \"back_data_path\": \"C:\\\\Users\\\\Lenovo\\\\PycharmProjects\\\\System_Trading\\\\JnQ\\\\candlestick_concated\\\\database_bn\\\\2022-04-08\\\\2022-04-08 ETHUSDT_1m.ftr\",\n","    \"start_datetime\": \"2020-09-05 00:00:59.999\",\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"latest_index\": -1,\n","    \"complete_index\": -2,\n","    \"limit_fee\": 0.0002,\n","    \"market_fee\": 0.0004,\n","    \"initial_asset\": 10,\n","    \"asset_changed\": 0,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"itv_list\": \"['T', '3T', '5T', '15T', '30T', '4H']\",\n","    \"row_list\": \"[100, 50, 1, 1, 1, 1]\",\n","    \"rec_row_list\": \"[1, 1, 1, 1, 1, 1]\",\n","    \"offset_list\": \"['1h', '1h', '1h', '1h', '1h', '1h']\",\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"api_retry_term\": 3,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"pos_set\": {\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"short_ban\": 0,\n","    \"long_ban\": 0\n","  },\n","  \"loc_set\": {      \n","    \"point\": {\n","      \"exp_itv\": \"5T\",\n","      \"tf_entry\": \"15T\",\n","      \"short_spread\": \"None\",\n","      \"long_spread\": \"None\",\n","      \"short_tr_thresh\": \"None\",\n","      \"long_tr_thresh\": \"None\",\n","      \"wick_score_list\": \"[]\",\n","      \"body_score_list\": \"[]\",\n","      \"score_itv_list\": \"[]\",\n","      \"cppr\": \"None\",\n","      \"ppr\": \"None\",\n","      \"wbr\": \"None\",\n","      \"dbr\": \"None\",\n","      \"dbr2\": \"None\",\n","      \"brr\": \"None\",\n","      \"ir\": \"None\",\n","      \"abs_ratio\": \"None\",\n","      \"osc_band\": 20\n","    },\n","    \"zone\": {\n","      \"use_zone\": 0,\n","      \"base_roll_period\": 50,\n","      \"degree_list\": \"[]\",\n","      \"hc_itv\": 60,\n","      \"dtk_itv\": \"5T\",\n","      \"dt_k\": \"None\",\n","      \"dc_period\": 135,\n","      \"use_dtk_line\": 0,\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135\n","    }\n","  },\n","  \"tr_set\": {\n","    \"wave_min\": 10,\n","    \"wave_max\": 15,\n","    \"p1_itv1\": \"T\",\n","    \"p1_itv0\": \"T\",\n","    \"p1_period1\": 15,\n","    \"p1_period2\": 15,\n","    \"p2_itv1\": \"None\",\n","    \"p2_itv0\": \"T\",\n","    \"p2_period1\": 20,\n","    \"p2_period2\": 40,\n","    \"ei_k\": -1.0,\n","    \"ep_out_tick\": 5,\n","    \"tp_gap\": 0.0,\n","    \"decay_gap\": \"None\",\n","    \"ep_gap\": -0.5,\n","    \"out_gap\": 0,\n","    \"c_ep_gap\": \"None\",\n","    \"t_out_gap\": \"None\",\n","    \"wb_tp_gap\": 0,\n","    \"wb_out_gap\": 0,\n","    \"bias_info_tick\": 240\n","  },\n","  \"ep_set\": {\n","    \"entry_type\": \"LIMIT\",\n","    \"static_ep\": 1,\n","    \"point2\": {\n","      \"use_point2\": 0,\n","      \"entry_type\": \"MARKET\",\n","      \"wick_score_list\": \"[]\",\n","      \"body_score_list\": \"[]\",\n","      \"score_itv_list\": \"['T']\"\n","    }\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"static_tp\": 1,\n","    \"tp_onexec\": 0,\n","    \"decay_term\": 60,\n","    \"p_ranges\": \"[1]\",\n","    \"p_qty_ratio\": \"[1]\"\n","  },\n","  \"out_set\": {\n","    \"hl_out\": 1,\n","    \"static_out\": 1,\n","    \"out_onexec\": 0,\n","    \"tf_exit\": \"None\",\n","    \"rsi_exit\": 0\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 0,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.03,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)"]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC"},"source":["## run"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"qBJfPsmJzVIr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1650672526680,"user_tz":-540,"elapsed":4,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"72e1acf8-66d1-4eff-c278-787f4c83deea"},"outputs":[{"output_type":"stream","name":"stdout","text":["\"3_10\" {\n"," \"point\": {\n","  \"exp_itv\": \"5T\",\n","  \"tf_entry\": \"15T\",\n","  \"short_spread\": \"None\",\n","  \"long_spread\": \"None\",\n","  \"short_tr_thresh\": \"None\",\n","  \"long_tr_thresh\": \"None\",\n","  \"wick_score_list\": \"[]\",\n","  \"body_score_list\": \"[]\",\n","  \"score_itv_list\": \"[]\",\n","  \"cppr\": \"None\",\n","  \"ppr\": \"None\",\n","  \"wbr\": \"None\",\n","  \"dbr\": \"None\",\n","  \"dbr2\": \"None\",\n","  \"brr\": \"None\",\n","  \"ir\": \"None\",\n","  \"abs_ratio\": \"None\",\n","  \"osc_band\": 20\n"," },\n"," \"zone\": {\n","  \"use_zone\": 0,\n","  \"base_roll_period\": 50,\n","  \"degree_list\": \"[]\",\n","  \"hc_itv\": 60,\n","  \"dtk_itv\": \"5T\",\n","  \"dt_k\": \"None\",\n","  \"dc_period\": 135,\n","  \"use_dtk_line\": 0,\n","  \"zone_dt_k\": 0.4,\n","  \"zone_dc_period\": 135\n"," }\n","} {\n"," \"wave_min\": 10,\n"," \"wave_max\": 15,\n"," \"p1_itv1\": \"T\",\n"," \"p1_itv0\": \"T\",\n"," \"p1_period1\": 15,\n"," \"p1_period2\": 15,\n"," \"p2_itv1\": \"None\",\n"," \"p2_itv0\": \"T\",\n"," \"p2_period1\": 20,\n"," \"p2_period2\": 40,\n"," \"ei_k\": -1.0,\n"," \"ep_out_tick\": 5,\n"," \"tp_gap\": 0.0,\n"," \"decay_gap\": \"None\",\n"," \"ep_gap\": -0.5,\n"," \"out_gap\": 0,\n"," \"c_ep_gap\": \"None\",\n"," \"t_out_gap\": \"None\",\n"," \"wb_tp_gap\": 0,\n"," \"wb_out_gap\": 0,\n"," \"bias_info_tick\": 240\n","} {\n"," \"entry_type\": \"LIMIT\",\n"," \"static_ep\": 1,\n"," \"point2\": {\n","  \"use_point2\": 0,\n","  \"entry_type\": \"MARKET\",\n","  \"wick_score_list\": \"[]\",\n","  \"body_score_list\": \"[]\",\n","  \"score_itv_list\": \"['T']\"\n"," }\n","} {\n"," \"non_tp\": 0,\n"," \"static_tp\": 1,\n"," \"tp_onexec\": 0,\n"," \"decay_term\": 60,\n"," \"p_ranges\": \"[1]\",\n"," \"p_qty_ratio\": \"[1]\"\n","} {\n"," \"hl_out\": 1,\n"," \"static_out\": 1,\n"," \"out_onexec\": 0,\n"," \"tf_exit\": \"None\",\n"," \"rsi_exit\": 0\n","} {\n"," \"leverage\": 2,\n"," \"static_lvrg\": 0,\n"," \"allow_float\": 0,\n"," \"target_pct\": 0.03,\n"," \"lvrg_rejection\": 0\n","} "]}],"source":["# funcs = [ep_out_v2, ep_loc_point2_v2, lvrg_set]  # ep_out for p1 & p2\n","funcs = [ep_out, ep_loc_point2_v2, lvrg_set]     # ep_out for p1-only\n","# funcs = [ep_out_v0, ep_loc_point2_v2, lvrg_set]  # ep_out for v3\n","\n","id_idx_list = [0]  # ID_arr 에서 import 할 id_idx 선택\n","public_override = 1\n","utils_override = 1\n","config_override = 1\n","\n","# ------ config_list 와 같은 org_var 에 override 하는거 다시 생각하기 ------ #\n","ID_list = ID_arr[id_idx_list]\n","utils_list = utils_arr[id_idx_list]\n","config_list = config_arr[id_idx_list]\n","\n","if config_override or utils_override:\n","  assert len(config_list) == 1\n","  if config_override:    \n","    config_list[0] = config\n","    ID_list[0] = config.selection_id\n","  \n","config = config_list[0]  # base config = config_list[0]\n","tp_fee, out_fee = calc_tp_out_fee_v2(config)   # -> rev_pr 때문에 일단 이곳에도 선언함\n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","# ------- plot param ------- #\n","show_detail = 0\n","# ------- temp param ------- #\n","allow_osc_touch = 0\n","rsi_gap = 5\n","\n","# ------- just printing config ------- #\n","# ['selection_id', 'pos_set', 'loc_set', 'tr_set', 'ep_set', 'tp_set', 'out_set', 'lvrg_set']\n","_ = [print(json.dumps(config[key_], indent=1), end=' ') for key_ in ['selection_id', 'loc_set', 'tr_set', 'ep_set', 'tp_set', 'out_set', 'lvrg_set']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"afUV2b1jaggN"},"outputs":[],"source":["# config.trader_set.start_datetime = \"2020-09-05 00:00:59.999\" #  \"2020-09-05 00:00:59.999\" # 2022-02-01 16:34:59.999000 2022-01-14 16:34:59.999000  \"2020-09-05 00:00:59.999\" \"2022-01-10 00:00:59.999\" \"2021-10-04 02:39:59.999000\"\n","# config_list[0].tr_set.wave_min = 20\n","# config_list[0].tr_set.wave_max = 50"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2958,"status":"ok","timestamp":1650672677509,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"WstWVNihCNH8","outputId":"f0bc9223-0c23-49df-84fe-658d182bf4db"},"outputs":[{"output_type":"stream","name":"stdout","text":["public_indi elapsed time : 1.1893243789672852\n","make data_list elapsed time : 0.0005407333374023438\n"]}],"source":["# ------ slicing res_df ------ #\n","res_df = res_df_.loc[pd.to_datetime(config.trader_set.start_datetime):]\n","\n","np_timeidx = np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","\n","# ------------ public_indi ------------ # - 딱히 반복될 이유가 없는 phase - annot. 달때, why 까지 적어주면 좋음\n","start_0 = time.time()\n","if public_override:\n","    res_df = public_indi(res_df, config_list[0], np_timeidx)  # 현재 대부분의 시간은 h_candle 에서 소비되고 있음\n","else:\n","    res_df = utils_public.public_indi(res_df, config_list[0], np_timeidx)\n","print(\"public_indi elapsed time :\", time.time() - start_0)\n","\n","# ------------ make data_list ------------ # - 반복될 이유가 없는 phase - public_indo 에 종속\n","start_0 = time.time()\n","ohlc_cols = ['open', 'high', 'low', 'close']\n","ohlc_list = [res_df[col_].to_numpy() for col_ in ohlc_cols]\n","print(\"make data_list elapsed time :\", time.time() - start_0)"]},{"cell_type":"markdown","metadata":{"id":"RqRF1eyZ0xBL"},"source":["### idep_plot"]},{"cell_type":"code","execution_count":65,"metadata":{"id":"_iYcJk8nK8Yq","executionInfo":{"status":"ok","timestamp":1650672993101,"user_tz":-540,"elapsed":357,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------ edit utils config ------ #\n","# config_list[0].pos_set.short_ban = 0\n","# config_list[0].tr_set.p1_period1 = 20\n","# config_list[0].tr_set.p1_period2 = 50\n","# # config_list[0].tr_set.p2_period1 = 20\n","# # config_list[0].tr_set.p2_period2 = 20\n","# config_list[0].tr_set.tp_gap = 0.3\n","# config_list[0].tr_set.ep_gap = -1.0\n","config_list[0].tr_set.out_gap = 0.0\n","# config_list[0].tr_set.wb_tp_gap = 0\n","config_list[0].tr_set.wb_out_gap = 0.0\n","# config_list[0].tr_set.bias_info_tick = 240"]},{"cell_type":"code","execution_count":66,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":568,"status":"ok","timestamp":1650672995117,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"iI39YI_5GguK","outputId":"17ad2f84-04ba-4252-9d46-b85e882f4028"},"outputs":[{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["enlist_rtc elapsed time : 0.05799674987792969\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["enlist_tr elapsed time : 0.3118147850036621\n"]}],"source":["if utils_override:   # 현재, utils_override 하는 경우 1개의 ID 만 허용함 \n","  start_0 = time.time()\n","  res_df = enlist_rtc(res_df, config_list[0], np_timeidx)\n","  print(\"enlist_rtc elapsed time :\", time.time() - start_0)\n","  start_0 = time.time()\n","  res_df = enlist_tr(res_df, config_list[0], np_timeidx)    # 36995.0 -> 152766.0 # 4044 np.sum(long_open_res == 1) : 4325\n","  print(\"enlist_tr elapsed time :\", time.time() - start_0)\n","else:\n","    start_0 = time.time()\n","    for utils_, config_ in zip(utils_list, config_list):\n","        res_df = utils_.enlist_rtc(res_df, config_, np_timeidx)\n","        res_df = utils_.enlist_tr(res_df, config_, np_timeidx)\n","    print(\"elapsed time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":96,"metadata":{"id":"gfDSOGMd91rE","executionInfo":{"status":"ok","timestamp":1650674504094,"user_tz":-540,"elapsed":398,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------ edit loc_set config ------ #\n","# config_list[0].loc_set.point.cppr = 0.5   # \"None\" # 0.5 0.7\n","# config_list[0].loc_set.point.wbr = \"None\" # 0.7\n","config_list[0].loc_set.point.dbr = \"None\"   # 0.7\n","config_list[0].loc_set.point.dbr2 = \"None\"  # 0.7\n","config_list[0].loc_set.point.brr = \"None\"   # 0.8\n","# config_list[0].loc_set.point.ir = \"None\" # \"None\" 0.8\n","# config_list[0].loc_set.point.wick_score_list = \"[]\"\n","# config_list[0].loc_set.point.score_itv_list = \"['H']\"\n","# # config_list[0].loc_set.point.abs_ratio = \"None\"  # 0.7\n","config_list[0].loc_set.point.short_tr_thresh = \"None\" #  0.8 # # 0.7 # tr_thresh 엄청 민감함\n","config_list[0].loc_set.point.long_tr_thresh = 0.85 #  0.8 ## 0.7\n","# config_list[0].loc_set.zone.use_zone = 0\n","# # config_list[0].loc_set.zone.base_roll_period = 60"]},{"cell_type":"code","execution_count":97,"metadata":{"executionInfo":{"elapsed":3322,"status":"ok","timestamp":1650674507786,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"9DPgykxQ92mU","colab":{"base_uri":"https://localhost:8080/"},"outputId":"6d8245b4-b35f-4f96-af0b-d2747cb42f79"},"outputs":[{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 3.226400136947632\n"]}],"source":["open_info_df = get_open_info_df(ep_loc_v3, res_df, np_timeidx, ID_list, config_list, id_idx_list)  # --> point * dur. 관련 (loc_set) param 에 종속 (open_info 가 변경되는게 아니라면, 재실행할 필요없음)"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"KqVkg236t_f2","executionInfo":{"status":"ok","timestamp":1650672801273,"user_tz":-540,"elapsed":438,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------ edit entry & exit (ep, tp, out, ..) config ------ #\n","# config_list[0].tr_set.ei_k = 0.\n","config_list[0].tr_set.ep_out_tick = 15\n","# # # config_list[0].ep_set.point2.use_point2 = 1\n","# # # config_list[0].ep_set.point2.entry_type = \"LIMIT\"\n","# # # config_list[0].ep_set.point2.wick_score_list = str([])\n","# # # config_list[0].tp_set.static_tp = 1\n","# # # config_list[0].tp_set.non_tp = 0 # 0 1\n","# config_list[0].tp_set.p_ranges = \"[1]\"\n","# config_list[0].tp_set.p_qty_ratio = \"[1]\"\n","# # config_list[0].tp_set.p_ranges = \"[0.2, 0.66, 1]\"\n","# # config_list[0].tp_set.p_qty_ratio = \"[0.25, 0.25, 0.5]\"\n","# # config_list[0].tp_set.p_ranges = \"[0.66, 1]\"\n","# # config_list[0].tp_set.p_qty_ratio = \"[0.1, 0.9]\"\n","# # # config_list[0].out_set.hl_out = 1\n","# # # config_list[0].out_set.tf_exit = \"None\" # 15 \"None\"\n","# config_list[0].lvrg_set.leverage = 1\n","# config_list[0].lvrg_set.static_lvrg = 0\n","# config_list[0].lvrg_set.target_pct = 0.03\n","# # config_list[0].lvrg_set.allow_float = 0\n","# config_list[0].lvrg_set.lvrg_rejection = 0"]},{"cell_type":"code","execution_count":98,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":644},"executionInfo":{"elapsed":7137,"status":"ok","timestamp":1650674517358,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"HHq6cr9GPBot","outputId":"db0e0f2f-f378-4bbb-b96f-701adaf36b7e"},"outputs":[{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 2.4730546474456787\n","short_obj.shape : (1066, 5)\n","long_obj.shape : (896, 5)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1728x576 with 6 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 3.565455913543701\n"]}],"source":["test_ratio = 0.0\n","short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_bias_arr, short_false_bias_arr, short_point1_arr, short_en_tp1, short_en_out0, \\\n","      long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_bias_arr, long_false_bias_arr, long_point1_arr, long_en_tp1, long_en_out0 = \\\n","get_res_v4(res_df, open_info_df, ohlc_list, config_list, np_timeidx, funcs, test_ratio=test_ratio, plot_is=1, signi=False)   # open 이 많을 수록 en_ex_pairing elapsed time : 11.58370590209961"]},{"cell_type":"markdown","metadata":{"id":"n6gc7lERC4VE"},"source":["### statistics (stem 별로 진행)"]},{"cell_type":"code","execution_count":69,"metadata":{"id":"HHjIdn2MC4VE","executionInfo":{"status":"ok","timestamp":1650673010799,"user_tz":-540,"elapsed":2,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["selection_id = config.selection_id\n","\n","short_open_i = short_obj[-1].astype(int)\n","long_open_i = long_obj[-1].astype(int)\n","\n","short_open_tp_1 = res_df['short_tp_1_{}'.format(selection_id)].to_numpy()[short_open_i]\n","long_open_tp_1 = res_df['long_tp_1_{}'.format(selection_id)].to_numpy()[long_open_i]\n","\n","short_open_tp_gap = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()[short_open_i]  # use open_i\n","long_open_tp_gap = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()[long_open_i]\n","\n","short_open_epout_0 = res_df['short_epout_0_{}'.format(selection_id)].to_numpy()[short_open_i]\n","long_open_epout_0 = res_df['long_epout_0_{}'.format(selection_id)].to_numpy()[long_open_i]\n","\n","short_open_epout_gap = res_df['short_epout_gap_{}'.format(selection_id)].to_numpy()[short_open_i]  # use open_i\n","long_open_epout_gap = res_df['long_epout_gap_{}'.format(selection_id)].to_numpy()[long_open_i]\n","\n","# ------ pairing 된 en, ex_idx 기준으로 survey 진행 ------ #\n","# 0. high, low (exit_done 까지의) -> partial (tpg) 과 outg survey 목표\n","#   a. short -> tpg - low, outg - high\n","#   b. long -> tpg - high, outg - low\n","short_max_tpg = get_max_tpg_v2(\"SELL\", ohlc_list, short_pr, short_obj[:4], short_open_tp_1, short_open_tp_gap)\n","long_max_tpg = get_max_tpg_v2(\"BUY\", ohlc_list, long_pr, long_obj[:4], long_open_tp_1, long_open_tp_gap)\n","\n","# ------ 0. tp 까지 도달하는 최소 idx 도출, en_idx 부터 ------ #\n","#   a. bias_info_tick 의 limit 을 정해주지 않으면 굉장히 길어질 수 있다고 봄\n","# short_max_outg, short_outg_open_idx = get_max_outg_v2(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_epout_0, short_open_epout_gap)\n","# long_max_outg, long_outg_open_idx = get_max_outg_v2(\"BUY\", config, ohlc_list, long_obj, long_tpout_arr, long_open_epout_0, long_open_epout_gap)\n","short_max_outg, short_open_idx, short_true_open_idxth = get_max_outg_v3(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_epout_0, short_open_epout_gap)\n","long_max_outg, long_open_idx, long_true_open_idxth = get_max_outg_v3(\"BUY\", config, ohlc_list, long_obj, long_tpout_arr, long_open_epout_0, long_open_epout_gap)\n","\n","current_tpg= config.tr_set.tp_gap\n","current_outg = config.tr_set.out_gap"]},{"cell_type":"markdown","source":["#### consecutive dur. value survey on bias"],"metadata":{"id":"tOFkzUX2imQu"}},{"cell_type":"code","source":["res_df.dtypes"],"metadata":{"id":"CgvSrXaZEkMZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":87,"metadata":{"id":"gnSvYKIzC4VF","executionInfo":{"status":"ok","timestamp":1650674210964,"user_tz":-540,"elapsed":4,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------------ dependent vars. ------------ #\n","# res_df 에 존재하는 col 는 모두 사용가능함\n","# ------ 1. 도출한 outg 와 vars. pairing 진행 (by valid_idx) ------ #\n","devided_cols = ['tr_{}'.format(selection_id)]  # , 'ir_5T'\n","public_cols = ['b1_cppr_15T', 'b1_updbr', 'b1_lwdbr', 'b1_updbr_cppr', 'b1_lwdbr_cppr']  # 'abs_ratio_5T', 'rel_ratio_5T', 'body_rel_ratio_5T'\n","# public_cols = ['b1_updbr']  # 'abs_ratio_5T', 'rel_ratio_5T', 'body_rel_ratio_5T'\n","\n","short_datas = [res_df['short_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","long_datas = [res_df['long_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","\n","titles = devided_cols + public_cols"]},{"cell_type":"code","source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(14, 18))\n","nrows, ncols = len(short_datas), 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","\n","num_samples = 30\n","alpha = 0.8\n","xmin = -20\n","\n","for ings_idx, (title, short_data, long_data) in enumerate(zip(titles, short_datas, long_datas)):\n","  inner_gs = gs[ings_idx].subgridspec(nrows=1, ncols=2)\n","\n","  short_open_data = short_data[short_open_idx]\n","  long_open_data = long_data[long_open_idx]\n","\n","  short_true_data = short_open_data[short_bias_arr.ravel()]\n","  short_false_data = short_open_data[short_false_bias_arr.ravel()]\n","  long_true_data = long_open_data[long_bias_arr.ravel()]\n","  long_false_data = long_open_data[long_false_bias_arr.ravel()]\n","  \n","  short_true_valid_idx = np.ones_like(short_true_data).astype(bool)\n","  short_false_valid_idx = np.ones_like(short_false_data).astype(bool)\n","  long_true_valid_idx = np.ones_like(long_true_data).astype(bool)\n","  long_false_valid_idx = np.ones_like(long_false_data).astype(bool)\n","\n","  short_true_valid_idx *= ~np.isinf(short_true_data)\n","  short_false_valid_idx *= ~np.isinf(short_false_data)\n","  long_true_valid_idx *= ~np.isinf(long_true_data)\n","  long_false_valid_idx *= ~np.isinf(long_false_data)\n","  \n","  short_true_valid_idx *= short_true_data > xmin\n","  short_false_valid_idx *= short_false_data > xmin\n","  long_true_valid_idx *= long_true_data > xmin\n","  long_false_valid_idx *= long_false_data > xmin\n","    \n","  plt.subplot(inner_gs[0])\n","  v, c = np.unique(short_true_data[short_true_valid_idx], return_counts=True)\n","  plt.hist(v, weights=c, bins=num_samples, alpha=alpha, color='#00ff00', edgecolor='black')\n","  v, c = np.unique(short_false_data[short_false_valid_idx], return_counts=True)\n","  plt.hist(v, weights=c, bins=num_samples, alpha=alpha, color='#ff0000', edgecolor='black')\n","  plt.title('short_' + title)  \n","\n","  plt.subplot(inner_gs[1])\n","  v, c = np.unique(long_true_data[long_true_valid_idx], return_counts=True)\n","  plt.hist(v, weights=c, bins=num_samples, alpha=alpha, color='#00ff00', edgecolor='black')\n","  v, c = np.unique(long_false_data[long_false_valid_idx], return_counts=True)\n","  plt.hist(v, weights=c, bins=num_samples, alpha=alpha, color='#ff0000', edgecolor='black')\n","  plt.title('long_' + title)\n","  \n","# plt.suptitle(title)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Sahvc-R0jD1A","executionInfo":{"status":"ok","timestamp":1650674218165,"user_tz":-540,"elapsed":7204,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"3d798d10-37a8-4446-de43-deec299d48b9"},"execution_count":88,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1008x1296 with 12 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAzgAAAQBCAYAAADmXi9pAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdfVxUZf7/8TfDjfeIgkKCYpmYVmtapL+1otQyZE3bXLfMYovF3f2W5aNaJWu/2uru6j7arN3tZpvMyEwx0wW/Zl9bNb+1pZKYaZFiIXHTgAiINykI1+8PdBZ0gAEGZhhez8fjejhzznXO+RzAueZzrutcx0eSEQAAAAB4AYu7AwAAAAAAVyHBAQAAAOA1SHAAAAAAeA0SHAAAAABegwQHAAAAgNcgwQEAAADgNUhwAAAAXCw7O1vjxo1zdxhAh0SCg3Zv/vz5WrFihbvDAADAIxhjNGjQoGZtO3ToUKWnp6ukpEQlJSX64IMPNHTo0Ea3u/nmm7V161aVlZUpOzv7ovWRkZHaunWrTp48qczMTJI/tCoSHOACy5cv18KFC52q25IrdMHBwfr4449VXFys0tJSffLJJ/rxj3/c6HZXXnml3n//fR05ckTGXPyc3l69emndunU6ceKEDh8+rHvuuadZ8QEAvJOvr2+96woKCjR16lT17t1bISEhSktL0+rVqxvd58mTJ/X666/rt7/9rcP1q1at0p49exQcHKynnnpKa9euVUhISLPPAWgICQ5Qi8Xi2v8SDTUiJ06c0IMPPqg+ffqoV69eWrJkiTZs2NDgNpJUWVmpNWvWKCEhweH6F198URUVFQoNDdW9996rl19+WcOGDWvReQAAmicgIEBLly5Vfn6+8vPztXTpUgUEBEiSYmJilJubq8cee0yFhYUqKCjQL37xC/u2vXv3Vlpamo4dO6Zdu3Zp4cKF+uijjxo83vbt2yVJe/fu1fHjxzVt2jT7cebMmaPvv/9ey5cvr3f7Y8eOKScnR5Lk4+OjqqoqXX755Y2eZ3p6ut566y19++23F60bPHiwRo4cqfnz5+v06dNat26d9u3bp7vuuqvR/QLNZSiU9lLmzJlj8vLyTHl5ufn666/N2LFjzfz5801KSopJTk425eXlZv/+/ebaa6+1b3PFFVeYbdu2mdLSUrN//34zadIk+7rly5ebl156yWzcuNGcOHHCJCYmmoqKCnPmzBlz/Phxk5aWVm8sb775pqmqqjKnTp0yx48fN7/97W9NZGSkMcaYBx980OTk5Jjt27c7dV4+Pj7mJz/5iTHGmD59+ji1zaBBg4yp6cKxl65du5ozZ86YwYMH14nzT3/6k9t/dxQKhdKRSnZ2thk3bpx55plnzKeffmr69OljQkJCzL///W/z+9//3kgyMTExprKy0jzzzDPGz8/PxMbGmpMnT5qgoCAjyaxatcqsWrXKdOnSxQwdOtR899135qOPPmr02MYYM2jQIPv788dZvHixCQgIMJ07d250H6WlpaaystJUVVWZp556yunzHjdunMnOzq6zbMqUKearr76qs+xvf/ub+etf/+r23xPFa4vbA6BQnCpRUVHmu+++M5dccomRZCIjI81ll11m5s+fb3744QcTGxtrLBaL+eMf/2g+/fRTI8n4+fmZrKws8+STTxp/f39zyy23mPLychMVFWWkmgSnrKzM/PjHPzY+Pj6mU6dOZvny5WbhwoVOxXS+ATv//nyCk5ycbLp27epUI7J3715z5swZY4wxr776qtM/D0cJzjXXXGNOnjxZZ9njjz/eYKJGoVAoFNeX8+3DoUOHTGxsrH35bbfdZk8AYmJizKlTp4yvr699fWFhoRk1apSxWCymoqLC3l5JMgsXLmx2gnPmzBnTqVOnJp1D165dzW9+8xszceJEp7dxlODMmDHD3i6fL4sWLTLLly93+++J4p2FIWpoN6qqqtSpUycNGzZMfn5+ysnJsXeFf/zxx9q0aZOqq6u1YsUKDR8+XJI0evRode/eXYsXL1ZlZaW2bdum//mf/6lzX0pqaqo++eQTGWN05swZl8S6YMECnTp1SqdPn2607vDhwxUYGKh77rlHH3/8cYuO2717d5WXl9dZduzYMfXo0aNF+wUANE+/fv3sQ74kKScnR/369bO/P3r0qKqqquzvT506pe7du6tPnz7y9/dXbm6ufV3t10115MiRJrdxp06d0iuvvKI333xTffr0afaxT5w4ocDAwDrLAgMDdfz48WbvE2gICQ7ajW+++UazZ8/WggULVFRUpFWrVumSSy6RJNlsNnu9U6dOqUuXLvL19VW/fv2Um5tb52b8nJwchYeH29+3pMGoT1P3eebMGa1evVpJSUn60Y9+1Ozj0ogAgGcp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4xKchn7ud955p3n44YdNQUGBOXr0qNmzZ4+59dZbjfSfBMfX17fBY2zbts0kJCS45W/mrrvuMgcPHjQHDhwwVqvVBAQEuP1nLsm8/fbbpqCgwFRUVJjc3Fzz4IMPml/96lfmV7/6lb3O3//+d3Po0CHzxRdfeNTnS2Oxh4aGmtzcXHPs2DFTWlpqcnNzTY8ePdweN6V9t2vNOR9PaeucSXCc/f001AY6Kg0lOH379jW/+c1vzOjRo12e4Dh7PvPnzzd/+tOfLtq2sXbl/vvvN7fffrv55z//6TDByc3NddnvxZlzGTp0qPn444/N559/Xqed9NTSXtvO+kort6nuP0FKxylz5swxeXl5pry83Hz99ddm7NixZv78+SYlJcUkJyeb8vJys3///jp/xFdccYXZtm2bKS0tNfv376/zIbt8+XLz0ksvmY0bN5oTJ06YxMREU1FRYc6cOWOOHz9u0tLSGownOzvbJCUlmS+//NKUlJSY119/3XTq1Omierm5uU4nOJ07dzbPPvusOXz4sCkrKzMfffSR6dy5sz2xSExMNPn5+aagoKDOlfL58+ebd955x6xevdqUl5eb3bt3mx/96Ed1Yp0zZ47Zu3evOX36dKMNiSSzcOFCs3z58jrLPCHBoVAoFE8v579IBwQEmKVLl5r8/HyTn59vli5dav/ieP5L+WOPPWYKCwtNQUGB+cUvfmHfR+/evU1aWpo5duyY2bVrl1m4cKH56KOPGj22McbMmjXLfPPNN+bIkSPmz3/+s/3K/Pni6+vbpASnV69e5vXXXzf5+fmmpKTErF+/vs45PPnkk+bIkSMmOzu7Tq/I8uXLzcsvv2w2b95sysvLzYcffmgGDBhQJ9b/+q//MgcPHjTffvutU7GsWLGiTRIcSsctXnUPDjxbVFSUHn74YUVHRyswMFATJkzQ4cOHJUl33HGHVq9eraCgIKWlpenvf/+7pJqbMzds2KDNmzerb9++mjVrllauXKmoqCj7fqdPn64//OEP6tGjh958802tXLlSf/7zn9WjRw/dcccdjcZ17733asKECRo0aJCioqL09NNPt+g8n332WV177bX68Y9/rN69e2vOnDl1bsK85ZZbNHjwYN12222aO3dunTHekydP1jvvvKPevXvr7bff1j//+U/5+fnZ199zzz2Ki4tTUFBQi28czMnJUW5url5//XUFBwe3aF8A4K2eeuopjR49Wtdcc42GDx+u66+/vk47ERYWpp49eyo8PFwJCQl68cUXFRQUJEl68cUXdfLkSYWFhSk+Pl7x8fFOH/fOO+/Uddddp5EjR2ry5Ml68MEHW3QeK1asUNeuXXXllVeqb9++Wrp0aZ1zCAkJUXh4uOLj4/Xqq6/WaWfvvfdeLVy4UCEhIfr8888veljplClTNGrUKA0bNqxFMfbt21c2m03ffvutnnvuOXXt2rVF+0PH5vYsi9IxyqBBg0xhYaEZN26c8fPzsy+fP3+++eCDD+zvhw4dak6dOmUkmRtuuMF8//33da5cvf322/YrP8uXLzfJycl1jtOUIWrZ2dl1ukJjY2PNoUOHLqrnbA+Oj4+POXXqVJ2el/PlfM9J7eEWS5YsMa+99pr951B7rLmPj48pKCgwN9xwgz3WBx54oEk/c0c9ON26dTPXXnut8fX1NX379jXvvPOOef/99y/alh4cCoXSkcv5noJDhw6Z2NhY+/LbbrvNfv9JTEyMOXXqVJ0e8cLCQjNq1ChjsVhMRUWFiYqKsq9rSg/OhAkT7O9/85vfmH/961916jSlBycsLMxUVVXZHzZau8TExJjKykrTtWtX+7KUlBT7vZnLly83q1atsq/r1q2bOXv2rImIiLDHessttzTpZ+uoByc0NNQMHTrU+Pj4mIEDB5rt27ebV155pd7fi7v/PiieXejBQZv55ptvNHv2bC1YsEBFRUVatWqVLrnkEkmSzWaz1zt16pS6dOkiX19f9evXT7m5uTLG2Nfn5OTUmQe99hzpzVF7+5ycHPXr16/Z+woJCVGXLl30zTffNOt4tdcZY5SXl1fv+uY6efKkdu/eraqqKhUVFenhhx/WhAkT1L179xbvGwC8Tb9+/ZSTk2N/f+Hn9tGjR+v0qJ86dUrdu3dXnz595O/vX+dzuymf4a5sm/r376+SkhL7w0YvVFpaqlOnTtV7vNqxnDx5UiUlJS5vmwoLC5WZmSljjA4fPqw5c+borrvuavF+0TGR4KBNrVq1SjfeeKMiIyNljNGSJUsarF9QUKD+/fvXmZd+wIABdaYJrJ38OHrfmNpTEA4YMKBFTzIuLi7WDz/80OD0ng0dr/Y6Hx8fRURE1Fnf1HNzxvl9Wix8HADAhQoKChQZGWl/72w7ceTIEVVWVtZ5UGntz/jGuLJtys3NVe/evet9/k6vXr3qDAdrqG3q1q2bevfu3SZtE+0Smou/HLSZqKgo3XLLLQoICNDp06f1ww8/NPqAsJ07d+rUqVOaM2eO/Pz8FBMTo0mTJmn16tX1blNYWKjLLrvM6bgeeughhYeHq1evXnrqqaeUkpJiXxcQEKBOnTpd9Lo+xhi9/vrreu6553TJJZfIYrFo9OjRCggIsNf53e9+py5dumjYsGF64IEH6hzv2muv1Z133ilfX1/Nnj1bZ86c0Y4dO5w+l/N8fX3VqVMn+fr61nktSddff72ioqLk4+Oj3r17669//au2bdum8vLyJh8HALzdqlWr9PTTTyskJETBwcH67//+b7311luNblddXa1169ZpwYIF6tKli4YMGaL777/f6eP+9re/VVBQkCIiIvToo4/WaSs6depkb49qv66PzWbTpk2b9NJLLykoKEh+fn668cYb69R55pln5O/vrxtuuEE/+clP9M4779jXTZw4UWPGjJG/v78WLlyoHTt2KC8vz+lzOc/Pz0+dOnWSxWKp81qSbr75Zg0YMEBSzfNOFi9erNTU1CYfA5BIcNCGOnXqpMWLF6u4uFg2m019+/bVk08+2eA2lZWVmjRpkmJjY1VcXKyXXnpJ999/vw4cOFDvNsuWLdOwYcNUWlqq9evXNxrX22+/rc2bN+vbb7/VN998o0WLFtnXHThwQKdPn1ZERIQ2b96s06dP17mS58gTTzyhffv2KT09XSUlJVqyZEmdq1Dbt2/XoUOHtGXLFj377LP64IMP7OtSU1P185//XKWlpbrvvvv005/+VGfPnm30HC709NNP6/Tp03ryySd133336fTp0/abYi+77DK9//77On78uPbv368zZ87onnvuafIxAKAjWLRokT777DN98cUX2rdvnzIyMuq0Ew15+OGH1bNnT9lsNq1YsUKrVq3SmTNnnNo2NTVVu3fv1ueff66NGzdq2bJl9nWnT5/WyZMnJf2nnWrMfffdp8rKSn399dcqKirS7Nmz7etsNptKS0tVUFCglStX6te//nWddvbtt9/W/PnzVVJSomuvvVYzZsxw6hwuZLVadfr0aU2fPt3eTt13332SpBEjRuiTTz7RyZMn9cknn2jfvn165JFHmnUcwEc1N+MAaGWRkZE6fPiw/Pz8HM6ANn/+fF1++eX2D3sAgHdZvHixwsLC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ekwd/X0GBwebkpISM3jwYNOrVy+zY8cOM3ToUJ/E6+w65o/HltK1YuW8+9nPfmYWLlxoJJmHH37YZGVl+TxuT+zn6NGjTZ8+fYwk89Of/rTb7afVa8hFF11kNm7caD799FOnbb8/Fyv7efXVV5vt27eb8PBwI8lcdtllPo/b3fv4pz/9yd7eDh061JSWlvo87o6W22+/3QwbNszp57jExESzZs0aI8mMGDHCbNq0yecxe/x3Lz+1bt061dfXS5I2bdqk2NhYSVJSUpKysrJUV1enQ4cOqaSkRMOHD2/z/DvvvFMrVqyQJGVmZmrixIkei3Xfvn06cOBAu3V+/OMfKysry2MxWGUl1vYkJSUpMzNTkuePq+Q83h07dujYsWOSpD179qhPnz4KCwvzaCyuOIvVH89ZZyZNmqSlS5d6/X3dafjw4SopKVFpaanOnj2rrKwsJSUl+SQWZ9cxBB4r513z6+eKFSs0ZswYX4TaJVb288MPP9RXX30lqXue91avIS+++KLmzZunr7/+2gdRdp2V/UxNTdUf/vAH1dbWSpKOHz/ui1A7zco+GmPUr18/SdIll1yio0eP+iLULvnoo49UU1PjdHtSUpIWLVokSdq8ebPCw8MVHR3trfB8wm8TnOYef/xxrV27VpIUExOjsrIy+7by8nLFxMS0qN+/f3/V1tbaP1g4quNtDz/8cLsfHKdPn66dO3cqIyPD492+nBk8eLC2b9+uDz/8ULfddpvDOlFRUbLZbJIkm82mqKgob4bo0IMPPqjt27errq7O4XZfH9vucs7efvvtqqysVElJicPtxhjl5uZq69atSk1N9Wpszbn6fVo53r7Q/DrWmr8cW3SelfOueZ36+nqdOnVK/fv392qcXdXRv6+UlBSn572/srKPw4YN08CBA7VmzRpvh+c2VvZzyJAhGjJkiD7++GN9+umnuueee7wdZpdY2cc5c+ZoypQpKisr05o1azRjxgxvh+lx/touelKoL9983bp1DjPIX/3qV/YF12bNmqVz5875vN+nlVidGT58uM6cOaM9e/Y43L5w4UK9+OKLMsboxRdf1KuvvqqUlBSvxnrs2DFdeeWVqqmp0c0336y//vWvuu666/T555+3+17GmE7H2ZV4m1x77bWaN2+e03Et/nBs/YGVuH/84x+3m4TfdtttOnr0qC677DKtW7dO+/bt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8+ijj9pf49JLLzU5OTnm1KlTZsuWLebFF19s0R44K+1dZ5tKSEhIhxKc1glb8y8Xm9qP1NRUU1FRYY4ePdpi2v0LLrjAvPXWW6ampsbs2bPH/Md//IcpKytr8drO2tKmY/Tss8+aY8eOmUWLFrUb5/33328KCgrMqVOnTElJibnnnnuMZK39cxb/7Nmzzbvvvmveeecdc+rUqRZtNKVHFp8HQAmgMmTIEHPkyBH7nbRBgwaZ73znO2b27Nnmq6++MomJiSY4ONi8/PLL9jtboaGhpri42Dz33HOmV69e5o477jCnT582Q4YMMVLjh/Ha2lrz/e9/3wQFBZnevXubt956y/IH69LSUrN7924TGxtrIiIizMcff+zwue5OcNavX28iIiLMwIEDzf79++31n3jiCVNUVGSPZ/369W0SnPLycnPdddeZvn37mhUrVrRpoDIzM03fvn3NBRdc4DTGK6+80pw+fdpMnjzZhIaGmksvvdTceOON9mN6+vRpc/vtt5uwsDDz+uuvW44/OTnZnD171kyfPt2EhIS0GwOFQqH4c2lKCF544QXz6aefmssuu8xERkaaTz75xPz61782UuOH97Nnz5oXXnjBhIaGmsTERPPll1/a14ZZunSpWbp0qenTp48ZOnSoOXLkiOUEx9l1tql4IsFZsmSJ6du3r7n++utNVVWVvf5vfvMb849//MNERESY2NhYs3v37jYJjrO2tOkYzZ0714SFhbXbLiQkJJja2lozduxYExQUZAYMGGCuueYaI1lr/5zFP3v2bFNXV2eSkpJMUFAQbRPF5wFQAqhcddVVprKy0owZM8aEhobaH589e7ZZt26d/eehQ4eaM2fOGEnmtttuM8eOHWvxzdWSJUvM7NmzjdT4YTwzM7PF+3Q0wWl+mzYxMdHhoqvuTnCavpGSGhf4++CDD4wkk5eX1yKeu+66q02C85vf/KbFsfrmm29McHCw/QJvpWtLWlqaWblypcNtb731llm6dKn95wsvvNCcO3fOxMbGuow/OTnZHD582OfnGoVCoXS1NCUEJSUlJjEx0f743XffbV/wcdSoUebMmTMtul1VVlaaESNGmODgYFNXV2f/Qk5Sh+7gOLvONhVPJDhNyYTUuHj3m2++aSSZgwcPtognNTW1TYLjrC0dNWqU+eabbxz2jmhd/vd//9e89tprDrdZaf+cxT979myXvRooPaf47SQD6J4OHjyop59+WnPmzFFVVZWWLl2qK664QpJaDGg7c+aM+vTpo5CQEA0YMEBlZWUtpmQ8fPhwiznam8/f3hnNn3/48GENGDCgS6/Xlfds2t/m21w9NywsTJGRkQ63OzNw4MB2Z+dp/hpffvmlampqWhyX9o5ZV38fAOBPBgwY0OJa3Pqad+LECfs6ZVJjG3bRRRfpsssuU69evVpcEztyfezubVPzeI8fP65vvvnG5ft3pG1y1f7RNsEZEhy43dKlS3X77bdr0KBBMsZo3rx57dY/evSoBg4cqKCgIPtjV155ZYsZvVrPR9/R+embT4945ZVXdnml4i+//FJ9+/a1/+xoHRRn73ns2LE221w9t66uTtXV1fbHrOx/WVmZrrrqKqfbm7/HhRdeqEsvvbTFcWnvmLE+AIBAcvTo0RYzlVltJ44fP66zZ88qNjbW/ljza6cr3b1t6ky70JG2yVH7R9sEK0hw4FZDhgzRHXfcobCwMH399df66quv1NDQ0O5zNm/erDNnzujZZ59VaGioRo0apQkTJrQ7tXZlZaW+853vWI7rF7/4hWJiYhQREaFf/epXWrZsmX1bWFiYevfu3eb/7dmxY4ceeOAB9enTR1dddZXDxSb/8z//U+Hh4YqNjdVTTz1lf8/ly5frySefVExMjMLDw5WWltbmuVOmTNHQoUPVp08f/frXv9aKFStcHsfWFi9erLFjx+pHP/qRQkJCdOmll+rGG2+0b7/33ns1cuRI9erVSy+++KI2bdqk8vJyl/EDQKBZunSp/uu//kuRkZHq37+//t//+3/6y1/+4vJ5DQ0NWrlypebMmaM+ffrommuusU/Ha0V719nevXvb26Pm/2/Pjh07NHnyZIWGhuqWW26xLz3Q3PPPP68+ffro2muv1WOPPdaibXruuecUHh6umJgYzZgxo81z22tLrcrIyNBjjz2mO++8U0FBQRowYICuueYa+3ZX7Z+z+IHmSHDgVr1799bcuXNVXV0tm82myy+/XM8991y7zzl79qwmTJigxMREVVdX649//KOmTp2q/fv3O31ORkaGrr32Wp08eVKrVq1yGdeSJUuUm5urzz77TAcPHtRLL71k37Z//359/fXXio2NVW5urr7++muXaw7Mnz9fdXV1qqysVGZmpsMV6rOzs7Vt2zbt2LFDq1evVkZGhqTGBSr//ve/a+fOndq+fbtWrlzZ5rnvvPOO3n77bdlsNl1wwQV68sknXe5ja2VlZbr33nv1zDPPqKamRjt27GiR4CxZskSzZ89WTU2NbrnlFk2ZMsVS/AAQaF566SVt3bpVu3bt0u7du7V9+/YW7UR7pk+frksuuUQ2m03vvPOOli5daqmrltT+dfbrr7/Wl19+KenbdsqV559/XldddZVOnjypF154QUuWLGlTZ+PGjSopKVFeXp5eeeUVrVu3TpL0wgsv6PDhwyotLVVubq7eeeedNs9try21Kj8/X4899pjmz5+vU6dOaePGjS3aXFftn7P4gdZ8PhCIQgm00t76Bv5QXE3S4O/xUygUir+WuXPnmrffftvncbQuTYP0/WGNGmel9QQ+3S1+iv8U7uAAAAB00jXXXKMbbrhBkpSQkKCUlBRLPQsAeA4JDrq9gQMH6vPPP3dYOjLYs7XCwkKHr/nII4+4MfqueeSRRxzGWFhY6OvQAKBHuPjii7Vy5Up9+eWXWrZsmV599VVlZ2frtttuc9o2dYWz17ztttvctEdd99xzzzmMcc2aNb4ODT1EkBpv5QAAAABAt8cdHAAAAAABI9TXAUhSVVWVwwWlAADeM2jQIF1++eW+DsMv0U4BgO9Zbaf8IsE5fPiwEhISfB0GAPRo+fn5vg7Bb9FOAYDvWW2n6KIGAAAAIGCQ4AAAAAAIGCQ4AAAAAAIGCQ4AAACAgEGCAwAAACBg+MUsal3WT1KYxbp1kk57MBYAAByx2lbRTgFAlwRGghMmaa3FuomeDAQAACestlW0UwDQJXRRAwAAABAwSHAAAAAABAwSHABAt5eRkaHKykrt3r3b/lhERIRyc3N14MAB5ebmKjw83L5twYIFKi4u1s6dOzVs2DBfhAwA8BASHABAt/f2229r3LhxLR5LS0tTXl6ehgwZory8PKWlpUmSEhMTFR8fr/j4eE2bNk0LFy70RcgAAA8hwQEAdHsfffSRampqWjyWlJSkzMxMSVJmZqYmTpxof3zRokWSpM2bNys8PFzR0dHeDRgA4DGBMYsaAACtREVFyWazSZJsNpuioqIkSTExMSorK7PXKy8vV0xMjL1uk9TUVE2bNk2SFBkZ2aVY+kkKq5E0of16ddHMEA0AXUWCAwDoEYwxHaqfnp6u9PR0SVJ+fn6X3jtM0tpgSRHt10u0tb8dAOAaXdQAAAGpsrLS3vUsOjpaVVVVkqSKigoNHDjQXi82NlYVFRU+iREA4H4kOACAgJSTk6Pk5GRJUnJysrKzs+2PT506VZI0YsQInTp1qk33NABA90UXNQBAt7dkyRKNHj1akZGRKisr0+zZszV37lwtX75cKSkpOnz4sCZNmiRJWrNmje69916VlJTozJkzeuyxx3wcPQDAnVwmOBkZGbrvvvtUVVWlG264QZI0e/Zspaam6vjx45KkWbNmae3atZIap+VMSUlRfX29nnzySeXm5nowfAAApEceecTh42PHjnX4+PTp0z0ZDgDAh1x2UXO0toAkzZ8/X8OGDdOwYcPsyc3QoUM1efJkXXfddRo3bpz++Mc/KjiYXnAAAAAAvMNl9uFobQFnkpKSlJWVpbq6Oh06dEglJSUaPnx4l4MEAAAAACs6fXtl+vTp2rlzpzIyMhQeHi7J+doCjqSmpio/P1/5+fldXl8AAAAAAKROJjgLFy7UVVddpZtuuknHjh3Tq6++2uHXSE9PV0JCghISElRdXd2ZMAAAAACghU4lOFVVVWpoaJAxRunp6fZuaKwtAAAAAMCXOpXgNC2cJkk//OEPVVhYKKlxbYHJkycrLCxMcXFxio+P15YtW9wTKQAAPYGRFGmx9PNRjADgx1xOE+1obYHRo0frpptukjFGhw4d0hNPPCFJ2rt3r5YvX669e/fq3Llz+sUvfqGGhgaP7wQAAIHAnJAi6yVd7rxOXbR0Ov38D4neiAoAuheXCY6jtQX+/Oc/O63/8ssv6+WXX+5aVAAA9EAh9dLqYEkRzusk2rwWDgB0SyxSAwAAACBgkOAAAAAACBgkOAAAAAACBgkOAAAAgIBBggMAAAAgYJDgAAAAAAgYJDgAAAAAAgYJDgAAAICAQYIDAAhYTz/9tAoLC7V7924tWbJEvXv3VlxcnDZt2qTi4mJlZWWpV69evg4TAOBGJDgAgIA0YMAAPfnkk/re976nG264QSEhIZo8ebLmzZun+fPnKz4+XidPnlRKSoqvQwUAuBEJDgAgYIWGhqpPnz4KCQlR3759dezYMd15551asWKFJCkzM1MTJ070cZQAAHciwQEABKSjR4/qlVde0ZEjR3Ts2DGdOnVK27ZtU21trerr6yVJ5eXliomJ8XGkAAB3CvV1AO7Qr1YKm+C6Xl20dNrz4QAA/EB4eLiSkpI0ePBg1dbW6t1339W4ceMsPz81NVXTpk2TJEVGRnoqTACAmwVEghPWIK2NcF0v0eb5WAAA/mHs2LEqLS1VdXW1JGnlypUaOXKkwsPDFRISovr6esXGxqqiosLh89PT05Weni5Jys/P91rcAICuoYsaACAgHTlyRLfeeqv69OkjSRozZoz27t2rDRs26KGHHpIkJScnKzs725dhAgDcjAQHABCQtmzZohUrVmj79u3avXu3goOD9cYbb2jmzJn65S9/qeLiYvXv318ZGRm+DhUA4EYB0UUNAABH5syZozlz5rR4rLS0VCNGjPBNQAAAj+MODgAAAICAQYIDAAAAIGCQ4AAAAAAIGCQ4AAAAAAIGCQ4AAACAgEGCAwAAACBgkOAAAAAACBisgwMAQHdlJEVarFsn6bQHYwEAP9HzEhwaAwBAoAiRtNpi3URPBgIA/qPnJTg0BgAAAEDAYgwOAAAAgIBBggMAAAAgYJDgAAAAAAgYLhOcjIwMVVZWavfu3fbHIiIilJubqwMHDig3N1fh4eH2bQsWLFBxcbF27typYcOGeSZqAAAAAHDAZYLz9ttva9y4cS0eS0tLU15enoYMGaK8vDylpaVJkhITExUfH6/4+HhNmzZNCxcu9EzUAAAAAOCAywTno48+Uk1NTYvHkpKSlJmZKUnKzMzUxIkT7Y8vWrRIkrR582aFh4crOjra3TEDAAAAgEOdGoMTFRUlm80mSbLZbIqKipIkxcTEqKyszF6vvLxcMTExDl8jNTVV+fn5ys/PV2Sk1YVpAAAAAMA5t0wyYIzp8HPS09OVkJCghIQEVVdXuyMMAABauOSSS/Tuu++qqKhIe/fu1a233truOFIAQPfXqQSnsrLS3vUsOjpaVVVVkqSKigoNHDjQXi82NlYVFRVuCBMAgI5bsGCB/va3v2no0KG68cYbVVRU5HQcKQAgMHQqwcnJyVFycrIkKTk5WdnZ2fbHp06dKkkaMWKETp06Ze/KBgCAN/Xr108/+MEPlJGRIUk6e/asTp065XQcKQAgMLhMcJYsWaJPP/1U11xzjcrKyvT4449r7ty5uuuuu3TgwAGNHTtWc+fOlSStWbNGn332mUpKSpSenq6f//znHt8BAAAcGTx4sI4fP6633npL27dvV3p6uvr27et0HGlrjBUFgO4p1FWFRx55xOHjY8eOdfj49OnTuxYRAABuEBoaqptvvlkzZszQli1b9PrrrzvsjuZsHGl6errS09MlSfn5+R6NFQDgPi4THAAAuqPy8nKVl5dry5YtkqQVK1YoLS3NPo7UZrO1GEfaXZgTUuSE8z9US5rguF5dtHQ63VtRAYD/6FEJjjkhRdbLaWMg0SAAQKCorKxUWVmZhgwZogMHDmjMmDHau3ev9u7dq+TkZM2bN6/FONLuIqReWh1x/odqSRGO6yUyBBZAD9WjEpyQeml1sJw2BhINAgAEkhkzZmjx4sUKCwvTZ599pscee0zBwcFavny5UlJSdPjwYU2aNMnXYQIA3KhHJTgAgJ5l586dSkhIaPO4s3GkAc1IsjpXQp2k0x6MBQA8iAQHAICeIETSaot1Ez0ZCAB4VqfWwQEAAAAAf0SCAwAAACBgkOAAAAAACBiMwWkPAzIBAACAboUEpz0MyAQAAAC6FbqoAQAAAAgYJDgAAAAAAgYJDgAAAICAQYIDAAAAIGCQ4AAAAAAIGCQ4AAAAAAIGCQ4AAACAgEGCAwAAACBgkOAAAAAACBgkOAAAAAACRqivAwAAwJOCg4O1detWVVRUaMKECYqLi1NWVpb69++vbdu26Sc/+YnOnj3r6zDdzpyQIic0e6Ba0oSWdeqipdPp3owKADyPOzgAgID21FNPqaioyP7zvHnzNH/+fMXHx+vkyZNKSUnxYXSeE1IvrY1oVoJb/Rwhhdl8HSUAuB8JDgAgYMXExGj8+PF688037Y/deeedWrFihSQpMzNTEydO9FV4Ptd0l6dNqZEi1Vj6+TpIAOgguqi10uKWvoPb+ZKTW/pGjS2BK3WSTnclQgCAVa+//rqeffZZXXzxxZKk/v37q7a2VvX19ZKk8vJyxcTEOHxuamqqpk2bJkmKjLRyge9+Quql1REONlRLamj8b6I3AwIANyDBaaXFxb5akoMLf6KjW/ohklZbeANaCgDwivHjx6uqqkrbt2/XqFGjOvz89PR0paccG6TEAAAgAElEQVQ3fpuVn5/v7vAAAB5CggMACEgjR47U/fffr3vvvVcXXHCB+vXrpwULFig8PFwhISGqr69XbGysKioqfB0qAMCNGIMDAAhIs2bN0sCBAzV48GBNnjxZ69ev15QpU7RhwwY99NBDkqTk5GRlZ2f7OFIAgDuR4AAAepSZM2fql7/8pYqLi9W/f39lZGT4OiQAgBvRRa0T2qwtILWZkIC1BQDAf2zcuFEbN26UJJWWlmrEiBE+jggA4CkkOJ3gcNaZVhMSOJyIAAAAAIBH0UUNAAAAQMDo0h2c0tJSff7556qvr9e5c+eUkJCgiIgILVu2THFxcTp06JAmTZqk2tpad8ULAAAAAE51+Q7OHXfcoWHDhikhIUGSlJaWpry8PA0ZMkR5eXlKS0vrcpAAAAAAYIXbu6glJSUpMzNTkpSZmamJEye6+y0AAAAAwKEuJTjGGOXm5mrr1q1KTU2VJEVFRclmaxxhb7PZFBUV5fC5qampys/PV35+viIjI7sSBgAAAABI6uIYnNtuu01Hjx7VZZddpnXr1mnfvn1t6hhjHD43PT1d6emN8yjn5+d3JQwAAAAAkNTFOzhHjx6VJB0/flyrVq3S8OHDVVlZqejoaElSdHS0qqqquh4lAAAAAFjQ6QSnb9++uuiii+z/v/vuu1VYWKicnBwlJydLkpKTk5Wdne2eSAEAgHcYNfbxCFXjJ4VIJ+XSdra1Lv28ugcAerBOd1GLiorSqlWrGl8kNFRLlizR3//+d+Xn52v58uVKSUnR4cOHNWnSJLcFCwAAvCBIUvz5/5+U9L6TeuMlrbb4moldDQoArOl0glNaWqqbbrqpzeM1NTUaO3Zsl4ICAAAAgM5w+zTRAAAAAOArJDgAAAAAAgYJDgAAAICA0aV1cNAJRo2zyVhRJ+m0B2MBAAAAAgwJjreFiBlnAAAAAA8hwQEABKTY2FgtWrRIUVFRMsbojTfe0O9+9ztFRERo2bJliouL06FDhzRp0iTV1tb6Oly/ZU5IkROcbKyWdH5bXbR0Ot1bUQGAcyQ4AICAdO7cOT3zzDMqKCjQRRddpG3btmndunV69NFHlZeXp3nz5mnmzJlKS0tTWlqar8P1WyH10uoIJxurJZ3flmjzVkQA0D4SHABAQLLZbLLZGj91f/HFFyoqKlJMTIySkpI0evRoSVJmZqY+/PBDEhxvYAwqAC8hwfEQp7f0m93Ol7ilDwDeMGjQIA0bNkybN29WVFSUPfGx2WyKiopy+JzU1FRNmzZNkhQZafWTOZxiDCoALyHB8RCnt/Sb3c6XpHF72unbXNP4D19kAUDnXXjhhXrvvff09NNP6/PPP2+z3Rjj8Hnp6elKT2/8Bio/P9+jMQaCdsfqSFK1VJfKl3oAPI8Ex8dc9m1u4IssAOis0NBQvffee1q8eLFWrVolSaqsrFR0dLRsNpuio6NVVVXl4ygDQ7vtmSRVM04HgHew0CcAIGBlZGSoqKhI8+fPtz+Wk5Oj5ORkSVJycrKys7N9FR4AwAO4gwMACEgjR47U1KlTtWvXLhUUFEiSZs2apblz52r58uVKSUnR4cOHNWnSJB9HCgBwJxIcAEBA+uSTTxQUFORw29ixY70cDSQL43R0fvIdZlwD0AUkOAAAwCtcjtPR+XE6zLgGoAsYgwMAAAAgYJDgAAAAAAgYJDgAAAAAAgZjcPyZkRQqmXNSpItUtC5IOl3vlagAAAAAv0WC48+CJMVLIful1de0XzVxv1ciAgDAL/RLlcJskmqc12GCNaBnIsEJEKbB9V0eSaoLlk73lbUrfj9JYRYDoBUBAHhRmE1aGyGpWlKD4zpMsAb0TCQ4ASJEru/ySFLiSUnnLL5omKS1FuvSigAA3MCckCLrJblYLyf4hCQXU04D6JlIcAAAgN8IqZdWB8tl8jK+yivhAOiGSHAAAED3dX5CHocaJF16/v90pQZ6DBKcnshIirRQj0nEAQD+7vyEPA6dlPT++f/TlRroMUhweqIQSast1Bvv6UAAAAAA9yLBgXtYvSsk0U0AAAAAHkOC08NYmZ2mLlo6nd7+69jXH2hyUtLlLes0fC4FX+zgya3WLPB6vsP01wDQI5gTUmRTe9eR9XJoJ4BujQSnh7EyO02izfm2Jvb1B5pUt33N8VXS6isdPLnVmgVWukVbaWsstzFMfw0APUJIvbS6qW06LqefehKbT0YgNY5BbdWVu80Xe02aJU4NcjF8Naix1AVLp8PbqVcn9TvtxnYP6GFIcOB9rWe8ad2wNHf+6u0yJwk+n4s4e51WdQEAPUw7kxGYEimyebtUpTY9HYJPSKuvdvDkZonT+HPSalefrOKlca3fr7UahzlWG1a/g3Prl4RAN+CxBOeee+7RggULFBISojfffFPz5s3z1FvBzey39KvltCtblxZYa9XItGlYmjv/zZjLnCRYjWOA3ndVUR2bPIGxRUDAop1CkxZ3eiSnvRIcat6m7ZfzGd0kqdjJ+7VWLY1vaGd7B1npuECHBQQSjyQ4wcHB+sMf/qC77rpL5eXlys/PV05OjoqKijzxdnAz+4XXwQW+iTsXWGv3Qn/+m7Hx5+TybG3R19qJhs+l4K/kcoVs+/ghB2OL2tRp4qB/t8vuCnJvXsS3dIA1tFMIGFYu/DVqbIwa1KKLuNfev0l3aoD8aL+shtKdDq+neSTBGT58uEpKSlRaWipJysrKUlJSEg0HOq7pmzEL34q5/EZM58cFWVwhe/WVcpnktRhj5KB/t9PuCkaN+yYHfb+bs5IhNasbViutdVE/sUFSeAde1+oVsyONQQf3q6luv1opzEXj7LJvu6R+J6Wwehevo/O77etGztfvH6Bop+DXzPl/XX1Ka5B0gVz3ZZugxrbsQDuv2botsnqdttKXrsk4+bZXREeupx3ZLw/f/rI6dNind+H8LAsL0rd/Rm7z4IMPaty4cUpNTZUkTZkyRSNGjNCMGTPsdVJTUzVt2jRJ0jXXXKP9+/d3+v0iIyNVXV3dtaADDMekLY5JWxyTtnryMRk0aJAuv9zJLcsAQzvlOxyLb3EsvsWx+BbHopGj42C1nfLZJAPp6elKT3cxF7FF+fn5SkhIcMtrBQqOSVsck7Y4Jm1xTNCEdsozOBbf4lh8i2PxLY5Fo64cB4/MJ1VRUaGBAwfaf46NjVVFRYUn3goAgA6jnQKAwOWRBCc/P1/x8fGKi4tTr169NHnyZOXk5HjirQAA6DDaKQAIXCGS5rj7RY0xKi4u1uLFizVjxgz95S9/0cqVK939Ni1s377do6/fHXFM2uKYtMUxaYtjEvhop3yLY/EtjsW3OBbf4lg06uxx8MgkAwAAAADgC6zpDgAAACBgkOAAAAAACBjdKsG55557tG/fPhUXF2vmzJlttoeFhSkrK0vFxcXatGmTBg0a5IMovcvVMUlOTlZVVZUKCgpUUFCglJQUH0TpPRkZGaqsrNTu3bud1lmwYIGKi4u1c+dODRs2zIvR+YarYzJq1CjV1tbaz5Hnn3/eyxF6X2xsrNavX689e/aosLBQTz75pMN6Pe1cQddxDWrEdedbXG++ZeVY9IRzo3fv3tq8ebN27NihwsJCzZkzp02dnvKZ1sqx6OxnWdMdSnBwsCkpKTGDBw82vXr1Mjt27DBDhw5tUednP/uZWbhwoZFkHn74YZOVleXzuH19TJKTk83vf/97n8fqrXL77bebYcOGmd27dzvcnpiYaNasWWMkmREjRphNmzb5PGZfH5NRo0aZ999/3+dxerNER0ebYcOGGUnmoosuMvv372/zt9MTzxVK1wvXIGvHoSddd7jedOxY9JRz48ILLzSSTGhoqNm0aZMZMWJEi+096TOtq2PRmc+y3eYOzvDhw1VSUqLS0lKdPXtWWVlZSkpKalEnKSlJmZmZkqQVK1ZozJgxvgjVa6wck57mo48+Uk1NjdPtSUlJWrRokSRp8+bNCg8PV3R0tLfC8wlXx6QnstlsKigokCR98cUXKioqUkxMTIs6PfFcQddxDWrEdedbXG++ZeVY9BRffvmlJKlXr17q1auXjDEttvekz7SujkVndJsEJyYmRmVlZfafy8vL2/xRNK9TX1+vU6dOqX///l6N05usHBNJevDBB7Vz5069++67io2N9WaIfsfqMetp/uVf/kU7duzQmjVrdO211/o6HK8aNGiQhg0bps2bN7d4nHMFnsB59a2eeN3hevMtZ8dC6hnnRnBwsAoKClRVVaV169Zpy5YtLbb3pM+0ro6F1PHPst0mwUHnvP/++4qLi9ONN96odevW/f/27j066vLO4/iHTBhuGhKIJpCEQBUouh5BNtAtuCiXQqAI3WVZDushQk5wawE5uCuB2gJqFdxWpHtW2saIAbkjNOkCGsrNywKOcpdLLgTIhUkIgUBFBcKzf0QmhMwkkzCXZPJ+nfMcMr95ZuabJz+eZ76/3/N7fo6jAcAt+/fvV2xsrHr37q3//u//1p///Gd/h+Qz7dq10wcffKCZM2fqypUr/g4HaDaaY79Df1OltrZoLvvGzZs31adPH0VHR6tfv356+OGH/R2S39TVFg35LttkEpzCwkLFxMQ4HkdHR6uwsNBlHYvFovbt2+vChQs+jdOX3GmTsrIyXbt2TZL0zjvvqG/fvj6N8Xbz5s3TihUr/PLZeXl5GjJkiFtt5q5ly5bplVdeuau4YmNjZYyRxWKRJO3cudPnC0FcuXLFcXp469atatmyZcAeJbpdcHCwPvjgA61cuVKbNm2q8bwn9xXgFvarSo2p37k1PniTq/7GGKMHHnjAo/uFJ8aRQYMGVTuj5Mk2qqvvbUz7hi+Ul5dr586dGjFiRLXtze07reS6LRryXbbJJDg2m03du3dX165d1bJlS02YMEEZGRnV6mRkZCghIUGSNG7cOO3YscMfofqMO21y+xzep556SsePH/d1mF7TkAQjIyNDkyZNkiT1799f5eXlunDhgtavX6+8vDwZYzRo0CBvhNtoRUREOH6Oi4tTUFBQwHeiUuUqT8ePH9fixYudPu9sX7Hb7b4MEQGI/apSc+t3GtLfSFJ6eroKCwtljAmYVbTqaovmsG+Eh4erffv2kqTWrVtr2LBhOnHiRLU6zeU7rTtt0ZDvssGeDdN7KioqNG3aNH300UeyWCx69913dezYMS1YsEBffPGF/vKXvyg1NVUrVqxQdna2ysrKNGHCBH+H7VXutMmMGTP01FNP6caNGyorK9Mzzzzj77A9IijIeW6+atUqPfHEEwoPD1d+fr7mzZunli1b6t5775UkbdmyRSNHjlROTo6uXr2qyZMnS5I+/fRTvfXWW1q/fr3Pfoe7ZbFYVFFRUWc9V20iSX/84x81btw4/fznP9eNGzf0zTff1Ov/jbsxNDYDBgzQpEmTdPjwYccFr3PnzlWXLl0kVbaLq30FqE1d/9+ay37lzX6nqamrv5Gcj003b97Uhx9+qNdff1179uzxV/j1Vtu44E7f64l9o7GPTZ06dVJaWposFouCgoK0bt06bd68uVl+p3WnLRr6Xdbvy8NRAq+8+OKLpqCgwFy+fNmcOHHCDB482MybN8+sXbvWpKWlmcuXL5ujR4+avn37Ol7zwx/+0OzcudNcvHjRHD161IwePdrx3LJly8zbb79tNm/ebP72t7+ZpKQkc+3aNfPdd9+ZK1eumIyMjFrjycvLM8nJyearr74yZWVl5t133zWtWrWqUS8/P98MGjTIrd9x2bJl5pVXXjGSzK5du8w//dM/GUnmxz/+sTHGmJEjRxpJZvDgwebAgQNGqlza+7/+67/M+fPnTW5urnnuueeMMcZYLBYjyezcudO89tprZt++faa8vNz8+c9/NmFhYUaSiY2NNcYYM2XKFHPmzBmze/fuWuMbMGCA+eyzz8zFixfN2bNnTUJCgiPupUuXmszMTHP58mWza9cu06VLF8frjDFm+vTpJjc315w/f9688cYbpkWLFkaqXKrx008/NW+++aYpLS11/P4UCoXSVEteXp4ZMmSIsVqtZvHixaawsNAUFhaaxYsXG6vVaqTKpYvz8/PNrFmzTHFxsSkqKjLPPPOM4z06dOhgMjIyTHl5ufn888/NK6+8Yj755JM6P7u2/vZWsVgsxhhjYmNj3fp9du7caRITE40kc/r0afPYY48ZSWbixInGGGMeeughI8lMmTLFbNq0yUgyrVu3NsuWLTNlZWXmq6++Mv/xH/9h8vPzq7WRqzH0Vtu8+OKL5ty5c2b58uW1xvfUU0+ZAwcOmPLycpOTk2OGDx/uiLuu8S8pKckUFhaaoqIi88ILLzjec968eWb9+vVmxYoVpry83PH7U5p18XsAlAArPXr0MGfPnjWdOnUyUmXH9IMf/MDMmzfPfPPNNyY+Pt4EBQWZ1157zezZs8dIlWufZ2dnmzlz5piWLVuaJ5980ly+fNn06NHDSJVfyi9dumR+/OMfmxYtWphWrVpVSzDqKnl5eebIkSMmOjrahIWFmU8//dTpaxua4CxYsMD8/ve/N5LMnDlzTE5Ojlm4cKHjubfeestIMs8++6w5fvy4I44dO3bUSHAKCgrMww8/bNq2bWs2bNhgVqxY4WhHY4xJS0szbdu2Na1bt3YZW5cuXczly5fNhAkTTHBwsOnQoYN59NFHHXFfvnzZPP7448ZqtZq33nqr2kBsjDE7duwwYWFhJiYmxpw8edIxWCQkJJjr16+badOmGYvFUmsMFAqF0hTKrQRnwYIFZs+ePea+++4z4eHh5rPPPjMvv/yykSq/xF+/ft0sWLDABAcHm/j4ePP111+b0NBQI8msXr3arF692rRp08b06tXLnD171u0Ex1V/e6vcTYKTlpZmZs2aZSSZP/7xjyYnJ8f8+7//u+O5mTNnGknm9ddfNx9//LEJCwsz0dHR5siRIzUSHFdj6K22WbhwobFarbWOC3FxcebSpUtm6NChpkWLFqZz586mZ8+ejrjrGv9WrVpl2rZta/7u7/7OlJSUmCFDhhipMsG5du2aGTNmjGnRogVjE8WoEQRACbDywAMPmOLiYjNkyBATHBzs2D5v3jyzbds2x+NevXqZq1evGklm4MCB5ty5c9WOXK1atcrMmzfPSJVfytPS0qp9Tn0TnGeffdbxOD4+3uTk5NSo19AEZ/DgwebQoUNGktm6datJTEx0JG+7du0yP/vZz4wks3379mpxDBs2rEaC8/rrr1dro++++84EBQU5Ovhu3brVGVtycrLZuHGjy7hXr17teNyuXTtz48YNEx0dbaTKAffWETWp8mZjf/3rX41UmeCcOXPG7/sYhUKheKrcSnBycnJMfHy8Y/tPfvITk5eXZ6TKL/FXr1519NWSTHFxsenfv78JCgoy165dcxyQk1SvMziu+ttb5W4SnClTppj09HQjyRw7dswkJiY6+v/Tp087brqZm5tbLY6kpKQaCY6rMXTQoEHmu+++czor4s7yhz/8wbz55psu465r/LuVDEkyixYtMu+8846RKr9f1DWrgdK8SpNZZABNR25urmbOnKn58+erpKREq1evVqdOnSSp2sW0V69eVZs2bWSxWNS5c2fl5+dXu7nTmTNnqt0H4PYVXRri9tefOXNGnTt3vqv3u92ePXvUo0cP3X///erdu7eWL1+umJgYdezYUf369dPHH38sSY7f8/Y46orTarUqPDzc6fOuxMTEKDc31+Xzt7/H119/rbKysmrtUVtb3e3fAQAao86dO1frk+/s+y5cuFDtuo6rV6/qnnvu0X333aeWLVtW6xvr0096c2zavXu3Hn/8cUVGRspisWjdunUaMGCAYmNj1b59ex08eFBSw8am2+M8f/68vvvuuzrjqc/YVNf4x9iE2pDgwCtWr16txx9/3LEM8qJFi2qtX1RUpJiYGLVo0cKxrUuXLtWWybzzzrb1vdPt7UtwdunSRUVFRfV6fW2++eYbffnll3r++ed19OhRXb9+Xf/3f/+nWbNmKTc317ECzLlz52rEUVec165dU2lpqWObO793fn6+HnjgAZfP3/4Z7dq1U4cOHaq1R21t5Yk7DANAY1NUVFRtpTJ3x4nz58/r+vXr1W4+eHsfWhdvjk25ubm6evWqpk+fro8//lhXrlyR3W7X1KlT9emnnzr684aMTQ0ZF+ozNjkb/xib4C4SHHhcjx499OSTT8pqterbb7/VN998o5s3b9b6mn379unq1at68cUXFRwcrEGDBmn06NFas2aNy9cUFxfrBz/4gdtx/eIXv1BUVJTCwsL0y1/+UmvXrnU8Z7Va1apVqxo/18fu3bs1bdo07d69W5K0a9euao8lad26dZoxY4aioqIUGhqq5OTkGu/z9NNPq1evXmrTpo1efvllbdiwoc72u9PKlSs1dOhQ/cu//IssFos6dOigRx991PH8yJEjNWDAALVs2VKvvPKK9u7dq4KCAsfz//mf/6nQ0FBFR0fr+eefr9ZWABCIVq9erZdeeknh4eHq2LGjfv3rX+v999+v83U3b97Uxo0bNX/+fLVp00Y9e/Z0LPnsjtr621atWjnGo9t/rg93x6Y5c+YoNDRUUVFRmj59eo33qW0MdVdqaqomT56swYMHq0WLFurcubN69uzpeL6u8e9Xv/qV2rRpo4ceekiTJ09mbIJLJDjwuFatWmnhwoUqLS2V3W7X/fffrzlz5tT6muvXr2v06NGKj49XaWmp3n77bU2aNEknT550+ZrU1FQ99NBDunjxotObhd1p1apVyszM1KlTp5Sbm6tXX33V8dzJkyf17bffKjo6WpmZmfr222/rfc+B3bt3KyQkxDEd7c7HkpSSkqKPPvpIhw4d0v79+7Vx48Ya77NixQq99957stvtat26tWbMmFGvOKTKo2QjR47UCy+8oLKyMh08eLBagrNq1SrNmzdPZWVl6tu3r55++ulqr09PT9eXX36pgwcPavPmzUpNTa13DADQlLz66qv64osvdPjwYR05ckT79++vNk7UZtq0aWrfvr3sdrtWrFih1atXuzVlS6q9v/32228dN728NU7Vlztj04IFC3TmzBnl5eUpMzPT6U25axtD3WWz2TR58mQtXrxY5eXl2r17d7Wxtq7xb/fu3crJydH27dv129/+Vtu2bat3DGgeWqjyYhwAzcSyZctUUFCgX/3qV06fN8bowQcfrHWeNADAtYULFyoyMjJg7j3nCzt37tT777/v9IBabGysTp8+reDg4EZ9fxs0HpzBAQAAuAs9e/bUI488IkmKi4tTYmKiWzMLAHgHCQ4CQkxMjK5cueK01OdizzsdPXrU6XtOnDjRg9E3zMSJE53GdvToUX+HBgDNyr333quNGzfq66+/1tq1a/W73/1O6enpGjhwoMux6W64es+BAwd66DdquDlz5jiNbcuWLf4ODc0IU9QAAAAABAzO4AAAAAAIGMH+DkCSSkpKnN5UCgDgO7Gxsbr//vv9HUajxDgFAP7n7jjVKBKcM2fOKC4uzt9hAECzZrPZ/B1Co8U4BQD+5+44xRQ1AAAAAAGDBAcAAABAwCDBAQAAABAwSHAAAAAABAwSHAAAAAABo1GsogYAcCFEktXNutckXfZiLAAA3KkRjlMkOADQmFklbXWzbrw3AwEAwIlGOE4xRQ0AAABAwCDBAQAAABAwSHAAAE1eamqqiouLdeTIEce2sLAwZWZmKisrS5mZmQoNDXU8t2TJEmVnZ+vQoUPq06ePP0IGAHgJCQ4AoMl77733NGLEiGrbkpOTtX37dvXo0UPbt29XcnKyJCk+Pl7du3dX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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Arnb-kXlC4VF"},"source":["#### tpg survey for partial"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":741},"executionInfo":{"elapsed":2880,"status":"ok","timestamp":1650080717333,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"jHh0uFkXC4VF","outputId":"97fb68cf-77d7-4f9c-842c-70a8bb26fb8c"},"outputs":[{"output_type":"stream","name":"stdout","text":["186\n","186\n","186\n","186\n","pkx : [-0.40825533  0.81500699  1.18198569  1.85477996]\n","pkx : [-0.39872379  0.48501655  0.6365149   1.14150938  1.39400662  1.72225304]\n","\n","111\n","111\n","111\n","111\n","pkx : [-0.71661626 -0.63018625 -0.43811957 -0.29406955 -0.15962287]\n","pkx : [-0.69082946 -0.5967696  -0.44000317 -0.28323673 -0.21269184 -0.1264703 ]\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 4 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# 1. outg 는 partial 을 위한 histogram 작성 진행\n","# 현재, outg 내부에는 tp 한것과 out 한것이 공존하는 상태\n","titles = ['outg', 'tpg']\n","short_max_datas = [short_max_outg[short_true_open_idxth], short_max_tpg]\n","long_max_datas = [long_max_outg[long_true_open_idxth], long_max_tpg]\n","\n","# titles = ['tpg']\n","# short_max_datas = [short_max_tpg]\n","# long_max_datas = [long_max_tpg]\n","\n","plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(12, 8))\n","nrows, ncols = 2, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","  \n","for ings_idx, (title, short_max_data, long_max_data) in enumerate(zip(titles, short_max_datas, long_max_datas)):\n","\n","  inner_gs = gs[ings_idx].subgridspec(nrows=1, ncols=2)\n","  if ings_idx == 0:\n","    axvline = current_outg\n","    title_add = 'true_' + title\n","  else:\n","    axvline = current_tpg\n","    title_add = 'false_' + title\n","\n","  print(len(long_max_data))\n","\n","  short_plot_idx = np.ones_like(short_max_data).astype(bool)\n","  long_plot_idx = np.ones_like(long_max_data).astype(bool)\n","  # short_plot_idx = short_max_data <= axvline\n","  # long_plot_idx = long_max_data <= axvline\n","\n","  print(np.sum(long_plot_idx))    \n","\n","  short_plot_idx *= ~np.isnan(short_max_data)\n","  long_plot_idx *= ~np.isnan(long_max_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_plot_idx *= ~np.isinf(short_max_data)\n","  long_plot_idx *= ~np.isinf(long_max_data)  # nan 과 inf 때문에 이 방식 채택\n","  \n","  print(np.sum(long_plot_idx))\n","    \n","  plt.subplot(inner_gs[0])\n","  kde_plot_v2(*np.unique(short_max_data[short_plot_idx], return_counts=True))\n","  plt.title('short_' + title_add)  \n","  plt.axvline(axvline, color='red', linewidth=3)\n","\n","  plt.subplot(inner_gs[1])\n","  kde_plot_v2(*np.unique(long_max_data[long_plot_idx], return_counts=True))\n","  plt.title('long_' + title_add)\n","  plt.axvline(axvline, color='red', linewidth=3)\n","\n","  print()\n","\n","# plt.suptitle(title)\n","plt.show()"]},{"cell_type":"markdown","source":["#### legacy"],"metadata":{"id":"mScdfR9hmjVu"}},{"cell_type":"markdown","metadata":{"id":"xivLUsSGC4VF"},"source":["##### outg survey for precision (eploc vars. dependency)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LB28R3QIjCDc"},"outputs":[],"source":["# ------------ dependent vars. ------------ #\n","# res_df 에 존재하는 col 는 모두 사용가능함\n","# ------ 1. 도출한 outg 와 vars. pairing 진행 (by valid_idx) ------ #\n","devided_cols = ['tr_{}'.format(strat_version)]  # , 'ir_5T'\n","public_cols = ['wave_body_ratio']  # 'abs_ratio_5T', 'rel_ratio_5T', 'body_rel_ratio_5T'\n","\n","short_datas = [res_df['short_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","long_datas = [res_df['long_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","\n","titles = devided_cols + public_cols"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":1655,"status":"ok","timestamp":1649812123691,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"nX9TpLcvFu7T","outputId":"1ebbeec2-fa2b-459c-ee69-9779cb36172b"},"outputs":[{"name":"stdout","output_type":"stream","text":["362\n","362\n","362\n","362\n","\n","362\n","362\n","362\n","362\n","\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 864x1296 with 4 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plot_outg_range = (-1, 10)\n","plot_data_range = (-10, 100)\n","\n","plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(12, 18))\n","nrows, ncols = len(short_datas), 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","\n","for ings_idx, (title, short_data, long_data) in enumerate(zip(titles, short_datas, long_datas)):\n","  inner_gs = gs[ings_idx].subgridspec(nrows=1, ncols=2)\n","\n","  print(len(long_max_outg))\n","\n","  short_plot_idx = (plot_outg_range[0] <= short_max_outg) & (short_max_outg <= plot_outg_range[1])\n","  long_plot_idx = (plot_outg_range[0] <= long_max_outg) & (long_max_outg <= plot_outg_range[1])  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_open_data = short_data[short_open_idx]\n","  long_open_data = long_data[long_open_idx]\n","  \n","  short_plot_idx *= (plot_data_range[0] <= short_open_data) * (short_open_data <= plot_data_range[1])\n","  long_plot_idx *= (plot_data_range[0] <= long_open_data) * (long_open_data <= plot_data_range[1]) # nan 과 inf 때문에 이 방식 채택\n","\n","  short_plot_idx *= ~np.isnan(short_open_data)\n","  long_plot_idx *= ~np.isnan(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_plot_idx *= ~np.isinf(short_open_data)\n","  long_plot_idx *= ~np.isinf(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_true_idx = short_plot_idx * short_true_open_idxth\n","  long_true_idx = long_plot_idx * long_true_open_idxth\n","  \n","  short_false_idx = short_plot_idx * ~short_true_open_idxth\n","  long_false_idx = long_plot_idx * ~long_true_open_idxth\n","\n","  plt.subplot(inner_gs[0])\n","  # ------ true_bias ------ #\n","  x, y = short_max_outg[short_true_idx].ravel(), short_open_data[short_true_idx].ravel()  \n","  plt.scatter(x, y, color='white', alpha=0.5)\n","  # ------ false_bias ------ #\n","  x, y = short_max_outg[short_false_idx].ravel(), short_open_data[short_false_idx].ravel()\n","  plt.scatter(x, y, color='fuchsia', alpha=0.3)\n","  plt.axvline(current_outg, color='red', linewidth=3)\n","  plt.title(\"{} coef : {:0.3f}\".format(title, np.corrcoef(-x, y)[0, 1]))\n","\n","  plt.subplot(inner_gs[1])    \n","  # ------ true_bias ------ #\n","  x, y = long_max_outg[long_true_idx].ravel(), long_open_data[long_true_idx].ravel()  \n","  plt.scatter(x, y, color='white', alpha=0.5)\n","  # ------ false_bias ------ #\n","  x, y = long_max_outg[long_false_idx].ravel(), long_open_data[long_false_idx].ravel()\n","  plt.scatter(x, y, color='fuchsia', alpha=0.3)\n","  plt.axvline(current_outg, color='red', linewidth=3)\n","  plt.title(\"{} coef : {:0.3f}\".format(title, np.corrcoef(-x, y)[0, 1]))\n","\n","  print()  \n","\n","# plt.suptitle(title)\n","plt.show()\n","# print()"]},{"cell_type":"markdown","metadata":{"id":"EtjwB7Qk-Grj"},"source":["### significance_v3"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oVifICO4-Grk","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1650537246109,"user_tz":-540,"elapsed":263519,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"b9d4f89a-52eb-431e-97e4-9ddeb4f80370"},"outputs":[{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 2.30155086517334\n","en_ex_pairing elapsed time : 0.628840446472168\n","short_obj.shape : (464, 5)\n","long_obj.shape : (354, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.2634437084197998\n","get_open_info_df elapsed time : 1.7036607265472412\n","en_ex_pairing elapsed time : 0.6956593990325928\n","short_obj.shape : (519, 5)\n","long_obj.shape : (395, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.2616536617279053\n","get_open_info_df elapsed time : 1.7010743618011475\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.6017553806304932\n","short_obj.shape : (579, 5)\n","long_obj.shape : (441, 5)\n","idep_plot elapsed time : 0.16640114784240723\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9295592308044434\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.4899921417236328\n","short_obj.shape : (636, 5)\n","long_obj.shape : (488, 5)\n","idep_plot elapsed time : 0.16942620277404785\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9351584911346436\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.4172217845916748\n","short_obj.shape : (691, 5)\n","long_obj.shape : (544, 5)\n","idep_plot elapsed time : 0.16901063919067383\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9373178482055664\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.47785019874572754\n","short_obj.shape : (754, 5)\n","long_obj.shape : (593, 5)\n","idep_plot elapsed time : 0.1710224151611328\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.937755823135376\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.5468738079071045\n","short_obj.shape : (806, 5)\n","long_obj.shape : (658, 5)\n","idep_plot elapsed time : 0.17101263999938965\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9383974075317383\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.5966966152191162\n","short_obj.shape : (877, 5)\n","long_obj.shape : (724, 5)\n","idep_plot elapsed time : 0.1767122745513916\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.943880558013916\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.642141580581665\n","short_obj.shape : (921, 5)\n","long_obj.shape : (783, 5)\n","idep_plot elapsed time : 0.17609691619873047\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9434764385223389\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.6895248889923096\n","short_obj.shape : (950, 5)\n","long_obj.shape : (821, 5)\n","idep_plot elapsed time : 0.1754131317138672\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9316949844360352\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.7267055511474609\n","short_obj.shape : (989, 5)\n","long_obj.shape : (865, 5)\n","idep_plot elapsed time : 0.17388224601745605\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9296615123748779\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.7751269340515137\n","short_obj.shape : (1029, 5)\n","long_obj.shape : (892, 5)\n","idep_plot elapsed time : 0.17679667472839355\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9587807655334473\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.8069131374359131\n","short_obj.shape : (1056, 5)\n","long_obj.shape : (922, 5)\n","idep_plot elapsed time : 0.1762096881866455\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9405744075775146\n","en_ex_pairing elapsed time : 0.8607082366943359\n","short_obj.shape : (1089, 5)\n","long_obj.shape : (959, 5)\n","idep_plot elapsed time : 0.18465137481689453\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9268906116485596\n","en_ex_pairing elapsed time : 0.9159018993377686\n","short_obj.shape : (1111, 5)\n","long_obj.shape : (993, 5)\n","idep_plot elapsed time : 0.1902780532836914\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9350864887237549\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.939450740814209\n","short_obj.shape : (1135, 5)\n","long_obj.shape : (1013, 5)\n","idep_plot elapsed time : 0.18291425704956055\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.919060468673706\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 0.9855916500091553\n","short_obj.shape : (1160, 5)\n","long_obj.shape : (1043, 5)\n","idep_plot elapsed time : 0.17963194847106934\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9260311126708984\n","en_ex_pairing elapsed time : 1.080636978149414\n","short_obj.shape : (1165, 5)\n","long_obj.shape : (1056, 5)\n","idep_plot elapsed time : 0.18363022804260254\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9209141731262207\n","en_ex_pairing elapsed time : 1.1330490112304688\n","short_obj.shape : (1191, 5)\n","long_obj.shape : (1084, 5)\n","idep_plot elapsed time : 0.18724703788757324\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9264340400695801\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.1798903942108154\n","short_obj.shape : (1213, 5)\n","long_obj.shape : (1098, 5)\n","idep_plot elapsed time : 0.17862510681152344\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9299240112304688\n","en_ex_pairing elapsed time : 1.2261168956756592\n","short_obj.shape : (1233, 5)\n","long_obj.shape : (1112, 5)\n","idep_plot elapsed time : 0.18921804428100586\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9316930770874023\n","en_ex_pairing elapsed time : 1.2754905223846436\n","short_obj.shape : (1243, 5)\n","long_obj.shape : (1131, 5)\n","idep_plot elapsed time : 0.18619060516357422\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9396464824676514\n","en_ex_pairing elapsed time : 1.3273911476135254\n","short_obj.shape : (1253, 5)\n","long_obj.shape : (1154, 5)\n","idep_plot elapsed time : 0.1832568645477295\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.92685866355896\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.3255822658538818\n","short_obj.shape : (1266, 5)\n","long_obj.shape : (1168, 5)\n","idep_plot elapsed time : 0.18287873268127441\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9228670597076416\n","en_ex_pairing elapsed time : 1.3682360649108887\n","short_obj.shape : (1284, 5)\n","long_obj.shape : (1180, 5)\n","idep_plot elapsed time : 0.18566107749938965\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9348056316375732\n","en_ex_pairing elapsed time : 1.4322295188903809\n","short_obj.shape : (1293, 5)\n","long_obj.shape : (1189, 5)\n","idep_plot elapsed time : 0.18367481231689453\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9431827068328857\n","en_ex_pairing elapsed time : 1.5299320220947266\n","short_obj.shape : (1298, 5)\n","long_obj.shape : (1196, 5)\n","idep_plot elapsed time : 0.19192004203796387\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9324815273284912\n","en_ex_pairing elapsed time : 1.5015404224395752\n","short_obj.shape : (1300, 5)\n","long_obj.shape : (1219, 5)\n","idep_plot elapsed time : 0.1846764087677002\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9261839389801025\n","en_ex_pairing elapsed time : 1.5341100692749023\n","short_obj.shape : (1309, 5)\n","long_obj.shape : (1227, 5)\n","idep_plot elapsed time : 0.1841421127319336\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9579882621765137\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.5825657844543457\n","short_obj.shape : (1321, 5)\n","long_obj.shape : (1230, 5)\n","idep_plot elapsed time : 0.18391036987304688\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9529521465301514\n","en_ex_pairing elapsed time : 1.6212925910949707\n","short_obj.shape : (1327, 5)\n","long_obj.shape : (1241, 5)\n","idep_plot elapsed time : 0.19127821922302246\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.951615571975708\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.6426026821136475\n","short_obj.shape : (1331, 5)\n","long_obj.shape : (1249, 5)\n","idep_plot elapsed time : 0.18165850639343262\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.936093807220459\n","en_ex_pairing elapsed time : 1.6553840637207031\n","short_obj.shape : (1329, 5)\n","long_obj.shape : (1257, 5)\n","idep_plot elapsed time : 0.18268537521362305\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9265482425689697\n","en_ex_pairing elapsed time : 1.6874475479125977\n","short_obj.shape : (1331, 5)\n","long_obj.shape : (1257, 5)\n","idep_plot elapsed time : 0.18420195579528809\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9393601417541504\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.7139205932617188\n","short_obj.shape : (1336, 5)\n","long_obj.shape : (1259, 5)\n","idep_plot elapsed time : 0.18338298797607422\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9228861331939697\n","en_ex_pairing elapsed time : 1.762688159942627\n","short_obj.shape : (1342, 5)\n","long_obj.shape : (1261, 5)\n","idep_plot elapsed time : 0.18439960479736328\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9303748607635498\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.8418586254119873\n","short_obj.shape : (1345, 5)\n","long_obj.shape : (1260, 5)\n","idep_plot elapsed time : 0.18100404739379883\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.931410551071167\n","en_ex_pairing elapsed time : 1.8651864528656006\n","short_obj.shape : (1347, 5)\n","long_obj.shape : (1259, 5)\n","idep_plot elapsed time : 0.18806123733520508\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9329819679260254\n","en_ex_pairing elapsed time : 1.9044687747955322\n","short_obj.shape : (1351, 5)\n","long_obj.shape : (1259, 5)\n","idep_plot elapsed time : 0.18572616577148438\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.928654670715332\n","en_ex_pairing elapsed time : 1.928199052810669\n","short_obj.shape : (1349, 5)\n","long_obj.shape : (1262, 5)\n","idep_plot elapsed time : 0.1850271224975586\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9334535598754883\n","en_ex_pairing elapsed time : 1.9598793983459473\n","short_obj.shape : (1354, 5)\n","long_obj.shape : (1266, 5)\n","idep_plot elapsed time : 0.19040369987487793\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9274952411651611\n","en_ex_pairing elapsed time : 2.0397088527679443\n","short_obj.shape : (1353, 5)\n","long_obj.shape : (1268, 5)\n","idep_plot elapsed time : 0.18601393699645996\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9247128963470459\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 2.018097162246704\n","short_obj.shape : (1347, 5)\n","long_obj.shape : (1270, 5)\n","idep_plot elapsed time : 0.18366622924804688\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9280784130096436\n","en_ex_pairing elapsed time : 2.0472073554992676\n","short_obj.shape : (1348, 5)\n","long_obj.shape : (1271, 5)\n","idep_plot elapsed time : 0.18450069427490234\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9285767078399658\n","en_ex_pairing elapsed time : 2.067734718322754\n","short_obj.shape : (1348, 5)\n","long_obj.shape : (1274, 5)\n","idep_plot elapsed time : 0.18764615058898926\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9251956939697266\n","en_ex_pairing elapsed time : 2.0880045890808105\n","short_obj.shape : (1348, 5)\n","long_obj.shape : (1274, 5)\n","idep_plot elapsed time : 0.18584990501403809\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9604434967041016\n","en_ex_pairing elapsed time : 2.131204128265381\n","short_obj.shape : (1350, 5)\n","long_obj.shape : (1274, 5)\n","idep_plot elapsed time : 0.1938183307647705\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9135937690734863\n","en_ex_pairing elapsed time : 2.1219468116760254\n","short_obj.shape : (1349, 5)\n","long_obj.shape : (1270, 5)\n","idep_plot elapsed time : 0.19023394584655762\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9218044281005859\n","en_ex_pairing elapsed time : 2.1751320362091064\n","short_obj.shape : (1345, 5)\n","long_obj.shape : (1275, 5)\n","idep_plot elapsed time : 0.18706536293029785\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9263315200805664\n","en_ex_pairing elapsed time : 3.1072585582733154\n","short_obj.shape : (1344, 5)\n","long_obj.shape : (1277, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.31224942207336426\n","get_open_info_df elapsed time : 1.288179874420166\n","en_ex_pairing elapsed time : 2.26765775680542\n","short_obj.shape : (1342, 5)\n","long_obj.shape : (1279, 5)\n","idep_plot elapsed time : 0.18923401832580566\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9474034309387207\n","en_ex_pairing elapsed time : 2.2697906494140625\n","short_obj.shape : (1342, 5)\n","long_obj.shape : (1278, 5)\n","idep_plot elapsed time : 0.18571066856384277\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9377458095550537\n","en_ex_pairing elapsed time : 2.346466302871704\n","short_obj.shape : (1337, 5)\n","long_obj.shape : (1278, 5)\n","idep_plot elapsed time : 0.1865379810333252\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.939939022064209\n","en_ex_pairing elapsed time : 2.3551948070526123\n","short_obj.shape : (1337, 5)\n","long_obj.shape : (1279, 5)\n","idep_plot elapsed time : 0.1920623779296875\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9263427257537842\n","en_ex_pairing elapsed time : 2.3858423233032227\n","short_obj.shape : (1335, 5)\n","long_obj.shape : (1276, 5)\n","idep_plot elapsed time : 0.18511557579040527\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9390392303466797\n","en_ex_pairing elapsed time : 2.4568371772766113\n","short_obj.shape : (1336, 5)\n","long_obj.shape : (1275, 5)\n","idep_plot elapsed time : 0.18818449974060059\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.94342041015625\n","en_ex_pairing elapsed time : 2.446594476699829\n","short_obj.shape : (1337, 5)\n","long_obj.shape : (1273, 5)\n","idep_plot elapsed time : 0.1882929801940918\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9241750240325928\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n"]},{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 2.418797016143799\n","short_obj.shape : (1342, 5)\n","long_obj.shape : (1275, 5)\n","idep_plot elapsed time : 0.18151497840881348\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9128901958465576\n","en_ex_pairing elapsed time : 2.447937488555908\n","short_obj.shape : (1344, 5)\n","long_obj.shape : (1279, 5)\n","idep_plot elapsed time : 0.18857145309448242\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9503912925720215\n","en_ex_pairing elapsed time : 2.440847158432007\n","short_obj.shape : (1339, 5)\n","long_obj.shape : (1278, 5)\n","idep_plot elapsed time : 0.18751072883605957\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9505782127380371\n","en_ex_pairing elapsed time : 2.5029079914093018\n","short_obj.shape : (1339, 5)\n","long_obj.shape : (1277, 5)\n","idep_plot elapsed time : 0.1994938850402832\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9320425987243652\n","en_ex_pairing elapsed time : 2.4989707469940186\n","short_obj.shape : (1339, 5)\n","long_obj.shape : (1281, 5)\n","idep_plot elapsed time : 0.18527460098266602\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9332001209259033\n","en_ex_pairing elapsed time : 2.500091075897217\n","short_obj.shape : (1332, 5)\n","long_obj.shape : (1275, 5)\n","idep_plot elapsed time : 0.1851208209991455\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9393310546875\n","en_ex_pairing elapsed time : 2.630600690841675\n","short_obj.shape : (1324, 5)\n","long_obj.shape : (1274, 5)\n","idep_plot elapsed time : 0.18312883377075195\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.063690423965454\n","en_ex_pairing elapsed time : 4.722303867340088\n","short_obj.shape : (1314, 5)\n","long_obj.shape : (1266, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.28220701217651367\n","get_open_info_df elapsed time : 2.0618817806243896\n","en_ex_pairing elapsed time : 3.903691053390503\n","short_obj.shape : (1310, 5)\n","long_obj.shape : (1266, 5)\n","idep_plot elapsed time : 0.19388508796691895\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.779174566268921\n","en_ex_pairing elapsed time : 2.6657419204711914\n","short_obj.shape : (1308, 5)\n","long_obj.shape : (1266, 5)\n","idep_plot elapsed time : 0.18422555923461914\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9327855110168457\n","en_ex_pairing elapsed time : 2.694039821624756\n","short_obj.shape : (1304, 5)\n","long_obj.shape : (1258, 5)\n","idep_plot elapsed time : 0.18756628036499023\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.925396203994751\n","en_ex_pairing elapsed time : 2.7128584384918213\n","short_obj.shape : (1304, 5)\n","long_obj.shape : (1257, 5)\n","idep_plot elapsed time : 0.18381357192993164\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9235637187957764\n","en_ex_pairing elapsed time : 3.3033223152160645\n","short_obj.shape : (1251, 5)\n","long_obj.shape : (1199, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.287825345993042\n","get_open_info_df elapsed time : 1.2183620929718018\n","en_ex_pairing elapsed time : 6.039733648300171\n","short_obj.shape : (1245, 5)\n","long_obj.shape : (1194, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.37758636474609375\n","get_open_info_df elapsed time : 2.3507399559020996\n","en_ex_pairing elapsed time : 6.097677946090698\n","short_obj.shape : (1242, 5)\n","long_obj.shape : (1191, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.29493284225463867\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.7379882335662842\n","en_ex_pairing elapsed time : 6.570729970932007\n","short_obj.shape : (1240, 5)\n","long_obj.shape : (1191, 5)\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 198600\n","np.sum(long_open_res == 1) : 198735\n","np.sum(short_open_res == 1) : 52680\n","np.sum(long_open_res == 1) : 48720\n","np.sum(short_open_res == 1) : 27615\n","np.sum(long_open_res == 1) : 26055\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n","np.sum(short_open_res == 1) : 1841\n","np.sum(long_open_res == 1) : 1737\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.27561473846435547\n","get_open_info_df elapsed time : 1.7104718685150146\n","en_ex_pairing elapsed time : 6.98179292678833\n","short_obj.shape : (1241, 5)\n","long_obj.shape : (1191, 5)\n","idep_plot elapsed time : 0.2932724952697754\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1728x576 with 36 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# from google.colab import output\n","# ------------ survey param ------------ #\n","# itv_num_list = [1, 3, 5, 15]\n","# itv_list = ['15m', '30m', '1h', '4h']\n","# itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","# val_list = np.arange(-0.5, -0.9, -0.1)     # prcn 1\n","val_list = np.arange(0.2, -2., -0.03)  # prcn 2\n","# val_list = np.arange(-0.695, -0.75, -0.005)    # prcn 3\n","# val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","# val_list = np.arange(70, 80, 1)   # prcn -1\n","# val_list = np.arange(200, 180, -5)   # prcn -2\n","\n","# ------------ get survey_res ------------ #\n","result = []\n","res_shape = (3, 12)  # short, long, both x data\n","config_list_copy = copy.deepcopy(config_list)\n","for set_val in val_list:\n","  # ------------ open 결정 이전의 인자값 ------------ #\n","  # ------ point * mr_res ------ #\n","  # config_list_copy[0].loc_set.zone.degree_list = set_val\n","  # config_list_copy[0].loc_set.point2.wick_score_list = str([set_val])\n","  # config_list_copy[0].loc_set.zone.ir = set_val  \n","  # config_list_copy[0].loc_set.zone.abs_ratio = set_val  \n","\n","  # ------------ open 결정 이후의 인자값 ------------ #\n","  # ------ utils ------ #\n","  # config_list_copy[0].tr_set.tp_gap = set_val  \n","  # config_list_copy[0].tr_set.ep_gap = set_val \n","  # config_list_copy[0].tr_set.out_gap = set_val  \n","\n","  # ------ entry, exit (ep, tp, out vars.) ------ #\n","  config_list_copy[0].tr_set.ei_k = set_val\n","  # config_list_copy[0].ep_set.ep_out_tick = set_val  \n"," \n","  for utils_, config_ in zip(utils_list, config_list_copy):\n","    # enlist_rtc(res_df, config_, np_timeidx)\n","    enlist_tr(res_df, config_, np_timeidx)\n","  open_info_df = get_open_info_df(ep_loc_v3, res_df, np_timeidx, ID_list, config_list_copy, id_idx_list)   # point * mr_res 이기 때문에 utils_tr & rtc 의 영향을 충분히 받음\n","\n","  try:\n","    result.append(get_res_v4(res_df, open_info_df, ohlc_list, config_list_copy, np_timeidx, funcs, test_ratio=test_ratio, plot_is=1, signi=True))    \n","  except:\n","    result.append(np.full(res_shape, np.nan))\n","    # pass\n","\n","survey_res_list = [np.array(result)[:, s_i::3] for s_i in range(3)]   # 3 for s, l, b\n","# short_res, long_res, both_res = survey_res_list\n","\n","# ------------ plot survey_res ------------ #\n","title_list = [\"short\", \"long\", \"both\"]\n","sub_title_list = ['prcn', 'wb', 'len_pr', 'dpf', 'wr', 'sr', 'acc_pr', 'sum_pr', 'min_pr', 'liqd', 'acc_mdd', 'sum_mdd']\n","space_ = \" \" * 120\n","\n","fig = plt.figure(figsize=(24, 8))\n","plt.style.use('dark_background')\n","gs = gridspec.GridSpec(nrows=1,\n","                        ncols=3,\n","                        # height_ratios=[1, 1, 1]\n","                      )\n","# nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","# nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","# if d_idx == 0:\n","# else:\n","  # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","for d_idx, (title_name, survey_res) in enumerate(zip(title_list, survey_res_list)):  \n","  inner_gs = gs[d_idx].subgridspec(nrows=nrows,\n","                        ncols=ncols,\n","                        height_ratios=h_r\n","                      )\n","  for in_idx, (data_, sub_title) in enumerate(zip(survey_res.T, sub_title_list)):\n","    plt.subplot(inner_gs[in_idx])\n","    data = data_.ravel()\n","    valid_idx = ~np.isnan(data)\n","    if np.sum(valid_idx) > 0:\n","      x, y = val_list[valid_idx], data[valid_idx]\n","      plt.plot(x, y)  # 앞에서부터 len(result) 만큼만    \n","      plt.title(sub_title + '_{:.2f}'.format(x[np.argmax(y)]))\n","    else:\n","      plt.title(sub_title)\n","\n","plt.suptitle(space_.join(title_list))\n","plt.show()\n","# print(\"\\n\")"]},{"cell_type":"markdown","metadata":{"id":"EJ4f-3Zf4ImT"},"source":["### backtrader validation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pbYUlJl34ImU"},"outputs":[],"source":["# ------ open validation ------ #\n","long_open_ = res_df['long_open_{}'.format(config.selection_id)].to_numpy()\n","long_open_ts = list(map(lambda x : str(x), res_df.index[long_open_ == 1]))  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wyYMYcxx4ImV"},"outputs":[],"source":["long_index = open_info_df.side == 'BUY'\n","\n","for ts in res_df.index[open_info_df.index[long_index]]:\n","  print(ts)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BPI-9QX74ImW"},"outputs":[],"source":["trade_log_name = \"ETHUSDT_1650120909.pkl\"\n","trade_log_dir_path = \"./trade_log/0405_wave_trader_realterm\"\n","\n","with open(os.path.join(trade_log_dir_path, trade_log_name), 'rb') as f:\n","  trade_log = pickle.load(f)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":357,"status":"ok","timestamp":1650589992404,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"outputId":"48a5cda2-1904-4d09-fa71-b76538b62c63","id":"FMXhzaTK4ImX"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'2022-04-17 00:04:59.999000': [3045.71, 'BUY', 'entry'],\n"," '2022-04-17 07:00:59.999000': [[3071.42], 'exit'],\n"," '2022-04-17 09:09:59.999000': [3063.2, 'SELL', 'entry'],\n"," '2022-04-17 11:28:59.999000': [[3049.6], 'exit'],\n"," '2022-04-18 01:18:59.999000': [3071.74, 'BUY', 'entry'],\n"," '2022-04-18 02:56:59.999000': [[3048.93], 'exit'],\n"," '2022-04-19 09:18:59.999000': [3074.43, 'BUY', 'entry'],\n"," '2022-04-19 23:10:59.999000': [[3122.88], 'exit'],\n"," '2022-04-20 09:10:59.999000': [3100.34, 'SELL', 'entry'],\n"," '2022-04-20 09:23:59.999000': [[3085.57], 'exit'],\n"," '2022-04-20 12:33:59.999000': [3083.71, 'SELL', 'entry'],\n"," '2022-04-20 12:38:59.999000': [[3074.9], 'exit'],\n"," '2022-04-20 16:12:59.999000': [3101.93, 'BUY', 'entry'],\n"," '2022-04-20 19:40:59.999000': [[3124.7], 'exit'],\n"," '2022-04-21 19:07:59.999000': [3093.0, 'SELL', 'entry'],\n"," '2022-04-21 19:40:59.999000': [[3137.26], 'exit'],\n"," '2022-04-21 21:59:59.999000': [3160.09, 'BUY', 'entry'],\n"," '2022-04-22 02:16:59.999000': [[3070.49], 'exit'],\n"," 'last_trading_time': '2022-04-22 10:12:00.008866'}"]},"metadata":{},"execution_count":84}],"source":["trade_log"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":326,"status":"ok","timestamp":1650590232506,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"outputId":"dba9ff9a-2dc8-4857-e8b6-b4f26cdd3087","id":"DiTKuq9T4ImY"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-04-18 01:19:59.999000', '2022-04-19 09:19:59.999000', '2022-04-20 16:13:59.999000', '2022-04-21 22:00:59.999000']\n","['2022-04-17 00:04:59.999000', '2022-04-18 01:18:59.999000', '2022-04-19 09:18:59.999000', '2022-04-20 16:12:59.999000', '2022-04-21 21:59:59.999000']\n"]}],"source":["# 1. ts 에 pair 된 en_p, ex_p 만 비교하면 될 것\n","#   -> open_idx, en_idx, ex_idx 조회하면 될 것\n","\n","pos_side = \"BUY\" # SELL BUY\n","val_obj = short_obj if pos_side == \"SELL\" else long_obj\n","\n","# ------ get idep trade_info ------ #\n","en_ts = list(map(lambda x : str(x), res_df.index[val_obj[2].astype(int).ravel()])) \n","ex_ts = list(map(lambda x : str(x), res_df.index[val_obj[3].astype(int).ravel()])) \n","en_p = val_obj[0].ravel()\n","ex_p = val_obj[1].ravel()\n","\n","# ------ execute ts comparison ------ #\n","logged_en_ts = [k for k, v in trade_log.items() if 'entry' in v if pos_side in v]\n","\n","lacked_ts = [ts for ts in en_ts if not ts in logged_en_ts]   # trade_log 에 없는 거래\n","added_ts = [ts for ts in logged_en_ts if not ts in en_ts]    # trade_log 에만 있는 거래\n","\n","print(lacked_ts)\n","print(added_ts)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VnTmGTJI4ImZ"},"outputs":[],"source":["# ------ check added_ts ------ #\n","keys = list(trade_log.keys())\n","\n","for k_i in range(len(keys)):\n","  if keys[k_i] in added_ts:\n","    # print(trade_log[keys[k_i]])\n","    # print(trade_log[keys[k_i + 1]])\n","    print(keys[k_i], trade_log[keys[k_i]])\n","    print(keys[k_i + 1], trade_log[keys[k_i + 1]])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vn5x7mcP4ImZ"},"outputs":[],"source":["# ------ price sync_check ------ #\n","accept_price_gap = 0.1\n","for i in range(len(en_ts)):\n","  try:\n","    print(en_ts[i], trade_log[en_ts[i]][0] - en_p[i])\n","    # print(trade_log[str(ex_ts[i])])\n","    # print(ex_ts[i], trade_log[ex_ts[i]][0] - ex_p[i])\n","    print(ex_ts[i])\n","    print()\n","\n","  except Exception as e:\n","    print(e)\n"]},{"cell_type":"markdown","metadata":{"id":"1GVZ03zDyU2N"},"source":["### legacy"]},{"cell_type":"markdown","metadata":{"id":"IWO7KkqltMFt"},"source":["#### main_functions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MY1csdNRLGsk"},"outputs":[],"source":["def get_open_info_df(ep_loc_v2, res_df, np_timeidx, ID_list, config_list, id_idx_list):\n","  start_0 = time.time()\n","  # ------ get mr_res, zone_arr ------ #\n","  short_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL) for config_ in config_list])\n","  long_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.BUY) for config_ in config_list])\n","  short_open_idx_list = [np.where(res_df['short_open_{}'.format(id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, short_mr_res_obj[:, 0].astype(np.float64))]   # \"point * mr_Res\"\n","  long_open_idx_list = [np.where(res_df['long_open_{}'.format(id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, long_mr_res_obj[:, 0].astype(np.float64))]  # zip 으로 zone (str) 과 묶어서 dtype 변경됨\n","\n","  # ------ open_info_arr ------ #\n","  short_side_list = [np.full(len(list_), OrderSide.SELL) for list_ in short_open_idx_list]\n","  long_side_list = [np.full(len(list_), OrderSide.BUY) for list_ in long_open_idx_list]\n","\n","  short_zone_list = [zone_res[short_open_idx] for zone_res, short_open_idx in zip(short_mr_res_obj[:, 1], short_open_idx_list)]\n","  long_zone_list = [zone_res[long_open_idx] for zone_res, long_open_idx in zip(long_mr_res_obj[:, 1], long_open_idx_list)]\n","\n","  short_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, short_open_idx_list)]\n","  long_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, long_open_idx_list)]\n","\n","  selected_id_idx = np.arange(len(id_idx_list))\n","  short_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, short_open_idx_list)]\n","  long_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, long_open_idx_list)]\n","\n","  # ------ get open_info_df ------ #\n","  #   series 만들어서 short / long 끼리 합치고 둘이 합치고, 중복은 우선 순위 정해서 제거\n","  short_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(short_open_idx_list, zip(short_side_list, short_zone_list, short_id_list, short_id_idx_list))]\n","  long_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(long_open_idx_list, zip(long_side_list, long_zone_list, long_id_list, long_id_idx_list))]\n","\n","  open_info_df = pd.concat(short_open_df_list + long_open_df_list)\n","  # ------ sorting + unique ------ #\n","  open_info_df.sort_index(inplace=True)\n","  # print(len(open_info_df))\n","  # print(len(open_info_df))\n","  # open_info_df.head()\n","  print(\"get_open_info_df elapsed time :\", time.time() - start_0)\n","  return open_info_df[~open_info_df.index.duplicated(keep='first')]  # 먼저 순서를 우선으로 지정  "]},{"cell_type":"code","execution_count":25,"metadata":{"id":"eiQ36_SLLE3w","executionInfo":{"status":"ok","timestamp":1650672091888,"user_tz":-540,"elapsed":381,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def get_res_v4(res_df, open_info_df, ohlc_list, config_list, np_timeidx, funcs, test_ratio=0.3, plot_is=True, signi=False):\n","  # ------------ make open_info_list ------------ #\n","  open_idx = open_info_df.index.to_numpy()\n","  len_df = len(res_df)\n","  s_idx = (open_idx < int(len_df * (1 - test_ratio))) == plot_is\n","  s_open_info_df = open_info_df[s_idx]\n","  s_open_idx = open_idx[s_idx]\n","\n","  open_info_list = [s_open_info_df[col_].to_numpy() for col_ in s_open_info_df.columns]\n","  side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","\n","  # ------------ get paired_res ------------ #\n","  start_0 = time.time()\n","  paired_res = en_ex_pairing_v5(res_df, s_open_idx, open_info_list, ohlc_list, config_list, np_timeidx, funcs)\n","  # valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","  print(\"en_ex_pairing elapsed time :\", time.time() - start_0)  #  0.37 --> 0.3660471439361572 --> 0.21(lesser if)\n","\n","  # ------------ idep_plot ------------ #\n","  start_0 = time.time()\n","  high, low = ohlc_list[1:3]\n","  res = idep_plot_v12(res_df, len_df, config_list[0], high, low, s_open_idx, side_arr, paired_res, inversion=False, sample_ratio=1 - test_ratio, signi=signi)\n","  print(\"idep_plot elapsed time :\", time.time() - start_0)   # 1.40452 (v6) 1.4311 (v5)\n","\n","  return res"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8LiKwfiJ4bvM"},"outputs":[],"source":["def plot_info_v6(gs, gs_idx, sample_len, tr, prcn, rc, bars_in, pr, total_pr, cum_pr, liqd, leverage, title_position, fontsize):\n","  try:\n","    plt.subplot(gs[gs_idx])\n","    idep_res_obj = get_res_info_nb_v2(sample_len, pr, total_pr, cum_pr, liqd)\n","    plt.plot(cum_pr)\n","    plt.plot(idep_res_obj[-1], color='gold')\n","    if sample_len is not None:\n","      plt.axvline(sample_len, alpha=1., linestyle='--', color='#ffeb3b')\n","    # title_str = \"prcn : {:.3f} rc : {:.3f}\\n len_pr : {} dpf : {:.3f}\\n wr : {:.3f} sr : {:.3f}\\n acc_pr : {:.3f} sum_pr : {:.3f}\\n\" +\\\n","    #           \"min_pr : {:.3f} liqd : {:.3f}\\n acc_mdd : -{:.3f} sum_mdd : -{:.3f}\\n leverage {}\"\n","    # title_str = \"tr : {:.3f}\\n prcn : {:.3f}\\n rc : {:.3f}\\n len_pr : {}\\n dpf : {:.3f}\\n wr : {:.3f}\\n sr : {:.3f}\\n acc_pr : {:.3f}\\n sum_pr : {:.3f}\\n\" +\\\n","    #           \"min_pr : {:.3f}\\n liqd : {:.3f}\\n acc_mdd : -{:.3f}\\n sum_mdd : -{:.3f}\\n leverage {}\"\n","    title_str = \"tr : {:.3f}\\n prcn : {:.3f}\\n wave_bias : {:.3f}\\n bars_in : {:.3f}\\n len_pr : {}\\n dpf : {:.3f}\\n wr : {:.3f}\\n sr : {:.3f}\\n acc_pr : {:.3f}\\n sum_pr : {:.3f}\\n\" +\\\n","              \"min_pr : {:.3f}\\n liqd : {:.3f}\\n acc_mdd : -{:.3f}\\n sum_mdd : -{:.3f}\\n leverage {}\"\n","    plt.title(title_str.format(tr, prcn, rc, bars_in, *idep_res_obj[:-1], leverage), position=title_position, fontsize=fontsize)\n","  except Exception as e:\n","    print(\"error in plot_info :\", e)\n","\n","  return gs_idx + 1"]},{"cell_type":"code","source":["def ffill_line(line_, idx_):\n","  len_line = len(line_)\n","  total_en_idx = np.zeros(len_line)\n","  total_en_idx[idx_] = 1\n","  idx_line_ = np.where(total_en_idx, line_, np.nan)\n","  idx_line = pd.Series(idx_line_).ffill().to_numpy()\n","\n","  return idx_line\n","\n","def get_wave_bias_v2(res_df, config, high, low, len_df, short_obj, long_obj):\n","  \n","  short_op_idx = short_obj[-1].astype(int)\n","  short_en_idx = short_obj[2].astype(int)\n","  short_en_tp1 = ffill_line(res_df['short_wave_1_{}'.format(config.selection_id)].to_numpy(), short_op_idx)   # en_idx 에 sync 된 open_idx 를 사용해야함\n","  short_en_out0 = ffill_line(res_df['short_wave_0_{}'.format(config.selection_id)].to_numpy(), short_op_idx)\n","\n","  long_op_idx = long_obj[-1].astype(int)\n","  long_en_idx = long_obj[2].astype(int)\n","  long_en_tp1 = ffill_line(res_df['long_wave_1_{}'.format(config.selection_id)].to_numpy(), long_op_idx)\n","  long_en_out0 = ffill_line(res_df['long_wave_0_{}'.format(config.selection_id)].to_numpy(), long_op_idx)\n","\n","  bias_info_tick = config.tr_set.bias_info_tick\n","\n","  # 1. min 에 초점을 맞추는 거니까, touch 없을시 len_df 로 설정\n","  # 2. future_data 사용이니까, shift(-bias_info_tick) 설정\n","  # 3. entry 다음 idx 부터 -> tp & out 체결 logic 이 현재 entry_idx 부터 되어있어서 취소\n","  last_idx = len_df - 1\n","  short_en_tp1_touch_idx = pd.Series(np.where(low <= short_en_tp1, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[short_en_idx]  \n","  short_en_out0_touch_idx = pd.Series(np.where(high >= short_en_out0, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[short_en_idx]\n","\n","  long_en_tp1_touch_idx = pd.Series(np.where(high >= long_en_tp1, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[long_en_idx]\n","  long_en_out0_touch_idx = pd.Series(np.where(low <= long_en_out0, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[long_en_idx]\n","\n","  short_true_bias_idx = short_en_tp1_touch_idx < short_en_out0_touch_idx  # true_bias 의 조건\n","  long_true_bias_idx = long_en_tp1_touch_idx < long_en_out0_touch_idx\n","\n","  short_false_bias_idx = short_en_tp1_touch_idx > short_en_out0_touch_idx  # false_bias 의 조건\n","  long_false_bias_idx = long_en_tp1_touch_idx > long_en_out0_touch_idx\n","\n","  # return short_true_bias_idx.ravel(), short_false_bias_idx.ravel(), long_true_bias_idx.ravel(), long_false_bias_idx.ravel()\n","  return short_true_bias_idx, short_false_bias_idx, long_true_bias_idx, long_false_bias_idx, short_en_tp1[short_en_idx], short_en_out0[short_en_idx], long_en_tp1[long_en_idx], long_en_out0[long_en_idx]\n","\n","  \n","def wave_bias(true_idx, false_idx):  # 정확하게 하려고, true & false 로 기준함\n","    true_sum = np.sum(true_idx)\n","    false_sum = np.sum(false_idx)\n","    return true_sum / (true_sum + false_sum)"],"metadata":{"id":"aFpEbTaECnGW","executionInfo":{"status":"ok","timestamp":1650671890301,"user_tz":-540,"elapsed":364,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","execution_count":24,"metadata":{"id":"xafHpMLwESKf","executionInfo":{"status":"ok","timestamp":1650672088268,"user_tz":-540,"elapsed":1443,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def idep_plot_v12(res_df, len_df, config, high, low, open_idx, side_arr, paired_res, inversion=False, sample_ratio=0.7, title_position=(0.5, 0.5), fontsize=15, signi=False):\n","    if not signi:\n","        plt.style.use(['dark_background', 'fast'])\n","        fig = plt.figure(figsize=(24, 8))\n","        gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                               ncols=3,  # col 몇 개\n","                               height_ratios=[10, 1]\n","                               # height_ratios=[10, 10, 1]\n","                               )\n","    gs_idx = 0\n","    # plt.suptitle(key)\n","    \n","    p_ranges, p_qty_ratio = literal_eval(config.tp_set.p_ranges), literal_eval(config.tp_set.p_qty_ratio)\n","    assert np.sum(p_qty_ratio) == 1.0\n","    assert len(p_ranges) == len(p_qty_ratio)\n","\n","    if sample_ratio is not None:\n","      sample_len = int(len_df * sample_ratio)\n","    else:\n","      sample_len = len_df\n","\n","    # ------ short & long data preparation ------ #\n","    # start_0 = time.time()\n","    point1_arr, valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr, tr_arr = paired_res    \n","    assert len(valid_openi_arr) != 0, \"assert len(valid_openi_arr) != 0\"    \n","    short_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.SELL)[0]  # valid_openi_arr 에 대한 idx, # side_arr,\n","    long_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.BUY)[0]\n","\n","    valid_open_idx = open_idx[valid_openi_arr].reshape(-1, 1)\n","\n","    short_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[short_valid_openi_idx]\n","    long_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[long_valid_openi_idx]\n","    both_obj = np.vstack((short_obj, long_obj))\n","    print(\"short_obj.shape :\", short_obj.shape)\n","    print(\"long_obj.shape :\", long_obj.shape)\n","\n","    short_obj, long_obj, both_obj = [np.split(obj_, 5, axis=1) for obj_ in [short_obj, long_obj, both_obj]]\n","\n","    short_point1_arr, long_point1_arr = [point1_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_lvrg_arr, long_lvrg_arr = [lvrg_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_fee_arr, long_fee_arr = [fee_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_tpout_arr, long_tpout_arr = [tpout_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    # short_bias_arr, long_bias_arr = [bias_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    short_tr_arr, long_tr_arr = [tr_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","    # print(\"long_bias_arr.shape :\", long_bias_arr.shape)    \n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    short_true_bias_idx, short_false_bias_idx, long_true_bias_idx, long_false_bias_idx, short_en_tp1, short_en_out0, long_en_tp1, long_en_out0 = \\\n","    get_wave_bias_v2(res_df, config, high, low, len_df, short_obj, long_obj)\n","\n","    len_short, len_long = len(short_valid_openi_idx), len(long_valid_openi_idx)\n","\n","    # ------ plot_data ------ #\n","    try:\n","      # start_0 = time.time()      \n","      if len_short == 0:\n","        short_pr = []\n","        gs_idx += 1\n","      else:\n","        short_tr = short_tr_arr.mean()\n","        short_pr, short_liqd = get_pr_v3(OrderSide.SELL, high, low, short_obj, short_tpout_arr, short_lvrg_arr, short_fee_arr, p_ranges, p_qty_ratio, inversion)\n","        short_total_pr = to_total_pr(len_df, short_pr, short_obj[-2])\n","        short_cum_pr = np.cumprod(short_total_pr)\n","        # short_liqd = liquidation_v2(OrderSide.SELL, h, short_obj[:4], short_lvrg_arr, short_fee_arr)\n","        short_prcn, short_rc = precision(short_pr, short_true_bias_idx), wave_bias(short_true_bias_idx, short_false_bias_idx)\n","        short_trade_ticks = np.mean(short_obj[-2] - short_obj[-1])\n","        if signi:\n","          short_idep_res_obj = (short_prcn, short_rc) + get_res_info_nb_v2(sample_len, short_pr, short_total_pr, short_cum_pr, short_liqd)\n","        else:\n","          gs_idx = plot_info_v6(gs, gs_idx, sample_len, short_tr, short_prcn, short_rc, short_trade_ticks, short_pr, short_total_pr, short_cum_pr, short_liqd, short_lvrg_arr[-1], title_position, fontsize)\n","      # print(\"elapsed time :\", time.time() - start_0)\n","\n","    except Exception as e:\n","      gs_idx += 1\n","      print(\"error in short plot_data :\", e)\n","\n","    try:\n","      # start_0 = time.time()   \n","      if len_long == 0:\n","        long_pr = []\n","        gs_idx += 1\n","      else:\n","        long_tr = long_tr_arr.mean()\n","        long_pr, long_liqd = get_pr_v3(OrderSide.BUY, high, low, long_obj, long_tpout_arr, long_lvrg_arr, long_fee_arr, p_ranges, p_qty_ratio, inversion)\n","        long_total_pr = to_total_pr(len_df, long_pr, long_obj[-2])\n","        long_cum_pr = np.cumprod(long_total_pr)\n","        # long_liqd = liquidation_v2(OrderSide.BUY, l, long_obj[:4], long_lvrg_arr, long_fee_arr)\n","        long_prcn, long_rc = precision(long_pr, long_true_bias_idx), wave_bias(long_true_bias_idx, long_false_bias_idx)\n","        long_trade_ticks = np.mean(long_obj[-2] - long_obj[-1])\n","        if signi:\n","          long_idep_res_obj = (long_prcn, long_rc) + get_res_info_nb_v2(sample_len, long_pr, long_total_pr, long_cum_pr, long_liqd)\n","        else:\n","          gs_idx = plot_info_v6(gs, gs_idx, sample_len, long_tr, long_prcn, long_rc, long_trade_ticks, long_pr, long_total_pr, long_cum_pr, long_liqd, long_lvrg_arr[-1], title_position, fontsize)\n","      # print(\"elapsed time :\", time.time() - start_0)\n","    except Exception as e:\n","      gs_idx += 1\n","      print(\"error in long plot_data :\", e)\n","\n","    \n","    try:\n","      # start_0 = time.time()\n","      if len_short * len_long == 0:\n","        both_pr = []\n","        gs_idx += 1\n","      else:\n","        both_tr = (short_tr + long_tr) / 2\n","        both_pr = np.vstack((short_pr, long_pr))  # for 2d arr, obj 를 1d 로 만들지 않는 이상, pr 은 2d 유지될 것\n","        both_total_pr = to_total_pr(len_df, both_pr, both_obj[-2])\n","        both_cum_pr = np.cumprod(both_total_pr)\n","        both_liqd = min(short_liqd, long_liqd)\n","        both_true_bias_idx = np.vstack((short_true_bias_idx, long_true_bias_idx))  # vstack for 2d arr\n","        both_false_bias_idx = np.vstack((short_false_bias_idx, long_false_bias_idx))\n","        both_prcn, both_rc = precision(both_pr, both_true_bias_idx), wave_bias(both_true_bias_idx, both_false_bias_idx)\n","        both_trade_ticks = np.mean(both_obj[-2] - both_obj[-1])\n","        if signi:\n","          both_idep_res_obj = (both_prcn, both_rc) + get_res_info_nb_v2(sample_len, both_pr, both_total_pr, both_cum_pr, both_liqd)\n","        else:\n","          gs_idx = plot_info_v6(gs, gs_idx, sample_len, both_tr, both_prcn, both_rc, both_trade_ticks, both_pr, both_total_pr, both_cum_pr, both_liqd, lvrg_arr[-1], title_position, fontsize)\n","      # print(\"elapsed time :\", time.time() - start_0)\n","    except Exception as e:\n","      gs_idx += 1\n","      print(\"error in both plot_data :\", e)\n","\n","    if not signi:\n","      if len_short * len_long > 0:\n","        for obj, cum_pr in zip([short_obj, long_obj, both_obj], [short_cum_pr, long_cum_pr, both_cum_pr]):\n","          try:\n","            # start_0 = time.time()\n","            gs_idx = frq_dev_plot_v3(gs, gs_idx, len_df, sample_len, obj[-2], cum_pr[-1], fontsize)\n","            # print(\"elapsed time :\", time.time() - start_0)          \n","          except Exception as e:\n","            gs_idx += 1\n","            print(\"error in frq_dev_plot_v3 :\", e)\n","        plt.show()\n","        plt.close()\n","\n","      return short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_true_bias_idx, short_false_bias_idx, short_point1_arr, short_en_tp1, short_en_out0, \\\n","      long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_true_bias_idx, long_false_bias_idx, long_point1_arr, long_en_tp1, long_en_out0\n","        \n","    else:\n","        return [short_idep_res_obj[:-1], long_idep_res_obj[:-1], both_idep_res_obj[:-1]]"]},{"cell_type":"markdown","metadata":{"id":"EFyWTuscH8VH"},"source":["#### get paired_res function"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qfbtFVMR01UJ"},"outputs":[],"source":["def en_ex_pairing_v5(res_df, open_idx, open_info_list, ohlc_list, config_list, np_timeidx, funcs):  # 이미 충분히 줄여놓은 idx 임\n","    side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","    id_idx_arr = id_idx_arr.astype(int)\n","\n","    ep_out, ep_loc_point2, lvrg_set = funcs\n","\n","    point1_list, valid_openi_list, pair_idx_list, pair_price_list, lvrg_list, fee_list, tpout_list, tr_list = [[] for li in range(8)]\n","    len_df = len(res_df)\n","    len_open_idx = len(open_idx)\n","    i, open_i = 0, -1  # i for total_res_df indexing\n","\n","    while 1:\n","        # ------------ entry phase ------------ #\n","        open_i += 1  # 확인 끝났으면 조기 이탈(+1), 다음 open_idx 조사 진행\n","        if open_i >= len_open_idx:\n","            break\n","\n","        # ------ ep_loc ------ #\n","        op_idx = open_idx[open_i]  # open_i 는 i 와 별개로 운영\n","        if op_idx < i:  # i = 이전 거래 끝난후의 res_df index - \"거래 종료후 거래 시작\", '<' : 거래 종료시점 진입 가능하다는 의미\n","            continue\n","\n","        # ------ dynamic data by ID ------ #\n","        #     1. 해당 id 로 config 재할당해야함\n","        id_idx = id_idx_arr[open_i]\n","        config = config_list[id_idx]\n","        selection_id = config.selection_id\n","        open_side = side_arr[open_i]\n","\n","        side_pos = 'short' if open_side == OrderSide.SELL else 'long'\n","        tp_arr = res_df['{}_tp_{}'.format(side_pos, selection_id)].to_numpy()  # => eptpout arr_list 만들어서 꺼내 사용하면 될 것\n","        point_idxgap_arr = res_df['{}_point_idxgap_{}'.format(side_pos, selection_id)].to_numpy()\n","\n","        ep_arr = res_df['{}_ep_{}'.format(side_pos, selection_id)].to_numpy()  # Todo - while loop 내에서 to_numpy() 반복하느니, pd_indexing 이 낫지 않을까\n","        out_arr = res_df['{}_out_{}'.format(side_pos, selection_id)].to_numpy()\n","        # bias_info_arr = res_df['{}_bias_info_{}'.format(side_pos, selection_id)].to_numpy()  # ex. rolling(entry ~ end)'s high\n","        # bias_thresh_arr = res_df['{}_bias_thresh_{}'.format(side_pos, selection_id)].to_numpy()  # ex. close + dc_T20 * 0.5\n","        tr_arr = res_df['{}_tr_{}'.format(side_pos, selection_id)].to_numpy()\n","\n","        # ------ ei_k & point2 ------ #\n","        i = op_idx + 1  # open_signal 이 close_bar.shift(1) 이라고 가정하고 다음 bar 부터 체결확인한다는 의미\n","        if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","            break\n","\n","        # ------ point1 & 2's tp_j ------ #\n","        point_idxgap = point_idxgap_arr[op_idx]\n","        if np.isnan(point_idxgap):\n","            continue\n","        else:\n","            # ------ allow point2 only next to point1 ------ #\n","            open_arr = res_df['{}_open_{}'.format(side_pos, selection_id)].to_numpy()\n","            tp_j = int(op_idx - point_idxgap)\n","            if np.sum(open_arr[tp_j:op_idx]) != 0:\n","                continue\n","\n","        exec_j, ep_j, tp_j, out_j, entry_done, en_p, fee = check_eik_point2_exec_v3(res_df, config, op_idx, tp_j, len_df, open_side,\n","                                                                                 [*ohlc_list, ep_arr], ep_out, ep_loc_point2)\n","        i = exec_j\n","\n","        if not entry_done:\n","            continue\n","\n","        # ------ leverage ------ #\n","        out = out_arr[out_j]  # lvrg_set use out on out_j\n","        leverage = lvrg_set(res_df, config, open_side, en_p, out, fee)  # res_df 변수 사용됨 - 주석 처리 된 상태일뿐\n","        if leverage is None:\n","            continue\n","\n","        exit_done, cross_on = 0, 0\n","        # ------ check tpout_onexec ------ #\n","        # if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","        if config.ep_set.entry_type == \"LIMIT\":\n","            if config.tp_set.tp_onexec:  # dynamic 은 tp_onexec 사용하는 의미가 없음\n","                tp_j = exec_j\n","            if config.out_set.out_onexec:  # dynamic 은 out_onexec 사용하는 의미가 없음\n","                out_j = exec_j\n","\n","        while 1:\n","            # ------------ exit phase ------------ #\n","            if not config.tp_set.static_tp:  # 앞으로 왠만하면 static 만 사용할 예정\n","                tp_j = i\n","            if not config.out_set.static_out:\n","                out_j = i\n","\n","            # ------------ tp ------------ #\n","            if not config.tp_set.non_tp and i != exec_j:\n","                exit_done, ex_p, fee = check_limit_tp_exec(res_df, config, open_i, i, tp_j, len_df, fee, open_side, exit_done,\n","                                                           [*ohlc_list, [tp_arr]])  # 여기서는 j -> i 로 변경해야함\n","                # if config.tp_set.tp_type in ['LIMIT']:  # 'BOTH' -> 앞으로는, LIMIT 밖에 없을거라 주석처리함\n","                # if not exit_done and config.tp_set.tp_type in ['MARKET', 'BOTH']:\n","\n","            # ------------ out ------------ #\n","            # ------ signal_out ------ #\n","            if not exit_done:\n","                exit_done, cross_on, ex_p, fee = check_market_out_exec_v2(config, res_df, np_timeidx, open_i, i, len_df, fee, open_side, cross_on, exit_done)\n","            # ------ hl_out ------ #\n","            if config.out_set.hl_out != \"None\":\n","                if not exit_done:  # and i != len_df - 1:\n","                    exit_done, ex_p, fee = check_out(config, open_i, i, out_j, len_df, fee, open_side, exit_done, [*ohlc_list, out_arr])\n","\n","            if exit_done:  # 이 phase 는 exit_phase 뒤에도 있어야할 것 - entry_done var. 사용은 안하겠지만\n","                # ------ append dynamic vars. ------ #\n","                point1_list.append(tp_j)\n","                valid_openi_list.append(open_i)  # side, zone, start_ver arr 모두 openi_list 로 접근하기 위해 open_i 를 담음\n","                pair_idx_list.append([exec_j, i])  # entry & exit (체결 기준임)\n","                pair_price_list.append([en_p, ex_p])\n","                lvrg_list.append(leverage)\n","                fee_list.append(fee)\n","                tpout_list.append([tp_arr[tp_j], out_arr[out_j]])  # for tpout_line plot_check\n","                # bias_list.append([bias_info_arr[exec_j], bias_thresh_arr[exec_j]])  # backtest 에서만 가능한 future_data 사용\n","                # bias_list.append([bias_info_arr[exec_j], tp_arr[tp_j]])  # bias_info 는 entry_idx 부터 & tp = bias_thresh\n","                tr_list.append(tr_arr[op_idx])\n","\n","                # open_i += 1  # 다음 open_idx 조사 진행\n","                break\n","\n","            # 1. 아래있으면, 체결 기준부터 tp, out 허용 -> tp 가 entry_idx 에 체결되는게 다소 염려되기는 함, 일단 진행 (그런 case 가 많지 않았으므로)\n","            # 2. 위에있으면, entry 다음 tick 부터 exit 허용\n","            i += 1\n","            if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","                break\n","\n","        if i >= len_df:  # or open_i >= len_open_idx:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        else:\n","            continue\n","\n","    return np.array(point1_list), np.array(valid_openi_list), np.array(pair_idx_list), np.array(pair_price_list), np.array(lvrg_list), np.array(\n","        fee_list), np.array(tpout_list), np.array(tr_list)\n","\n","\n","def check_eik_point2_exec_v3(res_df, config, op_idx, tp_j, len_df, open_side, np_datas, ep_out, ep_loc_point2):\n","    o, h, l, c, ep_arr = np_datas\n","    ep_j = op_idx\n","    # tp_j = op_idx\n","    out_j = op_idx\n","\n","    selection_id = config.selection_id    \n","    allow_ep_in = 0 if config.ep_set.point2.use_point2 else 1\n","    entry_done = 0\n","    ep = None\n","\n","    if config.ep_set.entry_type == \"LIMIT\":\n","        fee = config.trader_set.limit_fee\n","\n","        for e_j in range(op_idx + 1, len_df):\n","            # ------ index setting for dynamic options ------ #\n","            if not config.ep_set.static_ep:\n","                ep_j = e_j  # dynamic_ep 를 위한 ep_index var.\n","                out_j = e_j  # dynamic_out 를 위한 out_index var. - 조건식이 static_ep 와 같이 있는 이유 모름 => dynamic_lvrg 로 사료됨\n","\n","            if not config.tp_set.static_tp:\n","                tp_j = e_j\n","\n","            # ------ ei_k ------ # - limit 사용하면 default 로 ei_k 가 존재해야함\n","            if ep_out(res_df, config, op_idx, e_j, tp_j, [h, l], open_side):\n","              break\n","\n","            # ------ point2 ------ #\n","            if not allow_ep_in:\n","                allow_ep_in, out_j = ep_loc_point2(res_df, config, e_j, out_j, side=OrderSide.SELL)\n","                if allow_ep_in:\n","                  if config.ep_set.point2.entry_type == \"LIMIT\":\n","                    ep_j = e_j\n","                    # print(\"e_j in point2 :\", e_j)\n","                    continue\n","\n","            # ------ check ep_exec ------ #\n","            if allow_ep_in:\n","              if config.ep_set.point2.use_point2 and config.ep_set.point2.entry_type == 'MARKET':\n","                entry_done = 1\n","                ep = c[e_j]\n","                break\n","              else:\n","                if open_side == OrderSide.SELL:\n","                    if h[e_j] >= ep_arr[ep_j]:\n","                        entry_done = 1\n","                        ep = ep_arr[ep_j]\n","                        if o[e_j] >= ep_arr[ep_j]:  # open comp 는 결국, 수익률에 얹어주는 logic (반보수) -> 사용 보류\n","                            ep = o[e_j]\n","                        break\n","                else:\n","                    if l[e_j] <= ep_arr[ep_j]:\n","                        entry_done = 1\n","                        ep = ep_arr[ep_j]\n","                        if o[e_j] <= ep_arr[ep_j]:\n","                            ep = o[e_j]\n","                        break\n","\n","    else:  # market entry\n","        e_j = op_idx + 1\n","        entry_done = 1\n","        ep = c[op_idx]\n","        fee = config.trader_set.market_fee\n","\n","    return e_j, ep_j, tp_j, out_j, entry_done, ep, fee  # 다음 start_i <-- e_j 로 변경\n","    #   e_j => 다음 phase 의 시작 index <-> ep_j : ep 의 기준 index\n","    #   ep_j, tp_j, out_j 가 return 되어야함 - exit phase 에서 이어가기 위함\n","\n","\n","def check_limit_tp_exec(res_df, config, open_i, j, tp_j, len_df, fee, open_side, exit_done, np_datas):\n","    o, h, l, c, tps = np_datas\n","    tp = None\n","    selection_id = config.selection_id\n","    len_tps = len(tps)\n","\n","    for tp_i, tp_arr in enumerate(tps):\n","        #     decay adjustment    #\n","        #     tp_j includes dynamic_j - functionalize  #\n","        try:\n","            if config.tr_set.decay_gap != \"None\":\n","                decay_share = (j - open_i) // config.tp_set.decay_term\n","                decay_remain = (j - open_i) % config.tp_set.decay_term\n","                if j != open_i and decay_remain == 0:\n","                    if open_side == OrderSide.SELL:\n","                        tp_arr[tp_j] += res_df['short_tp_gap_{}'.format(selection_id)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","                    else:\n","                        tp_arr[tp_j] -= res_df['long_tp_gap_{}'.format(selection_id)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","        except:\n","            pass\n","\n","        if open_side == OrderSide.SELL:\n","            if l[j] <= tp_arr[tp_j]:  # and partial_tp_cnt == tp_i:  # we use static tp now\n","                # if l[j] <= tp_arr[j] <= h[j]: --> 이건 잘못되었음\n","                # partial_tp_cnt += 1 --> partial_tp 보류\n","\n","                # ------ dynamic tp ------ #\n","                if tp_arr[j] != tp_arr[j - 1] and not config.tp_set.static_tp:\n","                    # tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if o[j] < tp_arr[j]:\n","                        tp = o[j]\n","                    # tp limit 이 가능한 경우 - open 이 아직, tp 를 넘지 않은 경우\n","                    else:\n","                        tp = tp_arr[j]\n","                # ------ static tp ------ #\n","                else:\n","                    #   tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if o[j] < tp_arr[tp_j]:  # static 해놓고 decay 사용하면 dynamic 이니까\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = o[j]  # tp_j -> open_i 를 가리키기 때문에 decay 는 한번만 진행되는게 맞음\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","        else:\n","            if h[j] >= tp_arr[tp_j]:\n","                # ------ dynamic tp ------ #\n","                if tp_arr[j] != tp_arr[j - 1] and not config.tp_set.static_tp:\n","                    if o[j] > tp_arr[j]:\n","                        tp = o[j]\n","                    else:\n","                        tp = tp_arr[j]\n","\n","                # ------ static tp ------ #\n","                else:\n","                    if o[j] > tp_arr[tp_j]:\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = o[j]\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","    if exit_done:\n","        fee += config.trader_set.limit_fee\n","\n","    return exit_done, tp, fee\n","\n","\n","def check_market_out_exec_v2(config, res_df, np_timeidx, open_i, j, len_df, fee, open_side, cross_on, exit_done):    \n","    close = res_df['close'].to_numpy()\n","    ex_p = None\n","    selection_id = config.selection_id\n","\n","    # ------ timestamp ------ #\n","    if config.out_set.tf_exit != \"None\":\n","        if np_timeidx[j] % config.out_set.tf_exit == config.out_set.tf_exit - 1 and j != open_i:\n","            exit_done = 1\n","\n","    # ------ rsi ------ # -> vectorize 가능함 => 추후 적용\n","    if config.out_set.rsi_exit:\n","        rsi_T = res_df['rsi_T'].to_numpy()\n","\n","        if open_side == OrderSide.SELL:\n","            if (rsi_T[j - 1] >= 50 - config.loc_set.point.osc_band) & (rsi_T[j] < 50 - config.loc_set.point.osc_band):\n","                exit_done = 1\n","        else:\n","            if (rsi_T[j - 1] <= 50 + config.loc_set.point.osc_band) & (rsi_T[j] > 50 + config.loc_set.point.osc_band):\n","                exit_done = 1\n","\n","    # ------ heikin_ashi ------ #\n","    # if selection_id in ['v3_3']:\n","    #     if open_side == OrderSide.SELL:\n","    #       if (ha_o[j] < ha_c[j]):# & (ha_o[j] == ha_l[j]):   # 양봉 출현\n","    #           exit_done = 1\n","    #     else:\n","    #       if (ha_o[j] > ha_c[j]):# & (ha_o[j] == ha_h[j]):  # 음봉 출현\n","    #           exit_done = 1\n","\n","    # ------------ early out ------------ #\n","    # ------ bb ------ # --> cross_on 기능은 ide latency 개선 여부에 해당되지 않음\n","    if selection_id in ['v5_2']:\n","        bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","        bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","\n","        if open_side == OrderSide.SELL:\n","            if close[j] < bb_lower_5T[j] < close[j - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and close[j] > bb_upper_5T[j] > close[j - 1]:\n","                exit_done = 1\n","        else:\n","            if close[j] > bb_upper_5T[j] > close[j - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and close[j] < bb_lower_5T[j] < close[j - 1]:\n","                exit_done = 1\n","\n","    if exit_done:\n","        ex_p = close[j]\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, cross_on, ex_p, fee\n","\n","\n","def check_out(config, open_i, j, out_j, len_df, fee, open_side, exit_done, np_datas):\n","    o, h, l, c, out_arr = np_datas\n","    ex_p = None\n","\n","    if config.out_set.hl_out:\n","        if open_side == OrderSide.SELL:\n","            if h[j] >= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","        else:\n","            if l[j] <= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","    else:  # close_out\n","        if open_side == OrderSide.SELL:\n","            if c[j] >= out_arr[out_j]:  # check out only once\n","                exit_done = 1\n","        else:\n","            if c[j] <= out_arr[out_j]:  # check out only once\n","                ex_p = c[j]\n","                exit_done = 1\n","\n","    if exit_done:\n","        if config.out_set.hl_out:\n","            ex_p = out_arr[out_j]\n","        else:\n","            ex_p = c[j]\n","\n","        if open_side == OrderSide.SELL:\n","            if o[j] >= out_arr[out_j]:\n","                ex_p = o[j]\n","        else:\n","            if o[j] <= out_arr[out_j]:\n","                ex_p = o[j]\n","\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, ex_p, fee"]},{"cell_type":"markdown","metadata":{"id":"zQ-roiifspcX"},"source":["#### ep_loc.point & zone legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Js5eL87VspcX"},"outputs":[],"source":["\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(selection_id)] - 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry_{}'.format(selection_id)] - 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(selection_id)] + 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry_{}'.format(selection_id)] + 1, res_df['entry_{}'.format(selection_id)])\n","\n","\n","    \n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # ------------------------------------ short ------------------------------------ # \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 0:\n","        #   mr_score += 1          \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_upper_1m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_upper_3m'].iloc[i] <= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_upper_5m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","        # ------------------------------------ long ------------------------------------ # \n","          \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 1:\n","        #   mr_score += 1   \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 1:\n","        #   mr_score += 1     \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 1:\n","          # mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_lower_1m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_lower_3m'].iloc[i] >= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_lower_5m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"]},{"cell_type":"markdown","metadata":{"id":"_blyFhQJUd5X"},"source":["#### dump"]},{"cell_type":"code","source":["plot_is=1\n","open_idx = open_info_df.index.to_numpy()\n","len_df = len(res_df)\n","s_idx = (open_idx < int(len_df * (1 - test_ratio))) == plot_is\n","s_open_info_df = open_info_df[s_idx]\n","s_open_idx = open_idx[s_idx]\n","\n","open_info_list = [s_open_info_df[col_].to_numpy() for col_ in s_open_info_df.columns]\n","side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","\n","# ------------ get paired_res ------------ #\n","start_0 = time.time()\n","paired_res = en_ex_pairing_v4(res_df, s_open_idx, open_info_list, ohlc_list, config_list, np_timeidx, funcs)\n","# valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","print(\"en_ex_pairing elapsed time :\", time.time() - start_0)  #  0.37 --> 0.3660471439361572 --> 0.21(lesser if)\n","\n","# ------------ idep_plot ------------ #\n","start_0 = time.time()\n","high, low = ohlc_list[1:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q-Xt9w51BOPC","executionInfo":{"status":"ok","timestamp":1650030352162,"user_tz":-540,"elapsed":1285,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"a3bd1b45-d58d-4184-c501-66fc824aaa99"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["en_ex_pairing elapsed time : 1.1988611221313477\n"]}]},{"cell_type":"code","source":["sample_ratio=0.7\n","title_position=(0.5, 0.5)\n","fontsize=15\n","signi=False\n","\n","if sample_ratio is not None:\n","      sample_len = int(len_df * sample_ratio)\n","else:\n","  sample_len = len_df\n","\n","# ------ short & long data preparation ------ #\n","# start_0 = time.time()\n","point1_arr, valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr, _, tr_arr = paired_res    \n","assert len(valid_openi_arr) != 0, \"assert len(valid_openi_arr) != 0\"    \n","short_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.SELL)[0]  # valid_openi_arr 에 대한 idx, # side_arr,\n","long_valid_openi_idx = np.where(side_arr[valid_openi_arr] == OrderSide.BUY)[0]\n","\n","valid_open_idx = open_idx[valid_openi_arr].reshape(-1, 1)\n","\n","short_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[short_valid_openi_idx]\n","long_obj = np.hstack((pair_price_arr, pair_idx_arr, valid_open_idx))[long_valid_openi_idx]\n","both_obj = np.vstack((short_obj, long_obj))\n","print(\"short_obj.shape :\", short_obj.shape)\n","print(\"long_obj.shape :\", long_obj.shape)\n","\n","short_obj, long_obj, both_obj = [np.split(obj_, 5, axis=1) for obj_ in [short_obj, long_obj, both_obj]]\n","\n","short_point1_arr, long_point1_arr = [point1_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","short_lvrg_arr, long_lvrg_arr = [lvrg_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","short_fee_arr, long_fee_arr = [fee_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","short_tpout_arr, long_tpout_arr = [tpout_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","# short_bias_arr, long_bias_arr = [bias_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","short_tr_arr, long_tr_arr = [tr_arr[openi_idx_] for openi_idx_ in [short_valid_openi_idx, long_valid_openi_idx]]\n","# print(\"long_bias_arr.shape :\", long_bias_arr.shape)    \n","# print(\"elapsed time :\", time.time() - start_0)\n","\n","short_true_bias_idx, short_false_bias_idx, long_true_bias_idx, long_false_bias_idx = get_wave_bias(res_df, config, high, low, len_df, short_obj, long_obj)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ErhWGoABA5L2","executionInfo":{"status":"ok","timestamp":1650030354180,"user_tz":-540,"elapsed":380,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"240dac0e-9466-4c61-d1bf-55580d7de35e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["short_obj.shape : (425, 5)\n","long_obj.shape : (374, 5)\n"]}]},{"cell_type":"code","source":["short_en_idx = short_obj[2].astype(int)\n","short_en_tp1 = ffill_line(res_df['short_tp_1_{}'.format(config.strat_version)].to_numpy(), short_en_idx)\n","short_en_out0 = ffill_line(res_df['short_epout_0_{}'.format(config.strat_version)].to_numpy(), short_en_idx)\n","\n","long_en_idx = long_obj[2].astype(int)\n","long_en_tp1 = ffill_line(res_df['long_tp_1_{}'.format(config.strat_version)].to_numpy(), long_en_idx)\n","long_en_out0 = ffill_line(res_df['long_epout_0_{}'.format(config.strat_version)].to_numpy(), long_en_idx)\n","\n","bias_info_tick = config.tr_set.bias_info_tick\n","\n","# 1. min 에 초점을 맞추는 거니까, touch 없을시 len_df 로 설정\n","# 2. future_data 사용이니까, shift(-bias_info_tick) 설정\n","# 3. entry 다음 idx 부터 -> tp & out 체결 logic 이 현재 entry_idx 부터 되어있어서 취소\n","last_idx = len_df - 1\n","short_en_tp1_touch_idx = pd.Series(np.where(low <= short_en_tp1, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[short_en_idx]  \n","short_en_out0_touch_idx = pd.Series(np.where(high >= short_en_out0, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[short_en_idx]\n","\n","long_en_tp1_touch_idx = pd.Series(np.where(high >= long_en_tp1, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[long_en_idx]\n","long_en_out0_touch_idx = pd.Series(np.where(low <= long_en_out0, np.arange(len_df), last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-bias_info_tick).to_numpy()[long_en_idx]\n","\n","short_true_bias_idx = short_en_tp1_touch_idx < short_en_out0_touch_idx  # true_bias 의 조건\n","long_true_bias_idx = long_en_tp1_touch_idx < long_en_out0_touch_idx\n","\n","short_false_bias_idx = short_en_tp1_touch_idx > short_en_out0_touch_idx  # false_bias 의 조건\n","long_false_bias_idx = long_en_tp1_touch_idx > long_en_out0_touch_idx"],"metadata":{"id":"uelGdX2-ISZb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["long_en_tp1_touch_idx"],"metadata":{"id":"w1g0VQvUfK69"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(long_en_tp1[long_en_tp1_touch_idx.astype(int)].ravel())\n","print(high[long_en_tp1_touch_idx.astype(int)].ravel()))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f0hPU71agPGs","executionInfo":{"status":"ok","timestamp":1650031209368,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"e37f1fae-6108-4777-9979-5f17775aca60"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[3138.55  355.84 3138.55  341.35  350.44  338.46  358.86 3138.55  363.65 3138.55  382.85 3138.55 3138.55  342.02 3138.55  328.9  3138.55  344.79 3138.55  355.27  354.4  3138.55  353.77 3138.55  347.58 3138.55  352.19  354.42 3138.55 3138.55  338.88  339.4   367.89  375.5   375.5   373.35  375.9   375.14  375.48 3138.55  380.59  382.89  379.92 3138.55  369.7   369.24  381.2   420.    417.28  412.1   408.29  380.55  382.4  3138.55  383.96 3138.55  383.72  406.76  411.49  411.86  432.93 3138.55 3138.55  447.69 3138.55  465.24  454.7   466.5   510.4   535.2   535.2  3138.55  509.2   588.18 3138.55  598.25 3138.55  591.86 3138.55  568.32 3138.55  668.85  649.    661.3  3138.55 3138.55  614.28 3138.55  616.44  622.28  627.99  731.56  775.22 1031.7  3138.55 3138.55 1178.4  3138.55 1326.32 1060.37 3138.55 3138.55 3138.55 1342.85 3138.55 1240.67 3138.55 3138.55 1353.01 1537.91 1647.83 1724.82 1753.25 3138.55 1750.19 1867.96 1813.91 3138.55 3138.55 3138.55 3138.55 1699.51 1494.44 1367.36 3138.55 3138.55 3138.55 3138.55 1844.   3138.55 1807.   1765.04 3138.55 1881.5  3138.55 3138.55 3138.55 1583.38 1937.46 2001.46 2114.   2023.5  2081.23 2129.9  2129.83 2080.83 2476.97 2148.2  3138.55 3138.55 3138.55 3138.55 2222.03 3138.55 2329.38 2263.   2534.76 2650.94 3138.55 2778.02 2775.85 3138.55 3138.55 3471.94 3138.55 3964.08 4320.   3767.6  3138.55 2373.99 3138.55 3138.55 3138.55 3138.55 2850.   2636.88 3138.55 3138.55 2521.4  3138.55 2482.5  3138.55 2414.33 2368.29 2508.85 2571.   3138.55 3138.55 2351.52 2243.45 3138.55 1840.52 1793.36 3138.55 1981.23 3138.55 3138.55 2154.34 3138.55 3138.55 3138.55 2292.99 2249.   2393.86 3138.55 2122.24 3138.55 1906.44 2000.92 3138.55 3138.55 1895.   1915.   1826.21 1828.3  3138.55 2006.57 3138.55 2349.85 2301.25 2355.56 2470.36 2609.14 2496.57 3124.85 3130.8  3273.65 3248.22 3277.91 3138.55 3018.88 3228.28 3138.55 3253.5  3265.17 3138.55 3121.   3138.55 3251.64 3760.4  3768.5  3138.55 3926.18 3138.55 3138.55 3138.55 3243.44 3387.91 3435.57\n"," 3138.55 3584.55 3138.55 3138.55 3138.55 3138.55 3138.55 2940.   3138.55 3138.55 3360.9  3399.06 3138.55 3559.   3138.55 3138.55 3138.55 3138.55 3504.24 3138.55 3653.89 3838.53 3824.   4140.   3138.55 3138.55 3138.55 4204.69 3138.55 4385.29 3138.55 4328.29 4342.8  4368.   4619.95 3138.55 4547.73 4546.49 3138.55 3138.55 4620.   4821.47 4766.   4764.62 4664.7  4713.04 4307.   4309.63 3138.55 3138.55 4193.46 4156.24 3138.55 4097.31 4379.   4678.43 4736.66 3138.55 3138.55 3966.   4218.99 3138.55 4192.11 3138.55 4050.2  3138.55 3892.61 3840.54 4092.5  3138.55 3138.55 3908.04 3936.79 3819.01 3848.34 3138.55 3138.55 4108.36 3138.55 3138.55 3138.55 3679.86 3702.95 3757.2  3138.55 3740.66 3138.55 3138.55 3744.99 3764.   3757.79 3821.99 3747.15 3138.55 3138.55 3226.   3138.55 3138.55 3132.58 3134.2  3260.79 3277.   3268.99 3344.65 3138.55 3132.81 3092.32 3138.55 2470.08 3138.55 2692.   3138.55 2635.   3028.   3138.55 3017.62 3015.03 3000.75 3138.55 3086.7  3105.96 3138.55 3110.   3121.88 3138.55]\n","374\n"]}]},{"cell_type":"code","source":["print(long_en_tp1_touch_idx[long_true_bias_idx])\n","print(long_en_out0_touch_idx[long_true_bias_idx])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hyXEy7KAedJ2","executionInfo":{"status":"ok","timestamp":1650030425924,"user_tz":-540,"elapsed":364,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"12218782-36bf-464c-f541-bcedca0ff729"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[  3248.   4344.   5341.   6735.   7834.  13347.  25711.  28495.  32237.  33547.  39660.  44409.  45439.  46948.  48805.  51043.  52120.  53359.  54034.  57112.  58538.  60445.  62858.  67542.  71722.  80491.  80767.  86740.  87741.  88510.  89202.  89234.  90141. 105033. 106104. 111037. 113720. 121267. 135864. 139356. 149820. 152586. 155911. 160863. 161642. 162671. 171804. 173306. 175672. 199217. 203117. 212870. 226575. 227026. 230021. 232483. 233282. 248963. 270925. 272996. 275479. 290295. 300154. 302132. 303737. 304638. 305793. 308003. 312179. 321092. 332342. 333530. 334276. 338807. 341295. 342957. 351072. 355171. 361986. 374071. 392165. 394820. 400131. 402941. 405780. 407033. 408021. 412866. 414544. 424202. 424980. 427095. 434430. 437469. 440475. 451161. 455125. 458299. 458442. 462265. 468069. 471761. 474015. 474938. 479950. 485783. 489154. 491021. 493865. 495411. 502142. 503869. 506076. 506701. 515582. 522458. 522527. 525678. 541272. 568971. 584740. 590825. 594590. 600643. 604810. 606480. 609673. 610227. 611668. 614534. 617830. 620083. 623613. 635582. 636202. 640519. 646478. 649546. 651589. 656581. 657916. 658876. 672091. 672723. 673970. 676228. 678667. 679819. 685661. 693579. 693875. 694317. 694843. 697049. 697494. 698408. 699552. 700742. 706565. 712600. 714943. 721810. 722645. 747355. 748460. 748687. 749288. 750137. 752699. 755756. 755934. 761833.]\n","[763830. 763830.   5371. 763830. 763830. 763830.  25738. 763830. 763830. 763830.  39721. 763830.  45562. 763830. 763830. 763830.  52203. 763830. 763830.  57309.  58660.  60458. 763830. 763830. 763830. 763830. 763830.  86826.  87809. 763830. 763830. 763830. 763830. 763830. 763830. 111095. 763830. 763830. 763830. 139363. 763830. 152608. 156017. 763830. 763830. 763830. 171904. 763830. 763830. 763830. 763830. 212940. 763830. 763830. 763830. 763830. 233456. 249015. 763830. 763830. 763830. 763830. 300351. 763830. 303840. 763830. 305881. 308089. 763830. 321269. 763830. 333598. 763830. 763830. 341392. 763830. 763830. 763830. 763830. 763830. 392245. 394855. 400313. 763830. 763830. 407115. 763830. 412940. 763830. 763830. 763830. 763830. 763830. 763830. 440618. 451267. 763830. 763830. 458525. 763830. 468301. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 493893. 763830. 763830. 763830. 506190. 506707. 763830. 763830. 763830. 525726. 763830. 763830. 763830. 763830. 594650. 763830. 763830. 763830. 609694. 763830. 763830. 614559. 763830. 620213. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 658023. 658979. 763830. 763830. 763830. 763830. 678782. 763830. 685747. 763830. 763830. 694428. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 763830. 747472. 763830. 748782. 763830. 763830. 752722. 763830. 756095. 761897.]\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FlNGKvW_w2za"},"outputs":[],"source":["config_name = \"config_v5_2.1220_candlejson\"\n","# config_name = \"config_v3.json\"\n","cfg_full_path = os.path.join(current_path, \"config\", config_name)\n","\n","\n","with open(cfg_full_path, 'w') as cfg:\n","    json.dump(config1, cfg, indent=2)\n","    print(\"{} dumped !\".format(cfg_full_path))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xs6TlV7wu6uo"},"outputs":[],"source":["def en_ex_pairing_v4(res_df, open_idx, open_info_list, ohlc_list, point2_list, market_data_list, config_list, np_timeidx, funcs):  # 이미 충분히 줄여놓은 idx 임\n","    side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","    id_idx_arr = id_idx_arr.astype(int)\n","\n","    ep_out, ep_loc_point2, lvrg_set = funcs\n","\n","    point1_list, valid_openi_list, pair_idx_list, pair_price_list, lvrg_list, fee_list, tpout_list, bias_list, tr_list = [[] for li in range(9)]\n","    len_df = len(res_df)\n","    len_open_idx = len(open_idx)\n","    i, open_i = 0, -1  # i for total_res_df indexing\n","\n","    while 1:\n","        # ------------ entry phase ------------ #\n","        open_i += 1  # 확인 끝났으면 조기 이탈(+1), 다음 open_idx 조사 진행\n","        if open_i >= len_open_idx:\n","          break\n","          \n","        # ------ ep_loc ------ #\n","        op_idx = open_idx[open_i]  # open_i 는 i 와 별개로 운영\n","        \n","        if str(res_df.index[op_idx]) == '2022-02-14 14:07:59.999000':\n","          print('2022-02-14 14:07:59.999000 passed')\n","          print(op_idx, i, open_i)\n","\n","        if op_idx < i:  # i = 이전 거래 끝난후의 res_df index - \"거래 종료후 거래 시작\", '<' : 거래 종료시점 진입 가능하다는 의미\n","            continue\n","\n","        if str(res_df.index[op_idx]) == '2022-02-14 14:07:59.999000':\n","          print('2022-02-14 14:07:59.999000 passed')\n","\n","        # ------ dynamic data by ID ------ #\n","        #     1. 해당 id 로 config 재할당해야함\n","        id_idx = id_idx_arr[open_i]\n","        config = config_list[id_idx]\n","        strat_version = config.strat_version\n","        open_side = side_arr[open_i]\n","\n","        side_pos = 'short' if open_side == OrderSide.SELL else 'long'\n","        tp_arr = res_df['{}_tp_{}'.format(side_pos, strat_version)].to_numpy()  # => eptpout arr_list 만들어서 꺼내 사용하면 될 것\n","        point_idxgap_arr = res_df['{}_point_idxgap_{}'.format(side_pos, strat_version)].to_numpy()\n","        \n","        ep_arr = res_df['{}_ep_{}'.format(side_pos, strat_version)].to_numpy()  # Todo - while loop 내에서 to_numpy() 반복하느니, pd_indexing 이 낫지 않을까\n","        out_arr = res_df['{}_out_{}'.format(side_pos, strat_version)].to_numpy()\n","        bias_info_arr = res_df['{}_bias_info_{}'.format(side_pos, strat_version)].to_numpy()  # ex. rolling(entry ~ end)'s high\n","        bias_thresh_arr = res_df['{}_bias_thresh_{}'.format(side_pos, strat_version)].to_numpy()  # ex. close + dc_T20 * 0.5\n","        tr_arr = res_df['{}_tr_{}'.format(side_pos, strat_version)].to_numpy()\n","\n","        # ------ ei_k & point2 ------ #\n","        i = op_idx + 1  # open_signal 이 close_bar.shift(1) 이라고 가정하고 다음 bar 부터 체결확인한다는 의미\n","        if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        \n","        # ------ point1 & 2's tp_j ------ #\n","        point_idxgap = point_idxgap_arr[op_idx]\n","        if np.isnan(point_idxgap):\n","          continue\n","        else:\n","          tp_j = int(op_idx - point_idxgap)\n","\n","          # ------ allow point2 only next to point1 ------ #\n","          # open_arr = res_df['{}_open_{}'.format(side_pos, strat_version)].to_numpy()\n","          # if np.sum(open_arr[tp_j:op_idx]) != 0:\n","          #   continue\n","          \n","        exec_j, ep_j, tp_j, out_j, entry_done, en_p, fee = check_eik_point2_exec_v2(res_df, config, op_idx, tp_j, len_df, open_side, [*ohlc_list, ep_arr], point2_list, ep_out, ep_loc_point2)\n","        i = exec_j\n","        \n","        if not entry_done:\n","            continue\n","\n","        # ------ leverage ------ #\n","        out = out_arr[out_j]  # lvrg_set use out on out_j\n","        leverage = lvrg_set(res_df, config, open_side, en_p, out, fee)  # res_df 변수 사용됨 - 주석 처리 된 상태일뿐\n","        if leverage is None:\n","            continue\n","\n","        exit_done, cross_on = 0, 0\n","        # ------ check tpout_onexec ------ #\n","        # if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","        if config.ep_set.entry_type == \"LIMIT\":\n","            if config.tp_set.tp_onexec:  # dynamic 은 tp_onexec 사용하는 의미가 없음\n","                tp_j = exec_j\n","            if config.out_set.out_onexec:  # dynamic 은 out_onexec 사용하는 의미가 없음\n","                out_j = exec_j\n","\n","\n","        while 1:\n","            # ------------ exit phase ------------ #\n","            if not config.tp_set.static_tp:  # 앞으로 왠만하면 static 만 사용할 예정\n","                tp_j = i\n","            if not config.out_set.static_out:\n","                out_j = i\n","\n","            # ------------ tp ------------ #\n","            if not config.tp_set.non_tp and i != exec_j:\n","                exit_done, ex_p, fee = check_limit_tp_exec(res_df, config, open_i, i, tp_j, len_df, fee, open_side, exit_done, [*ohlc_list, [tp_arr]])  # 여기서는 j -> i 로 변경해야함\n","                # if config.tp_set.tp_type in ['LIMIT']:  # 'BOTH' -> 앞으로는, LIMIT 밖에 없을거라 주석처리함\n","                # if not exit_done and config.tp_set.tp_type in ['MARKET', 'BOTH']:\n","\n","            # ------------ out ------------ #\n","            # ------ signal_out ------ #\n","            if not exit_done:\n","              exit_done, cross_on, ex_p, fee = check_market_out_exec(config, open_i, i, len_df, fee, open_side, cross_on, exit_done, [np_timeidx, *market_data_list])\n","            # ------ hl_out ------ #\n","            if config.out_set.hl_out != \"None\":\n","              if not exit_done:  # and i != len_df - 1:                \n","                  exit_done, ex_p, fee = check_out(config, open_i, i, out_j, len_df, fee, open_side, exit_done, [*ohlc_list, out_arr])\n","\n","            if exit_done:  # 이 phase 는 exit_phase 뒤에도 있어야할 것 - entry_done var. 사용은 안하겠지만\n","                # ------ append dynamic vars. ------ #\n","                point1_list.append(tp_j)\n","                valid_openi_list.append(open_i)  # side, zone, start_ver arr 모두 openi_list 로 접근하기 위해 open_i 를 담음\n","                pair_idx_list.append([exec_j, i])  # entry & exit (체결 기준임)\n","                pair_price_list.append([en_p, ex_p])\n","                lvrg_list.append(leverage)\n","                fee_list.append(fee)\n","                tpout_list.append([tp_arr[tp_j], out_arr[out_j]])  # for tpout_line plot_check\n","                # bias_list.append([bias_info_arr[exec_j], bias_thresh_arr[exec_j]])  # backtest 에서만 가능한 future_data 사용\n","                bias_list.append([bias_info_arr[exec_j], tp_arr[tp_j]])  # bias_info 는 entry_idx 부터 & tp = bias_thresh \n","                tr_list.append(tr_arr[op_idx])\n","\n","                # open_i += 1  # 다음 open_idx 조사 진행\n","                break\n","\n","            # 1. 아래있으면, 체결 기준부터 tp, out 허용\n","            # 2. 위에있으면, entry 다음 tick 부터 exit 허용\n","            i += 1\n","            if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","                break\n","\n","        # if str(res_df.index[i]) == '2022-02-14 10:37:59.999000':\n","        #   print(i)\n","        if side_pos == 'long':\n","          print(str(res_df.index[op_idx]))\n","          print(str(res_df.index[i]))\n","          print()\n","                \n","        if i >= len_df: # or open_i >= len_open_idx:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        else:\n","            continue\n","\n","    return np.array(point1_list), np.array(valid_openi_list), np.array(pair_idx_list), np.array(pair_price_list), np.array(lvrg_list), np.array(fee_list), np.array(tpout_list), np.array(bias_list), np.array(tr_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iAVss_DwcliC"},"outputs":[],"source":["def get_res_v3(res_df, open_info_df, ohlc_list, point2_list, market_data_list, config_list, np_timeidx, funcs, test_ratio=0.3, plot_is=True, signi=False):\n","  # ------------ make open_info_list ------------ #\n","  open_idx = open_info_df.index.to_numpy()\n","  len_df = len(res_df)\n","  s_idx = (open_idx < int(len_df * (1 - test_ratio))) == plot_is\n","  s_open_info_df = open_info_df[s_idx]\n","  s_open_idx = open_idx[s_idx]\n","\n","  open_info_list = [s_open_info_df[col_].to_numpy() for col_ in s_open_info_df.columns]\n","  side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","\n","  # ------------ get paired_res ------------ #\n","  start_0 = time.time()\n","  paired_res = en_ex_pairing_v3(res_df, s_open_idx, open_info_list, ohlc_list, point2_list, market_data_list, config_list, np_timeidx, funcs)\n","  # valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","  print(\"en_ex_pairing elapsed time :\", time.time() - start_0)  #  0.37 --> 0.3660471439361572 --> 0.21(lesser if)\n","\n","  return paired_res"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"183hY18cpUBu"},"outputs":[],"source":["def get_max_outg_v3(open_side, config, ohlc_list, obj, tpout_arr, epout_0, out_gap):\n","\n","    h, l = ohlc_list[1:3]\n","\n","    np_obj = np.array(obj).T[0]\n","    assert len(np_obj.shape) == 2\n","\n","    # iin == iout 인 경우 분리\n","    # en_idx = np_obj[:, 2]\n","    # ex_idx = np_obj[:, 3]\n","    # equal_idx = en_idx == ex_idx\n","\n","    \n","    _, _, en_idxs, ex_idxs, open_idxs = obj\n","\n","    if open_side == \"SELL\":\n","      idxgs = [np.argwhere(l[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)] <= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","    else:\n","      idxgs = [np.argwhere(h[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)] >= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","\n","    min_idxg = np.array([gaps.min() if len(gaps) != 0 else np.nan for gaps in idxgs])  # get 최소 idx_gap from en_idx\n","    nan_idx = np.isnan(min_idxg) # .astype(int) -> false swing_bias idx\n","    # min_idxg[nan_idx] = 0  # fill na 0, for idex summation below\n","\n","    if open_side == \"SELL\":      \n","      # max_high = np.array([np.max(h[int(en_idx):int(en_idx + idx_gap + 1)]) for en_idx, idx_gap in zip(en_idxs, min_idxg)]).reshape(-1, 1)  # reshape is important in np boradcasting\n","      # max_high = np.array([np.max(h[int(en_idx):int(en_idx + idx_gap + 1)]) if not np.isnan(idx_gap) else np.max(h[int(en_idx):int(ex_idx + 1)])\n","      max_high = np.array([np.max(h[int(en_idx):int(en_idx + idx_gap + 1)]) if not np.isnan(idx_gap) else np.max(h[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)])\n","                          for en_idx, ex_idx, idx_gap in zip(en_idxs, ex_idxs, min_idxg)]).reshape(-1, 1)  # reshape is important in np boradcasting   # outg 라서, iin + 1 이 아님\n","      max_outg = (max_high - epout_0) / out_gap\n","    else:\n","      # min_low = np.array([np.min(l[int(en_idx):int(en_idx + idx_gap + 1)]) for en_idx, idx_gap in zip(en_idxs, min_idxg)]).reshape(-1, 1)\n","      # min_low = np.array([np.min(l[int(en_idx):int(en_idx + idx_gap + 1)]) if not np.isnan(idx_gap) else np.min(l[int(en_idx):int(ex_idx + 1)])\n","      min_low = np.array([np.min(l[int(en_idx):int(en_idx + idx_gap + 1)]) if not np.isnan(idx_gap) else np.min(l[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)])\n","                          for en_idx, ex_idx, idx_gap in zip(en_idxs, ex_idxs, min_idxg)]).reshape(-1, 1)  # outg 라서, iin + 1 이 아님\n","      max_outg = (epout_0 - min_low) / out_gap # out_idx 포함\n","\n","    return max_outg, open_idxs.astype(int), ~nan_idx.astype(bool).reshape(-1, 1)  # true_bias 의 outg data 만 사용\n","\n","\n","def get_max_outg_v2(open_side, config, ohlc_list, obj, tpout_arr, epout_0, out_gap):\n","\n","    h, l = ohlc_list[1:3]\n","    _, _, en_idxs, _, open_idxs = obj\n","\n","    if open_side == \"SELL\":\n","      idxgs = [np.argwhere(l[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)] <= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","    else:\n","      idxgs = [np.argwhere(h[int(en_idx):int(en_idx + config.tr_set.bias_info_tick)] >= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","\n","    min_idxg = np.array([gaps.min() if len(gaps) != 0 else np.nan for gaps in idxgs])  # get 최소 idx_gap from en_idx\n","    nan_idx = np.isnan(min_idxg) # .astype(int)\n","    min_idxg[nan_idx] = 0  # fill na 0, for idex summation below\n","\n","    if open_side == \"SELL\":      \n","      max_high = np.array([np.max(h[int(en_idx):int(en_idx + idx_gap + 1)]) for en_idx, idx_gap in zip(en_idxs, min_idxg)]).reshape(-1, 1)  # reshape is important in np boradcasting\n","      max_outg = (max_high - epout_0) / out_gap\n","    else:\n","      max_low = np.array([np.min(l[int(en_idx):int(en_idx + idx_gap + 1)]) for en_idx, idx_gap in zip(en_idxs, min_idxg)]).reshape(-1, 1)\n","      max_outg = (epout_0 - max_low) / out_gap # out_idx 포함\n","\n","    return max_outg[~nan_idx], open_idxs[~nan_idx].astype(int)  # true_bias 의 outg data 만 사용\n","\n","def get_max_tpg_v2(open_side, ohlc_list, pr_, obj, tp_1, tp_gap):  # much faster\n","\n","    h, l = ohlc_list[1:3]\n","\n","    # en_p = obj[0]\n","    # ex_p = obj[1]\n","\n","    np_obj = np.array(obj).T[0]\n","    assert len(np_obj.shape) == 2\n","\n","    # iin == iout 인 경우 분리\n","    en_idx = np_obj[:, 2]\n","    ex_idx = np_obj[:, 3]\n","    equal_idx = en_idx == ex_idx\n","\n","    if open_side == \"SELL\":\n","        min_low = np.full_like(tp_1, np.nan)\n","        # min_low[~equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)  # start from iin + 1\n","        min_low[~equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)  # start from iin + 1\n","        max_tpg = (tp_1 - min_low) / tp_gap\n","    else:\n","        max_high = np.full_like(tp_1, np.nan)\n","        # max_high[~equal_idx] = np.array([np.max(h[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        max_high[~equal_idx] = np.array([np.max(h[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        max_tpg = (max_high - tp_1) / tp_gap\n","\n","    return max_tpg[pr_ < 1]  # out 된 case 만 tpg 담음\n","    # return max_tpg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eCFQfLGBrwj2"},"outputs":[],"source":["titles = public_cols +devided_cols\n","max_plot_outg = 10\n","\n","for title, short_data, long_data in zip(titles, short_datas, long_datas):\n","\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(12, 5))\n","  nrows, ncols = 1, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                          ncols=ncols\n","                          )\n","    \n","  print(len(long_max_outg))\n","\n","  short_plot_idx = short_max_outg <= max_plot_outg\n","  long_plot_idx = long_max_outg <= max_plot_outg  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_open_data = short_data[short_outg_open_idx]\n","  long_open_data = long_data[long_outg_open_idx]\n","  \n","  short_plot_idx *= short_open_data <= 10\n","  long_plot_idx *= long_open_data <= 10 # nan 과 inf 때문에 이 방식 채택\n","\n","  short_plot_idx *= ~np.isnan(short_open_data)\n","  long_plot_idx *= ~np.isnan(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_plot_idx *= ~np.isinf(short_open_data)\n","  long_plot_idx *= ~np.isinf(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","  \n","  print(np.sum(long_plot_idx))\n","\n","  plt.subplot(gs[0])\n","  x, y = short_max_outg[short_plot_idx].ravel(), short_open_data[short_plot_idx].ravel()\n","  # plt.bar(x, y, width=0.05)\n","  plt.scatter(x, y)\n","  plt.axvline(0.5, color='red', linewidth=3)\n","  plt.title(\"coef : {:0.3f}\".format(np.corrcoef(-x, y)[0, 1]))\n","  plt.xlim(0, max_plot_outg)\n","\n","  plt.subplot(gs[1])\n","  x, y = long_max_outg[long_plot_idx].ravel(), long_open_data[long_plot_idx].ravel()\n","  # plt.bar(x, y, width=0.05)\n","  plt.scatter(x, y)\n","  plt.axvline(0.5, color='red', linewidth=3)\n","  plt.title(\"coef : {:0.3f}\".format(np.corrcoef(-x, y)[0, 1]))\n","  plt.xlim(0, max_plot_outg)\n","\n","  plt.suptitle(title)\n","  plt.show()\n","\n","  print()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nYDgg3XEt116"},"outputs":[],"source":["short_max_outg, short_outg_open_idx = get_max_outg_v2(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_epout_0, short_open_epout_gap)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"19_q_5awv_Uu"},"outputs":[],"source":["strat_version = config.strat_version\n","len_df = len(res_df)\n","short_open_res = np.ones(len_df)\n","long_open_res = np.ones(len_df)\n","\n","short_tp_1_col, short_tp_0_col, short_tp_gap_col = 'short_tp_1_{}'.format(strat_version), 'short_tp_0_{}'.format(strat_version), 'short_tp_gap_{}'.format(strat_version) \n","long_tp_1_col, long_tp_0_col, long_tp_gap_col = 'long_tp_1_{}'.format(strat_version), 'long_tp_0_{}'.format(strat_version), 'long_tp_gap_{}'.format(strat_version) \n","short_epout_1_col, short_epout_0_col, short_epout_gap_col = 'short_epout_1_{}'.format(strat_version), 'short_epout_0_{}'.format(strat_version), 'short_epout_gap_{}'.format(strat_version) \n","long_epout_1_col, long_epout_0_col, long_epout_gap_col = 'long_epout_1_{}'.format(strat_version), 'long_epout_0_{}'.format(strat_version), 'long_epout_gap_{}'.format(strat_version) \n","\n","data_cols = ['open', 'high', 'low']   # Todo - public_indi 이전에 해야할지도 모름 # 'close', 'haopen', 'hahigh', 'halow', 'haclose'\n","tp_cols = [short_tp_1_col, short_tp_0_col, short_tp_gap_col, long_tp_1_col, long_tp_0_col, long_tp_gap_col]   # Todo - public_indi 이전에 해야할지도 모름\n","epout_cols = [short_epout_1_col, short_epout_0_col, short_epout_gap_col, long_epout_1_col, long_epout_0_col, long_epout_gap_col]   # Todo - public_indi 이전에 해야할지도 모름\n","\n","short_tp_1_, short_tp_0_, short_tp_gap_, long_tp_1_, long_tp_0_, long_tp_gap_ = [res_df[col_].to_numpy() for col_ in tp_cols]\n","short_epout_1_, short_epout_0_, short_epout_gap_, long_epout_1_, long_epout_0_, long_epout_gap_ = [res_df[col_].to_numpy() for col_ in epout_cols]\n","open, high, low = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","short_base = (short_tp_1_ + short_tp_0_) / 2\n","long_base = (long_tp_1_ + long_tp_0_) / 2\n","\n","touch_period = 50\n","\n","short_a_touch = pd.Series(np.where(high >= short_tp_0_, np.arange(len(res_df)), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","short_b_touch = pd.Series(np.where(low <= short_tp_1_, np.arange(len(res_df)), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨\n","\n","short_en_p = (get_line(short_a_touch, short_tp_0_) + get_line(short_b_touch, short_tp_1_)) / 2\n","short_base_b = get_line(short_b_touch, short_base)\n","short_tp_gap_b = get_line(short_b_touch, short_tp_gap_)\n","short_open_res *= (high >= short_base_b) & (short_base_b >= open) & (short_a_touch < short_b_touch) & (short_base_b + config.loc_set.point.base_gap * short_tp_gap_b >= short_base)\n","\n","long_a_touch = pd.Series(np.where(low <= long_tp_0_, np.arange(len(res_df)), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()       \n","long_b_touch = pd.Series(np.where(high >= long_tp_1_, np.arange(len(res_df)), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()\n","\n","long_en_p = (get_line(long_a_touch, long_tp_0_) + get_line(long_b_touch, long_tp_1_)) / 2\n","long_base_b = get_line(long_b_touch, long_base)\n","long_tp_gap_b = get_line(long_b_touch, long_tp_gap_)\n","long_open_res *= (open >= long_base_b) & (long_base_b >= low) & (long_a_touch < long_b_touch) & (long_base_b - config.loc_set.point.base_gap * long_tp_gap_b <= long_base)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1648558797859,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"5X-3R-rSwFDh","outputId":"2053743d-9468-4bd6-c0e8-c2817b448ec6"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 379.67  379.67  387.17 ... 3145.43 3145.43 3126.73]\n","[ 386.14  386.14  391.39 ... 3158.96 3158.96 3150.79]\n","[ 382.905  382.905  389.28  ... 3152.195 3152.195 3138.76 ]\n"]},{"data":{"text/plain":["0"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["print(get_line(long_a_touch, long_tp_0_)[long_open_res.astype(bool)])\n","print(get_line(long_a_touch, long_tp_0_)[long_open_res.astype(bool)])\n","print(get_line(long_b_touch, long_tp_1_)[long_open_res.astype(bool)])\n","print(long_base_b[long_open_res.astype(bool)])\n","np.sum(long_en_p[long_open_res.astype(bool)] != long_base_b[long_open_res.astype(bool)])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yGm3hwHEJ1va"},"outputs":[],"source":["def get_max_tpg(open_side, ohlc_list, pr_, obj_, rtc_gap):  # much faster\n","    if type(obj_) == list:\n","        obj_ = list(zip(*obj_))\n","\n","    h, l = ohlc_list[1:3]\n","\n","    if open_side == \"SELL\":\n","      max_tpg = np.array([ep_ - np.min(l[int(iin):int(iout + 1)]) for ep_, _, iin, iout in obj_]) / rtc_gap # out 포함\n","      # max_outg = np.array([np.max(h[int(iin):int(iout + 1)]) - ep_ for ep_, _, iin, iout in obj_]) / rtc_gap\n","    else:\n","      max_tpg = np.array([np.max(h[int(iin):int(iout + 1)]) - ep_ for ep_, _, iin, iout in obj_]) / rtc_gap\n","      # max_outg = np.array([ep_ - np.min(l[int(iin):int(iout + 1)]) for ep_, _, iin, iout in obj_]) / rtc_gap\n","\n","    return max_tpg[pr_ < 1]  # out 된 case 만 tpg 담음"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eooryL32-zxp"},"outputs":[],"source":["short_max_tpg = get_max_tpg(\"SELL\", ohlc_list, short_pr, short_obj[:4], short_open_rtc_gap)\n","long_max_tpg = get_max_tpg(\"BUY\", ohlc_list, long_pr, long_obj[:4], long_open_rtc_gap)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yOMiuw7cJYmZ"},"outputs":[],"source":["long_max_tpg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SrGNSuOjCyPn"},"outputs":[],"source":["def get_pr_v3(open_side, h, l, obj, tpout, lvrg, fee, p_ranges, p_qty, inversion=False):  # --> 여기서 사용하는 ex_p = ex_p\n","\n","    en_p = obj[0]\n","    # ex_p = obj[1]\n","    tp, out = np.split(tpout, 2, axis=1)\n","    len_p = len(p_ranges)\n","    en_ps, tps, outs, lvrgs, fees = [np.tile(arr_, (1, len_p)) for arr_ in [en_p, tp, out, lvrg, fee]]\n","    \n","    np_obj = np.array(obj).T[0]\n","    assert len(np_obj.shape) == 2\n","    \n","    # iin == iout 인 경우 분리\n","    en_idx = np_obj[:, 2]\n","    ex_idx = np_obj[:, 3]\n","    equal_idx = en_idx == ex_idx\n","        \n","    if open_side == \"SELL\":\n","        p_tps = en_ps - (en_ps - tps) * p_ranges\n","        # min_low = np.array([np.min(l[int(iin):int(iout + 1)]) for _, _, iin, iout in list(zip(*obj[:4]))]).reshape(-1, 1)  # -> deprecated, start from iin + 1\n","        min_low = np.full_like(en_p, np.nan)\n","        min_low[~equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1) # start from iin + 1\n","        tp_idx = np.tile(min_low, (1, len_p)) <= p_tps\n","        \n","        # ------ liquidation ------ #\n","        max_high = np.full_like(en_p, np.nan)\n","        max_high[~equal_idx] = np.array([np.max(h[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        liqd = np.nanmin((en_p / max_high - fee - 1) * lvrg + 1)\n","    else:\n","        p_tps = en_ps + (tps - en_ps) * p_ranges\n","        # max_high = np.array([np.max(h[int(iin):int(iout + 1)]) for _, _, iin, iout in list(zip(*obj[:4]))]).reshape(-1, 1)\n","        max_high = np.full_like(en_p, np.nan)\n","        max_high[~equal_idx] = np.array([np.max(h[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        tp_idx = np.tile(max_high, (1, len_p)) >= p_tps\n","        # print(p_tps)\n","        # print(max_high)\n","\n","        # ------ liquidation ------ #\n","        min_low = np.full_like(en_p, np.nan)\n","        min_low[~equal_idx] = np.array([np.min(l[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        liqd = np.nanmin((min_low / en_p - fee - 1) * lvrg + 1)\n","\n","    ex_ps = outs.copy()\n","    ex_ps[tp_idx] = p_tps[tp_idx]\n","\n","    if open_side == \"SELL\":\n","        if not inversion:\n","            pr = ((en_ps / ex_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","        else:\n","            pr = ((ex_ps / en_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","    else:\n","        if not inversion:\n","            # print(fees)\n","            # print(p_qty)\n","            # print(p_qty * fees)\n","            pr = ((ex_ps / en_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","        else:\n","            pr = ((en_ps / ex_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","\n","    return pr.reshape(-1, 1), liqd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"b5s3Us9VtlXH"},"outputs":[],"source":["p_ranges, p_qty = [0.2, 0.6, 1], [1, 0.0, 0.00]\n","long_pr, long_liqd = get_pr_v3(OrderSide.BUY, h, l, long_obj, long_tpout_arr, long_lvrg_arr, long_fee_arr, p_ranges, p_qty, inversion)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"s1O_gGXVtrtz"},"outputs":[],"source":["long_pr"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HBFh3FJLpYeZ"},"outputs":[],"source":["def liquidation_v2(open_side, data_, obj_, lvrg, fee):  # v1 is deprecated\n","    if type(obj_) == list:\n","        obj = list(zip(*obj_))\n","\n","    np_obj = np.array(obj_).T[0]\n","    assert len(np_obj.shape) == 2\n","    \n","    en_p = obj_[0]\n","\n","    # iin == iout 인 경우 분리\n","    en_idx = np_obj[:, 2]\n","    ex_idx = np_obj[:, 3]\n","    equal_idx = en_idx == ex_idx\n","\n","    if open_side == \"SELL\":\n","        max_high = np.full_like(en_p, np.nan)\n","        max_high[~equal_idx] = np.array([np.max(data_[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        return np.nanmin((en_p / max_high - fee - 1) * lvrg + 1)\n","    else:\n","        min_low = np.full_like(en_p, np.nan)\n","        min_low[~equal_idx] = np.array([np.min(data_[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        return np.nanmin((min_low / en_p - fee - 1) * lvrg + 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":527,"status":"ok","timestamp":1648462727490,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"GtajcCM49AGr","outputId":"a0c857d5-83db-407c-f0dd-bb906de72f20"},"outputs":[{"name":"stdout","output_type":"stream","text":["(2005,)\n","(1724,)\n","0.9338351565411452\n","0.9832121539680836\n"]}],"source":["short_liqd = liquidation_v2(OrderSide.SELL, h, short_obj[:4], short_lvrg_arr, short_fee_arr)\n","long_liqd = liquidation_v2(OrderSide.BUY, l, long_obj[:4], long_lvrg_arr, long_fee_arr)\n","\n","print(short_liqd)\n","print(long_liqd)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eMuRjqo_evR1"},"outputs":[],"source":["def liquidation_v2(open_side, data_, obj_, lvrg, fee):  # much faster\n","\n","    # if type(obj_) == list:\n","    #     obj_ = \n","    # if open_side == \"SELL\":\n","    #     return np.min([(ep_ / np.max(data_[int(iin):int(iout + 1)]) - fee - 1) * lvrg + 1 for ep_, _, iin, iout in obj_])\n","    # else:\n","    #     return np.min([(np.min(data_[int(iin):int(iout + 1)]) / ep_ - fee - 1) * lvrg + 1 for ep_, _, iin, iout in obj_])\n","\n","    np_obj = np.array(obj).T[0]\n","    assert len(np_obj.shape) == 2\n","\n","    en_p = obj_[0]  # 2d\n","\n","    print(np_obj.shape)\n","    \n","    # iin == iout 인 경우 분리\n","    en_idx = np_obj[:, 2]\n","    ex_idx = np_obj[:, 3]\n","    equal_idx = en_idx == ex_idx\n","    print(equal_idx)\n","        \n","    if open_side == \"SELL\":\n","        max_high = en_p.copy()\n","        max_high[~equal_idx] = np.array([np.max(data_[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)  # equal_idx 는 liqd 를 측정하지 않음\n","        return np.min((en_p / max_high - fee - 1) * lvrg + 1)\n","    else:\n","        min_low = en_p.copy()\n","        print(min_low)\n","\n","        # min_low[~equal_idx] = np.array([np.min(data_[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        print(data_)\n","        # res = np.array([np.min(data_[int(iin):int(iout)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        res = np.min([(np.min(data_[int(iin):int(iout)]) / ep_ - fee - 1) * lvrg + 1 for ep_, _, iin, iout in list(zip(*obj_)) if iin != iout])\n","        # print(min_low[~equal_idx])\n","        print(res)\n","        return np.min((min_low / en_p - fee - 1) * lvrg + 1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uLMEbR_vij3L"},"outputs":[],"source":["h, l = ohlc_list[1:3]\n","long_liqd = liquidation_v2(OrderSide.BUY, l, long_obj[:4], long_lvrg_arr, long_fee_arr)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ykrPUuxiXlLG"},"outputs":[],"source":["# np.array(long_obj)[:,(en_idx == ex_idx)].shape\n","long_np_obj = np.array(long_obj).T[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":401,"status":"ok","timestamp":1648455838651,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"MZiMIYLln8bB","outputId":"3a2f1100-f1b1-4ad9-da2f-d50708a60ccd"},"outputs":[{"data":{"text/plain":["array([[   383.005,    381.73 ,     60.   ,     61.   ],\n","       [   386.33 ,    384.9  ,    105.   ,    107.   ],\n","       [   386.43 ,    385.24 ,    240.   ,    243.   ],\n","       ...,\n","       [  3806.905,   3863.8  , 679660.   , 679934.   ],\n","       [  3953.845,   3944.   , 680228.   , 680255.   ],\n","       [  4102.28 ,   4089.18 , 685040.   , 685167.   ]])"]},"execution_count":507,"metadata":{},"output_type":"execute_result"}],"source":["long_np_obj[~equal_idx, :4]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r8rHPFeHm1DQ"},"outputs":[],"source":["# for _, _, iin, iout in long_np_obj[~equal_idx, :4]:\n","#   print(iin, iout)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":390,"status":"ok","timestamp":1648453058391,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"Uyjsp9EyZ4GF","outputId":"b15069ba-0057-4665-916c-f4417979cb88"},"outputs":[{"data":{"text/plain":["(1724,)"]},"execution_count":446,"metadata":{},"output_type":"execute_result"}],"source":["# long_np_obj.shape\n","# # long_np_obj.T[0]\n","long_np_obj\n","\n","en_idx = long_np_obj[:, 2]\n","ex_idx = long_np_obj[:, 3]\n","\n","# print(en_idx[:5])\n","# print(ex_idx[:5])\n","# np.sum(en_idx == ex_idx)\n","equal_idx = en_idx == ex_idx\n","equal_idx.shape\n","# en_idx"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_GrZgkaSZC2K"},"outputs":[],"source":["# # for items in zip(long_np_obj[:4]):\n","# # for items in list(zip(*long_obj[:4])):\n","# for items in long_np_obj:\n","#   print(items)\n","#   break\n","equal_idx = equal_idx.ravel()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"R1YRROdJYWkH"},"outputs":[],"source":["min_low = np.full_like(en_idx, np.nan)\n","min_low[~equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in long_np_obj[~equal_idx, :4]]).reshape(-1, 1)  # reshape for shape match\n","# min_low[equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in long_np_obj[equal_idx, :4]]).reshape(-1, 1)  # reshape for shape match # np.nan 은 비교에서 무조건 False 즉, out 처리될 것"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1648454521907,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"jFxV8dami0wn","outputId":"896b3188-7179-4f33-c9e5-f259f5458436"},"outputs":[{"data":{"text/plain":["-1.7472363139317024"]},"execution_count":483,"metadata":{},"output_type":"execute_result"}],"source":["long_liqd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mMsDJDmO5qNw"},"outputs":[],"source":["short_outg_plot_data = short_max_outg[short_max_outg <= max_plot_outg]  # nan 과 inf 때문에 이 방식 채택\n","long_outg_plot_data = long_max_outg[long_max_outg <= max_plot_outg]\n","print(\"len(short_outg_plot_data) :\", len(short_outg_plot_data))\n","print(\"len(long_outg_plot_data) :\", len(long_outg_plot_data))\n","\n","plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(12, 5))\n","nrows, ncols = 1, 2\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","  \n","plt.subplot(gs[0])\n","kde_plot_v2(*np.unique(short_outg_plot_data, return_counts=True))\n","\n","plt.subplot(gs[1])\n","kde_plot_v2(*np.unique(long_outg_plot_data, return_counts=True))\n","\n","plt.suptitle('outg')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BjxCPi96JbfS"},"outputs":[],"source":["# --- tp > ep > out 검사 --- #\n","long_tp, long_out = np.split(long_tpout_arr, 2, axis=1)\n","long_ep = long_obj[0]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q_wH04vCJzYu"},"outputs":[],"source":["print(np.sum((long_tp <= long_ep)))\n","print(np.sum((long_ep <= long_out)))\n","print(len((long_ep <= long_out)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YlENTUSXhBfa"},"outputs":[],"source":["def kde_plot_v2(v, c, kde_factor=0.15, num_samples=100):\n","\n","  # start_0 = time.time()\n","  kde = stats.gaussian_kde(v,weights=c,bw_method=kde_factor)\n","  kdx = np.linspace(v.min(),v.max(),num_samples)\n","  kdy = kde(kdx)\n","  ticks_per_sample = (kdx.max() - kdx.min()) / num_samples\n","  # print(\"ticks_per_sample :\", ticks_per_sample)  # sample 당 가격\n","  # print(\"kdy elapsed_time :\", time.time() - start_0)\n","\n","  peaks,_ = signal.find_peaks(kdy)\n","  pkx = kdx[peaks]\n","  pky = kdy[peaks]\n","  print(\"pkx :\", pkx)\n","\n","  # plt.figure(figsize=(10,5))\n","  plt.hist(v, weights=c, bins=num_samples, alpha=.8, edgecolor='black')\n","  plt.plot(kdx, kdy, color='white')\n","  plt.plot(pkx, pky, 'bo', color='yellow')\n","  # plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZkbuBX1Ygzll"},"outputs":[],"source":["def get_max_outg(open_side, config, ohlc_list, obj, tpout_arr, rtc_gap):\n","\n","    h, l = ohlc_list[1:3]    \n","    en_p, _, en_idxs, _, open_idxs = obj\n","\n","    if open_side == \"SELL\":\n","      idxgs = [np.argwhere(l[int(en_idx) : int(en_idx + config.tr_set.bias_info_tick)] <= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","    else:\n","      idxgs = [np.argwhere(h[int(en_idx) : int(en_idx + config.tr_set.bias_info_tick)] >= tpout_arr[i, 0]) for i, en_idx in enumerate(en_idxs)]\n","\n","    min_idxg = np.array([gaps.min() if len(gaps) != 0 else np.nan for gaps in idxgs])  # get 최소 idx_gap from en_idx\n","    nan_idx = np.isnan(min_idxg) # .astype(int)\n","    min_idxg[nan_idx] = 0  # fill na 0, for idex summation below\n","\n","    if open_side == \"SELL\":\n","      max_outg = np.array([np.max(h[int(en_idx):int(en_idx + idx_gap + 1)]) - ep_ for en_idx, idx_gap, ep_ in zip(en_idxs, min_idxg, en_p)]) / rtc_gap\n","    else:\n","      max_outg = np.array([ep_ - np.min(l[int(en_idx):int(en_idx + idx_gap + 1)]) for en_idx, idx_gap, ep_ in zip(en_idxs, min_idxg, en_p)]) / rtc_gap # out_idx 포함\n","\n","    return max_outg[~nan_idx], open_idxs[~nan_idx].astype(int)  # true_bias 의 outg data 만 사용"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":479,"status":"ok","timestamp":1648380698566,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"mYQgnD9CgC8b","outputId":"e316919a-0e22-4266-ef24-185284cc8cb5"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 390.58  387.91  344.81  346.25  334.7   351.81  366.07  367.09  372.83  372.08  384.92  387.79  374.12  365.82  364.87  359.06  386.58  381.46  384.71  385.    383.9   384.18  381.18  369.86  373.5   374.17  341.4   344.5   345.29  342.93  343.49  340.7   320.3   345.3   349.59  355.    352.    354.    357.96  358.21  355.    352.47  355.18  346.41  347.14  348.54  346.62  348.28  347.38  348.19  351.74  352.98  339.87  339.64  339.99  339.46  349.97  368.    375.85  374.3   367.2   383.8   386.25  385.31  384.97  377.3   377.85  380.28  378.    365.92  366.9   367.9   368.6   369.61  368.48  369.09  372.72  379.    379.17  375.2   379.09  380.52  397.42  417.13  418.05  413.6   412.26  411.7   408.6   406.29  405.5   383.74  388.2   386.95  387.    386.97  387.86  378.69  383.58  459.06  437.    445.    445.99  464.27  463.1   464.96  463.3   456.76  463.89  462.3   458.31  459.37  461.31  470.28  475.    591.54  601.95  619.3   609.46  573.21  512.97  554.39  588.37  593.83  571.43  593.31  589.71  552.62  551.44  563.9   573.    568.68  562.72  556.82  565.49  581.    592.74  651.18  644.2   646.4   607.89  606.5   615.    612.8   614.27  582.76  610.64  704.97  753.49  741.36  736.2   996.   1694.7  1686.52 1859.07 1818.7  1892.84 1930.29 1959.36 1639.28 1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1711.55 1783.83 1821.46 1834.   1623.93 1979.92 2062.   2204.69 2527.76 2720.47 3532.96 3890.   2778.64 2600.   2331.29 2175.   2140.   1963.91 1753.24 1969.43 2045.5  2158.   2250.   2280.78 2316.37 3180.   3141.93 3276.   3243.   3271.   3329.56 3236.   3275.94 3184.99 3410.   3963.04 3305.   3260.94 3636.28 3419.99 3400.   3383.32 3558.82 3499.   3503.68 4528.   4579.46 4492.13 4231.98 4373.8  3794.77 4082.93 4055.41 3782.   3745.   3163.98 3227.16 3302.58 3105.25 3078.   2621.06 2548.   2619.76 3116.4 ]\n","[ 390.58  387.91  344.81  346.25  334.7   351.81  366.07  367.09  372.83  372.08  384.92  387.79  374.12  365.82  364.87  359.06  386.58  381.46  384.71  385.    383.9   384.18  381.18  369.86  373.5   374.17  341.4   344.5   345.29  342.93  343.49  340.7   320.3   345.3   349.59  355.    352.    354.    357.96  358.21  355.    352.47  355.18  346.41  347.14  348.54  346.62  348.28  347.38  348.19  351.74  352.98  339.87  339.64  339.99  339.46  349.97  368.    375.85  374.3   367.2   383.8   386.25  385.31  384.97  377.3   377.85  380.28  378.    365.92  366.9   367.9   368.6   369.61  368.48  369.09  372.72  379.    379.17  375.2   379.09  380.52  397.42  417.13  418.05  413.6   412.26  411.7   408.6   406.29  405.5   383.74  388.2   386.95  387.    386.97  387.86  378.69  383.58  459.06  437.    445.    445.99  464.27  463.1   464.96  463.3   456.76  463.89  462.3   458.31  459.37  461.31  470.28  475.    591.54  601.95  619.3   609.46  573.21  512.97  554.39  588.37  593.83  571.43  593.31  589.71  552.62  551.44  563.9   573.    568.68  562.72  556.82  565.49  581.    592.74  651.18  644.2   646.4   607.89  606.5   615.    612.8   614.27  582.76  610.64  704.97  753.49  741.36  736.2   996.   1694.7  1686.52 1859.07 1818.7  1892.84 1930.29 1959.36 1639.28 1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1565.   1711.55 1783.83 1821.46 1834.   1623.93 1979.92 2062.   2204.69 2527.76 2720.47 3532.96 3890.   2778.64 2600.   2331.29 2175.   2140.   1963.91 1753.24 1969.43 2045.5  2158.   2250.   2280.78 2316.37 3180.   3141.93 3276.   3243.   3271.   3329.56 3236.   3275.94 3184.99 3410.   3963.04 3305.   3260.94 3636.28 3419.99 3400.   3383.32 3558.82 3499.   3503.68 4528.   4579.46 4492.13 4231.98 4373.8  3794.77 4082.93 4055.41 3782.   3745.   3163.98 3227.16 3302.58 3105.25 3078.   2621.06 2548.   2619.76 3116.4 ]\n","234\n"]}],"source":["strat_version = config.strat_version\n","long_open_res = res_df['long_open_{}'.format(strat_version)].to_numpy().astype(bool)\n","\n","res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res]\n","res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res]\n","# res_df['long_ep_{}'.format(strat_version)].to_numpy()\n","# long_open_res\n","# res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res]\n","# np.sum(res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res] <= res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res])\n","# res = res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res] > res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res]\n","res = res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res] <= res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res]\n","\n","print(res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res][res])\n","print(res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res][res])\n","print(len(res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res][res]))\n","\n","# res = res_df['long_tp_{}'.format(strat_version)].to_numpy() > res_df['long_ep_{}'.format(strat_version)].to_numpy()\n","# res = res_df['long_ep_{}'.format(strat_version)].to_numpy() > res_df['long_out_{}'.format(strat_version)].to_numpy()\n","\n","# print(res_df['long_tp_{}'.format(strat_version)].to_numpy()[res])\n","# print(res_df['long_ep_{}'.format(strat_version)].to_numpy()[res])\n","# print(res_df['long_out_{}'.format(strat_version)].to_numpy()[res])\n","# print(len(res_df['long_ep_{}'.format(strat_version)].to_numpy()[res]))\n","# print(len(res_df['long_out_{}'.format(strat_version)].to_numpy()[res]))\n","\n","# assert np.sum(res_df['long_tp_{}'.format(strat_version)].to_numpy()[long_open_res] <= res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res]) == 0\n","# assert np.sum(res_df['long_ep_{}'.format(strat_version)].to_numpy()[long_open_res] <= res_df['long_out_{}'.format(strat_version)].to_numpy()[long_open_res]) == 0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"57mFruHtCmmh"},"outputs":[],"source":["# fig, axs=plt.subplots(1,2,sharey=True,tight_layout=True)\n","# axs[0].hist(short_max_outg,bins=100)\n","# axs[1].hist(abs_ratio_5T[short_outg_open_idx],bins=100)\n","# plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"40MdGjCY1YtH"},"outputs":[],"source":["def kde_plot(plot_data, kde_factor=0.15, num_samples=100):\n","  v, c = np.unique(plot_data, return_counts=True)  \n","\n","  # start_0 = time.time()\n","  kde = stats.gaussian_kde(v,weights=c,bw_method=kde_factor)\n","  kdx = np.linspace(v.min(),v.max(),num_samples)\n","  kdy = kde(kdx)\n","  ticks_per_sample = (kdx.max() - kdx.min()) / num_samples\n","  # print(\"ticks_per_sample :\", ticks_per_sample)  # sample 당 가격\n","  # print(\"kdy elapsed_time :\", time.time() - start_0)\n","\n","  peaks,_ = signal.find_peaks(kdy)\n","  pkx = kdx[peaks]\n","  pky = kdy[peaks]\n","\n","  # plt.figure(figsize=(10,5))\n","  plt.hist(v, weights=c, bins=num_samples, alpha=.8, edgecolor='black')\n","  plt.plot(kdx, kdy, color='white')\n","  plt.plot(pkx, pky, 'bo', color='yellow')\n","  # plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"v2k6D7UceIK4"},"outputs":[],"source":["v, c = np.unique(long_tpg_plot, return_counts=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":424,"status":"ok","timestamp":1648269301273,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"bJe1fSGFdUcj","outputId":"991eb570-3633-49b7-9a91-02cb5d4fba43"},"outputs":[{"name":"stdout","output_type":"stream","text":["ticks_per_sample : 0.047098781436344224\n","kdy elapsed_time : 0.013733863830566406\n"]}],"source":["kde_factor = 0.15\n","num_samples = 100\n","\n","start_0 = time.time()\n","kde = stats.gaussian_kde(v,weights=c,bw_method=kde_factor)\n","kdx = np.linspace(v.min(),v.max(),num_samples)\n","kdy = kde(kdx)\n","ticks_per_sample = (kdx.max() - kdx.min()) / num_samples\n","print(\"ticks_per_sample :\", ticks_per_sample)  # sample 당 가격\n","print(\"kdy elapsed_time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"executionInfo":{"elapsed":954,"status":"ok","timestamp":1648269365137,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"1Cby5teZdUcj","outputId":"db5fd5b3-4617-42f9-877c-c4b9b82adcef"},"outputs":[{"data":{"image/png":"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\n","text/plain":["<Figure size 720x360 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["peaks,_ = signal.find_peaks(kdy)\n","pkx = kdx[peaks]\n","pky = kdy[peaks]\n","\n","plt.figure(figsize=(10,5))\n","plt.hist(v, weights=c, bins=num_samples, alpha=.8, edgecolor='black')\n","plt.plot(kdx, kdy, color='white')\n","plt.plot(pkx, pky, 'bo', color='yellow')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CfiSD0uwcNIZ"},"outputs":[],"source":["def max_tpout_gap(open_side, ohlc_list, obj_, rtc_gap):  # much faster\n","    if type(obj_) == list:\n","        obj_ = list(zip(*obj_))\n","\n","    h, l = ohlc_list[1:3]\n","\n","    if open_side == \"SELL\":\n","      max_tpg = np.array([ep_ - np.min(l[int(iin):int(iout + 1)]) for ep_, _, iin, iout in obj_]) / rtc_gap # out 포함\n","      max_outg = np.array([np.max(h[int(iin):int(iout + 1)]) - ep_ for ep_, _, iin, iout in obj_]) / rtc_gap\n","    else:\n","      max_tpg = np.array([np.max(h[int(iin):int(iout + 1)]) - ep_ for ep_, _, iin, iout in obj_]) / rtc_gap\n","      max_outg = np.array([ep_ - np.min(l[int(iin):int(iout + 1)]) for ep_, _, iin, iout in obj_]) / rtc_gap\n","\n","    return max_tpg, max_outg"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"r82KfqFqi9tp"},"outputs":[],"source":["short_open_res = np.ones(len(res_df))\n","\n","strat_version = config.strat_version\n","\n","short_rtc_1_col, short_rtc_0_col, short_rtc_gap_col = 'short_rtc_1_{}'.format(strat_version), 'short_rtc_0_{}'.format(strat_version), 'short_rtc_gap_{}'.format(strat_version) \n","long_rtc_1_col, long_rtc_0_col, long_rtc_gap_col = 'long_rtc_1_{}'.format(strat_version), 'long_rtc_0_{}'.format(strat_version), 'long_rtc_gap_{}'.format(strat_version) \n","\n","short_rtc_1_col, short_rtc_0_col, short_rtc_gap_col = 'short_rtc_1_{}'.format(strat_version), 'short_rtc_0_{}'.format(strat_version), 'short_rtc_gap_{}'.format(strat_version) \n","long_rtc_1_col, long_rtc_0_col, long_rtc_gap_col = 'long_rtc_1_{}'.format(strat_version), 'long_rtc_0_{}'.format(strat_version), 'long_rtc_gap_{}'.format(strat_version) \n","\n","data_cols = ['open', 'high', 'low']   # Todo - public_indi 이전에 해야할지도 모름 # 'close', 'haopen', 'hahigh', 'halow', 'haclose'\n","rtc_cols = [short_rtc_1_col, short_rtc_0_col, short_rtc_gap_col, long_rtc_1_col, long_rtc_0_col, long_rtc_gap_col]   # Todo - public_indi 이전에 해야할지도 모름\n","\n","short_rtc_1_, short_rtc_0_, short_rtc_gap_, long_rtc_1_, long_rtc_0_, long_rtc_gap_ = [res_df[col_].to_numpy() for col_ in rtc_cols]\n","open, high, low = [res_df[col_].to_numpy() for col_ in data_cols]\n","short_base = (short_rtc_1_ + short_rtc_0_) / 2\n","long_base = (long_rtc_1_ + long_rtc_0_) / 2\n","# back_ha_o = res_df['haopen'].shift(1).to_numpy()\n","# back_ha_c = res_df['haclose'].shift(1).to_numpy()\n","\n","touch_period = 50\n","# short_open_res *= (back_ha_c >= back_ha_o) & (ha_o > ha_c)\n","# short_open_res *= ha_o == ha_h\n","# short_open_res *= np_timeidx % tf_entry == tf_entry - 1     \n","# short_a_touch = pd.Series(np.where(high >= short_rtc_0_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()  # min -> max\n","short_a_touch = pd.Series(np.where((high >= short_base_b) & (short_base_b >= open), np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).min().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨\n","short_b_touch = pd.Series(np.where(low <= short_rtc_1_, np.arange(len_df), np.nan)).rolling(touch_period, min_periods=1).max().to_numpy()   # min 으로 하면 a 이전에 b 있는건 모두 제외하게됨\n","\n","short_a_touch_line = get_line(short_a_touch, short_rtc_0_)\n","short_b_touch_line = get_line(short_b_touch, short_rtc_1_)\n","short_en_p = (short_a_touch_line + short_b_touch_line) / 2\n","short_base_b = get_line(short_b_touch, short_base)\n","short_rtc_gap_b = get_line(short_b_touch, short_rtc_gap_)\n","short_open_res *= (high >= short_base_b) & (short_base_b >= open) & (short_a_touch < short_b_touch) & (short_base_b + config.loc_set.point.base_gap * short_rtc_gap_b >= short_base)\n","\n","res_df['short_open_{}'.format(strat_version)] = short_open_res"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":366,"status":"ok","timestamp":1647925782107,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"CgD4-ZKW11MQ","outputId":"c126aabb-cb41-4392-a80c-53971b146c2c"},"outputs":[{"name":"stdout","output_type":"stream","text":["[ 377.545  378.085  379.015 ... 3148.91  3148.91  3148.91 ]\n","[ 377.545  378.085  379.015 ... 3148.91  3148.91  3148.91 ]\n"]},{"data":{"text/plain":["0"]},"execution_count":29,"metadata":{},"output_type":"execute_result"}],"source":["# short_en_p == short_base_b\n","print(short_en_p[~np.isnan(short_en_p)])\n","print(short_base_b[~np.isnan(short_en_p)])\n","\n","np.sum((short_en_p[~np.isnan(short_en_p)] == short_base_b[~np.isnan(short_en_p)]) == 0) # => why ..?"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":310,"status":"ok","timestamp":1647565975814,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"AIt9z1NRj5bJ","outputId":"c1b83639-7041-4745-dacd-d9cff49a205d"},"outputs":[{"name":"stdout","output_type":"stream","text":["[2934.59  2934.59  3028.59  3028.59  3028.59  3026.075 3026.075 3016.09  3014.67  3014.4   3014.4   3014.4   3014.4   3014.4   3014.4   3014.395 3014.315 3014.315 3030.235 3030.235 3030.235 3030.235 3051.18  3051.18  3051.18  3077.275 3076.77  3090.945 3105.1   3105.1   3105.1   3105.1   3105.1   3105.1   3099.205 3099.205 3099.205 3105.495 3105.495 3109.615 3127.43  3123.795 3123.795 3123.795 3112.695 3122.715 3122.715 3122.715 3122.715 3115.2   3114.93  3097.035 3115.31  3115.31  3114.245 3114.15  3114.15  3114.15  3112.2   3110.75  3110.75  3112.16  3112.16  3134.39  3134.39  3134.39  3127.905 3127.905 3127.905 3127.905 3128.595 3128.595 3138.59  3138.59  3147.47  3134.205 3133.04  3134.155 3131.105 3131.105 3131.105 3065.94  3065.94  3065.94  3065.51  3068.    3079.33  3079.33  3079.33  3099.805 3169.595 3169.595 3169.595 3169.04  3140.395 3140.395 3140.395 3148.91  3148.91  3148.91 ]\n","[    nan     nan     nan ... 3158.68 3158.68 3158.68]\n","[    nan     nan     nan ... 763812. 763812. 763812.]\n","[ 388.18  388.18  388.18 ... 3158.68 3158.68 3158.68]\n"]}],"source":["true_idx = short_open_res == 1\n","\n","# print(((short_a_touch_line + short_b_touch_line) / 2)[true_idx][-100:])\n","print(short_en_p[true_idx][-100:])\n","# print(short_a_touch_line[true_idx][-100:])\n","\n","print(short_a_touch_line)\n","print(short_a_touch)\n","print(short_rtc_0_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1647565931392,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"GXbSWec4ik3g","outputId":"547b0fc1-0e35-4387-e891-a3af42c18476"},"outputs":[{"name":"stdout","output_type":"stream","text":["[    nan     nan     nan ... 3158.68 3158.68 3158.68]\n","[    nan     nan     nan ... 763812. 763812. 763812.]\n","[ 388.18  388.18  388.18 ... 3158.68 3158.68 3158.68]\n"]}],"source":["short_a_touch_line = get_line(short_a_touch, short_rtc_0_)\n","short_b_touch_line = get_line(short_b_touch, short_rtc_1_)\n","short_en_p = (short_a_touch_line + short_b_touch_line) / 2\n","\n","# print(((short_a_touch_line + short_b_touch_line) / 2)[true_idx][-100:])\n","# print(short_en_p[true_idx][-100:])\n","\n","print(short_a_touch_line)\n","print(short_a_touch)\n","print(short_rtc_0_)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fx4iA-T1k6GS"},"outputs":[],"source":["def get_line(touch, rtc_):\n","  touch_copy = touch.copy()\n","  touch_line = rtc_.copy()\n","\n","  nan_idx = np.isnan(touch_copy)\n","  touch_copy[nan_idx] = 0   # for indexing array\n","  touch_line[touch_copy.astype(int)]\n","  touch_line[nan_idx] = np.nan   # for true comp.\n","\n","  return touch_line"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pk8i59oM4CFZ"},"outputs":[],"source":["# print(short_b_touch[-100:])\n","# print(short_base_b[-100:])\n","true_idx = short_open_res == 1\n","short_a_touch_line = get_line(short_a_touch, short_rtc_0_)\n","short_b_touch_line = get_line(short_b_touch, short_rtc_1_)\n","\n","print(len(short_a_touch_line))\n","print(len(short_b_touch_line))\n","print(((short_a_touch_line + short_b_touch_line) / 2)[true_idx][-100:])\n","\n","print(short_a_touch_line[true_idx][-100:])\n","print(short_b_touch_line[true_idx][-100:])\n","print(short_open_res[true_idx][-100:])\n","print(short_en_p[true_idx][-100:])"]},{"cell_type":"markdown","metadata":{"id":"8b4SbvPrAPR1"},"source":["##### partial"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M4MB0mryCiHC"},"outputs":[],"source":["def get_pr_v2(open_side, h, l, obj, tpout, lvrg, fee, p_ranges, p_qty, inversion=False):  # --> 여기서 사용하는 ex_p = ex_p\n","\n","    en_p = obj[0]\n","    # ex_p = obj[1]\n","    tp, out = np.split(tpout, 2, axis=1)\n","    len_p = len(p_ranges)\n","    en_ps, tps, outs, lvrgs, fees = [np.tile(arr_, (1, len_p)) for arr_ in [en_p, tp, out, lvrg, fee]]\n","    \n","    np_obj = np.array(obj).T[0]\n","    assert len(np_obj.shape) == 2\n","    \n","    # iin == iout 인 경우 분리\n","    en_idx = np_obj[:, 2]\n","    ex_idx = np_obj[:, 3]\n","    equal_idx = en_idx == ex_idx\n","        \n","    if open_side == \"SELL\":\n","        p_tps = en_ps - (en_ps - tps) * p_ranges\n","        # min_low = np.array([np.min(l[int(iin):int(iout + 1)]) for _, _, iin, iout in list(zip(*obj[:4]))]).reshape(-1, 1)  # -> deprecated, start from iin + 1\n","        min_low = np.full_like(en_p, np.nan)\n","        min_low[~equal_idx] = np.array([np.min(l[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        tp_idx = np.tile(min_low, (1, len_p)) <= p_tps\n","    else:\n","        p_tps = en_ps + (tps - en_ps) * p_ranges\n","        # max_high = np.array([np.max(h[int(iin):int(iout + 1)]) for _, _, iin, iout in list(zip(*obj[:4]))]).reshape(-1, 1)\n","        max_high = np.full_like(en_p, np.nan)\n","        max_high[~equal_idx] = np.array([np.max(h[int(iin + 1):int(iout + 1)]) for _, _, iin, iout in np_obj[~equal_idx, :4]]).reshape(-1, 1)\n","        tp_idx = np.tile(max_high, (1, len_p)) >= p_tps\n","\n","    ex_ps = outs.copy()\n","    ex_ps[tp_idx] = p_tps[tp_idx]\n","\n","    if open_side == \"SELL\":\n","        if not inversion:\n","            pr = ((en_ps / ex_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","        else:\n","            pr = ((ex_ps / en_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","    else:\n","        if not inversion:\n","            pr = ((ex_ps / en_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","        else:\n","            pr = ((en_ps / ex_ps - fees - 1) * lvrgs * p_qty).sum(axis=1) + 1\n","\n","    return pr.reshape(-1, 1)"]},{"cell_type":"markdown","metadata":{"id":"JNQxkb06ZdTe"},"source":["## plot_check_v2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hpkqOliMxSIU"},"outputs":[],"source":["# res_df = wave_range_v4(res_df, 20, ltf_df=None, touch_lbperiod=50)\n","# res_df = bb_width_v2(res_df, period=60, multiple=1)"]},{"cell_type":"code","execution_count":60,"metadata":{"id":"A6QSF9COaHO5","executionInfo":{"status":"ok","timestamp":1650672839176,"user_tz":-540,"elapsed":1856,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------------------ plot_config ------------------ #\n","save_mode = 0\n","front_plot = 3    # 0 : whole, 1 : open, 2 : ep_tick, 3 : tp_tick, 4 : bias_tick\n","bias_plot = 0     # = swing_bias -> precision check : 1, recall check : 0\n","pr_descend = 1    # 1 -> 내림차순\n","position = 1      # -1 / 1, 0 (short / long)\n","# tf_plot = 1       # true - false plot\n","# pr_sort = 1     # -> default 1,  이상한 체결 확인하기 좋음\n","# wl_case = 1     # 1 / -1 / 0 (win loss study) --> oid\n","\n","x_max = 500\n","x_margin_mult = 1/30\n","y_margin_mult = 1/30  # 0 \n","\n","prev_plotsize = 100 #  100 20\n","post_plotsize = 60\n","if front_plot == 4:\n","  post_plotsize = config.tr_set.bias_info_tick\n","\n","inversion = 0\n","hedge = 0\n","\n","# ------ show or save ------ #\n","if save_mode:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  shutil.rmtree(plot_check_dir, ignore_errors=True)  # remove existing dir\n","  os.makedirs(plot_check_dir)\n","  print(plot_check_dir)\n","else:\n","  plot_check_dir = None\n","\n","# ------------ 한 방향에 대해 plot_check 함 (by position var.) ------------ #\n","#   obj by position  \n","if position == -1:\n","  pos_str = \"SELL\"\n","  pr_, obj_ = short_pr, short_obj\n","  arr_list = [short_point1_arr, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_bias_arr, short_en_tp1, short_en_out0]\n","else:   # both option currently not supported\n","  pos_str = \"BUY\"\n","  pr_, obj_ = long_pr, long_obj\n","  arr_list = [long_point1_arr, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_bias_arr, long_en_tp1, long_en_out0]\n","pr, obj, [point1_arr, lvrg_arr, fee_arr, tpout_arr, bias_arr, en_tp1, en_out0] = sort_bypr_v3(pr_, obj_, arr_list, descending=pr_descend)\n","\n","pr_msg = \"%s\\n {} ~ {} -> {:.5f}\\n lvrg : {}\\n fee : {:.4f}\" % (pos_str)  # pos_str 으로 이곳에서 정의함\n","\n","# ------------------ data chunknize ------------------ #\n","np_df = res_df.to_numpy()\n","\n","# left_end_idx = obj[2] - prev_plotsize  # left_margin 기준 - entry_idx\n","left_end_idx = obj[4] - prev_plotsize  # left_margin 기준 - open_idx\n","right_end_idx = obj[3] + post_plotsize\n","invalid_left_end = np.sum(left_end_idx < 0)\n","\n","np_plot_params = np.hstack((left_end_idx, right_end_idx, pr, *obj, point1_arr, lvrg_arr, fee_arr, tpout_arr, en_tp1, en_out0))[invalid_left_end:]  # all arr should have same dimension\n","if bias_plot:\n","  bias_idx = bias_arr[invalid_left_end:].ravel()\n","  np_plot_params = np_plot_params[bias_idx]  # wave_bias = 1 만 plot"]},{"cell_type":"code","execution_count":35,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":351,"status":"ok","timestamp":1650672287118,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"FnSydxFXn_f9","outputId":"9dfefd15-8ea9-47bc-aea7-8f2d44a52c76"},"outputs":[{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_plot_check.py:10: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  step_col_arr = np.array(col_list)\n"]}],"source":["s_id = config.selection_id\n","\n","# ------------ make col_idx_dict config ------------ #\n","nonstep_col_list = []\n","step_col_list = []\n","stepmark_col_list = []\n","\n","# ------------ nonstep_col_list - add info(col, alpha, color, linewidth) ------------ #\n","# nonstep_col_list.append([['close'], 1, '#ffffff', 2])\n","\n","# ------------ step_col_list - add info(col, alpha, color, linewidth) ------------ #\n","# ------ htf_candle ------ #\n","hc_tf1 = '5T'\n","hc_tf2 = '15T'\n","\n","step_col_list.append([['open_{}'.format(hc_tf1), 'close_{}'.format(hc_tf1)], 1, '#ffffff', 1])\n","step_col_list.append([['open_{}'.format(hc_tf2), 'close_{}'.format(hc_tf2)], 1, '#ffffff', 2])\n","\n","# ------ resi_sup ------ #\n","# rs_tf = 'T'\n","# step_col_list.append([['resi_{}'.format(rs_tf), 'sup_{}'.format(rs_tf)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['resi_out_{}'.format(rs_tf), 'sup_out_{}'.format(rs_tf)], 1, 'dodgerblue', 2])\n","\n","# ------ wave_range ------ #\n","wave_tf1 = config_list[0].loc_set.point.p1_itv1\n","wave_period1, wave_period2 = config_list[0].loc_set.point.p1_period1, config_list[0].loc_set.point.p1_period2\n","\n","step_col_list.append([['dc_upper_{}{}'.format(wave_tf1, wave_period1), 'dc_lower_{}{}'.format(wave_tf1, wave_period1)], 1, '#ffeb3b', 1])\n","step_col_list.append([['dc_upper_{}{}'.format(wave_tf1, wave_period2), 'dc_lower_{}{}'.format(wave_tf1, wave_period2)], 1, '#ffeb3b', 1])\n","\n","# step_col_list.append([['dc_upper_{}{}'.format(wave_tf2, wave_period2), 'dc_lower_{}{}'.format(wave_tf2, wave_period2)], 1, '#e65100', 2])\n","\n","# ------ dc ------ #\n","dc_tf1 = '5T'\n","dc_tf2 = '15T'\n","dc_period2 = 4\n","\n","# step_col_list.append([['dc_upper_{}'.format(dc_tf1), 'dc_lower_{}'.format(dc_tf1)], 1, '#ffeb3b', 1])\n","\n","# step_col_list.append([['dc_upper_{}'.format(dc_tf2), 'dc_lower_{}'.format(dc_tf2)], 1, '#ff00ff', 4])\n","# step_col_list.append([['dc_base_{}'.format(dc_tf2)], 1, '#5b9cf6', 4])\n","step_col_list.append([['dc_upper_{}{}'.format(dc_tf2, dc_period2), 'dc_lower_{}{}'.format(dc_tf2, dc_period2)], 1, '#ff00ff', 4]),  # inner\n","step_col_list.append([['dc_base_{}{}'.format(dc_tf2, dc_period2)], 1, '#5b9cf6', 4])\n","\n","# ------ bb ------ #\n","bb_tf1 = 'T'\n","bb_period1 = 20\n","\n","step_col_list.append([['bb_upper_{}{}'.format(bb_tf1, bb_period1), 'bb_lower_{}{}'.format(bb_tf1, bb_period1)], 1, '#ffffff', 1])\n","step_col_list.append([['bb_base_{}{}'.format(bb_tf1, bb_period1)], 1, '#00ff00', 1])\n","\n","# step_col_list.append([['bb_upper_{}'.format(tf2), 'bb_lower_{}'.format(tf2)], 1, '#e91e63', 4])\n","\n","# ------ ema ------ #\n","# step_col_list.append([['ema_5T'], 1, '#03ed30', 2])\n","\n","# ------------ stepmark_col_list - add info(col, alpha, color, linewidth) ------------ #\n","# stepmark_col_list.append([['sar_T'], 1, 'dodgerblue', 7])\n","\n","\n","# ------ str to numbcol ------ #\n","nonstep_col_arr = strcol_tonumb(res_df, nonstep_col_list)\n","step_col_arr = strcol_tonumb(res_df, step_col_list)\n","stepmark_col_arr = strcol_tonumb(res_df, stepmark_col_list)\n","\n","col_idx_dict = \\\n","{\n","  \"ohlc_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close']),\n","  \"vp_col_idxs\": get_col_idxs(res_df, ['close', 'volume']),\n","  # \"ohlc_col_idxs\": get_col_idxs(res_df, ['haopen', 'hahigh', 'halow', 'haclose']),  # heikin-ashi ver.\n","  \"nonstep_col_info\": nonstep_col_arr,\n","  \"step_col_info\": step_col_arr,\n","  \"stepmark_col_info\": stepmark_col_arr,\n","  \"ylim_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close', 'short_wave_1_{}'.format(s_id), 'short_wave_0_{}'.format(s_id),\n","    'long_wave_1_{}'.format(s_id), 'long_wave_0_{}'.format(s_id), 'dc_upper_15T4', 'dc_lower_15T4'])  # , 'dc_upper_H', 'dc_lower_H', 'dc_upper_15T', 'dc_lower_15T', 'short_out_{}'.format(selection_id), 'long_out_{}'.format(selection_id)\n","}   # , 'wave_1_{}'.format(wave_tf2), 'wave_0_{}'.format(wave_tf2), 'dc_upper_15T', 'dc_lower_15T'"]},{"cell_type":"markdown","metadata":{"id":"E-VwJkNQbGI4"},"source":["### plot"]},{"cell_type":"code","execution_count":61,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Roy40BmByyZc","outputId":"7bc57609-54e9-41b9-d588-d75f2f8b7571","executionInfo":{"status":"error","timestamp":1650672874346,"user_tz":-540,"elapsed":33735,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-61-eb0ceb931ebc>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v5\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_check_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-61-eb0ceb931ebc>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v5\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_check_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_plot_check.py\u001b[0m in \u001b[0;36mplot_check_v5\u001b[0;34m(data, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir, **col_idx_dict)\u001b[0m\n\u001b[1;32m    350\u001b[0m     \u001b[0;31m# ------ add cols ------ #\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m     \u001b[0;34m[\u001b[0m\u001b[0mnonstep_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'nonstep_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 352\u001b[0;31m     \u001b[0;34m[\u001b[0m\u001b[0mstep_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'step_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    353\u001b[0m     \u001b[0;34m[\u001b[0m\u001b[0mstepmark_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'stepmark_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_plot_check.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m    350\u001b[0m     \u001b[0;31m# ------ add cols ------ #\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    351\u001b[0m     \u001b[0;34m[\u001b[0m\u001b[0mnonstep_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'nonstep_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 352\u001b[0;31m     \u001b[0;34m[\u001b[0m\u001b[0mstep_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'step_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    353\u001b[0m     \u001b[0;34m[\u001b[0m\u001b[0mstepmark_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparams\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'stepmark_col_info'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    354\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_plot_check.py\u001b[0m in \u001b[0;36mstep_col_plot\u001b[0;34m(np_col, alpha, color, linewidth)\u001b[0m\n\u001b[1;32m     22\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mstep_col_plot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_col\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'#ffffff'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlinewidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 24\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_col\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_col\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcolor\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlinewidth\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlinewidth\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"error in step_col_plot :\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mstep\u001b[0;34m(x, y, where, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2887\u001b[0m     return gca().step(\n\u001b[1;32m   2888\u001b[0m         x, y, *args, where=where, **({\"data\": data} if data is not\n\u001b[0;32m-> 2889\u001b[0;31m         None else {}), **kwargs)\n\u001b[0m\u001b[1;32m   2890\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2891\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mstep\u001b[0;34m(self, x, y, where, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2109\u001b[0m         \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_check_in_list\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'pre'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'post'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'mid'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwhere\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2110\u001b[0m         \u001b[0mkwargs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'drawstyle'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'steps-'\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mwhere\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2111\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2112\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2113\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mstaticmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_axes.py\u001b[0m in \u001b[0;36mplot\u001b[0;34m(self, scalex, scaley, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1645\u001b[0m         \"\"\"\n\u001b[1;32m   1646\u001b[0m         \u001b[0mkwargs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcbook\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnormalize_kwargs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmlines\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLine2D\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1647\u001b[0;31m         \u001b[0mlines\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_lines\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1648\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mlines\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1649\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd_line\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    214\u001b[0m                 \u001b[0mthis\u001b[0m \u001b[0;34m+=\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    215\u001b[0m                 \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 216\u001b[0;31m             \u001b[0;32myield\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_plot_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mthis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    217\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    218\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_next_color\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36m_plot_args\u001b[0;34m(self, tup, kwargs)\u001b[0m\n\u001b[1;32m    330\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    331\u001b[0m             \u001b[0mx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_1d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 332\u001b[0;31m             \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_1d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    333\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    334\u001b[0m             \u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindex_of\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtup\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/cbook/__init__.py\u001b[0m in \u001b[0;36m_check_1d\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m   1345\u001b[0m                     \u001b[0;34m\"always\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1346\u001b[0m                     \u001b[0mcategory\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mDeprecationWarning\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1347\u001b[0;31m                     message='Support for multi-dimensional indexing')\n\u001b[0m\u001b[1;32m   1348\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1349\u001b[0m                 \u001b[0mndim\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndim\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/warnings.py\u001b[0m in \u001b[0;36mfilterwarnings\u001b[0;34m(action, message, category, module, lineno, append)\u001b[0m\n\u001b[1;32m    153\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    154\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mmessage\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 155\u001b[0;31m         \u001b[0mmessage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mI\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    156\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    157\u001b[0m         \u001b[0mmessage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/re.py\u001b[0m in \u001b[0;36mcompile\u001b[0;34m(pattern, flags)\u001b[0m\n\u001b[1;32m    234\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    235\u001b[0m     \u001b[0;34m\"Compile a regular expression pattern, returning a Pattern object.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 236\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_compile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    237\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    238\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mpurge\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/re.py\u001b[0m in \u001b[0;36m_compile\u001b[0;34m(pattern, flags)\u001b[0m\n\u001b[1;32m    274\u001b[0m     \u001b[0;31m# internal: compile pattern\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    275\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mRegexFlag\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 276\u001b[0;31m         \u001b[0mflags\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    277\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    278\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0m_cache\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpattern\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/types.py\u001b[0m in \u001b[0;36m__get__\u001b[0;34m(self, instance, ownerclass)\u001b[0m\n\u001b[1;32m    169\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfget\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    170\u001b[0m             \u001b[0;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"unreadable attribute\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 171\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minstance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    172\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    173\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__set__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minstance\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.7/enum.py\u001b[0m in \u001b[0;36mvalue\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    634\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    635\u001b[0m         \u001b[0;34m\"\"\"The value of the Enum member.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 636\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_value_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    637\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    638\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mclassmethod\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["_ = [plot_check_v5(np_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir, **col_idx_dict) for param_zip in zip(np_plot_params, np_plot_params[::-1])]"]},{"cell_type":"markdown","metadata":{"id":"MQ8w8nWVXlGj"},"source":["### plot_funcs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cFt6CeZf4yEk"},"outputs":[],"source":["def plot_check_v5(data, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir=None, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 18))\n","  nrows, ncols = 2, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                         ncols=ncols,\n","                         height_ratios=[3, 1]\n","                         )\n","  for gs_idx, params in enumerate(param_zip):\n","    ax = fig.add_subplot(gs[gs_idx])\n","    iin, iout, pr, ep, tp, entry_idx, exit_idx, open_idx, point1_idx, lvrg, fee, tp_line, out_line, en_tp1, en_out0 = params\n","\n","    # if ep > out_line:  # for tp > ep > out plot_check\n","    #   break\n","\n","    # ------------ add_col section ------------ #\n","    a_data = data[int(iin):int(iout + 1)]\n","    # a_data = data[iin:iout]\n","    # ------ candles ------ #\n","    candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","\n","    # ------ add cols ------ #\n","    [nonstep_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['nonstep_col_info']]\n","    [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","    [stepmark_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['stepmark_col_info']]\n","\n","    # ------ ep, tp + xlim ------ #\n","    try:\n","      eptp_hvline_v5(config, ep, tp, entry_idx, exit_idx, open_idx, point1_idx, tp_line, out_line, en_tp1, en_out0,\n","                    front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, **col_idx_dict)\n","    except Exception as e:\n","      print(\"error in eptp_hvline_v3 :\", e)\n","\n","    #     Todo    #\n","    #     3. outer_price plot 일 경우, gs_idx + nrows 하면 됨\n","\n","    # ------ trade_info ------ #\n","    plt.title(pr_msg.format(entry_idx, exit_idx, pr, lvrg, fee))\n","\n","  if plot_check_dir is None:\n","    plt.show()\n","    print()\n","  else:\n","    fig_name = plot_check_dir + \"/%s.png\" % int(entry_idx)\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","  plt.close()\n","  # print(\"elapsed time :\", time.time() - start_0)\n","\n","  return\n","\n","def eptp_hvline_v5(config, en_p, ex_p, entry_idx, exit_idx, open_idx, point1_idx, tp_line, out_line, en_tp1, en_out0,\n","                   front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, **col_idx_dict):\n","  # ------ get vertical ticks ------ #\n","  entry_tick = int(entry_idx - iin)\n","  exit_tick = entry_tick + int(exit_idx - entry_idx)\n","  open_tick = entry_tick - int(entry_idx - open_idx)\n","  point1_tick = open_tick - int(open_idx - point1_idx)\n","  bias_info_tick = entry_tick + config.tr_set.bias_info_tick\n","\n","  if front_plot == 1:\n","    x_max = open_tick + 20\n","  elif front_plot == 2:\n","    x_max = entry_tick + 20 \n","  elif front_plot == 3:\n","    x_max = exit_tick + 20\n","  elif front_plot == 4:\n","    x_max = bias_info_tick + 20\n","\n","  if (iout - iin) > x_max:\n","    x_margin = x_max * x_margin_mult\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","  x0, x1 = plt.gca().get_xlim()\n","\n","  # ------------ hlines ------------ #\n","  # ------ entry & exit ------ #\n","  en_xmin = entry_tick / x1\n","  ex_xmin = exit_tick / x1\n","  plt.axhline(en_p, x0, en_xmin, linewidth=2, linestyle='--', alpha=1, color='lime')  # en_p line axhline\n","  plt.text(x0, en_p, 'en_p :\\n {:.3f} \\n epg {}'.format(en_p, config.tr_set.ep_gap), ha='right', va='center', fontweight='bold', fontsize=15)  # en_p line label\n","  plt.axhline(ex_p, ex_xmin, 1, linewidth=2, linestyle='--', alpha=1, color='lime')  # ex_p line axhline (signal 도 포괄함, 존재 의미)\n","  plt.text(x1, ex_p, 'ex_p :\\n {}'.format(ex_p), ha='left', va='center', fontweight='bold', fontsize=15)  # ex_p line label\n","\n","  # ------ tpout_line ------ #\n","  plt.axhline(tp_line, 0.05, 1, linewidth=4, linestyle='-', alpha=1, color='#00ff00')  # ep 와 gap 비교 용이하기 위해 ex_xmin -> 0.1 사용\n","  plt.text(x0, tp_line, 'tpg {}'.format(config.tr_set.tp_gap), ha='right', va='center', fontweight='bold', fontsize=15, color='#00ff00')\n","  plt.axhline(out_line, 0.05, 1, linewidth=4, linestyle='-', alpha=1, color='#ff0000')\n","  plt.text(x0, out_line, 'outg {}'.format(config.tr_set.out_gap), ha='right', va='center', fontweight='bold', fontsize=15, color='#ff0000')\n","\n","  # ------ bias_line ------ #\n","  text_x_pos = (x0 + x1) * 0.1\n","  plt.axhline(en_tp1, 0.2, 1, linewidth=4, linestyle='-', alpha=1, color='#ffffff')\n","  plt.text(text_x_pos, en_tp1, ' en_tp1', ha='right', va='bottom', fontweight='bold', fontsize=15)\n","  plt.axhline(en_out0, 0.2, 1, linewidth=4, linestyle='-', alpha=1, color='#ffffff')\n","  plt.text(text_x_pos, en_out0, ' en_out0', ha='right', va='bottom', fontweight='bold', fontsize=15)\n","\n","  # ------ ylim ------ #\n","  if front_plot:\n","    y_lim_data = a_data[:x_max + 1, col_idx_dict['ylim_col_idxs']]  # +1 for including open_tick\n","  else:\n","    y_lim_data = a_data[:, col_idx_dict['ylim_col_idxs']]\n","  \n","  y_min = y_lim_data.min()\n","  y_max = y_lim_data.max()\n","  y_margin = (y_max - y_min) * y_margin_mult\n","  plt.ylim(y_min - y_margin, y_max + y_margin)\n","\n","  # ------------ vline (open_tick, entry_tick, exit_tick) ------------ #\n","  y0, y1 = plt.gca().get_ylim()\n","  l_data = a_data[:exit_tick + 1, col_idx_dict['ohlc_col_idxs'][2]]  # +1 for including exit_tick\n","  point1_ymax, open_ymax, en_ymax, ex_ymax = [(l_data[tick_] - y0) / (y1 - y0) - .01 for tick_ in [point1_tick, open_tick, entry_tick, exit_tick]]  # -.05 for margin\n","  plt.axvline(point1_tick, 0, point1_ymax, alpha=1, linewidth=2, linestyle='--', color='#ff7722')\n","  plt.axvline(open_tick, 0, open_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')  # 추후, tick 별 세부 정의가 달라질 수 있음을 고려해 multi_line 작성 유지\n","  plt.axvline(entry_tick, 0, en_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  plt.axvline(exit_tick, 0, ex_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  plt.axvline(bias_info_tick, alpha=1, linewidth=2, linestyle='-', color='#ffeb3b')\n","\n","  return"]},{"cell_type":"markdown","metadata":{"id":"q3zisNOTw3jM"},"source":["#### legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fUFdJVrsw78h"},"outputs":[],"source":["_ = [plot_check_v4(np_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir, 500, 0.07, 100, **col_idx_dict) for param_zip in zip(np_plot_params, np_plot_params[::-1])]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ESReTMpP7SoO"},"outputs":[],"source":["def plot_check_v4(data, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir=None, vp_range=500, kde_factor=0.05, num_samples=100, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 18))\n","  nrows, ncols = 2, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                         ncols=ncols,\n","                         height_ratios=[3, 1]\n","                         )\n","  for gs_idx, params in enumerate(param_zip):\n","    ax = fig.add_subplot(gs[gs_idx])\n","    iin, iout, pr, ep, tp, entry_idx, exit_idx, open_idx, lvrg, fee, tp_line, out_line, bias_info, bias_thresh = params\n","\n","    # ------------ add_col section ------------ #\n","    iin, iout = int(iin), int(iout)\n","    a_data = data[iin:iout]\n","    # ------ candles ------ #\n","    candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","    \n","    # ------ add cols ------ #\n","    [nonstep_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['nonstep_col_info']]\n","    [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","    [stepmark_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['stepmark_col_info']]\n","\n","    # vp_data = data[iin - vp_range:iin, col_idx_dict['vp_col_idxs']]\n","    # vp_info = [vp_range, vp_data[:, 0], vp_data[:, 1], kde_factor, num_samples]\n","    vp_data = data[iin - vp_range:iin, col_idx_dict['vp_col_idxs']].T\n","    vp_info = [vp_range, *vp_data, kde_factor, num_samples]\n","\n","    # ------ ep, tp + xlim ------ #\n","    eptp_hvline_v4(config, ep, tp, entry_idx, exit_idx, open_idx, tp_line, out_line, bias_info, bias_thresh, \n","                   front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, vp_info, **col_idx_dict)        \n","\n","    #     Todo    #\n","    #     3. outer_price plot 일 경우, gs_idx + nrows 하면 됨\n","\n","    # ------ trade_info ------ #\n","    plt.title(pr_msg.format(entry_idx, exit_idx, pr, lvrg, fee))\n","\n","  if plot_check_dir is None:\n","    plt.show()\n","    print()\n","  else:\n","    fig_name = plot_check_dir +  \"/%s.png\" % int(entry_idx)\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","  plt.close()\n","  # print(\"elapsed time :\", time.time() - start_0)  \n","\n","  return\n","\n","def eptp_hvline_v4(config, en_p, ex_p, entry_idx, exit_idx, open_idx, tp_line, out_line, bias_info, bias_thresh, \n","                   front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, vp_info, **col_idx_dict):\n","  # ------ get vertical ticks ------ #\n","  entry_tick = int(entry_idx - iin)\n","  open_tick = entry_tick - int(entry_idx - open_idx)\n","  exit_tick = entry_tick + int(exit_idx - entry_idx)\n","\n","  if front_plot == 1:\n","    x_max = open_tick\n","  elif front_plot == 2:\n","    x_max = entry_tick\n","  if (iout - iin) > x_max:\n","    x_margin = x_max * x_margin_mult\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","  x0, x1 = plt.gca().get_xlim()\n","  # ------------ hlines ------------ #\n","  # ------ entry & exit ------ #\n","  en_xmin = entry_tick / x1\n","  ex_xmin = exit_tick / x1\n","  plt.axhline(en_p, x0, en_xmin, linewidth=2, linestyle='--', alpha=1, color='lime')  # en_p line axhline\n","  plt.text(x0, en_p, ' en_p :\\n {}'.format(en_p), ha='right', va='center', fontweight='bold')  # en_p line label\n","  plt.axhline(ex_p, ex_xmin, 1, linewidth=2, linestyle='--', alpha=1, color='lime')  # ex_p line axhline (signal 도 포괄함, 존재 의미)\n","  plt.text(x1, ex_p, ' ex_p :\\n {}'.format(ex_p), ha='left', va='center', fontweight='bold')  # ex_p line label\n","\n","  # ------ tpout_line ------ #\n","  plt.axhline(tp_line, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#00ff00')  # ep 와 gap 비교 용이하기 위해 ex_xmin -> 0.1 사용\n","  plt.text(x0, tp_line, ' %s' % config.tr_set.tp_gap, ha='left', va='center', fontweight='bold')\n","  plt.axhline(out_line, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#ff0000')\n","  plt.text(x0, out_line, ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","  # ------ bias_line ------ #\n","  plt.axhline(bias_info, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='dodgerblue')\n","  plt.text(x0, bias_info, ' bias_info', ha='left', va='center', fontweight='bold')\n","  plt.axhline(bias_thresh, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#ff8400')\n","  plt.text(x0, bias_thresh, ' bias_thresh', ha='left', va='center', fontweight='bold')\n","\n","  # ------ volume profile ------ #\n","  vp_range, close, volume, kde_factor, num_samples = vp_info\n","  if iin >= vp_range:\n","    start_0 = time.time()\n","    kde = stats.gaussian_kde(close, weights=volume, bw_method=kde_factor)\n","    kdx = np.linspace(close.min(), close.max(), num_samples)\n","    kdy = kde(kdx)\n","    print(\"kde elapsed_time :\", time.time() - start_0)\n","\n","    kdy_max = kdy.max()\n","    # peaks,_ = signal.find_peaks(kdy)\n","    peaks,_ = signal.find_peaks(kdy, prominence=kdy_max * 0.3)\n","    peak_list = kdx[peaks]   # peak_list\n","    [plt.axhline(peak, linewidth=6, linestyle='-', alpha=1, color='white') for peak in peak_list]\n","    \n","    kdy_ratio = entry_tick / kdy_max # 30 / 0.0001\n","    plt.plot(kdy * kdy_ratio, kdx, color='white')\n","    # plt.plot(pky, pkx, 'bo', color='yellow')\n","\n","  # ------ ylim ------ #\n","  if front_plot:\n","    y_lim_data = a_data[:x_max + 1, col_idx_dict['ylim_col_idxs']]  # +1 for including open_tick\n","  else:\n","    y_lim_data = a_data[:, col_idx_dict['ylim_col_idxs']]\n","  y_min = y_lim_data.min()\n","  y_max = y_lim_data.max()\n","  y_margin = (y_max - y_min) * y_margin_mult\n","  # plt.ylim(y_min - y_margin, y_max + y_margin)\n","\n","  # ------------ vline (open_tick, entry_tick, exit_tick) ------------ #\n","  y0, y1 = plt.gca().get_ylim()\n","  l_data = a_data[:exit_tick + 1, col_idx_dict['ohlc_col_idxs'][2]]  # +1 for including exit_tick\n","  open_ymax, en_ymax, ex_ymax = [(l_data[tick_] - y0) / (y1 - y0) - .01 for tick_ in [open_tick, entry_tick, exit_tick]]  # -.05 for margin\n","  plt.axvline(open_tick, 0, open_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')  # 추후, tick 별 세부 정의가 달라질 수 있음을 고려해 multi_line 작성 유지\n","  plt.axvline(entry_tick, 0, en_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  plt.axvline(exit_tick, 0, ex_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","\n","  return"]},{"cell_type":"markdown","metadata":{"id":"X0FsT-8FZRti"},"source":["### sync_check"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"inQ6f-CDZYkr"},"outputs":[],"source":["save_plot = 0\n","\n","open_idx_range = reversed(range(0, len(res_df), 1000))\n","plot_range = 100\n","\n","x_max = 400\n","\n","inversion = 0\n","hedge = 0\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","\n","\n","h_candle_intv1 = 15\n","h_candle_intv2 = 60\n","if 'hopen_{}'.format(h_candle_intv2) not in res_df.columns:\n","  res_df = h_candle(res_df, h_candle_intv1)\n","  res_df = h_candle(res_df, h_candle_intv2)\n","\n","res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","\n","res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1_{}\".format(strat_version), \"short_tp_gap_{}\".format(strat_version), \"long_tp_1_{}\".format(strat_version), \"long_tp_gap_{}\".format(strat_version)]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1_{}\".format(strat_version), \"short_dtk_gap_{}\".format(strat_version), \"long_dtk_1_{}\".format(strat_version), \"long_dtk_gap_{}\".format(strat_version),\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2_{}'.format(strat_version), 'dc_lower_v2_{}'.format(strat_version)]\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hopen_%s' % h_candle_intv2, 'hclose_%s' % h_candle_intv2]\n","# hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hhigh_%s' % h_candle_intv2, 'hlow_%s' % h_candle_intv2]\n","\n","# --------------------- dc & bb level --------------------- #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","st_list = ['st_base_%s' % hhdc_interval, 'st_upper_%s' % hhdc_interval, 'st_lower_%s' % hhdc_interval]\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","bbwp_list = ['bbwp', 'bbwp_ma']\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_3m', 'sar_5m', 'sar_15m']\n","\n","ma_list = ['ma30_1m', 'ma60_1m']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_5m']\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# -------------- under price phase -------------- #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3']\n","# stoch_list = ['stoch_5m']\n","# fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","# cctbbo_list = ['cctbbo']\n","# emaroc_list = ['ema_roc']\n","rsi_list = ['rsi_%s' % config.loc_set.point.exp_itv] \n","cci_list = ['cci_%s' % config.loc_set.point.exp_itv] \n","\n","\n","# -------------- summation -------------- #\n","# input_colname = ohlc_list + basic_st_list + pline_list + bb_list + hbb_list + sma_list + cb_list + stoch_list + sar_list + dc_list\n","input_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dtk_list + dc_v2_list + rsi_list + ema_list + ma_list + st_list# + cci_list\n","\n","# yrange_colname = ohlc_list + basic_st_list + pline_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","\n","\n","\n","odd_cnt = 0\n","obj_i = -1\n","rev_obj_i = 0\n","\n","#   지금, continue 발생시 true / false idx 가 같이 상승하는 문제\n","\n","# while 1:\n","for open_idx in open_idx_range:\n","\n","  # if obj_i >= len_obj or rev_obj_i >= len_obj:\n","  #   break\n","\n","  # if odd_cnt % 2 == 1 and tf_plot: #  loss plot 을 채워야하는 상황\n","  #   rev_obj_i += 1\n","\n","  # else:\n","  #   obj_i += 1\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","  \n","\n","  odd_cnt += 1\n","\n","  # break\n","\n","  print(\"open_idx :\", open_idx)\n","  \n","  plot_df = res_df.iloc[open_idx - prev_plotsize:open_idx + plot_range + post_plotsize][input_colname]\n","  \n","  odds = 1 if odd_cnt % 2 == 1 else 2\n","  if odds == 1:\n","\n","    plt.style.use('dark_background')\n","\n","    fig = plt.figure(figsize=(26, 18))\n","    \n","    gs = gridspec.GridSpec(nrows=2, # row 몇 개 \n","                        ncols=2, # col 몇 개 \n","                        height_ratios=[3, 1]\n","                        )\n","    \n","  ax = fig.add_subplot(gs[odds - 1])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ---------- h_candle ---------- #\n","  alpha = 1\n","  lw = 1\n","  for cd_i, candle in enumerate(hcandle_list):\n","\n","    if cd_i == 2:\n","      lw = 2      \n","    plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.1\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","  #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  \n","\n","   # --------- ma --------- #\n","  alpha = 1\n","  lw = 2\n","  for ma_i, item in enumerate(ma_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","   # --------- ema --------- #\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(ema_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","    \n","   # --------- st --------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(st_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#00ff00', linewidth=lw)\n","\n","  # ---------------------- dc_v2 ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_v2_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- dc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- hdc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","\n","  # # ---------------------- hhdc ---------------------- #\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","\n","\n","  # # ---------------------- bb ---------------------- #\n","  # alpha = 1\n","  # lw = 1\n","  # for sm_i, item in enumerate(bb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","\n","  # # ---------------------- hbb ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  \n","  # # ---------------------- hhbb ---------------------- #\n","\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  \n","  # ------------------- dtk_line (old, tp_line) ------------------- #\n","  \n","  # alpha = 1\n","  # lw = 2\n","  # rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  \n","  # for rtc_k in rtc_ratio_list:    \n","  #   # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","  # alpha = 1\n","  # lw = 4\n","  # # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  # h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","  # # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  \n","  # for h_rtc_k in h_rtc_ratio_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","  # # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","\n","  # ------------- y lim ------------- #  \n","  y_max = max(np.max(plot_df[yrange_colname]))\n","  y_min = min(np.min(plot_df[yrange_colname]))\n","  # y_max = max(y_max, y_max_)\n","  # y_min = min(y_min, y_min_)\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  #           rsi          #    \n","  plt.subplot(gs[odds + 1])\n","  alpha = 1\n","  for rsi_ in rsi_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(50 + config.loc_set.point.osc_band, linestyle='--')\n","  plt.axhline(50 - config.loc_set.point.osc_band, linestyle='--')\n","  \n","  plt.axvline(prev_plotsize, linestyle='--')\n","  \n","  #           cci          #    \n","  # plt.subplot(gs[odds + 1])\n","  # alpha = 1\n","  # for cci_ in cci_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cci_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axhline(config.loc_set.point.osc_band, linestyle='--')\n","  # plt.axhline(-config.loc_set.point.osc_band, linestyle='--')\n","  \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","\n","\n","  if len(plot_df) > x_max:\n","    x_margin = x_max / 20\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","\n","  if not save_plot:\n","    if odds == 2:\n","      plt.show()\n","      plt.close()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  # plt.close()  \n","  print()\n","\n","  # break\n"]},{"cell_type":"markdown","metadata":{"id":"13a-U32Uy50I"},"source":["### brief np_pr survey"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"L9LdjV2uUWnp"},"outputs":[],"source":["# plot_pr_list[:100]\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"TBE0l6dHRYrE"},"source":["### close & pr comp."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"elapsed":1436,"status":"ok","timestamp":1636355589887,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"-txULkhXRbz5","outputId":"7cda9fc7-4a4e-4c52-ffa3-a974b5f7c66f"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}],"source":["#     chunky survey 필요함    #\n","chunk_size = 50000\n","\n","sync_pr = np.ones(len(res_df))\n","sync_tr = np.zeros(len(res_df))\n","# sync_tr = np.empty(len(res_df))\n","# sync_tr[:] = np.nan\n","\n","max_tr = np.max(tp_ratio_list)\n","min_tr = np.min(tp_ratio_list)\n","\n","for ck_i in range(0, len(res_df), chunk_size):\n","\n","  chunked_df = res_df.iloc[ck_i:ck_i + chunk_size]\n","  # break\n","\n","  for pr_, eptp_idx, tr_ in zip(pr_list[ck_i:ck_i + chunk_size], trade_list[ck_i:ck_i + chunk_size], tp_ratio_list[ck_i:ck_i + chunk_size]):\n","    # print(pr_, eptp_idx)\n","    sync_pr[eptp_idx[-1][0]] = pr_\n","    sync_tr[eptp_idx[-1][0]] = tr_\n","    # break\n","\n","  chunked_pr = sync_pr[ck_i:ck_i + chunk_size]\n","  chunked_tr = sync_tr[ck_i:ck_i + chunk_size]\n","  chunked_tr = np.where(np.isnan(chunked_tr), pd.Series(chunked_tr).shift(1), chunked_tr)\n","\n","  # plt.figure(figsize=(8, 6))\n","\n","  plt.subplot(311)\n","  plt.plot(np.arange(len(chunked_df)), chunked_df['close'])\n","  # plt.show()\n","\n","  plt.subplot(312)\n","  plt.plot(np.cumprod(chunked_pr))\n","  \n","  plt.subplot(313)\n","  plt.plot(chunked_tr)\n","  plt.ylim(min_tr + 0.5 * (max_tr - min_tr), max_tr)\n","  \n","  plt.show()\n","  print()\n"]},{"cell_type":"markdown","metadata":{"id":"Qys2Bw5Ou3u9"},"source":["### plot indi. legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pi5ntOOVu6JT"},"outputs":[],"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  # ---------------------- sar ---------------------- #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cj9X6S1jJjER"},"source":["### plot nontp case"]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## legacy"]},{"cell_type":"markdown","metadata":{"id":"FaRGwR4NEop2"},"source":["### shifting"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a8aYsjEgQnGF"},"outputs":[],"source":["org_res_df = res_df.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":291,"status":"ok","timestamp":1626515312874,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"RF3RM2G2RCb1","outputId":"ba8f6a75-d4df-4f85-cd0f-190935341f7a"},"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272145    0.27005\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...   0.272145    0.27005\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...   0.272523    0.27021\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...   0.272523    0.27021\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...   0.272523    0.27021\n","\n","[5 rows x 37 columns]\n","                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272523    0.27021\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...        NaN        NaN\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...        NaN        NaN\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...        NaN        NaN\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...        NaN        NaN\n","\n","[5 rows x 37 columns]\n"]}],"source":["#         refresh res_df      #\n","res_df = org_res_df.copy()\n","print(org_res_df.tail(5))\n","\n","# break\n","\n","\n","shift_size = -4\n","# shift_size = -1\n","# shift_size = -7\n","# shift_size = +3\n","\n","res_df['min_upper'] = res_df['min_upper'].shift(shift_size)\n","res_df['max_lower'] = res_df['max_lower'].shift(shift_size)\n","res_df['minor_ST1_Trend'] = res_df['minor_ST1_Trend'].shift(shift_size)\n","res_df['minor_ST2_Trend'] = res_df['minor_ST2_Trend'].shift(shift_size)\n","res_df['minor_ST3_Trend'] = res_df['minor_ST3_Trend'].shift(shift_size)\n","res_df['middle_line'] = res_df['middle_line'].shift(shift_size)\n","\n","print(res_df.tail(5))"]},{"cell_type":"markdown","metadata":{"id":"2gxvme1PC6ha"},"source":["### load model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5831,"status":"ok","timestamp":1628862368878,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"dtYdAuSsC72_","outputId":"e8dccc53-aaa7-4bab-ed8d-753f634c08d6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n"]}],"source":["# model_name = 'inner_tick_cnnreg_lscalemm_prefee_gpu_%s_%s_%s_%s_%s.h5'\n","\n","# model = tf.keras.models.load_model(ckpt_path + model_name)\n","\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","\n","model = ResNet50(weights='imagenet', include_top=False)\n","# model.summary()\n"]},{"cell_type":"markdown","metadata":{"id":"5la6usMOFzkX"},"source":["#### gen selected vector"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oQk3-jbKF8FB"},"outputs":[],"source":["def min_max_scale(npy_x):\n","\n","  return (npy_x - np.min(npy_x)) / (np.max(npy_x) - np.min(npy_x))\n","\n","def expand_dims(npy_x):\n","\n","  row, col = npy_x.shape\n","  npy_x2 = np.array(npy_x).reshape(-1, row, col, 1).astype(np.float32)\n","  # input_x = np.array(data_x).reshape(-1, row, col).astype(np.float32)\n","\n","  #     1c to 3c    #\n","  npy_x3 = npy_x2 * np.ones(3, dtype=np.float32)[None, None, None, :]\n","\n","  return npy_x3\n","\n","\n","def vector_dist(f1, f2):\n","  return np.linalg.norm(f1-f2)\n","\n","\n","\n","# ------------------------ params ------------------------  #\n","selected_i = 500\n","input_size = 100\n","\n","\n","\n","#   1. 선택된 인덱스를 입력받았을 때, input generating 형태만 만들어놓고,     #\n","#   1-1. input cols 필요함    #\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","sma_list = ['sma']\n","\n","#     -------------- outer price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","\n","selected_price_colname = basic_list + senkoua_list + senkoub_list + sar_list\n","selected_outprice_colname = [macd_list]\n","\n","\n","#         global scaling for outer price data       #\n","#         1. nan 처리       #\n","\n","# # print((np.isnan(df.values)))\n","# print(\"np.sum(np.isnan(df.values), axis=0) :\", np.sum(np.isnan(df.values), axis=0))\n","\n","# max_nan = np.max(np.sum(np.isnan(df.values), axis=0))\n","# # print(max_nan)\n","\n","# df = df.iloc[max_nan:-max_nan]\n","\n","# total_gdata = []\n","# for g_col in selected_outprice_colname:\n","\n","#   temp_data = min_max_scale(res_df[g_col])\n","#   total_gdata.append(temp_data)\n","\n","\n","\n","#   1-2. cols 에 따른, scaling method 구분함    #\n","onprice_input_x = min_max_scale(res_df[selected_price_colname].iloc[selected_i - input_size:selected_i].values)\n","print(onprice_input_x.shape)\n","\n","\n","#   2. plot_check 에서 본인이 원하는 shape 의 인덱스를 선택   #\n","#   3. vertorize, \n","#   3-1. input generator 를 이용해 entry signal 발생할 때마다 dist 비교 진행    #\n","re_onprice_input_x = expand_dims(onprice_input_x)\n","print(re_onprice_input_x.shape)\n","      \n","# break\n","\n","selected_vector = model.predict(re_onprice_input_x, verbose=1)\n","print(selected_vector.shape)"]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gcpo4MGd9Wm4"},"outputs":[],"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   단리    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"복리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   복리 tr_thresh  #\n","#   1. trade_num 에 영향 받지 않음\n","#   2. loss_gap 에 비례함\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"단리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["Ic1mfmwWCIBu","VdukVo5-Suzj","Bw5JibDKSuzj","Pe0QpnORSuzk","E0n53hflJbnp","MlFkpO1MSuzl","t1E_eAyPSuzm","nUs4fjVHSuzl","WVAKq3i8Suzm","L7l5CTJfSuzn","x_XGJqBi8Jex","epgS5Dksu-HX","x2yj2SwAXDLp","14chOHeXh6JD","1MNVIExLULhJ","EOXQbXixiQcK","c2729DJ6h720","xpyP5t8Ht_pE","mScdfR9hmjVu","xivLUsSGC4VF","EJ4f-3Zf4ImT","_blyFhQJUd5X","8b4SbvPrAPR1","X0FsT-8FZRti","13a-U32Uy50I","TBE0l6dHRYrE","Qys2Bw5Ou3u9","tApzvz_gK9lR","2gxvme1PC6ha","5la6usMOFzkX","OJqkmkpsLCYC"],"name":"stem3_10_vec_backi2(0423_wb).ipynb","toc_visible":true,"provenance":[],"authorship_tag":"ABX9TyOuj816C2lXl7ai2VxwNgeC"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}