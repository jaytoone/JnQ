{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"gpu_ID3_1_backi2_020915_mddmodi.ipynb","provenance":[],"collapsed_sections":["Ic1mfmwWCIBu","AUSBU7T8Suzi","epgS5Dksu-HX","Ci_jUnNTZbm9","xpyP5t8Ht_pE","0Sh8K6feqdxq","dzla8i9_ysmP","8s-501kmmTzO","lyavQyS4maGR","vB76bTHR0xSB","qnAa1VZB0yxc","h7dPEdY08BfT","fVT21YCK8EVc","ZVLPXzWewy0B","BnQeuCSNbwnH","YfykEp-Ww5UE","_imZEsn9lzsS","1jOvmy8ywpE1","hAQHSRuCwol3","t48DbEJ6GboX","Jksv-K3Qwzyp","D0_wUELe8Qqn","m3MbAjTtnqlP","4Uj1fcU-KuL4","5SsSxOEY5p7B","rrIGjmUzqU-D","leSQlImg4_9L","Kd-ua256Zg1B","rLI8unIyroiC","-IbP_Z3Dlwk4","tApzvz_gK9lR","JNQxkb06ZdTe","5z4L3MMYmUI0"],"toc_visible":true,"machine_shape":"hm","authorship_tag":"ABX9TyM8aKTRLMWYAU1LckGRRqKG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MvXlbvcawz8a","executionInfo":{"status":"ok","timestamp":1644462043238,"user_tz":-540,"elapsed":8652,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"933b36d5-9feb-44f9-f6fe-092f75611d85"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)\n","\n","strat_pkg = 'IDE'\n","\n","mpl_finance_path = '/content/drive/My Drive/Colab Notebooks/JnQ/mpl_finance'\n","\n","if mpl_finance_path not in sys.path:\n","\n","  try:\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ')\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/{}'.format(strat_pkg))\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/funcs')\n","    sys.path.insert(0, mpl_finance_path)\n","    \n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","source":["# requirements"],"metadata":{"id":"fPLKjCi40LPC"}},{"cell_type":"code","source":["# !pip install findiff\n","# !pip install wandb\n","# import wandb\n","# wandb.init()\n","# !nvidia-smi  \n","# import platform\n","# platform.platform()\n","\n","from numba import jit, njit #, boolean, float64, float32, int8, int64, vectorize, guvectorize, prange, cuda\n","from numba.core.errors import NumbaWarning, NumbaDeprecationWarning, NumbaPendingDeprecationWarning\n","\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","from tqdm.notebook import tqdm\n","from funcs.funcs_idep import *\n","from funcs.funcs_duration_v2 import *\n","from funcs.funcs_plot_check import *\n","from funcs.funcs_indicator_candlescore_addnb import *\n","from funcs.funcs_duration import *\n","from funcs.funcs_trader import *\n","import logging\n","import importlib\n","\n","import mpl_finance as mf\n","import os\n","import datetime\n","\n","import IPython\n","import IPython.display\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","# import seaborn as sns\n","\n","import pickle\n","import shutil\n","import json\n","from easydict import EasyDict\n","\n","# from trendln import trendln\n","\n","from datetime import datetime\n","import random\n","import time\n","import warnings\n","\n","warnings.simplefilter(\"ignore\", category=RuntimeWarning)\n","warnings.simplefilter('ignore', category=NumbaWarning)\n","warnings.simplefilter('ignore', category=NumbaDeprecationWarning)\n","warnings.simplefilter('ignore', category=NumbaPendingDeprecationWarning)\n","# mpl.rcParams['figure.figsize'] = (8, 6)\n","# mpl.rcParams['axes.grid'] = False\n","\n","np.seterr(invalid=\"ignore\")\n","pd.set_option('mode.chained_assignment',  None)\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"],"metadata":{"id":"qnDIEhN00E87","executionInfo":{"status":"ok","timestamp":1644462057366,"user_tz":-540,"elapsed":10395,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset - with to_htf dataframes"]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## sync_check_make"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QmhLikYlSuzi"},"outputs":[],"source":["def sync_check_make(df):\n","\n","    make_itv_list = ['3T', '5T', '15T', '30T', 'H', '4H', 'D']\n","    offset_list = ['1h', '1h', '1h', '1h', '1h', '1h', '9h']\n","\n","    assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        \n","    htf_df_list = [to_htf(df, itv_=itv_, offset=offset_) for itv_, offset_ in zip(make_itv_list, offset_list)]\n","\n","    df_3T, df_5T, df_15T, df_30T, df_H, df_4H, df_D = htf_df_list\n","\n","    for htf_df in htf_df_list:\n","      print(\"{} -> \".format(pd.infer_freq(htf_df.index)), htf_df.tail(1))\n","\n","    # return\n","\n","    #           supertrend          #\n","    # # print(df.head(100))\n","    # # return\n","    \n","    df = st_price_line(df, df_3T, '3m')\n","    # df = st_price_line(df, df_5T, '5m')\n","    # df = st_price_line(df, df_15T, '15m')\n","    # df = st_price_line(df, df_30T, '30m')\n","    # df = st_price_line(df, df_H, '1h')\n","    # df = st_price_line(df, df_4H, '4h')\n","\n","    print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    # df['rsi_1m'] = rsi(df, 14)    \n","    # df_5T['rsi_5m'] = rsi(df_5T, 14)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['rsi_5m']))\n","    \n","    # print(\"rsi phase done\")\n","\n","\n","    # --------------- cci --------------- #  \n","    # df['cci_1m'] = cci(df, 20)\n","\n","    # print(\"cci phase done\")\n","\n","\n","    # --------------- ema --------------- #      \n","    # df_5T['ema_5m'] = ema(df_5T['close'], 195)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['ema_5m']))\n","    \n","    # print(\"ema phase done\")\n","\n","\n","    # # --------------- dc --------------- #  \n","    # df = dc_line(df, None, '1m', dc_period=20)\n","    # df = dc_line(df, df_3T, '3m', dc_period=20)\n","    # df = dc_line(df, df_5T, '5m', dc_period=20)\n","    # df = dc_line(df, df_15T, '15m', dc_period=20)\n","    # df = dc_line(df, df_30T, '30m', dc_period=20)\n","    # df = dc_line(df, df_H, '1h', dc_period=20)\n","    # df = dc_line(df, df_4H, '4h', dc_period=20)\n","    # df = dc_line(df, df_D, '1d', dc_period=20)\n","\n","    # print(\"dc phase done\")\n","    \n","    # # --------------- bband --------------- #  \n","    # df = bb_line(df, None, '1m')\n","    # df = bb_line(df, df_3T, '3m')\n","    # df = bb_line(df, df_5T, '5m')\n","    # df = bb_line(df, df_15T, '15m')\n","    # df = bb_line(df, df_30T, '30m')\n","    # df = bb_line(df, df_H, '1h')\n","    # df = bb_line(df, df_4H, '4h')\n","    # df = bb_line(df, df_D, '1d')\n","\n","    # print(\"bband phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # df_3T['cloud_bline_3m'] = cloud_bline(df_3T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_3T, [-1]), columns=['cloud_bline_3m']))\n","    # df_5T['cloud_bline_5m'] = cloud_bline(df_5T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['cloud_bline_5m']))\n","    # df_15T['cloud_bline_15m'] = cloud_bline(df_15T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_15T, [-1]), columns=['cloud_bline_15m']))\n","    # df_30T['cloud_bline_30m'] = cloud_bline(df_30T, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_30T, [-1]), columns=['cloud_bline_30m']))\n","    # df_H['cloud_bline_1h'] = cloud_bline(df_H, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_H, [-1]), columns=['cloud_bline_1h']))\n","    # df_4H['cloud_bline_4h'] = cloud_bline(df_4H, 26)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_4H, [-1]), columns=['cloud_bline_4h']))\n","\n","    # print(\"cbline phase done\")\n","    \n","\n","    #           lucid sar              #\n","    # df['sar_1m'], df['sar_uptrend_1m'] = lucid_sar(df, return_uptrend=True)\n","\n","    # df_3T['sar_3m'], df_3T['sar_uptrend_3m'] = lucid_sar(df_3T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_3T, [-2, -1], backing_i=1), columns=['sar_3m', 'sar_uptrend_3m']))\n","\n","    # df_5T['sar_5m'], df_5T['sar_uptrend_5m'] = lucid_sar(df_5T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-2, -1], backing_i=1), columns=['sar_5m', 'sar_uptrend_5m']))\n","\n","    # df_15T['sar_15m'], df_15T['sar_uptrend_15m'] = lucid_sar(df_15T, af_initial=0.01, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_15T, [-2, -1], backing_i=1), columns=['sar_15m', 'sar_uptrend_15m']))\n","\n","    # df_4H['sar_4h'], df_4H['sar_uptrend_4h'] = lucid_sar(df_4H, return_uptrend=True)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_4H, [-2, -1], backing_i=1), columns=['sar_4h', 'sar_uptrend_4h']))\n","    \n","    # print(\"sar phase done\")\n","\n","    \n","    #           stochastic              #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # df_5T['stoch'] = stoch(df_5T, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat 생각하면, timeindex sync 맞춰야함)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"error","timestamp":1636201718856,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"khKb9nhlSuzj","outputId":"02bf2c60-f298-4fe9-e6bb-78230ac1348c"},"outputs":[{"ename":"NameError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-ee034491b257>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0ma_day\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m3600\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0;36m24\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtqdm\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mkeys\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mfile_list\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'file_list' is not defined"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355,"referenced_widgets":["be2b848dbcb14a079a2b7bd605af6435"]},"id":"VA-_gcA7Suzj","outputId":"f6f3b55d-ec2c-4b2c-d62e-3de7c0384dc4"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"be2b848dbcb14a079a2b7bd605af6435","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/156 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n","DatetimeIndex(['2021-06-28 00:00:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:02:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:04:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:14:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-06-28 00:29:59.999000', '2021-10-10 23:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-09-14 03:59:59.999000', '2021-11-15 14:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","DatetimeIndex(['2021-03-10 20:59:59.999000', '2021-11-15 16:59:59.999000'], dtype='datetime64[ns]', freq=None)\n","\n","xlsx converted to feather !\n"]}],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223,"referenced_widgets":["e3225655da874b8d89cc8b2a381b3fb6"]},"executionInfo":{"elapsed":43664,"status":"ok","timestamp":1638246331122,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"M-gl30KxSuzk","outputId":"1cfcb580-8d25-4bd0-fdd0-213640779ce2"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"e3225655da874b8d89cc8b2a381b3fb6","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/175 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 BCHUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XRPUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 EOSUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LTCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETCUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 LINKUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 XLMUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ADAUSDT_1m.ftr\n","copied to./candlestick_concated/database_bn/non_cum/2021-07-01/2021-07-01 ETHUSDT_1m.ftr\n"]}],"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448,"referenced_widgets":["15a8f265417c47d88bf5b1907353afa8","4f4c5fba8f1d4543a46d6dd7e658b7b3","2d4fae08e5364faf83b0bcdc8e6ece4c","0f94b5763ea344adbb20cf3517a25d2f","e5594180fccb4d2787579ee6034cd6ab","af7a8b3e0365404ea9de8bea08d1a4a6","4f9b787786494e79959bc49b6da4ff4d","06f4ecc65be347ac80deee1965545f27","f8462155d04e4c8da2e4c26f02213bb4","18817cdc20574020976bc2f2c6acc6b2","fefe35e08d734a20aa38986f42f27b13"]},"executionInfo":{"elapsed":239284,"status":"ok","timestamp":1642739615683,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"vgVHpnUsSuzk","outputId":"6224eedf-c127-4d18-f095-3a543cd3f1f8"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"15a8f265417c47d88bf5b1907353afa8","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/7 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["3T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:18:00  3163.02  3164.29  3162.41  3164.28\n","5T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3164.28\n","15T ->                          open     high      low    close\n","index                                                  \n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3164.28\n","30T ->                         open     high      low    close\n","index                                                 \n","2022-01-10 15:00:00  3171.7  3173.11  3156.02  3164.28\n","H ->                         open     high      low    close\n","index                                                 \n","2022-01-10 15:00:00  3171.7  3173.11  3156.02  3164.28\n","4H ->                         open     high      low    close\n","index                                                 \n","2022-01-10 13:00:00  3153.0  3179.16  3149.95  3164.28\n","D ->                          open     high      low    close\n","index                                                  \n","2022-01-10 09:00:00  3149.99  3179.16  3125.88  3164.28\n","supertrend phase done\n","./candlestick_concated/res_df/st3m_backi2/noncat/cum/2022-01-10/2022-01-10 ETHUSDT.ftr saved succesfully !\n"]}],"source":["# db_path = './candlestick_concated/database_ub/' # upbit\n","db_path = './candlestick_concated/database_bn/'   # binance\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","save_dir_path = \"st3m_backi2\"\n","\n","date = '2022-01-10'\n","\n","cum_path = \"cum\"\n","# cum_path = \"non_cum\"  # non_cum 으로 진행하는 경우, row concat 용도이기 때문에 noncat -> concat 으로 변경 (base cols 를 모두 담고 있음)\n","\n","concat_path = 'noncat' # 새로운 cols 를 기존 cum/concat 에 붙이려는 경우\n","# concat_path = 'concat'\n","\n","data_path = os.path.join(db_path, cum_path, date)\n","save_path = os.path.join(save_path, save_dir_path, concat_path, cum_path, date)\n","\n","os.makedirs(save_path, exist_ok=True)\n","\n","file_list = os.listdir(data_path)\n","exist_list = os.listdir(save_path)\n","# break\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    df = pd.read_feather(os.path.join(data_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    res_df = sync_check_make(df)\n","\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_path, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"E0n53hflJbnp"},"source":["### htf candle check"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":489,"status":"ok","timestamp":1642148504926,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6xW0yugCWvGz","outputId":"58106ff9-9709-4a62-bca2-1f6795d13322"},"outputs":[{"name":"stdout","output_type":"stream","text":["itv_ : 3T\n","                        open     high      low    close\n","index                                                  \n","2022-01-10 15:06:00  3169.97  3170.22  3159.51  3161.22\n","2022-01-10 15:09:00  3161.22  3163.98  3161.22  3163.82\n","2022-01-10 15:12:00  3163.82  3163.83  3156.02  3160.49\n","2022-01-10 15:15:00  3160.51  3164.29  3159.01  3162.93\n","2022-01-10 15:18:00  3163.02  3164.29  3162.41  3164.28\n","                            open     high      low    close    volume\n","index                                                                \n","2022-01-10 15:08:59.999  3169.97  3170.22  3159.51  3161.22  4241.449\n","2022-01-10 15:11:59.999  3161.22  3163.98  3161.22  3163.82  1143.874\n","2022-01-10 15:14:59.999  3163.82  3163.83  3156.02  3160.49  2135.292\n","2022-01-10 15:17:59.999  3160.51  3164.29  3159.01  3162.93  1011.598\n","2022-01-10 15:20:59.999  3163.02  3164.29  3162.41  3163.82   466.868\n"]}],"source":["itv_list = ['3T', '5T', '15T', '30T', '1H', '4H']\n","comp_df_list = [second_df, third_df, fourth_df, fifth_df, sixth_df, seventh_df]\n","offset_list = ['1h', '2min', '2min', '2min', '2min', '2min']\n","# itv_list = ['4H']\n","# comp_df_list = [seventh_df]\n","\n","slice_len = 100\n","for itv_, comp_df_, offset in zip(itv_list, comp_df_list, offset_list):\n","\n","  print(\"itv_ :\", itv_)\n","\n","  # df = h_candle_v2(df, '3T')\n","  # end_ts = \n","  h_res_df = df.resample(itv_, offset=offset).agg({\n","          'open': 'first',\n","          'high': 'max',\n","          'low': 'min',\n","          'close': 'last'\n","      })\n","\n","  #   앞은 길이가 다르고, 뒤에서부터 잘라서 비교    #\n","  #   last_row 빼고는 동일, 4h 제외\n","  # print(df.tail())\n","  print(h_res_df.tail())\n","  print(comp_df_.tail())\n","  # # print(h_res_df.head())\n","  # # print(second_df.head())\n","\n","  # print(len(h_res_df))\n","  # print(len(second_df))\n","\n","  # print(h_res_df.values[-slice_len:])\n","  # print(second_df.iloc[:, :4].values[-slice_len:])\n","  # print(np.argwhere(h_res_df.values[-slice_len:] != comp_df_.iloc[:, :4].values[-slice_len:]))\n","  # print()\n","  break"]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U-3QkfbFSuzl"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xyI5NrM7Suzm"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  print(os.path.join(new_save_path, key), \"saved !\")\n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2001,"status":"ok","timestamp":1642739652513,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"6cu-Y82iSuzl","outputId":"273507b8-0d33-48b5-d9c5-00547688ef73"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2022-01-10 ETHUSDT.ftr']\n","./candlestick_concated/res_df/st3m_backi2/concat/cum/2022-01-10/2022-01-10 ETHUSDT.ftr saved !\n"]}],"source":["new_dir_path = \"st3m_backi2\"\n","base_dir_path = \"bb1d_backi2\"\n","\n","# new_date = \"2021-11-17\"\n","new_date = \"2022-01-10\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)   \n","# save_path = os.path.join(save_path, new_dir_path, \"concat/non_cum\", new_date)   # row col 하려면 concat 맞음, noncum 사용\n","os.makedirs(save_path, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat/\", \"noncat/\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  try:\n","\n","    #       read from base postfix's directory    #\n","    base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","    res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    # print(base_df.head())\n","    # print(res_df.head())\n","    # break\n","\n","    new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","    # new_res_df.head()\n","\n","    droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","    # droped_new_res_df.head()\n","    # break\n","\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df\n","    print(os.path.join(save_path, key), \"saved !\")\n","  \n","  except Exception as e:\n","    print(\"error occured ! :\", e)\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4GiF2NJPSuzm"},"outputs":[],"source":["print(*droped_new_res_df.columns, sep = '\\n')"]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat) , database cum 도 호환가능"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24321,"status":"ok","timestamp":1641814155472,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"XG2p9OhhSuzm","outputId":"6073f6c9-5740-4aea-af6f-63c4a0aa371a"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2022-01-10 ETHUSDT_1m.ftr', '2022-01-10 ETHUSDT_3m.ftr', '2022-01-10 ETHUSDT_5m.ftr', '2022-01-10 ETHUSDT_15m.ftr', '2022-01-10 ETHUSDT_30m.ftr', '2022-01-10 ETHUSDT_1h.ftr', '2022-01-10 ETHUSDT_4h.ftr']\n","                            open     high      low    close     volume\n","index                                                                 \n","2020-09-05 00:00:59.999   383.27   383.49   377.23   377.64  24429.574\n","2022-01-10 15:18:59.999  3163.02  3164.29  3162.41  3164.28    320.335\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_1m.ftr saved !\n","                            open     high      low    close    volume\n","index                                                                \n","2020-09-04 00:02:59.999   412.71   412.71   410.00   410.24  7853.327\n","2022-01-10 15:20:59.999  3163.02  3164.29  3162.41  3163.82   466.868\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_3m.ftr saved !\n","                            open     high      low    close     volume\n","index                                                                 \n","2020-09-04 00:04:59.999   412.71   412.71   409.29   409.84  12913.923\n","2022-01-10 15:19:59.999  3160.51  3164.29  3159.01  3162.13   1899.469\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_5m.ftr saved !\n","                            open     high      low    close     volume\n","index                                                                 \n","2020-09-04 00:14:59.999   412.71   412.71   406.60   407.08  56928.476\n","2022-01-10 15:29:59.999  3160.51  3165.25  3159.01  3165.24   2081.916\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_15m.ftr saved !\n","                            open     high      low    close      volume\n","index                                                                  \n","2020-09-04 00:29:59.999   412.71   412.71   401.35   408.05  165686.097\n","2022-01-10 15:29:59.999  3171.70  3173.11  3156.02  3165.88   11066.223\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_30m.ftr saved !\n","                            open     high      low    close      volume\n","index                                                                  \n","2020-09-05 00:59:59.999   383.27   385.84   371.49   384.28  323886.276\n","2022-01-10 15:59:59.999  3171.70  3173.11  3156.02  3166.05   11405.755\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_1h.ftr saved !\n","                            open     high      low    close      volume\n","index                                                                  \n","2020-09-05 04:59:59.999   384.48   392.70   376.26   391.27  559210.014\n","2022-01-10 16:59:59.999  3153.00  3179.16  3149.95  3165.07   79756.184\n","continuity checked !\n","./candlestick_concated/database_bn/cum/2022-01-10/2022-01-10 ETHUSDT_4h.ftr saved !\n"]}],"source":["save_path = './candlestick_concated/res_df/'        # cols 추가된 cum db 에 new_row's cols 기준으로 합치는 경우\n","save_path = './candlestick_concated/database_bn/'   # ohlcv cum db 만들 경우\n","\n","base_date = '2021-11-17'\n","new_date = '2022-01-10'\n","\n","#     load ftr list    #\n","if \"database\" in save_path:\n","  base_dir_path = \"\"\n","  new_dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  base_dir_path = \"sar_backi2\"\n","  new_dir_path = \"bb4h_backi2\"  # dir_path 가 base / new 서로 달라질 수 있어서 분할함\n","  concat_dir = \"concat\"\n","\n","base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"cum\", base_date)      # 기존 cum db 와 new_date db 를 cum 진행\n","# base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"non_cum\", base_date)    # non_cum db 와 new_date db 를 cum 진행\n","\n","# new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"cum\", new_date)      # 상황별로 직접 선택해야할 듯\n","new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"non_cum\", new_date)\n","\n","\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat 두가지 경우 존재가능할 것\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","exist_list = os.listdir(save_path)\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  if key in exist_list:\n","    print(key, \"already exist !\")\n","    continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break  \n","  \n","  print(droped_new_res_df.iloc[[0, -1]])  \n","\n","  # ------------- verify df continuity directly itv by itv ------------- #\n","  if \"_\" in key:\n","\n","    interval = key.split(\".\")[0].split(\"_\")[-1] \n","    itv_num = to_itvnum(interval)\n","\n","    # verified_df = consecutive_df(droped_new_res_df, to_itvnum(interval))\n","    # verified_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df  \n","\n","    np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","    ideal_ts_gap = 60 * itv_num\n","\n","    for ts_i in range(len(np_idx_ts)):\n","      \n","      if ts_i != 0:\n","        ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","        if ts_gap > ideal_ts_gap or ts_gap < ideal_ts_gap:\n","        # if ts_gap == ideal_ts_gap:\n","          print(droped_new_res_df.index[ts_i - 1])\n","          print(droped_new_res_df.index[ts_i])\n","          # print(ts_gap)\n","          print(\"-------------------- unideal ts_gap --------------------\")\n","\n","    print(\"continuity checked !\")\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n"]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["### check continuity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nGzMGyC3Suzn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643987442996,"user_tz":-540,"elapsed":5408,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"4fface63-62d9-4e2a-e22d-bdd26f428e0e"},"outputs":[{"output_type":"stream","name":"stdout","text":["                             open    high       low     close   volume\n","index                                                                 \n","2020-09-14 16:00:59.999    3.2002    4.91    3.2002    3.2745  11567.0\n","2022-02-04 23:57:59.999  103.7500  103.75  103.6000  103.6000   6427.0\n","[1.60009926e+09 1.60009932e+09 1.60009938e+09 1.60009944e+09\n"," 1.60009950e+09 1.60009956e+09 1.60009962e+09 1.60009968e+09\n"," 1.60009974e+09 1.60009980e+09]\n"]}],"source":["# print(droped_new_res_df.columns)\n","\n","print(droped_new_res_df.iloc[[0, -1]])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","\n","      print(\"invalid ts_gap found !\")\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"]},{"cell_type":"markdown","metadata":{"id":"x_XGJqBi8Jex"},"source":["### check length of front missing value + middle_data non_missing validity"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":311,"status":"ok","timestamp":1641887318959,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"yRNwqVeAu8X8","outputId":"fb236bde-4527-4bc7-eac4-4bee42532c5a"},"outputs":[{"name":"stdout","output_type":"stream","text":["2.167361111111111\n","38\n"]}],"source":["#       1. new_date 의 시작 timeidx 와 base_date end timeidx 의 최소 days' gap     #\n","#       2. new_date 의 시작 부분 indi. value 는 np.nan 으로 채워질 거기 때문에 계산해야함    #\n","\n","df_count = droped_new_res_df.count()\n","len_missing = df_count.max() - df_count.min()\n","print(len_missing / 1440)\n","\n","#       3. \n","missing_sliced_df = droped_new_res_df.iloc[len_missing:]\n","df_count2 = missing_sliced_df.count()\n","# print(df_count2)\n","print((df_count2.max() - df_count2.min()))    # this value should be zero !\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AY7E2_hTBsyM"},"outputs":[],"source":["# df_count2.index[df_count2.argmin()]\n","# missing_sliced_df.head(5)\n","\n","stay_missed = np.sum(pd.isnull(missing_sliced_df), axis=0)\n","print(stay_missed)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p9yqewOw9g33"},"outputs":[],"source":["stay_missed_cols = stay_missed[stay_missed != 0].index\n","\n","for sm_col in stay_missed_cols:\n","  \n","  row_idx = np.argwhere(pd.isnull(missing_sliced_df[sm_col].values))\n","\n","  plt.figure(figsize=(3,3))\n","  plt.plot(row_idx)\n","  plt.ylim(0, len(missing_sliced_df))\n","  plt.title(sm_col)\n","\n","  plt.show()\n"]},{"cell_type":"markdown","source":["## legacy"],"metadata":{"id":"MSUY4nnku3s9"}},{"cell_type":"markdown","source":["### mv files"],"metadata":{"id":"epgS5Dksu-HX"}},{"cell_type":"code","source":["df_path = './candlestick_concated/survey_df_v2'\n","files_ = os.listdir(df_path)"],"metadata":{"id":"aJcVpEdrslA5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dirs = [file_ for file_ in files_ if not file_.endswith('.ftr')]\n","files = [file_ for file_ in files_ if file_.endswith('.ftr')]"],"metadata":{"id":"cEKyEYkotFDy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dirs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IgM79tcxtPVZ","executionInfo":{"status":"ok","timestamp":1644111921194,"user_tz":-540,"elapsed":4,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"84305b35-eb52-49fc-d5fd-fdbc64cc8679"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['2022-01-10 ETHUSDT', '2022-01-10 ETHUSDT_all', '2022-02-04 SOLUSDT']"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["def move_fn(dir_, file_):\n","  src_path = os.path.join(df_path, file_)\n","  dst_path = os.path.join(df_path, dir_, file_)\n","  shutil.move(src_path, dst_path)\n","  print(\"moved to {}\".format(dst_path))\n","\n","_ = [move_fn('2022-01-10 ETHUSDT_all', file_) for file_ in files if 'eth'.upper() in file_]\n","# sols\n"],"metadata":{"id":"M767iRtwtRQP"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ci_jUnNTZbm9"},"source":["### load data (old)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22503,"status":"ok","timestamp":1638246127510,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"_bXyS2yrZYC6","outputId":"b24a8a66-48b1-42b5-aa79-63f5a8542bac"},"outputs":[{"name":"stdout","output_type":"stream","text":["['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 LTCUSDT.ftr']\n","['2021-05-30 ETHUSDT.xlsx', '2021-04-30 ETHUSDT.xlsx', '2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 ETHUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-07-03 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-08-31 SUSHIUSDT.xlsx', '2021-08-31 CVCUSDT.xlsx', '2021-08-31 BTSUSDT.xlsx', '2021-08-31 HOTUSDT.xlsx', '2021-08-31 ZRXUSDT.xlsx', '2021-08-31 QTUMUSDT.xlsx', '2021-08-31 IOTAUSDT.xlsx', '2021-08-31 BTCBUSD.xlsx', '2021-08-31 WAVESUSDT.xlsx', '2021-08-31 ADAUSDT.xlsx', '2021-08-31 LITUSDT.xlsx', '2021-08-31 XTZUSDT.xlsx', '2021-08-31 BNBUSDT.xlsx', '2021-08-31 AKROUSDT.xlsx', '2021-08-31 HNTUSDT.xlsx', '2021-08-31 ETCUSDT.xlsx', '2021-08-31 XMRUSDT.xlsx', '2021-08-31 YFIUSDT.xlsx', '2021-08-31 ETHUSDT.xlsx', '2021-08-31 ALICEUSDT.xlsx', '2021-08-31 ALPHAUSDT.xlsx', '2021-08-31 SFPUSDT.xlsx', '2021-08-31 REEFUSDT.xlsx', '2021-08-31 BATUSDT.xlsx', '2021-08-31 DOGEUSDT.xlsx', '2021-08-31 TRXUSDT.xlsx', '2021-08-31 RLCUSDT.xlsx', '2021-08-31 BTCSTUSDT.xlsx', '2021-08-31 STORJUSDT.xlsx', '2021-08-31 SNXUSDT.xlsx', '2021-08-31 XLMUSDT.xlsx', '2021-08-31 NEOUSDT.xlsx', '2021-08-31 UNFIUSDT.xlsx', '2021-08-31 SANDUSDT.xlsx', '2021-08-31 DASHUSDT.xlsx', '2021-08-31 KAVAUSDT.xlsx', '2021-08-31 RUNEUSDT.xlsx', '2021-08-31 CTKUSDT.xlsx', '2021-08-31 LINKUSDT.xlsx', '2021-08-31 CELRUSDT.xlsx', '2021-08-31 RSRUSDT.xlsx', '2021-08-31 DGBUSDT.xlsx', '2021-08-31 SKLUSDT.xlsx', '2021-08-31 RENUSDT.xlsx', '2021-08-31 TOMOUSDT.xlsx', '2021-08-31 MTLUSDT.xlsx', '2021-08-31 LTCUSDT.xlsx', '2021-08-31 DODOUSDT.xlsx', '2021-08-31 EGLDUSDT.xlsx', '2021-08-31 KSMUSDT.xlsx', '2021-08-31 ONTUSDT.xlsx', '2021-08-31 VETUSDT.xlsx', '2021-08-31 TRBUSDT.xlsx', '2021-08-31 MANAUSDT.xlsx', '2021-08-31 COTIUSDT.xlsx', '2021-08-31 CHRUSDT.xlsx', '2021-08-31 ETHUSDT_210924.xlsx', '2021-08-31 BAKEUSDT.xlsx', '2021-08-31 GRTUSDT.xlsx', '2021-08-31 FLMUSDT.xlsx', '2021-08-31 EOSUSDT.xlsx', '2021-08-31 OGNUSDT.xlsx', '2021-08-31 SCUSDT.xlsx', '2021-08-31 BALUSDT.xlsx', '2021-08-31 STMXUSDT.xlsx', '2021-08-31 BTTUSDT.xlsx', '2021-08-31 LUNAUSDT.xlsx', '2021-08-31 DENTUSDT.xlsx', '2021-08-31 KNCUSDT.xlsx', '2021-08-31 SRMUSDT.xlsx', '2021-08-31 ENJUSDT.xlsx', '2021-08-31 ZENUSDT.xlsx', '2021-08-31 ATOMUSDT.xlsx', '2021-08-31 NEARUSDT.xlsx', '2021-08-31 BCHUSDT.xlsx', '2021-08-31 IOSTUSDT.xlsx', '2021-08-31 HBARUSDT.xlsx', '2021-08-31 ZECUSDT.xlsx', '2021-08-31 1000SHIBUSDT.xlsx', '2021-08-31 TLMUSDT.xlsx', '2021-08-31 BZRXUSDT.xlsx', '2021-08-31 ETHBUSD.xlsx', '2021-08-31 AAVEUSDT.xlsx', '2021-08-31 GTCUSDT.xlsx', '2021-08-31 ALGOUSDT.xlsx', '2021-08-31 ICPUSDT.xlsx', '2021-08-31 BTCUSDT_210924.xlsx', '2021-08-31 LRCUSDT.xlsx', '2021-08-31 AVAXUSDT.xlsx', '2021-08-31 MATICUSDT.xlsx', '2021-08-31 1INCHUSDT.xlsx', '2021-08-31 MKRUSDT.xlsx', '2021-08-31 THETAUSDT.xlsx', '2021-08-31 UNIUSDT.xlsx', '2021-08-31 LINAUSDT.xlsx', '2021-08-31 RVNUSDT.xlsx', '2021-08-31 FILUSDT.xlsx', '2021-08-31 NKNUSDT.xlsx', '2021-08-31 DEFIUSDT.xlsx', '2021-08-31 COMPUSDT.xlsx', '2021-08-31 BTCDOMUSDT.xlsx', '2021-08-31 SOLUSDT.xlsx', '2021-08-31 BTCUSDT.xlsx', '2021-08-31 OMGUSDT.xlsx', '2021-08-31 ICXUSDT.xlsx', '2021-08-31 BLZUSDT.xlsx', '2021-08-31 FTMUSDT.xlsx', '2021-08-31 YFIIUSDT.xlsx', '2021-08-31 KEEPUSDT.xlsx', '2021-08-31 BANDUSDT.xlsx', '2021-08-31 XRPUSDT.xlsx', '2021-08-31 SXPUSDT.xlsx', '2021-08-31 CRVUSDT.xlsx', '2021-08-31 BELUSDT.xlsx', '2021-08-31 DOTUSDT.xlsx', '2021-08-31 XEMUSDT.xlsx', '2021-08-31 ONEUSDT.xlsx', '2021-08-31 ZILUSDT.xlsx', '2021-08-31 AXSUSDT.xlsx', '2021-08-31 OCEANUSDT.xlsx', '2021-08-31 CHZUSDT.xlsx', '2021-08-31 ANKRUSDT.xlsx', '2021-08-31 SUSHIUSDT_res_dfs.pkl', '2021-07-01 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr']\n","['2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 EOSUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr']\n","['2021-02-07 BTC.xlsx', '2021-02-07 ETH.xlsx', '2021-02-11 BCHUSDT.xlsx', '2021-02-11 XRPUSDT.xlsx', '2021-02-11 EOSUSDT.xlsx', '2021-02-11 LTCUSDT.xlsx', '2021-02-11 ETCUSDT.xlsx', '2021-02-11 LINKUSDT.xlsx', '2021-02-11 XLMUSDT.xlsx', '2021-02-11 ADAUSDT.xlsx', '2021-02-11 XMRUSDT.xlsx', '2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx', '2021-07-01 BTCUSDT.ftr', '2021-07-01 BCHUSDT.ftr', '2021-07-01 XRPUSDT.ftr', '2021-07-01 EOSUSDT.ftr', '2021-07-01 LTCUSDT.ftr', '2021-07-01 ETCUSDT.ftr', '2021-07-01 LINKUSDT.ftr', '2021-07-01 XLMUSDT.ftr', '2021-07-01 ADAUSDT.ftr', '2021-07-01 ETHUSDT.ftr', '2021-10-10 ETCUSDT.xlsx', '2021-10-10 XLMUSDT.xlsx', '2021-10-10 BCHUSDT.xlsx', '2021-10-10 ADAUSDT.xlsx', '2021-10-10 XRPUSDT.xlsx', '2021-10-10 BTCUSDT.xlsx', '2021-10-10 EOSUSDT.xlsx', '2021-10-10 ETHUSDT.xlsx', '2021-10-10 LTCUSDT.xlsx', '2021-10-10 LINKUSDT.xlsx', '2021-10-10 ETCUSDT.ftr', '2021-10-10 BTCUSDT.ftr', '2021-10-10 ETHUSDT.ftr', '2021-10-10 ADAUSDT.ftr', '2021-10-10 XLMUSDT.ftr', '2021-10-10 LINKUSDT.ftr', '2021-10-10 LTCUSDT.ftr', '2021-10-10 EOSUSDT.ftr', '2021-10-10 XRPUSDT.ftr', '2021-10-10 BCHUSDT.ftr', '2021-11-16 LTCUSDT.ftr', '2021-11-16 LINKUSDT.ftr', '2021-11-16 XLMUSDT.ftr', '2021-11-16 ADAUSDT.ftr', '2021-11-16 ETCUSDT.ftr', '2021-11-16 BTCUSDT.ftr', '2021-11-16 ETHUSDT.ftr', '2021-11-16 XRPUSDT.ftr', '2021-11-16 BCHUSDT.ftr', '2021-11-16 EOSUSDT.ftr']\n","['2021-06-30 SUSHIUSDT.xlsx', '2021-06-30 CVCUSDT.xlsx', '2021-06-30 BTSUSDT.xlsx', '2021-06-30 HOTUSDT.xlsx', '2021-06-30 ZRXUSDT.xlsx', '2021-06-30 QTUMUSDT.xlsx', '2021-06-30 IOTAUSDT.xlsx', '2021-06-30 BTCBUSD.xlsx', '2021-06-30 WAVESUSDT.xlsx', '2021-06-30 ADAUSDT.xlsx', '2021-06-30 LITUSDT.xlsx', '2021-06-30 XTZUSDT.xlsx', '2021-06-30 BNBUSDT.xlsx', '2021-06-30 AKROUSDT.xlsx', '2021-06-30 HNTUSDT.xlsx', '2021-06-30 ETCUSDT.xlsx', '2021-06-30 XMRUSDT.xlsx', '2021-06-30 YFIUSDT.xlsx', '2021-06-30 ETHUSDT.xlsx', '2021-06-30 ALICEUSDT.xlsx', '2021-06-30 ALPHAUSDT.xlsx', '2021-06-30 SFPUSDT.xlsx', '2021-06-30 REEFUSDT.xlsx', '2021-06-30 BATUSDT.xlsx', '2021-06-30 DOGEUSDT.xlsx', '2021-06-30 TRXUSDT.xlsx', '2021-06-30 RLCUSDT.xlsx', '2021-06-30 BTCSTUSDT.xlsx', '2021-06-30 STORJUSDT.xlsx', '2021-06-30 SNXUSDT.xlsx', '2021-06-30 XLMUSDT.xlsx', '2021-06-30 NEOUSDT.xlsx', '2021-06-30 UNFIUSDT.xlsx', '2021-06-30 SANDUSDT.xlsx', '2021-06-30 DASHUSDT.xlsx', '2021-06-30 KAVAUSDT.xlsx', '2021-06-30 RUNEUSDT.xlsx', '2021-06-30 CTKUSDT.xlsx', '2021-06-30 LINKUSDT.xlsx', '2021-06-30 CELRUSDT.xlsx', '2021-06-30 DGBUSDT.xlsx', '2021-06-30 SKLUSDT.xlsx', '2021-06-30 RENUSDT.xlsx', '2021-06-30 TOMOUSDT.xlsx', '2021-06-30 MTLUSDT.xlsx', '2021-06-30 LTCUSDT.xlsx', '2021-06-30 DODOUSDT.xlsx', '2021-06-30 EGLDUSDT.xlsx', '2021-06-30 KSMUSDT.xlsx', '2021-06-30 ONTUSDT.xlsx', '2021-06-30 VETUSDT.xlsx', '2021-06-30 TRBUSDT.xlsx', '2021-06-30 MANAUSDT.xlsx', '2021-06-30 COTIUSDT.xlsx', '2021-06-30 CHRUSDT.xlsx', '2021-06-30 ETHUSDT_210924.xlsx', '2021-06-30 BAKEUSDT.xlsx', '2021-06-30 GRTUSDT.xlsx', '2021-06-30 FLMUSDT.xlsx', '2021-06-30 EOSUSDT.xlsx', '2021-06-30 OGNUSDT.xlsx', '2021-06-30 SCUSDT.xlsx', '2021-06-30 BALUSDT.xlsx', '2021-06-30 STMXUSDT.xlsx', '2021-06-30 BTTUSDT.xlsx', '2021-06-30 LUNAUSDT.xlsx', '2021-06-30 DENTUSDT.xlsx', '2021-06-30 KNCUSDT.xlsx', '2021-06-30 SRMUSDT.xlsx', '2021-06-30 ENJUSDT.xlsx', '2021-06-30 ZENUSDT.xlsx', '2021-06-30 ATOMUSDT.xlsx', '2021-06-30 NEARUSDT.xlsx', '2021-06-30 BCHUSDT.xlsx', '2021-06-30 IOSTUSDT.xlsx', '2021-06-30 HBARUSDT.xlsx', '2021-06-30 ZECUSDT.xlsx', '2021-06-30 1000SHIBUSDT.xlsx', '2021-06-30 BZRXUSDT.xlsx', '2021-06-30 ETHBUSD.xlsx', '2021-06-30 AAVEUSDT.xlsx', '2021-06-30 GTCUSDT.xlsx', '2021-06-30 ALGOUSDT.xlsx', '2021-06-30 ICPUSDT.xlsx', '2021-06-30 BTCUSDT_210924.xlsx', '2021-06-30 LRCUSDT.xlsx', '2021-06-30 AVAXUSDT.xlsx', '2021-06-30 MATICUSDT.xlsx', '2021-06-30 1INCHUSDT.xlsx', '2021-06-30 MKRUSDT.xlsx', '2021-06-30 THETAUSDT.xlsx', '2021-06-30 UNIUSDT.xlsx', '2021-06-30 LINAUSDT.xlsx', '2021-06-30 RVNUSDT.xlsx', '2021-06-30 FILUSDT.xlsx', '2021-06-30 NKNUSDT.xlsx', '2021-06-30 DEFIUSDT.xlsx', '2021-06-30 COMPUSDT.xlsx', '2021-06-30 BTCDOMUSDT.xlsx', '2021-06-30 SOLUSDT.xlsx', '2021-06-30 BTCUSDT.xlsx', '2021-06-30 OMGUSDT.xlsx', '2021-06-30 ICXUSDT.xlsx', '2021-06-30 BLZUSDT.xlsx', '2021-06-30 FTMUSDT.xlsx', '2021-06-30 YFIIUSDT.xlsx', '2021-06-30 KEEPUSDT.xlsx', '2021-06-30 BANDUSDT.xlsx', '2021-06-30 XRPUSDT.xlsx', '2021-06-30 SXPUSDT.xlsx', '2021-06-30 CRVUSDT.xlsx', '2021-06-30 BELUSDT.xlsx', '2021-06-30 DOTUSDT.xlsx', '2021-06-30 XEMUSDT.xlsx', '2021-06-30 ONEUSDT.xlsx', '2021-06-30 ZILUSDT.xlsx', '2021-06-30 AXSUSDT.xlsx', '2021-06-30 OCEANUSDT.xlsx', '2021-06-30 CHZUSDT.xlsx', '2021-06-30 ANKRUSDT.xlsx', '2021-06-30 RSRUSDT.xlsx', '2021-08-29 ETHUSDT.xlsx', '2021-07-01 ETCUSDT.xlsx', '2021-07-01 BTCUSDT.xlsx', '2021-07-01 ETHUSDT.xlsx', '2021-07-01 ADAUSDT.xlsx', '2021-07-01 XLMUSDT.xlsx', '2021-07-01 LINKUSDT.xlsx', '2021-07-01 LTCUSDT.xlsx', '2021-07-01 EOSUSDT.xlsx', '2021-07-01 XRPUSDT.xlsx', '2021-07-01 BCHUSDT.xlsx']\n"]}],"source":["interval = '1m'\n","date_path = './candlestick_concated/%s/quant_v2/' % interval\n","file_list = os.listdir(date_path)\n","print((file_list))\n","\n","interval2 = '3m'\n","date_path2 = './candlestick_concated/%s/quant_v2/' % interval2\n","file_list2 = os.listdir(date_path2)\n","print((file_list2))\n","\n","interval3 = '5m'\n","date_path3 = './candlestick_concated/%s/quant_v2/' % interval3\n","file_list3 = os.listdir(date_path3)\n","print((file_list3))\n","\n","interval4 = '15m'\n","date_path4 = './candlestick_concated/%s/quant_v2/' % interval4\n","file_list4 = os.listdir(date_path4)\n","print((file_list4))\n","\n","interval5 = '30m'\n","date_path5 = './candlestick_concated/%s/quant_v2/' % interval5\n","file_list5 = os.listdir(date_path5)\n","print((file_list5))\n","\n","interval6 = '1h'\n","date_path6 = './candlestick_concated/%s/quant_v2/' % interval6\n","file_list6 = os.listdir(date_path6)\n","print((file_list6))\n","\n","interval7 = '4h'\n","date_path7 = './candlestick_concated/%s/quant_v2/' % interval7\n","file_list7 = os.listdir(date_path7)\n","print((file_list7))\n","\n","interval8 = '1d'\n","date_path8 = './candlestick_concated/%s/quant_v2/' % interval8\n","file_list8 = os.listdir(date_path8)\n","print((file_list8))"]},{"cell_type":"markdown","metadata":{"id":"qNGeuYuGDXfv"},"source":["# pr check with strategy"]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["# hvp platform"]},{"cell_type":"markdown","metadata":{"id":"xpyP5t8Ht_pE"},"source":["## calc recursive indi's min_period"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N1Hbm4OA4Tkk"},"outputs":[],"source":["ticker_prcn = get_precision_by_price(res_df.close.iloc[-1]) + 2\n","\n","target_len = 300000\n","slice_len_list = list(range(50, 10000, 100))\n","slice_len_list.insert(0, target_len)\n","\n","start_0 = time.time()\n","# prev_int_, prev_pnts_ = None, None\n","offset = 1\n","\n","for sl_idx, sample_len in enumerate(slice_len_list):\n","\n","  sample_df = res_df.iloc[-sample_len -offset:-offset]\n","  sample_len2 = sample_len\n","\n","  # --------- input using indi.s --------- #\n","  # res = ema_v0(sample_df['close'], 190)\n","  res = rsi(sample_df, 14)\n","\n","    #    to_htf()    #\n","  # df_5T = to_htf(sample_df, itv_='5T', offset='1h')\n","  # sample_len2 = len(df_5T)\n","\n","  # # --------- input using htf_indi. --------- #\n","  # res = ema(df_5T['close'], 195)\n","  # -------------------------------------- #\n","\n","  res_last_row = res.iloc[-1]\n","  if pd.isnull(res_last_row):\n","    continue\n","\n","  # print(res_last_row)\n","  # break\n","\n","  # sample_df = sample_df.join(to_lower_tf_v2(sample_df, df_5T, [-1]), how='inner')\n","\n","\n","  #   자리수 분할 계산    #\n","  int_, points_ = str(res_last_row).split('.')\n","  pnts_ = points_[:ticker_prcn]\n","\n","  if sl_idx == 0:\n","    target_int_ = int_\n","    target_pnts_ = pnts_\n","    print(\"target {} ({}) -> {} {}\".format(sample_len, sample_len2, int_, points_))\n","\n","  else:\n","    if target_int_ == int_ and target_pnts_ == pnts_:\n","      # print(sample_len, \"({})\".format(sample_len2), '->', int_, pnts_, end='\\n\\n')\n","      print(\"{} ({}) -> {} {}\\n\".format(sample_len, sample_len2, int_, points_))\n","      break\n","\n","print(time.time() - start_0)  # (1301)(1361)(1301)"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1350,"status":"ok","timestamp":1644462059837,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"7FPBG5Qqg2jB","outputId":"3f4380d8-2353-4382-9f43-db36a0a5a68d"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-01-10 ETHUSDT.ftr']\n"]}],"source":["save_path = './candlestick_concated/res_df/'\n","# dir_path = \"bb4h_backi2\"\n","dir_path = \"st3m_backi2\"\n","date = \"2022-01-10\"\n","\n","ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","#     load ftr list    #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)"]},{"cell_type":"code","source":["save_path = './candlestick_concated/database_bn/'\n","date = \"2022-02-04\"\n","\n","ftr_path = os.path.join(save_path, \"non_cum\", date)\n","\n","#     load ftr list    #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, dir_path)) if \"ftr\" in s if date in s]\n","print(ftr_list)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sqHFOKCNRIHP","executionInfo":{"status":"ok","timestamp":1644093823416,"user_tz":-540,"elapsed":1338,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"49c2d9c4-37b8-42ac-db64-c1c1e9271683"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-02-04 SOLUSDT_1m.ftr']\n"]}]},{"cell_type":"code","source":["key = ftr_list[0]\n","res_df = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")"],"metadata":{"id":"ctATndiMGNQa","executionInfo":{"status":"ok","timestamp":1644462062081,"user_tz":-540,"elapsed":2246,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["### oos"],"metadata":{"id":"0Sh8K6feqdxq"}},{"cell_type":"code","source":["len_df = len(res_df)\n","sample_len = int(len_df * 0.7)\n","res_df = res_df.iloc[:sample_len]"],"metadata":{"id":"OUYLQeQaqBxA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["res_df.tail()"],"metadata":{"id":"J3p8r3LVqWiG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wmnyUTS-yjF1"},"source":["## config"]},{"cell_type":"markdown","metadata":{"id":"JjKHyqftzhD7"},"source":["### set config (override available)"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"q_4E-zH02WJy","executionInfo":{"status":"ok","timestamp":1644462062081,"user_tz":-540,"elapsed":4,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"outputs":[],"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = \\\n","{\n","  \"strat_version\": \"3_1\",\n","  \"trader_set\": {\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"last_index\": -2,\n","    \"limit_fee\": 0.0002,\n","    \"market_fee\": 0.0004,\n","    \"initial_asset\": 2600,\n","    \"asset_changed\": 1,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"itv_list\": [\n","      \"1m\",\n","      \"5m\",\n","      \"15m\",\n","      \"30m\",\n","      \"4h\"\n","    ],\n","    \"row_list\": [\n","      200,\n","      160,\n","      30,\n","      25,\n","      25\n","    ],\n","    \"rec_row_list\": [\n","      250,\n","      1100,\n","      1,\n","      1,\n","      1\n","    ],\n","    \"offset_list\": [\n","      \"1h\",\n","      \"1h\",\n","      \"1h\",\n","      \"1h\",\n","      \"1h\"\n","    ],\n","    \"rsi_out_stratver\": [\n","      \"v7_3\",\n","      \"1_1\"\n","    ],\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"api_retry_term\": 3,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"pos_set\": {\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"short_ban\": 0,\n","    \"long_ban\": 0\n","  },\n","  \"loc_set\": {\n","    \"zone\": {\n","      \"short_spread\": \"None\",\n","      \"long_spread\": \"None\",\n","      \"tr_thresh\": \"None\",\n","      \"dtk_dc_itv\": \"None\",\n","      \"dtk_itv\": \"5m\",\n","      \"dt_k\": \"None\",\n","      \"dc_period\": 135,\n","      \"ei_k\": 0,\n","      \"use_dtk_line\": 0,\n","      \"zone_rejection\": 0,      \n","      \"gap_mply\": 1,\n","      \"c_itv_ticks\": 15,\n","      \"front_wick_score0\": \"None\",\n","      \"front_wick_score\": [\"None\", 0],\n","      \"front_sign\": [\"up\", \"up\"],\n","      \"body_score\": [20, 70],\n","      \"body_sign\": [\"down\", \"up\"],\n","      \"back_wick_score\": [\"None\",\"None\"],\n","      \"back_sign\": [\"up\", \"up\"],\n","      \"front_wick_score2\": \"None\",\n","      \"body_score2\": \"None\",\n","      \"back_wick_score2\": \"None\",\n","      \"ad_idx\": 19,\n","      \"degree\": 0.4,\n","      \"bbz_itv\": \"15m\",\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135,\n","      \"dr_error\": 0.1,\n","      \"bbwp_thresh\": 0.5,\n","      \"entry_incycle\": 5,\n","      \"max_eplim_pct\": 0.05,\n","      \"min_eplim_pct\": 0.013\n","    },\n","    \"point\": {\n","      \"exp_itv\": \"3m\",\n","      \"tpg_itv1\": \"5m\",\n","      \"tpg_itv0\": \"5m\",\n","      \"outg_itv1\": \"5m\",\n","      \"outg_itv0\": \"5m\",\n","      \"outg_dc_period\": \"None\",\n","      \"tf_entry\": 15,\n","      \"tf_entry_gap\": \"None\",\n","      \"htf_entry\": 15,\n","      \"osc_band\": 20\n","    },\n","    \"point2\": {\n","      \"ce_gap\": \"None\"\n","    }\n","  },\n","  \"tr_set\": {\n","    \"ep_gap\": 0.0,\n","    \"tp_gap\": 0.0,\n","    \"decay_gap\": \"None\",\n","    \"out_gap\": 0.5,\n","    \"c_ep_gap\": \"None\",\n","    \"t_out_gap\": 0.0\n","  },\n","  \"ep_set\": {\n","    \"short_entry_score\": -2,\n","    \"entry_type\": \"LIMIT\",\n","    \"static_ep\": 1,\n","    \"tpout_onexec\": 0\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"tp_type\": \"MARKET\",\n","    \"static_tp\": 1,\n","    \"decay_term\": 60,\n","    \"time_tp\": 1,\n","    \"partial_num\": 1,\n","    \"partial_qty_divider\": 1.5\n","  },\n","  \"out_set\": {\n","    \"use_out\": 0,\n","    \"out_type\": \"MARKET\",\n","    \"static_out\": 1,\n","    \"hl_out\": 1,\n","    \"price_restoration\": 0,\n","    \"retouch\": 0,\n","    \"retouch_out_period\": 500,\n","    \"second_out\": 0,\n","    \"approval_st_gap\": 1.5,\n","    \"second_out_gap\": 0.5\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 1,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.1,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)\n","# param_json = json.dumps(param_dict, indent=2)"]},{"cell_type":"markdown","metadata":{"id":"dzla8i9_ysmP"},"source":["### save config"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":217},"executionInfo":{"elapsed":5,"status":"error","timestamp":1643172824592,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"FlNGKvW_w2za","outputId":"5f8b4109-ad5d-4e1f-8254-39978d32718d"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-dda97ac9c505>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcfg_full_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'w'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcfg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m     \u001b[0mjson\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdump\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mconfig1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcfg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindent\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"{} dumped !\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcfg_full_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'config1' is not defined"]}],"source":["config_name = \"config_v5_2.1220_candlejson\"\n","# config_name = \"config_v3.json\"\n","cfg_full_path = os.path.join(current_path, \"config\", config_name)\n","\n","\n","with open(cfg_full_path, 'w') as cfg:\n","    json.dump(config1, cfg, indent=2)\n","    print(\"{} dumped !\".format(cfg_full_path))"]},{"cell_type":"markdown","source":["## run - gpu accelerate"],"metadata":{"id":"sOZnxCKq1Zgw"}},{"cell_type":"markdown","source":["### test numba"],"metadata":{"id":"8s-501kmmTzO"}},{"cell_type":"code","source":["strat_version = config.strat_version\n","\n","res_df['entry_{}'.format(strat_version)] = -1\n","\n","def f():\n","\n","  # ------ point_dur ------ #    \n","  entry_1 = torch.from_numpy(res_df['entry_{}'.format(strat_version)].values)\n","  # break\n","  res_df['entry_{}'.format(strat_version)] = torch.where((entry_1 < 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      entry_1 - 1,\n","                                                      entry_1)\n","\n","  # ---------------------------------------- long = 1 ---------------------------------------- #\n","  # ---------------------- ep_time ---------------------- #\n","  #       Todo - orderside should be decided by dur. const_ (time point)  #\n","  # ------ point_dur ------ #    \n","  res_df['entry_{}'.format(strat_version)] = torch.where((entry_1 > 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      entry_1 + 1,\n","                                                      entry_1)\n","\n","%timeit f()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GaoIDTQMj5IH","executionInfo":{"status":"ok","timestamp":1643104457068,"user_tz":-540,"elapsed":15289,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5bd42518-3059-478e-f904-5a98344412d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 5: 2.29 s per loop\n"]}]},{"cell_type":"code","source":["res_df['entry_{}'.format(strat_version)].tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oyHuvgkzlrJ8","executionInfo":{"status":"ok","timestamp":1643103318136,"user_tz":-540,"elapsed":339,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"f00b113a-94b9-4ee3-a5bb-b38ecdb924ae"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index\n","2022-01-10 15:14:59.999   -2\n","2022-01-10 15:15:59.999   -1\n","2022-01-10 15:16:59.999   -1\n","2022-01-10 15:17:59.999   -1\n","2022-01-10 15:18:59.999   -1\n","Name: entry_3_1, dtype: int64"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["res_df['entry_{}'.format(strat_version)] = -1\n","\n","def f():\n","  # ------ point_dur ------ #    \n","  res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)] < 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      res_df['entry_{}'.format(strat_version)] - 1,\n","                                                      res_df['entry_{}'.format(strat_version)])\n","\n","  # ---------------------------------------- long = 1 ---------------------------------------- #\n","  # ---------------------- ep_time ---------------------- #\n","  #       Todo - orderside should be decided by dur. const_ (time point)  #\n","  # ------ point_dur ------ #    \n","  res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)] > 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      res_df['entry_{}'.format(strat_version)] + 1,\n","                                                      res_df['entry_{}'.format(strat_version)])\n","# print(time.time() - start_0)\n","%timeit f()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hW65bwiKjlw4","executionInfo":{"status":"ok","timestamp":1643104900247,"user_tz":-540,"elapsed":2369,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9914c899-cb92-4f45-983d-4f057773bde6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10 loops, best of 5: 31 ms per loop\n"]}]},{"cell_type":"code","source":["res_df['entry_{}'.format(strat_version)] = -1\n","\n","@numba.jit\n","def f():\n","  # ------ point_dur ------ #    \n","  res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)].to_numpy() < 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      res_df['entry_{}'.format(strat_version)].to_numpy() - 1,\n","                                                      res_df['entry_{}'.format(strat_version)].to_numpy())\n","\n","  # ---------------------------------------- long = 1 ---------------------------------------- #\n","  # ---------------------- ep_time ---------------------- #\n","  #       Todo - orderside should be decided by dur. const_ (time point)  #\n","  # ------ point_dur ------ #    \n","  res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)].to_numpy() > 0) &\n","                                                      (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                      res_df['entry_{}'.format(strat_version)].to_numpy() + 1,\n","                                                      res_df['entry_{}'.format(strat_version)].to_numpy())\n","# print(time.time() - start_0)\n","%timeit f()\n"],"metadata":{"id":"FTNFAGQaqZAQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["res_df['entry_{}'.format(strat_version)].tail()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6PhSfdYflwRN","executionInfo":{"status":"ok","timestamp":1643103327909,"user_tz":-540,"elapsed":336,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"8dbf9df0-0d1a-4d2b-9fb4-7778cbe80ce0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["index\n","2022-01-10 15:14:59.999   -2\n","2022-01-10 15:15:59.999   -1\n","2022-01-10 15:16:59.999   -1\n","2022-01-10 15:17:59.999   -1\n","2022-01-10 15:18:59.999   -1\n","Name: entry_3_1, dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["data = pd.DataFrame(range(1_000_000))  # noqa: E225\n","\n","roll = data.rolling(10)\n","\n","def f(x):\n","    return np.sum(x) + 5\n","# Run the first time, compilation time will affect performance\n","%timeit -r 5 -n 1 roll.apply(f, engine='numba', raw=True)\n","# Function is cached and performance will improve\n","%timeit -r 5 -n 1 roll.apply(f, engine='numba', raw=True)\n","# roll.apply(f, engine='numba', raw=True)\n","# %timeit roll.apply(f)\n","\n","# %timeit -r 1 -n 1 roll.apply(f, engine='cython', raw=True)"],"metadata":{"id":"p_HdooAto857"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# res_df['exit_{}'.format(strat_version)] = 0\n","\n","# @numba.jit\n","# def f(entry_np):\n","#   # ------ point_dur ------ #    \n","#   a = np.where((np_timeidx % 15 == 15 - 1), entry_np - 1, entry_np)\n","\n","#   # ---------------------------------------- long = 1 ---------------------------------------- #\n","#   # ---------------------- ep_time ---------------------- #\n","#   #       Todo - orderside should be decided by dur. const_ (time point)  #\n","#   # ------ point_dur ------ #    \n","#   a = np.where((np_timeidx % 15 == 15 - 1), entry_np + 1, entry_np)\n","  \n","# %timeit -n 1 -r 10 f(res_df['exit_{}'.format(strat_version)].to_numpy())\n","# # %timeit -n 1 -r 10 f2(res_df['exit_{}'.format(strat_version)].to_numpy(), config.loc_set.point.tf_entry)\n","# %timeit -n 1 -r 10 f3(res_df['exit_{}'.format(strat_version)].to_numpy())\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LJmuWQfBui44","executionInfo":{"status":"ok","timestamp":1643106350592,"user_tz":-540,"elapsed":854,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"48538abb-7469-4d2b-f139-6b5506b0d816"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 40.42 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 10: 7.49 ms per loop\n","1 loop, best of 10: 21.3 ms per loop\n"]}]},{"cell_type":"code","source":["# res_df['exit_{}'.format(strat_version)] = 0\n","\n","# @numba.jit\n","# def f3(entry_np):\n","#   # ------ point_dur ------ #    \n","#   a = np.where((np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1), entry_np - 1, entry_np)\n","\n","#   # ---------------------------------------- long = 1 ---------------------------------------- #\n","#   # ---------------------- ep_time ---------------------- #\n","#   #       Todo - orderside should be decided by dur. const_ (time point)  #\n","#   # ------ point_dur ------ #    \n","#   a = np.where((np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1), entry_np + 1, entry_np)\n","  \n","# %timeit f3(res_df['exit_{}'.format(strat_version)].to_numpy())\n"],"metadata":{"id":"uGdJljWcvO0F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# res_df.tail()\n","print(res_df.dtypes)\n","# res_df.columns\n","#  1. tensor 로 변환하기 위해서는 사용자가 원하는 cols 의 순서로 재배열 하기 위해서 재정의된 colname 이 필요할 것 / 혹은 필요한 cols 만 호출해서 정의"],"metadata":{"id":"lDPXcicL3KST"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["start_0 = time.time()\n","\n","rsi_1m_np = res_df.rsi_1m.values\n","\n","rsi_1m_tnsr2 = torch.from_numpy(rsi_1m_np)\n","print(type(rsi_1m_tnsr2))\n","print(rsi_1m_tnsr2[:10])\n","\n","print(time.time() - start_0)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TNNLNWE88X-x","executionInfo":{"status":"ok","timestamp":1643102676251,"user_tz":-540,"elapsed":5,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5e2d33ba-8abe-4a2a-cbb4-c51f11760240"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'torch.Tensor'>\n","tensor([    nan,  0.0000,  9.1703, 78.5073, 86.1663, 49.0722, 43.3519, 27.2012,\n","        46.7385, 46.0317], dtype=torch.float64)\n","0.003665447235107422\n"]}]},{"cell_type":"code","source":["# print(rsi_1m_tnsr2[:10] > 50)\n","torch.from_numpy(np.array(res_df.index))"],"metadata":{"id":"EfvfGupNhSuL","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"error","timestamp":1643103037487,"user_tz":-540,"elapsed":326,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"df80b381-3dff-483b-b032-c62566f77196"},"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-6d9dc78374eb>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# print(rsi_1m_tnsr2[:10] > 50)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfrom_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: can't convert np.ndarray of type numpy.datetime64. The only supported types are: float64, float32, float16, complex64, complex128, int64, int32, int16, int8, uint8, and bool."]}]},{"cell_type":"code","source":["# enlist_rtc(res_df, config, np_timeidx) \n","\n","# def get_ep0():\n","\n","#   res_df['short_ep_{}'.format(strat_version)] = res_df.eval(\"close + 'h_short_rtc_gap_{}'.format(strat_version) * config.tr_set.ep_gap\")\n","#   res_df['long_ep_{}'.format(strat_version)] = res_df['close'] - res_df['h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","\n","#   if config.tr_set.c_ep_gap != \"None\":\n","\n","#       res_df['short_ep_org_{}'.format(strat_version)] = res_df['short_ep_{}'.format(strat_version)].copy()\n","#       res_df['long_ep_org_{}'.format(strat_version)] = res_df['long_ep_{}'.format(strat_version)].copy()\n","\n","#       res_df['short_ep2_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] + res_df[\n","#           'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","#       res_df['long_ep2_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df[\n","#           'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","\n","#   #       market ver.     #\n","#   if config.ep_set.entry_type == \"MARKET\":\n","#       res_df['short_ep_{}'.format(strat_version)] = res_df['close']\n","#       res_df['long_ep_{}'.format(strat_version)] = res_df['close']\n","\n","\n","# def get_ep():\n","\n","#   res_df['short_ep_{}'.format(strat_version)] = res_df['close'] + res_df['h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","#   res_df['long_ep_{}'.format(strat_version)] = res_df['close'] - res_df['h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","\n","#   if config.tr_set.c_ep_gap != \"None\":\n","\n","#       res_df['short_ep_org_{}'.format(strat_version)] = res_df['short_ep_{}'.format(strat_version)].copy()\n","#       res_df['long_ep_org_{}'.format(strat_version)] = res_df['long_ep_{}'.format(strat_version)].copy()\n","\n","#       res_df['short_ep2_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] + res_df[\n","#           'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","#       res_df['long_ep2_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df[\n","#           'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","\n","#   #       market ver.     #\n","#   if config.ep_set.entry_type == \"MARKET\":\n","#       res_df['short_ep_{}'.format(strat_version)] = res_df['close']\n","#       res_df['long_ep_{}'.format(strat_version)] = res_df['close']\n","\n","# %timeit -r 10 -n 1 get_ep0()\n","# %timeit -r 10 -n 1 get_ep()"],"metadata":{"id":"xTP-6oVt7ugG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### legacy - fn : entry & exit"],"metadata":{"id":"lyavQyS4maGR"}},{"cell_type":"code","source":["np_timeidx = np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","np_timeidx[:15]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0xjThfkvrJKz","executionInfo":{"status":"ok","timestamp":1643187762390,"user_tz":-540,"elapsed":1165,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"df1bd23a-3855-4f37-8e2f-52d58b033873"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["### legacy - fn : get ep & tp"],"metadata":{"id":"yuWgbPMl1LAE"}},{"cell_type":"markdown","source":["#### ep & tp idx pairing"],"metadata":{"id":"LmlypL43t3PW"}},{"cell_type":"markdown","source":["##### nonba"],"metadata":{"id":"vB76bTHR0xSB"}},{"cell_type":"code","source":["def ep_tp_pairing():\n","  #  get entry & exit idx - strat_version 때문에, 함부로 var_name 못정하고 있는것 -> to_numpy() 사용하는 결과\n","  short_entry_idx = np.argwhere(res_df['short_entry_{}'.format(strat_version)].to_numpy() == -1).reshape(-1, )  #[10:]\n","  long_entry_idx = np.argwhere(res_df['long_entry_{}'.format(strat_version)].to_numpy() == 1).reshape(-1, ) #[10:]\n","\n","  #   exit_idx's first idx should be greater than the entry   #\n","  short_exit_idx = np.argwhere(res_df['short_exit_{}'.format(strat_version)].to_numpy() == -1).reshape(-1, )\n","  short_mod_exit_idx = short_exit_idx[np.sum(short_entry_idx[0] > short_exit_idx):]\n","  long_exit_idx = np.argwhere(res_df['long_exit_{}'.format(strat_version)].to_numpy() == 1).reshape(-1, )\n","  long_mod_exit_idx = long_exit_idx[np.sum(long_entry_idx[0] > long_exit_idx):]\n","\n","  #   slicing for equal length    #\n","  short_min_len = min(len(short_entry_idx), len(short_mod_exit_idx))\n","  long_min_len = min(len(long_entry_idx), len(long_mod_exit_idx))\n","\n","  short_slice_entry_idx = short_entry_idx[:short_min_len]\n","  short_slice_exit_idx = short_exit_idx[:short_min_len]\n","  long_slice_entry_idx = long_entry_idx[:long_min_len]\n","  long_slice_exit_idx = long_exit_idx[:long_min_len]\n","\n","  # print(\"short_entry_idx :\", short_entry_idx)\n","  # print(\"short_mod_exit_idx :\", short_mod_exit_idx)\n","  # print(\"long_entry_idx :\", long_entry_idx)\n","  # print(\"long_mod_exit_idx :\", long_mod_exit_idx)\n","  # print()\n","  # print(\"short_slice_entry_idx :\", short_slice_entry_idx)\n","  # print(\"short_slice_exit_idx :\", short_slice_exit_idx)\n","  # print(\"long_slice_entry_idx :\", long_slice_entry_idx)\n","  # print(\"long_slice_exit_idx :\", long_slice_exit_idx)\n","\n","  return"],"metadata":{"id":"UvbT006btzvQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit ep_tp_pairing()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m5IjZemizdfc","executionInfo":{"status":"ok","timestamp":1643174365329,"user_tz":-540,"elapsed":2472,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9db910cd-e72b-4871-f033-d49cd233a3cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100 loops, best of 5: 3.36 ms per loop\n"]}]},{"cell_type":"markdown","source":["##### numba"],"metadata":{"id":"qnAa1VZB0yxc"}},{"cell_type":"code","source":["s_entry = res_df['short_entry_{}'.format(strat_version)].to_numpy()\n","s_exit = res_df['short_exit_{}'.format(strat_version)].to_numpy()\n","l_entry = res_df['long_entry_{}'.format(strat_version)].to_numpy()\n","l_exit = res_df['long_exit_{}'.format(strat_version)].to_numpy()\n","\n","# %timeit ep_tp_pairing_nb(s_entry, s_exit, l_entry, l_exit)\n","short_slice_entry_idx, short_slice_exit_idx, long_slice_entry_idx, long_slice_exit_idx = ep_tp_pairing_nb(s_entry, s_exit, l_entry, l_exit)"],"metadata":{"id":"dGmyipPFz2LU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### vectorize"],"metadata":{"id":"h7dPEdY08BfT"}},{"cell_type":"code","source":["# ------ 모든 data (cols) 는 1m data 기준으로 serialize 될 것 ------ #\n","\n","# 1. pr = entry idx 의 ep 와 exit idx 의 tp 차이\n","#   a. entry & exit itv 가 규칙적이라면, 아래 phase 가능\n","#   b. 일단, ep 는 entry & exit 의 close 로 설정\n","# 2. entry 를 기준으로 n_ticks 만큼 떨어진 후 exit 하는 logic 으로 가야할 듯 한데 -> 추후 ep_loc 적용시 exit 을 어떤식으로 적용할지 생각이 안남"],"metadata":{"id":"PU32v27W6Po1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#   ep indi. length 는 res_df 와 동일해야함   #\n","close_shift1 = res_df['close'].shift(1)\n","\n","short_ep = close_shift1[short_slice_entry_idx.reshape(-1, )].to_numpy()\n","long_ep = close_shift1[long_slice_entry_idx.reshape(-1, )].to_numpy()\n","\n","close = res_df['close']\n","\n","short_tp = close[short_slice_exit_idx.reshape(-1, )].to_numpy()\n","long_tp = close[long_slice_exit_idx.reshape(-1, )].to_numpy()\n","\n","print(\"short_ep :\", short_ep)\n","print(\"long_ep :\", long_ep)\n","\n","print(\"short_tp :\", short_tp)\n","print(\"long_tp :\", long_tp)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gEWHqDistO66","executionInfo":{"status":"ok","timestamp":1643187776764,"user_tz":-540,"elapsed":2,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"cf8b26aa-49d2-4365-dc1a-9ec95e796a05"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["short_ep : [    nan  375.94  372.81 ... 3175.15 3166.83 3171.71]\n","long_ep : [    nan  375.94  372.81 ... 3175.15 3166.83 3171.71]\n","short_tp : [ 375.94  372.81  375.4  ... 3166.83 3171.71 3160.49]\n","long_tp : [ 375.94  372.81  375.4  ... 3166.83 3171.71 3160.49]\n"]}]},{"cell_type":"code","source":["# res_short_ep, res_short_tp, short_entry_idx, short_exit_idx = remove_nan_nb(short_ep, short_tp, short_slice_entry_idx, short_slice_exit_idx)\n","# res_long_ep, res_long_tp, long_entry_idx, long_exit_idx = remove_nan_nb(long_ep, long_tp, short_slice_entry_idx, short_slice_exit_idx)\n","res_short_ep, res_short_tp, short_entry_idx, short_exit_idx = remove_nan_nb(short_ep, short_tp, short_slice_entry_idx.reshape(-1,), short_slice_exit_idx.reshape(-1,))\n","res_long_ep, res_long_tp, long_entry_idx, long_exit_idx = remove_nan_nb(long_ep, long_tp, short_slice_entry_idx.reshape(-1,), short_slice_exit_idx.reshape(-1,))\n","\n","print(\"res_short_ep :\", res_short_ep)\n","print(\"res_short_tp :\", res_short_tp)\n","print(\"short_entry_idx :\", short_entry_idx)\n","print(\"short_exit_idx :\", short_exit_idx)\n","\n","print(\"res_long_ep :\", res_long_ep)\n","print(\"res_long_tp :\", res_long_tp)\n","print(\"long_entry_idx :\", long_entry_idx)\n","print(\"long_exit_idx :\", long_exit_idx)"],"metadata":{"id":"7Pi7ZOzR_5Rf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### fn : get_pr"],"metadata":{"id":"Z3ZKjW0duM34"}},{"cell_type":"markdown","source":["#### devectorize - use recursive accelerator"],"metadata":{"id":"fVT21YCK8EVc"}},{"cell_type":"code","source":["def get_pr3(entry_np, exit_np, tp, ep, lvrg, fee):\n","\n","    length = len(entry_np)\n","    pr = np.ones(length, dtype=\"float64\")\n","    assert length == len(exit_np)\n","    for i in range(length):   # for ep\n","      if entry_np[i] == 1:\n","        for j in range(i + 1, length):   # for tp\n","          if exit_np[j] == 1:\n","            pr[i] = get_pr_nb(\"BUY\", tp[j], ep[i], lvrg, fee)\n","            break\n","\n","    return pr\n","\n","@numba.jit\n","def get_pr2(entry_np, exit_np, tp, ep, lvrg, fee):\n","\n","    length = len(entry_np)\n","    pr = np.ones(length, dtype=\"float64\")\n","    assert length == len(exit_np)\n","    for i in range(length):   # for ep\n","      if entry_np[i] == 1:\n","        for j in range(i + 1, length):   # for tp\n","          if exit_np[j] == 1:\n","            pr[i] = get_pr_nb(\"BUY\", tp[j], ep[i], lvrg, fee)\n","            break\n","\n","    return pr\n","\n","# %timeit -r 3 -n 1 get_pr2(res_df['long_entry_{}'.format(strat_version)].to_numpy(), res_df['long_exit_{}'.format(strat_version)].to_numpy(), \\\n","#                 res_df['close'].to_numpy(), res_df['close'].to_numpy(), config.lvrg_set.leverage, fee)\n","\n","# %timeit -r 3 -n 1 get_pr3(res_df['long_entry_{}'.format(strat_version)].to_numpy(), res_df['long_exit_{}'.format(strat_version)].to_numpy(), \\\n","#                 res_df['close'].to_numpy(), res_df['close'].to_numpy(), config.lvrg_set.leverage, fee)"],"metadata":{"id":"Riuaowkizcpn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["long_pr2 = get_pr2(res_df['long_entry_{}'.format(strat_version)].to_numpy(), res_df['long_exit_{}'.format(strat_version)].to_numpy(), \\\n","                res_df['close'].to_numpy(), res_df['close'].to_numpy(), config.lvrg_set.leverage, fee)"],"metadata":{"id":"a3dezQmT2Vle"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.sum(long_pr2[long_pr2 !=1] - long_pr[~pd.isnull(long_pr)])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0dDJzml47phl","executionInfo":{"status":"ok","timestamp":1643159467402,"user_tz":-540,"elapsed":317,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"36d4cf84-3e90-4a92-e0bf-222cd6ebe40a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.0"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# print(long_pr2[long_pr2 !=1])\n","\n","plt.plot(np.cumprod(long_pr2)) #[:100])\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"NtC-Njw72Y-4","executionInfo":{"status":"ok","timestamp":1643163633387,"user_tz":-540,"elapsed":1086,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"54299037-af9d-4f50-c520-6aca913855ba"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["#### vectorize (one_line code)"],"metadata":{"id":"Pq2nSH4n2Vik"}},{"cell_type":"markdown","source":["##### run_code"],"metadata":{"id":"_ETrGAm3bywO"}},{"cell_type":"code","source":["class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","np_timeidx = np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","\n","#   본 phase 를 fn 으로 만들려면 return value 를 ep, tp, idx, pr 로 구성해야할 것   #\n","\n","close_shift1 = res_df['close'].shift(1)\n","close = res_df['close']\n","\n","# short_ep, short_tp = close_shift1, close\n","# long_ep, long_tp = close_shift1, close\n","\n","# res_df, short_obj, long_obj = get_exc_info(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx)\n","res_df, short_obj, long_obj = get_exc_info(res_df, config, close_shift1, close, close_shift1, close, np_timeidx)\n","\n","fee = config.trader_set.market_fee + config.trader_set.market_fee\n","print(fee)\n","\n","_, _, short_entry_idx, short_exit_idx = short_obj  # mem 위해서, res_exc_ 선언 제외\n","_, _, long_entry_idx, long_exit_idx = long_obj\n","\n","len_df = len(res_df)\n","# print(input_data.shape[-1])\n","\n","fontsize = 15\n","title_position = (0.5, 0.5)"],"metadata":{"id":"1XnewUc0_04I","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644462070926,"user_tz":-540,"elapsed":5050,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"a3243a3a-dc7e-4c09-f45f-e155d5b4b16b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0008\n"]}]},{"cell_type":"code","source":["# # ------------ pure_pr ------------ #\n","# short_pr = get_pr_nb(OrderSide.SELL, res_exc_short_ep, res_exc_short_tp, config.lvrg_set.leverage, fee)\n","# long_pr = get_pr_nb(OrderSide.BUY, res_exc_long_ep, res_exc_long_tp, config.lvrg_set.leverage, fee)\n","\n","\n","# plt.style.use(['dark_background', 'fast'])\n","# fig = plt.figure(figsize=(16, 8))\n","# gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","#                         ncols=2,  # col 몇 개\n","#                         height_ratios=[10, 1]\n","#                         # height_ratios=[10, 10, 1]\n","#                         )\n","# gs_idx = 0\n","# plt.suptitle(key)\n","\n","# #   현재, np.cumprod 중복 진행됨 -> plot_info, frq_dev_plot_v2    #\n","# gs_idx = plot_info(gs, gs_idx, len_df, short_pr, title_str, config, title_position, fontsize)\n","# gs_idx = plot_info(gs, gs_idx, len_df, long_pr, title_str, config, title_position, fontsize)\n","\n","# gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, short_entry_idx, short_pr, fontsize)\n","# gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, long_entry_idx, long_pr, fontsize)\n","\n","# plt.show()\n"],"metadata":{"id":"tlvxrpKAcXm1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit to_itvnum(h_c_itv)\n","%timeit to_itvnum_nb(h_c_itv)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLEdzXhbtP0L","executionInfo":{"status":"ok","timestamp":1643289967742,"user_tz":-540,"elapsed":2218,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"62ff0839-2084-4cb4-8a2e-99f95ce001f2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 10.76 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1000000 loops, best of 5: 275 ns per loop\n","The slowest run took 62130.72 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 5: 3.55 µs per loop\n"]}]},{"cell_type":"markdown","source":["###### add dur. cols -> utils_public + sync_check 으로 옮길 예정"],"metadata":{"id":"TUPZe_--wwql"}},{"cell_type":"code","source":["%timeit -n 1 -r 50 add_hscores()\n","%timeit -n 1 -r 50 add_hscores_nb()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E0AbVNxv_5Hw","executionInfo":{"status":"ok","timestamp":1643378830034,"user_tz":-540,"elapsed":14080,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"f53521d8-2b27-4111-e83a-9b8f0478f316"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 50: 141 ms per loop\n","1 loop, best of 50: 125 ms per loop\n"]}]},{"cell_type":"code","source":["# ------------------ add dur. cols to res_df ------------------ # --> 추후에 sync_check_make 로 초기에 저장될 것\n","# ------ hcandle_score ------ #  --> future data warning\n","h_c_itv_list = ['15T', 'H', '4H']\n","_ = [h_candle_v2(res_df, h_c_itv) for h_c_itv in h_c_itv_list]\n","\n","res_df = add_hscores_nb(res_df, h_c_itv_list)  \n","res_df = add_hrel_habs(res_df, '15T')"],"metadata":{"id":"XIAx_uBVDu6i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n1 -r5 add_hrel_habs(res_df, '15T')\n","%timeit -n1 -r5 add_hrel_habs_nb(res_df, '15T')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WdyZHWepbo0F","executionInfo":{"status":"ok","timestamp":1643956352554,"user_tz":-540,"elapsed":1909,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"15c195fd-f956-4cb9-caea-44044e6414be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 5: 133 ms per loop\n","1 loop, best of 5: 135 ms per loop\n"]}]},{"cell_type":"code","source":["# #     save added cols .ftr      #\n","# # res_df = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")\n","# res_df.reset_index().to_feather(os.path.join(ftr_path, key), compression='lz4')\n"],"metadata":{"id":"MNka6lnlGLRN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# h_c_itv = '15T'\n","# divider = 10\n","# # res_df[h_ratio_cols(h_c_itv)] = res_df[h_ratio_cols(h_c_itv)] // divider\n","# res_df[h_ratio_cols(h_c_itv)].tail()"],"metadata":{"id":"sF9Wlsjg8HwY"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###### param survey range analyze"],"metadata":{"id":"ZVLPXzWewy0B"}},{"cell_type":"code","source":["# res_df.drop(h_ratio_cols('15T'), axis=1, inplace=True, errors='ignore')\n","res_df.dtypes"],"metadata":{"id":"nUhwEC50THbK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["hist_df = res_df.replace(np.inf, np.nan).copy()\n","\n","fig = plt.figure(figsize = (20,20))\n","ax = fig.gca()\n","hist_df.iloc[ep_loc_row_idx].loc[:, score_cols(h_c_itv) + h_ratio_cols(h_c_itv)].hist(ax = ax)"],"metadata":{"id":"Bheay6WtxaRU","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1643901410921,"user_tz":-540,"elapsed":1932,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"2ad4e208-6e46-48e3-c80d-89c2e965c42b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\n","  \"\"\"\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbf40550>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbe48610>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbe7e110>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbdc1250>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbd89f90>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f05fbdb0350>]],\n","      dtype=object)"]},"metadata":{},"execution_count":84},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x1440 with 6 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["##### legacy"],"metadata":{"id":"BnQeuCSNbwnH"}},{"cell_type":"code","source":["# ------ relative candle_range_ratio ------ #\n","#     1. high - low 의 ratio - norm_period 필요함    #\n","#       a. norm_period 도 hyper param. 임\n","\n","def add_hrel_habs(res_df, h_c_itv, norm_period=120):\n","    norm_cols = ['high', 'low']\n","    rolled_data = res_df[norm_cols].rolling(norm_period)\n","    res_df['norm_range'] = rolled_data.max().max(axis=1) - rolled_data.min().min(axis=1)\n","\n","    res_df['hrange_{}'.format(h_c_itv)] = res_df['hhigh_{}'.format(h_c_itv)] - res_df['hlow_{}'.format(h_c_itv)]\n","    res_df['hrel_ratio_{}'.format(h_c_itv)] = res_df['hrange_{}'.format(h_c_itv)] / res_df['hrange_{}'.format(h_c_itv)].shift(\n","        to_itvnum(h_c_itv)) * 100\n","    res_df['habs_ratio_{}'.format(h_c_itv)] = res_df['hrange_{}'.format(h_c_itv)] / res_df['norm_range'] * 100\n","\n","    return res_df\n","\n","@jit\n","def add_hrel_habs_nb(res_df, h_c_itv, norm_period=120):\n","    norm_cols = ['high', 'low']\n","    rolled_data = res_df[norm_cols].rolling(norm_period)\n","    res_df['norm_range'] = rolled_data.max().max(axis=1) - rolled_data.min().min(axis=1)\n","\n","    res_df['hrange_{}'.format(h_c_itv)] = res_df['hhigh_{}'.format(h_c_itv)] - res_df['hlow_{}'.format(h_c_itv)]\n","    res_df['hrel_ratio_{}'.format(h_c_itv)] = res_df['hrange_{}'.format(h_c_itv)] / res_df['hrange_{}'.format(h_c_itv)].shift(\n","        to_itvnum(h_c_itv)) * 100\n","    res_df['habs_ratio_{}'.format(h_c_itv)] = res_df['hrange_{}'.format(h_c_itv)] / res_df['norm_range'] * 100\n","\n","    return res_df\n"],"metadata":{"id":"OjOoVMY0EdSY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# %timeit get_exc_info(res_df, config, close_shift1, close, close_shift1, close, np_timeidx) # 47.8 ms per loop"],"metadata":{"id":"VTeBXf1ropPQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@jit\n","def remove_nan_nb(ep, tp, ep_idx, tp_idx):\n","  ep_invalid_idx = np.argwhere(np.isnan(ep))  #.reshape(-1,)\n","  tp_invalid_idx = np.argwhere(np.isnan(tp))  #.reshape(-1,)\n","  invalid_idx = np.unique(np.concatenate((ep_invalid_idx, tp_invalid_idx), axis=None)) # hstack 으로 통일하려면 ndim = 1\n","  valid_idx = np.delete(np.arange(len(ep)), invalid_idx)\n","  # print(valid_idx)\n","\n","  valid_ep = ep[valid_idx]\n","  valid_tp = tp[valid_idx]\n","  valid_ep_idx = ep_idx[valid_idx]\n","  valid_tp_idx = tp_idx[valid_idx]\n","  # valid_ep, valid_tp, valid_ep_idx, valid_tp_idx = [res_[valid_idx] for res_ in [ep, tp, ep_idx, tp_idx]]\n","\n","  return valid_ep, valid_tp, valid_ep_idx, valid_tp_idx\n","\n","\n","def remove_nan(ep, tp, ep_idx, tp_idx):\n","\n","    # print([np.argwhere(np.isnan(res_)) for res_ in [ep, tp]])\n","    # invalid_idx = np.unique(np.concatenate((np.argwhere(np.isnan(res_)) for res_ in [ep, tp]), axis=None)) # hstack 으로 통일하려면 ndim = 1\n","    invalid_idx = np.unique(np.concatenate([np.argwhere(np.isnan(res_)) for res_ in [ep, tp]], axis=None)) # hstack 으로 통일하려면 ndim = 1\n","    valid_idx = np.delete(np.arange(len(ep)), invalid_idx)\n","  \n","    return [res_[valid_idx] for res_ in [ep, tp, ep_idx, tp_idx]]"],"metadata":{"id":"bqQeXJalVPCC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def get_exc_info_nb(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx):\n","    strat_version = config.strat_version\n","\n","    #   entry & exit init   #\n","    np_zeros = np.zeros(len(res_df)).astype(np.int64)\n","    res_df['short_entry_{}'.format(strat_version)], res_df['long_entry_{}'.format(strat_version)] = entry_nb(np_zeros, np_zeros,\n","                                                                                                             config.loc_set.point.tf_entry,\n","                                                                                                             np_timeidx)\n","    res_df['short_exit_{}'.format(strat_version)], res_df['long_exit_{}'.format(strat_version)] = exit_nb(np_zeros, np_zeros,\n","                                                                                                          config.loc_set.point.tf_entry, np_timeidx)\n","\n","    # print(res_df['short_entry_{}'.format(strat_version)].tail())\n","    # print(res_df['short_exit_{}'.format(strat_version)].tail())\n","\n","    s_entry = res_df['short_entry_{}'.format(strat_version)].to_numpy()\n","    s_exit = res_df['short_exit_{}'.format(strat_version)].to_numpy()\n","    l_entry = res_df['long_entry_{}'.format(strat_version)].to_numpy()\n","    l_exit = res_df['long_exit_{}'.format(strat_version)].to_numpy()\n","\n","    short_slice_entry_idx, short_slice_exit_idx, long_slice_entry_idx, long_slice_exit_idx = ep_tp_pairing_nb(s_entry, s_exit, l_entry, l_exit)\n","\n","    #   ep indi. length 는 res_df 와 동일해야함   #\n","    short_exc_ep = short_ep[short_slice_entry_idx.reshape(-1, )].to_numpy()\n","    long_exc_ep = long_ep[long_slice_entry_idx.reshape(-1, )].to_numpy()\n","\n","    short_exc_tp = short_tp[short_slice_exit_idx.reshape(-1, )].to_numpy()\n","    long_exc_tp = long_tp[long_slice_exit_idx.reshape(-1, )].to_numpy()\n","\n","    short_obj = remove_nan_nb(short_exc_ep, short_exc_tp, short_slice_entry_idx.reshape(-1, ), short_slice_exit_idx.reshape(-1, ))\n","    long_obj = remove_nan_nb(long_exc_ep, long_exc_tp, short_slice_entry_idx.reshape(-1, ), short_slice_exit_idx.reshape(-1, ))\n","\n","    return res_df, short_obj, long_obj"],"metadata":{"id":"HCRa5ZUjY1If"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def get_exc_info(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx):\n","    strat_version = config.strat_version\n","\n","    #   entry & exit init   #\n","    np_zeros = np.zeros(len(res_df)).astype(np.int64)\n","    res_df['short_entry_{}'.format(strat_version)], res_df['long_entry_{}'.format(strat_version)] = entry_nb(np_zeros, np_zeros,\n","                                                                                                             config.loc_set.point.tf_entry,\n","                                                                                                             np_timeidx)\n","    res_df['short_exit_{}'.format(strat_version)], res_df['long_exit_{}'.format(strat_version)] = exit_nb(np_zeros, np_zeros,\n","                                                                                                          config.loc_set.point.tf_entry, np_timeidx)\n","\n","    # print(res_df['short_entry_{}'.format(strat_version)].tail())\n","    # print(res_df['short_exit_{}'.format(strat_version)].tail())\n","\n","    s_entry = res_df['short_entry_{}'.format(strat_version)].to_numpy()\n","    s_exit = res_df['short_exit_{}'.format(strat_version)].to_numpy()\n","    l_entry = res_df['long_entry_{}'.format(strat_version)].to_numpy()\n","    l_exit = res_df['long_exit_{}'.format(strat_version)].to_numpy()\n","\n","    short_slice_entry_idx, short_slice_exit_idx, long_slice_entry_idx, long_slice_exit_idx = ep_tp_pairing_nb(s_entry, s_exit, l_entry, l_exit)\n","\n","    #   ep indi. length 는 res_df 와 동일해야함   #\n","    short_exc_ep = short_ep[short_slice_entry_idx.reshape(-1, )].to_numpy()\n","    long_exc_ep = long_ep[long_slice_entry_idx.reshape(-1, )].to_numpy()\n","\n","    short_exc_tp = short_tp[short_slice_exit_idx.reshape(-1, )].to_numpy()\n","    long_exc_tp = long_tp[long_slice_exit_idx.reshape(-1, )].to_numpy()\n","\n","    short_obj = remove_nan_nb(short_exc_ep, short_exc_tp, short_slice_entry_idx.reshape(-1, ), short_slice_exit_idx.reshape(-1, ))\n","    long_obj = remove_nan_nb(long_exc_ep, long_exc_tp, short_slice_entry_idx.reshape(-1, ), short_slice_exit_idx.reshape(-1, ))\n","\n","    return res_df, short_obj, long_obj"],"metadata":{"id":"I6lreIB-VibI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 50 get_exc_info(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx)\n","# %timeit -n 1 -r 50 get_exc_info_nb(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx)"],"metadata":{"id":"JtjFT8siY5U0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["res_df, short_obj, long_obj = get_exc_info(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx)\n","short_obj"],"metadata":{"id":"Awv6hwF9ac0P"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["res_df, short_obj, long_obj = get_exc_info_nb(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx)\n","short_obj"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P1mSeZasaj-_","executionInfo":{"status":"ok","timestamp":1643284947096,"user_tz":-540,"elapsed":315,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"39a21bdd-5ca0-4d24-a65e-54b3a62a0049"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 375.94,  372.81,  375.4 , ..., 3175.15, 3166.83, 3171.71]),\n"," array([ 372.81,  375.4 ,  384.28, ..., 3166.83, 3171.71, 3160.49]),\n"," array([    15,     30,     45, ..., 709350, 709365, 709380]),\n"," array([    29,     44,     59, ..., 709364, 709379, 709394]))"]},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["# %timeit -n 1 -r 5 fast_candle_game_nb(input_data, 1, 70, 70, fws_gap=10, bs_gap=10)\n","# %timeit -n 1 -r 5 fast_candle_game(input_data, 1, 70, 70, fws_gap=10, bs_gap=10)\n","\n","# print(input_data[-5:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8jmlCKvuIkC","executionInfo":{"status":"ok","timestamp":1643256594943,"user_tz":-540,"elapsed":320,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"1e393c01-2d34-4515-9b88-91c4f2989bd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 5: 504 µs per loop\n","The slowest run took 7.53 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 5: 666 µs per loop\n"]}]},{"cell_type":"code","source":["%timeit -n 1 -r 5 adj_mr_nb(short_obj, short_mr_res_idx)"],"metadata":{"id":"9jJa-KJ26I-x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","@jit  # almost equal\n","def get_res_info_nb(len_df, np_pr):\n","  wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","  sr = sharpe_ratio(np_pr)\n","  total_pr = np.cumprod(np_pr)\n","  sum_pr = get_sum_pr_nb(np_pr)\n","  min_pr = np.min(np_pr)\n","\n","  len_pr = len(np_pr)\n","  assert len_pr != 0\n","  dpf = (len_df / 1440) / len_pr # devision zero warning\n","\n","  acc_mdd = mdd(total_pr)\n","  sum_mdd = mdd(sum_pr)\n","\n","  return len_pr, dpf, wr, sr, total_pr[-1], sum_pr[-1], min_pr, acc_mdd, sum_mdd"],"metadata":{"id":"Gt0awMoCy6Xp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def to_itvnum(interval):\n","\n","    if interval in ['1m', 'T']:\n","        int_minute = 1\n","    elif interval in ['3m', '3T']:\n","        int_minute = 3\n","    elif interval in ['5m', '5T']:\n","        int_minute = 5\n","    elif interval in ['15m', '15T']:\n","        int_minute = 15\n","    elif interval in ['30m', '30T']:\n","        int_minute = 30\n","    elif interval in ['1h', 'H']:\n","        int_minute = 60\n","    elif interval in ['4h', '4H']:\n","        int_minute = 240\n","    else:\n","        print(\"unacceptable interval :\", interval)\n","        return None\n","\n","    return int_minute\n","\n","@jit  \n","def to_itvnum_nb(interval):   # slower\n","\n","    if interval in ['1m', 'T']:\n","        int_minute = 1\n","    elif interval in ['3m', '3T']:\n","        int_minute = 3\n","    elif interval in ['5m', '5T']:\n","        int_minute = 5\n","    elif interval in ['15m', '15T']:\n","        int_minute = 15\n","    elif interval in ['30m', '30T']:\n","        int_minute = 30\n","    elif interval in ['1h', 'H']:\n","        int_minute = 60\n","    elif interval in ['4h', '4H']:\n","        int_minute = 240\n","    else:\n","        print(\"unacceptable interval :\", interval)\n","        return None\n","\n","    return int_minute"],"metadata":{"id":"dbi2iN0wr17b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def whole_max(x):\n","  # return np.max(np.max(x, axis=0), axis=1)\n","  # return np.max(x, axis=0)\n","  return x.max()\n","\n","%timeit -n 1 -r 5 rolled_data.max().max(axis=1)\n","%timeit -n 1 -r 5 rolled_data.apply(whole_max, engine='numba', raw=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yrdvozhDOlPe","executionInfo":{"status":"ok","timestamp":1643332478628,"user_tz":-540,"elapsed":6690,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"1118be73-f1da-4f91-c76b-91603a4553f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 5: 73.3 ms per loop\n","1 loop, best of 5: 1.08 s per loop\n"]}]},{"cell_type":"code","source":["def plot_info(gs, gs_idx, len_df, pr, title_str, config, title_position, fontsize):\n","  try:\n","    plt.subplot(gs[gs_idx])\n","    idep_res_obj = get_res_info_nb(len_df, pr)\n","    plt.plot(idep_res_obj[-2])\n","    plt.plot(idep_res_obj[-1], color='gold')\n","    plt.title(title_str.format(*idep_res_obj[:-2], config.lvrg_set.leverage), position=title_position, fontsize=fontsize)\n","  except Exception as e:\n","    print(\"error in plot_info :\", e)  \n","\n","  return gs_idx + 1"],"metadata":{"id":"evOCrTnFrPOD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","@jit  # almost equal\n","def get_res_info_nb(len_df, np_pr):\n","  wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","  sr = sharpe_ratio(np_pr)\n","  total_pr = np.cumprod(np_pr)\n","  sum_pr = get_sum_pr_nb(np_pr)\n","  min_pr = np.min(np_pr)\n","\n","  len_pr = len(np_pr)\n","  assert len_pr != 0\n","  dpf = (len_df / 1440) / len_pr # devision zero warning\n","\n","  acc_mdd = mdd(total_pr)\n","  sum_mdd = mdd(sum_pr)\n","\n","  return len_pr, dpf, wr, sr, total_pr[-1], sum_pr[-1], min_pr, acc_mdd, sum_mdd, total_pr, sum_pr"],"metadata":{"id":"h_ai-W7gqo7Z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","@jit    # warning - jit cannot be used by outer_scope's idx\n","def adj_mr_nb(obj, mr_res_idx):\n","  # result = np.empty(len(obj))\n","  result = []\n","  for i, ob_ in enumerate(obj):\n","    # result[i] = ob_[mr_res_idx]\n","    result.append(ob_[mr_res_idx])\n","    \n","  return result"],"metadata":{"id":"6ejk640q-nUA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@jit\n","def multi_mr_nb(a, b, c, d, e ,f):  # slower\n","  # ------ res_var. initialize ------ #\n","  mr_cnt = 0\n","  short_mr_res_idx = np.zeros(len(short_entry_idx)).astype(np.int64)\n","  long_mr_res_idx = np.zeros(len(long_entry_idx)).astype(np.int64)\n","\n","  # ------ prev1 bar ------ #\n","  mr_cnt += 1\n","  ep_loc_row_idx = short_entry_idx - 1\n","  ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","  ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","  short_mr_res_idx += fast_candle_game_nb(ep_loc_data, a, b, 10, 10)\n","  long_mr_res_idx += fast_candle_game_nb(ep_loc_data, a, b, 10, 10)\n","\n","  # ------ prev2 bar - ep_loc_data init every mr phase ------ #\n","  mr_cnt += 1\n","  ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","  ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","  ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","  short_mr_res_idx += fast_candle_game_nb(ep_loc_data, c, d, 10, 10)\n","  long_mr_res_idx += fast_candle_game_nb(ep_loc_data, c, d, 10, 10)\n","\n","  # ------ c_ratio ------ #\n","  mr_cnt += 1\n","  ep_loc_row_idx = short_entry_idx - 1\n","  ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","  ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","  short_mr_res_idx += candle_ratio_nb(ep_loc_data, e, f, 10, 10)\n","  long_mr_res_idx += candle_ratio_nb(ep_loc_data, e, f, 10, 10)\n","\n","  # ------------ ------------ ------------ #\n","\n","  #    ep_loc_short_entry_idx 저장 필요해서 함수로 안만들어놓음      #\n","  ep_loc_short_ep, ep_loc_short_tp, ep_loc_short_entry_idx, ep_loc_short_exit_idx = adj_mr_nb(short_obj, short_mr_res_idx == mr_cnt)\n","  ep_loc_long_ep, ep_loc_long_tp, ep_loc_long_entry_idx, ep_loc_long_exit_idx = adj_mr_nb(long_obj, long_mr_res_idx == mr_cnt)\n","\n","  short_pr = get_pr_nb(OrderSide.SELL, ep_loc_short_ep, ep_loc_short_tp, config.lvrg_set.leverage, fee)\n","  long_pr = get_pr_nb(OrderSide.BUY, ep_loc_long_ep, ep_loc_long_tp, config.lvrg_set.leverage, fee)\n","\n","  return short_pr, long_pr"],"metadata":{"id":"DdH0Vk-D-pXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def adj_mr(obj, mr_res_idx):\n","  return [res_[mr_res_idx] for res_ in obj]\n"],"metadata":{"id":"7j23yzdgAUNn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["###### mr_adj pr"],"metadata":{"id":"YfykEp-Ww5UE"}},{"cell_type":"code","source":["# ------------------ mr_adj pr ------------------ #\n","data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함\n","\n","# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))\n","# print(candle_cols_idxs)\n","\n","#   ep_loc_data 생성시 zero index value warning   #\n","# assert short_entry_idx[0] > 0, \"assert short_entry_idx[0] > 0\"\n","\n","# ------------ mr_calc main ------------ #\n","# ------ res_var. initialize ------ #\n","mr_cnt = 0\n","short_mr_res_idx = np.zeros(len(short_entry_idx)).astype(np.int64)\n","long_mr_res_idx = np.zeros(len(long_entry_idx)).astype(np.int64)\n","\n","# ------ prev1 bar ------ #\n","# mr_cnt += 1\n","# ep_loc_row_idx = short_entry_idx - 1\n","# ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","# ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","# short_mr_res_idx += fast_candle_game_nb(ep_loc_data, -50, 30, 10, 10)\n","# long_mr_res_idx += fast_candle_game_nb(ep_loc_data, -50, 30, 10, 10)\n","\n","# # ------ prev2 bar - ep_loc_data init every mr phase ------ #\n","# mr_cnt += 1\n","# ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","# ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","# ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","# short_mr_res_idx += fast_candle_game_nb(ep_loc_data, -50, 30, 10, 10)\n","# long_mr_res_idx += fast_candle_game_nb(ep_loc_data, -50, 30, 10, 10)\n","\n","# ------ c_ratio ------ #\n","mr_cnt += 1\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","short_mr_res_idx += candle_ratio_nb(ep_loc_data, 50, 30, 10, 10)\n","long_mr_res_idx += candle_ratio_nb(ep_loc_data, 50, 30, 10, 10)\n","\n","# ------------ ------------ ------------ #\n","\n","#    ep_loc_short_entry_idx 저장 필요해서 함수로 안만들어놓음      #\n","ep_loc_short_ep, ep_loc_short_tp, ep_loc_short_entry_idx, ep_loc_short_exit_idx = adj_mr(short_obj, short_mr_res_idx == mr_cnt)\n","ep_loc_long_ep, ep_loc_long_tp, ep_loc_long_entry_idx, ep_loc_long_exit_idx = adj_mr(long_obj, long_mr_res_idx == mr_cnt)\n","\n","short_pr = get_pr_nb(OrderSide.SELL, ep_loc_short_ep, ep_loc_short_tp, config.lvrg_set.leverage, fee)\n","long_pr = get_pr_nb(OrderSide.BUY, ep_loc_long_ep, ep_loc_long_tp, config.lvrg_set.leverage, fee)\n","\n","\n","plt.style.use(['dark_background', 'fast'])\n","\n","fig = plt.figure(figsize=(24, 16))\n","gs = gridspec.GridSpec(nrows=3,  # row 몇 개\n","                        ncols=3,  # col 몇 개\n","                        height_ratios=[10, 10, 1]\n","                        )\n","gs_idx = 0\n","plt.suptitle(key)\n","\n","gs_idx = plot_info(gs, gs_idx, len_df, short_pr, title_str, config, title_position, fontsize)\n","gs_idx = plot_info(gs, gs_idx, len_df, long_pr, title_str, config, title_position, fontsize)\n","\n","\n","plt.show()"],"metadata":{"id":"Lh-BPMAqGr2h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# assert ep_loc_row_idx[0] >= 0, \"assert ep_loc_row_idx[0] >= 0\" \n","# assert np.sum(np.isnan(ep_loc_data[0])) == 0, \"np.sum(np.isnan(ep_loc_data[0])) == 0\""],"metadata":{"id":"ExcMgPLvwCLe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#   필요한 res_data = p_pr, frq_dev, liqd"],"metadata":{"id":"qKoMxDbDfVcQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# np.random.randint(10000)\n","def get_period_pr(len_df, pr_):\n","    a_day = len_df / 1440\n","    a_month = a_day / 30\n","    a_year = a_day / 365\n","\n","    # periodic_pr_list = [pr_ ** (1 / period) for period in [a_day, a_month, a_year]]\n","\n","    return [pr_ ** (1 / period) for period in [a_day, a_month, a_year]]\n","\n","get_period_pr(len_df, np.cumprod(short_pr)[-1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pV1cECWGOtrL","executionInfo":{"status":"ok","timestamp":1643373927694,"user_tz":-540,"elapsed":412,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"aece23d8-d98d-4407-e7a0-189065af7317"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[0.8621679095480562, 0.011688414997676252, 3.0976100495217585e-24]"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["def frq_dev_plot_v2(gs, gs_idx, len_df, entry_idx, pr, fontsize):\n","    plt.subplot(gs[gs_idx])\n","    frq_dev = np.zeros(len_df)\n","    frq_dev[entry_idx] = 1 \n","    plt.plot(frq_dev)\n","\n","    acc_pr = np.cumprod(pr)[-1]\n","    title_msg = \"periodic_pr\\n acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\" #\\n rev_acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\"\n","    plt.title(title_msg.format(*get_period_pr(len_df, acc_pr), fontsize=fontsize))\n","\n","    return gs_idx + 1"],"metadata":{"id":"RRxJ0nuDMpYQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","@jit(nopython=True)\n","def ep_tp_pairing_nb(s_entry, s_exit, l_entry, l_exit):\n","  #  get entry & exit idx - strat_version 때문에, 함부로 var_name 못정하고 있는것 -> to_numpy() 사용하는 결과\n","  #   exit_idx's first idx should be greater than the entry   #\n","\n","  short_entry_idx = np.argwhere(s_entry == -1)  #[10:]\n","  short_exit_idx = np.argwhere(s_exit == -1)\n","  short_mod_exit_idx = short_exit_idx[np.sum(short_entry_idx[0] > short_exit_idx):]\n","\n","  long_entry_idx = np.argwhere(l_entry == 1) #[10:]\n","  long_exit_idx = np.argwhere(l_exit == 1)\n","  long_mod_exit_idx = long_exit_idx[np.sum(long_entry_idx[0] > long_exit_idx):]\n","\n","  #   slicing for equal length    #\n","  short_min_len = min(len(short_entry_idx), len(short_mod_exit_idx))\n","  long_min_len = min(len(long_entry_idx), len(long_mod_exit_idx))\n","\n","  # print(\"short_entry_idx :\", short_entry_idx)\n","  # print(\"short_mod_exit_idx :\", short_mod_exit_idx)\n","  # print(\"long_entry_idx :\", long_entry_idx)\n","  # print(\"long_mod_exit_idx :\", long_mod_exit_idx)\n","  # print()\n","  # print(\"short_slice_entry_idx :\", short_slice_entry_idx)\n","  # print(\"short_slice_exit_idx :\", short_slice_exit_idx)\n","  # print(\"long_slice_entry_idx :\", long_slice_entry_idx)\n","  # print(\"long_slice_exit_idx :\", long_slice_exit_idx)\n","\n","  return short_entry_idx[:short_min_len], short_mod_exit_idx[:short_min_len], long_entry_idx[:long_min_len], long_mod_exit_idx[:long_min_len]"],"metadata":{"id":"mQQLZL6n7FGI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 100 get_exc_info(res_df, config, short_ep, short_tp, long_ep, long_tp, np_timeidx) #41.8 ms per loop | nopython - 41.7 ms per loop\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZJRWwuPI7Hqx","executionInfo":{"status":"ok","timestamp":1643377676673,"user_tz":-540,"elapsed":4543,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"cc93f08d-5b71-4982-9fe8-4299ddf87a35"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 100: 41 ms per loop\n"]}]},{"cell_type":"code","source":["def get_np_timeidx():\n","  return np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","\n","@jit\n","def get_np_timeidx_nb():\n","  return np.array([intmin_np_nb(date_) for date_ in res_df.index.to_numpy()])\n","\n","@jit\n","def intmin_np_nb(date):\n","    date = str(date)\n","    date = date.split('T')\n","    min = int(date[1].split(':')[1])  # 분\n","    return min"],"metadata":{"id":"jD1dDQO9817j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit get_np_timeidx()\n","%timeit get_np_timeidx_nb()"],"metadata":{"id":"BucRmbwZ8_ks"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["get_np_timeidx_nb()\n","get_np_timeidx()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YWiLMMAy9LAw","executionInfo":{"status":"ok","timestamp":1643377915602,"user_tz":-540,"elapsed":2477,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"1f1ccec3-e135-4272-bab0-9324112b524f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  2, ..., 16, 17, 18])"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","source":["def candle_score(res_df, ohlc_col=None):\n","\n","    if ohlc_col is None:\n","        ohlc_col = [\"open\", \"high\", \"low\", \"close\"]\n","\n","    ohlcs = res_df[ohlc_col]\n","    o, h, l, c = np.split(ohlcs.values, 4, axis=1)\n","\n","    return get_candle_score_nb(o, h, l, c)\n","\n","\n","@jit\n","def candle_score_nb(ohlc_data):\n","    o, h, l, c = np.split(ohlc_data, 4, axis=1)\n","    \n","    return get_candle_score_nb(o, h, l, c)"],"metadata":{"id":"74pPNyNO9_i9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit candle_score(res_df, ohlc_col=h_candle_cols('15T'))\n","%timeit candle_score_nb(res_df[h_candle_cols('15T')].to_numpy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lvkoRI2g-FZP","executionInfo":{"status":"ok","timestamp":1643378348868,"user_tz":-540,"elapsed":5758,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"16ca31e5-e915-4a2a-e0b2-2b37c8c59e09"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10 loops, best of 5: 43.7 ms per loop\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-98-ba04accdc205>:12: NumbaWarning: \n","Compilation is falling back to object mode WITH looplifting enabled because Function \"candle_score_nb\" failed type inference due to: Use of unsupported NumPy function 'numpy.split' or unsupported use of the function.\n","\n","File \"<ipython-input-98-ba04accdc205>\", line 15:\n","def candle_score_nb(ohlc_data):\n","    <source elided>\n","\n","    o, h, l, c = np.split(ohlc_data, 4, axis=1)\n","    ^\n","\n","During: typing of get attribute at <ipython-input-98-ba04accdc205> (15)\n","\n","File \"<ipython-input-98-ba04accdc205>\", line 15:\n","def candle_score_nb(ohlc_data):\n","    <source elided>\n","\n","    o, h, l, c = np.split(ohlc_data, 4, axis=1)\n","    ^\n","\n","  @jit\n","/usr/local/lib/python3.7/dist-packages/numba/core/object_mode_passes.py:178: NumbaWarning: Function \"candle_score_nb\" was compiled in object mode without forceobj=True.\n","\n","File \"<ipython-input-98-ba04accdc205>\", line 13:\n","@jit\n","def candle_score_nb(ohlc_data):\n","^\n","\n","  state.func_ir.loc))\n","/usr/local/lib/python3.7/dist-packages/numba/core/object_mode_passes.py:188: NumbaDeprecationWarning: \n","Fall-back from the nopython compilation path to the object mode compilation path has been detected, this is deprecated behaviour.\n","\n","For more information visit https://numba.pydata.org/numba-doc/latest/reference/deprecation.html#deprecation-of-object-mode-fall-back-behaviour-when-using-jit\n","\n","File \"<ipython-input-98-ba04accdc205>\", line 13:\n","@jit\n","def candle_score_nb(ohlc_data):\n","^\n","\n","  state.func_ir.loc))\n"]},{"output_type":"stream","name":"stdout","text":["10 loops, best of 5: 43.7 ms per loop\n"]}]},{"cell_type":"markdown","source":["### fn : mr_adj - search best param. (mr_res_idx = kwarg)"],"metadata":{"id":"zPsSFQCzFRB0"}},{"cell_type":"markdown","source":["##### legacy"],"metadata":{"id":"_imZEsn9lzsS"}},{"cell_type":"code","source":["def liquidation(open_side, data_, obj_, lvrg, fee):  # much faster\n","  if open_side == \"SELL\":\n","    return np.min([(ep_ / np.max(data_[iin:iout]) - fee - 1) * lvrg + 1 for ep_, _, iin, iout in zip(*obj_)])\n","  else:\n","    return np.min([(np.min(data_[iin:iout]) / ep_ - fee - 1) * lvrg + 1 for ep_, _, iin, iout in zip(*obj_)]) \n","\n","def liquidation_torch(open_side, data_, obj_):\n","  if open_side == \"SELL\":\n","    return torch.min(torch.tensor([ep_ / torch.max(data_[iin:iout]) for ep_, _, iin, iout in zip(*obj_)])) \n","  else:\n","    return torch.min(torch.tensor([torch.min(data_[iin:iout]) / ep_ for ep_, _, iin, iout in zip(*obj_)]))"],"metadata":{"id":"T4_q_YV4v9D2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def frq_dev_plot_v2(gs, gs_idx, len_df, entry_idx, acc_pr, fontsize):\n","    plt.subplot(gs[gs_idx])\n","    frq_dev = np.zeros(len_df)\n","    frq_dev[entry_idx] = 1\n","    plt.plot(frq_dev)\n","    \n","    title_msg = \"periodic_pr\\n acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\" #\\n rev_acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\"\n","    plt.title(title_msg.format(*get_period_pr(len_df, acc_pr), fontsize=fontsize))\n","\n","    return gs_idx + 1\n","   \n","@jit  # almost equal\n","def get_res_info_nb(len_df, np_pr, total_pr, liqd):\n","  wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","  sr = sharpe_ratio(np_pr)\n","  sum_pr = get_sum_pr_nb(np_pr)\n","  min_pr = np.min(np_pr)\n","\n","  len_pr = len(np_pr)\n","  assert len_pr != 0\n","  dpf = (len_df / 1440) / len_pr # devision zero warning\n","\n","  acc_mdd = mdd(total_pr)\n","  sum_mdd = mdd(sum_pr)\n","\n","  return len_pr, dpf, wr, sr, total_pr[-1], sum_pr[-1], min_pr, liqd, acc_mdd, sum_mdd, sum_pr\n","\n","\n","def plot_info(gs, gs_idx, len_df, pr, cum_pr, liqd, config, title_position, fontsize):\n","  try:\n","    plt.subplot(gs[gs_idx])\n","    idep_res_obj = get_res_info_nb(len_df, pr, cum_pr, liqd)\n","    plt.plot(cum_pr)\n","    plt.plot(idep_res_obj[-1], color='gold')    \n","    title_str = \"len_pr : {}\\n dpf : {:.3f}\\n wr : {:.3f}\\n sr : {:.3f}\\n acc_pr : {:.3f}\\n sum_pr : {:.3f}\\n\" +\\\n","              \"min_pr : {:.3f}\\n liqd : {:.3f}\\n acc_mdd : -{:.3f}\\n sum_mdd : -{:.3f}\\n leverage {}\"\n","    plt.title(title_str.format(*idep_res_obj[:-1], config.lvrg_set.leverage), position=title_position, fontsize=fontsize)\n","  except Exception as e:\n","    print(\"error in plot_info :\", e)\n","\n","  return gs_idx + 1"],"metadata":{"id":"-cRSbKCtcoDE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import cupy"],"metadata":{"id":"hQqq4zjvFrdM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cupy.ones_like(cupy.asarray(hrel)).astype(cupy.bool_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TJEpEHPiFwKO","executionInfo":{"status":"ok","timestamp":1643598560972,"user_tz":-540,"elapsed":438,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"dd348914-cf80-48c8-c1f9-b8b040941611"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ True],\n","       [ True],\n","       [ True],\n","       ...,\n","       [ True],\n","       [ True],\n","       [ True]])"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["def np_to_cupy(arr_):\n","    return cupy.asarray(arr_)\n","\n","def cupy_to_np(arr_):\n","    return cupy.asnumpy(arr_)\n","\n","def candle_ratio_cupy(hrel, habs, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","    hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else cupy.ones_like(np_to_cupy(hrel)).astype(cupy.bool_)\n","    habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else cupy.ones_like(np_to_cupy(hrel)).astype(cupy.bool_)\n","\n","    return hrel_mr & habs_mr\n","\n","    \n","def fast_candle_game_cupy(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","    fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else cupy.ones_like(np_to_cupy(fws)).astype(cupy.bool_)\n","    bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else cupy.ones_like(np_to_cupy(fws)).astype(cupy.bool_)\n","\n","    return fws_mr & bs_mr\n","\n","\n","def candle_ratio_torch(hrel, habs, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","    hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else torch.ones_like(hrel).bool()\n","    habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else torch.ones_like(hrel).bool()\n","\n","    return hrel_mr & habs_mr\n","\n","    \n","def fast_candle_game_torch(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","    fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else torch.ones_like(fws).bool()\n","    bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else torch.ones_like(fws).bool()\n","\n","    return fws_mr & bs_mr"],"metadata":{"id":"Z0eLbSanlic6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from torch.autograd.functional import jacobian"],"metadata":{"id":"JrpUOnn2_O19"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np_params[0].float()"],"metadata":{"id":"NQH3WcyvBo37"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["jacobian(multi_mr_torch, np_params[0].float())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"khC4msFXAn7g","executionInfo":{"status":"ok","timestamp":1643597225377,"user_tz":-540,"elapsed":448,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"2c888d97-c50f-4621-d41a-950637a0d502"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.float32"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["%timeit -n 1 -r 500 jacobian(multi_mr_torch, np_params[0].float())     #  13.1 ms per loop"],"metadata":{"id":"bFDkfo_5_QTG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643596837081,"user_tz":-540,"elapsed":7435,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"b1e9cc30-7978-40ea-df57-cfec4a7fea75"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 500: 13.1 ms per loop\n"]}]},{"cell_type":"code","source":["import itertools\n","\n","bs_2_range = np.arange(-10, 110, 10)\n","hrel1_range = np.arange(-10, 600, 10)\n","habs1_range = np.arange(-10, 100, 10)\n","\n","survey_params = list(itertools.product(bs_2_range, hrel1_range, habs1_range))"],"metadata":{"id":"9Py0_iMIm3ib"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np_params = cpu_to_gpu(np.array(survey_params))"],"metadata":{"id":"XhBF6KProUpa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np_params.dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oZ99kC7L_ggj","executionInfo":{"status":"ok","timestamp":1643596696958,"user_tz":-540,"elapsed":449,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"7037b66d-e117-4753-d65e-8306fa42dafd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.int64"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["\n","def get_pr(open_side, tp, ep, lvrg, fee):\n","  assert len(tp) == len(ep)\n","  if open_side == \"SELL\":\n","    pr = (ep / tp - fee - 1) * lvrg + 1\n","  else:\n","    pr = (tp / ep - fee - 1) * lvrg + 1\n","\n","  return pr"],"metadata":{"id":"407aj0u2BNzk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a, b, c = -110, 50, -70\n","def multi_mr_torch(params):\n","  # print(params)\n","  d, e ,f = params\n","  short_mr_res_idx = fast_candle_game_torch(fws, bs, a, b, 10, 10) & fast_candle_game_torch(fws2, bs2, c, d, 10, 10) & candle_ratio_torch(hrel, habs, e, f, 10, 10)\n","  long_mr_res_idx = fast_candle_game_torch(fws, bs, a, b, 10, 10) & fast_candle_game_torch(fws2, bs2, c, d, 10, 10) & candle_ratio_torch(hrel, habs, e, f, 10, 10)\n","  # print(short_mr_res_idx)\n","  \n","  ep_loc_short_obj = adj_mr(torch_short_obj, short_mr_res_idx.reshape(-1,))\n","  ep_loc_long_obj = adj_mr(torch_long_obj, long_mr_res_idx.reshape(-1,))\n","\n","  short_pr = get_pr(OrderSide.SELL, *ep_loc_short_obj[:2], config.lvrg_set.leverage, fee)\n","  long_pr = get_pr(OrderSide.BUY,  *ep_loc_long_obj[:2], config.lvrg_set.leverage, fee)\n","\n","  # return [short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj]\n","  return short_pr"],"metadata":{"id":"i3dJVUkBpx21"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# tensor = torch.tensor([[3,5,1],[3,1,5],[7,5,8]],dtype=torch.float)\n","# print(tensor)\n","# # tensor.apply_(lambda x: (x+0.2))\n","# tensor.apply_(multi_mr_torch)\n","# print(tensor)\n","\n","# np.vectorize(multi_mr_torch, excluded=['params'])(params=np.array([[3,5,1],[3,1,5],[7,5,8]]))\n","# np.vectorize(multi_mr_torch, excluded=['params'])(params=np.array([3,5,1]))\n","%timeit -n 1 -r 1 np.vectorize(multi_mr_torch, signature='(n)->()')(np_params) # 7.66 s per loop 7.59 s per loop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kZVQCGKCwg7e","executionInfo":{"status":"ok","timestamp":1643595955348,"user_tz":-540,"elapsed":12367,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"40dc60f0-0b35-46e4-923e-b306db02b237"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  return array(a, dtype, copy=False, order=order)\n"]},{"output_type":"stream","name":"stdout","text":["1 loop, best of 1: 11.8 s per loop\n"]}]},{"cell_type":"code","source":["# %timeit -n 1 -r 1 np.vectorize(multi_mr_torch)(np_params)\n","%timeit -n 1 -r 1 multi_mr_torch([params for params in np_params])"],"metadata":{"id":"N5UxG3dromnR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### njit parallel"],"metadata":{"id":"1jOvmy8ywpE1"}},{"cell_type":"code","source":["# from numba import njit, prange\n","@njit(parallel=False)\n","def prange_test(A, b):\n","    s = 0\n","    for i in prange(A.shape[0]):\n","        s += A[i]\n","        for j in prange(len(b)):\n","          s += b[j]\n","    return s\n","\n","@njit(parallel=True, cache=True)\n","def prange_test2(A, b):\n","    s = 0\n","    for i in prange(A.shape[0]):\n","        s += A[i]\n","        for j in prange(len(b)):\n","          s += b[j]\n","    return s\n","\n","    \n","def prange_test4(A, b):\n","    s = 0\n","    for i in prange(A.shape[0]):\n","        s += A[i]\n","        for j in prange(len(b)):\n","          s += b[j]\n","    return s\n","\n","\n","@njit(parallel=True)\n","def prange_test3(A, b):\n","    s = 0\n","    for i in np.arange(A.shape[0]):\n","        s += A[i]\n","        for j in np.prange(len(b)):\n","          s += b[j]\n","    return s"],"metadata":{"id":"oTX1_DbFVdPX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tarr = np.arange(1000000)\n","tarr2 = np.arange(1000)\n","\n","tarr_gpu = torch.from_numpy(tarr).cuda()\n","tarr2_gpu = torch.from_numpy(tarr2).cuda()"],"metadata":{"id":"Ksf0xLlnVjB-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 10 prange_test(tarr, tarr2)\n","%timeit -n 1 -r 10 prange_test2(tarr, tarr2)\n","%timeit -n 1 -r 10 prange_test4(tarr, tarr2)\n","# %timeit -n 1 -r 10 prange_test3(tarr, tarr2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9xW2R1RSVpQf","outputId":"7f41abed-1cb9-4b86-c88b-d5b67a2ad86c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 4.99 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 10: 156 ms per loop\n","The slowest run took 25.36 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 10: 86.5 ms per loop\n"]}]},{"cell_type":"code","source":["prange_test2(tarr, tarr2)\n","prange_test2.parallel_diagnostics(level=4)"],"metadata":{"id":"Wpp-n0ggXNQv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["@njit(parallel=True)\n","def candle_ratio_njit(hrel, habs, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","  hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else np_true_hrel.copy()\n","  habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else np_true_hrel.copy()\n","\n","  return (hrel_mr & habs_mr).reshape(-1,)\n","\n","@njit(parallel=True)\n","def fast_candle_game_njit(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np_true_fws.copy()\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np_true_fws.copy()\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","@njit  # warning - jit cannot be used by outer_scope's idx\n","def adj_mr_njit(obj, mr_res_idx):\n","    # result = np.empty(len(obj))\n","    result = []\n","    for i in range(len(obj)):\n","      # print(ob_)\n","        # result[i] = ob_[mr_res_idx]\n","      result.append(obj[i][mr_res_idx])\n","\n","    return result[mr_res_idx]\n","\n","@njit\n","def get_pr_njit(open_side, tp, ep, lvrg, fee):\n","  assert len(tp) == len(ep)\n","  if open_side == \"SELL\":\n","    pr = (ep / tp - fee - 1) * lvrg + 1\n","  else: #if open_side == \"BUY\":\n","    pr = (tp / ep - fee - 1) * lvrg + 1\n","\n","  return pr"],"metadata":{"id":"ahdaA2CUZtzm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함"],"metadata":{"id":"rNCwlRVQapaF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np_true_hrel = np.ones_like(hrel, dtype=bool)\n","np_true_fws = np.ones_like(fws, dtype=bool)"],"metadata":{"id":"Sh1VReSObMPK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))\n","\n","# ------ data preparation ------ #\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)\n","\n","short_obj_list = list(short_obj)\n","long_obj_list = list(long_obj)\n","\n","@njit(parallel=True)\n","def multi_mr_njit(a, b, c, d, e ,f, lvrg=config.lvrg_set.leverage):\n","\n","  short_mr_res_idx = fast_candle_game_njit(fws, bs, a, b, 10, 10) & fast_candle_game_njit(fws2, bs2, c, d, 10, 10) & candle_ratio_njit(hrel, habs, e, f, 10, 10)\n","  long_mr_res_idx = fast_candle_game_njit(fws, bs, a, b, 10, 10) & fast_candle_game_njit(fws2, bs2, c, d, 10, 10) & candle_ratio_njit(hrel, habs, e, f, 10, 10)\n","\n","  # ep_loc_short_obj = adj_mr_njit(short_obj_list, short_mr_res_idx.reshape(-1,))\n","  # ep_loc_long_obj = adj_mr_njit(long_obj_list, long_mr_res_idx.reshape(-1,))\n","\n","  short_mr_res_idx_ = short_mr_res_idx.reshape(-1,)\n","  long_mr_res_idx_ = long_mr_res_idx.reshape(-1,)\n","\n","  # res_exc_short_ep, res_exc_short_tp, short_entry_idx, short_exit_idx\n","  # res_exc_long_ep, res_exc_long_tp, long_entry_idx, long_exit_idx\n","\n","  ep_loc_short_ep = res_exc_short_ep[short_mr_res_idx_]\n","  ep_loc_short_tp = res_exc_short_tp[short_mr_res_idx_]\n","  ep_loc_long_ep = res_exc_long_ep[long_mr_res_idx_]\n","  ep_loc_long_tp = res_exc_long_tp[long_mr_res_idx_]\n","\n","  # short_pr = get_pr_njit(\"SELL\", *ep_loc_short_obj[:2], lvrg, fee)\n","  # long_pr = get_pr_njit(\"BUY\",  *ep_loc_long_obj[:2], lvrg, fee)\n","  short_pr = get_pr_njit(\"SELL\", ep_loc_short_ep, ep_loc_short_tp, lvrg, fee)\n","  long_pr = get_pr_njit(\"BUY\",  ep_loc_long_ep, ep_loc_long_tp, lvrg, fee)\n","\n","  # return short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj\n","  return short_pr, long_pr, short_entry_idx, long_entry_idx\n","  \n","# short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj = multi_mr_njit(-110, -10, -10, -10, -10, -10)\n","short_pr, long_pr, short_entry_idx, long_entry_idx = multi_mr_njit(-110, -10, -10, -10, -10, -10)\n","# multi_mr_njit.parallel_diagnostics(level=4)\n","\n","plt.style.use(['dark_background', 'fast'])\n","\n","fig = plt.figure(figsize=(16, 8))\n","gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                        ncols=2,  # col 몇 개\n","                        height_ratios=[10, 1]\n","                        # height_ratios=[10, 10, 1]\n","                        )\n","gs_idx = 0\n","plt.suptitle(key)\n","\n","gs_idx = plot_info(gs, gs_idx, len_df, short_pr, title_str, config, title_position, fontsize)\n","gs_idx = plot_info(gs, gs_idx, len_df, long_pr, title_str, config, title_position, fontsize)\n","\n","# gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_short_obj[2], short_pr, fontsize)\n","# gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_long_obj[2], long_pr, fontsize)\n","gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, short_entry_idx, short_pr, fontsize)\n","gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, long_entry_idx, long_pr, fontsize)\n","\n","plt.show()"],"metadata":{"id":"yPrd-S-uZ4n5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 1000 multi_mr_njit(-110, -10, -10, -10, -10, -10)  #  1.1 ms -> 1.03 ms  (replace to &) 1.09 ms (&) 1.21 ms (+ 1)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mXMN2sWNk0fq","executionInfo":{"status":"ok","timestamp":1643505830319,"user_tz":-540,"elapsed":2039,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"352ec6ae-a902-447c-a0ee-f42963a56a76"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 4.64 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 1000: 1.41 ms per loop\n"]}]},{"cell_type":"markdown","source":["#### jit cuda"],"metadata":{"id":"hAQHSRuCwol3"}},{"cell_type":"code","source":["# 4. for loop 사용, get_pr_np 에 input params. - with \"numba acceleration\"\n","# ------------------ mr_adj pr ------------------ #\n","data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함\n","\n","# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))\n","\n","# ------ data preparation ------ #\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)\n","\n","short_np_zero_vec = np.zeros_like(fws).astype(np.int8)\n","long_np_zero_vec = np.zeros_like(fws).astype(np.int8)\n","# print(np_zero.dtype)\n","# break\n","\n","def multi_mr_nbvec(a, b, c, d, e ,f):\n","  # ------ res_var. initialize ------ #\n","  mr_cnt = 0\n","  short_mr_res_idx = short_np_zero_vec.copy()\n","  long_mr_res_idx = long_np_zero_vec.copy()\n","  print(np.sum(short_mr_res_idx, axis=1))\n","\n","  # ------ prev1 bar ------ #\n","  mr_cnt += 1\n","  short_mr_res_idx += fast_candle_game_nbvec(fws, bs, a, b, 10, 10)\n","  long_mr_res_idx += fast_candle_game_nbvec(fws, bs, a, b, 10, 10)\n","\n","  # ------ prev2 bar - ep_loc_data init every mr phase ------ #\n","  mr_cnt += 1\n","  short_mr_res_idx += fast_candle_game_nbvec(fws2, bs2, c, d, 10, 10)\n","  long_mr_res_idx += fast_candle_game_nbvec(fws2, bs2, c, d, 10, 10)\n","\n","  # ------ c_ratio ------ #\n","  mr_cnt += 1\n","  short_mr_res_idx += candle_ratio_nbvec(hrel, habs, e, f, 10, 10)\n","  long_mr_res_idx += candle_ratio_nbvec(hrel, habs, e, f, 10, 10)\n","\n","  # ------------ ------------ ------------ #\n","\n","  print(np.sum(short_mr_res_idx, axis=1))\n","\n","  ep_loc_short_obj = adj_mr(short_obj, short_mr_res_idx.reshape(-1,) == mr_cnt)\n","  ep_loc_long_obj = adj_mr(long_obj, long_mr_res_idx.reshape(-1,) == mr_cnt)\n","\n","  short_pr = get_pr_nb(OrderSide.SELL, *ep_loc_short_obj[:2], config.lvrg_set.leverage, fee)\n","  long_pr = get_pr_nb(OrderSide.BUY,  *ep_loc_long_obj[:2], config.lvrg_set.leverage, fee)\n","\n","  return short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj"],"metadata":{"id":"UwK7WsS89NqP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 4. for loop 사용, get_pr_np 에 input params. - with \"numba acceleration\"\n","# ------------------ mr_adj pr ------------------ #\n","data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함\n","\n","# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))\n","# print(candle_cols_idxs)\n","\n","#   ep_loc_data 생성시 zero index value warning   #\n","# assert short_entry_idx[0] > 0, \"assert short_entry_idx[0] > 0\"\n","\n","# ------------ mr_calc main ------------ #\n","# ------ data preparation ------ #\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)\n","\n","# short_np_zero = np.zeros_like(short_entry_idx).astype(np.int8)\n","# long_np_zero = np.zeros_like(long_entry_idx).astype(np.int8)\n","\n","def multi_mr(a, b, c, d, e ,f):\n","  short_mr_res_idx = fast_candle_game_nb(fws, bs, a, b, 10, 10) & fast_candle_game_nb(fws2, bs2, c, d, 10, 10) & candle_ratio_nb(hrel, habs, e, f, 10, 10)\n","  long_mr_res_idx = fast_candle_game_nb(fws, bs, a, b, 10, 10) & fast_candle_game_nb(fws2, bs2, c, d, 10, 10) & candle_ratio_nb(hrel, habs, e, f, 10, 10)\n","\n","  ep_loc_short_obj = adj_mr(short_obj, short_mr_res_idx.reshape(-1,))\n","  ep_loc_long_obj = adj_mr(long_obj, long_mr_res_idx.reshape(-1,))\n","\n","  short_pr = get_pr_nb(OrderSide.SELL, *ep_loc_short_obj[:2], config.lvrg_set.leverage, fee)\n","  long_pr = get_pr_nb(OrderSide.BUY,  *ep_loc_long_obj[:2], config.lvrg_set.leverage, fee)\n","\n","  return short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj\n","\n","\n","short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj = multi_mr(-110, -10, -10, -10, -10, -10)\n","\n","plt.style.use(['dark_background', 'fast'])\n","\n","fig = plt.figure(figsize=(16, 8))\n","gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                        ncols=2,  # col 몇 개\n","                        height_ratios=[10, 1]\n","                        # height_ratios=[10, 10, 1]\n","                        )\n","gs_idx = 0\n","plt.suptitle(key)\n","\n","gs_idx = plot_info(gs, gs_idx, len_df, short_pr, title_str, config, title_position, fontsize)\n","gs_idx = plot_info(gs, gs_idx, len_df, long_pr, title_str, config, title_position, fontsize)\n","\n","gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_short_obj[2], short_pr, fontsize)\n","gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_long_obj[2], long_pr, fontsize)\n","\n","plt.show()"],"metadata":{"id":"jqvQrr_OFQYM","colab":{"base_uri":"https://localhost:8080/","height":540},"executionInfo":{"status":"ok","timestamp":1643628666704,"user_tz":-540,"elapsed":2791,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5781fda7-17a6-472a-e448-9d4328d35820"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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/fr1E5KitnrVxdCUFOvDfmltbU3Xr18v83p9qFvJePnll4Wfa6hvdaurwbm57gbnZs7NxhKcm+te3UpGdXJzvXuG1dnZGSkpKcLfqampcHZ2NmCJ9KNp06bIzMwEAGRmZqJp06YGLlH1uLm5oWPHjrh48WK9qptYLEZYWBhu376NEydOIDExEbm5uQgICMDZs2f1un/2798fMTExKCgowKlTp9R+FL207t274+LFi8jPz0dERAR69OihNn3evHlITk5GXl4edu7ciR9++AGBgYEoLi4GoPyh8QYNGiAvLw8pKSno0KEDnJ2d4enpiQMHDuD27du4c+cOjh49ilatWumlvjWJiHD8+HFcvnwZkydPBlA/vnMeHh7IysrC5s2bceXKFaxfvx6Wlpb1om4l+fv7Y+fOnQDqx+dWH3Burps4N9e82srNYrEY27Ztg62tLVJTUzFz5kyhXl5eXggNDUVOTg5ycnJw4sQJeHl56aW+NYlzc92rW0nVyc31rsH6vCIiQxehyqysrPD7779jxowZuHv3bpnpdbluxcXF6NixI1xcXODr64s2bdrUynrt7Ozwxx9/YMGCBbC1tcXly5exe/dujfPKZDIcPnwYK1euhI2NDb755hscPnwYNjY2AIBx48Zh7Nix6NGjB5ycnODu7o42bdrgypUrAIAGDRrg559/Rk5ODho1agQfHx/I5XIAgI2NDQ4dOoTWrVujadOmuHTpEg4ePFgr26A6evbsic6dO8PPzw8fffQRevXqVWaeurhfSiQSdOrUCWvXrkWnTp1QUFCAOXPmlJmvLtZNRSqV4rXXXsPevXs1Tq/LdWN1T13e3zg317zazM2tWrVC8+bNcePGDfTr1w+BgYHo27cvACA9PR2jRo2Cra0t7O3tcejQIezatatWtkF1cG6ue3VTqW5urncN1rS0NLi6ugp/u7i4IC0tzYAl0o9bt27BwcEBAODg4IDbt28buERVI5FI8Pvvv2P79u3Yv38/AMPWjYjwwQcfID4+Hvn5+ViyZAmaN2+O8+fPIy8vD7t374ZUKhXm/89//oNr167hzp07OHjwIBwdHdWW9f777yM+Ph43btyApaUlunfvDjs7O6xbtw7du3dHXFwcWrduLbxHJpPhzz//RH5+Pi5cuIDmzZtXqR4jRoxAVFQU9u3bh0ePHmHRokXw8fFRW5fKSy+9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\n","text/plain":["<Figure size 1152x576 with 4 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["%timeit -n 1 -r 200 multi_mr(-110, -10, -10, -10, -10, -10)  #  6.71 ms per loop =>  2.3 ms (var. define outer scope) => 1.94 ms (define np_zero outer scope) - 1.43 ms  4.22 ms (mr oneline_\n","# %timeit -n 1 -r 200 multi_mr_nbvec(-110, -10, -10, -10, -10, -10))  #  1.36 ms\n","# %timeit -n 1 -r 200 multi_mr_nb(-110, -10, -10, -10, -10, -10)) #  7.25 ms per loop\n","# %timeit -n 1 -r 200 multi_mr_cuda(-110, -10, -10, -10, -10, -10)) #  7.25 ms per loop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BK8kWx3Y_7da","executionInfo":{"status":"ok","timestamp":1643628705114,"user_tz":-540,"elapsed":908,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"15a2d30c-8b43-4e3a-9a4e-e0a4f5b19b43"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 200: 4.21 ms per loop\n"]}]},{"cell_type":"markdown","source":["##### jit faster"],"metadata":{"id":"yiGM4alhQFTf"}},{"cell_type":"code","source":["@cuda.jit(device=True)\n","def candle_ratio_nbcujit(input_data, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","  hrel, habs = np.split(input_data, input_data.shape[-1], axis=1)\n","  hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else np.ones_like(hrel).astype(np.int8)\n","  habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else np.ones_like(habs).astype(np.int8)\n","\n","  return (hrel_mr & habs_mr).reshape(-1,)\n","\n","@jit\n","def candle_ratio_nb(hrel, habs, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","# def candle_ratio_nb(input_data, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","  # hrel, habs = np.split(input_data, input_data.shape[-1], axis=1)\n","  hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else np.ones_like(hrel).astype(np.bool_)\n","  habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else np.ones_like(habs).astype(np.bool_)\n","\n","  return (hrel_mr & habs_mr).reshape(-1,)\n","\n","# @vectorize([int8(float64, float64, float64, float64, float64, float64)])\n","@vectorize([int8(float64, float64, int8, int8, int8, int8)])\n","def candle_ratio_nbvec(hrel, habs, hrel_v, habs_v, hrel_gap=10, habs_gap=10):\n","  hrel_mr = (hrel_v < hrel) & (hrel < hrel_v + hrel_gap) if hrel_v >= 0 else 1\n","  habs_mr = (habs_v < habs) & (habs < habs_v + habs_gap) if habs_v >= 0 else 1\n","\n","  return hrel_mr & habs_mr\n","\n","\n","@cuda.jit(device=True)\n","# @roc.jit(device=True)\n","def fast_candle_game_nbcujit(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","@jit\n","def fast_candle_game_nb(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","# def fast_candle_game_nb(input_data, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  # fws, bs, bws = np.split(input_data, input_data.shape[-1], axis=1)\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.bool_)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.bool_)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","@jit\n","def fast_candle_game_nb2(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","@jit(fastmath=True)\n","def fast_candle_game_nbfm(input_data, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws, bs, bws = np.split(input_data, input_data.shape[-1], axis=1)\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","  \n","@jit(int8[:](float32[:], int8, int8, int8, int8))\n","def fast_candle_game_nbsig(input_data, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws, bs, bws = np.split(input_data, input_data.shape[-1], axis=1)\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","\n","@jit(int8[:](float64[:], int8, int8, int8, int8))\n","def fast_candle_game_nbsig(input_data, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws, bs, bws = np.split(input_data, input_data.shape[-1], axis=1)\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return (fws_mr & bs_mr).reshape(-1,)\n","\n","\n","# @vectorize([int8(float64, float64, int8, int8, int8, int8)])\n","@vectorize([int8(float64, float64, float64, float64, float64, float64)])\n","def fast_candle_game_nbvec(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else 1\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else 1\n","\n","  return fws_mr & bs_mr\n","\n","@vectorize([int8(float64, float64, int8, int8, int8, int8)])\n","def fast_candle_game_nbvec2(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) and (fws < fws_v + fws_gap) if fws_v >= -100 else 1\n","  bs_mr = (bs_v < bs) and (bs < bs_v + bs_gap) if bs_v >= 0 else 1\n","\n","  return fws_mr and bs_mr\n","\n","@vectorize([int8(float64, float64, int8, int8, int8, int8)], target='cuda')\n","def fast_candle_game_nbvec_cuda(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else 1\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else 1\n","\n","  return fws_mr & bs_mr\n","\n","# @guvectorize([(float64[:], float64[:], int8, int8, int8, int8, int8[:])], '(n),(n),(),(),(),()->(n)', target='cuda')\n","# def fast_candle_game_nbgvec(fws, bs, fws_v, bs_v, fws_gap, bs_gap, res):\n","#   length = len(fws)\n","#   fws_mr = np.empty(length)\n","#   bs_mr = np.empty(length)\n","#   for i in range(length):\n","#     fws_mr[i] = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else 1\n","#     bs_mr[i] = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else 1\n","#     res[i] = (fws_mr[i] and bs_mr[i])\n","#     # res[i] = fws_mr[i] + bs_mr[i]\n","#     # res[i] = fws[i] + bs[i]\n","\n","# @guvectorize([(float64[:], float64[:], int8, int8, int8, int8, boolean[:])], '(n),(n),(),(),(),()->(n)', nopython=True)\n","# def fast_candle_game_nbgvec(fws, bs, fws_v, bs_v, fws_gap, bs_gap, res):\n","#   fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","#   bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","#   # res = (fws_mr & bs_mr).astype(int8)\n","#   res = fws_mr & bs_mr\n","\n","@guvectorize([(float64[:], float64[:], int8[:], int8[:], int8[:], int8[:], int8[:])], '(n),(n),(n),(n),(n),(n)->(n)')\n","def fast_candle_game_nbgvec(fws, bs, fws_v, bs_v, fws_gap, bs_gap, res):\n","  fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","  res = fws_mr & bs_mr"],"metadata":{"id":"8nw4YfLsQeei"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan"],"metadata":{"id":"W7pY0p0-QG3G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fast_candle_game_nb(ep_loc_data, -110, 50, 10, 10)"],"metadata":{"id":"UEzkQ60wdLR3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 50 fast_candle_game_nbvec(fws, bs, -110, 50, 10, 10)\n","%timeit -n 1 -r 50 fast_candle_game_nbvec_cuda(fws, bs, -110, 50, 10, 10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VmuXrXFJcwYR","executionInfo":{"status":"ok","timestamp":1643425702125,"user_tz":-540,"elapsed":376,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"7a8e71d3-2ac8-48d2-844c-6abb2f62bb69"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 9.72 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 50: 159 µs per loop\n","1 loop, best of 50: 3.57 ms per loop\n"]}]},{"cell_type":"code","source":["fast_candle_game_nbvec(fws, bs, -110, 50, 10, 10)\n","# fws.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DZ4QyD4MyoH1","executionInfo":{"status":"ok","timestamp":1643428587724,"user_tz":-540,"elapsed":404,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"5da319e9-5747-4418-91c3-8ffd32987670"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0],\n","       [0],\n","       [0],\n","       ...,\n","       [1],\n","       [0],\n","       [1]], dtype=int8)"]},"metadata":{},"execution_count":221}]},{"cell_type":"markdown","source":["##### nbvec_cuda"],"metadata":{"id":"6dBa5_xGHdfb"}},{"cell_type":"code","source":["ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)"],"metadata":{"id":"I0NTzT42pY19"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ascont_fws = np.ascontiguousarray(fws, dtype=np.float64)\n","ascont_bs = np.ascontiguousarray(bs, dtype=np.float64)"],"metadata":{"id":"RPykK0zOy5_G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.plot(fws - ascont_fws)"],"metadata":{"id":"pkQNY0JWzOz8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fws_device = cuda.to_device(ascont_fws)\n","bs_device = cuda.to_device(ascont_bs)\n","\n","out_device = cuda.device_array(shape=(*fws.shape,), dtype=np.int8)\n","\n","res = fast_candle_game_nbvec_cuda(fws_device, bs_device, -110, 50, 10, 10, out=out_device)"],"metadata":{"id":"ABCZXR-VyQLk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["res.copy_to_host()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zofpIiPL1mia","executionInfo":{"status":"ok","timestamp":1643431556651,"user_tz":-540,"elapsed":532,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"016f848c-63e3-4a42-f51e-c7ac595f4a26"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0],\n","       [0],\n","       [0],\n","       ...,\n","       [1],\n","       [0],\n","       [1]], dtype=int8)"]},"metadata":{},"execution_count":296}]},{"cell_type":"code","source":["%timeit -n 1 -r 50 fast_candle_game_nbvec_cuda(fws_device, bs_device, -110, 50, 10, 10, out=out_device)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u51LUwUYzcgg","executionInfo":{"status":"ok","timestamp":1643431572721,"user_tz":-540,"elapsed":396,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"57c62409-04cd-4806-b629-4e504beb698a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 50: 2.97 ms per loop\n"]}]},{"cell_type":"markdown","source":["##### cujit"],"metadata":{"id":"DgzA-5IAHVm2"}},{"cell_type":"code","source":["# @roc.jit(device=True)\n","\n","# @cuda.jit(device=True)\n","# def fast_candle_game_nbcujit(fws, bs, fws_v, bs_v, fws_gap=10, bs_gap=10):\n","#   # fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) # if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","#   # bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) # if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","#   return fws\n","#   # return (fws_mr & bs_mr).reshape(-1,)\n","@cuda.jit(device=True)\n","def fast_candle_game_nbcujit(fws):\n","  # fws_mr = (fws_v < fws) & (fws < fws_v + fws_gap) # if fws_v >= -100 else np.ones_like(fws).astype(np.int8)\n","  # bs_mr = (bs_v < bs) & (bs < bs_v + bs_gap) # if bs_v >= 0 else np.ones_like(bs).astype(np.int8)\n","\n","  return fws\n","  # return (fws_mr & bs_mr).reshape(-1,)"],"metadata":{"id":"AfWtJmTMMSTI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# %timeit -n 1 -r 50 fast_candle_game_nbcujit(fws, bs, -110, 50, 10, 10)\n","%timeit -n 1 -r 50 fast_candle_game_nbcujit(fws)"],"metadata":{"id":"cKuWsjAyKbfT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import math\n","\n","# CUDA kernel\n","@cuda.jit\n","def my_kernel(io_array):\n","    pos = cuda.grid(1)\n","    if pos < io_array.size:\n","        io_array[pos] *= 2 # do the computation\n","\n","# Host code   \n","data = np.ones(256)\n","threadsperblock = 256\n","blockspergrid = math.ceil(data.shape[0] / threadsperblock)\n","my_kernel[1, threadsperblock](data)\n","print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nIRmLWQWNA0I","executionInfo":{"status":"ok","timestamp":1643449240323,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"3cb3f512-a127-4077-fa1c-0a269487ae60"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.\n"," 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2. 2.]\n"]}]},{"cell_type":"code","source":["blockspergrid"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5GtUDZGhNNYX","executionInfo":{"status":"ok","timestamp":1643449214296,"user_tz":-540,"elapsed":407,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9c511fef-29f9-4755-e9d5-6f6afe949624"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":207}]},{"cell_type":"markdown","source":["#### cupy"],"metadata":{"id":"t48DbEJ6GboX"}},{"cell_type":"code","source":["data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함\n","cupy_data = np_to_cupy(data)"],"metadata":{"id":"Lj3HdytEGzzs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cupy_short_obj = [np_to_cupy(arr_) for arr_ in short_obj]\n","cupy_long_obj = [np_to_cupy(arr_) for arr_ in long_obj]"],"metadata":{"id":"-DzlKVM1Gzzt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))\n","\n","# ------ data preparation ------ #\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = cupy_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = cupy_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)]\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = cupy_data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)]\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)\n","\n","# short_np_zero_cupy = torch.zeros_like(fws).int()\n","# long_np_zero_cupy = torch.zeros_like(fws).int()\n","# print(long_np_zero_cupy.dtype)\n","# break\n","\n","def multi_mr_cupy(a, b, c, d, e ,f):\n","\n","  short_mr_res_idx = fast_candle_game_cupy(fws, bs, a, b, 10, 10) & fast_candle_game_cupy(fws2, bs2, c, d, 10, 10) & candle_ratio_cupy(hrel, habs, e, f, 10, 10)\n","  long_mr_res_idx = fast_candle_game_cupy(fws, bs, a, b, 10, 10) & fast_candle_game_cupy(fws2, bs2, c, d, 10, 10) & candle_ratio_cupy(hrel, habs, e, f, 10, 10)\n","  \n","  ep_loc_short_obj = adj_mr(cupy_short_obj, short_mr_res_idx.reshape(-1,))\n","  ep_loc_long_obj = adj_mr(cupy_long_obj, long_mr_res_idx.reshape(-1,))\n","\n","  short_pr = get_pr(OrderSide.SELL, *ep_loc_short_obj[:2], config.lvrg_set.leverage, fee)\n","  long_pr = get_pr(OrderSide.BUY,  *ep_loc_long_obj[:2], config.lvrg_set.leverage, fee)\n","\n","  return short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj\n","  \n","  \n","def idep_plot_cupy(short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj):\n","  short_pr = gpu_to_cpu(short_pr)\n","  long_pr = gpu_to_cpu(long_pr)\n","  ep_loc_short_obj = [gpu_to_cpu(res_) for res_ in ep_loc_short_obj]\n","  ep_loc_long_obj = [gpu_to_cpu(res_) for res_ in ep_loc_long_obj]\n","\n","  plt.style.use(['dark_background', 'fast'])\n","\n","  fig = plt.figure(figsize=(16, 8))\n","  gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                          ncols=2,  # col 몇 개\n","                          height_ratios=[10, 1]\n","                          # height_ratios=[10, 10, 1]\n","                          )\n","  gs_idx = 0\n","  plt.suptitle(key)\n","\n","  gs_idx = plot_info(gs, gs_idx, len_df, short_pr, title_str, config, title_position, fontsize)\n","  gs_idx = plot_info(gs, gs_idx, len_df, long_pr, title_str, config, title_position, fontsize)\n","\n","  gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_short_obj[2], short_pr, fontsize)\n","  gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, ep_loc_long_obj[2], long_pr, fontsize)\n","\n","  plt.show()\n","\n","\n","# idep_plot_cupy(*multi_mr_cupy(-110, -10, -10, -10, -10, -10))"],"metadata":{"id":"IEF5tWATGdTi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 1000 multi_mr_cupy(-110, -10, -10, -10, -10, -10)  #  1.55 ms\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Uthx_azTHyeI","executionInfo":{"status":"ok","timestamp":1643598876616,"user_tz":-540,"elapsed":2150,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"6bb5a916-67ae-424b-86a7-25cc7c138ecd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 4.50 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 1000: 1.55 ms per loop\n"]}]},{"cell_type":"markdown","source":["#### torch"],"metadata":{"id":"mLrHjzWGyBRM"}},{"cell_type":"code","source":["data = np.array(res_df.values)    # data 선언은 dur. cols 가 생성된 후 선언되어야 함\n","torch_data = torch.from_numpy(data).cuda()\n","\n","torch_short_obj = [cpu_to_gpu(arr_) for arr_ in short_obj]\n","torch_long_obj = [cpu_to_gpu(arr_) for arr_ in long_obj]\n","\n","# ------ get mr_data's col_idxs ------ #\n","h_c_itv = '15T'\n","candle_cols_idxs = get_col_idxs(res_df, score_cols(h_c_itv))\n","candle_ratio_cols_idxs = get_col_idxs(res_df, h_ratio_cols(h_c_itv))"],"metadata":{"id":"2eAjT_y-vz69","executionInfo":{"status":"ok","timestamp":1644462075038,"user_tz":-540,"elapsed":4115,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# ------ data preparation ------ #\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)], divider, rounding_mode='floor')  # - copy() 됨, 독립변수\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)], divider, rounding_mode='floor')\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)], divider, rounding_mode='floor')\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)"],"metadata":{"id":"ZRlcq4PN4kIC","executionInfo":{"status":"ok","timestamp":1644462075038,"user_tz":-540,"elapsed":5,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["[idep_plot_torch_v2(*multi_mr_torch(-11, -1, -11, -1, 10, x)) for x in np.arange(-1, 10, 1)]\n","# idep_plot_torch_v2(*multi_mr_torch(-11, -1, -11, -1, 10, x))"],"metadata":{"id":"5gAakAqhuAr5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 500 fast_candle_game_torch(fws, bs, 0, 10, -10, -10)  #  58 µs per 57.1 µs per loo\n","%timeit -n 1 -r 500 fast_candle_game_torch_v2(fws, bs, 0, 10, -10, -10)  # 46.8 µs per -> 24.7 µ (preprocessed fws, bs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7BraOgwpu6lN","executionInfo":{"status":"ok","timestamp":1643810786359,"user_tz":-540,"elapsed":436,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"a8da6cff-5330-4b68-8f55-037257fb7424"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 20.51 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 500: 57 µs per loop\n","The slowest run took 44.93 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 500: 24.4 µs per loop\n"]}]},{"cell_type":"code","source":["def multi_mr_torch(a, b, c, d, e ,f):\n","  short_mr_res_idx = fast_candle_game_torch_v2(fws, bs, a, b) & fast_candle_game_torch_v2(fws2, bs2, c, d) & candle_ratio_torch_v2(hrel, habs, e, f)\n","  long_mr_res_idx = fast_candle_game_torch_v2(fws, bs, a, b) & fast_candle_game_torch_v2(fws2, bs2, c, d) & candle_ratio_torch_v2(hrel, habs, e, f)\n","  \n","  short_ep_loc_obj = adj_mr(torch_short_obj, short_mr_res_idx.reshape(-1,))\n","  long_ep_loc_obj = adj_mr(torch_long_obj, long_mr_res_idx.reshape(-1,))\n","\n","  short_pr = get_pr(OrderSide.SELL, *short_ep_loc_obj[:2], config.lvrg_set.leverage, fee)\n","  long_pr = get_pr(OrderSide.BUY,  *long_ep_loc_obj[:2], config.lvrg_set.leverage, fee)\n","\n","  return short_pr, long_pr, short_ep_loc_obj, long_ep_loc_obj  # obj 는 plot_check + frq_dev 를 위해 필요\n","  \n","  \n","def idep_plot_torch_v2(short_pr, long_pr, short_ep_loc_obj, long_ep_loc_obj, to_cpu=True, sample_ratio=0.7):\n","  #     len(pr_info) not enough for gpu effect    #\n","  if to_cpu:\n","    short_pr = gpu_to_cpu(short_pr)\n","    long_pr = gpu_to_cpu(long_pr)\n","    short_ep_loc_obj = [gpu_to_cpu(res_) for res_ in short_ep_loc_obj]\n","    long_ep_loc_obj = [gpu_to_cpu(res_) for res_ in long_ep_loc_obj]\n","    # print(type(short_ep_loc_obj))\n","\n","  plt.style.use(['dark_background', 'fast'])\n","\n","  fig = plt.figure(figsize=(16, 8))\n","  gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                          ncols=2,  # col 몇 개\n","                          height_ratios=[10, 1]\n","                          # height_ratios=[10, 10, 1]\n","                          )\n","  gs_idx = 0\n","  plt.suptitle(key)\n","\n","  v_line = int(len_df * sample_ratio)\n","\n","  s_liqd = liquidation(OrderSide.SELL, data[:, get_col_idxs(res_df, ['high'])], short_ep_loc_obj, config.lvrg_set.leverage, fee)\n","  short_total_pr = to_total_pr(len_df, short_pr, short_ep_loc_obj[-1])\n","  short_cum_pr = np.cumprod(short_total_pr)\n","  gs_idx = plot_info_v2(gs, gs_idx, len_df, short_pr, short_total_pr, short_cum_pr, s_liqd, config, v_line, title_position, fontsize)\n","\n","  l_liqd = liquidation(OrderSide.BUY, data[:, get_col_idxs(res_df, ['low'])], long_ep_loc_obj, config.lvrg_set.leverage, fee)\n","  long_total_pr = to_total_pr(len_df, long_pr, long_ep_loc_obj[-1])\n","  long_cum_pr = np.cumprod(long_total_pr)\n","  gs_idx = plot_info_v2(gs, gs_idx, len_df, long_pr, long_total_pr, long_cum_pr, l_liqd, config, v_line, title_position, fontsize)\n","\n","  gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, short_ep_loc_obj[-1], short_cum_pr[-1], fontsize)\n","  gs_idx = frq_dev_plot_v2(gs, gs_idx, len_df, long_ep_loc_obj[-1], long_cum_pr[-1], fontsize)\n","\n","  plt.show()"],"metadata":{"id":"T3K7USL0y9Bi","executionInfo":{"status":"ok","timestamp":1644462075039,"user_tz":-540,"elapsed":5,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["%timeit torch.min(short_pr) # 7.75 µs\n","%timeit np.min(short_pr) # 4.2 µs - res_info 의 데이터양은 gpu effect 를 볼만큼 크지 않음"],"metadata":{"id":"Diu_h7812-bj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["_, _, ep_loc_short_obj, _ = multi_mr_torch(-11, -1, -1, -1, -1, -1)\n","%timeit -n 1 -r 100 liquidation(OrderSide.SELL, data[:, get_col_idxs(res_df, ['high'])], ep_loc_short_obj, config.lvrg_set.leverage, fee) # 15.6 ms per loop - 1.74 ms (with cpu) 9.07 ms - 9.03 ms (int)\n","# %timeit -n 1 -r 100 liquidation_torch(OrderSide.SELL, torch_low_data, ep_loc_short_obj) # 9.16 ms per loop - 6.99 ms (with cpu)\n","# %timeit -n 1 -r 100 liquidation_torch(OrderSide.SELL, torch_data[:, get_col_idxs(res_df, ['low'])], ep_loc_short_obj) # 9.16 ms per loop - 6.99 ms (with cpu)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NP2tA0lL2uR5","executionInfo":{"status":"ok","timestamp":1643883734847,"user_tz":-540,"elapsed":1042,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"13e4a669-042e-4522-9d4d-3849418ace1c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 100: 9.06 ms per loop\n"]}]},{"cell_type":"code","source":["%timeit -n 1 -r 50 [torch_data[iin:iout] for iin, iout in zip(*ep_loc_short_obj[2:])] # 236 µs per loop\n","%timeit -n 1 -r 50 [torch_low_data[iin:iout] for iin, iout in zip(*ep_loc_short_obj[2:])] # 231 µs per loop\n","%timeit -n 1 -r 50 [data[iin:iout] for iin, iout in zip(*ep_loc_short_obj[2:])] # 231 µs per loop"],"metadata":{"id":"2M8lvhgy0k2K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# multi_mr_torch(-110, -10, -10, -10, -10, -10)\n","# %timeit -n 1 -r 500 multi_mr_torch(-110, -10, -10, -10, -10, -10)  #  1.1 ms -> 1.03 ms  (replace to &) 1.09 ms (&) 1.21 ms (+ 1) - 1.07 ms (include gpu to cpu) - 866 µs (Exclude gpu to cpu)  1.27 ms -> 894 µs 885 µs\n","%timeit -n 1 -r 500 multi_mr_torch(-11, -1, -1, -1, -1, -1)  #  1.1 ms -> 1.03 ms  (replace to &) 1.09 ms (&) 1.21 ms (+ 1) - 1.07 ms (include gpu to cpu) - 866 µs (Exclude gpu to cpu)  1.27 ms -> 894 µs 885 µs\n","#  867 µs per loop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yfrid_Uf3hqY","executionInfo":{"status":"ok","timestamp":1643883320046,"user_tz":-540,"elapsed":863,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"a88a684c-c605-40ae-8d83-254008d66036"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The slowest run took 4.09 times longer than the fastest. This could mean that an intermediate result is being cached.\n","1 loop, best of 500: 819 µs per loop\n"]}]},{"cell_type":"code","source":["# gpu_to_cpu(multi_mr_torch(-11, -1, -1, -1, -1, -1)[-1][-1]).dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JQYF6H6L_sPR","executionInfo":{"status":"ok","timestamp":1643865134722,"user_tz":-540,"elapsed":790,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"3696028f-1866-4c93-a980-d764be3c573c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int64')"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["#### random_search"],"metadata":{"id":"Jksv-K3Qwzyp"}},{"cell_type":"code","source":["y_val_cols = ['fws_1', 'bs_1', 'fws_2', 'bs_2', 'hrel', 'habs', 'pr', 'pr_list', 'frq', 'sr', 'ep', 'tp', 'entry_idx', 'exit_idx']\n","survey_path = './candlestick_concated/survey_df_v2/{}'.format(key).replace(\".ftr\", \"\")\n","\n","def survey_main_torch_prod():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  # for params in survey_params:  \n","    # short_pr, long_pr, _, _ = \n","  [multi_mr_torch(fws_1, bs_1, fws_2, *params) for params in survey_params]\n","\n","\n","@njit(parallel=True, cache=True)\n","def survey_main_njit():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  # for bs_2 in np.arange(-10, 110, 10):\n","  #   for hrel1 in np.arange(-10, 600, 10):\n","  #     for habs1 in np.arange(-10, 100, 10):\n","  for i in prange(len(bs_2_range)):\n","    for j in prange(len(hrel1_range)):\n","      for k in prange(len(habs1_range)):\n","        # short_pr, long_pr, _, _ = multi_mr_njit(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","        short_pr, long_pr, _, _ = multi_mr_njit(fws_1, bs_1, fws_2, bs_2_range[i], hrel1_range[j], habs1_range[k])\n","\n","      # if len(short_pr) > 0:\n","      #   short_survey_df = append_rowto_df(short_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(short_pr)[-1], y_val_cols)\n","      # if len(long_pr) > 0:\n","      #   long_survey_df = append_rowto_df(long_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(long_pr)[-1], y_val_cols)\n","  \n","\n","def survey_main_torch():\n","  chunk_cnt = 0\n","  fws_1, bs_1, fws_2, bs_2 = -11, -1, -1, 3\n","  s_res_info = []\n","  l_res_info = []\n","  for fws_1 in np.arange(-11, 11, 1):\n","    for bs_1 in np.arange(-1, 11, 1):\n","      for fws_2 in np.arange(-11, 11, 1):  \n","        for bs_2 in np.arange(-1, 11, 1):\n","          for hrel1 in np.arange(-1, 61, 1):\n","            for habs1 in np.arange(-1, 11, 1):\n","              short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj = multi_mr_torch(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)   \n","              short_pr = gpu_to_cpu(short_pr)\n","              long_pr = gpu_to_cpu(long_pr)\n","              ep_loc_short_obj = [gpu_to_cpu(res_) for res_ in ep_loc_short_obj]\n","              ep_loc_long_obj = [gpu_to_cpu(res_) for res_ in ep_loc_long_obj]\n","\n","              if len(short_pr) > 0:\n","                s_res_info.append([fws_1, bs_1, fws_2, bs_2, hrel1, habs1, np.cumprod(short_pr)[-1], short_pr, len(short_pr), sharpe_ratio(short_pr), *ep_loc_short_obj])\n","              if len(long_pr) > 0:\n","                l_res_info.append([fws_1, bs_1, fws_2, bs_2, hrel1, habs1, np.cumprod(long_pr)[-1], long_pr, len(long_pr), sharpe_ratio(long_pr), *ep_loc_long_obj])\n","                    \n","      short_survey_df = pd.DataFrame(s_res_info, columns=y_val_cols)\n","      long_survey_df = pd.DataFrame(l_res_info, columns=y_val_cols)\n","      print(short_survey_df.tail())\n","      short_survey_df.reset_index().to_feather(os.path.join(survey_path, 'short{}_'.format(chunk_cnt) + key), compression='lz4')\n","      long_survey_df.reset_index().to_feather(os.path.join(survey_path, 'long{}_'.format(chunk_cnt) + key), compression='lz4')\n","      print(os.path.join(survey_path, 'short{}_'.format(chunk_cnt) + key), \"saved !\")\n","      chunk_cnt += 1\n","      #   init.   #\n","      s_res_info = []\n","      l_res_info = []\n","\n","        \n","def survey_main():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  for bs_2 in np.arange(-10, 110, 10):\n","    for hrel1 in np.arange(-10, 600, 10):\n","      for habs1 in np.arange(-10, 100, 10):\n","        short_pr, long_pr, _, _ = multi_mr(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","\n","        # if len(short_pr) > 0:\n","        #   short_survey_df = append_rowto_df(short_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(short_pr)[-1], y_val_cols)\n","        # if len(long_pr) > 0:\n","        #   long_survey_df = append_rowto_df(long_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(long_pr)[-1], y_val_cols)\n","\n","\n","@jit(parallel=True, cache=True)\n","def survey_main_nb():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  for bs_2 in prange(-10, 110, 10):\n","    for hrel1 in prange(-10, 600, 10):\n","      for habs1 in prange(-10, 100, 10):\n","        short_pr, long_pr, _, _ = multi_mr(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","\n","      # if len(short_pr) > 0:\n","      #   short_survey_df = append_rowto_df(short_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(short_pr)[-1], y_val_cols)\n","      # if len(long_pr) > 0:\n","      #   long_survey_df = append_rowto_df(long_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(long_pr)[-1], y_val_cols)\n","  \n","  # return short_survey_df\n","\n","@jit(parallel=True, cache=True)\n","def survey_main_nbvec():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  # for bs_2 in prange(-10, 110, 10):\n","  #   for hrel1 in prange(-10, 600, 10):\n","  #     for habs1 in prange(-10, 100, 10):\n","  for bs_2 in np.arange(-10, 110, 10).astype(np.int8):\n","    for hrel1 in np.arange(-10, 600, 10).astype(np.int8):\n","      for habs1 in np.arange(-10, 100, 10).astype(np.int8):\n","        short_pr, long_pr, _, _ = multi_mr_nbvec(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","\n","  #     if len(short_pr) > 0:\n","  #       short_survey_df = append_rowto_df(short_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(short_pr)[-1], y_val_cols)\n","  #     if len(long_pr) > 0:\n","  #       long_survey_df = append_rowto_df(long_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(long_pr)[-1], y_val_cols)\n","  \n","  # return short_survey_df\n","  \n","# @jit(parallel=True, cache=True, target=cuda)\n","# def survey_main_nbvec():\n","#   fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","#   for bs_2 in prange(-10, 110, 10):\n","#     for hrel1 in prange(-10, 600, 10):\n","#       for habs1 in prange(-10, 100, 10):\n","#         short_pr, long_pr, _, _ = multi_mr_nbvec(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","\n","  \n","@jit(parallel=True, cache=True, nopython=True)\n","def survey_main_nbnjit():\n","  fws_1, bs_1, fws_2, bs_2 = -110, 50, -70, 30\n","  for hrel1 in np.arange(-10, 600, 10):\n","    for habs1 in np.arange(-10, 100, 10):\n","      short_pr, long_pr, _, _ = multi_mr(fws_1, bs_1, fws_2, bs_2, hrel1, habs1)\n","\n","      # if len(short_pr) > 0:\n","      #   short_survey_df = append_rowto_df(short_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(short_pr)[-1], y_val_cols)\n","      # if len(long_pr) > 0:\n","      #   long_survey_df = append_rowto_df(long_survey_df, (fws_1, bs_1, fws_2, bs_2, hrel1, habs1), np.cumprod(long_pr)[-1], y_val_cols)\n","  \n","  # return short_survey_df"],"metadata":{"id":"FCvyMCQn0Upf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# %timeit -n 1 -r 1 survey_main(short_survey_df, long_survey_df, y_val_cols)   # 9.13 s per loop 9.31 s per loop\n","\n","# %timeit -n 1 -r 5 survey_main_nb(short_survey_df, long_survey_df, y_val_cols) # + cache (10 rot) 87.9 ms per loop (50) 91.3 ms per loop <-> no cache 96.8 ms per loop  91.7 ms per loop \n","#-> 1.19 ms (remove tqdm) -> 16.7 s (add a loop) ->  16.1 s (prange)\n","%timeit -n 1 -r 5 survey_main_nbvec(short_survey_df, long_survey_df, y_val_cols) # + cache (10 rot) 109 ms per loop (50) 103 ms \n","\n","#-> 1.29, 1.18 ms ms (replace prange remove tqdm) -> 111 ms (add tqdm) -> 10.7 s (add loop prange)"],"metadata":{"id":"9IK9nxi-ypwP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n 1 -r 1 survey_main_torch() # 11 s per loop 7.22 s ->  9.64 s (add append data , tocpy()) -> 7.45 (remove append) -> 7.51 s (append nparr) -> 7.22 s per loop (append pr_list) -> 7.26 s (add sr)\n","# %timeit -n 1 -r 1 survey_main_torch_prod() # 7.19 s per loop -> 7.51 (list comprehension)\n","# %timeit -n 1 -r 1 survey_main_njit() # 1min 46s per loop"],"metadata":{"id":"mB1kJDVL22PQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["os.makedirs(survey_path, exist_ok=True)\n","survey_main_torch()"],"metadata":{"id":"W1XcSOhc2Jh7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### data analysis"],"metadata":{"id":"D0_wUELe8Qqn"}},{"cell_type":"code","source":["# %timeit posrank(short_survey_data) # 1.44 ms per loop\n","%timeit posrank_df(short_survey_data) #  9.36 ms"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JJT1YVr-8hmA","executionInfo":{"status":"ok","timestamp":1643763814610,"user_tz":-540,"elapsed":7288,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"abf9816c-35bb-4edc-f5d7-51520f997eba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100 loops, best of 5: 9.36 ms per loop\n"]}]},{"cell_type":"code","source":["# survey_path = './candlestick_concated/survey_df_v2/{}'.format(key).replace(\".ftr\", \"\")\n","survey_path = './candlestick_concated/survey_df_v2/{}_all'.format(key).replace(\".ftr\", \"\")\n","\n","short_survey_data = np.array([]).reshape(0,15)\n","long_survey_data = np.array([]).reshape(0,15)\n","stack_data = 0\n","chunk_cnt = 0 if stack_data == 1 else 'all'\n","while 1:\n","  try:\n","    print(chunk_cnt)\n","    short_survey_df = pd.read_feather(os.path.join(survey_path, 'short{}_'.format(chunk_cnt) + key), columns=None, use_threads=True)#.set_index(\"index\")\n","    long_survey_df = pd.read_feather(os.path.join(survey_path, 'long{}_'.format(chunk_cnt) + key), columns=None, use_threads=True)#.set_index(\"index\")\n","    short_survey_data = np.vstack([short_survey_data, short_survey_df.values])\n","    long_survey_data = np.vstack([long_survey_data, long_survey_df.values])\n","    chunk_cnt += 1\n","    if not stack_data:\n","      break\n","\n","  except Exception as e:\n","    print(e)\n","    break"],"metadata":{"id":"fHkJLJSOs7MZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644462085369,"user_tz":-540,"elapsed":7980,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"f769281e-53cf-47bf-d36e-5021cc20f18e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["all\n","can only concatenate str (not \"int\") to str\n"]}]},{"cell_type":"code","source":["# y_val_cols = ['fws_1', 'bs_1', 'fws_2', 'bs_2', 'hrel', 'habs', 'pr', 'pr_list', 'frq', 'sr', 'ep', 'tp', 'entry_idx', 'exit_idx']\n","fws_1_numb, bs_1_numb, fws_2_numb, bs_2_numb, hrel_numb, habs_numb, \\\n","pr_numb, pr_list_numb, frq_numb, sr_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb =\\\n"," get_col_idxs(long_survey_df, ['fws_1', 'bs_1', 'fws_2', 'bs_2', 'hrel', 'habs', 'pr', 'pr_list', 'frq', 'sr', 'ep', 'tp', 'entry_idx', 'exit_idx'])"],"metadata":{"id":"rUV4KtSUMlld","executionInfo":{"status":"ok","timestamp":1644462085370,"user_tz":-540,"elapsed":7,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["def posrank2(survey_data, col_numb, comp_value, sample_ratio=1, up=True, sort=True):  # no_inf covered by frq_col - more specific (sr inf gen. by frq=1)\n","  sample_len_ = int(len(survey_data) * sample_ratio)\n","  is_ = survey_data[:sample_len_]\n","  oos_ = survey_data[sample_len_:]\n","\n","  if up:\n","    t_idx = (is_[:, col_numb] >= comp_value) & (oos_[:, col_numb] >= comp_value)\n","    print(t_idx) \n","    pos_data = survey_data[(is_[:, col_numb] >= comp_value) & (oos_[:, col_numb] >= comp_value)]\n","  else:\n","    pos_data = survey_data[(is_[:, col_numb] < comp_value) & (oos_[:, col_numb] < comp_value)] \n","  if sort:\n","    return pos_data[(-pos_data[:, col_numb]).argsort()]\n","  else:\n","    return pos_data"],"metadata":{"id":"avr0WLDdj1mS","executionInfo":{"status":"ok","timestamp":1644462170808,"user_tz":-540,"elapsed":331,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["#     threshold vars.     #\n","#     1. frq 기반, sr\n","short_posrank_data = posrank2(posrank2(short_survey_data, sr_numb, 0), frq_numb, 5, sort=False)\n","long_posrank_data = posrank2(posrank2(long_survey_data, sr_numb, 0), frq_numb, 5, sort=False)"],"metadata":{"id":"0ZAYI_4KZDCP","colab":{"base_uri":"https://localhost:8080/","height":338},"executionInfo":{"status":"error","timestamp":1644462172698,"user_tz":-540,"elapsed":319,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"e3527096-31b1-465a-fbe8-75b9e9378f59"},"execution_count":20,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-20-b44bb354f110>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#     threshold vars.     #\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m#     1. frq 기반, sr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mshort_posrank_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mposrank2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mposrank2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mshort_survey_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msr_numb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfrq_numb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mlong_posrank_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mposrank2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mposrank2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlong_survey_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msr_numb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfrq_numb\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msort\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-19-2b2ed00340a7>\u001b[0m in \u001b[0;36mposrank2\u001b[0;34m(survey_data, col_numb, comp_value, sample_ratio, up, sort)\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mup\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m     \u001b[0mt_idx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mis_\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol_numb\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mcomp_value\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m&\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0moos_\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol_numb\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mcomp_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mt_idx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m     \u001b[0mpos_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msurvey_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mis_\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol_numb\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mcomp_value\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m&\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0moos_\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcol_numb\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mcomp_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: operands could not be broadcast together with shapes (523203,) (0,) "]}]},{"cell_type":"code","source":["_ = [idep_plot_torch(*multi_mr_torch(*pos_data[1:7])) for pos_data in long_posrank_data]    # 현재 v1 기준으로 param 저장되어있음"],"metadata":{"id":"FXjkLeOqKCFR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# # long_posrank_data[[0], [pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb]].shape\n","# # long_posrank_data[0]\n","# # long_survey_data.shape\n","# short_sample_survey_data[:, 0]"],"metadata":{"id":"2QRRPJyCUTqX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ------------ get sample_data - latency 25s ------------ #\n","len_df = len(res_df)\n","sample_len = int(len_df * 0.5)\n","# ------ on survey_data ------ #\n","short_sample_survey_data = to_sample_data(short_survey_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","long_sample_survey_data = to_sample_data(long_survey_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","\n","# ------ on posrank_data ------ #\n","# short_posrank_data = to_sample_data(short_posrank_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","# long_posrank_data = to_sample_data(long_posrank_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)"],"metadata":{"id":"0xdzynf2I96C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644223704150,"user_tz":-540,"elapsed":63521,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"69bcfe0c-8f88-4214-dd77-b667fbeddb0a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_idep.py:33: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  np.array([sample_pr, sample_frq, sample_sr, sample_pr_list, sample_ep, sample_tp, sample_entry_idx, sample_exit_idx]).T\n"]}]},{"cell_type":"code","source":["# ------ sample_posrank_data ------ #\n","short_posrank_data = posrank(posrank(short_sample_survey_data, sr_numb, 0.5), frq_numb, 5, sort=False)  # --> posrank() 는 data slicing 이 살행됨\n","long_posrank_data = posrank(posrank(long_sample_survey_data, sr_numb, 0.5), frq_numb, 5, sort=False)\n","\n","# short_posrank_data = posrank(posrank(short_sample_survey_data2, sr_numb, 0.5), frq_numb, 5, sort=False)  # --> posrank() 는 data slicing 이 살행됨\n","# long_posrank_data = posrank(posrank(long_sample_survey_data2, sr_numb, 0.5), frq_numb, 5, sort=False)\n","\n","# short_posrank_data = posrank(posrank(short_posrank_data, sr_numb, 0.6, up=False, sort=False), frq_numb, 7, up=False, sort=False)\n","# long_posrank_data = posrank(posrank(long_posrank_data, sr_numb, 0.6, up=False, sort=False), frq_numb, 7, up=False, sort=False)"],"metadata":{"id":"y32Da5j8r7a5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ------ restoration ------ #\n","# short_posrank_data = short_survey_data[short_posrank_data[:, 0].astype(np.int64)]\n","# long_posrank_data = long_survey_data[long_posrank_data[:, 0].astype(np.int64)]\n","\n","short_posrank_data = short_sample_survey_data2[short_posrank_data[:, 0].astype(np.int64)]\n","long_posrank_data = long_sample_survey_data2[long_posrank_data[:, 0].astype(np.int64)]"],"metadata":{"id":"GCH3DZLpxhss"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ------------ get sample_data - latency 25s ------------ #\n","len_df = len(res_df)\n","sample_len = int(len_df * 0.7)\n","# ------ on survey_data ------ #\n","short_sample_survey_data2 = to_sample_data(short_survey_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","long_sample_survey_data2 = to_sample_data(long_survey_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","\n","# ------ on posrank_data ------ #\n","# short_posrank_data = to_sample_data(short_posrank_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)\n","# long_posrank_data = to_sample_data(long_posrank_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-C3JhjY46nF9","executionInfo":{"status":"ok","timestamp":1644223777953,"user_tz":-540,"elapsed":71331,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"c9713951-5c11-44e8-c0e6-ef999c816a95"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_idep.py:33: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  np.array([sample_pr, sample_frq, sample_sr, sample_pr_list, sample_ep, sample_tp, sample_entry_idx, sample_exit_idx]).T\n"]}]},{"cell_type":"code","source":["print(len(short_posrank_data), len(long_posrank_data))\n","top_len = 5000\n","#   unique 가 되기 위한 idx 를 추출해, hstack 된 pr_data 에 적용 - pr_list, obj data 가 sync.됨  #\n","_, short_unq_idx = np.unique(np.hstack(short_posrank_data[:top_len, exit_idx_numb]), return_index=True)\n","_, long_unq_idx = np.unique(np.hstack(long_posrank_data[:top_len, exit_idx_numb]), return_index=True)\n","# print(len(short_unq_idx))\n","\n","short_pr = np.hstack(short_posrank_data[:top_len, pr_list_numb])[short_unq_idx]\n","long_pr = np.hstack(long_posrank_data[:top_len, pr_list_numb])[long_unq_idx]\n","short_ep_loc_obj = [np.hstack(short_posrank_data[:top_len, col_])[short_unq_idx] for col_ in [ep_numb, tp_numb, entry_idx_numb, exit_idx_numb]] \n","long_ep_loc_obj = [np.hstack(long_posrank_data[:top_len, col_])[long_unq_idx] for col_ in [ep_numb, tp_numb, entry_idx_numb, exit_idx_numb]] \n","\n","s_vline, l_vline = None, None\n","# s_vline, l_vline = 786, 333\n","idep_plot_torch(short_pr, long_pr, short_ep_loc_obj, long_ep_loc_obj, to_cpu=False, s_vline=s_vline, l_vline=l_vline)   # lidq 제외하고 load_data's res_plot 임"],"metadata":{"id":"4_umXRcK57Af","colab":{"base_uri":"https://localhost:8080/","height":557},"executionInfo":{"status":"ok","timestamp":1644224070459,"user_tz":-540,"elapsed":2126,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"83959fcf-cc08-489d-df7f-2a99c9e11359"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["782 1158\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x576 with 4 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["##### future & real data survey"],"metadata":{"id":"m3MbAjTtnqlP"}},{"cell_type":"code","source":["future_short_posrank_idx = short_posrank_data[:, 0]\n","future_long_posrank_idx = long_posrank_data[:, 0]"],"metadata":{"id":"FTPi1ZCojkIC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["future_short_posrank_idx"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NlEoLeHFk8CG","executionInfo":{"status":"ok","timestamp":1644210423430,"user_tz":-540,"elapsed":2,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"ccd2de59-c9ba-404b-b76d-4015ab273a61"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([76379, 107901, 500693, ..., 441852, 50408, 481235], dtype=object)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["real_short_posrank_idx = short_posrank_data[:, 0]\n","real_long_posrank_idx = long_posrank_data[:, 0]"],"metadata":{"id":"98b_rv8LlYGP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["real_short_posrank_idx"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HMxf_UIOlerl","executionInfo":{"status":"ok","timestamp":1644210549449,"user_tz":-540,"elapsed":308,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"4ab2fba1-1f49-496e-e1ac-c2398ff5dfa2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([326182, 403064, 54519, ..., 86381, 96303, 515874], dtype=object)"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["u, c = np.unique(np.hstack((future_short_posrank_idx, real_short_posrank_idx)), return_counts=True)\n","valid_short_idx = u[c > 1]\n","u, c = np.unique(np.hstack((future_long_posrank_idx, real_long_posrank_idx)), return_counts=True)\n","valid_long_idx = u[c > 1]"],"metadata":{"id":"SaJCg9xJljGA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["short_posrank_data = short_survey_data[valid_short_idx.astype(np.int64)]\n","long_posrank_data = long_survey_data[valid_long_idx.astype(np.int64)]"],"metadata":{"id":"giUOyHwVmIS4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["target_numbs = [fws_1_numb, bs_1_numb, fws_2_numb, bs_2_numb, hrel_numb, habs_numb, sr_numb, frq_numb]\n","hist_cols = ['fws_1_numb', 'bs_1_numb', 'fws_2_numb', 'bs_2_numb', 'hrel_numb', 'habs_numb', 'sr_numb', 'frq_numb']\n","long_posrank_data[:, target_numbs]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YyG098y6nyR9","executionInfo":{"status":"ok","timestamp":1644211640316,"user_tz":-540,"elapsed":315,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"a00469f7-566b-4ef1-e238-9476c0ac2cf1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-11, -1, -11, ..., 7, 0.7475382983075765, 9],\n","       [-11, -1, -11, ..., 1, 0.6292993916319285, 7],\n","       [-11, -1, -11, ..., 8, 0.5209988612094165, 12],\n","       ...,\n","       [10, -1, -11, ..., 3, 0.6615746140083638, 6],\n","       [10, -1, -11, ..., 5, 0.7111981289478313, 7],\n","       [10, 9, -11, ..., -1, 0.7228713975757344, 8]], dtype=object)"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["long_hist_df = pd.DataFrame(long_posrank_data[:, target_numbs], columns=hist_cols, dtype=float)"],"metadata":{"id":"BFQTYOK2pdKV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig = plt.figure(figsize = (20,20))\n","ax = fig.gca()\n","long_hist_df.hist(ax = ax)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"NC2C5h-_pZn0","executionInfo":{"status":"ok","timestamp":1644212596114,"user_tz":-540,"elapsed":1449,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"2d546971-20c3-4bf7-b937-ecfab8bdb1b7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1440x1440 with 9 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["#### save res_bin & survey_data"],"metadata":{"id":"4Uj1fcU-KuL4"}},{"cell_type":"code","source":["# # print(\"({:.2%})\".format(0.12))\n","# t_dic = {}\n","# t_dic['1'] = None\n","# t_dic\n","t_list = [1, 2, 3]\n","# t_list = t_list.pop()\n","t_list.pop()\n","t_list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rcgAiaxAjcUz","executionInfo":{"status":"ok","timestamp":1644294096040,"user_tz":-540,"elapsed":392,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"0f22fba3-1da3-4f6e-920f-59e8f0f1bfc5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[1, 2]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["pre_fix = \"ID3_1_survey\"\n","# data_list = [short_survey_data, long_survey_data]\n","\n","# pre_fix = \"ID3_1_all_05_5_SOLUSDT\"\n","# data_list = [short_posrank_data[:top_len, :6], long_posrank_data[:top_len, :6]]\n","\n","bin_path_list = [os.path.join(current_path, \"IDE/res_bin\", pre_fix + fname) for fname in [\"_short.bin\", \"_long.bin\"]]"],"metadata":{"id":"3MTNpN0nPM-w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["_ = [save_bin(fname, data) for fname, data in zip(bin_path_list, data_list)]"],"metadata":{"id":"HqdvVxLrFace","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1644034129894,"user_tz":-540,"elapsed":2,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9c07a8de-80d4-4621-feb8-895c12d7fced"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Colab Notebooks/JnQ/IDE/res_bin/ID3_1_all_05_5_SOLUSDT_short.bin saved !\n","/content/drive/My Drive/Colab Notebooks/JnQ/IDE/res_bin/ID3_1_all_05_5_SOLUSDT_long.bin saved !\n"]}]},{"cell_type":"code","source":["# short_bin, long_bin = [load_bin(bin_path) for bin_path in bin_path_list]\n","\n","a_row = load_bin(bin_path_list[0])[0:2]\n","print(a_row)\n","# print(a_row.shape)\n","\n","test_arr = np.array([-11.0, 5.0, -11.0, 7, 13, 3])\n","any(np.equal(test_arr, a_row).all(axis=1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8cCFR0AF-ioq","executionInfo":{"status":"ok","timestamp":1643972938758,"user_tz":-540,"elapsed":330,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9219d468-7a88-4266-b870-0e324d2cfda2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[-11 5 -11 7 13 3]\n"," [-11 7 9 -1 5 1]]\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["# ------ save stacked data ------ #\n","# key = '2022-02-04 SOLUSDT_1m.ftr'\n","# key = '2022-01-10 ETHUSDT_1m.ftr'\n","\n","y_val_cols = ['fws_1', 'bs_1', 'fws_2', 'bs_2', 'hrel', 'habs', 'pr', 'pr_list', 'frq', 'sr', 'ep', 'tp', 'entry_idx', 'exit_idx']\n","pd.DataFrame(short_survey_data, columns=y_val_cols).reset_index().to_feather(os.path.join(survey_path, 'shortall_' + key), compression='lz4')\n","pd.DataFrame(long_survey_data, columns=y_val_cols).reset_index().to_feather(os.path.join(survey_path, 'longall_' + key), compression='lz4')"],"metadata":{"id":"lnsworEsC2ia"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### legacy"],"metadata":{"id":"5SsSxOEY5p7B"}},{"cell_type":"code","source":["%timeit [load_bin(bin_path) for bin_path in bin_path_list]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ULtVS1XniW9s","executionInfo":{"status":"ok","timestamp":1643958082775,"user_tz":-540,"elapsed":2257,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9f1a5235-b4fc-462f-8bf8-3d4518ee051c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["100 loops, best of 5: 2.76 ms per loop\n"]}]},{"cell_type":"code","source":["%timeit -n1 -r1 to_sample_data(long_survey_data, sample_len)  # 25.7 s per loop"],"metadata":{"id":"t5iSduGHZw9O"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n1 -r2 [[get_acc_pr(pr_list_), len(pr_list_), sharpe_ratio(pr_list_)] for pr_list_ in sample_pr_list] # 15.6 s per loop\n","%timeit -n1 -r2 obj_thing() #/ 14.4 s per loop 14.1 s per loop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mk6WF_Ba_llk","executionInfo":{"status":"ok","timestamp":1644133697677,"user_tz":-540,"elapsed":59835,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"c0f23042-da7c-412d-ff77-71398b2b1668"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 2: 15.5 s per loop\n","1 loop, best of 2: 14.1 s per loop\n"]}]},{"cell_type":"code","source":["vec_get_acc_pr = np.vectorize(get_acc_pr)\n","# %timeit -n1 -r5 np.vectorize(get_acc_pr)(sample_pr_list)   # 1.19s 1.36 s per loop\n","%timeit -n1 -r5 vec_get_acc_pr(sample_pr_list)   # 1.19s 1.36 s per loop\n","%timeit -n1 -r5 [get_acc_pr(pr_list_) for pr_list_ in sample_pr_list]   # 1.53s 1.53 s per l 1.16 s per loop"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2aEIQPg8nsU","executionInfo":{"status":"ok","timestamp":1644133391112,"user_tz":-540,"elapsed":12415,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"c0979a15-2c6a-4041-bc3e-ba404fec00fd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/numpy/core/_asarray.py:83: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray\n","  return array(a, dtype, copy=False, order=order)\n"]},{"output_type":"stream","name":"stdout","text":["1 loop, best of 5: 1.22 s per loop\n","1 loop, best of 5: 1.16 s per loop\n"]}]},{"cell_type":"code","source":["%timeit -n1 -r100 posrank_data[-1, :6] in posrank_data[:, :6]\n","%timeit -n1 -r100 posrank_data[0, :6] in posrank_data[:, :6]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2-1Jeqy4oRi","executionInfo":{"status":"ok","timestamp":1643863337704,"user_tz":-540,"elapsed":296,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"2e97a9fc-1134-47b2-da9c-c6f8292c367b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1 loop, best of 100: 738 µs per loop\n","1 loop, best of 100: 753 µs per loop\n"]}]},{"cell_type":"code","source":["# ------ non_survey oos platform ------ #\n","#    2. apply to all_data range\n","#       => sliced_posrank_data 의 param. 기준으로 org_survey_data restore (sliced 된 data restore)\n","def get_slice_len(arr_, thresh):\n","  return np.sum(arr_ < thresh)\n","\n","def slice_data(data_, slice_len_list):\n","  return [a_data[:slice_len] for a_data, slice_len in zip(data_, slice_len_list)]\n","\n","def sharpe_ratio(pr_arr, risk_free_rate=0.0, multiply_frq=False):\n","  if len(pr_arr) == 0:\n","    return 0\n","  else:\n","    pr_pct = pr_arr - 1\n","    sr_ = (np.mean(pr_pct) - risk_free_rate) / np.std(pr_pct)\n","    if multiply_frq:\n","        sr_ = len(pr_pct) ** (1 / 2) * sr_\n","    return sr_\n","\n","def get_acc_pr(pr_list_):\n","  if len(pr_list_) == 0:\n","    return 1\n","  else:\n","    return np.cumprod(pr_list_)[-1]\n","\n","def to_sample_data(survey_data, sample_len, pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb):\n","  slice_len_list = [get_slice_len(a_data, sample_len) for a_data in survey_data[:, exit_idx_numb]]\n","  sample_pr_list, sample_ep, sample_tp, sample_entry_idx, sample_exit_idx = [slice_data(survey_data[:, numb], slice_len_list) \\\n","                                                                            for numb in [pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb]]\n","  sample_pr = [get_acc_pr(pr_list_) for pr_list_ in sample_pr_list]  # len = 0 을 포함하는 방향\n","  sample_frq = [len(pr_list_) for pr_list_ in sample_pr_list]\n","  sample_sr = [sharpe_ratio(pr_list_) for pr_list_ in sample_pr_list]\n","\n","  sample_survey_data = survey_data.copy()\n","  sample_survey_data[:, [pr_numb, frq_numb, sr_numb, pr_list_numb, ep_numb, tp_numb, entry_idx_numb, exit_idx_numb]] = \\\n","    np.array([sample_pr, sample_frq, sample_sr, sample_pr_list, sample_ep, sample_tp, sample_entry_idx, sample_exit_idx]).T\n","\n","  return sample_survey_data"],"metadata":{"id":"J5cJTp49xuJ1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["i = -1\n","h_c_itv = '15T'\n","ep_loc_data = res_df[score_cols(h_c_itv)].to_numpy()[[i]]\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_data = res_df[score_cols(h_c_itv)].to_numpy()[[i - to_itvnum(h_c_itv)]]\n","fws2, bs2, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","\n","ep_loc_data = res_df[h_ratio_cols(h_c_itv)].to_numpy()[[i]]\n","hrel, habs = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)"],"metadata":{"id":"NzgzTVzTApis"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["target_arr = np.array([fws, bs, fws2, bs2, hrel, habs])//10\n","# target_arr = np.hstack(target_arr)\n","# target_arr = np.array([target_arr])\n","target_arr = target_arr.reshape(-1,)\n","print(target_arr)\n","print(target_arr.shape)\n","load_arr = np.array([[9, 7, -8, 6, 3, 2], [9, 7, -8, 6, 3, 1]])\n","print(load_arr)\n","\n","# print(np.array_equal(target_arr, load_arr))\n","# print((target_arr.tolist() in load_arr.tolist()))\n","\n","print(len(load_arr.shape))\n","print(any(np.equal(target_arr, load_arr).all(axis=1)))\n","print(\"{}\".format(target_arr))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P4R5cC15Ea1u","executionInfo":{"status":"ok","timestamp":1643973180124,"user_tz":-540,"elapsed":332,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"22c36cfe-1fa1-4918-9deb-e3bf03b3c838"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[ 9.  7. -8.  6.  3.  2.]\n","(6,)\n","[[ 9  7 -8  6  3  2]\n"," [ 9  7 -8  6  3  1]]\n","2\n","True\n","[ 9.  7. -8.  6.  3.  2.]\n"]}]},{"cell_type":"code","source":["long_unq_idx.sort()\n","long_unq_idx"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CpmRWgbrT0wI","executionInfo":{"status":"ok","timestamp":1643937545710,"user_tz":-540,"elapsed":329,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"2c6e4f45-f84d-48b7-ece2-3d9145e2d208"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([    0,     1,     2, ..., 16350, 16351, 16354])"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["# print(np.cumprod(posrank_data[:top_len, -5])[-1])\n","\n","comb_pr = np.ones(len_df)  # - exit_idx 의 근원은 np_timeidx => res_df\n","for p_i in long_posrank_data[:top_len]:\n","  comb_pr[p_i[exit_idx_numb]] = p_i[pr_list_numb]\n","  # comb_pr[p_i[-1][-1]] = p_i[-4]\n","\n","#   exit_idx 독립성을 증명하기 위해서는, total acc_pr 이 동일한지 확인\n","cump_pr = np.cumprod(comb_pr)\n","print(cump_pr[-1])\n","plt.plot(cump_pr)\n","plt.show()"],"metadata":{"id":"lxvQmkH2xCuL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["comb_pr = np.hstack(long_posrank_data[:top_len, pr_list_numb])[unq_idx]\n","cump_pr = np.cumprod(comb_pr)\n","print(cump_pr[-1])\n","plt.plot(cump_pr)\n","plt.show()"],"metadata":{"id":"9qDvII3ZIwvS","colab":{"base_uri":"https://localhost:8080/","height":293},"executionInfo":{"status":"ok","timestamp":1643933959335,"user_tz":-540,"elapsed":344,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"8a443a40-618c-436f-95eb-e606f88abc6f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["15184314260398.514\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["# short_pr, long_pr, ep_loc_short_obj, ep_loc_long_obj = multi_mr_torch(*posrank(short_survey_data)[0][:-1])\n","# # ep_loc_short_entry_idx, ep_loc_short_exit_idx\n","# # print(ep_loc_short_obj[0][0])\n","# short_pr = gpu_to_cpu(short_pr)\n","# long_pr = gpu_to_cpu(long_pr)\n","# ep_loc_short_obj = [gpu_to_cpu(res_) for res_ in ep_loc_short_obj]\n","# ep_loc_long_obj = [gpu_to_cpu(res_) for res_ in ep_loc_long_obj]"],"metadata":{"id":"a-urqP0V6JtD"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### plot_check"],"metadata":{"id":"aXkkN1A9ZyBY"}},{"cell_type":"code","source":["# ------ data preparation ------ #\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)], divider, rounding_mode='floor')  # - copy() 됨, 독립변수\n","ep_loc_data[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws, bs, _ = np.split(ep_loc_data, ep_loc_data.shape[-1], axis=1)\n","fws = torch.div(fws, 10, rounding_mode='floor') \n","\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1 - to_itvnum(h_c_itv)\n","ep_loc_data2 = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_cols_idxs)], divider, rounding_mode='floor')\n","ep_loc_data2[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","fws2, bs2, _ = np.split(ep_loc_data2, ep_loc_data2.shape[-1], axis=1)\n","fws2 = torch.div(fws2, 10, rounding_mode='floor') \n","\n","divider = 10\n","ep_loc_row_idx = short_entry_idx - 1\n","ep_loc_data3 = torch.div(torch_data[np.ix_(ep_loc_row_idx, candle_ratio_cols_idxs)], divider, rounding_mode='floor')\n","ep_loc_data3[:np.sum(ep_loc_row_idx < 0)] = np.nan\n","hrel, habs = np.split(ep_loc_data3, ep_loc_data3.shape[-1], axis=1)"],"metadata":{"id":"_gxKMSRvybK3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# [idep_plot_torch_v2(*multi_mr_torch(0, x, 0, -1, -1, -1)) for x in np.arange(-1, 10, 1)]\n","\n","short_pr, long_pr, short_ep_loc_obj, long_ep_loc_obj = multi_mr_torch(0, 1, 0, 7, -1, -1)\n","short_pr = gpu_to_cpu(short_pr)\n","long_pr = gpu_to_cpu(long_pr)\n","short_ep_loc_obj = [gpu_to_cpu(res_) for res_ in short_ep_loc_obj]\n","long_ep_loc_obj = [gpu_to_cpu(res_) for res_ in long_ep_loc_obj]\n","idep_plot_torch_v2(short_pr, long_pr, short_ep_loc_obj, long_ep_loc_obj, to_cpu=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"SmiBbjLEy-On","executionInfo":{"status":"ok","timestamp":1644399838852,"user_tz":-540,"elapsed":1882,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"9a74f127-8f05-41e3-c527-b4da2ea37ac7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x576 with 4 Axes>"]},"metadata":{}}]},{"cell_type":"code","source":["# ------------------ plot_config ------------------ #\n","save_plot = 0\n","tf_plot = 1       # true - false plot\n","pr_sort = 1       # 이상한 체결 확인하기 좋음\n","pr_descend = 1    # 1 -> 내림차순\n","position = 1      # -1 / 1 / 0 (short / long / both)\n","front_plot = 0    # ide -> 1 / logic 검수 -> 0  \"limit plot_range til loc_set idx = replacing x_max value\"\n","# wl_case = 1     # 1 / -1 / 0 (win loss study) --> oid\n","\n","x_max = 500\n","x_margin = x_max / 30\n","\n","prev_plotsize = 130\n","post_plotsize = 120\n","\n","inversion = 0\n","hedge = 0\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","\n","# ------------ 한 방향에 대해 plot_check 함 (by position var.) ------------ #\n","#     Todo - pr & obj sorting\n","\n","#   obj by position  \n","if position == -1:\n","  pos_str = \"SELL\"\n","  pr = short_pr\n","  ep_loc_obj = short_ep_loc_obj\n","else: # both option currently not supported\n","  pos_str = \"BUY\"\n","  pr = long_pr\n","  ep_loc_obj = long_ep_loc_obj\n","\n","# ------------ make col_idx_dict config ------------ #\n","ohlc_cols = ['open', 'high', 'low', 'close']\n","h_c_itv_list = ['15T', 'H', '4H']\n","hoc_cols = [h_oc_cols(h_c_itv) for h_c_itv in h_c_itv_list]\n","\n","col_idx_dict = \\\n","{\n","  \"ohlc_col_idxs\": get_col_idxs(res_df, ohlc_cols),\n","  \"hoc_col_idxs_list\": [get_col_idxs(res_df, hoc_col) for hoc_col in hoc_cols]\n","}\n","print(col_idx_dict)\n","pr_msg = \"%s\\n {} ~ {} -> {:.5f}\\n lvrg : {}\\n fee : {:.4f}\" % (pos_str)  # pos_str 으로 이곳에서 정의함\n","\n","# ------------------ data chunknize ------------------ #\n","left_end_idx = ep_loc_obj[2] - prev_plotsize\n","right_end_idx = ep_loc_obj[3] + post_plotsize\n","\n","idep_idx_list = [left_end_idx, right_end_idx, pr, *ep_loc_obj]\n","np_plot_params = np.array([arr_[np.sum(left_end_idx < 0):] for arr_ in idep_idx_list]).T"],"metadata":{"id":"AVt2POEXZzg7","executionInfo":{"status":"ok","timestamp":1644399846378,"user_tz":-540,"elapsed":468,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"cc857cce-9ffd-4fc5-e0a1-2882bdcf4ed8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'ohlc_col_idxs': [43, 44, 45, 46], 'hoc_col_idxs_list': [[57, 60], [61, 64], [65, 68]]}\n"]}]},{"cell_type":"code","source":["# %timeit -n 1 -r 5 candle_plot(sliced_data[0][:,col_idxs], ax)\n","# %timeit -n 1 -r 5 candle_plot_nb(sliced_data[0][:,col_idxs], ax)"],"metadata":{"id":"8YR8-JUgu54V"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### plot"],"metadata":{"id":"vfnLZK-ZBeL9"}},{"cell_type":"code","source":["[plot_check(data, *np_plot_param_, config.lvrg_set.leverage, fee, pr_msg, x_max, x_margin, front_plot, **col_idx_dict) for np_plot_param_ in np_plot_params]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Roy40BmByyZc","executionInfo":{"status":"error","timestamp":1644399864480,"user_tz":-540,"elapsed":16942,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"29bd1d38-27f1-46a1-d4e4-ada6139ef4f9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAuYAAAL3CAYAAADGE4BtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde1zU1b7/8fegSKCAXFRUlNS8oR13lpXlpdRjZXnZRqlloZVpVnt32e2yY2ZlWu1d7Tql2U2rn5qlZVaeLjtNrWxnWZYCamYgioagCM6kqOv3B84EymWAmfl+YV7PHuvhMN/LZ8042IfFZ63lkGQEAAAAwFIhVncAAAAAAIk5AAAAYAsk5gAAAIANkJgDAAAANkBiDgAAANgAiTkAAABgAyTmAAAAgA2QmAOARXbs2CGn06nCwkLl5+frgw8+UGJioiRp1apVuvHGG8uc379/f+3cuVOStHr1ak2bNq3M8euuu04///yzwsPDA/MCAAA+RWIOABYaOnSoIiMj1bJlS+3du1f/+7//69V1N910k+68804lJydLkuLj4/Xkk0/qpptuksvl8meXAQB+QmIOADZw+PBhLVmyxJNoV2Xbtm169NFH9corr8jhcOjZZ5/V0qVL9fnnn/u3owAAvyExBwAbCA8P16hRo/T11197fc1TTz0lh8OhJUuW6MILL9Q999zjxx4CAPytodUdAIBgtmzZMh09elSNGzdWbm6uLrnkEq+vPX78uG644QZt3rxZw4cPV1FRkR97CgDwN0bMAcBCI0aMUExMjE477TTddtttWr16tVq0aKGjR48qNDS0zLmhoaEqLi4u81xaWpokafPmzQHrMwDAP0jMAcAGjh8/rnfffVfHjh1Tnz59lJWVpdNPP73MOe3atVNmZqY1HQQA+B2JOQDYxLBhwxQTE6P09HQtXrxY48ePV69evSRJHTt21J133qk333zT4l4CAPyFGnMAsND777+vY8eOyRijzMxMpaamKi0tTWlpabrvvvs0b948tWnTRr/99ptefvllvfjii1Z3GQDgJw5JxupOAAAAAMGOUhYAAADABkjMAQAAABsgMQcAAABsgMQcAAAAsAEScwAAAMAGSMwBVOrhhx/Wjz/+qOLiYj344INljiUkJOi9997Trl27ZIxRUlJSmeObNm1SYWGhpxUXF2v58uWe48YYFRUVeY6/9NJLnmMPPvigjhw5Uub6du3aeXXtyWJiYvTOO++oqKhIv/76q8aMGVPbt+UUF110kVauXKkDBw5ox44dpxyv7H2cMmVKmdfpdDp17NgxxcXFSZLmzZunw4cPlzknJOSPf77Dw8P1/PPPKzc3VwcOHNDq1as9x6KjozV//nzt3btXe/fuPSX2yQYMGKD09HQdOnRIK1euVNu2bWvztnilqveuOn286qqr9OWXX+rQoUNatWrVKdfOnTtXGRkZOnbsmFJTU085fscddygnJ0cFBQV65ZVX1KhRozLH//KXv+iXX35RUVGR0tLS1LFjxxq8YgComKHRaLSK2vXXX28uvfRSs2zZMvPggw+WOda8eXNzyy23mPPPP98YY0xSUlKl9/rll1/Mdddd5/naGGM6dOhQ7rkPPvigeeONNyq8V2XXntwWLlxo3nzzTdO4cWNz4YUXmgMHDpjk5GSfvk+9evUyY8eONRMmTDA7duyo1vtY3mv/7LPPPF/PmzfPPPLIIxWe/8Ybb5hFixaZ+Ph4ExISYnr27Ok59uqrr5q33nrLhIeHm6SkJPPzzz+bcePGlXufuLg4c+DAAZOSkmLCwsLME088YdatW+f1exATE2MaNmzo8/euOn0cOHCgueqqq8wDDzxgVq1adcr1kydPNgMGDDDr1683qampZY4NHjzY7NmzxyQnJ5umTZuaVatWmVmzZnmO33jjjWbjxo2ma9euRpJp3769iYmJ8enniEajBX2zvAM0Gq0OtDfeeKPChLJBgwZVJub9+vUzBw8eNBEREZ7nApGYR0REmMOHD5uOHTt6nnv99dfLJFy+bAMHDqw0uazsfXS37du3m+uvv97zdWWJeefOnU1BQYGJjIws93hubq4555xzPF9PmTLFrFmzptxzJ0yYYL788ssy753T6TSdO3f26rVfffXVZs+ePeaf//yn6datm8/fu+r08cYbbyw3MXe3tWvXnpKYL1iwwDz66KOerwcMGGBycnKMJONwOExWVpYZMGCAXz43NBqNJslQygIgIFJTU7V06VI5nc4yz69Zs0Y5OTlaunTpKaUwQ4cOVV5enjZt2qRJkyadcs/KrnXr1KmTjh49qm3btnme27hxo7p16+aDV+V7ffv2VfPmzbV06dIyz0+ePFl5eXn69ttvNXLkSM/z5557rjIzM/XQQw8pNzdXP/74Y5njkuRwOMo87t69e7mxu3Xrpo0bN3q+djqd2r59u9fv1VtvvaWBAwfq+PHj+uSTT/TNN9/olltuUdOmTb263hu17WN17r1x40YlJCQoNjZWiYmJatOmjbp3766srCz98ssvmj59epn3FgBqi8QcgN+Fh4crJSVF8+fPL/N8v379dPrpp6tLly7avXu3PvjgAzVo0EBSSZLXtWtXNWvWTBMmTNC0adM0evRor64trUmTJjp48GCZ5woKChQZGVluX6Ojo/XCCy8oKytL6enpmjp1qtq1a6c2bdropZde8nvNdWpqqpYsWaJDhw55nnv22WfVsWNHNW/eXA888IDmz5+vCy64QJKUmJioM888UwUFBWrVqpVuu+02vfbaa+rSpYsk6aOPPtJ9992nJk2aqEOHDrrhhhsUERFRbuwmTZqooKCgzHOVvVfl2bx5s/7+97+rTZs2mj59ui666CLt2LFDixYtqtZ9KuKLPnp7b/fjyMhIJSYmSpIGDx6sM888UxdffLHGjBmjG2+8sdZxAcCNxByA340cOVL5+fllJiVK0tq1a1VcXKyCggL99a9/Vbt27dS1a1dJUnp6unJycnT8+HGtW7dOzzzzjFJSUry6trSioiJFRUWVeS4qKkqFhYXl9vXSSy/Vhg0b1KFDB40YMUJxcXH64osv9NFHH+mHH35QVlZWbd+OCoWHh+uqq67Sa6+9Vub577//Xvn5+Tp27Jj+7//+TwsWLPCMirtcLh05ckQzZsxQcXGx1qxZo1WrVmnw4MGSSiYrulwubdu2Te+9954WLVqk7OzscuNX57265pprPBNRV6xYccrx48eP66efftLGjRuVn5+v7t27KzQ0tEbvS037WNt7ux8XFhbK5XJJkp544gkVFBQoMzNTc+fO1ZAhQ2odFwDcSMwB+F1qaqpef/31Ks8zxlRYGlDZscqOb926VQ0bNtQZZ5zhea5Hjx7avHlzufd566239OKLL6q4uFhbtmzRnXfeqdatW6tbt256/vnnq3wNtfHnP/9Z+fn5+vzzzys9r/Rr/fHHH8s97rZ//36NHTtWLVu2VPfu3RUSEqJvvvmm3Ptu3rxZPXr08HwdERGhDh06lPteLVy4UJGRkYqMjCyTnDZu3Fipqan67LPPtGHDBrVu3VqjRo3SmWeeqfz8/Epflzeq08fa3rtHjx7as2eP8vPztWXLFh0+fLjMe1v6MQD4iuWF7jQazb6tYcOGJiwszCxYsMA88sgjJiwszISEhHiOh4WFmYiICGOMMZ06dTJhYWFlrm/durUpLi427du3L/N8cnKy6dGjhwkJCTGNGzc2Tz/9tMnIyPCs6jFs2DDTtGlTI5Ws2pGdne2ZEFnVtSe3RYsWmYULF5qIiAhzwQUX+GVVFofDYcLCwsyll15qfv31VxMWFmZCQ0O9fh8lmY8//tg89NBDp9z7yiuvNI0bNzYOh8P893//tzl48KDp37+/577btm0zU6dONQ0aNDAXXHCBOXjwoGcyZPv27U1sbKwJCQkxl156qcnNza3wtcfHx5sDBw6YkSNHmrCwMPPYY49Va1WWSy65xBQUFJgVK1aYq6++2jRq1Mgn7111+hgSEmLCwsLMxIkTzerVq01YWFiZz0VoaKgJCwszX3zxhbnppptMWFiYcTgcnv7n5OSYrl27mujoaPPZZ5+VmST82muvmffff980adLEtG7d2qSnp5sbbrjB8u9RGo1Wr5rlHaDRaDZu8+bNMycrvZpFeUpff99995W7CsjFF19sMjIyTFFRkdm7d6959913zRlnnOE5vnDhQrNv3z5TWFho0tPTze233+71tVOmTDErVqzwfB0TE2PeffddU1RUZDIzM82YMWN8/j7179//lPeh9KogVb2PrVq1MsXFxeWuNLNmzRpz4MABU1BQYH744QczatSoMseTk5PNV199ZYqKiszmzZvNiBEjPMeuuuoqs2vXLnPo0CHz/fffm8GDB5e5dtOmTeaaa67xfD1w4ECTnp5unE6nWbVqVZVLYJZup59+umnZsqXP37vq9DE1NfWUe82bN89zfNWqVaccd/+QI8nceeedZs+ePaagoMC8+uqrZX64iIyMNIsWLTIHDx40WVlZ5oEHHrD8+5NGo9Wv5jjxAAAAAICFqDEHAAAAbIDEHAAAALABEnMAAADABkjMAQAAABsgMQcAPzLGqEOHDlZ3AwBQB5CYA0AQGDJkiNauXav9+/crJydHL730kpo0aWJ1twAApZCYA4ANNWjQwKf3i46O1owZM9SqVSt17dpVrVu31j/+8Q+fxgAA1A6JOQAEwLnnnqucnByFhPzxz+6IESO0ceNGSdKDDz6ot99+W2+88YYKCgo0btw4nX766Vq9erUOHjyoTz/9VM8995zeeOONGsVftGiRPv74Y7lcLh04cEAvvfSSLrzwQp+8NgCAb5CYA0AAfPPNNzp06JAGDBjgee6aa67RwoULPV8PHz5cS5YsUdOmTbVgwQItXLhQ33zzjeLi4jR9+nRdd911lcbYv3+/18l2v379tHnz5pq9GACAXzS0ugMAECwWLVqkMWPG6N///reaNGmiIUOG6G9/+5vn+Lp16/Tee+9Jkpo1a6ZevXpp4MCBKi4u1pdffqnly5dXev+YmBiv+jFo0CClpqbqvPPOq/mLAQD4HCPmABAgCxcu1MiRI9WoUSONHDlSGzZsUFZWluf4zp07PY9btWql/Px8uVyuco/X1HnnnaeFCxcqJSVF27Ztq/X9AAC+Q2IOAAGSnp6uzMxMXXbZZaeUsUglSyu65eTkKDY2VuHh4Z7n2rRpU6v4f/rTn7R8+XLdcMMNWrlyZa3uBQDwPRJzAAighQsX6q9//av69eunt99+u8LzsrKy9O2332r69OkKDQ3V+eefr6FDh9Y4brdu3fTRRx/p9ttv1wcffFDj+wAA/IfEHAACaNGiRerfv79WrlypvLy8Ss+99tpr1bt3b+Xl5WnGjBlavHixDh8+XOH5hYWF6tOnT7nH7r77bjVr1kyvvPKKCgsLVVhYqE2bNtXqtQAAfMshyVR5FgDAcm+++aYyMjI0ffp0q7sCAPADRswBwKbOOecctW/fXg6HQ5dccomGDx+uZcuWWd0tAICfsFwiANhUQkKC3nnnHcXFxSk7O1u33HKLfvjhB6u7BQDwE0pZAAAAABuglAUAAACwARJzAKjCBRdcoK1bt6qwsFDDhw+3ujsAgHqKxBwAqvDwww/rueeeU2RkpN57772Axh4wYIDS09N16NAhrVy5Um3btq3w3KSkJK1cuVKHDh1Senq6Bg4cWOb4HXfcoZycHBUUFOiVV15Ro0aNvL72kUceUXZ2tg4cOKBVq1YpOTnZty8UACCppMacRqPRaBW0bdu2mYEDBwY8blxcnDlw4IBJSUkxYWFh5oknnjDr1q2r8PyvvvrKPPnkk+a0004zI0eONPv37zfx8fFGkhk8eLDZs2ePSU5ONk2bNjWrVq0ys2bN8uraq666yuzatcu0a9fOhISEmJkzZ5rvvvvO8r8XGo1Gq4fN8g7QaDSabdvPP/9sjh07ZpxOpyksLDSNGjUyUVFR5uWXXza7d+822dnZ5pFHHjEhISGea8aPH2/S0tJMfn6++eijj0zbtm1rFHvChAnmyy+/9HwdERFhnE6n6dy58ynnduzY0fz++++mSZMmnufWrFljJk6caCSZBQsWmEcffdRzbMCAASYnJ8era//+97+bxYsXe44lJycbl8tl+d8NjUaj1bdGKQsAVOKMM85QVlaWhg4dqsjISB05ckTz58/X0aNHdcYZZ+iss87S4MGDddNNN0mShg0bpvvvv18jR45Us2bNtHbtWi1atKjC+2/cuFFjxowp91i3bt20ceNGz9dOp1Pbt29Xt27dyj33l19+UVFRUZl7u889+V4bN25UQkKCYmNjq7z2zTffVIcOHdSxY0c1bNhQqamp+uijj7x5+wAA1cA65gBQDc2bN9eQIUPUtGlT/f7773I6nXr66ad1880368UXX9SkSZM0a9YsZWRkSJJmzpyp+++/X23btlVWVtYp9+vRo0eFsZo0aaLc3NwyzxUUFCgyMrLccwsKCk45t3Xr1uUedz+OjIys8tqcnBx98cUX2rp1q44ePaqdO3dqwIABFfYbAFAzJOYAUA1JSUkKDQ1VTk6O57mQkBDt3LnTc/yZZ57Rk08+6TnucDjUunXrchPzyhQVFSkqKqrMc1FRUSosLKz2uScfdz8uLCys8tpp06apV69eSkxM1J49ezR27FitXLlS3bp1k8vlqtZrAgBUjFIWAKiGnTt36vDhw4qPj1dMTIxiYmIUHR2t7t27e45PnDjRcywmJkYRERFat25dtWNt3ry5zIh6RESEOnTooM2bN5d7bvv27dWkSRPPcz169PCce/K9evTooT179ig/P7/Ka//0pz9p8eLF2rVrl44dO6bXXntNMTExrMwCAH5geaE7jUaj2bnt2LGjzKosy5YtM//6179MZGSkcTgcpn379qZfv35GkhkxYoT56aefTHJyspFkoqKiTEpKSo3ixsfHmwMHDpiRI0easLAw89hjj1W6Ksu6devMP/7xDxMWFmZGjBhRZmWVSy65xOTk5JiuXbua6Oho89lnn5VZlaWya6dNm2bWrl1rmjdvbhwOhxk7dqwpKioy0dHRlv/d0Gg0Wj1rlneARqPRbN1OTsyjoqLM7Nmzzc6dO82BAwfMhg0bzKhRozzHx44da3788UdTUFBgsrKyzCuvvFLhvTdt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r6/yHBqNRqPRAtmqYnX/aDRa2VZP8snKT4iKijK//PLLKc9nZGSYhIQEI8kkJCSYjIwMI8m88MILZvTo0eWeV8/fSBqNRqPVo0ZiTqPVrVYf8skqS1natWun3NxczZs3Txs2bNBLL72kiIgItWjRQnv27JEk7dmzRy1atJAktW7dWjt37vRcn52drdatW1cVBgBQysypSZo5NcmS2KuWddeqZd0tiQ0AwazKxLxhw4bq2bOn5syZo549e+rQoUO67777TjmvZPDAexMmTND69eu1fv16xcfHV+taAAAAoL6pMjHPzs5Wdna2vvnmG0nSkiVL1LNnT+3du1cJCQmSpISEBP3222+SpF27dqlNmz92q0tMTNSuXbtOue9LL72kXr16qVevXtq3b59PXgwAAABQV1WZmO/du1c7d+5Up06dJEkDBw5UWlqali9frtTUVElSamqq3nvvPUnS8uXLdf3110uSzjvvPBUUFHhKXgAAAACUr6E3J91+++1asGCBGjVqpF9++UXjx49XSEiI3nrrLd14443KzMzU1VdfLUlasWKFhgwZop9//llOp1Pjx4/36wsAAAAA6gOvEvONGzeqV69epzw/aNCgcs+/7bbbatcrAAhya78+aFnst96jvBAArOBVYg4ACKz/+/d+y2LPmUf5IQBYwaudPwEAgdWokUONGjksiR0eHqLwcP73AACBxog5ANjQ9L+3lSTdPyMz4LFXLEqWJF08YlPAYwNAMGNIBAAAALABEnMAAADABkjMAQAAABsgMQcAAABsgMmfAGBD/159wLLY89/8zbLYABDMSMwBwIZWri2wLPZrJOYAYAlKWQDAhiKbNFBkkwaWxI6Lbai4WMZtACDQ+JcXAGxoyh2JkqxZx3zJq10ksY45AAQaI+YAAACADZCYAwAAADZAYg4AAADYAIk5AAAAYANM/gQAG1rx7/2WxZ4zf49lsQEgmJGYA4ANffH1Qctiv7Vsn2WxASCYUcoCADZk5Vriia0aKbFVI0tiA0AwY8QcAGzo7smtJVmzjvkbsztJYh1zAAg0RswBAAAAGyAxBwAAAGyAxBwAAACwARJzAAAAwAaY/AkANvTuh3mWxX5y9i7LYgNAMCMxBwAbWv99kWWxP/jEus2NACCYUcoCADbUKqGRWiVYs5Z4pw7h6tQh3JLYABDMGDEHABu67aaWkqxZ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\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAuYAAAL3CAYAAADGE4BtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde1zUVf4/8NcAA87IdQbvXFJTEDVcFIsULXXNLqIZVqblpdzKLptdpa9bbhep9qubv29pZWati1hioanRtukmmSXqhsKAlzRgFJXrcJlJRzm/P3AmRgYYYGY+H+D19HEewJzP53Pe8xnU95w5FwUAASIiIiIikpSH1AEQERERERETcyIiIiIiWWBiTkREREQkA0zMiYiIiIhkgIk5EREREZEMMDEnIiIiIpIBJuZERERERDLAxJyISCKnTp2C0WhEdXU1ysvLsX37doSEhAAAdu/ejQcffNDm+PHjx6OoqAgA8N133+Gll16yqb///vtx4sQJqFQq9zwBIiJyKibmREQSmjp1Kvz8/NCnTx+cO3cO//d//+fQeQ899BAWL16MqKgoAEBwcDBWrFiBhx56CCaTyZUhExGRizAxJyKSgQsXLiAtLc2aaLfk+PHjeP3117Fu3TooFAr8v//3/7Blyxb85z//cW2gRETkMkzMiYhkQKVS4Z577sGPP/7o8DkrV66EQqFAWloaxowZg+eee86FERIRkat5SR0AEVFXlp6ejkuXLqF79+4oKSnBLbfc4vC5dXV1WLBgAXJzczFt2jTU1NS4MFIiInI19pgTEUlo+vTpCAoKQrdu3fD444/ju+++Q69evXDp0iUolUqbY5VKJcxms81jOp0OAJCbm+u2mImIyDWYmBMRyUBdXR2++OILXL58GWPHjkVhYSGuueYam2P69++PgoICaQIkIiKXY2JORCQTCQkJCAoKQl5eHj799FPMnz8fsbGxAIBBgwZh8eLF2LRpk8RREhGRq3CMORGRhL788ktcvnwZQggUFBRg7ty50Ol00Ol0WLJkCdavX4/Q0FCcP38eH374IT744AOpQyYiIhdRABBSB0FERERE1NVxKAsRERERkQwwMSciIiIikgEm5kREREREMsDEnIiIiIhIBpiYExERERHJABNzImrWK6+8gsOHD8NsNuPll1+2qbvppptw+PBh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\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAuYAAAL3CAYAAADGE4BtAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeXxU1f3/8fcAkzghBEgCQghEQSAE+wVlUZRFkGKhsoi4L4iKiGLVWr8S6r4Q0NLa709BpIhKAbEoiIpaEQSkWEERhBBARUggahbIQiIEcn5/hBkTMtlncm9mXk8e50Ey9879fOZm+8y5557jkGQEAAAAwFKNrE4AAAAAAIU5AAAAYAsU5gAAAIANUJgDAAAANkBhDgAAANgAhTkAAABgAxTmAAAAgA1QmAOARfbt26eCggLl5eUpOztb7733nmJjYyVJa9eu1W233VZm/0GDBik1NVWStG7dOj366KNltt9000369ttv5XK56ucFAAB8isIcACw0cuRINWvWTG3bttVPP/2k//f//l+1nnf77bfr/vvvV0JCgiQpOjpas2bN0u23367CwkJ/pgwA8BMKcwCwgWPHjmnZsmWeQrsqe/fu1TPPPKP58+fL4XDo//7v//TWW2/p008/9W+iAAC/oTAHABtwuVy65ppr9Pnnn1f7OX/961/lcDi0bNkyXXzxxXrwwQf9mCEAwN+aWJ0AAASzFStW6MSJE2ratKkyMjJ02WWXVfu5xcXFuvXWW7Vz506NHj1a+fn5fswUAOBv9JgDgIXGjBmjli1b6owzztCUKVO0bt06nXnmmTpx4oScTmeZfZ1Op4qKiso8lpycLEnauXNnveUMAPAPCnMAsIHi4mItX75cJ0+eVP/+/XXgwAGdddZZZfY5++yztX//fmsSBAD4HYU5ANjEqFGj1LJlS+3atUtLly7VhAkT1KdPH0lS586ddf/99+uNN96wOEsAgL8wxhwALPTuu+/q5MmTMsZo//79Gj9+vJKTk5WcnKypU6dqwYIFat++vX7++Wf94x//0Msvv2x1ygAAP3FIMlYnAQAAAAQ7hrIAAAAANkBhDgAAANgAhTkAAABgAxTmAAAAgA1QmAMAAAA2QGEOoFJPPvmktm/frqKiIj322GNltl1yySXavn27Dh8+rMzMTL399tuKiYnxbI+JidGKFSuUlZWl1NRUTZo0ybOtf//+ysvLK9OMMRo7dqwk6eabb9aWLVuUk5Oj1NRUzZw5U40bN/Y8f+3atSosLPQ8NyUlpdLXMWPGDGVmZiozM1MzZszwxakpo02bNnrnnXd08OBBGWMUFxdXZvvMmTN14MAB5eTk6IcfflBiYmKZ7Zdffrm++eYb5eXlaePGjerWrZtn25w5c8qcp19++UW5ubme7QsXLtShQ4eUk5Oj3bt367bbbitz7Ntuu0179+5VXl6ePvjgA7Vt27bC19GyZUu9/fbbys/P1w8//KDrrruuLqelWpxOp/71r39p3759MsZo0KBBle5fWY5VfR1CQkI0f/585eTkKD09Xffff3+Z7ZWdq+bNm+vVV1/VTz/9pJ9++qnczwMA+IKh0Wi0itrNN99sfve735kVK1aYxx57rMy21q1bm7Zt2xpJJiQkxMycOdO88847nu1r1qwxf/vb30yTJk3M//zP/5isrCxzySWXeI0zaNAgk5uba8LCwowkc+edd5r+/fsbp9NpYmJizJYtW8xDDz3k2X/t2rXmtttuq9ZruOOOO0xKSopp166diYmJMTt37jSTJk3y6Xlq3bq1mTx5srnwwguNMcbExcWV2d6lSxfPa4uJiTE7duwwV1xxhZFkzjnnHJOTk2Muvvhi07hxYzN16lSzd+9e07hxY6+xFixYYObPn+/5PCEhwYSEhBhJpmvXriY9Pd2cf/75nvP6008/mYSEBON0Os3s2bPNp59+WuHrWLx4sXnjjTdM06ZNzcUXX2yOHDliEhISanQeanrunE6nuffee83FF19sDh06ZAYNGlTp/pXlWNXXYfr06Wb9+vWmRYsWJj4+3qSnp5vLLrusWufqlVdeMW+++aZxuVwmLi7OfPvtt+aWW26x7GeTRqMFZLM8ARqN1gDawoULyxXmpVtISIiZPn262blzp5FkmjZtaowxJjo62rPP3Llzzeuvv+71+a+88op55ZVXKjz+/fffb1auXOn5vCaF+caNG83EiRM9n996661m06ZNfjlPjRs39loQlm4xMTFm+/bt5sEHHzSSzN13323ee+89z3aHw2EKCgrMkCFDyj03LCzM5ObmmoEDB3o9dpcuXcyhQ4fMVVddZSSZ5557zrzwwgue7W3btjXGGNOxY0evxz527Jjp3Lmz57HXX3/dJCUlVfv15+bmmhUrVpjRo0ebJk2a1Pj8paamVlqYVzfHir4OBw8eNL/97W89nz/55JNmyZIl1TpXGRkZpnfv3p7tiYmJZv369X75PqLRaMHZGMoCoE7at2+vw4cPq7CwUH/605/07LPPSpIcDkeZ/90fn3vuueWOERYWpnHjxum1116rMM7AgQO1c+fOMo8lJSUpIyNDn332WaXDH7p3765t27Z5Pt+2bZu6d+9evRfoQw899JDy8vJ08OBBNW3aVIsXL/ZsO/08VXSurrzySmVkZGj9+vVlHn/xxRd19OhR7d69W+np6Vq1alWFx5bk9dhdunTRiRMntHfvXs9jNT1X7du31wcffKCHHnpIaWlpmjVrltdYtVWXHFu0aKGYmJhKvxeqOlfV+X4GgNqiMAdQJ6mpqWrZsqWio6P18MMPe8Z65+fn67PPPtMjjzyi0NBQnXfeebryyisVFhZW7hhjx45VZmam1q1b5zXGhAkT1Lt3b/3lL3/xPPbQQw+pY8eOateunV5++WW9++676tixo9fnh4eHKycnx/N5Tk6OmjVr5nVfh8OhP/3pT0pOTtbBgwf14osvqlevXoqMjNR9992na6+9ttrn5nQzZ85Us2bNdN5552nhwoWenFavXq1BgwZp0KBBcjqdmjZtmkJCQryeq/Hjx+v1118v9/jdd9+tZs2aqX///nr77bd17NgxSdKHH36oq6++Wr/5zW90xhln6NFHH1VxcbHXY4eHh5cZuy5Vfq68ycnJ0dy5c3XRRRdp4MCB+uWXX7Rq1Spt3rxZgwcPrvZxKlKXHMPDwz37e3tuVefqww8/1NSpUxUeHq5OnTrp1ltv9XoeAaC2KMwB+MThw4f12muv6Z133vHcpHnDDTfo7LPPVmpqqubMmaN//vOfSktLK/fciopNSRo9erSSkpI0fPhwZWVleR7/4osvlJ+fr+PHj+v111/Xxo0bNWLECK/HyM/PV0REhOfziIgI5eXled23Q4cOiouL00UXXaQePXpo3759Wrhwob7++mudffbZWrlyZbXPSUW+/vprFRYW6oknnpAk7d69W+PHj9cLL7yg9PR0RUdHKzk5udy5at++vS655JIKz1VxcbE2btyo2NhYTZ48WZL0ySef6LHHHtNbb72lH374QT/88IPy8vK8fh1OP09S5eeq9A2p7du3L7d9//792rZtm3bs2KFz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AIANUJgDQBUuuugi7dmzR3l5eRo9erTV6QAAAhSFOQBU4cknn9QLL7ygZs2a6Z133qnX2EOGDNGuXbt09OhRrVmzRh06dKhw37i4OK1Zs0ZHjx7Vrl27dOmll5bZft999yk9PV05OTmaP3++QkJCqv3cp556SmlpaTpy5IjWrl2rhIQE375QAICkkjHmNBqNRqug7d2711x66aX1HjcqKsocOXLEjBs3zoSGhppnn33WbNq0qcL9//Of/5hZs2aZM844w4wdO9YcPnzYREdHG0lm2LBh5scffzQJCQmmRYsWZu3atSYpKalaz73qqqvMwYMHzdlnn20aNWpkpk+fbr788kvLvy40Go0WgM3yBGg0Gs227dtvvzUnT540BQUFJi8vz4SEhJiIiAjzj3/8wxw6dMikpaWZp556yjRq1MjznAkTJpjk5GSTnZ1tPvzwQ9OhQ4daxZ44caLZuHGj5/OwsDBTUFBgunbtWm7fzp07m19++cWEh4d7Hlu/fr2ZNGmSkWQWLVpknnnmGc+2IUOGmPT09Go993//93/N0qVLPdsSEhJMYWGh5V8bGo1GC7TGUBYAqMQ555yjAwcOaOTIkWrWrJmOHz+uV199VSdOnNA555yj8847T8OGDdPtt98uSRo1apSmTZumsWPHqlWrVtqwYYOWLFlS4fG3bdum6667zuu27t27a9u2bZ7PCwoK9N1336l79+5e9/3++++Vn59f5tjufU8/1rZt29SmTRtFRkZW+dw33nhDnTp1UufOndWkSRONHz9eH374YXVOHwCgBpjHHABqoHXr1hoxYoRatGihX375RQUFBfrb3/6mO+64Qy+//LLuvPNOJSUlKSUlRZI0ffp0TZs2TR06dNCBAwfKHa9Hjx4VxgoPD1dGRkaZx3JyctSsWTOv++bk5JTbt127dl63uz9u1qxZlc9NT0/XZ599pj179ujEiRNKTU3VkCFDKswbAFA7FOYAUANxcXFyOp1KT0/3PNaoUSOlpqZ6tv/973/XrFmzPNsdDofatWvntTCvTH5+viIiIso8FhERoby8vBrve/p298d5eXlVPvfRRx9Vnz59FBsbqx9//FE33nij1qxZo+7du6uwsLBGrwkAUDGGsgBADaSmpurYsWOKjo5Wy5Yt1bJlSzVv3lznnnuuZ/ukSZM821q2bKmwsDBt2rSpxrF27txZ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\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1872x1296 with 1 Axes>"]},"metadata":{}},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-79-41885ea31961>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m[\u001b[0m\u001b[0mplot_check\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mnp_plot_param_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlvrg_set\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mleverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfee\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mnp_plot_param_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-79-41885ea31961>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;34m[\u001b[0m\u001b[0mplot_check\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0mnp_plot_param_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlvrg_set\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mleverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfee\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfront_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mnp_plot_param_\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-40-6ac806e3bf9d>\u001b[0m in \u001b[0;36mplot_check\u001b[0;34m(data, iin, iout, pr, ep, tp, entry_idx, exit_idx, lvrg, fee, pr_msg, x_max, x_margin, front_plot, **col_idx_dict)\u001b[0m\n\u001b[1;32m     29\u001b[0m   \u001b[0;31m# if not config.lvrg_set.static_lvrg:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m   \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpr_msg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mentry_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexit_idx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlvrg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfee\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 31\u001b[0;31m   \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     32\u001b[0m   \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    270\u001b[0m     \"\"\"\n\u001b[1;32m    271\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 272\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    273\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/pylab/backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(close, block)\u001b[0m\n\u001b[1;32m     37\u001b[0m             display(\n\u001b[1;32m     38\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m                 \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m             )\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(*objs, **kwargs)\u001b[0m\n\u001b[1;32m    304\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    305\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 306\u001b[0;31m             \u001b[0mformat_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    307\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m                 \u001b[0;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mformat\u001b[0;34m(self, obj, include, exclude)\u001b[0m\n\u001b[1;32m    171\u001b[0m             \u001b[0mmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 173\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    174\u001b[0m             \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m                 \u001b[0;31m# FIXME: log the exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-2>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[0;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m         \u001b[0;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    332\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 334\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    335\u001b[0m             \u001b[0;31m# Finally look for special method names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(fig)\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'png'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 241\u001b[0;31m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    242\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'retina'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m'png2x'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mretina_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(fig, fmt, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m    123\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m     \u001b[0mbytes_io\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 125\u001b[0;31m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    126\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'svg'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m   2101\u001b[0m                     \u001b[0mbbox_artists\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"bbox_extra_artists\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2102\u001b[0m                     bbox_inches = self.figure.get_tightbbox(renderer,\n\u001b[0;32m-> 2103\u001b[0;31m                             bbox_extra_artists=bbox_artists)\n\u001b[0m\u001b[1;32m   2104\u001b[0m                     \u001b[0mpad\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"pad_inches\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2105\u001b[0m                     \u001b[0;32mif\u001b[0m \u001b[0mpad\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/figure.py\u001b[0m in \u001b[0;36mget_tightbbox\u001b[0;34m(self, renderer, bbox_extra_artists)\u001b[0m\n\u001b[1;32m   2393\u001b[0m                 \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2394\u001b[0m                     bbox = ax.get_tightbbox(renderer,\n\u001b[0;32m-> 2395\u001b[0;31m                             bbox_extra_artists=bbox_extra_artists)\n\u001b[0m\u001b[1;32m   2396\u001b[0m                 \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2397\u001b[0m                     \u001b[0mbbox\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0max\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_tightbbox\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36mget_tightbbox\u001b[0;34m(self, renderer, call_axes_locator, bbox_extra_artists)\u001b[0m\n\u001b[1;32m   4354\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mclip_extent\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4355\u001b[0m                 clip_extent = mtransforms.Bbox.intersection(clip_extent,\n\u001b[0;32m-> 4356\u001b[0;31m                     axbbox)\n\u001b[0m\u001b[1;32m   4357\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mall\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mclip_extent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextents\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0maxbbox\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mextents\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4358\u001b[0m                     \u001b[0;31m# clip extent is inside the axes bbox so don't check\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/transforms.py\u001b[0m in \u001b[0;36mintersection\u001b[0;34m(bbox1, bbox2)\u001b[0m\n\u001b[1;32m    717\u001b[0m         \u001b[0my0\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmaximum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbbox1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mymin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbbox2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mymin\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    718\u001b[0m         \u001b[0my1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mminimum\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbbox1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mymax\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbbox2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mymax\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 719\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mBbox\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mx0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mx1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mx0\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mx1\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0my0\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0my1\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    720\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    721\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/transforms.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, points, **kwargs)\u001b[0m\n\u001b[1;32m    739\u001b[0m         \"\"\"\n\u001b[1;32m    740\u001b[0m         \u001b[0mBboxBase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 741\u001b[0;31m         \u001b[0mpoints\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpoints\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfloat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    742\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mpoints\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    743\u001b[0m             raise ValueError('Bbox points must be of the form '\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/numpy/core/_asarray.py\u001b[0m in \u001b[0;36masarray\u001b[0;34m(a, dtype, order)\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m     \"\"\"\n\u001b[0;32m---> 83\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     84\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     85\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","source":["def eptp_hvline(ep, tp, entry_idx, exit_idx, prev_plotsize):\n","  # ------ vline entry & exit ------ #\n","  ep_tick = prev_plotsize\n","  # tp_tick = prev_plotsize + (exit_idx - entry_idx)\n","  tp_tick = prev_plotsize + int(exit_idx - entry_idx)\n","  plt.axvline(ep_tick, alpha=0.7, linestyle='--', color='#ffeb3b')\n","  plt.axvline(tp_tick, alpha=1., linestyle='--', color='#ffeb3b')\n","  # ------ hline entry & exit ------ #\n","  x0, x1 = plt.gca().get_xlim()\n","  ep_xmin = ep_tick / x1\n","  tp_xmin = tp_tick / x1\n","\n","  plt.axhline(ep, linestyle='--', xmin=ep_xmin, xmax=1, alpha=1, color='lime')  # ep line axhline\n","  plt.text(x1, ep, ' ep :\\n {}'.format(ep), ha='left', va='center', fontweight='bold')  # ep line label\n","\n","  plt.axhline(tp, linestyle='--', xmin=tp_xmin, xmax=1, alpha=1, color='lime')  # tp line axhline\n","  plt.text(x1, tp, ' tp :\\n {}'.format(tp), ha='left', va='center', fontweight='bold')  # tp line label\n","\n","  return ep_tick"],"metadata":{"id":"pVbWy4FFgg8Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def plot_check(data, iin, iout, pr, ep, tp, entry_idx, exit_idx, lvrg, fee, pr_msg, x_max, x_margin, front_plot, **col_idx_dict):\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(26, 18))\n","  gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                         ncols=2,  # col 몇 개\n","                         height_ratios=[3, 1]\n","                         )\n","\n","  ax = fig.add_subplot(gs[0])\n","  # ax = fig.add_subplot(gs[odds - 1])\n","\n","  a_data = data[int(iin):int(iout)]\n","  # a_data = data[iin:iout]\n","  candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax)\n","  _ = [hcandle_plot(a_data[:, hoc_col_idxs], square=sq) for (hoc_col_idxs, sq) in zip(col_idx_dict['hoc_col_idxs_list'], np.arange(3) + 1)]\n","\n","  #     1. ep, tp    #\n","  #     Todo    #\n","  #     2. norm_range_col - decided by a_data's col\n","  ep_tick = eptp_hvline(ep, tp, entry_idx, exit_idx, prev_plotsize)\n","\n","  if front_plot:\n","    x_max = ep_tick\n","  if (iout - iin) > x_max:\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","  # ------ check pr ------ #\n","  # if not config.lvrg_set.static_lvrg:\n","  plt.title(pr_msg.format(entry_idx, exit_idx, pr, lvrg, fee))\n","  plt.show()\n","  plt.close()"],"metadata":{"id":"ESReTMpP7SoO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# %timeit -n 1 -r 5 plot_check_fast(sliced_data[0], **col_idx_dict) # 1.08 s per loop (close) 1.07 s per loop (non_close)\n","# %timeit -n 1 -r 5 plot_check(sliced_data[0], **col_idx_dict) # 1.08 s per loop (close) 1.07 s per loop (non_close)\n","# %timeit -n 1 -r 1 plot_check_dict(sliced_data[0], col_idx_dict) # 1.08 s per loop (close) 1.07 s per loop (non_close)\n","%timeit -n 1 -r 5 plot_check(data, *np_plot_params[0], config.lvrg_set.leverage, fee, pr_msg, **col_idx_dict) # 772 ms  766 ms (with data param)"],"metadata":{"id":"UqCJHEXXCAFD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plot_check(data, *np_plot_params[0], config.lvrg_set.leverage, fee, pr_msg, x_max, x_margin, front_plot, **col_idx_dict)\n","# _ = [plot_check(*plot_params, config.lvrg_set.leverage, fee, pr_msg, **col_idx_dict) for plot_params in np_plot_params]"],"metadata":{"id":"vfLF_qQGCavs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D"},"source":["## import utils & config"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SeJan_0t95yL"},"outputs":[],"source":["frame_ver = \"0114_htf\"\n","ID_list = ['v3', 'v5_2', 'v7_3']\n","\n","utils_public_name = \"{}.utils.{}_utils_public\".format(strat_pkg, frame_ver)\n","utils_public_lib = importlib.import_module(utils_public_name)\n","utils_public = utils_public_lib   # temporary\n","\n","u_name_list = [\"{}.utils.{}_utils_{}\".format(strat_pkg, frame_ver, id_) for id_ in ID_list]\n","utils_list = [importlib.import_module(u_name) for u_name in u_name_list]\n","[utils1, utils2, utils3] = utils_list   # temporary\n","\n","config_list = [\"{}_config_{}.json\".format(frame_ver, id_) for id_ in ID_list]\n","cfg_path_list = [os.path.join(current_path, strat_pkg, \"config\", name_) for name_ in config_list]\n","cfg_file_list = [open(cfg_path) for cfg_path in cfg_path_list]\n","cfg_list = [EasyDict(json.load(cfg_)) for cfg_ in cfg_file_list]\n","[config1, config2, config3] = cfg_list   # temporary\n","#       opened files should be closed --> 닫지 않으면 reopen 시 error occurs         #\n","_ = [cfg_.close() for cfg_ in cfg_file_list]\n","\n","show_plot = 1   # idep's var - do not touch\n"]},{"cell_type":"markdown","metadata":{"id":"leSQlImg4_9L"},"source":["### utils_"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CB2yZdQ95Cdg"},"outputs":[],"source":["# from funcs.funcs_indicator import *\n","# import numpy as np\n","\n","\n","def enlist_rtc(res_df, config, np_timeidx):\n","\n","    strat_version = config.strat_version\n","\n","    res_df['short_rtc_1_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.outg_itv1]\n","    res_df['short_rtc_0_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.outg_itv0]\n","\n","    res_df['long_rtc_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.outg_itv1]\n","    res_df['long_rtc_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.outg_itv0]\n","\n","    #      entry reversion    #\n","    if config.ep_set.short_entry_score > 0:\n","        short_rtc_1_copy = res_df['short_rtc_1_{}'.format(strat_version)].copy()\n","        res_df['short_rtc_1_{}'.format(strat_version)] = res_df['long_rtc_1_{}'.format(strat_version)]\n","        res_df['long_rtc_1_{}'.format(strat_version)] = short_rtc_1_copy\n","\n","        short_rtc_0_copy = res_df['short_rtc_0_{}'.format(strat_version)].copy()\n","        res_df['short_rtc_0_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)]\n","        res_df['long_rtc_0_{}'.format(strat_version)] = short_rtc_0_copy\n","\n","    res_df['short_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['short_rtc_0_{}'.format(strat_version)] - res_df['short_rtc_1_{}'.format(strat_version)])\n","    res_df['long_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['long_rtc_1_{}'.format(strat_version)] - res_df['long_rtc_0_{}'.format(strat_version)])\n","\n","    res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv1]\n","    # res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_short_rtc_0_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv0]\n","\n","    res_df['h_long_rtc_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.point.tpg_itv1]\n","    # res_df['h_long_rtc_1_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.point.tpg_itv]\n","    res_df['h_long_rtc_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.point.tpg_itv0]\n","\n","    #      entry reversion    #\n","    if config.ep_set.short_entry_score > 0:\n","        h_short_rtc_1_copy = res_df['h_short_rtc_1_{}'.format(strat_version)].copy()\n","        res_df['h_short_rtc_1_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)]\n","        res_df['h_long_rtc_1_{}'.format(strat_version)] = h_short_rtc_1_copy\n","\n","        h_short_rtc_0_copy = res_df['h_short_rtc_0_{}'.format(strat_version)].copy()\n","        res_df['h_short_rtc_0_{}'.format(strat_version)] = res_df['h_long_rtc_0_{}'.format(strat_version)]\n","        res_df['h_long_rtc_0_{}'.format(strat_version)] = h_short_rtc_0_copy\n","\n","    res_df['h_short_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['h_short_rtc_0_{}'.format(strat_version)] - res_df['h_short_rtc_1_{}'.format(strat_version)])\n","    res_df['h_long_rtc_gap_{}'.format(strat_version)] = abs(\n","        res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df['h_long_rtc_0_{}'.format(strat_version)])\n","\n","    res_df['short_dtk_1_{}'.format(strat_version)] = res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['short_dtk_0_{}'.format(strat_version)] = res_df['dc_upper_%s' % config.loc_set.zone.dtk_itv]\n","\n","    res_df['long_dtk_1_{}'.format(strat_version)] = res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]\n","    res_df['long_dtk_0_{}'.format(strat_version)] = res_df['dc_lower_%s' % config.loc_set.zone.dtk_itv]\n","\n","    res_df['short_dtk_gap_{}'.format(strat_version)] = abs(\n","        res_df['short_dtk_0_{}'.format(strat_version)] - res_df['short_dtk_1_{}'.format(strat_version)])\n","    res_df['long_dtk_gap_{}'.format(strat_version)] = abs(\n","        res_df['long_dtk_1_{}'.format(strat_version)] - res_df['long_dtk_0_{}'.format(strat_version)])\n","\n","    return res_df\n","\n","\n","def enlist_tr(res_df, config, np_timeidx):\n","    strat_version = config.strat_version\n","\n","    res_df['entry_{}'.format(strat_version)] = np.zeros(len(res_df))\n","    res_df['h_entry_{}'.format(strat_version)] = np.zeros(len(res_df))\n","\n","    # -------- set ep level -------- #\n","\n","    #       limit ver.     #\n","    # res_df['short_ep_{}'.format(strat_version)] = res_df['short_rtc_1_{}'.format(strat_version)] + res_df['short_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","    # res_df['long_ep_{}'.format(strat_version)] = res_df['long_rtc_1_{}'.format(strat_version)] - res_df['long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","\n","    res_df['short_ep_{}'.format(strat_version)] = res_df['close'] + res_df['h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","    res_df['long_ep_{}'.format(strat_version)] = res_df['close'] - res_df['h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.ep_gap\n","\n","    if config.tr_set.c_ep_gap != \"None\":\n","        res_df['short_ep_org_{}'.format(strat_version)] = res_df['short_ep_{}'.format(strat_version)].copy()\n","        res_df['long_ep_org_{}'.format(strat_version)] = res_df['long_ep_{}'.format(strat_version)].copy()\n","\n","        res_df['short_ep2_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] + res_df[\n","            'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","        res_df['long_ep2_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] - res_df[\n","            'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.c_ep_gap\n","\n","    res_df['short_spread_ep_{}'.format(strat_version)] = res_df[\n","        'bb_lower_5m']  # + res_df['h_short_rtc_gap_{}'.format(strat_version)] * config.loc_set.zone.spread_ep_gap\n","    res_df['long_spread_ep_{}'.format(strat_version)] = res_df[\n","        'bb_upper_5m']  # - res_df'h_long_rtc_gap_{}'.format(strat_version)] * config.loc_set.zone.spread_ep_gap\n","\n","    #       market ver.     #\n","    if config.ep_set.entry_type == \"MARKET\":\n","        res_df['short_ep_{}'.format(strat_version)] = res_df['close']\n","        res_df['long_ep_{}'.format(strat_version)] = res_df['close']\n","\n","    # ---------------------------------------- short = -1 ---------------------------------------- #\n","    # ---------------- ep_time  ---------------- #\n","\n","    # res_df['close_shift'] = res_df['close'].shift(1)  # close & dc shift size 는 동일하게\n","    # res_df['dc_lower_%s_shift' % config.loc_set.point.exp_itv] = res_df['dc_lower_%s' % config.loc_set.point.exp_itv].shift(1)\n","    # res_df['dc_upper_%s_shift' % config.loc_set.point.exp_itv] = res_df['dc_upper_%s' % config.loc_set.point.exp_itv].shift(1)\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where(\n","    #     (res_df['dc_lower_%s_shift' % config.loc_set.point.exp_itv] <= res_df['close_shift']) &\n","    #     (res_df['dc_lower_%s' % config.loc_set.point.exp_itv] > res_df['close'])\n","    #     , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","    \n","    res_df['entry_{}'.format(strat_version)] = -1\n","\n","    # ------ point_dur ------ #    \n","    res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)] < 0) &\n","                                                        (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                        res_df['entry_{}'.format(strat_version)] - 1,\n","                                                        res_df['entry_{}'.format(strat_version)])\n","\n","    res_df['h_entry_{}'.format(strat_version)] = np.where(\n","        # (res_df['open'] >= res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) >= res_df[\n","            'bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] < res_df['bb_lower_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry_{}'.format(strat_version)] - 1, res_df['h_entry_{}'.format(strat_version)])\n","\n","    # ---------------------------------------- long = 1 ---------------------------------------- #\n","    # ---------------------- ep_time ---------------------- #\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where(\n","    #     (res_df['dc_upper_%s_shift' % config.loc_set.point.exp_itv] >= res_df['close_shift']) &\n","    #     (res_df['dc_upper_%s' % config.loc_set.point.exp_itv] < res_df['close'])\n","    #     , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","    #       Todo - orderside should be decided by dur. const_ (time point)  #\n","    # ------ point_dur ------ #    \n","    res_df['entry_{}'.format(strat_version)] = np.where((res_df['entry_{}'.format(strat_version)] > 0) &\n","                                                        (np_timeidx % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1),\n","                                                        res_df['entry_{}'.format(strat_version)] + 1,\n","                                                        res_df['entry_{}'.format(strat_version)])\n","    \n","    res_df['h_entry_{}'.format(strat_version)] = np.where(\n","        # (res_df['open'] <= res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'].shift(config.loc_set.point.htf_entry * 1) <= res_df[\n","            'bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (res_df['close'] > res_df['bb_upper_%s' % config.loc_set.zone.dtk_itv]) &\n","        (np_timeidx % config.loc_set.point.htf_entry == (config.loc_set.point.htf_entry - 1))\n","        , res_df['h_entry_{}'.format(strat_version)] + 1, res_df['h_entry_{}'.format(strat_version)])\n","\n","    # ------------------------------ rtc tp & out ------------------------------ #\n","    # --------------- bb rtc out --------------- #\n","\n","    if config.loc_set.point.outg_dc_period != \"None\":\n","        res_df['short_rtc_0_{}'.format(strat_version)] = res_df['high'].rolling(\n","            config.loc_set.point.outg_dc_period).max()\n","        res_df['long_rtc_0_{}'.format(strat_version)] = res_df['low'].rolling(config.loc_set.point.outg_dc_period).min()\n","\n","    res_df['short_out_{}'.format(strat_version)] = res_df['short_rtc_0_{}'.format(strat_version)] + res_df[\n","        'short_rtc_gap_{}'.format(strat_version)] * config.tr_set.out_gap\n","    res_df['long_out_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)] - res_df[\n","        'long_rtc_gap_{}'.format(strat_version)] * config.tr_set.out_gap\n","\n","    if config.tr_set.t_out_gap != \"None\":\n","        res_df['short_out_org_{}'.format(strat_version)] = res_df['short_out_{}'.format(strat_version)].copy()\n","        res_df['long_out_org_{}'.format(strat_version)] = res_df['long_out_{}'.format(strat_version)].copy()\n","\n","        res_df['short_out2_{}'.format(strat_version)] = res_df['short_rtc_0_{}'.format(strat_version)] + res_df[\n","            'short_rtc_gap_{}'.format(strat_version)] * config.tr_set.t_out_gap\n","        res_df['long_out2_{}'.format(strat_version)] = res_df['long_rtc_0_{}'.format(strat_version)] - res_df[\n","            'long_rtc_gap_{}'.format(strat_version)] * config.tr_set.t_out_gap\n","\n","    # ------------------------------ tp ------------------------------ #\n","    # --------------- bb rtc tp --------------- #\n","    res_df['short_tp_{}'.format(strat_version)] = res_df['h_short_rtc_1_{}'.format(strat_version)] - res_df[\n","        'h_short_rtc_gap_{}'.format(strat_version)] * config.tr_set.tp_gap\n","    res_df['long_tp_{}'.format(strat_version)] = res_df['h_long_rtc_1_{}'.format(strat_version)] + res_df[\n","        'h_long_rtc_gap_{}'.format(strat_version)] * config.tr_set.tp_gap\n","\n","    # --------------- set tp_line / dtk_line --------------- #\n","    # res_df['short_tp_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['short_rtc_1_{}'.format(strat_version)], np.nan)\n","    # res_df['short_tp_1_{}'.format(strat_version)] = ffill(res_df['short_tp_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['short_tp_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['h_short_rtc_gap_{}'.format(strat_version)], np.nan)  # ltf_gap 은 out 을 위한 gap 임\n","    # res_df['short_tp_gap_{}'.format(strat_version)] = ffill(res_df['short_tp_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['long_tp_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['long_rtc_1_{}'.format(strat_version)], np.nan)\n","    # res_df['long_tp_1_{}'.format(strat_version)] = ffill(res_df['long_tp_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['long_tp_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['h_long_rtc_gap_{}'.format(strat_version)], np.nan)\n","    # res_df['long_tp_gap_{}'.format(strat_version)] = ffill(res_df['long_tp_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_short_tp_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['h_short_rtc_1_{}'.format(strat_version)], np.nan)\n","    # res_df['h_short_tp_1_{}'.format(strat_version)] = ffill(res_df['h_short_tp_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_short_tp_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['h_short_rtc_gap_{}'.format(strat_version)], np.nan)\n","    # res_df['h_short_tp_gap_{}'.format(strat_version)] = ffill(res_df['h_short_tp_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    # res_df['h_long_tp_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['h_long_rtc_1_{}'.format(strat_version)], np.nan)\n","    # res_df['h_long_tp_1_{}'.format(strat_version)] = ffill(res_df['h_long_tp_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","    # res_df['h_long_tp_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['h_long_rtc_gap_{}'.format(strat_version)], np.nan)\n","    # res_df['h_long_tp_gap_{}'.format(strat_version)] = ffill(res_df['h_long_tp_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    if config.loc_set.zone.use_dtk_line:\n","      res_df['short_dtk_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['short_dtk_1_{}'.format(strat_version)], np.nan)\n","      res_df['short_dtk_1_{}'.format(strat_version)] = ffill(res_df['short_dtk_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","      res_df['short_dtk_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == -1, res_df['short_dtk_gap_{}'.format(strat_version)], np.nan)\n","      res_df['short_dtk_gap_{}'.format(strat_version)] = ffill(res_df['short_dtk_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","      res_df['long_dtk_1_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['long_dtk_1_{}'.format(strat_version)], np.nan)\n","      res_df['long_dtk_1_{}'.format(strat_version)] = ffill(res_df['long_dtk_1_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","      res_df['long_dtk_gap_{}'.format(strat_version)] = np.where(res_df['h_entry_{}'.format(strat_version)] == 1, res_df['long_dtk_gap_{}'.format(strat_version)], np.nan)\n","      res_df['long_dtk_gap_{}'.format(strat_version)] = ffill(res_df['long_dtk_gap_{}'.format(strat_version)].values.reshape(1, -1)).reshape(-1, 1)\n","\n","    return res_df\n"]},{"cell_type":"markdown","metadata":{"id":"Kd-ua256Zg1B"},"source":["### funcs_duration"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"01Maj7O4ZgEH"},"outputs":[],"source":["from funcs.funcs_indicator_candlescore import *\n","from funcs.funcs_trader import *\n","import logging\n","\n","sys_log3 = logging.getLogger()\n","\n","\n","class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def mr_calc(mr_const_cnt, mr_score, const_str, const_bool, var_left, var_right, show_detail):\n","    # splited_const_str = const_str.split(' ')\n","    # assert len(splited_const_str) == 3, \"assert len(splited_const_str) == 3\"\n","\n","    # const_bool = eval(const_str)\n","    if show_detail:\n","        sys_log3.warning(\"{} : {:.5f} {:.5f} ({})\".format(const_str, var_left, var_right, const_bool))\n","\n","    mr_const_cnt += 1\n","    if const_bool:\n","        mr_score += 1\n","\n","    # else:\n","    #     if show_detail:\n","    #         pass\n","    #     else:\n","    #         return res_df, open_side, zone\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def candle_game0(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    strat_version = config.strat_version\n","    if open_side == OrderSide.SELL:\n","        if strat_version in ['v5_2', '1_1']:  # Todo - 언젠가 분리 시켜주어야할 것\n","            front_wick_score = res_df['front_wick_score'].iloc[i]\n","            const_ = \"front_wick_score <= -config.loc_set.zone.front_wick_score0\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, front_wick_score,\n","                                             -config.loc_set.zone.front_wick_score0, show_detail)\n","    else:\n","        if strat_version in ['v5_2', '1_1']:\n","            front_wick_score = res_df['front_wick_score'].iloc[i]\n","            const_ = \"front_wick_score >= config.loc_set.zone.front_wick_score0\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, front_wick_score, config.loc_set.zone.front_wick_score0,\n","                                             show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","#   Todo - 현재, func_naming 은 short 기준으로 진행중\n","def candle_game(open_side, res_df, config, i, score_idx, prev_hclose_idx, mr_const_cnt, mr_score, show_detail):\n","    strat_version = config.strat_version\n","    if i < 0 or (i >= 0 and prev_hclose_idx >= 0):  # trader or colab env.\n","        h_front_wick_score = res_df['h_front_wick_score'].iloc[prev_hclose_idx]\n","        h_body_score = res_df['h_body_score'].iloc[prev_hclose_idx]\n","        h_back_wick_score = res_df['h_back_wick_score'].iloc[prev_hclose_idx]\n","\n","        if open_side == OrderSide.SELL:\n","            if config.loc_set.zone.front_wick_score[score_idx] != \"None\":\n","                if strat_version in ['v7_3']:\n","                    total_ratio = h_front_wick_score + h_body_score / 100\n","                    if config.loc_set.zone.front_sign[score_idx] == \"up\":\n","                        const_ = \"total_ratio <= -config.loc_set.zone.front_wick_score[score_idx]\"\n","                    else:\n","                        const_ = \"total_ratio >= -config.loc_set.zone.front_wick_score[score_idx]\"\n","                    const_bool_ = eval(const_)\n","                    mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, total_ratio,\n","                                                     -config.loc_set.zone.front_wick_score[score_idx], show_detail)\n","\n","                else:\n","                    if config.loc_set.zone.front_sign[score_idx] == \"up\":\n","                        const_ = \"h_front_wick_score <= -config.loc_set.zone.front_wick_score[score_idx]\"\n","                    else:\n","                        const_ = \"h_front_wick_score >= -config.loc_set.zone.front_wick_score[score_idx]\"\n","                    const_bool_ = eval(const_)\n","                    mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_front_wick_score,\n","                                                     -config.loc_set.zone.front_wick_score[score_idx], show_detail)\n","\n","            #       h_body_score 가 public 으로 정의하는게 좋을까     #\n","            if config.loc_set.zone.body_score[score_idx] != \"None\":\n","                if config.loc_set.zone.body_sign[score_idx] == \"up\":\n","                    const_ = \"h_body_score >= config.loc_set.zone.body_score[score_idx]\"\n","                else:\n","                    const_ = \"h_body_score <= config.loc_set.zone.body_score[score_idx]\"\n","                const_bool_ = eval(const_)\n","                mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_body_score,\n","                                                 config.loc_set.zone.body_score[score_idx],\n","                                                 show_detail)\n","\n","            if config.loc_set.zone.back_wick_score[score_idx] != \"None\":\n","                if config.loc_set.zone.back_sign[score_idx] == \"up\":\n","                    const_ = \"h_back_wick_score >= config.loc_set.zone.back_wick_score[score_idx]\"\n","                else:\n","                    const_ = \"h_back_wick_score <= config.loc_set.zone.back_wick_score[score_idx]\"\n","                const_bool_ = eval(const_)\n","                mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_back_wick_score,\n","                                                 config.loc_set.zone.back_wick_score[score_idx],\n","                                                 show_detail)\n","        else:\n","            if config.loc_set.zone.front_wick_score[score_idx] != \"None\":\n","                if strat_version in ['v7_3']:\n","                    total_ratio = h_front_wick_score + h_body_score / 100\n","                    if config.loc_set.zone.front_sign[score_idx] == \"up\":\n","                        const_ = \"total_ratio >= config.loc_set.zone.front_wick_score[score_idx]\"\n","                    else:\n","                        const_ = \"total_ratio <= config.loc_set.zone.front_wick_score[score_idx]\"\n","                    const_bool_ = eval(const_)\n","                    mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, total_ratio,\n","                                                     config.loc_set.zone.front_wick_score[score_idx], show_detail)\n","\n","                else:\n","                    if config.loc_set.zone.front_sign[score_idx] == \"up\":\n","                        const_ = \"h_front_wick_score >= config.loc_set.zone.front_wick_score[score_idx]\"\n","                    else:\n","                        const_ = \"h_front_wick_score <= config.loc_set.zone.front_wick_score[score_idx]\"\n","                    const_bool_ = eval(const_)\n","                    mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_front_wick_score,\n","                                                     config.loc_set.zone.front_wick_score[score_idx], show_detail)\n","\n","            if config.loc_set.zone.body_score[score_idx] != \"None\":\n","                if config.loc_set.zone.body_sign[score_idx] == \"up\":\n","                    const_ = \"h_body_score >= config.loc_set.zone.body_score[score_idx]\"\n","                else:\n","                    const_ = \"h_body_score <= config.loc_set.zone.body_score[score_idx]\"\n","                const_bool_ = eval(const_)\n","                mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_body_score,\n","                                                 config.loc_set.zone.body_score[score_idx],\n","                                                 show_detail)\n","\n","            if config.loc_set.zone.back_wick_score[score_idx] != \"None\":\n","                if config.loc_set.zone.back_sign[score_idx] == \"up\":\n","                    const_ = \"h_back_wick_score <= -config.loc_set.zone.back_wick_score[score_idx]\"\n","                else:\n","                    const_ = \"h_back_wick_score >= -config.loc_set.zone.back_wick_score[score_idx]\"\n","                const_bool_ = eval(const_)\n","                mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_back_wick_score,\n","                                                 -config.loc_set.zone.back_wick_score[score_idx],\n","                                                 show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def candle_game2(order_side, res_df, config, i, shared_ticks, mr_const_cnt, mr_score, show_detail):\n","    ho = res_df['hopen_H'].iloc[i]\n","    hh = res_df['high'].iloc[i + 1 - shared_ticks: i + 1].max()\n","    hl = res_df['low'].iloc[i + 1 - shared_ticks: i + 1].min()\n","    hc = res_df['close'].iloc[i]\n","    h_front_wick_score, h_body_score, h_back_wick_score = get_candle_score(ho, hh, hl, hc)\n","    if order_side == OrderSide.SELL:\n","        # ------ public const_ ------ #\n","        # const_ = \"ho > hc\"\n","        # const_bool_ = eval(const_)\n","        # if show_detail:\n","        #     sys_log3.warning(\"ho > hc : {:.5f} {:.5f} ({})\".format(ho, hc, const_))\n","        # mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, res_df, open_side, show_detail)\n","\n","        if config.loc_set.zone.front_wick_score2 != \"None\":\n","            const_ = \"h_front_wick_score <= -config.loc_set.zone.front_wick_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_front_wick_score, -config.loc_set.zone.front_wick_score2,\n","                                             show_detail)\n","\n","        if config.loc_set.zone.body_score2 != \"None\":\n","            const_ = \"h_body_score >= config.loc_set.zone.body_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_body_score, config.loc_set.zone.body_score2, show_detail)\n","\n","        if config.loc_set.zone.back_wick_score2 != \"None\":\n","            const_ = \"h_back_wick_score >= config.loc_set.zone.back_wick_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_back_wick_score, config.loc_set.zone.back_wick_score2,\n","                                             show_detail)\n","    else:\n","        if config.loc_set.zone.front_wick_score2 != \"None\":\n","            const_ = \"h_front_wick_score >= config.loc_set.zone.front_wick_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_front_wick_score, config.loc_set.zone.front_wick_score2,\n","                                             show_detail)\n","\n","        if config.loc_set.zone.body_score2 != \"None\":\n","            const_ = \"h_body_score >= config.loc_set.zone.body_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_body_score, config.loc_set.zone.body_score2, show_detail)\n","\n","        if config.loc_set.zone.back_wick_score2 != \"None\":\n","            const_ = \"h_back_wick_score <= -config.loc_set.zone.back_wick_score2\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, h_back_wick_score, -config.loc_set.zone.back_wick_score2,\n","                                             show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def spread(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    tp_fee, out_fee = calc_tp_out_fee(config)\n","\n","    if open_side == OrderSide.SELL:\n","        spread = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_5m'].iloc[\n","            # spread = (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - out_fee * res_df['bb_base_5m'].iloc[\n","            # i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + tp_fee *\n","            i]) / (res_df['bb_base_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","                   res_df['bb_base_5m'].iloc[i])\n","        # spread = (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_base_15m'].iloc[\n","        #     i]) / (res_df['bb_base_15m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","        #             res_df['bb_base_15m'].iloc[i])\n","\n","        # spread = (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] - tp_fee * res_df['bb_lower_5m'].iloc[\n","        #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['bb_lower_5m'].iloc[i] + out_fee *\n","        #             res_df['bb_lower_5m'].iloc[i])\n","\n","        # spread = (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['dc_lower_5m'].iloc[\n","        #     i]) / (res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","        #             res_df['dc_lower_5m'].iloc[i])\n","        # spread = ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 - tp_fee * res_df['dc_lower_5m'].iloc[\n","        #     i]) / ((res_df['dc_upper_15m'].iloc[i] - res_df['dc_lower_5m'].iloc[i])/2 + out_fee *\n","        #             res_df['dc_lower_5m'].iloc[i])\n","\n","        const_ = \"spread >= config.loc_set.zone.short_spread\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, spread, config.loc_set.zone.short_spread, show_detail)\n","    else:\n","        spread = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - tp_fee * res_df['bb_upper_5m'].iloc[\n","            # spread = (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] - out_fee * res_df['bb_upper_5m'].iloc[\n","            # i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + tp_fee *\n","            i]) / (res_df['bb_upper_5m'].iloc[i] - res_df['dc_lower_5m'].iloc[i] + out_fee *\n","                   res_df['bb_upper_5m'].iloc[i])\n","\n","        # spread = (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] - tp_fee * res_df['dc_upper_5m'].iloc[\n","        #     i]) / (res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i] + out_fee *\n","        #             res_df['dc_upper_5m'].iloc[i])\n","        # spread = ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 - tp_fee * res_df['dc_upper_5m'].iloc[\n","        #     i]) / ((res_df['dc_upper_5m'].iloc[i] - res_df['dc_lower_15m'].iloc[i])/2 + out_fee *\n","        #             res_df['dc_upper_5m'].iloc[i])\n","\n","        const_ = \"spread >= config.loc_set.zone.long_spread\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, spread, config.loc_set.zone.long_spread, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def dtk(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    strat_version = config.strat_version\n","    if open_side == OrderSide.SELL:\n","        # if res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i] >= res_df['short_rtc_1'].iloc[i] - res_df['h_short_rtc_gap'].iloc[i] * config.loc_set.zone.dt_k:\n","        #     dtk_v1 & v2 platform     #\n","        if config.loc_set.zone.dtk_dc_itv != \"None\":\n","            dc = res_df['dc_lower_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","            dt_k = res_df['short_dtk_1_{}'.format(strat_version)].iloc[i] - \\\n","                   res_df['short_dtk_gap_{}'.format(strat_version)].iloc[i] * config.loc_set.zone.dt_k\n","\n","            const_ = \"dc >= dt_k\"  # short 이라, tp_line 이 dc 보다 작아야하는게 맞음 (dc 가 이미 tp_line 에 다녀오면 안되니까)\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc, dt_k, show_detail)\n","\n","            #     dc_v2   #\n","        else:\n","            dc = res_df['dc_lower_v2'.format(strat_version)].iloc[i]\n","            dt_k = res_df['short_dtk_1_{}'.format(strat_version)].iloc[i] - \\\n","                   res_df['short_dtk_gap_{}'.format(strat_version)].iloc[i] * config.loc_set.zone.dt_k\n","\n","            const_ = \"dc >= dt_k\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc, dt_k, show_detail)\n","    else:\n","        if config.loc_set.zone.dtk_dc_itv != \"None\":\n","            dc = res_df['dc_upper_%s' % config.loc_set.zone.dtk_dc_itv].iloc[i]\n","            dt_k = res_df['long_dtk_1_{}'.format(strat_version)].iloc[i] + \\\n","                   res_df['long_dtk_gap_{}'.format(strat_version)].iloc[i] * config.loc_set.zone.dt_k\n","\n","            const_ = \"dc <= dt_k\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc, dt_k, show_detail)\n","\n","        else:\n","            #     dc_v2     #\n","            dc = res_df['dc_upper_v2'.format(strat_version)].iloc[i]\n","            dt_k = res_df['long_dtk_1_{}'.format(strat_version)].iloc[i] + \\\n","                   res_df['long_dtk_gap_{}'.format(strat_version)].iloc[i] * config.loc_set.zone.dt_k\n","\n","            const_ = \"dc <= dt_k\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc, dt_k, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def bb_lower2_close(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    if open_side == OrderSide.SELL:\n","        close = res_df['close'].iloc[i]\n","        bb_upper2_ = res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].iloc[i]\n","\n","        const_ = \"bb_upper2_ < close\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_upper2_, close, show_detail)\n","    else:\n","        close = res_df['close'].iloc[i]\n","        bb_lower2_ = res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].iloc[i]\n","\n","        const_ = \"bb_lower2_ > close\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_lower2_, close, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def bb_base_4h_close(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    close = res_df['close'].iloc[i]\n","    bb_base_4h = res_df['bb_base_4h'].iloc[i]\n","    if open_side == OrderSide.SELL:\n","        # const_ = \"close > bb_base_4h\"\n","        const_ = \"close < bb_base_4h\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, close, bb_base_4h, show_detail)\n","    else:\n","        # const_ = \"close < bb_base_4h\"\n","        const_ = \"close > bb_base_4h\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, close, bb_base_4h, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def bb_upper_5m_bb_base_(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    if open_side == OrderSide.SELL:\n","        bb_upper_5m = res_df['bb_upper_5m'].iloc[i]\n","        bb_base_ = res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i]\n","\n","        const_ = \"bb_upper_5m < bb_base_\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_upper_5m, bb_base_, show_detail)\n","    else:\n","        bb_lower_5m = res_df['bb_lower_5m'].iloc[i]\n","        bb_base_ = res_df['bb_base_%s' % config.loc_set.zone.bbz_itv].iloc[i]\n","\n","        const_ = \"bb_lower_5m > bb_base_\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_lower_5m, bb_base_, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def bb_upper_5m_ep_(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    strat_version = config.strat_version\n","    if open_side == OrderSide.SELL:\n","        bb_upper_5m = res_df['bb_upper_5m'].iloc[i]\n","        short_ep_ = res_df['short_ep_{}'.format(strat_version)].iloc[i]\n","\n","        const_ = \"bb_upper_5m > short_ep_\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_upper_5m, short_ep_, show_detail)\n","    else:\n","        bb_lower_5m = res_df['bb_lower_5m'].iloc[i]\n","        long_ep_ = res_df['long_ep_{}'.format(strat_version)].iloc[i]\n","\n","        const_ = \"bb_lower_5m < long_ep_\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_lower_5m, long_ep_, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def dc_upper_5m_bb_upper_15m(open_side, res_df, config, i, prev_hopen_idx, mr_const_cnt, mr_score, show_detail):\n","    if i < 0 or (i >= 0 and prev_hopen_idx >= 0):  # considering ide & trader platform\n","        # if res_df['dc_upper_5m'].iloc[prev_hopen_idx] < res_df['bb_upper_15m'].iloc[i]:\n","        if open_side == OrderSide.SELL:\n","            dc_upper_5m = res_df['dc_upper_5m'].iloc[prev_hopen_idx]\n","            bb_upper_15m = res_df['bb_upper_15m'].iloc[prev_hopen_idx]\n","\n","            const_ = \"bb_upper_15m > dc_upper_5m\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_upper_15m, dc_upper_5m, show_detail)\n","        else:\n","            dc_lower_5m = res_df['dc_lower_5m'].iloc[prev_hopen_idx]\n","            bb_lower_15m = res_df['bb_lower_15m'].iloc[prev_hopen_idx]\n","\n","            const_ = \"bb_lower_15m < dc_lower_5m\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_lower_15m, dc_lower_5m, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def dc_upper_5m_ema_5m(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    if open_side == OrderSide.SELL:\n","        dc_upper_5m = res_df['dc_upper_5m'].iloc[i]\n","        ema_5m = res_df['ema_5m'].iloc[i]\n","\n","        const_ = \"dc_upper_5m < ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc_upper_5m, ema_5m, show_detail)\n","    else:\n","        dc_lower_5m = res_df['dc_lower_5m'].iloc[i]\n","        ema_5m = res_df['ema_5m'].iloc[i]\n","\n","        const_ = \"dc_lower_5m > ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc_lower_5m, ema_5m, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def close_ema_5m(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    close = res_df['close'].iloc[i]\n","    ema_5m = res_df['ema_5m'].iloc[i]\n","    if open_side == OrderSide.SELL:\n","        const_ = \"close < ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, close, ema_5m, show_detail)\n","    else:\n","        const_ = \"close > ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, close, ema_5m, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def bb_upper_30m_ema_5m(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    if open_side == OrderSide.SELL:\n","        bb_upper_30m = res_df['bb_upper_30m'].iloc[i]\n","        ema_5m = res_df['ema_5m'].iloc[i]\n","\n","        const_ = \"bb_upper_30m > ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_upper_30m, ema_5m, show_detail)\n","    else:\n","        bb_lower_30m = res_df['bb_lower_30m'].iloc[i]\n","        ema_5m = res_df['ema_5m'].iloc[i]\n","\n","        const_ = \"bb_lower_30m < ema_5m\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, bb_lower_30m, ema_5m, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def degree(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    norm_period = 120\n","    if i < 0 or (i > norm_period):  # considering idep & trader platform\n","        norm_res = res_df['target_diff'].iloc[i] / res_df['norm_range'].iloc[i]\n","        if open_side == OrderSide.SELL:\n","            const_ = \"norm_res < -config.loc_set.zone.degree\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, norm_res, -config.loc_set.zone.degree, show_detail)\n","        else:\n","            const_ = \"norm_res > config.loc_set.zone.degree\"\n","            const_bool_ = eval(const_)\n","            mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, norm_res, config.loc_set.zone.degree, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","# def hopen_H_ema_5m(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail): # Todo - hopen 잘사용해야함 (i)\n","#     hopen_H = res_df['hopen_H'].iloc[i]\n","#     ema_5m = res_df['ema_5m'].iloc[i]\n","#     if open_side == OrderSide.SELL:\n","#         const_ = \"hopen_H < ema_5m\"\n","#         const_bool_ = eval(const_)\n","#         mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, hopen_H, ema_5m, show_detail)\n","#     else:\n","#         const_ = \"hopen_H > ema_5m\"\n","#         const_bool_ = eval(const_)\n","#         mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, hopen_H, ema_5m, show_detail)\n","#\n","#     return mr_const_cnt, mr_score\n","\n","\n","def descending_dc(open_side, res_df, config, i, mr_const_cnt, mr_score, show_detail):\n","    if open_side == OrderSide.SELL:\n","        dc_lower_5m = res_df['dc_lower_5m'].iloc[i]\n","        dc_lower_5m_min = res_df['dc_lower_5m'].iloc[i - 50:i].min()  # Todo - public 에서 rolling 해놓는게 latency 좋음\n","\n","        const_ = \"dc_lower_5m <= dc_lower_5m_min\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc_lower_5m, dc_lower_5m_min, show_detail)\n","    else:\n","        dc_upper_5m = res_df['dc_upper_5m'].iloc[i]\n","        dc_upper_5m_max = res_df['dc_upper_5m'].iloc[i - 50:i].max()  # Todo - public 에서 rolling 해놓는게 latency 좋음\n","\n","        const_ = \"dc_upper_5m >= dc_upper_5m_max\"\n","        const_bool_ = eval(const_)\n","        mr_const_cnt, mr_score = mr_calc(mr_const_cnt, mr_score, const_, const_bool_, dc_upper_5m, dc_upper_5m_max, show_detail)\n","\n","    return mr_const_cnt, mr_score\n","\n","\n","def zoned_tr_set(open_side, res_df, config, i, zone, show_detail):\n","    strat_version = config.strat_version\n","    if open_side == OrderSide.SELL:\n","        zone_dc_upper_v2_ = res_df['zone_dc_upper_v2'.format(strat_version)].iloc[i]\n","        long_dtk_plot_ = res_df['long_dtk_plot_1'].iloc[i] + res_df['long_dtk_plot_gap'].iloc[\n","            i] * config.loc_set.zone.zone_dt_k\n","\n","        const_ = \"zone_dc_upper_v2_ > long_dtk_plot_\"\n","        const_bool_ = eval(const_)\n","        if show_detail:\n","            sys_log3.warning(\"{} : {:.5f} {:.5f} ({})\".format(const_, zone_dc_upper_v2_, long_dtk_plot_, const_bool_))\n","\n","        if const_bool_:  # c_zone\n","            if config.ep_set.static_ep:\n","                res_df['short_ep_{}'.format(strat_version)].iloc[i] = res_df['short_ep2_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['short_ep_{}'.format(strat_version)] = res_df['short_ep2_{}'.format(strat_version)]\n","            if config.out_set.static_out:\n","                res_df['short_out_{}'.format(strat_version)].iloc[i] = \\\n","                    res_df['short_out_org_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['short_out_{}'.format(strat_version)] = res_df['short_out_org_{}'.format(strat_version)]\n","            zone = 'c'\n","        else:  # t_zone\n","            if config.ep_set.static_ep:\n","                res_df['short_ep_{}'.format(strat_version)].iloc[i] = \\\n","                    res_df['short_ep_org_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['short_ep_{}'.format(strat_version)] = res_df['short_ep_org_{}'.format(strat_version)]\n","            if config.out_set.static_out:\n","                res_df['short_out_{}'.format(strat_version)].iloc[i] = \\\n","                    res_df['short_out2_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['short_out_{}'.format(strat_version)] = res_df['short_out2_{}'.format(strat_version)]\n","            zone = 't'\n","    else:\n","        zone_dc_lower_v2_ = res_df['zone_dc_lower_v2'.format(strat_version)].iloc[i]\n","        short_dtk_plot_ = res_df['short_dtk_plot_1'].iloc[i] - res_df['short_dtk_plot_gap'].iloc[\n","            i] * config.loc_set.zone.zone_dt_k\n","\n","        const_ = \"zone_dc_lower_v2_ < short_dtk_plot_\"\n","        const_bool_ = eval(const_)\n","        if show_detail:\n","            sys_log3.warning(\"{} : {:.5f} {:.5f} ({})\".format(const_, zone_dc_lower_v2_, short_dtk_plot_, const_bool_))\n","\n","        if const_bool_:\n","            if config.ep_set.static_ep:\n","                res_df['long_ep_{}'.format(strat_version)].iloc[i] = res_df['long_ep2_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['long_ep_{}'.format(strat_version)] = res_df['long_ep2_{}'.format(strat_version)]\n","            if config.out_set.static_out:\n","                res_df['long_out_{}'.format(strat_version)].iloc[i] = \\\n","                    res_df['long_out_org_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['long_out_{}'.format(strat_version)] = res_df['long_out_org_{}'.format(strat_version)]\n","            zone = 'c'\n","        else:\n","            if config.ep_set.static_ep:\n","                res_df['long_ep_{}'.format(strat_version)].iloc[i] = \\\n","                    res_df['long_ep_org_{}'.format(strat_version)].iloc[i]\n","            else:\n","                res_df['long_ep_{}'.format(strat_version)] = res_df['long_ep_org_{}'.format(strat_version)]\n","            if config.out_set.static_out:\n","                res_df['long_out_{}'.format(strat_version)].iloc[i] = res_df['long_out2_{}'.format(strat_version)].iloc[\n","                    i]\n","            else:\n","                res_df['long_out_{}'.format(strat_version)] = res_df['long_out2_{}'.format(strat_version)]\n","            zone = 't'\n","    return res_df, zone\n","\n","\n","def legacy():  # 위에가 short\n","    # ------------------ tr scheduling ------------------ #\n","    # if config.loc_set.zone.tr_thresh != \"None\":\n","    #   tr = ((done_tp - ep_list[0] - tp_fee * ep_list[0]) / (ep_list[0] - done_out + out_fee * ep_list[0]))\n","\n","    # -------------- candle_dt_k -------------- #\n","    # mr_const_cnt += 1\n","    # # if res_df['dc_lower_1m'].iloc[i] >= res_df['hclose60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    # if res_df['dc_lower_1m'].iloc[i] >= res_df['hlow_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    #   mr_score += 1\n","\n","    # mr_const_cnt += 1\n","    # if res_df['dc_upper_1m'].iloc[i] <= res_df['hhigh_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    # # if res_df['dc_upper_1m'].iloc[i] <= res_df['hopen_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    #   mr_score += 1\n","\n","    # -------------- candle_dt_k -------------- #\n","    # mr_const_cnt += 1\n","    # # if res_df['dc_upper_1m'].iloc[i] <= res_df['hclose60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    # if res_df['dc_upper_1m'].iloc[i] <= res_df['hhigh_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    #   mr_score += 1\n","\n","    # mr_const_cnt += 1\n","    # if res_df['dc_lower_1m'].iloc[i] >= res_df['hlow_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    # # if res_df['dc_lower_1m'].iloc[i] >= res_df['hopen_60'].iloc[i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1)]:\n","    #   mr_score += 1\n","\n","    return\n"]},{"cell_type":"markdown","metadata":{"id":"HKdUKKl-483N"},"source":["### utils_public"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nzOYWA2kqZ0d"},"outputs":[],"source":["# from funcs.funcs_duration import *\n","\n","\n","#       Todo        #\n","#        1. future_data warning\n","#        2. lookback indi. warning - index error\n","#        3. ep_loc 의 i 는 close 기준임 -> 즉, last_index = -2 warning\n","\n","\n","def lvrg_set(res_df, config, open_side, ep_, out_, fee, limit_leverage=50):\n","    strat_version = config.strat_version\n","\n","    if open_side == OrderSide.SELL:\n","\n","        if strat_version in ['v3']:\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / (out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","            config.lvrg_set.leverage = config.lvrg_set.target_pct / (\n","                    out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","\n","            #     zone 에 따른 c_ep_gap 를 고려 (loss 완화 방향) / 윗 줄은 수익 극대화 방향\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / (out_ / res_df['short_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","        elif strat_version in ['v5_2', 'v7_3']:\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","            config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(\n","                ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(res_df['short_ep_org'].iloc[ep_j] / out_ - 1 - (fee + config.trader_set.market_fee))\n","\n","    else:\n","        #   윗 phase 는 min_pr 의 오차가 커짐\n","        if strat_version in ['v3']:\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / (ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","            config.lvrg_set.leverage = config.lvrg_set.target_pct / (\n","                    ep_ / out_ - 1 - (fee + config.trader_set.market_fee))\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / (res_df['long_ep_org'].iloc[ep_j] / out_ - 1 - (fee + config.trader_set.market_fee))\n","\n","        elif strat_version in ['v5_2', 'v7_3']:\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","            config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(\n","                out_ / ep_ - 1 - (fee + config.trader_set.market_fee))\n","            # config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(out_ / res_df['long_ep_org'].iloc[ep_j] - 1 - (fee + config.trader_set.market_fee))\n","\n","    if not config.lvrg_set.allow_float:\n","        config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","    # -------------- leverage rejection -------------- #\n","    if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","        return None\n","\n","    config.lvrg_set.leverage = max(config.lvrg_set.leverage, 1)\n","\n","    config.lvrg_set.leverage = min(limit_leverage, config.lvrg_set.leverage)\n","\n","    return config.lvrg_set.leverage\n","\n","\n","def sync_check(df_, config, order_side=\"OPEN\", row_slice=True):\n","    make_itv_list = [m_itv.replace('m', 'T') for m_itv in config.trader_set.itv_list]\n","    row_list = config.trader_set.row_list\n","    rec_row_list = config.trader_set.rec_row_list\n","    offset_list = config.trader_set.offset_list\n","\n","    assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","    htf_df_list = [to_htf(df_, itv_=itv_, offset=offset_) for itv_idx, (itv_, offset_)\n","                   in enumerate(zip(make_itv_list, offset_list)) if itv_idx != 0]  #\n","    htf_df_list.insert(0, df_)\n","\n","    # for htf_df_ in htf_df_list:\n","    #     print(htf_df_.tail())\n","\n","    #       Todo        #\n","    #        1. row_list calc.\n","    #           a. indi. 를 만들기 위한 최소 period 가 존재하고, 그 indi. 를 사용한 lb_period 가 존재함\n","    #           b. => default_period + lb_period\n","    #               i. from sync_check, public_indi, ep_point2, ep_dur 의 tf 별 max lb_period check\n","    #                   1. default_period + max lb_period check\n","    #                       a. 현재까지 lb_period_list\n","    #                           h_prev_idx (open / close) 60\n","    #                           dc_period 135\n","    #                           zone_dc_period 135\n","\n","    # --------- slicing (in trader phase only) --------- #\n","    #               --> latency 영향도가 높은 곳은 이곳\n","    if row_slice:  # recursive 가 아닌 indi. 의 latency 를 고려한 slicing\n","        df, df_5T, df_15T, df_30T, df_4H = [df_s.iloc[-row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","        rec_df, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_4H = [df_s.iloc[-rec_row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","    else:\n","        df, df_5T, df_15T, df_30T, df_4H = htf_df_list\n","        rec_df, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_4H = htf_df_list\n","\n","    # --------- add indi. --------- #\n","\n","    #        1. 필요한 indi. 는 enlist_epouttp & mr_check 보면서 삽입\n","    #        2. min use_rows 계산을 위해서, tf 별로 gathering 함        #\n","    start_0 = time.time()\n","\n","    df = dc_line(df, None, '1m', dc_period=20)\n","    df = bb_line(df, None, '1m')\n","    # print(df.tail())\n","\n","    df = dc_line(df, df_5T, '5m')\n","    df = bb_line(df, df_5T, '5m')\n","\n","    df = dc_line(df, df_15T, '15m')\n","    df = bb_line(df, df_15T, '15m')\n","\n","    df = bb_line(df, df_30T, '30m')\n","\n","    # print(time.time() - start_0)\n","\n","    # start_0 = time.time()\n","    df = bb_line(df, df_4H, '4h')\n","    # print(time.time() - start_0)\n","\n","    rec_df['rsi_1m'] = rsi(rec_df, 14)  # Todo - recursive, 250 period\n","    df = df.join(to_lower_tf_v2(df, rec_df.iloc[:, [-1]], [-1], backing_i=0), how='inner')  # <-- join same_tf manual\n","    # print(df.rsi_1m.tail())\n","\n","    if order_side in [\"OPEN\"]:\n","        rec_df_5T['ema_5m'] = ema(rec_df_5T['close'], 195)  # Todo - recursive, 1100 period (5T)\n","        df = df.join(to_lower_tf_v2(df, rec_df_5T, [-1]), how='inner')\n","\n","    return df\n","\n","\n","def public_indi(res_df, config, np_timeidx, order_side=\"OPEN\"):\n","    #       Todo        #\n","    #        1. future data warning\n","    res_df[\"ema_1m\"] = ema(res_df['close'], 200)\n","\n","    strat_version = config.strat_version\n","    res_df = dc_level(res_df, '5m', 1)\n","    res_df = bb_level(res_df, '5m', 1)\n","    # res_df = st_level(res_df, '5m', 1)\n","\n","    res_df = dc_level(res_df, '15m', 1)\n","    res_df = bb_level(res_df, '15m', 1)\n","    res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    norm_cols = ['open', 'high', 'low', 'close', 'ema_1m']\n","    target_col = ['ema_1m']\n","    norm_period = 120\n","    rolled_data = res_df[norm_cols].rolling(norm_period)\n","    res_df['norm_range'] = rolled_data.max().max(axis=1) - rolled_data.min().min(axis=1)\n","    res_df['target_diff'] = res_df[target_col].diff(norm_period)\n","\n","    # res_df = st_level(res_df, '15m', 1)\n","\n","    # res_df = dc_level(res_df, '30m', 1)\n","    # res_df = bb_level(res_df, '30m', 1)\n","    # res_df = st_level(res_df, '30m', 1)\n","\n","    # res_df = bb_level(res_df, '1h', 1)\n","\n","    res_df = bb_level(res_df, '4h', 1)\n","\n","    res_df['dc_upper_v2'.format(strat_version)] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()\n","    res_df['dc_lower_v2'.format(strat_version)] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","\n","    res_df['zone_dc_upper_v2'.format(strat_version)] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()\n","    res_df['zone_dc_lower_v2'.format(strat_version)] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    if order_side in [\"OPEN\"]:\n","        start_0 = time.time()\n","\n","        #       score 로 표현한 이유 : ratio 의 의미를 드러냄        #\n","        res_df[\"front_wick_score\"], res_df['body_score'], res_df[\"back_wick_score\"] = candle_score(res_df)\n","        # print(\"~ wick_score() elapsed time : {}\".format(time.time() - start_0))\n","\n","        start_0 = time.time()\n","\n","        h_c_intv1 = '15T'\n","        h_c_intv2 = 'H'\n","        res_df = h_candle_v2(res_df, h_c_intv1)\n","        res_df = h_candle_v2(res_df, h_c_intv2)\n","\n","        # sys_log3.warning(\"~ h_wick_score elapsed time : {}\".format(time.time() - start_0))\n","        # print(\"wick_score() ~ h_candle() elapsed time : {}\".format(time.time() - start_0))\n","\n","        h_c_itv = h_c_intv1\n","        h_candle_col = ['hopen_{}'.format(h_c_itv), 'hhigh_{}'.format(h_c_itv), 'hlow_{}'.format(h_c_itv),\n","                        'hclose_{}'.format(h_c_itv)]\n","\n","        res_df['h_front_wick_score'], res_df['h_body_score'], res_df['h_back_wick_score'] = candle_score(res_df, ohlc_col=h_candle_col)\n","\n","    #     temp indi.    #\n","    # res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","    # res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","    # res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    return res_df\n","\n","\n","def short_point2(res_df, config, i, out_j, allow_ep_in):\n","    if config.strat_version == 'v5_2' and allow_ep_in == 0:\n","\n","        if (res_df['dc_upper_1m'].iloc[i - 1] <= res_df['dc_upper_15m'].iloc[i]) & \\\n","                (res_df['dc_upper_15m'].iloc[i - 1] != res_df['dc_upper_15m'].iloc[i]):\n","            # if (res_df['dc_upper_1m'].iloc[e_j - 1] <= res_df['dc_upper_5m'].iloc[e_j]) & \\\n","            #     (res_df['dc_upper_5m'].iloc[e_j - 1] != res_df['dc_upper_5m'].iloc[e_j]):\n","            # (res_df['dc_upper_15m'].iloc[e_j] <= res_df['ema_5m'].iloc[e_j]):\n","            pass  # 일단, pass (non_logging)\n","        else:\n","            return 0, out_j  # input out_j could be initial_i\n","\n","        # if res_df['ema_5m'].iloc[i] + res_df['dc_gap_5m'].iloc[i] * config.loc_set.point2.ce_gap <= res_df['close'].iloc[i]:\n","        #   pass\n","        # else:\n","        #   return 0, out_j\n","\n","        # if res_df['bb_upper_5m'].iloc[i] <= res_df['ema_5m'].iloc[i]:\n","        #   pass\n","        # else:\n","        #   return 0, out_j\n","\n","        return 1, i  # i = e_j\n","\n","    return 1, out_j  # allow_ep_in, out_j (for idep)\n","\n","\n","def long_point2(res_df, config, i, out_j, allow_ep_in):\n","    if config.strat_version == 'v5_2' and allow_ep_in == 0:\n","\n","        if (res_df['dc_lower_1m'].iloc[i - 1] >= res_df['dc_lower_15m'].iloc[i]) & \\\n","                (res_df['dc_lower_15m'].iloc[i - 1] != res_df['dc_lower_15m'].iloc[i]):\n","            pass\n","        else:\n","            return 0, out_j  # input out_j could be initial_i\n","\n","        # if res_df['ema_5m'].iloc[i] - res_df['dc_gap_5m'].iloc[i] * config.loc_set.point2.ce_gap >= res_df['close'].iloc[i]:\n","        #   pass\n","        # else:\n","        #   return 0, out_j\n","\n","        # if res_df['bb_lower_5m'].iloc[i] >= res_df['ema_5m'].iloc[i]:\n","        #   pass\n","        # else:\n","        #   return 0, out_j\n","\n","        return 1, i  # i = e_j\n","\n","    return 1, out_j\n","\n","\n","def ep_loc(res_df, config, i, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):\n","    #       Todo : const warning msg manual        #\n","    #        1. just copy & paste const as string\n","    #           a. ex) const_ = a < b -> \"a < b\"\n","    strat_version = config.strat_version\n","\n","    # ------- param init ------- #\n","    open_side = None\n","\n","    mr_const_cnt = 0\n","    mr_score = 0\n","    zone = 'n'\n","\n","    # ------------------ candle_score ------------------ #\n","    # ------ candle_score_v0 (1m initial tick 기준임)  ------ #\n","    if config.loc_set.zone.front_wick_score0 != \"None\":\n","        #   i - warning checked     #\n","        candle_game0(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------ candle_score_v1 (previous)  ------ #\n","    wick_score_arr = np.array([config.loc_set.zone.front_wick_score, config.loc_set.zone.body_score, config.loc_set.zone.back_wick_score])\n","    assert wick_score_arr.size % 3 == 0, \"wick_score_arr.size % 3 == 0\"\n","    if np.sum(wick_score_arr == \"None\") != wick_score_arr.size:\n","        # Todo - public 에서 정의 가능할 것\n","        # ID3_1 기준 - 현재까지, i 의 intmin 은 c_itv_ticks - 1 이기 때문에 아래의 logic 사용 가능함\n","        if strat_version in ['3_1']:\n","            prev_hclose_idx_list = [i - config.loc_set.zone.c_itv_ticks * nbar_ for nbar_ in range(len(config.loc_set.zone.front_wick_score))]\n","        else:\n","            prev_hclose_idx_list = [i - (np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1 + config.loc_set.zone.c_itv_ticks * nbar_)\n","                                    for nbar_ in range(len(config.loc_set.zone.front_wick_score))]\n","        for score_idx, prev_hclose_idx in enumerate(prev_hclose_idx_list):    # Todo - recursive on mr_const & score\n","            mr_const_cnt, mr_score = candle_game(ep_loc_side, res_df, config, i, score_idx, prev_hclose_idx, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------ candle_score_v2 (current) ------ #\n","    # 1. wick_score1 과 동시적용 기능을 위해 병렬 구성\n","    # 2. body_score 은 > 부호만 허용, else_score 는 양부호 (<, >) 허용 (음수 존재함)\n","    #   a. front <-> back_score 의 부호는 상반되어야할 것\n","    wick_score2_arr = np.array([config.loc_set.zone.front_wick_score2, config.loc_set.zone.body_score2, config.loc_set.zone.back_wick_score2])\n","    if np.sum(wick_score2_arr == \"None\") != wick_score2_arr.size:\n","        # => future_data warning 으로 아래와같이 변경함\n","        #   i - warning checked     #\n","        shared_ticks = np_timeidx[i] % config.loc_set.zone.c_itv_ticks + 1  # Todo - public 에서 정의 가능할 것\n","        candle_game2(ep_loc_side, res_df, config, i, shared_ticks, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------------------ spread scheduling ------------------ #\n","    if config.loc_set.zone.short_spread != \"None\":\n","        spread(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------------------ dtk ------------------ #\n","    if config.loc_set.zone.dt_k != \"None\":\n","        dtk(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------------------ zone rejection  ------------------ #\n","    if config.loc_set.zone.zone_rejection:\n","    #       config 로 통제할 수 없는 rejection 은 strat_version 으로 조건문을 나눔 (lvrg_set 과 동일)\n","    # ------------ by bb ------------ #\n","        if strat_version in ['v5_2']:\n","            bb_lower2_close(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","            bb_base_4h_close(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","        if strat_version in ['v7_3', '1_1']:\n","            bb_upper_5m_bb_base_(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","            bb_upper_5m_ep_(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","            # Todo - prev_hopen_idx -> public 에서 정의 가능할 것\n","            #  기존에, +1 을 한 이유는, i 가 0 min 일 경우 prev_hopen 을 구하기 위함임, 이곳의 hopen_idx 개념이 모호함\n","            # prev_hopen_idx = i - (np_timeidx[\n","            #                           i] % config.loc_set.zone.c_itv_ticks + 1 + config.loc_set.zone.c_itv_ticks) + config.loc_set.zone.ad_idx\n","            # dc_upper_5m_bb_upper_15m(ep_loc_side, res_df, config, i, prev_hopen_idx, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------------ by ema ------------ #\n","        if strat_version in ['v7_3', '1_1']:\n","            dc_upper_5m_ema_5m(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","        if strat_version in ['v5_2', 'v3']:\n","            close_ema_5m(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","        if strat_version in ['3']:\n","            degree(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","            # hopen_H_ema_5m(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","    # ------------ by dc ------------ #\n","    # descending_dc(ep_loc_side, res_df, config, i, mr_const_cnt, mr_score, show_detail)\n","\n","    # -------------- zoned tr_set - post_work -------------- #\n","    if config.tr_set.c_ep_gap != \"None\":\n","        res_df, zone = zoned_tr_set(ep_loc_side, res_df, config, i, zone, show_detail)\n","\n","    if mr_const_cnt == mr_score:\n","        open_side = ep_loc_side\n","\n","    return res_df, open_side, zone\n","\n","\n","def short_ep_loc(res_df, config, i, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):   # Todo - temporary\n","    return ep_loc(res_df, config, i, np_timeidx, show_detail=show_detail, ep_loc_side=OrderSide.SELL)\n","\n","\n","def long_ep_loc(res_df, config, i, np_timeidx, show_detail=True, ep_loc_side=OrderSide.BUY):   # Todo - temporary\n","    return ep_loc(res_df, config, i, np_timeidx, show_detail=show_detail, ep_loc_side=OrderSide.BUY)\n"]},{"cell_type":"markdown","metadata":{"id":"o5psPOVOCA1c"},"source":["### utils_ override"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5q1V5vTjQszK"},"outputs":[],"source":["#     to utils2     #\n","utils2.enlist_rtc = enlist_rtc\n","\n","\n","#     when using override = 1   #\n","# enlist_rtc = utils2.enlist_rtc\n","# # enlist_rtc = enlist_rtc\n","# enlist_tr = utils2.enlist_tr"]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC"},"source":["## run"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TdAn2bHHBWMF","executionInfo":{"status":"ok","timestamp":1643087833624,"user_tz":-540,"elapsed":89633,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"}},"outputId":"34c70f31-53a9-4779-a445-92d976190aa0"},"outputs":[{"output_type":"stream","name":"stdout","text":["2022-01-10 ETHUSDT.ftr loaded !\n","~ load res_df elapsed time : 0.4821133613586426\n","load_df ~ enlist_rtc elapsed time : 10.507790327072144\n","config.strat_version : 3_1\n","config.loc_set.point.exp_itv : 3m\n","config.loc_set.point.tpg_itv1 : 5m\n","config.loc_set.point.tpg_itv0 : 5m\n","config.loc_set.point.outg_itv1 : 5m\n","config.loc_set.point.outg_itv0 : 5m\n","config.loc_set.point.outg_dc_period : None\n","-----------------------------------\n","config.loc_set.zone.short_spread : None\n","config.loc_set.zone.long_spread : None\n","config.loc_set.zone.tr_thresh : None\n","config.loc_set.zone.dtk_itv : 5m\n","config.loc_set.zone.dt_k : None\n","config.loc_set.zone.ei_k : 0\n","config.loc_set.zone.dc_period : 135\n","config.loc_set.zone.use_dtk_line : 0\n","config.loc_set.zone.zone_rejection : 0\n","config.loc_set.zone.bbz_itv : 15m\n","config.loc_set.zone.c_itv_ticks : 15\n","config.loc_set.zone.front_wick_score0 : None\n","config.loc_set.zone.front_wick_score : ['None', 0]\n","config.loc_set.zone.body_score : [20, 70]\n","config.loc_set.zone.back_wick_score : ['None', 'None']\n","config.loc_set.zone.front_wick_score2 : None\n","config.loc_set.zone.body_score2 : None\n","config.loc_set.zone.back_wick_score2 : None\n","config.loc_set.zone.gap_mply : 1\n","config.loc_set.zone.ad_idx : 19\n","config.loc_set.zone.degree : 0.4\n","config.loc_set.zone.zone_dt_k : 0.4\n","config.loc_set.zone.zone_dc_period : 135\n","-----------------------------------\n","config.loc_set.point.tf_entry : 15\n","config.loc_set.point.tf_entry_gap : None\n","config.loc_set.point.htf_entry : 15\n","config.loc_set.point.osc_band : 20\n","config.loc_set.point2.ce_gap : None\n","config.tr_set.ep_gap : 0.0\n","config.tr_set.tp_gap : 0.0\n","config.tr_set.decay_gap : None\n","config.tr_set.out_gap : 0.5\n","config.tr_set.c_ep_gap : None\n","config.tr_set.t_out_gap : 0.0\n","-----------------------------------\n","config.lvrg_set.leverage : 2\n","config.lvrg_set.static_lvrg : 1\n","config.lvrg_set.target_pct : 0.1\n","-----------------------------------\n","config.ep_set.entry_type : LIMIT\n","config.tp_set.tp_type : MARKET\n","config.tp_set.static_tp : 1\n","config.tp_set.decay_term : 60\n","rsi_out_stratver : ['v7_3', '1_1']\n","config.out_set.use_out : 0\n","config.out_set.out_type : MARKET\n","enlist_rtc ~ enlist_tr elapsed time : 0.25938987731933594\n","elapsed_time : 43.098151445388794\n","supblot231 passed\n","supblot232 passed\n","error in 233 : index 0 is out of bounds for axis 0 with size 0\n","error in 236 : division by zero\n","error in p_pr_plot : index -1 is out of bounds for axis 0 with size 0\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1400x1000 with 7 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}],"source":["multi_mode = 0\n","strat_switch_idx = 1    # 0, 1, 2... multi_mode 가 아닌 경우 필히 작성\n","public_override = 1\n","utils_override = 1\n","config_override = 1  # utils_public /utils / config 으로 세분화하는게 좋을 것으로 봄\n","\n","if not multi_mode:  # override 하지않는 경우에 config[0] 만을 사용하니, config[0] 에 어떤 version 을 배치할지 선택\n","    utils_list[0] = utils_list[strat_switch_idx]\n","    cfg_list[0] = cfg_list[strat_switch_idx]\n","\n","if config_override:\n","  cfg_list[0] = config\n","\n","config = cfg_list[0]  # custom base config, if use override -> set to config[0]\n","\n","tp_fee, out_fee = calc_tp_out_fee(config)   # Todo -> rev_pr 때문에 일단 이곳에도 선언함\n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","\n","# ------- plot param ------- #\n","fontsize = 10\n","show_detail = 0\n","title_position = (0.5, 0.5)\n","\n","# ------- temp param ------- #\n","rsi_out_stratver = ['v7_3', '1_1']\n","allow_osc_touch = 0\n","rsi_gap = 5\n","\n","early_out_tpg = 0.36\n","\n","# ------- survey param ------- #\n","itv_num_list = [1, 3, 5, 15]\n","\n","itv_list = ['15m', '30m', '1h', '4h']\n","# itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","\n","# x_val_list = np.arange(, 2.0, 0.1)     # prcn 1\n","x_val_list = np.arange(0.1, 0.8, 0.05)  # prcn 2\n","# x_val_list = np.arange(-0.695, -0.75, -0.005)    # prcn 3\n","# x_val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","# x_val_list = np.arange(1, 10, 1)   # prcn -1\n","# x_val_list = np.arange(10, 110, 10)   # prcn -2\n","\n","y_val_cols = [\"wr\", \"sr\", \"frq\", \"dpf\", \"acc_pr\", \"sum_pr\", \"acc_mdd\", \"sum_mdd\", \"liqd\", \"min_pr\", \"tr\", \"dr\"]\n","y_rev_val_cols = [\"wr\", \"sr\", \"acc_pr\", \"sum_pr\", \"acc_mdd\", \"sum_mdd\", \"min_pr\"]\n","\n","#       local env. 에서 load_data (.ftr) 는 colab (idep) 와 동기화되기 힘들 것 -> local 은 realtime\n","for key in ftr_list:\n","\n","    if config.trader_set.symbol in key:\n","        pass\n","    else:\n","        continue\n","\n","    start_0 = time.time()\n","\n","    res_df = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\") # .loc[pd.to_datetime(\"2021-07-10 04:59:59.999000\"):]\n","    # res_df = inter_df1\n","    # res_df = edited_inter_df2\n","    print(key, \"loaded !\")\n","    # break\n","\n","    print(\"~ load res_df elapsed time :\", time.time() - start_0)\n","\n","    start_0 = time.time()\n","\n","    np_timeidx = np.array(list(map(lambda x: intmin(x), res_df.index)))  # 이곳에 latency '3s'\n","\n","    if public_override:\n","        res_df = public_indi(res_df, config, np_timeidx)\n","    else:\n","        res_df = utils_public.public_indi(res_df, config, np_timeidx)\n","\n","    # -------------------- entlist rtc & tr 은 중복되는 여부에 따라 user 가 flexible coding 해야할 것 -------------------- #\n","    if utils_override:\n","        res_df = enlist_rtc(res_df, config, np_timeidx)\n","    else:\n","        for utils_, cfg_ in zip(utils_list, cfg_list):   # recursively\n","            res_df = utils_.enlist_rtc(res_df, cfg_, np_timeidx)\n","            if not multi_mode:\n","                break\n","\n","    print(\"load_df ~ enlist_rtc elapsed time :\", time.time() - start_0)\n","\n","    survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","    short_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","    long_survey_df = pd.DataFrame(index=x_val_list, columns=y_val_cols)\n","    rev_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","    rev_short_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","    rev_long_survey_df = pd.DataFrame(index=x_val_list, columns=y_rev_val_cols)\n","\n","    for survey_i, just_loop in enumerate(range(1)):\n","    # for survey_i, config.loc_set.zone.tr_thresh in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.short_spread in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.long_spread in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.dt_k in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.dc_period in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.ei_k in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.dr_error in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.bbz_itv in enumerate(itv_list):\n","    # for survey_i, config.loc_set.zone.gap_mply in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.ad_idx in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.zone.degree in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.tf_entry in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.front_wick_score in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.body_score in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.back_wick_score in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.front_wick_score2 in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.body_score2 in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.back_wick_score2 in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point.osc_band in enumerate(x_val_list):\n","    # for survey_i, config.loc_set.point2.ce_gap in enumerate(x_val_list):\n","    # for survey_i, config.tr_set.ep_gap in enumerate(x_val_list):\n","    # for survey_i, config.tr_set.out_gap in enumerate(x_val_list):\n","    # for survey_i, config.tr_set.tp_gap in enumerate(x_val_list):\n","    # for survey_i, config.lvrg_set.leverage in enumerate(x_val_list):\n","    # for survey_i, config.lvrg_set.target_pct in enumerate(x_val_list):\n","    # for survey_i, config.lvrg_set.target_pct in enumerate(x_val_list):\n","    # for survey_i, config.tp_set.decay_term in enumerate(x_val_list):\n","    # for survey_i, outg_dc_itv_num in enumerate(x_val_list):\n","    # for survey_i, exp_itv in enumerate(itv_list):\n","    # for survey_i, zone_dt_k in enumerate(x_val_list):\n","    # for survey_i, t_out_gap in enumerate(x_val_list):\n","    # for survey_i, zone_dc_period in enumerate(x_val_list):\n","    # for survey_i, early_out_tpg in enumerate(x_val_list):\n","    # for survey_i, ema_period in enumerate(x_val_list):\n","\n","      start_0 = time.time()\n","\n","      try:\n","\n","          print(\"config.strat_version :\", config.strat_version)\n","          print(\"config.loc_set.point.exp_itv :\", config.loc_set.point.exp_itv)\n","          print(\"config.loc_set.point.tpg_itv1 :\", config.loc_set.point.tpg_itv1)\n","          print(\"config.loc_set.point.tpg_itv0 :\", config.loc_set.point.tpg_itv0)\n","          print(\"config.loc_set.point.outg_itv1 :\", config.loc_set.point.outg_itv1)\n","          print(\"config.loc_set.point.outg_itv0 :\", config.loc_set.point.outg_itv0)\n","          print(\"config.loc_set.point.outg_dc_period :\", config.loc_set.point.outg_dc_period)\n","          print(\"-----------------------------------\")\n","          # print(\"dtk_dc_itv :\", dtk_dc_itv)\n","          # print(\"config.loc_set.dtk_dc_itv_num :\", config.loc_set.dtk_dc_itv_num :\",)\n","          print(\"config.loc_set.zone.short_spread :\", config.loc_set.zone.short_spread)\n","          print(\"config.loc_set.zone.long_spread :\", config.loc_set.zone.long_spread)\n","          print(\"config.loc_set.zone.tr_thresh :\", config.loc_set.zone.tr_thresh)\n","          print(\"config.loc_set.zone.dtk_itv :\", config.loc_set.zone.dtk_itv)\n","          print(\"config.loc_set.zone.dt_k :\", config.loc_set.zone.dt_k)\n","          print(\"config.loc_set.zone.ei_k :\", config.loc_set.zone.ei_k)\n","          print(\"config.loc_set.zone.dc_period :\", config.loc_set.zone.dc_period)\n","          print(\"config.loc_set.zone.use_dtk_line :\", config.loc_set.zone.use_dtk_line)\n","\n","          print(\"config.loc_set.zone.zone_rejection :\", config.loc_set.zone.zone_rejection)\n","          print(\"config.loc_set.zone.bbz_itv :\", config.loc_set.zone.bbz_itv)\n","          print(\"config.loc_set.zone.c_itv_ticks :\", config.loc_set.zone.c_itv_ticks)\n","          print(\"config.loc_set.zone.front_wick_score0 :\", config.loc_set.zone.front_wick_score0)\n","          print(\"config.loc_set.zone.front_wick_score :\", config.loc_set.zone.front_wick_score)\n","          print(\"config.loc_set.zone.body_score :\", config.loc_set.zone.body_score)\n","          print(\"config.loc_set.zone.back_wick_score :\", config.loc_set.zone.back_wick_score)\n","          print(\"config.loc_set.zone.front_wick_score2 :\", config.loc_set.zone.front_wick_score2)\n","          print(\"config.loc_set.zone.body_score2 :\", config.loc_set.zone.body_score2)\n","          print(\"config.loc_set.zone.back_wick_score2 :\", config.loc_set.zone.back_wick_score2)\n","          print(\"config.loc_set.zone.gap_mply :\", config.loc_set.zone.gap_mply)\n","          print(\"config.loc_set.zone.ad_idx :\", config.loc_set.zone.ad_idx)\n","          print(\"config.loc_set.zone.degree :\", config.loc_set.zone.degree)\n","          print(\"config.loc_set.zone.zone_dt_k :\", config.loc_set.zone.zone_dt_k)\n","          print(\"config.loc_set.zone.zone_dc_period :\", config.loc_set.zone.zone_dc_period)\n","          # print(\"config.loc_set.open_shift :\", config.loc_set.open_shift)\n","          print(\"-----------------------------------\")\n","          # print(\"config.ep_set.dr_error :\", config.ep_set.dr_error)\n","          print(\"config.loc_set.point.tf_entry :\", config.loc_set.point.tf_entry)\n","          print(\"config.loc_set.point.tf_entry_gap :\", config.loc_set.point.tf_entry_gap)\n","          print(\"config.loc_set.point.htf_entry :\", config.loc_set.point.htf_entry)\n","          print(\"config.loc_set.point.osc_band :\", config.loc_set.point.osc_band)\n","          print(\"config.loc_set.point2.ce_gap :\", config.loc_set.point2.ce_gap)\n","          print(\"config.tr_set.ep_gap :\", config.tr_set.ep_gap)\n","          print(\"config.tr_set.tp_gap :\", config.tr_set.tp_gap)\n","          print(\"config.tr_set.decay_gap :\", config.tr_set.decay_gap)\n","          print(\"config.tr_set.out_gap :\", config.tr_set.out_gap)\n","          print(\"config.tr_set.c_ep_gap :\", config.tr_set.c_ep_gap)\n","          print(\"config.tr_set.t_out_gap :\", config.tr_set.t_out_gap)\n","          print(\"-----------------------------------\")\n","          print(\"config.lvrg_set.leverage :\", config.lvrg_set.leverage)\n","          print(\"config.lvrg_set.static_lvrg :\", config.lvrg_set.static_lvrg)\n","          print(\"config.lvrg_set.target_pct :\", config.lvrg_set.target_pct)\n","          print(\"-----------------------------------\")\n","          print(\"config.ep_set.entry_type :\", config.ep_set.entry_type)\n","          print(\"config.tp_set.tp_type :\", config.tp_set.tp_type)\n","          print(\"config.tp_set.static_tp :\", config.tp_set.static_tp)\n","          print(\"config.tp_set.decay_term :\", config.tp_set.decay_term)\n","          print(\"rsi_out_stratver :\", rsi_out_stratver)\n","          print(\"config.out_set.use_out :\", config.out_set.use_out)\n","          print(\"config.out_set.out_type :\", config.out_set.out_type)\n","\n","      except Exception as e:\n","          print(e)\n","\n","      #       temp survey     #\n","      # if 'bb_upper_15m' in res_df.columns:\n","      #   res_df.drop(['bb_upper_15m', 'bb_lower_15m'], axis=1, inplace=True)\n","      # res_df = bb_level(res_df, '15m', config.loc_set.zone.gap_mply)\n","\n","      # ema_period = 195\n","      # print(\"ema_period :\", ema_period)\n","\n","      # df_5T = to_htf(res_df, '5T', offset='1h')\n","      # df_5T['ema_5m'] = ema(df_5T['close'], ema_period)   # ema formula issue\n","      # res_df.drop(['ema_5m'], axis=1, inplace=True, errors='ignore')\n","      # res_df = res_df.join(to_lower_tf_v2(res_df, df_5T, [-1]), how='inner')\n","\n","      if utils_override:\n","          res_df = enlist_tr(res_df, config, np_timeidx)\n","      else:\n","          for utils_, cfg_ in zip(utils_list, cfg_list):   # recursively\n","              res_df = utils_.enlist_tr(res_df, cfg_, np_timeidx)\n","              if not multi_mode:\n","                  break\n","\n","      print(\"enlist_rtc ~ enlist_tr elapsed time :\", time.time() - start_0)\n","\n","      # break\n","\n","      #       trading : 여기도 체결 결과에 대해 묘사함       #\n","      trade_list = []\n","      h_trade_list = []\n","      leverage_list = []\n","      fee_list = []\n","      short_fee_list = []\n","      long_fee_list = []\n","      open_list = []\n","      zone_list = []\n","      side_list = []\n","      strat_ver_list = []\n","\n","      tp_ratio_list = []\n","      short_tp_ratio_list = []\n","      long_tp_ratio_list = []\n","\n","      dr_list = []\n","      short_dr_list = []\n","      long_dr_list = []\n","\n","      liqd_list = []\n","      short_liqd_list = []\n","      long_liqd_list = []\n","\n","      nontp_liqd_list = []\n","      nontp_short_liqd_list = []\n","      nontp_long_liqd_list = []\n","\n","      nontp_pr_list = []\n","      nontp_short_pr_list = []\n","      nontp_long_pr_list = []\n","\n","      nontp_short_indexs = []\n","      nontp_long_indexs = []\n","\n","      nontp_short_ep_list = []\n","      nontp_long_ep_list = []\n","\n","      pr_list = []\n","      long_list = []\n","      short_list = []\n","\n","      h_pr_list = []\n","      h_long_list = []\n","      h_short_list = []\n","\n","      ep_tp_list = []\n","      h_ep_tp_list = []\n","      tp_state_list = []\n","\n","      i = 0\n","      while 1:\n","          # for i in range(len(res_df)):\n","\n","          run = 0\n","          open_side = None\n","\n","          for utils_, cfg_ in zip(utils_list, cfg_list):\n","\n","              #       entry_score     #\n","              if res_df['entry_{}'.format(cfg_.strat_version)][i] == cfg_.ep_set.short_entry_score:\n","                  #       ban      #\n","                  if not cfg_.pos_set.short_ban:\n","                      #       ep_loc      #\n","                      if public_override:\n","                          res_df, open_side, zone = short_ep_loc(res_df, cfg_,\n","                                                                  i,\n","                                                                  np_timeidx, show_detail)\n","                      else:\n","                          res_df, open_side, zone = utils_public.short_ep_loc(res_df, cfg_,\n","                                                                              i,\n","                                                                              np_timeidx, show_detail)\n","                      if open_side is not None:  # 조건 만족시 바로 break\n","                          #       assign      #\n","                          config = cfg_\n","                          break\n","\n","              #       entry_score     #\n","              elif res_df['entry_{}'.format(cfg_.strat_version)][i] == cfg_.ep_set.short_entry_score:\n","                  #       ban      #\n","                  if not cfg_.pos_set.long_ban:\n","                      #       ep_loc      #\n","                      if public_override:\n","                          res_df, open_side, zone = long_ep_loc(res_df, cfg_,\n","                                                                i,\n","                                                                np_timeidx, show_detail)\n","                      else:\n","                          res_df, open_side, zone = utils_public.long_ep_loc(res_df, cfg_,\n","                                                                              i,\n","                                                                              np_timeidx, show_detail)\n","                      if open_side is not None:\n","                          #       assign      #\n","                          config = cfg_\n","                          break\n","\n","              if not multi_mode:\n","                  break\n","\n","          if open_side is None:\n","              i += 1\n","              if i >= len(res_df):\n","                  break\n","              continue\n","\n","          if open_side == utils_public.OrderSide.SELL:\n","\n","              initial_i = i\n","              # print(\"short_ep_loc passed !\")\n","\n","              # --------------------- config 가 확정된 이후의 setting --------------------- #\n","              strat_version = config.strat_version\n","\n","              # ------- tp / out fee calc ------- #\n","              tp_fee, out_fee = calc_tp_out_fee(config)\n","\n","              # p_i 의 용도 모르겠음\n","              # if config.out_set.static_out:\n","              #     p_i = initial_i\n","              # else:\n","              #     p_i = i\n","\n","              # ------- fee init ------- #\n","              if config.ep_set.entry_type == 'LIMIT':\n","                  fee = config.trader_set.limit_fee\n","              else:\n","                  fee = config.trader_set.market_fee\n","\n","              # --------------- set partial tp --------------- #\n","              short_tps = [res_df['short_tp_{}'.format(strat_version)]]\n","              # short_tps = [short_tp2, short_tp] # org\n","              # short_tps = [short_tp, short_tp2]\n","\n","              ep_j = initial_i\n","              out_j = initial_i\n","\n","              # -------------- limit waiting : limit_out -------------- #\n","\n","              if config.ep_set.entry_type == \"LIMIT\":\n","\n","                  # allow_ep_in = 0 if strat_version in ['v5_2'] else 1\n","                  allow_ep_in = 0\n","                  entry_done = 0\n","                  entry_open = 0\n","                  prev_sar = None\n","\n","                  # for e_j in range(i, len(res_df)): # entry_signal 이 open 기준 (해당 bar 에서 체결 가능함)\n","                  if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","                      break\n","                  for e_j in range(i + 1, len(res_df)):  # entry signal이 close 기준 일 경우\n","\n","                      if not config.ep_set.static_ep:\n","                          ep_j = e_j\n","                          out_j = e_j\n","\n","                      if config.tp_set.static_tp:\n","                          # if config.ep_set.tpout_onexec:\n","                          #   tp_j = e_j\n","                          # else:\n","                          tp_j = initial_i\n","                      else:\n","                          tp_j = e_j\n","\n","                          #             1. ep 설정\n","                      # -------------- np.inf ep -------------- #\n","                      # if short_ep.iloc[initial_i] == np.inf:\n","                      #   break\n","\n","                      #     1. check ep_out     #\n","                      if strat_version in ['v3', 'v5_2', 'v7_3']:\n","                        if res_df['low'].iloc[e_j] <= res_df['h_short_rtc_1_{}'.format(strat_version)].iloc[tp_j] - \\\n","                                res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[\n","                                    tp_j] * config.loc_set.zone.ei_k:\n","                            break\n","\n","                      elif strat_version in ['3', '3_1']:\n","                        if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                          break\n","\n","                      # elif strat_version == 'v5_2':\n","                      # if res_df['low'].iloc[e_j] <= res_df['short_tp_{}'.format(strat_version)].iloc[tp_j]: # ep_out : tp_done\n","\n","                      # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] >= 50 - config.loc_set.point.osc_band) & \\\n","                      #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] < 50 - config.loc_set.point.osc_band):\n","                      #   break\n","\n","                      # if config.loc_set.zone.c_itv_ticks != \"None\":\n","\n","                      #   if np_timeidx[e_j] % config.loc_set.zone.c_itv_ticks == config.loc_set.zone.c_itv_ticks - 1:\n","                      #     break\n","\n","                      #     2. ep_loc.point2\n","                      if public_override:\n","                          allow_ep_in, out_j = short_point2(res_df, config, e_j, out_j, allow_ep_in)\n","                      else:\n","                          allow_ep_in, out_j = utils_public.short_point2(res_df, config, e_j, out_j,\n","                                                                          allow_ep_in)  # not defined yet,\n","\n","                      #     3. check ep_in       #\n","                      if allow_ep_in and res_df['high'].iloc[e_j] >= res_df['short_ep_{}'.format(strat_version)].iloc[\n","                          ep_j]:\n","                          entry_done = 1\n","                          # print(\"res_df['high'].iloc[e_j] :\", res_df['high'].iloc[e_j])\n","                          # print(\"e_j :\", e_j)\n","\n","                          #     이미, e_j open 이 ep 보다 높은 경우, entry[ep_j] => -2 로 변경   #\n","                          if res_df['open'].iloc[e_j] >= res_df['short_ep_{}'.format(strat_version)].iloc[ep_j]:\n","                              entry_open = 1\n","                          break\n","\n","                  i = e_j\n","                  # print(\"i = e_j :\", i)\n","\n","                  if entry_done:\n","                      pass\n","\n","                  else:\n","                      i += 1\n","                      if i >= len(res_df):\n","                          break\n","                      continue\n","\n","              # ----------------- end wait ----------------- #\n","\n","              # if e_j - initial_i >= 200:\n","              #   print(\"e_j, initial_i :\", e_j, initial_i)\n","              # print(\"e_j - initial_i :\", e_j - initial_i)\n","              # print()\n","\n","              open_list.append(initial_i)\n","              zone_list.append(zone)\n","              side_list.append('s')\n","              strat_ver_list.append(strat_version)\n","\n","              #     e_j 라는 변수는 MARKET 에 있어서 정의되서는 안되는 변수임   #\n","              if config.ep_set.entry_type == 'MARKET':\n","                  # try:\n","                  #   ep_list = [res_df['close'].iloc[e_j]]\n","                  # except Exception as e:\n","                  #   # print('error in ep_list (initial) :', e)\n","                  ep_list = [res_df['close'].iloc[ep_j]]\n","\n","              else:\n","                  if not entry_open:\n","                      ep_list = [res_df['short_ep_{}'.format(strat_version)].iloc[ep_j]]\n","\n","                  else:\n","                      #   ep_j 는 항상 있음, LIMIT 인 경우 e_j 도 항상 존재함 --> dynamic_ep 여부에 따라 ep_j = e_j 가 되는 경우만 존재할 뿐임\n","                      #   따라서, ep_j 로 통일 가능함 (dynamic_ep 인 경우, ep_j = e_j 되어있음)\n","                      fee = config.trader_set.market_fee\n","                      ep_list = [res_df['open'].iloc[e_j]]  # --> 체결이 되는 e_j idx 기준으로 하는게 맞음\n","\n","              if not config.lvrg_set.static_lvrg:\n","\n","                  ep_ = ep_list[0]\n","                  out_ = res_df['short_out_{}'.format(strat_version)].iloc[out_j]\n","                  if public_override:\n","                      config.lvrg_set.leverage = lvrg_set(res_df, config, \"SELL\", ep_, out_, fee)\n","                  else:\n","                      config.lvrg_set.leverage = utils_public.lvrg_set(res_df, config, \"SELL\", ep_, out_, fee)\n","\n","                  # -------------- leverage rejection -------------- #\n","                  if config.lvrg_set.leverage == None:\n","                      open_list.pop()\n","                      zone_list.pop()\n","                      side_list.pop()\n","                      strat_ver_list.pop()\n","\n","                      i += 1\n","                      if i >= len(res_df):\n","                          break\n","                      continue\n","\n","              leverage_list.append(config.lvrg_set.leverage)\n","\n","              # try:\n","              if config.ep_set.entry_type == \"MARKET\":\n","                  ep_idx_list = [\n","                      ep_j]  # ep_j 는 ep_type 유관하게 존재하는 변수니까 try 에 걸어두는게 맞음 <-- # market 인데, e_j 변수가 할당된 경우 고려해야함\n","              else:\n","                  ep_idx_list = [e_j]\n","\n","              out_idx_list = [out_j]\n","\n","              # except Exception as e:\n","              #   # print('error in ep_idx_list :', e)\n","              #   ep_idx_list = [e_j]\n","\n","              tp_list = []\n","              tp_idx_list = []\n","\n","              partial_tp_cnt = 0\n","              hedge_cnt = 1\n","\n","              h_ep, h_tp = None, None\n","              h_i, h_j = None, None\n","\n","              trade_done = 0\n","              cross_on = 0\n","              out = 0\n","              # config.out_set.retouch\n","\n","              #     Todo    #\n","              #      1. future_work : 상단의 retouch 와 겹침\n","              config.out_set.retouch = 0\n","\n","              if i == len(res_df) - 1:  # if j start from i + 1\n","                  open_list.pop()\n","                  zone_list.pop()\n","                  side_list.pop()\n","              for j in range(i + 1, len(res_df)):\n","\n","                  # for j in range(i, len(res_df)):\n","\n","                  if config.tp_set.static_tp:\n","                      if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","                          tp_j = ep_j  # tpout_onexec = using dynamic_ep --> using ep_j 에 대한 이유\n","                      else:\n","                          tp_j = initial_i\n","                  else:\n","                      tp_j = j\n","\n","                  if config.out_set.static_out:\n","                      if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","                          out_j = ep_j\n","                      # else:\n","                      #   out_j = initial_i   # --> referenced upper phase as initail_j / e_j (start of limit wait)\n","                  else:\n","                      out_j = j\n","\n","                  # -------------- sub ep -------------- #\n","                  # if res_df['high'].iloc[j - 1] <= res_df['sar2'].iloc[j - 1] and res_df['high'].iloc[j] > res_df['sar2'].iloc[j]:\n","\n","                  #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","                  #   if sub_ep < ep_list[-1]:\n","                  #     ep_list.append(sub_ep)\n","                  #     ep_idx_list.append(j)\n","\n","                  # -------------- hedge only once -------------- #\n","                  #             일단, h_quantity 는 초기 진입과 동일하게 설정         #\n","                  # if res_df['high'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","                  # if res_df['close'].iloc[j] >= res_df['minor_ST2_Up'].iloc[j] and hedge_cnt == 1:\n","                  # if res_df['close'].iloc[j] >= res_df['minor_ST3_Up'].iloc[j] and hedge_cnt == 1:\n","\n","                  #   h_ep = res_df['close'].iloc[j]\n","                  #   hedge_cnt -= 1\n","                  #   h_i = j\n","\n","                  # -------------- ultimate limit tp -------------- #\n","                  if not config.tp_set.non_tp:\n","\n","                      #               1. by price line             #\n","                      if config.tp_set.tp_type == 'LIMIT' or config.tp_set.tp_type == \"BOTH\":\n","\n","                          for s_i, short_tp_ in enumerate(short_tps):\n","\n","                              #     decay adjustment    #\n","                              #     tp_j includes dynamic_j   #\n","                              try:\n","                                  if config.tr_set.decay_gap != \"None\":\n","                                      decay_share = (j - initial_i) // config.tp_set.decay_term\n","                                      decay_remain = (j - initial_i) % config.tp_set.decay_term\n","                                      if j != initial_i and decay_remain == 0:\n","                                          short_tp_.iloc[tp_j] += \\\n","                                          res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[\n","                                              initial_i] * config.tr_set.decay_gap * decay_share\n","\n","                              except:\n","                                  pass\n","\n","                              if res_df['low'].iloc[j] <= short_tp_.iloc[\n","                                  tp_j] and partial_tp_cnt == s_i:  # we use static tp now\n","                                  # if res_df['low'].iloc[j] <= short_tp_.iloc[j]:\n","                                  # if res_df['low'].iloc[j] <= short_tp_.iloc[j] <= res_df['high'].iloc[j]: --> 이건 잘못되었음\n","\n","                                  if s_i == len(short_tps) - 1:\n","                                      trade_done = 1\n","\n","                                  partial_tp_cnt += 1\n","\n","                                  #         dynamic tp        #\n","                                  # if 0:\n","                                  if short_tp_.iloc[j] != short_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                                      #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 #\n","                                      # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                                      if res_df['open'].iloc[j] < short_tp_.iloc[j]:\n","\n","                                          # tp = short_tp_.iloc[initial_i]\n","                                          tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"d-short_open {}\".format(strat_version))\n","\n","                                      #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 #\n","                                      else:\n","\n","                                          # tp = short_tp_.iloc[initial_i]\n","                                          tp = short_tp_.iloc[j]\n","                                          # tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"d-short_tp {}\".format(strat_version))\n","\n","                                  #         static tp         #\n","                                  else:\n","\n","                                      #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 #\n","                                      #   non_inversion 의 경우, short_tp 가 가능함   #\n","\n","                                      # if res_df['open'].iloc[j] < short_tp_.iloc[initial_i]:\n","                                      if res_df['open'].iloc[j] < short_tp_.iloc[tp_j]:\n","\n","                                          # tp = short_tp_.iloc[initial_i]\n","\n","                                          if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                                              tp = res_df['open'].iloc[\n","                                                  j]  # tp_j -> initial_i 를 가리키기 때문에 decay 는 한번만 진행되는게 맞음\n","                                          else:\n","                                              tp = short_tp_.iloc[tp_j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"s-short_tp {}\".format(strat_version))\n","\n","                                      #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 #\n","                                      else:\n","\n","                                          # tp = short_tp_.iloc[initial_i]\n","                                          tp = short_tp_.iloc[tp_j]\n","\n","                                          # tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"s-short_tp {}\".format(strat_version))\n","\n","                                  tp_list.append(tp)\n","                                  tp_idx_list.append(j)\n","                                  fee += config.trader_set.limit_fee\n","\n","                      #           2. by signal        #\n","                      if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","                          market_tp = 0\n","\n","                          # -------------- sar tp -------------- #\n","                          # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","                          #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","                          #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","                          #       inversion     #\n","                          # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","                          #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","                          #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","\n","                          # ----------- st short ----------- #\n","                          # if res_df['close'].iloc[j] <= res_df['short_tp'].iloc[tp_j]:\n","\n","                          # -------------- sar pb tp -------------- #\n","                          # if res_df['low'].iloc[j] <= res_df['short_tp'].iloc[initial_i]:\n","\n","                          # -------------- st tp -------------- #\n","                          # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:\n","\n","                          # -------------- fisher tp -------------- #\n","                          # if entry[j] == 1:\n","\n","                          # -------------- timestamp -------------- #\n","                          if config.tp_set.time_tp:\n","                              if np_timeidx[\n","                                  j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1 and j - initial_i >= config.loc_set.point.tf_entry:\n","                                  market_tp = 1\n","\n","                                  # -------------- rsi -------------- #\n","                          if strat_version in rsi_out_stratver:\n","                              if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                      j - 1] >= 50 - config.loc_set.point.osc_band) & \\\n","                                      (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                            j] < 50 - config.loc_set.point.osc_band):\n","                                  # if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] <= 50 - config.loc_set.point.osc_band) & \\\n","                                  #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] > 50 - config.loc_set.point.osc_band):\n","                                  market_tp = 1\n","\n","                              # -------------- cci -------------- #\n","                              # if (res_df['cci_%s' % config.loc_set.point.exp_itv].iloc[j - 1] >= -config.loc_set.point.osc_band) & \\\n","                              #                  (res_df['cci_%s' % config.loc_set.point.exp_itv].iloc[j] < -config.loc_set.point.osc_band):\n","                              #   market_tp = 1\n","\n","                          # ---------------------------- early out ---------------------------- #\n","\n","                          # #         rsi slight touch        #\n","                          if allow_osc_touch:\n","                              if (np.min(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                          initial_i:j]) < 50 - config.loc_set.point.osc_band + rsi_gap) & \\\n","                                      (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] >= 50):\n","                                  market_tp = 1\n","\n","                                  #           tp early out          #\n","                          # # if (np.min(res_df['low'].iloc[e_j:j]) < res_df['short_tp'].iloc[tp_j]) & \\\n","                          # if (np.min(res_df['low'].iloc[e_j:j]) < res_df['h_short_rtc_1'].iloc[tp_j] - res_df['h_short_rtc_gap'].iloc[tp_j] * early_out_tpg) & \\\n","                          #   (res_df['close'].iloc[j] >= res_df['short_ep'].iloc[ep_j]):\n","                          #   market_tp = 1\n","\n","                          # if strat_version == \"v7\":\n","                          #   if res_df['dc_upper_1m'].iloc[j] > res_df['dc_upper_5m'].iloc[j]:\n","                          #     market_tp = 1\n","\n","                          #         bb_upper early out        # --> cross_on 기능은 ide latency 개선 여부에 해당되지 않음\n","                          if strat_version in ['v5_2']:\n","                              if res_df['close'].iloc[j] < res_df['bb_lower_5m'].iloc[j] < res_df['close'].iloc[\n","                                  j - 1]:\n","                                  cross_on = 1\n","\n","                              if cross_on == 1 and res_df['close'].iloc[j] > res_df['bb_upper_5m'].iloc[j] > \\\n","                                      res_df['close'].iloc[j - 1]:\n","                                  market_tp = 1\n","\n","                          if market_tp:\n","\n","                              tp = res_df['close'].iloc[j]\n","                              # tp = res_df['open'].iloc[j]\n","                              trade_done = 1\n","\n","                              if trade_done:\n","                                  tp_state_list.append(\"short close tp\")\n","\n","                              tp_list.append(tp)\n","                              tp_idx_list.append(j)\n","                              fee += config.trader_set.market_fee\n","\n","                  # -------------- out -------------- #\n","                  if not trade_done and config.out_set.use_out and j != len(res_df) - 1:\n","\n","                      # -------------- macd -------------- #\n","                      # if res_df['macd_hist3'].iloc[j] > 0:  #  macd out\n","                      # if res_df['macd_hist3'].iloc[i] < 0 and res_df['macd_hist3'].iloc[j] > 0:\n","\n","                      # -------------- st config.out_set.retouch -------------- #\n","                      # out = 1 상태면 동일 tick 에서 config.out_set.retouch 를 조사할 거기 때문에, 먼저 검사함\n","                      # 그리고, out 기준이 close 라 이게 맞음\n","                      # close 가 short_out 보다 올라가있는 상태일테니 low 를 조사하는게 맞음\n","                      # if out and res_df['low'].iloc[j] <= short_out.iloc[out_j]:\n","                      #   config.out_set.retouch = 1\n","\n","                      # ------- 일정시간 이상, dynamic_out 적용 ------ #\n","                      try:\n","                          if j - out_idx >= config.out_set.retouch_out_period:\n","                              static_short_out = res_df['short_out_{}'.format(strat_version)].iloc[j]\n","\n","                      except Exception as e:\n","                          pass\n","\n","                          # ------- static out ------ #\n","                      try:\n","                          if out and res_df['low'].iloc[j] <= static_short_out:\n","                              config.out_set.retouch = 1\n","                      except Exception as e:\n","                          pass\n","\n","                          # ------- config.out_set.retouch out ------ #\n","                      # if out and res_df['low'].iloc[j] <= short_out2.iloc[out_j]:\n","                      #   config.out_set.retouch = 1\n","\n","                      # -------------- st -------------- #\n","                      # if res_df['close'].iloc[j] > res_df['middle_line'].iloc[j]:\n","                      # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j]:\n","                      # if res_df['close'].iloc[j] > upper_middle.iloc[j]:\n","                      # if res_df['close'].iloc[j] > res_df['minor_ST1_Up'].iloc[j]:\n","                      if out == 0:\n","                          if config.out_set.hl_out:\n","                              if res_df['high'].iloc[j] >= res_df['short_out_{}'.format(strat_version)].iloc[\n","                                  out_j]:  # check out only once\n","                                  out = 1\n","\n","                          else:\n","                              if res_df['close'].iloc[j] >= res_df['short_out_{}'.format(strat_version)].iloc[\n","                                  out_j]:  # check out only once\n","                                  out = 1\n","\n","                          # out_idx = j\n","                          # static_short_out = short_out.iloc[out_j]\n","                          # if config.out_set.second_out:\n","                          # static_short_out = short_out.iloc[out_j] + res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","\n","                      # if out == 0 and res_df['high'].iloc[j] >= short_out.iloc[out_j]: # check out only once\n","                      #   out = 1\n","\n","                      # -------------- sma -------------- #\n","                      # if res_df['close'].iloc[j] > res_df[sma].iloc[j]:\n","\n","                      # -------------- sar -------------- #\n","                      # if res_df['close'].iloc[j] > res_df['minor_ST3_Up'].iloc[j] \\\n","                      #   or res_df['sar2'].iloc[j] <= res_df['high'].iloc[j]:\n","                      # if res_df['close'].iloc[j] > short_out.iloc[initial_i]: # or \\\n","                      #   out = 1\n","                      # res_df['sar2_uptrend'].iloc[j] == 1: # or \\\n","\n","                      # if res_df['sar2_uptrend'].iloc[j] == 1:\n","\n","                      #   if prev_sar is None:\n","                      #     prev_sar = res_df['sar2'].iloc[j - 1]\n","\n","                      #   if res_df['close'].iloc[j] > prev_sar:\n","                      #     out = 1\n","\n","                      # else:\n","                      #   if res_df['close'].iloc[j] > res_df['sar2'].iloc[j]:\n","                      #     out = 1\n","\n","                      # -------------- hl -------------- #\n","                      # if res_df['close'].iloc[j] > short_out.iloc[tp_j]:\n","\n","                      # -------------- stoch -------------- #\n","                      # if res_df['stoch'].iloc[j - 2] >= res_df['stoch'].iloc[j - 1] and \\\n","                      #   res_df['stoch'].iloc[j - 1] < res_df['stoch'].iloc[j] and \\\n","                      #   res_df['stoch'].iloc[j - 1] <= stoch_lower:\n","                      #   out = 1\n","\n","                      # config.out_set.retouch 1 경우, config.out_set.retouch 조건도 있어야함\n","                      if out:\n","                          if config.out_set.retouch:\n","                              if config.out_set.retouch:\n","                                  pass\n","                              else:\n","                                  continue\n","\n","                          else:\n","                              pass\n","\n","                          if config.out_set.price_restoration:\n","                              tp = res_df['short_out_{}'.format(strat_version)].iloc[out_j]\n","                              if config.out_set.second_out:\n","                                  tp = res_df['short_out2_{}'.format(strat_version)].iloc[out_j]\n","\n","                              # if res_df['close'].iloc[j] > tp: # 이 경우를 protect 하는건 insane 임\n","                              #   tp = res_df['close'].iloc[j]\n","\n","                          else:\n","\n","                              if res_df['open'].iloc[j] >= res_df['short_out_{}'.format(strat_version)].iloc[out_j]:\n","                                  tp = res_df['open'].iloc[j]\n","                              else:\n","                                  if config.out_set.hl_out:\n","                                      tp = res_df['short_out_{}'.format(strat_version)].iloc[out_j]\n","                                  else:\n","                                      tp = res_df['close'].iloc[j]\n","\n","                              # if not config.out_set.static_out:\n","                              #   if res_df['open'].iloc[j] >= res_df['short_out_{}'.format(strat_version)].iloc[out_j]: # close 기준이라 이런 조건을 못씀, 차라리 j 를 i 부터 시작\n","                              #     tp = res_df['open'].iloc[j]\n","                              #   else:\n","                              #     tp = res_df['close'].iloc[j]\n","\n","                              # else:\n","                              #   tp = res_df['close'].iloc[j]\n","\n","                          if config.out_set.retouch:  # out 과 open 비교\n","                              if config.out_set.second_out:\n","                                  if res_df['open'].iloc[j] <= res_df['short_out2_{}'.format(strat_version)].iloc[\n","                                      out_j]:\n","                                      tp = res_df['open'].iloc[j]\n","                              else:\n","                                  if res_df['open'].iloc[j] <= res_df['short_out_{}'.format(strat_version)].iloc[\n","                                      out_j]:\n","                                      tp = res_df['open'].iloc[j]\n","\n","                              try:  # static_short_out 인 경우, open 도 고려한 tp set\n","                                  if res_df['open'].iloc[j] <= static_short_out:\n","                                      tp = res_df['open'].iloc[j]\n","                                  else:\n","                                      tp = static_short_out\n","                              except Exception as e:\n","                                  pass\n","\n","                          trade_done = 1\n","                          tp_state_list.append(\"short close_out {}\".format(strat_version))\n","\n","                          tp_list.append(tp)\n","                          tp_idx_list.append(j)\n","                          fee += config.trader_set.market_fee\n","\n","                  # -------------- non tp -------------- #\n","                  if j == len(res_df) - 1:\n","                      trade_done = 1\n","                      tp = res_df['close'].iloc[j]\n","                      tp_list.append(tp)\n","                      tp_idx_list.append(j)\n","                      fee += config.trader_set.market_fee\n","\n","                  # -------------- append trade data -------------- #\n","                  if trade_done:\n","\n","                      # --------------- tp_ratio info --------------- #\n","                      #         Todo        #\n","                      #          short_out 에 대한 정보는 존재함,\n","                      #          short_tp 에 대한 정보는 존재함,\n","                      #       => initial_i 기준으로 ,dynamic | static set 을 tp 와 out 에 각각 적용\n","                      #          config.lvrg_set.leverage 는 initial_i 기준으로 적용되니까\n","                      #          적용된 tp & out 으로 abs((tp - ep) / (ep - out)) 계산\n","                      try:\n","                          if config.out_set.use_out:\n","                              done_tp = res_df['short_tp_{}'.format(strat_version)].iloc[tp_j]\n","                              done_out = res_df['short_out_{}'.format(strat_version)].iloc[out_j]\n","\n","                              if done_out <= ep_list[0]:  # loss > 1\n","                                  dr = np.nan\n","                                  tp_ratio = np.nan\n","                              else:\n","                                  dr = ((ep_list[0] - done_tp) / (done_out - ep_list[0]))\n","                                  tp_ratio = ((ep_list[0] - done_tp - tp_fee * ep_list[0]) / (\n","                                              done_out - ep_list[0] + out_fee * ep_list[0]))\n","\n","                          else:\n","                              dr = np.nan\n","                              tp_ratio = np.nan\n","\n","\n","                      except Exception as e:\n","                          dr = np.nan\n","                          tp_ratio = np.nan\n","\n","                      tp_ratio_list.append(tp_ratio)\n","                      short_tp_ratio_list.append(tp_ratio)\n","                      dr_list.append(dr)\n","                      short_dr_list.append(dr)\n","\n","                      # -------------------- partial tp -------------------- #\n","                      #        1. len(tp_list) 에 대응하는 qty_list 를 만들어야함    #\n","                      #        2. temp_pr_list 를 만들어 총합 + 1 을 pr_list 에 저장      #\n","                      #        2-1. temp_pr = sum((ep / tp_list[i] - fee - 1) * qty_list[i])   #\n","                      #        3. temp_pr_list 의 첫 tp 에는 r_qty 를 할당함        #\n","                      qty_list = []\n","                      temp_pr_list = []\n","                      r_qty = 1\n","                      for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","                          if len(tp_list) == 1:\n","                              temp_qty = r_qty\n","                          else:\n","                              if q_i != 0:\n","                                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                              else:\n","                                  temp_qty = r_qty\n","\n","                          temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","                          # temp_pr = (ep_list[0] / tp_list[q_i] - fee - 1) * temp_qty\n","                          r_qty -= temp_qty\n","\n","                          temp_pr_list.append(temp_pr)\n","                          qty_list.append(temp_qty)\n","\n","                      # if len(temp_pr_list) == 1:\n","                      #   print(\"qty_list :\", qty_list)\n","                      #   print(\"temp_pr_list :\", temp_pr_list)\n","\n","                      temp_pr = sum(temp_pr_list) + 1\n","\n","                      # -------------------- sub ep -> pr calc -------------------- #\n","                      if len(ep_list) > 1:\n","\n","                          p_ep_pr = []\n","                          for sub_ep_ in ep_list:\n","                              sub_pr = (sub_ep_ / tp - fee - 1) * config.lvrg_set.leverage\n","                              p_ep_pr.append(sub_pr)\n","\n","                          temp_pr = sum(p_ep_pr) + 1\n","\n","                          print(\"temp_pr :\", temp_pr)\n","\n","                      # ------------ hedge + non_hedge pr summation ------------ #\n","                      #         hedge pr direction is opposite to the origin       #\n","                      hedge_pr = 1\n","                      if hedge_cnt == 0:\n","                          #       hedge tp      #\n","                          h_tp = res_df['close'].iloc[j]\n","                          hedge_pr = (h_tp / h_ep - fee - 1) * config.lvrg_set.leverage  # hedge long\n","                          temp_pr += hedge_pr\n","                          h_j = j\n","\n","                      # hh = max(res_df['high'].iloc[i:j + 1])\n","                      hh = max(res_df['high'].iloc[i:j])  # pos. 정리하기 바로 직전까지\n","                      short_liq = (ep_list[0] / hh - fee - 1) * config.lvrg_set.leverage + 1\n","\n","                      if j != len(res_df) - 1:\n","\n","                          # ep_tp_list.append((ep, tp_list))\n","                          ep_tp_list.append((ep_list, tp_list))\n","                          # trade_list.append([initial_i, i, j])\n","                          # trade_list.append((ep_idx_list, tp_idx_list))\n","                          trade_list.append((ep_idx_list, out_idx_list, tp_idx_list))\n","\n","                          liqd_list.append(short_liq)\n","                          short_liqd_list.append(short_liq)\n","\n","                          h_ep_tp_list.append(\n","                              (h_ep, h_tp))  # hedge 도 ep_tp_list 처럼 변경해주어야하는데 아직 안건드림, 딱히 사용할 일이 없어보여\n","                          h_trade_list.append([initial_i, h_i, h_j])\n","\n","                          pr_list.append(temp_pr)\n","                          fee_list.append(fee)\n","                          short_list.append(temp_pr)\n","                          short_fee_list.append(fee)\n","\n","                          h_pr_list.append(hedge_pr)\n","                          h_short_list.append(hedge_pr)\n","\n","                          i = j\n","                          break\n","\n","                      else:\n","\n","                          # ep_tp_list.append((ep_list, tp_list))\n","                          # trade_list.append((ep_idx_list, tp_idx_list))\n","                          # plot_check 때문에, pr_list 까지 하게되면 acc_pr eval 이 꼬이게댐\n","\n","                          # pr_list 를 넣지 않을거니까, open_list 에서 해당 idx 는 pop\n","                          open_list.pop()\n","                          zone_list.pop()\n","                          side_list.pop()\n","                          strat_ver_list.pop()\n","\n","                          #         tp 미체결 survey        #\n","                          nontp_liqd_list.append(short_liq)\n","                          nontp_short_liqd_list.append(short_liq)\n","                          nontp_short_indexs.append(i)\n","                          nontp_short_ep_list.append(ep_list[0])\n","\n","                          nontp_short_pr = (ep_list[0] / tp - fee - 1) * config.lvrg_set.leverage + 1\n","                          nontp_pr_list.append(nontp_short_pr)\n","                          nontp_short_pr_list.append(nontp_short_pr)\n","\n","\n","          #                  long  phase                #\n","          elif open_side == utils_public.OrderSide.BUY:\n","\n","              initial_i = i\n","              # print(\"long_ep_loc passed !\")\n","\n","              strat_version = config.strat_version\n","\n","              # ------- tp / out fee calc ------- #\n","              tp_fee, out_fee = calc_tp_out_fee(config)\n","\n","              # ------- fee init ------- #\n","              if config.ep_set.entry_type == 'LIMIT':\n","                  fee = config.trader_set.limit_fee\n","              else:\n","                  fee = config.trader_set.market_fee\n","\n","              # --------------- set partial tp --------------- #\n","              long_tps = [res_df['long_tp_{}'.format(strat_version)]]\n","              # long_tps = [long_tp2, long_tp]\n","              # long_tps = [long_tp, long_tp2]\n","              # print(\"i after long_ep_loc :\", i)\n","\n","              # if config.out_set.static_out:\n","              #     p_i = initial_i\n","              # else:\n","              #     p_i = i\n","\n","              ep_j = initial_i\n","              out_j = initial_i\n","\n","              # -------------- limit waiting const. -------------- #\n","              if config.ep_set.entry_type == \"LIMIT\":\n","\n","                  # allow_ep_in = 0 if strat_version in ['v5_2'] else 1\n","                  allow_ep_in = 0\n","                  entry_done = 0\n","                  entry_open = 0\n","                  prev_sar = None\n","\n","                  # for e_j in range(i, len(res_df)):\n","\n","                  if i + 1 >= len(res_df):  # i should be checked if e_j starts from i+1\n","                      break\n","                  for e_j in range(i + 1, len(res_df)):  # entry 가 close 기준일 경우 사용 (open 기준일 경우 i 부터 시작해도 무방함)\n","\n","                      if not config.ep_set.static_ep:\n","                          ep_j = e_j\n","                          out_j = e_j\n","\n","                      if config.tp_set.static_tp:\n","                          # if config.ep_set.tpout_onexec:\n","                          #   tp_j = e_j\n","                          # else:\n","                          tp_j = initial_i\n","                      else:\n","                          tp_j = e_j\n","\n","                          #          np.inf ep         #\n","                      # if long_ep.iloc[initial_i] == np.inf:\n","                      #   break\n","\n","                      #     1. check ep_out     #\n","                      if strat_version in ['v3', 'v5_2', 'v7_3']:\n","                        if res_df['high'].iloc[e_j] >= res_df['h_long_rtc_1_{}'.format(strat_version)].iloc[tp_j] + \\\n","                              res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[tp_j] * config.loc_set.zone.ei_k:\n","                          break\n","\n","                      elif strat_version in ['3', '3_1']:\n","                        if np_timeidx[e_j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1:\n","                          break\n","\n","                      # if res_df['high'].iloc[e_j] >= res_df['long_tp_{}'.format(strat_version)].iloc[tp_j]:\n","\n","                      # elif (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j - 1] <= 50 + config.loc_set.point.osc_band) & \\\n","                      #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[e_j] > 50 + config.loc_set.point.osc_band):\n","                      #   break\n","\n","                      # if config.loc_set.zone.c_itv_ticks != \"None\":\n","\n","                      #   if np_timeidx[e_j] % config.loc_set.zone.c_itv_ticks == config.loc_set.zone.c_itv_ticks - 1:\n","                      #     break\n","\n","                      #     2. ep_loc.point2\n","                      if public_override:\n","                          allow_ep_in, out_j = long_point2(res_df, config, e_j, out_j, allow_ep_in)\n","                      else:\n","                          allow_ep_in, out_j = utils_public.long_point2(res_df, config, e_j, out_j,\n","                                                                        allow_ep_in)  # not defined yet,\n","\n","                      #     3. check ep_in      #\n","                      if allow_ep_in and res_df['low'].iloc[e_j] <= res_df['long_ep_{}'.format(strat_version)].iloc[\n","                          ep_j]:\n","                          entry_done = 1\n","                          # print(\"e_j :\", e_j)\n","\n","                          #     이미, e_j open 이 ep 보다 낮은 경우, entry[initial_i] => -2 로 변경   #\n","                          if res_df['open'].iloc[e_j] <= res_df['long_ep_{}'.format(strat_version)].iloc[ep_j]:\n","                              entry_open = 1\n","\n","                          break\n","\n","                  i = e_j\n","                  # print(\"i = e_j :\", i)\n","\n","                  if entry_done:\n","                      pass\n","                      # print(\"i, entry_done :\", i, entry_done)\n","\n","                  else:\n","                      i += 1\n","                      if i >= len(res_df):\n","                          # print(\"i :\", i)\n","                          break\n","\n","                      # print(\"i in continue :\", i)\n","                      continue\n","\n","              # ---------------- end wait ---------------- #\n","              # if e_j - initial_i >= 200:\n","              #   print(\"e_j, initial_i :\", e_j, initial_i)\n","\n","              # print(i)\n","\n","              open_list.append(initial_i)\n","              zone_list.append(zone)\n","              side_list.append('l')\n","              strat_ver_list.append(strat_version)\n","\n","              if config.ep_set.entry_type == 'MARKET':\n","                  ep_list = [res_df['close'].iloc[ep_j]]\n","              else:\n","                  if not entry_open:\n","                      ep_list = [res_df['long_ep_{}'.format(strat_version)].iloc[\n","                                      ep_j]]  # dynamic_ep 인 경우에도 e_j 가 ep_j 로 대응되기 때문에 ep_j 만 사용해도 무관\n","                  else:\n","                      # try:\n","                      #   ep_list = [res_df['open'].iloc[e_j]]\n","                      # except Exception as e:\n","                      fee = config.trader_set.market_fee\n","                      ep_list = [res_df['open'].iloc[e_j]]  # --> 체결이 되는 e_j idx 기준으로 하는게 맞음\n","\n","              if not config.lvrg_set.static_lvrg:\n","\n","                  ep_ = ep_list[0]\n","                  out_ = res_df['long_out_{}'.format(strat_version)].iloc[out_j]\n","                  if public_override:\n","                      config.lvrg_set.leverage = lvrg_set(res_df, config, \"BUY\", ep_, out_, fee)\n","                  else:\n","                      config.lvrg_set.leverage = utils_public.lvrg_set(res_df, config, \"BUY\", ep_, out_, fee)\n","\n","                  # -------------- leverage rejection -------------- #\n","                  if config.lvrg_set.leverage == None:\n","                      open_list.pop()\n","                      zone_list.pop()\n","                      side_list.pop()\n","                      strat_ver_list.pop()\n","\n","                      i += 1\n","                      if i >= len(res_df):\n","                          break\n","                      continue\n","\n","              leverage_list.append(config.lvrg_set.leverage)\n","\n","              if config.ep_set.entry_type == \"MARKET\":\n","                  ep_idx_list = [ep_j]\n","              else:\n","                  ep_idx_list = [e_j]\n","\n","              out_idx_list = [out_j]\n","\n","              tp_list = []\n","              tp_idx_list = []\n","\n","              partial_tp_cnt = 0\n","              hedge_cnt = 1\n","\n","              h_ep, h_tp = None, None\n","              h_i, h_j = None, None\n","\n","              trade_done = 0\n","              cross_on = 0\n","              out = 0\n","              config.out_set.retouch = 0\n","\n","              if i == len(res_df) - 1:  # if j start from i + 1\n","                  open_list.pop()\n","                  zone_list.pop()\n","                  side_list.pop()\n","                  strat_ver_list.pop()\n","\n","              for j in range(i + 1, len(res_df)):\n","\n","                  # for j in range(i, len(res_df)):\n","\n","                  if config.tp_set.static_tp:\n","                      if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","                          tp_j = ep_j\n","                      else:\n","                          tp_j = initial_i\n","                  else:\n","                      tp_j = j\n","\n","                  if config.out_set.static_out:\n","                      if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","                          out_j = ep_j\n","                      # else:\n","                      #   out_j = initial_i\n","                  else:\n","                      out_j = j\n","\n","                      # -------------- hedge only once -------------- #\n","                  #             일단, h_quantity 는 초기 진입과 동일하게 설정         #\n","                  # if res_df['low'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","                  # if res_df['close'].iloc[j] <= res_df['minor_ST2_Down'].iloc[j] and hedge_cnt == 1:\n","                  # if res_df['close'].iloc[j] <= res_df['minor_ST3_Down'].iloc[j] and hedge_cnt == 1:\n","\n","                  #   h_ep = res_df['close'].iloc[j]\n","                  #   hedge_cnt -= 1\n","                  #   h_i = j\n","\n","                  # -------------- sub ep -------------- #\n","                  # if res_df['low'].iloc[j - 1] >= res_df['sar2'].iloc[j - 1] and res_df['low'].iloc[j] < res_df['sar2'].iloc[j]:\n","\n","                  #   sub_ep = res_df['sar2'].iloc[j - 1]\n","\n","                  #   if sub_ep > ep_list[-1]:\n","                  #     ep_list.append(sub_ep)\n","                  #     ep_idx_list.append(j)\n","\n","                  # -------------- ultimate tp -------------- #\n","                  if not config.tp_set.non_tp:\n","                      #            1. by level          #\n","                      if config.tp_set.tp_type == \"LIMIT\" or config.tp_set.tp_type == \"BOTH\":\n","\n","                          for l_i, long_tp_ in enumerate(long_tps):\n","\n","                              #     decay adjustment    #\n","                              #     tp_j includes dynamic_j   #\n","                              try:\n","                                  if config.tr_set.decay_gap != \"None\":\n","                                      decay_share = (j - initial_i) // config.tp_set.decay_term\n","                                      decay_remain = (j - initial_i) % config.tp_set.decay_term\n","                                      if j != initial_i and decay_remain == 0:\n","                                          long_tp_.iloc[tp_j] -= \\\n","                                          res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[\n","                                              initial_i] * config.tr_set.decay_gap * decay_share\n","\n","                              except:\n","                                  pass\n","\n","                              if res_df['high'].iloc[j] >= long_tp_.iloc[tp_j] and partial_tp_cnt == l_i:\n","                                  # if res_df['high'].iloc[j] >= long_tp.iloc[j]:\n","\n","                                  if l_i == len(long_tps) - 1:\n","                                      trade_done = 1\n","\n","                                  partial_tp_cnt += 1\n","\n","                                  #         dynamic tp        #\n","                                  # if 0:\n","                                  if long_tp_.iloc[j] != long_tp_.iloc[j - 1] and not config.tp_set.static_tp:\n","\n","                                      #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 #\n","                                      # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","                                      if res_df['open'].iloc[j] >= long_tp_.iloc[j]:\n","\n","                                          # tp = long_tp_.iloc[initial_i]\n","                                          tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"d-long_open {}\".format(strat_version))\n","\n","\n","                                      #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 #\n","                                      else:\n","\n","                                          # tp = long_tp_.iloc[initial_i]\n","                                          tp = long_tp_.iloc[j]\n","                                          # tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"d-long_tp {}\".format(strat_version))\n","\n","                                  #         static tp         #\n","                                  else:\n","\n","                                      #   tp limit 이 불가한 경우 = open 이 이미, tp 를 넘은 경우 #\n","                                      #   non_inversion 의 경우, short_tp 가 가능함   #\n","\n","                                      if res_df['open'].iloc[j] >= long_tp_.iloc[tp_j]:\n","                                          # if res_df['open'].iloc[j] >= long_tp_.iloc[initial_i]:\n","\n","                                          # tp = long_tp_.iloc[initial_i]\n","\n","                                          if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                                              tp = res_df['open'].iloc[j]\n","                                          else:\n","                                              tp = long_tp_.iloc[tp_j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"s-long_tp {}\".format(strat_version))\n","\n","\n","                                      #   tp limit 이 가능한 경우 = open 이 아직, tp 를 넘지 않은 경우 #\n","                                      else:\n","\n","                                          # tp = long_tp_.iloc[initial_i]\n","                                          tp = long_tp_.iloc[tp_j]\n","\n","                                          # tp = res_df['open'].iloc[j]\n","\n","                                          if trade_done:\n","                                              tp_state_list.append(\"s-long_tp {}\".format(strat_version))\n","\n","                                  tp_list.append(tp)\n","                                  tp_idx_list.append(j)\n","                                  fee += config.trader_set.limit_fee\n","\n","                      #           2. by time        #\n","                      if config.tp_set.tp_type == 'MARKET' or (config.tp_set.tp_type == \"BOTH\" and not trade_done):\n","\n","                          market_tp = 0\n","\n","                          # -------------- sar tp -------------- #\n","                          # if (res_df['low'].iloc[j] <= res_df['sar2'].iloc[j]) & \\\n","                          #   (res_df['low'].iloc[j - 1] > res_df['sar2'].iloc[j - 1]) & \\\n","                          #   (res_df['low'].iloc[j - 2] > res_df['sar2'].iloc[j - 2]):\n","\n","                          #       inversion     #\n","                          # if (res_df['high'].iloc[j] >= res_df['sar2'].iloc[j]) & \\\n","                          #   (res_df['high'].iloc[j - 1] < res_df['sar2'].iloc[j - 1]) & \\\n","                          #   (res_df['high'].iloc[j - 2] < res_df['sar2'].iloc[j - 2]):\n","\n","                          # ----------- st long ----------- #\n","                          # if res_df['close'].iloc[j] >= res_df['long_tp'].iloc[tp_j]:\n","\n","                          # -------------- sar pb tp -------------- #\n","                          # if res_df['high'].iloc[j] >= res_df['long_tp'].iloc[initial_i]:\n","\n","                          # -------------- st tp -------------- #\n","                          # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","\n","                          # -------------- fisher tp -------------- #\n","                          # if entry[j] == -1:\n","\n","                          # -------------- timestamp -------------- #\n","                          if config.tp_set.time_tp:\n","                              if np_timeidx[\n","                                  j] % config.loc_set.point.tf_entry == config.loc_set.point.tf_entry - 1 and j - initial_i >= config.loc_set.point.tf_entry:\n","                                  market_tp = 1\n","\n","                          # -------------- rsi -------------- #\n","                          if strat_version in rsi_out_stratver:\n","                              if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                      j - 1] <= 50 + config.loc_set.point.osc_band) & \\\n","                                      (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                            j] > 50 + config.loc_set.point.osc_band):\n","                                  # if (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j - 1] >= 50 + config.loc_set.point.osc_band) & \\\n","                                  #                  (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] < 50 + config.loc_set.point.osc_band):\n","                                  market_tp = 1\n","\n","                              # -------------- cci -------------- #\n","                              # if (res_df['cci_%s' % config.loc_set.point.exp_itv].iloc[j - 1] <= config.loc_set.point.osc_band) & \\\n","                              #                  (res_df['cci_%s' % config.loc_set.point.exp_itv].iloc[j] > config.loc_set.point.osc_band):\n","                              #   market_tp = 1\n","\n","                          # ---------------------------- early out phase ---------------------------- #\n","\n","                          #        osc slight touch     #\n","                          if allow_osc_touch:\n","                              if (np.max(res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[\n","                                          initial_i:j]) > 50 + config.loc_set.point.osc_band - rsi_gap) & \\\n","                                      (res_df['rsi_%s' % config.loc_set.point.exp_itv].iloc[j] <= 50):\n","                                  market_tp = 1\n","\n","                          #         tp early out        #\n","                          # # if (np.max(res_df['high'].iloc[e_j:j]) > res_df['long_tp'].iloc[tp_j]) & \\\n","                          # if (np.max(res_df['high'].iloc[e_j:j]) > res_df['h_long_rtc_1'].iloc[tp_j] + res_df['h_long_rtc_gap'].iloc[tp_j] * early_out_tpg) & \\\n","                          #   (res_df['close'].iloc[j] <= res_df['long_ep'].iloc[ep_j]):\n","                          #   market_tp = 1\n","\n","                          # if strat_version == \"v7\":\n","                          #   if res_df['dc_lower_1m'].iloc[j] < res_df['dc_lower_5m'].iloc[j]:\n","                          #     market_tp = 1\n","\n","                          #         bb_upper early out        #\n","                          if strat_version in ['v5_2']:\n","                              if res_df['close'].iloc[j] > res_df['bb_upper_5m'].iloc[j] > res_df['close'].iloc[\n","                                  j - 1]:\n","                                  cross_on = 1\n","\n","                              if cross_on == 1 and res_df['close'].iloc[j] < res_df['bb_lower_5m'].iloc[j] < \\\n","                                      res_df['close'].iloc[j - 1]:\n","                                  market_tp = 1\n","\n","                          if market_tp:\n","\n","                              tp = res_df['close'].iloc[j]\n","                              # tp = res_df['open'].iloc[j]\n","                              trade_done = 1\n","\n","                              if trade_done:\n","                                  tp_state_list.append(\"long close tp {}\".format(strat_version))\n","                                  # print(\"early_out passed !\")\n","\n","                              tp_list.append(tp)\n","                              tp_idx_list.append(j)\n","                              fee += config.trader_set.market_fee\n","\n","                  # -------------- out -------------- #\n","                  if not trade_done and config.out_set.use_out and j != len(res_df) - 1:\n","\n","                      # -------------- macd -------------- #\n","                      # if res_df['macd_hist3'].iloc[j] < 0:\n","                      # # if res_df['macd_hist3'].iloc[i] > 0 and res_df['macd_hist3'].iloc[j] < 0:\n","\n","                      # -------------- st config.out_set.retouch -------------- #\n","                      # out = 1 상태면 동일 tick 에서 config.out_set.retouch 를 조사할 거기 때문에, 먼저 검사함\n","                      # 그리고, out 기준이 close 라 이게 맞음\n","                      # close 가 long_out 보다 내려가있는 상태일테니 high 를 조사하는게 맞음\n","                      # if out and res_df['high'].iloc[j] >= long_out.iloc[out_j]:\n","                      #   config.out_set.retouch = 1\n","\n","                      # ------- 일정시간 이상, dynamic_out 적용 ------ #\n","                      try:\n","                          if j - out_idx >= config.out_set.retouch_out_period:\n","                              static_long_out = res_df['long_out_{}'.format(strat_version)].iloc[j]\n","\n","                      except Exception as e:\n","                          pass\n","\n","                          # ------- static out ------ #\n","                      try:\n","                          if out and res_df['high'].iloc[j] >= static_long_out:\n","                              config.out_set.retouch = 1\n","                      except Exception as e:\n","                          pass\n","\n","                          # ------- config.out_set.retouch out ------ #\n","                      # if out and res_df['high'].iloc[j] >= long_out2.iloc[out_j]:\n","                      #   config.out_set.retouch = 1\n","\n","                      # -------------- st -------------- #\n","                      # if res_df['close'].iloc[j] < res_df['middle_line'].iloc[j]:\n","                      # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j]:\n","                      # if res_df['close'].iloc[j] < lower_middle.iloc[j]:\n","                      # if res_df['close'].iloc[j] < res_df['minor_ST1_Down'].iloc[j]:\n","                      if out == 0:\n","                          if config.out_set.hl_out:\n","                              if res_df['low'].iloc[j] <= res_df['long_out_{}'.format(strat_version)].iloc[\n","                                  out_j]:  # check out only once\n","                                  out = 1\n","\n","                          else:\n","                              if res_df['close'].iloc[j] <= res_df['long_out_{}'.format(strat_version)].iloc[\n","                                  out_j]:  # check out only once\n","                                  out = 1\n","\n","                          # out_idx = j\n","                          # static_long_out = long_out.iloc[out_j]\n","                          # if config.out_set.second_out:\n","                          # static_long_out = long_out.iloc[out_j] - res_df['st_gap'].iloc[out_j] * config.out_set.second_out_gap\n","\n","                      # if out == 0 and res_df['low'].iloc[j] <= long_out.iloc[out_j]: # check out only once\n","                      #   out = 1\n","\n","                      # -------------- sma -------------- #\n","                      # if res_df['close'].iloc[j] < res_df[sma].iloc[j]:\n","\n","                      # -------------- sar -------------- #\n","                      # if res_df['close'].iloc[j] < res_df['minor_ST3_Down'].iloc[j] \\\n","                      #   or res_df['sar2'].iloc[j] >= res_df['low'].iloc[j]:\n","                      # if res_df['close'].iloc[j] < long_out.iloc[initial_i]: # or \\\n","                      #   #  res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","                      #   #  res_df['sar2_uptrend'].iloc[j] == 0 or \\\n","                      #   out = 1\n","\n","                      # if res_df['sar2_uptrend'].iloc[j] == 0:\n","\n","                      #     if prev_sar is None:\n","                      #       prev_sar = res_df['sar2'].iloc[j - 1]\n","\n","                      #     if res_df['close'].iloc[j] < prev_sar:\n","                      #       out = 1\n","\n","                      # else:\n","                      #   if res_df['close'].iloc[j] < res_df['sar2'].iloc[j]:\n","                      #     out = 1\n","\n","                      # -------------- hl -------------- #\n","                      # if res_df['close'].iloc[j] < long_out.iloc[tp_j]:\n","\n","                      # -------------- stoch -------------- #\n","                      # if res_df['stoch'].iloc[j - 2] <= res_df['stoch'].iloc[j - 1] and \\\n","                      #   res_df['stoch'].iloc[j - 1] > res_df['stoch'].iloc[j] and \\\n","                      #   res_df['stoch'].iloc[j - 1] >= stoch_upper:\n","                      #   out = 1\n","\n","                      # config.out_set.retouch 1 경우, config.out_set.retouch 조건도 있어야함\n","                      if out:\n","                          if config.out_set.retouch:\n","                              if config.out_set.retouch:\n","                                  pass\n","                              else:\n","                                  continue\n","\n","                          else:\n","                              pass\n","\n","                          if config.out_set.price_restoration:\n","                              tp = res_df['long_out_{}'.format(strat_version)].iloc[out_j]\n","                              if config.out_set.second_out:\n","                                  tp = res_df['long_out2_{}'.format(strat_version)].iloc[out_j]\n","\n","                              # if res_df['close'].iloc[j] < tp: # 이 경우를 protect 하는건 insane 임\n","                              # # if res_df['high'].iloc[j] < tp: # --> config.out_set.hl_out 사용시 이 조건은 valid 함\n","                              #   tp = res_df['close'].iloc[j]\n","\n","                          else:\n","\n","                              if res_df['open'].iloc[j] <= res_df['long_out_{}'.format(strat_version)].iloc[out_j]:\n","                                  tp = res_df['open'].iloc[j]\n","                              else:\n","                                  if config.out_set.hl_out:\n","                                      tp = res_df['long_out_{}'.format(strat_version)].iloc[out_j]\n","                                  else:\n","                                      tp = res_df['close'].iloc[j]\n","\n","                              # if not config.out_set.static_out:\n","                              #   if res_df['open'].iloc[j] <= res_df['long_out'].iloc[out_j]: # dynamic close out 의 open 고려\n","                              #     tp = res_df['open'].iloc[j]\n","                              #   else:\n","                              #     tp = res_df['close'].iloc[j]\n","\n","                              # else:\n","                              #   tp = res_df['close'].iloc[j]\n","\n","                          if config.out_set.retouch:  # out 과 open 비교\n","                              if config.out_set.second_out:  # long_out = sell\n","                                  # config.out_set.second_out 은 기본적으로 limit 이라 이 구조가 가능함\n","                                  if res_df['open'].iloc[j] >= res_df['long_out2_{}'.format(strat_version)].iloc[\n","                                      out_j]:  # dynamic_out 일 경우 고려해야함\n","                                      tp = res_df['open'].iloc[j]\n","                              else:\n","                                  if res_df['open'].iloc[j] >= res_df['long_out_{}'.format(strat_version)].iloc[\n","                                      out_j]:  # dynamic_out 일 경우 고려해야함\n","                                      tp = res_df['open'].iloc[j]\n","\n","                              try:\n","                                  if res_df['open'].iloc[j] >= static_long_out:\n","                                      tp = res_df['open'].iloc[j]\n","                                  else:\n","                                      tp = static_long_out\n","                              except Exception as e:\n","                                  pass\n","\n","                          # tp = res_df['open'].iloc[j]\n","                          tp_state_list.append(\"long close_out {}\".format(strat_version))\n","                          trade_done = 1\n","\n","                          tp_list.append(tp)\n","                          tp_idx_list.append(j)\n","                          fee += config.trader_set.market_fee\n","\n","                  # -------------- non tp -------------- #\n","                  if j == len(res_df) - 1:\n","                      trade_done = 1\n","                      tp = res_df['close'].iloc[j]\n","                      tp_list.append(tp)\n","                      tp_idx_list.append(j)\n","                      fee += config.trader_set.market_fee\n","\n","                  if trade_done:\n","\n","                      # --------------- tp_ratio info --------------- #\n","                      try:\n","                          if config.out_set.use_out:\n","                              done_tp = res_df['long_tp_{}'.format(strat_version)].iloc[tp_j]\n","                              done_out = res_df['long_out_{}'.format(strat_version)].iloc[out_j]\n","\n","                              if done_out >= ep_list[0]:  # loss >= 1\n","                                  tp_ratio = np.nan\n","                                  dr = np.nan\n","                                  # print(\"loss >= 1\")\n","                              else:\n","                                  tp_ratio = ((done_tp - ep_list[0] - tp_fee * ep_list[0]) / (\n","                                              ep_list[0] - done_out + out_fee * ep_list[0]))\n","                                  dr = ((done_tp - ep_list[0]) / (ep_list[0] - done_out))\n","\n","                          else:\n","                              dr = np.nan\n","                              tp_ratio = np.nan\n","\n","                      except Exception as e:\n","                          print(\"error in tr phase :\", e)\n","                          dr = np.nan\n","                          tp_ratio = np.nan\n","\n","                      tp_ratio_list.append(tp_ratio)\n","                      long_tp_ratio_list.append(tp_ratio)\n","                      dr_list.append(dr)\n","                      long_dr_list.append(dr)\n","\n","                      qty_list = []\n","                      temp_pr_list = []\n","                      r_qty = 1\n","                      for q_i in range(len(tp_list) - 1, -1, -1):\n","\n","                          if len(tp_list) == 1:\n","                              temp_qty = r_qty\n","                          else:\n","                              if q_i != 0:\n","                                  temp_qty = r_qty / config.tp_set.partial_qty_divider\n","                              else:\n","                                  temp_qty = r_qty\n","\n","                          # temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty\n","                          temp_pr = (tp_list[q_i] / ep_list[0] - fee - 1) * temp_qty * config.lvrg_set.leverage\n","                          r_qty -= temp_qty\n","\n","                          temp_pr_list.append(temp_pr)\n","\n","                      temp_pr = sum(temp_pr_list) + 1\n","\n","                      # -------------------- sub ep -> pr calc -------------------- #\n","                      if len(ep_list) > 1:\n","\n","                          p_ep_pr = []\n","                          for sub_ep_ in ep_list:\n","                              sub_pr = (tp / sub_ep_ - fee - 1) * config.lvrg_set.leverage\n","                              p_ep_pr.append(sub_pr)\n","\n","                          temp_pr = sum(p_ep_pr) + 1\n","\n","                          print(\"temp_pr :\", temp_pr)\n","\n","                      # ------------ hedge + non_hedge pr summation ------------ #\n","                      #         hedge pr direction is opposite to the origin       #\n","                      hedge_pr = 1\n","                      if hedge_cnt == 0:\n","                          #       hedge tp      #\n","                          h_tp = res_df['close'].iloc[j]\n","                          hedge_pr = (h_ep / h_tp - fee - 1) * config.lvrg_set.leverage  # hedge short\n","                          temp_pr += hedge_pr\n","                          h_j = j\n","\n","                      # ll = min(res_df['low'].iloc[i:j + 1])\n","                      ll = min(res_df['low'].iloc[i:j])  # pos. 정리하기 바로 직전까지\n","                      long_liq = (ll / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","\n","                      if j != len(res_df) - 1:\n","\n","                          ep_tp_list.append((ep_list, tp_list))\n","                          # trade_list.append((ep_idx_list, tp_idx_list))\n","                          trade_list.append((ep_idx_list, out_idx_list, tp_idx_list))\n","\n","                          liqd_list.append(long_liq)\n","                          long_liqd_list.append(long_liq)\n","\n","                          h_ep_tp_list.append((h_ep, h_tp))\n","                          h_trade_list.append([initial_i, h_i, h_j])\n","\n","                          pr_list.append(temp_pr)\n","                          fee_list.append(fee)\n","                          long_list.append(temp_pr)\n","                          long_fee_list.append(fee)\n","\n","                          h_pr_list.append(hedge_pr)\n","                          h_long_list.append(hedge_pr)\n","\n","                          i = j\n","                          break\n","\n","                      else:\n","\n","                          # ep_tp_list.append((ep_list, tp_list))\n","                          # trade_list.append((ep_idx_list, tp_idx_list))\n","\n","                          # pr_list 를 넣지 않을거니까, open_list 에서 해당 idx 는 pop\n","                          open_list.pop()\n","                          zone_list.pop()\n","                          side_list.pop()\n","                          strat_ver_list.pop()\n","\n","                          #         tp 미체결 survey        #\n","                          nontp_liqd_list.append(long_liq)\n","                          nontp_long_liqd_list.append(long_liq)\n","                          nontp_long_indexs.append(i)\n","                          nontp_long_ep_list.append(ep_list[0])\n","\n","                          nontp_long_pr = (tp / ep_list[0] - fee - 1) * config.lvrg_set.leverage + 1\n","                          nontp_pr_list.append(nontp_long_pr)\n","                          nontp_long_pr_list.append(nontp_long_pr)\n","\n","                      if len(open_list) > len(trade_list):\n","                          print('debug from index :', i)\n","                          print(len(open_list), len(trade_list))\n","                          print(\"len(res_df) :\", len(res_df))\n","                          assert len(open_list) == len(trade_list), 'stopped'\n","\n","          # i += 1  # if entry starts with prev trade's close, do not use it !\n","          # print(\"i in end :\", i)\n","          if i >= len(res_df):\n","              break\n","\n","      # -------------------- result analysis -------------------- #\n","      # try:\n","      print(\"elapsed_time :\", time.time() - start_0)\n","\n","      plt.style.use('default')\n","      # mpl.rcParams.update(mpl.rcParamsDefault)\n","\n","      fig = plt.figure(figsize=(14, 10))\n","\n","      gs = gridspec.GridSpec(nrows=3,  # row 몇 개\n","                              ncols=3,  # col 몇 개\n","                              height_ratios=[10, 10, 1]\n","                              )\n","      # plt.figure(figsize=(16, 12))\n","      # plt.figure(figsize=(12, 8))\n","      # plt.figure(figsize=(10, 6))\n","      plt.suptitle(key)\n","\n","      try:\n","          np_pr = np.array(pr_list)\n","\n","          sr = sharpe_ratio(np_pr)\n","\n","          np_zone_list = np.array(zone_list)\n","          # np_pr_list = np.array(pr_list)\n","          np_side_list = np.array(side_list)\n","\n","          t_w = np.sum(np.where((np_zone_list == 't') & (np_pr > 1), 1, 0))\n","          c_w = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1), 1, 0))\n","          t_ls = np.sum(np.where((np_zone_list == 't') & (np_pr < 1), 1, 0))\n","          c_ls = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1), 1, 0))\n","\n","          # np_pr = (np.array(pr_list) - 1) * config.lvrg_set.leverage + 1\n","\n","          # ----- fake_pr ----- #\n","          # np_pr = np.where(np_pr > 1, 1 + (np_pr - 1) * 3, np_pr)\n","\n","          total_pr = np.cumprod(np_pr)\n","\n","          for_sum_pr = np_pr - 1\n","          for_sum_pr[0] = 1\n","          sum_pr = np.cumsum(for_sum_pr)\n","          sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","          dpf = (len(res_df) / 1440) / len(np_pr) # devision zero warning\n","\n","          wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","\n","          total_rollmax_pr = np.maximum.accumulate(total_pr)\n","          total_acc_mdd = np.max((total_rollmax_pr - total_pr) / total_rollmax_pr)\n","          total_rollmax_sumpr = np.maximum.accumulate(sum_pr)\n","          total_sum_mdd = np.max((total_rollmax_sumpr - sum_pr) / total_rollmax_sumpr)\n","\n","          np_tp_ratio_list = np.array(tp_ratio_list)  # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","          mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","          np_dr_list = np.array(dr_list)  # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","          mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","          # pr_gap = (np_pr - 1) / config.lvrg_set.leverage + fee\n","          # tp_gap_ = pr_gap[pr_gap > 0]\n","          # # mean_config.tr_set.tp_gap = np.mean(pr_gap[pr_gap > 0])\n","          # mean_ls_gap = np.mean(pr_gap[pr_gap < 0])\n","\n","          # ---- profit fee ratio ---- #\n","          # mean_pgfr = np.mean((tp_gap_ - fee) / abs(tp_gap_ + fee))\n","\n","          plt.subplot(gs[0])\n","          plt.plot(total_pr)\n","          plt.plot(sum_pr, color='gold')\n","          if len(nontp_liqd_list) != 0:\n","              plt.title(\n","                  \"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\nnontp_liqd : %.3f\\nontp_liqd_pr : %.3f\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), min(nontp_liqd_list), min(nontp_pr_list), t_w, c_w, t_ls, c_ls),\n","                  position=title_position, fontsize=fontsize)\n","          else:\n","              plt.title(\n","                  \"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), t_w, c_w, t_ls, c_ls),\n","                  position=title_position, fontsize=fontsize)\n","          # plt.show()\n","\n","          survey_df.iloc[survey_i] = wr, sr, len(np_pr[np_pr != 1]), dpf, \\\n","                                      total_pr[-1], sum_pr[-1], total_acc_mdd, total_sum_mdd, min(liqd_list), np.min(\n","              np_pr), mean_tr, mean_dr\n","\n","          print('supblot231 passed')\n","\n","      except Exception as e:\n","          print(\"error in 231 :\", e)\n","\n","      try:\n","          #         short only      #\n","          short_np_pr = np.array(short_list)\n","\n","          short_sr = sharpe_ratio(short_np_pr)\n","\n","          short_total_pr = np.cumprod(short_np_pr)\n","\n","          short_for_sum_pr = short_np_pr - 1\n","          short_for_sum_pr[0] = 1\n","          short_sum_pr = np.cumsum(short_for_sum_pr)\n","          short_sum_pr = np.where(short_sum_pr < 0, 0, short_sum_pr)\n","\n","          short_dpf = (len(res_df) / 1440) / len(short_np_pr)  # devision zero warning\n","\n","          short_wr = len(short_np_pr[short_np_pr > 1]) / len(short_np_pr[short_np_pr != 1])  # devision zero warning\n","\n","          t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","          c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","          t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","          c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","\n","          short_rollmax_pr = np.maximum.accumulate(short_total_pr)\n","          short_acc_mdd = np.max((short_rollmax_pr - short_total_pr) / short_rollmax_pr)\n","          short_rollmax_sumpr = np.maximum.accumulate(short_sum_pr)\n","          short_sum_mdd = np.max((short_rollmax_sumpr - short_sum_pr) / short_rollmax_sumpr)\n","\n","          np_short_tp_ratio_list = np.array(short_tp_ratio_list)\n","          mean_short_tr = np.mean(np_short_tp_ratio_list[np.isnan(np_short_tp_ratio_list) == 0])\n","\n","          np_short_dr_list = np.array(short_dr_list)\n","          mean_short_dr = np.mean(np_short_dr_list[np.isnan(np_short_dr_list) == 0])\n","\n","          # short_pr_gap = (short_np_pr - 1) / config.lvrg_set.leverage + fee\n","          # short_tp_gap = short_pr_gap[short_pr_gap > 0]\n","          # # mean_short_tp_gap = np.mean(short_pr_gap[short_pr_gap > 0])\n","          # # mean_short_ls_gap = np.mean(short_pr_gap[short_pr_gap < 0])\n","\n","          # mean_short_pgfr = np.mean((short_tp_gap - fee) / abs(short_tp_gap + fee))\n","\n","          # plt.subplot(232)\n","          plt.subplot(gs[1])\n","          plt.plot(short_total_pr)\n","          plt.plot(short_sum_pr, color='gold')\n","          if len(nontp_short_liqd_list) != 0:\n","\n","              max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","\n","              plt.title(\n","                  \"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1],\n","                      short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr,\n","                      mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), min(nontp_short_liqd_list), min(nontp_short_pr_list),\n","                      max_nontp_short_term, t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position, fontsize=fontsize)\n","          else:\n","              plt.title(\n","                  \"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1],\n","                      short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr,\n","                      mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position, fontsize=fontsize)\n","\n","          short_survey_df.iloc[survey_i] = short_wr, short_sr, len(short_np_pr[short_np_pr != 1]), short_dpf, \\\n","                                            short_total_pr[-1], short_sum_pr[-1], short_acc_mdd, short_sum_mdd, min(\n","              short_liqd_list), np.min(short_np_pr), mean_short_tr, mean_short_dr\n","\n","          print('supblot232 passed')\n","\n","      except Exception as e:\n","          print(\"error in 232 :\", e)\n","\n","      try:\n","          #         long only      #\n","          long_np_pr = np.array(long_list)\n","          # long_np_pr = (np.array(long_list) - 1) * config.lvrg_set.leverage + 1\n","\n","          long_sr = sharpe_ratio(long_np_pr)\n","\n","          long_total_pr = np.cumprod(long_np_pr)\n","\n","          long_for_sum_pr = long_np_pr - 1\n","          long_for_sum_pr[0] = 1\n","          long_sum_pr = np.cumsum(long_for_sum_pr)\n","          long_sum_pr = np.where(long_sum_pr < 0, 0, long_sum_pr)\n","\n","          long_dpf = (len(res_df) / 1440) / len(long_np_pr) # devision zero warning\n","\n","          long_wr = len(long_np_pr[long_np_pr > 1]) / len(long_np_pr[long_np_pr != 1])\n","\n","          t_w_l = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","          c_w_l = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","          t_ls_l = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","          c_ls_l = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","\n","          long_rollmax_pr = np.maximum.accumulate(long_total_pr)\n","          long_acc_mdd = np.max((long_rollmax_pr - long_total_pr) / long_rollmax_pr)\n","          long_rollmax_sumpr = np.maximum.accumulate(long_sum_pr)\n","          long_sum_mdd = np.max((long_rollmax_sumpr - long_sum_pr) / long_rollmax_sumpr)\n","\n","          np_long_tp_ratio_list = np.array(long_tp_ratio_list)\n","          mean_long_tr = np.mean(np_long_tp_ratio_list[np.isnan(np_long_tp_ratio_list) == 0])\n","\n","          np_long_dr_list = np.array(long_dr_list)\n","          mean_long_dr = np.mean(np_long_dr_list[np.isnan(np_long_dr_list) == 0])\n","\n","          # long_pr_gap = (long_np_pr - 1) / config.lvrg_set.leverage + fee\n","          # long_tp_gap = long_pr_gap[long_pr_gap > 0]\n","          # # mean_long_tp_gap = np.mean(long_pr_gap[long_pr_gap > 0])\n","          # # mean_long_ls_gap = np.mean(long_pr_gap[long_pr_gap < 0])\n","\n","          # mean_long_pgfr = np.mean((long_tp_gap - fee) / abs(long_tp_gap + fee))\n","\n","          plt.subplot(gs[2])\n","          plt.plot(long_total_pr)\n","          plt.plot(long_sum_pr, color='gold')\n","          if len(nontp_long_liqd_list) != 0:\n","\n","              max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","              plt.title(\n","                  \"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1],\n","                      long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr,\n","                      mean_long_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (\n","                  len(nontp_long_liqd_list), min(nontp_long_liqd_list), min(nontp_long_pr_list), max_nontp_long_term,\n","                  t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position, fontsize=fontsize)\n","          else:\n","              plt.title(\n","                  \"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1],\n","                      long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr,\n","                      mean_long_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_long_liqd_list), t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position, fontsize=fontsize)\n","\n","          long_survey_df.iloc[survey_i] = long_wr, long_sr, len(long_np_pr[long_np_pr != 1]), long_dpf, \\\n","                                          long_total_pr[-1], long_sum_pr[-1], long_acc_mdd, long_sum_mdd, min(\n","              long_liqd_list), np.min(long_np_pr), mean_long_tr, mean_long_dr\n","\n","          print('supblot233 passed')\n","\n","      except Exception as e:\n","          print(\"error in 233 :\", e)\n","\n","      try:\n","          #     reversion adjustment      #\n","          # rev_np_pr = 1 / (np.array(pr_list) + fee) - fee\n","          rev_fee = tp_fee + out_fee - np.array(fee_list)\n","          rev_np_pr = (1 / ((np.array(pr_list) - 1) / config.lvrg_set.leverage + np.array(\n","              fee_list) + 1) - rev_fee - 1) * config.lvrg_set.leverage + 1\n","          # rev_np_pr = (1 / (np.array(pr_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","\n","          rev_sr = sharpe_ratio(rev_np_pr)\n","\n","          rev_total_pr = np.cumprod(rev_np_pr)\n","          rev_wr = len(rev_np_pr[rev_np_pr > 1]) / len(rev_np_pr[rev_np_pr != 1]) # devision zero warning\n","\n","          rev_total_for_sum_pr = rev_np_pr - 1\n","          rev_total_for_sum_pr[0] = 1\n","          rev_total_sum_pr = np.cumsum(rev_total_for_sum_pr)\n","          rev_total_sum_pr = np.where(rev_total_sum_pr < 0, 0, rev_total_sum_pr)\n","\n","          rev_rollmax_pr = np.maximum.accumulate(rev_total_pr)\n","          rev_acc_mdd = np.max((rev_rollmax_pr - rev_total_pr) / rev_rollmax_pr)\n","          rev_rollmax_sumpr = np.maximum.accumulate(rev_total_sum_pr)\n","          rev_sum_mdd = np.max((rev_rollmax_sumpr - rev_total_sum_pr) / rev_rollmax_sumpr)\n","\n","          plt.subplot(gs[3])\n","\n","          plt.plot(rev_total_pr)\n","          plt.plot(rev_total_sum_pr, color='gold')\n","\n","          plt.title(\n","              \"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\"\n","              % (rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[-1],\n","                  rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)), fontsize=fontsize)\n","          plt.gca().axes.xaxis.set_ticklabels([])\n","\n","          rev_survey_df.iloc[survey_i] = rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[\n","              -1], rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)\n","\n","      except Exception as e:\n","          print(\"error in 234 :\", e)\n","\n","      try:\n","          #         short       #\n","          # rev_short_np_pr = 1 / (np.array(short_list) + fee) - fee\n","          rev_short_fee = tp_fee + out_fee - np.array(short_fee_list)\n","          rev_short_np_pr = (1 / ((np.array(short_list) - 1) / config.lvrg_set.leverage + np.array(\n","              short_fee_list) + 1) - rev_short_fee - 1) * config.lvrg_set.leverage + 1\n","          # rev_short_np_pr = (1 / (np.array(short_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","\n","          rev_short_sr = sharpe_ratio(rev_short_np_pr)\n","\n","          short_rev_total_pr = np.cumprod(rev_short_np_pr)\n","          rev_short_wr = len(rev_short_np_pr[rev_short_np_pr > 1]) / len(rev_short_np_pr[rev_short_np_pr != 1]) # devision zero warning\n","\n","          rev_short_for_sum_pr = rev_short_np_pr - 1\n","          rev_short_for_sum_pr[0] = 1\n","          short_rev_sum_pr = np.cumsum(rev_short_for_sum_pr)\n","          short_rev_sum_pr = np.where(short_rev_sum_pr < 0, 0, short_rev_sum_pr)\n","\n","          short_rev_rollmax_pr = np.maximum.accumulate(short_rev_total_pr)\n","          short_rev_acc_mdd = np.max((short_rev_rollmax_pr - short_rev_total_pr) / short_rev_rollmax_pr)\n","          short_rev_rollmax_sumpr = np.maximum.accumulate(short_rev_sum_pr)\n","          short_rev_sum_mdd = np.max((short_rev_rollmax_sumpr - short_rev_sum_pr) / short_rev_rollmax_sumpr)\n","\n","          plt.subplot(gs[4])\n","\n","          plt.plot(short_rev_total_pr)\n","          plt.plot(short_rev_sum_pr, color='gold')\n","\n","          plt.title(\n","              \"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\"\n","              % (rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[-1],\n","                  short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)), fontsize=fontsize)\n","          plt.gca().axes.xaxis.set_ticklabels([])\n","\n","          rev_short_survey_df.iloc[survey_i] = rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[\n","              -1], short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)\n","\n","      except Exception as e:\n","          print(\"error in 235 :\", e)\n","\n","      try:\n","          #         long       #\n","          # rev_long_np_pr = 1 / (np.array(long_list) + fee) - fee\n","          rev_long_fee = tp_fee + out_fee - np.array(long_fee_list)\n","          rev_long_np_pr = (1 / ((np.array(long_list) - 1) / config.lvrg_set.leverage + np.array(\n","              long_fee_list) + 1) - rev_long_fee - 1) * config.lvrg_set.leverage + 1\n","\n","          rev_long_sr = sharpe_ratio(rev_long_np_pr)\n","\n","          long_rev_total_pr = np.cumprod(rev_long_np_pr)\n","          rev_long_wr = len(rev_long_np_pr[rev_long_np_pr > 1]) / len(rev_long_np_pr[rev_long_np_pr != 1]) # devision zero warning\n","\n","          rev_long_for_sum_pr = rev_long_np_pr - 1\n","          rev_long_for_sum_pr[0] = 1\n","          long_rev_sum_pr = np.cumsum(rev_long_for_sum_pr)\n","          long_rev_sum_pr = np.where(long_rev_sum_pr < 0, 0, long_rev_sum_pr)\n","\n","          long_rev_rollmax_pr = np.maximum.accumulate(long_rev_total_pr)\n","          long_rev_acc_mdd = np.max((long_rev_rollmax_pr - long_rev_total_pr) / long_rev_rollmax_pr)\n","          long_rev_rollmax_sumpr = np.maximum.accumulate(long_rev_sum_pr)\n","          long_rev_sum_mdd = np.max((long_rev_rollmax_sumpr - long_rev_sum_pr) / long_rev_rollmax_sumpr)\n","\n","          plt.subplot(gs[5])\n","\n","          plt.plot(long_rev_total_pr)\n","          plt.plot(long_rev_sum_pr, color='gold')\n","\n","          plt.title(\n","              \"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\"\n","              % (rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[-1],\n","                  long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)), fontsize=fontsize)\n","          plt.gca().axes.xaxis.set_ticklabels([])\n","\n","          rev_long_survey_df.iloc[survey_i] = rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[\n","              -1], long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)\n","\n","      except Exception as e:\n","          print(\"error in 236 :\", e)\n","\n","      try:\n","          gs_idx_list = [6, 7, 8]\n","          total_pr_list = [total_pr, short_total_pr, long_total_pr]\n","          rev_total_pr_list = [rev_total_pr, short_rev_total_pr, long_rev_total_pr]\n","          zip_obj = zip(gs_idx_list, frq_dev_plot(res_df, trade_list, side_list, plot=False), total_pr_list, rev_total_pr_list)\n","          [p_pr_plot(gs[gs_idx], frq_dev, res_df, total_pr, rev_total_pr, fontsize) for gs_idx, frq_dev, total_pr, rev_total_pr in zip_obj]              \n","\n","      except Exception as e:\n","          print(\"error in frq_dev_plot :\", e)\n","\n","      if show_plot:\n","          plt.show()\n","\n","      try:\n","\n","          h_np_pr = np.array(h_pr_list)\n","          # h_rev_np_pr = 1 / (np.array(h_pr_list) + fee) - fee    # define, for plot_check below cell\n","          h_rev_np_pr = (1 / (\n","                      (np.array(h_pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - np.array(\n","              fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","          # --------------------- h pr plot --------------------- #\n","          if len(h_np_pr[h_np_pr != 1]) != 0:\n","\n","              plt.figure(figsize=(16, 12))\n","              plt.suptitle(key + \" hedge\")\n","\n","              h_total_pr = np.cumprod(h_np_pr)\n","              h_wr = len(h_np_pr[h_np_pr > 1]) / len(h_np_pr[h_np_pr != 1])\n","\n","              plt.subplot(gs[0])\n","\n","              plt.plot(h_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_wr, np.min(h_np_pr), h_total_pr[-1], config.lvrg_set.leverage))\n","              # plt.show()\n","\n","              #         short only      #\n","              h_short_np_pr = np.array(h_short_list)\n","\n","              short_h_total_pr = np.cumprod(h_short_np_pr)\n","              h_short_wr = len(h_short_np_pr[h_short_np_pr > 1]) / len(h_short_np_pr[h_short_np_pr != 1])\n","\n","              plt.subplot(gs[1])\n","              plt.plot(short_h_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_short_wr, np.min(h_short_np_pr), short_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","              #         long only      #\n","              h_long_np_pr = np.array(h_long_list)\n","\n","              long_h_total_pr = np.cumprod(h_long_np_pr)\n","              h_long_wr = len(h_long_np_pr[h_long_np_pr > 1]) / len(h_long_np_pr[h_long_np_pr != 1])\n","\n","              plt.subplot(gs[2])\n","              plt.plot(long_h_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_long_wr, np.min(h_long_np_pr), long_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","              #     reversion adjustment      #\n","\n","              h_rev_total_pr = np.cumprod(h_rev_np_pr)\n","              h_rev_wr = len(h_rev_np_pr[h_rev_np_pr > 1]) / len(h_rev_np_pr[h_rev_np_pr != 1])\n","\n","              plt.subplot(gs[3])\n","              plt.plot(h_rev_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_rev_wr, np.min(h_rev_np_pr), h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","              #         short       #\n","              # h_rev_short_np_pr = 1 / (np.array(h_short_list) + fee) - fee\n","              h_rev_short_np_pr = (1 / ((np.array(h_short_list) - 1) / config.lvrg_set.leverage + np.array(\n","                  short_fee_list) + 1) - np.array(short_fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","              short_h_rev_total_pr = np.cumprod(h_rev_short_np_pr)\n","              h_rev_short_wr = len(h_rev_short_np_pr[h_rev_short_np_pr > 1]) / len(\n","                  h_rev_short_np_pr[h_rev_short_np_pr != 1])\n","\n","              plt.subplot(gs[4])\n","              plt.plot(short_h_rev_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_rev_short_wr, np.min(h_rev_short_np_pr), short_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","              #         long       #\n","              # h_rev_long_np_pr = 1 / (np.array(h_long_list) + fee) - fee\n","              h_rev_long_np_pr = (1 / ((np.array(h_long_list) - 1) / config.lvrg_set.leverage + np.array(\n","                  long_fee_list) + 1) - np.array(long_fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","              long_h_rev_total_pr = np.cumprod(h_rev_long_np_pr)\n","              h_rev_long_wr = len(h_rev_long_np_pr[h_rev_long_np_pr > 1]) / len(\n","                  h_rev_long_np_pr[h_rev_long_np_pr != 1])\n","\n","              plt.subplot(gs[5])\n","              plt.plot(long_h_rev_total_pr)\n","              plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (\n","              h_rev_long_wr, np.min(h_rev_long_np_pr), long_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","              if show_plot:\n","                  plt.show()\n","\n","      except Exception as e:\n","          print('error in h_pr plot :', e)\n","\n","      print()\n","\n","      # ---------- to this line ---------- #\n","\n","      # print()\n","\n","\n","  # break # pair loop"]},{"cell_type":"markdown","metadata":{"id":"Ksth13T0spcQ"},"source":["#### check statistical significance"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":6193,"status":"ok","timestamp":1642919357867,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"pZlZCr2lspcR","outputId":"0bee0200-7fa4-418c-d81e-37587ae3df26"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 36 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n","\n"]},{"data":{"image/png":"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2DGzfPlym3n9+vUzxhjTvn37fOcyevRoY4wxAQEBNuONGzc2xhgzb948m/F33nnHGGPMPffcYx3bvXu3iYqKyrFtT09P4+LiYjMWEBBgUlNTzeuvv24zZowxISEhDv/ZEARBEARBEMStFuHh4cYYYyZNmmQz3q5dO2OMMY8++qjNeNeuXW3GfXx8TGpqqnn33Xdt5o0ZM8ZkZ2eb22+/PV95+Pn5GWOMGT169DXnWSyWHHVPxYoVc+QQFhZmjDGmXbt21jFvb28TFxdnDh06ZK1VOnXqZIwx5uDBg8bLy8vmufr27WuMMaZTp04O/zkRBEEQBEEQxK0aV2qArl272oy/9tprJjk52dSuXdtmfNKkSSYzM9PUqFHDSDJdunQxxhjTs2dPm3mrVq0yBw8eLFAuUVFRNp+HvPjii8YYYx577DHrmLu7u9m0aZNJSkoyZcuWNdJ/Pwc5e/asKVeunHVur169cuS2c+dOc/ToUePt7W0d69ixozHGGIvF4vCfB0EQBHHjwSUIAaCQzZkzx+b2I488IldXV0VGRqpChQrWOH36tA4cOKB7773XOnf58uXq0aOHvL29rWMDBw7U8ePHbS5naK8rl+UICwuzGX/vvfckST179rzuNjIyMmSMkSS5urqqfPnyunjxovbt26fmzZvfcI4AAAAACs/s2bNtbvfv319//vmnvv/+e5v6ZPv27UpOTrbWJ8nJyfr22281YMAAm8cPHDhQMTExOnbsWL6ePzU1Venp6brnnntsLnGYm99//92m7jl37pz27dunWrVqWcd69OihrVu3atOmTdaxS5cuad68eQoKClKDBg1sthkREaG0tLR85QoAAACgaB06dEhr1661Gevfv7+io6OVkJBgU7OsW7dO7u7u6tixoyTpxx9/1NmzZzVw4EDrY8uVK6cuXbpo2bJlN5RXjx49dOrUKS1ZssQ6lpWVpenTp8vHxyfHJcyXLVumP//803o7Ojpakqy1TNWqVdW4cWN99NFHunTpknXehg0btGvXrhvKFQBQfNCABQCF7OprddepU0eurq46ePCgzp07ZxMNGjTQbbfdZp27bNkylSlTRg899JAkydvbWz169NDy5csLJbeAgABlZ2fr4MGDNuPx8fFKSEhQQEDAdbfh4uKiUaNGaf/+/UpPT9f58+d17tw5NWnSRH5+foWSJwAAAIAbl5mZqePHj9uM1alTR+XKldPZs2dz1Cc+Pj456pMrlxyU/vrw4K677irQhxkZGRl69dVX1b17d8XHx2v9+vX6xz/+ocqVK+eYe/To0RxjCQkJ8vf3t94OCAjQvn37csy7cgnBq2uaq+szAAAAAMVHbu/X69Spo+7du+eoV3744QdJstYs2dnZWrFihR5++GF5enpK+uuAeE9PzxtuwAoICNCBAwesB6NfkVfdcXUtc6UZ60otc2X+1Z/N5DUGACiZ3B2dAAA4m9TUVJvbrq6uunz5srp3767s7Owc8y9evGj9euvWrbJYLBowYICWLFmiXr16qUyZMjdcLFzt6qKhIMaNG6f//Oc/WrBggcaPH68LFy7o8uXLev/99+XqSl8vAAAAUFykp6fneO/v6uqq+Ph4DRo0KNfHnD171vr1ypUrdenSJQ0YMEBbtmzRgAEDlJ2dXeADRKZNm6aVK1eqd+/eeuCBBzRhwgSNHTtW9913n2JjY63zcquXpL8OArHX1fUZAAAAgOIjt/frrq6uWrt2rd55551cH7N//37r10uXLtXQoUPVvXt3ffXVVxowYID27t1b5GeVuhm1DACg5KEBCwBusri4OLm6uspisejAgQPXnR8ZGamRI0fKx8dHAwcOlMVi0datWwv0nHk1WB05ckRubm6qU6eO/vjjD+v4bbfdJn9/fx05cuS62+jXr59+/PFHPfvsszbj5cqV07lz5wqUJwAAAICiFRcXp86dO2vTpk3XvTRfSkqKVq1apf79++vll1/WwIEDFR0drVOnThX4eQ8dOqSwsDCFhYWpdu3aio2N1ejRo/XEE08UaDtHjhxRcHBwjvF69epZ77+eGzkgBQAAAMDNFRcXp7Jly1rPeHUtGzZs0MmTJzVw4EBt3LhR9913nyZOnHjDORw5ckSNGzeWi4uLTf1QkLrj6u1JUu3atXPcl9sYAKBk4lQlAHCTff7558rKylJoaGiu95cvX97m9rJly+Tl5aWQkBB169ZNkZGRBX7OK9cQL1eunM346tWrJUmjRo2yGX/55ZclSd98843NNq5+vPTXkRxXH7XRr18/1ahRo8B5AgAAAChakZGRcnd31/jx43Pc5+bmluOy4suWLVP16tX17LPPqmnTpgU+O2/p0qVVqlQpm7G4uDglJyfnGM+P1atXq1WrVmrdurV1rEyZMnr++edlsVi0Z8+e624jr3oJAAAAgONFRkaqbdu26tq1a477/Pz85ObmZr1tjNFnn32mXr166YknnpCHh0ehXFFk9erVqlq1qgYOHGgdc3Nz04gRI5ScnKz169cXaHunTp3S7t279eSTT8rb29s63rFjRzVu3PiG8wUAFA+cAQsAbrJDhw7p9ddf11tvvaXAwEB9+eWXSk5OVlBQkPr06aN58+bpvffes87fsWOHDhw4oIkTJ8rLy8uuYmH79u2SpIkTJ2rp0qXKzMzUypUrtWvXLi1atEhDhgxRuXLltH79et19990aPHiwvvjiC/3000822xg2bJhee+01HTx4UGfOnFFUVJRWrVql0NBQLVy4UJs3b1ajRo00aNAgxcXF3fBrBQAAAODm2rBhg+bMmaNx48apadOmWrt2rTIzM1WnTh31799fI0eO1IoVK6zzV69eraSkJE2ZMkVZWVk29+VH3bp19cMPPygyMlJ79uxRVlaW+vTpoypVqmjp0qUFzv+tt97So48+qm+//VbTp0/XhQsXFBISoqCgIPXt2zdfZ7eKjY1VVlaWXn31Vfn5+Sk9PV0//vijzeUXAQAAADjGu+++q4ceekirVq3SokWLtH37dnl7e6tRo0bq16+fAgMDdf78eev8ZcuW6cUXX9S///1v7dq1y+bqH/aaN2+ehgwZokWLFqlFixY6fPiw+vXrp/bt22vkyJG6ePFigbc5btw4ffXVV9q0aZPCw8Pl7++v4cOHa/fu3SpbtuwN5wwAKB4MQRAEceMRGhpqjDGmQoUKud7fp08fs2HDBpOcnGySk5PNnj17zIwZM0ydOnVyzJ0wYYIxxpj9+/fbnc9rr71mjh07ZrKysowxxgQEBBhJxs3NzYwfP97ExcWZ9PR0c+TIETNx4kTj6elp8/jbbrvNrFy50iQmJhpjjImKijKSjKenp3n33XfNiRMnzKVLl0x0dLRp1aqViYqKss6RZAICAowxxoSEhDj8Z0MQBEEQBEEQt1qEh4eb5OTkPO9/9tlnzbZt28ylS5dMYmKi2blzp3nrrbdMlSpVcsz9+OOPjTHGrF27tsB5lC9f3syYMcPs2bPHJCcnm4SEBLNlyxbTr18/m3kWi8WsXLkyx+OvrjMkmaCgIBMZGWkuXLhgUlJSTExMjOnRo4fNnE6dOhljjOnbt2+ueT3zzDPm4MGDJjMz0xhjTKdOnRz+MyMIgiAIgiCIWynyqgEkGW9vbzNx4kSzf/9+k5aWZs6cOWM2btxoXn75ZePu7p5j/pEjR4wxxowbN86uXHKrOypVqmQWLFhgzpw5Y9LS0szOnTtzfN5x5XOQ0aNH59imMcaEhobajA0YMMDs2bPHpKamml27dpkHH3zQLF++3OzZs8fhPw+CIAjixsPl/78AAAAAAAAAAAAAAABFZMeOHTp79myul1wEAJQsro5OAAAAAAAAAAAAAAAAZ+Xu7i43NzebsU6dOqlp06b66aefHJMUAKBQcQYsAChBvL29r3st8LNnz+ry5ctFlBEAAACAW5Wvr69Kly59zTnx8fFFlA0AAAAA2KpYsWKOpqf/lZGRoYSEhCLJJSAgQOvWrdMnn3yikydPql69eho6dKgSExPVsGFDXbhwoUjyAADcPDRgAUAJEhoaqjfeeOOacwIDA3XkyJGiSQgAAADALSs8PFyDBw++5hwXF5eiSQYAAAAArmKxWBQYGJjn/T/99JPuvffeIsnF19dX8+bNU7t27VSpUiVdunRJP/zwg/75z3/q0KFDRZIDAODmogELAEqQoKAg1apV65pzNm7cqPT09CLKCAAAAMCtqn79+qpWrdo15/zwww9FlA0AAAAA2Grbtu01z9qbkJCgX3/9tQgzAgA4MxqwAAAAAAAAAAAAAAAAAMBOro5OAAAAAAAAAAAAAAAAAABKKhqwAAAAAAAAAAAAAAAAAMBONGABAAAAAAAAAAAAAAAAgJ1owAIAAAAAAAAAAAAAAAAAO9GABQAAAAAAAAAAAAAAAAB2ogELAAAAAAAAAAAAAAAAAOxEAxYAAAAAAAAAAAAAAAAA2IkGLAAAAAAAAAAAAAAAAACwEw1YAAAAAAAAAAAAAAAAAGAnGrAAAAAAAAAAAAAAAAAAwE40YAEAAAAAAAAAAAAAAACAnWjAAgAAAAAAAAAAAAAAAAA70YAFAAAAAAAAAAAAAAAAAHaiAQsAAAAAAAAAAAAAAAAA7EQDFgAAAAAAAAAAAAAAAADYiQYsAAAAAAAAAAAAAAAAALATDVgAAAAAAAAAAAAAAAAAYCcasAAAAAAAAAAAAAAAAADATjRgAQAAAAAAAAAAAAAAAICdaMACAAAAAAAAAAAAAAAAADvRgAUAAAAAAAAAAAAAAAAAdqIBCwAAAAAAAAAAAAAAAADsRAMWAAAAAAAAAAAAAAAAANiJBiwAAAAAAAAAAAAAAAAAsBMNWAAAAAAAAAAAAAAAAABgJxqwAAAAAAAAAAAAAAAAAMBONGABAAAAAAAAAAAAAAAAgJ1owAIAAAAAAAAAAAAAAAAAO9GABQAAAAAAAAAAAAAAAAB2ogELAAAAAAAAAAAAAAAAAOxEAxYAAAAAAAAAAAAAAAAA2IkGLAAAAAAAAAAAAAAAAACwEw1YAAAAAAAAAAAAAAAAAGAnGrAAAAAAAAAAAAAAAAAAwE40YAEAAAAAAAAAAAAAAACAnWjAAgAAAAAAAAAAAAAAAAA70YAFAAAAAAAAAAAAAAAAAHaiAQsAAAAAAAAAAAAAAAAA7EQDFgAAAAAAAAAAAAAAAADYiQYsAAAAAAAAAAAAAAAAALATDVgAAAAAAAAAAAAAAAAAYCcasAAAAAAAAAAAAAAAAADATjRgAQAAAAAAAAAAAAAAAICdaMACAAAAAAAAAAAAAAAAADvRgAUAAAAAAAAAAAAAAAAAdqIBCwAAAAAAAAAAAAAAAADsRAMWAAAAAAAAAAAAAAAAANiJBiwAAAAAAAAAAAAAAAAAsBMNWAAAAAAAAAAAAAAAAABgJxqwAAAAAAAAAAAAAAAAAMBONGABAAAAAAAAAAAAAAAAgJ1owAIAAAAAAAAAAAAAAAAAO9GABQAAAAAAAAAAAAAAAAB2ogELAAAAAAAAAAAAAAAAAOxEAxYAAAAAAAAAAAAAAAAA2IkGLAAAAAAAAAAAAAAAAACwEw1YAAAAAAAAAAAAAAAAAGAnGrAAAAAAAAAAAAAAAAAAwE40YAEAAAAAAAAAAAAAAACAnWjAAgAAAAAAAAAAAAAAAAA70YAFAAAAAAAAAAAAAAAAAHaiAQt28/LycnQKgN1Kly7t6BSAYqVUqVJycXFxdBpAoXJzc5OHh4ej0wBQjFHToCSjpgFsUdPAGVHTALgW6hmUZNQzgC3qGTijW7GeoQHrFtOoUSMZY9SrVy/rWPPmzWWM0fbt223mrl69WjExMZIki8WilStXqmvXrtq2bZtSU1M1ZMiQIs0dyEvZsmU1depUWSwWpaWlKT4+XmvXrlWzZs0kSVFRUdq9e7eaN2+u9evX69KlS5o0aZKDs0ZJV7NmTc2aNUt//PGHUlJSdO7cOUVGRiogICDHXD8/P4WFhVnX6LFjxxQREaEKFSpY55QqVUqhoaHat2+fUlNTdfLkSa1YsUK1atXKd07/u9Y3bdqklJQUHTp0KMf+ulOnTjLGaODAgZowYYKOHz+ulJQU+fr62v+CoES53n7TYrEoPDw8x+OioqIUFRVlvX1lLfXv31//+te/dPz4cSUlJWn58uXy9fWVp6enpk6dqvj4eCUnJ2vhwoXy9PQsUK7h4eFKTk5WUFCQvvvuO128eFEnTpzQ+PHjbeYFBATIGKPRo0dr5MiROnjwoNLT09WgQQM7XiEAxRk1DZwRNQ0cgZoGJRk1DYCSinoGzoh6Bo5APYOSjHrGebk7OgEUrd9++00JCQnq2LGjVq5cKUnq0KGDsrOz1aRJE/n4+Cg5OVkuLi5q27at5s2bZ31scHCwlixZorlz5+rDDz/Uvn37HPVtADbmzJmjfv36aebMmdqzZ48qVKig9u3bq379+tqxY4ckqUKFCvr222+1dOlSffLJJ4qPj3dw1ijpWrZsqbZt22rp0qU6fvy4AgMDNWzYMP30009q0KCBUlNTJUne3t6Kjo5W/fr1tXDhQv3666+qWLGiHnroIdWoUUPnz5+Xq6urVq1apc6dO2vJkiWaNm2afHx81KVLFzVs2FCHDh3Kd17+/v5avXq1IiMjtWTJEg0YMEBz5sxRRkZGjjdr48ePV0ZGhqZMmaJSpUopIyOjUF8jFF/52W8WxNixY5Wamqq33npLtWvX1ogRI5SZmanLly/L399fb7zxhlq3bq2nnnpKFotFEyZMKND23dzc9N133ykmJkavvPKKunXrpjfffFPu7u4KDQ21mfvUU0/Jy8tL8+bNU3p6ui5cuFDg7wdA8UZNA2dETQNHoKZBSUZNA6Ckop6BM6KegSNQz6Ako55xboa4tWLlypUmJibGevuzzz4zn332mcnMzDQPPPCAkWSaNm1qjDGmV69eRpKxWCzGGGO6du3q8PwJ4upISEgwM2bMyPP+qKgoY4wxzz//vMNzJZwnvLy8coy1atXKGGPM448/bh174403jDHG9O7dO89tDR482BhjzKhRo24opytr/aWXXrKOeXh4mF9//dWcPn3auLu7G0mmU6dOxhhjDh48mOv3QTh/XG+/abFYTHh4eI7xqKgoExUVZb19ZS3t2rXLur4kmcWLF5vs7GzzzTff2Dx+06ZNxmKxFCjX8PBwY4wx06ZNsxlfuXKlSUtLMxUqVDCSTEBAgDHGmD///NNUrFjR4a8xQRA3N6hpCGcLahrCEUFNQ5TkoKYhCKIkB/UM4WxBPUM4IqhniJIc1DPOG1yC8BYUHR2t5s2bq0yZMpKk9u3ba/Xq1YqNjVWHDh0k/XXExeXLl7Vx40br4w4dOqS1a9c6JGfgWv7880+1atVKVatWzXNOWlparqdqBOyVlpZm/drd3V3ly5fXwYMHlZCQoObNm1vv69u3r2JjY/Xll1/mua2+ffvq7NmzmjFjxg3nlZmZqblz5+a4XblyZbVo0cJmbkREhM33gVtHfvabBfHRRx8pKyvLenvr1q1ydXXVwoULbeZt3bpVt99+u9zc3Ar8HDNnzsxxu1SpUurcubPN+IoVK3Tu3LkCbx9AyUJNA2dDTQNHoKZBSUZNA6Ako56Bs6GegSNQz6Ako55xXjRg3YKio6Pl4eGhNm3aqG7duqpcubKio6O1YcMGmzf3e/bsUUJCgvVxFovFUSkD1/TKK6+oYcOGOnbsmLZu3arQ0FAFBQXZzDlx4oQyMzMdlCGckZeXl/7973/r6NGjSk9P1/nz53Xu3Dn5+/vLz8/POu+OO+7Qb7/9ds1t3XHHHdq3b5+ys7NvOK+TJ08qJSXFZmz//v2SpMDAQJtx9uu3rvzsNwvi6NGjNrcTExMlSceOHcsx7ubmZvN/JD+ys7NznOaZdQ3c2qhp4GyoaeAI1DQoyahpAJRk1DNwNtQzcATqGZRk1DPOiwasW9Avv/yi1NRUdezYUR06dFB8fLwOHDig6Oho3X333fL09FSHDh0UHR1t87gr18oFipvly5erVq1aGjFihE6ePKl//OMf+v3339WtWzfrHNYvCtuMGTP02muvKTIyUgMGDFCXLl3UuXNnnTt3Tq6uJePXK/8vbl3X228aY3J9XF5HReRVmOY17uLiYkfW+cO6Bm4N1DRwNtQ0cARqGpRk1DQASjLqGTgb6hk4AvUMSjLqGedVMvY+KFSZmZn6+eef1aFDB5s38dHR0fLy8tKgQYNUpUoVbdiwwcGZAvl3+vRpzZ49W3369FFQUJDOnz+v1157zdFpwYn169dPERERGjNmjFasWKF169Zp48aNKleunM28uLg4NWzY8JrbiouLU3BwsNzd3W84r2rVqllPX35F3bp1JUmHDx++4e3DeVxrv5mQkJBjLUtSQEBAUacp6a+iolatWjZjrGvg1kZNA2dETYOiRk2Dko6aBkBJRT0DZ0Q9g6JGPYOSjnrGOdGAdYuKjo5Wq1atdO+991rf3J8/f1579uzRq6++ap0DFHeurq7y9fW1GTt79qxOnjypUqVKOSgr3Aqys7NzdIiPGDEixxv0FStWqGnTpurdu3ee21qxYoUqVaqk4cOH33BeHh4eGjJkSI7bZ86c0fbt2294+yj58rPfjIuLU+vWreXh4WGd07NnT9WsWbNIc/1fV///GD58uDIyMvTDDz84KCMAjkZNA2dBTQNHoaZBSUVNA8AZUM/AWVDPwFndxTEAACAASURBVFGoZ1BSUc84txtv40SJFB0drddff101a9a0eRO/YcMGDR06VBaLRSdOnHBghkD++Pj46Pjx4/rss8+0c+dOXbx4UZ07d9bdd9+tl19+2dHpwYmtWrVKTzzxhBITE7Vnzx61adPGenrb//Xuu++qX79+Wr58uRYuXKjt27erfPnyeuihhzR06FDt2rVLH330kZ588klNnTpVd999t6Kjo+Xt7a3OnTvrgw8+0Ndff53vvE6cOKFXX31VgYGB2r9/vwYOHKhmzZrpueeeU1ZWVmG/DCiB8rPfnD9/vvr376/vvvtOkZGRuuOOO/T444/r4MGDDsk5NTVV3bp106JFi7R161Z1795dDz74oCZOnJjj/xyAWwc1DZwFNQ0chZoGJRU1DQBnQD0DZ0E9A0ehnkFJRT3j/Axx60XZsmVNZmamSUxMNK6urtbxxx57zBhjTEREhM18i8ViVq5c6fC8CeLq8PDwMG+//bbZsWOHSUxMNMnJyWbHjh1m6NCh1jlRUVFm9+7dDs+VcK7w8/MzCxYsMGfOnDFJSUnm22+/NXXr1jUWi8WEh4fbzPX39zfTp083x44dM2lpaebo0aMmPDzclC9f3jrHy8vLTJgwwcTFxZn09HRz8uRJExkZaYKCgvKd05W13rx5c7Np0yaTkpJiLBaLeeGFF2zmderUyRhjTN++fR3+OhJFH/nZb0oyL730kjl27JhJTU010dHRpnnz5iYqKspERUVZ5+S1lkJCQowxxrRo0cJmPDQ01BhjTIUKFfKdb3h4uElOTjZBQUHmu+++MxcvXjSnTp0yoaGhxsXFxTovICDAGGPM6NGjHf4aEwRRNEFNQzhLUNMQjgpqGqKkBjUNQRDOENQzhLME9QzhqKCeIUpqUM84d7j8/xcAAKCEi4qKUsWKFdWoUSNHpwIUmvDwcPXr108+Pj6OTgUAAAA3GTUNnBE1DQAAwK2BegbOiHqmYFwdnQAAAAAAAAAAAAAAAAAAlFTujk4AAABcm7+/vzw9PfO8Pzs7m2sso8Tx9fVV6dKlrzknPj6+iLIBAADAzURNA2dETQMAAHBroJ6BM6KeuTlowAIAoJj7/PPPdc899+R5/+HDhxUUFFR0CQGFYNq0aRo8ePA157i4uBRNMgAAALipqGngjKhpAAAAbg3UM3BG1DM3h4sk4+gkAABA3po3by5/f/88709NTdXmzZuLMCPgxtWvX1/VqlW75pwffvihiLIBAADAzURNA2dETQMAAHBroJ6BM6KeuXkMQRAEQRAEQRAEQRAEQRAEQRAEUfzjhRdeMBaLxaSmppqYmBjTsmXLPOeGhISYq6WmpuaY9+9//9ucPHnSpKSkmO+//97Url3b5n5/f3/zySefmMTERJOQkGDmz59vvL29Hf5aEARBlPTo0KGD+frrr82JEyeMMcY8/PDD131Mp06dzPbt201aWpo5cOCACQkJcfj3QRAEQcjcUpcgrFatmpKTkx2dBpyIj4+PTp48WeTPy1pGYWIdw1k4Yi2zjlHYHLVPRsnBfgeF6e9//7seffRRBQYGSpJ+//13vfnmm/ruu+9ynR8SEqJFixbZjKWlpal06dIFel7WMQobNQ2cAesYzoKa5uYbMGCAwsLCNHToUG3dulWjRo3SmjVrFBwcrLNnz+b6mMTERAUHB1tvG2Ns7n/llVf04osvKiQkRBaLRRMmTNCaNWvUoEEDpaenS5IWL16sqlWrqkuXLvLw8FB4eLjmzZunQYMG5Tt39jkobPz+hDOoWbOmdu7cqYULF+qLL7647vzAwEB98803mjNnjgYNGqT7779f8+fP16lTp7R27dp8Py/rGIWNfTKcwY2u41vmEoTVqlXTiRMnHJ0GnFD16tWL9JcJaxk3A+sYzqIo1zLrGDdLUe+TUXKw38HN8MQTTygmJkYuLi4KCQnRP/7xDzVr1kx79uzJMTckJETTpk3L8eHdmTNn8v18rGPcLNQ0cAasYzgLapqbKyYmRtu2bdOIESMkSS4uLjp27JhmzJiht99+O8f8kJAQvf/++9e8dNLJkyf13nvv6b333pMk+fr6Kj4+XoMHD9ayZctUr1497d27V3fddZe2b98uSXrggQe0evVq1ahRQ6dOncqxTU9PT5UqVcp6u2rVqtq3b98Nfe9Abvj9CWdwZR0bY9S7d2999dVXec5966231LNnTzVq1Mg6tmTJEpUrV07du3fP1/OxjnGzsE+GM7iRdXzLnAHrStdj9erV6YBEofDx8dGJEyeKfD2xllGYWMdwFo5Yy6xjFDZH7ZNRcrDfQWG6ss/56quvrOvp9ddf17Bhw9S6detcG7Ckvxqu4uPj7X5e1jEKGzUNnAHrGM6Cmubm8/DwUIsWLTR58mTrmDFG69atU5s2bfJ8XNmyZXX48GG5urrq119/1bhx46zv94KCglS1alWtW7fOOj8pKUlbt25VmzZttGzZMrVp00YJCQnW5itJWrdunS5fvqxWrVrpyy+/zPGcY8eO1RtvvJFjnH0OCgu/P+EM7FnHbdq0sdlnS9KaNWv0/vvv5/mYq5tir2Ado7B07txZn3/+uX755RdVrVr1uo2EktSpUyeFhYXpzjvv1LFjx/Sf//xHERERBXpe9skoTIXx3uKWacC6Ijk5mf98cAqsZTgD1jGcAesYQFFjv4ObwdXVVf3795e3t7e2bNmS57xrfXiXm6v/yOvj4yOJdQznwVqGM2AdAyVHxYoV5e7unqMhPj4+XvXq1cv1Mfv27dPTTz+tXbt2yc/PT2PGjNHmzZt155136sSJE6pSpYp1G1dv88p9VapUyXHW0+zsbF24cME652qTJ09WWFiY9fb/fqDFPgfOgLUMR6lSpUqu+2w/Pz95eXkpLS0tx2PyaoplHaOwuLi4SJJGjx6tTz/99LrzC+tSmlewllFc3HINWAAAAAAA4C8NGjTQunXr5OXlpYsXL6pPnz7au3dvrnOv9+FdbvL6Iy8AAACKRkxMjGJiYqy3N2/erL1792rIkCH617/+ddOeNyMjQxkZGTdt+wCA/MurKRYoLN9//70kadWqVfmaP3ToUFksFo0ZM0aS9Mcff6h9+/Z66aWXrtmAldeBfkBx4eroBAAAAAAAgGMcOHBATZs2VatWrTR79mxFRESofv36uc6NiYnRxx9/rJ07d2rDhg165JFHdPbsWQ0ZMiTP7U+ePFm+vr7WqF69+s36VgAAAJzeuXPnlJWVpcqVK9uMV65cWadPn87XNrKysrRjxw7Vrl1bkqyPu9Y2T58+rdtuu83mfjc3N5UvXz7fzwsAKBynT5/OdZ+dmJiY69mvpL+aYq+cIYgzBaE4yOtSmte6pLL014F+SUlJ1qCREMUNDVgAAAAAANyiMjMzFRcXZ72c4M6dOzVy5Mh8PfbqD+9ywx95AQAACk9mZqa2b9+u+++/3zrm4uKi+++//5qXkf5frq6uatSokU6dOiVJslgsOnXqlM02fXx81KpVK+s2t2zZIn9/fzVv3tw657777pOrq6u2bt1aGN8aACCftmzZYrPPlqQuXbrk+/cAUBxc71KaeeFAPxR3NGABAAAAAABJf30g97+ncr/e3P/98A4AAAA3X1hYmJ577jk9+eSTqlevnmbPni1vb2+Fh4dLkiIiIjRp0iTr/PHjx6tLly4KCgpSs2bN9MknnyggIEDz58+3znn//ff1+uuvq1evXmrYsKE++ugjnTx5Ul9++aWkvy4L9O233+rDDz9Uy5Yt1bZtW82cOVNLly7lvSAAFIJGjRqpSZMmkqSgoCA1adJEt99+uyRp0qRJioiIsM6dM2eOatWqpbffflvBwcEaNmyYBgwYoKlTpzokd6AocaAfiju7GrBeeOEFWSwWpaamKiYmRi1btrzmfD8/P82cOVMnT55UWlqa9u3bp+7duxdom6VKldLMmTN17tw5JScn67PPPstxylsAAAAAKAodOnTQ119/rRMnTsgYo4cffvi6j+nUqZO2b9+utLQ0HThwQCEhIUWQKXBtbdu2VUBAgBo2bKhJkybpnnvu0eLFiyXZ9+EdAAAAbq7IyEiNGTNGb775pmJjY9W0aVN169ZNZ86ckSTVrFlTVatWtc739/fXhx9+qL1792r16tXy9fVV27ZttXfvXuucd955RzNmzNC8efO0bds2lS1bVt26dVN6erp1zqBBg/THH3/ohx9+0OrVq7Vx40Y9//zzRfeNA4AT27Rpk2JjYyVJU6dOVWxsrN58801JUtWqVVWzZk3r3MOHD6tnz57q0qWLdu7cqdGjR+vZZ5/V2rVrHZI7YA97LqUJlBSmIDFgwACTlpZmBg8ebOrXr2/mzp1rLly4YCpVqpTrfA8PD/Pzzz+bVatWmbZt25qAgADTsWNH07hx4wJt84MPPjBHjhwx9957r2nevLnZvHmz2bhxY77z9vHxMcYY4+PjU6DvlyDyCketKdYyUZhRXNexi4uLw18bomSFI9byddexq6vDXxeiZAW/40tWdOvWzUyYMMH07t3bGGPMww8/fM35gYGB5uLFi2bKlCmmXr165u9//7vJzMw0Xbt2ZY0QDokr6+nw4cMmLS3NxMfHm++//9507tzZOicqKsqEh4dbb4eFhVnnnzp1yqxatco0bdrUrudlHROFFcW1piGIggTrmHCWYE0R1wrWB1HYwe9PwhmiOK5jV3c3h78uRMmL/11T+flb6VtvvWV27dplM7Z48WLz7bff2v28V9/n6sZaJgoWhbRPLtgDYmJizIwZM6y3XVxczPHjx82rr76a6/whQ4aYgwcPGnd3d7u36evra9LT003fvn2tc4KDg40xxrRq1SrXbXp6ehofHx9rVKtWLdcXq4yfrwkJm2SenzPV4T9QomRFcXtTdP9zIeb5OVNNcNvc/08QRG5R3NZx5TuCzLOzw0zn5wc7/LUhSlYUpwYsd09P03Xo02bUsnDjdo33PwRxdfAHvJIb+f2jwu7du23GlixZcs0/KuS3pmnarbN5ZtYU0/6xfg5/LYiSE8XtfWDZCv4mJGySeWbWFIe/NkTJiuK2lgkir2jWvYsZ8uF006JX9xz3sY6JkhJuHh7mpWWLTJ9xo41naa8c97OmiGsF68Px0bRbZ9Nn3GhT2tfX4bkURvD788ajbHl/02fcaFP77hYOz+VWjeK2jl3d3Mwzs6aYXmNGcKA8UaCoUqWKMcaYtm3bGmOMGTVqlGnSpIm5/fbbjSQzadIkExERYZ1/5WDVt99+2wQHB5thw4YV+GBVKe+13LxnV/PSskWmwu01HP7aECUnCmOfXKBLEHp4eKhFixZat26ddcwYo3Xr1qlNmza5Puahhx7Sli1bNGvWLJ0+fVq7d+/W2LFj5erqmu9ttmjRQp6enjZz9u3bpyNHjuT5vGPHjlVSUpI1Tpw4keu8y9nZatzlXgW3ay33UqUK8nIAxUr1enUV3K61Kgbc7uhUALtVrXOH6rdvo3ufflxly/s7Oh3ALh5epdT2b311e4N66vjEQEenA6CYaNOmjU09I0lr1qzJs56R8l/TlK9eVQ06tlONBvUKNWegKJnsy2rc5V416NhOru5ujk4HAApdcLtWqtu6pW4LrHn9yUAxFdCkoWo0CFaTrvcpI5VLwwAlhYuLi3qMHKYn3p2g9o/207MfTJFnaS9Hp3VNrm5u8vYvp0qBNRXYpJHK+Pk6OiWn1GPkMLV/tJ+GzJumDo/zd0xIdVrdpQYd2+mekMf0+LsT5O7p6eiUUEI0a9ZM0l+X05QceylNV3c3dRs+RDUaBOulZeFq3OXeG94mkF/uBZlcsWJFubu7Kz4+3mY8Pj5e9erl/sf+WrVq6b777tPixYvVo0cP1a5dWx988IE8PDz05ptv5mubVapUUXp6uhITE3PMqVKlSq7PO3nyZIWFhVlv+/j45PqBRdrFS8rOzJKbh7vK+Pkq6czZ678QQDF0KeFPSVJZ/3IOzgSw3841P6hTyKOq2bCBug57Rp9PnOLolIACS01K1qqwWXp04nh1GfqMdqz+Xn/Gn3F0WgAcrEqVKrnWPH5+fvLy8lJaWs4PsPJb01z68686qYyfXyFnDRSdlKRkXb58Wa6urirj56uL5xMcnRIAFKo77mouSYr75VcHZwLYr26blpKkAzHbHJwJgPxy9/TU3/7zupp17yJJSk9JVWCTRho8dbIWDP+HsrOyiiSPijVryNu/nMr4+amMn6/K+PnKu9z/f+3rozLl/jtextdXpX19bB4fPvKf+u3H9UWS663Cu5yfmvfsKumvhrfer45SlTuC9PnEKUW2LlD87Nu8VZ+8Gqq//ed1NX3gfvlWrKCFL76q1KQkR6eGYm7jxo2SJF9fXyUnJ+e4/6mnnsoxtn79ejVv3rzQc7mcla1Zg4fq8bffVK0WTRUSNkkbP12ur6fMUHZmZqE/H/C/CnQGLLuewNVVZ86c0fPPP69ff/1VkZGRmjhxooYOHXpTnzcjI0PJyck2kZeU//+l4V2ODnoU3HPPPSeLxaLU1FTFxMSoZcuWec7t06ePtm3bpoSEBF28eFE7duzQ448/Xih5XPngzZsGLJRgxhitem+mJKl1v4dViSODUUL98vVqHdoeq1JlSuuhV0Y6Oh0AJVR+a5qUK+8Dy9GAhZLLXL6s1MQrtTk1DfKvbdu2kv46U7oxRg8//PA157dr104bN27UuXPnlJKSor1792rUqFFFkSpuYf7Vqqh89arKzszS4djdjk4HsFvd1ndLkvZv+dnBmQDID+9yfhr64XQ1695FWZmZWvLaBM15boTSU1IU3K61HpscKhfXm/sxoZdPWQ2dP0Njv1muFz/5UM/OmqLHJv1LvV8dpS5DnlK7v/VVsx5dFdy2lW6/s74q1Khu03yVmpSsc8eO66+r+qAwter7kDxKldKx3/fqq3em6XJ2tlr3e1hD5k/nc6Zb3I7VazVvyCilJiWrVoumGvHxXPlXy/2EKEBxlRh/VrOfHa4fF3wkSWr/WH8N/2iOylev6uDM4OwKdAasc+fOKSsrS5UrV7YZr1y5sk6fPp3rY06dOqXMzExdvnzZOrZ3715VrVpVHh4e+drm6dOnVapUKfn5+dmcBetaz1sQKYlJ8qlQniPGYZdJkyZp6NCh2rp1q0aNGqU1a9YoODhYZ8/mPJvahQsXNHHiRP3xxx/KyMjQgw8+qPDwcJ05c+aGT6l45QxYfPCGki7ulx36/aeNuvOe9urx4lBFvDzO0SkBdlkxcYpejlykJl3vU3DbVtq3eaujUwLgQKdPn8615klMTMz17FcF8d8zYHFACUq2S38mytu/HH/sR4F4e3tLkkaPHq1PP/30uvMvXbqkmTNnateuXbp06ZLat2+vuXPn6tKlS/rwww9vdrq4RV05+9Wx3/dy2TaUWKV9fXT7nX9dsWI/Z8ACir0Kt9fQcx+8p0qBNZWalKxFL43VwZ+3S5IWjfqnnpn1npp266yUpGStmPDOTcnBp2IFPT9nqqoF11FWZqYS488oJTHpr/gzUSlJyUpJTNKlPxP/O56YaL0/NfmiLmdn35TcbnWubm5q97e+kqToxcu1feW3OmM5rMffmaA7WjTTyE8XaOGLr+j0gTgHZwpHidv2q2aGDNVzs8NUuVagXvzkQ83/+2id2Lvf0akB+XY5K1vfvD9bh7bv1KOT/qWaDRvo5cgILR0/kbMq4qYpUGt7Zmamtm/frvvvv9865uLiovvvv19btmzJ9TGbNm1S7dq15eLiYh2rW7euTp48qczMzHxtc/v27crIyLCZU7duXQUEBOT5vAWRwgcWuAERERFatGiR9u7dq6FDhyolJUVPP/10rnPXr1+vL7/8Un/88YcOHTqk6dOna9euXWrfvn2e2/f09JSPj49N5OaitQGLDytQ8n0zdZYuZ2ercZd7Fdi0saPTAexy+kCcNn66XJLUZ9xouXt6OjgjAI60ZcsWm3pGkrp06VIo9QxnQoWz4KAS2OP777+XJK1atSpf82NjY7V06VLt2bNHR44c0eLFi7VmzRp16NDhZqaJW9wdLZtJkg5u4/KDKLlqt2wuVzc3xR86rMT4nAeeAig+Aps00sjFH6pSYE1dOHFKM5543tp8JUn7t2zT4n++ocuXL6vtgD7qNuL5Qs+hYs0aGvHxPFULrqOks+f0/t+e1qTu/fT+357WvCGj9Mmrofp84hR9N3Oeoj9Zpu0rv9XeDZt0ZOdvOnv4qC79mUjz1U3U8L6OKlelspLPX1Dsd+skSX9sjNH0Qc/q3NHjqlCjmkZ8PFcNOuX92RWc3+mDhzRt0HM6ue+AfCtV1N8XzVZwu9aOTgsosL3RmxXWP0SHY3ertK+Pnpr2lh56ZaTc3At0riIgXwp8btGwsDA999xzevLJJ1WvXj3Nnj1b3t7eCg8Pl/RXM8qkSZOs82fPnq3y5ctr2rRpqlOnjnr06KFx48Zp1qxZ+d5mUlKSFixYoLCwMN1zzz1q3ry5wsPDtXnzZm3deuNnk7iUyCU7UHAeHh6SpKioKOuYMUbr1q1TmzZt8rWN++67T8HBwdqwYUOec8aOHaukpCRrnDhxItd51g8r/FnHKPniDx3W1i9WSpJ6jR7u4GwA+635YL4Sz5xVpYDbdc9TgxydDoBC5O3trSZNmqhJkyaSpKCgIDVp0kS33367pL/OkhoREWGdP2fOHNWqVUtvv/22goODNWzYMA0YMEBTp0694VyuHFBS2tfnpl8+AriZLv15paahmRBFp2nTpmrbtq3Wr7/20a/5PTgKyM2VM2Ad+mWHgzMB7FendUtJXH4QKO6aPHC/hi6YIW//cjr62x5NH/Ss4g8dzjFv19ofrWe+6vL8U+r4xN8KLYcaDYI1/KO5qlCjms4eOaYZTw7Rqf0HC237uHHtB/WXJG1Z/qWyMzOt42csRzTtsWd0YOsv8vL21lPT39a9/E3zlpZ05qxmDR6m/THbVKpMGT0z813d3ftBR6cFFNifp+M166lh+mnRX2fO7vTE3/T3RbPlX5XLa6JwFfiv85GRkRozZozefPNNxcbGqmnTpurWrZvOnDkjSapZs6aqVv3vtTOPHz+uBx54QC1bttSuXbs0ffp0TZs2TW+99Va+tylJL730klatWqUVK1Zow4YNOn36tB555JEb+d6tUhKTJIlLEKJAKlSoIEk5LjUYHx+vKlXy3ln7+voqOTlZGRkZ+uabbzRixAitW7cuz/mTJ0+Wr6+vNapXr57rPOuHFZwBC05i7QcLlJ6SqsCmjdTo/k6OTgewS/qlFH397nRJUudnQ7i+OOBE7rrrLsXGxio2NlaSNHXqVMXGxurNN9+UJFWtWlU1a9a0zj98+LB69uypLl26aOfOnRo9erSeffbZG74MtfTfA0pcXV1V2qfsDW8PcJRLCRwchaJz7NgxpaWl6ZdfftGsWbO0YMGCa87P78FRwNX8q1ZRhRrVlJ2VJcuOXY5OB7Bb3TZ3S5IOcPlBoNi696lBenLKf+RRqpR++3G9Zj/9dyWfv5Dn/JjPvtI378+WJD38ykjd9VCPG86hTqu7NGzhLPlUKK/je/ZpZsgQXTh+8oa3i8JTvV5d3dGimbIzs7Ql8osc96ckJmne0FHavOxzubq66sGXh+vRif/i7P63sLSLlzR/2Mv65etv5eburoETXlPXYc84Oi2gwC5nZWvlezO0cMQ/lJKUpIAmDfXy8gjO9odCZdfh0bNmzVJgYKC8vLzUunVr/fzzf496uffee/XUU0/ZzI+JiVGbNm1UunRp1a5dW5MnT9bly5fzvU1JSk9P1/Dhw1WhQgWVLVtWffv21f+xd+dxVdTf48df7MgVFAWBVBZXwA3BBciNXFP7mFYufUwDl8zsY6ktmlYuP7QyzK+ZuaWmRtmiZWmouSuYG6gIrgiIAoIoyM6F3x8XbqGAgMC9F87z8ZhHMfOemXNrxDsz531OQkJCZcJ/RMa9ogQsaUEoql9aWhpubm507dqVDz74gICAAHr3Lj25JCcnh7S0tGJLSdQvKxpJApaouB9++IG4uDgKCgoYNmzYY8f37t2b06dPk5WVxZUrVxg/fnyVx5R6J4lD3wYCMOStqegbGlT5OUTt4e3tDcClS5e06joGCP1zH1dCTmFkasLz78+olnMIIWreoUOH0NPTe2Qpuhfy9fXFx8fnkX3c3d0xNTWlVatWxSpkPYn8PCWZaQ8AqRwkdJtUwBI1qWfPnnTp0oUpU6bw1ltvMXp02VUfyjs5SoiHteiiaj8YGx5BTmamhqMRonIsn7LF2qE5yrw8aaUpRKFuw5/jtTXL6T/Fj2auzujp6WksFn0DA16Y9y5DZ6g6CRze/AMb355DTmbWY/fdv/5bDm5SVQMZOX827fpU/iV0xwHPMPGrzzFVKLgScoqv/KbyIDml0scT1aPHy6rqV+f27if1TlKJY/LzlPy86DN+XvQZyrw8uvznWV7/5kvMGzeqyVCFFlHm5RH4wQL2rlF1rxo4dSKjFnwg722ETgo/eJSAl8YTfS4cswYWTPjyM4bOmCbXs6gS0p8CSL8ns2xFxSUnJwNgbW1dbL2NjQ3x8fGl7ldQUMC1a9cICwsjICCAn376idmzZz9xPEUvKwyNjDBRmD3x8UTdcuHCBd54441yjXV0dOSPP/7gwIEDuLm58cUXX7Bu3ToGDBhQ5XEd3LCVtOS7WDva4/Xi81V+fFF7KBQKAGbOnFmu8TV5HQP84r+UvNxc2vXp8UQPsoQQojQZRW3Vpaqv0GFSAUvUpBs3bnDhwgXWrVvHsmXL+Pjjj8scX97JUUI8rFVXaT8odF+bwvaDMefCyU7P0HA0QmiHgVMn0MarG4PemMTbP2zgowO/M3rRPNwG9aOeRc1N9jcxM8Pvy8/wHjmc/Px8ti8O4NdPv6DgoSIIZdm5dAV/7/gdA0NDXlm6SJ08XBHeo0bwhWPb/wAAIABJREFUymcLMTQ2JmzPftZOnSG/L7SQwrIhnQf3B+DIdz8+dvzxH35h7eszyEhNxbFTB976/huaOrep7jCFFvtzxRp+nL+EfKWSbsOHMmHFUkzM5J2k0D0pt+JZOX4Khzf/AKiqSE795isa2jTRcGRC10kCFpCRWlgBq6FUwBLll1vYF7tPnz7qdXp6evTt25fg4OByH0dfXx8TE5MnjycrWz2jRWaMi4pauHAhO3bsKNfYKVOmEBUVxaxZs4iMjGTlypX89NNPvP3226XuY2xsjLm5ebGlPLIzMgj6ah0A/af4SXKhKNXevXsB+P3338s1viavY4DEqGgObVJVdHv+/RkYmT75730hhPi3okklZpK4InSYVMASmlJV9+VClKRFFzcArp6UBCyhu4raD16W9oNCAGBoYkJDWxtAVUUj60E65o0b0XXYYF75bCELDu9i2qav6TtxfLUmqzSwseaNTatw6eFFTmYWG996n6PlSKopyY8fL+HC/kMYmZgwYcVnNHUpf9wDXp/AC3PfQV9fn2Pf/8zmd+ahLHx/IrRL9xH/wcjEhJgLF4kOu1Cufa6EnGT5mAkkRkXT0NaGNzZ9TYd+fao3UKHVQn76lW/+9x7ZGZk49/Bk6oavMLdqrOmwhKgwZV4ev376BRvfep/M1DScOndkxo+bcO7hqenQhA6TBCwgo+hlRQ3OShC1x/jx4xk3bhzOzs6sWrUKhULBhg2qEpybNm3C399fPfb999+nX79+ODk54ezszIwZM3jllVfYsmVLlcTyIEVVzlfRUF5YiOrj5eXFvn37iq0LCgrCy8ur1H1mz55NamqqeomLiyv3+U788huJUdGYN26Ej9/YSsctxL/V9HUMsG/NBu7euk2jpnb0nVQ97Q6FEHWXuqqvpSRgCd31QCpgiUooqoTaoUMHAJycnOjUqRPNmzcHwN/fv1jL16lTpzJ06FBatWpFq1at8PPzY9asWVV2Xy7EvzW0tcGqeTOUeXncOHtO0+EIUSl6enq07t4FgMvBkoAlBEDjZk8BkJmaxjdvvsOHPQfxld8bHPhmC7evXEPfwAAn904Mnj6FGT9u4sO/fmPk/Dl07O+DaX1FlcRg16YV/9u6jqbObUhNSuYr36mEHzhS6ePlK5VsfudDrv59GtP6CiatWoaVQ/My99HT1+eFue8wcOpEAIJWruWX/7e0QtW3RM3RNzTg6dEjADi6tWKJekkxN1n+34lEHg3BxKwery5bTP8pftURZq1Rv5ElLbp0xvOl5xn27ltM/noZg6e/rumwqkzE4WOs8nuDtOS7NHNty/+2rKWJk4OmwxKiUs7/dYiAUa8SGx6BwrIhk1YtY8jbUzFrILkjouIMNR2ANpDZ4uJJzJ07lwULFmBra0toaCiDBg0iMTERAHt7e/L/dbOhUCj46quvaNasGZmZmURGRjJ27Fi2bdtWJbGk37tPo6fs5MWbqFa2trYkJCQUW5eQkECDBg0wNTUlKyvrkX0WL15MQECA+mdzc/NyJ6/k5yn544uv8F3+Cb1fGcPxH7aTmnjnyT6EqPNq+joGyMnM4tdPluO7fAk+r/6XU7/tJik6tvIfQggh/qVoUom0IBS6TF0BSyaUiAro3FnVIufYsWMALFu2DICNGzfi6+uLnZ0d9vb26vH6+vosXrwYJycn8vLyuHbtGu+99x6rV6+u+eBFrdeysIXTzYuXyM6QNkxCNz3l3BqFZUOyHqQTcyFc0+EIoRWsmjcFIOmm6rmQMi+PayfPcO3kGX5ftpKGtjY49/TCpacXrbt3oUETa7qPeI7uI55DmZvHjbDzXDt1lox798lOzyArPZ2sB+lkpaeTnZ5BdtG/Z2SWmMzU9mlPxn2+CFOFgvhrUaybOoOUW/FP/LnycnL45n/v8vo3K2nu6sxra5bz5bjXuJ/w6LNYAyMj/rvkYzoNeIb8/Hx+WbSU4B+3P3EMovq0f6Y3DW1tSEu+S2jQXxXePyvtAeunzWLozGn0fmU0g96YhG1LJ35c8AlZaQ+qIWLtp6enh+VTtjRp4UgTJwdsnByxaeFIkxaOJU4sMlFUTQKmtogNj2DF2MlMWhWAtaM9b25ewzf/e5eoM2GaDk2ICrt78xYrXnmN/8x6kx4vv8Qzfq/Qe9wYrv59mrA9+7mw/zDpKfeq7fyNmtrR1tuTBjbW7F+/mZzMzGo7l6hekoAFZNxXtSCUWbaiMtasWcPnn39e4jYfH59iP8+bN4958+ZVWywZKfLCQminnJwccnJyKr3/hf2HiToThpN7Jwa9MYltH/k/fichqtiTXscAF/YfIuLIcVx6ejNizkzWvPZWFUUnhKjrZFKJqA3SCytg1W8k9zOi/I4ePQqAhYUFaWlpj2z39fUt9vOXX37Jl19+WSOxCVGUgHXt1BkNRyJE5RW1H7x28gz5eUoNRyOEdmhs3wyA5JibJW6/F59AyI87CPlxBwZGRrTwcMO5hycuPb2xaeFIyy6d1X9HPE52RgZZD1SJWVkP0snJzMTJvRMGhoZcCTnFxhmzqzT5JTs9g3Wvz+CNjato4uTA5NXL+erV19X3nAAmCjN8l39C6+5dyMvJYev7H3Nu74Eqi0FUj54vvwRA8LbtlW4Rma9U8tuny0m4ep0Rc9/BbVA/OvTtw7VTZwg/eITwA0dJuf3kyYDaSN/AAJeeXti1bY1NC0dsnByxdrTHuJ5piePz8/NJuXWbhOs3SLweTcL1G9y+fLVmg64ByTfjWPHKZPxWfIajWwdeW7OcbR/5c+aPPZoOTYgKU+bmsn1xAFdPnqH/ZF+aurShrXd32np354W573Dt1FlVMtZfh3hwN+WJzmVcz5QWXTrj/LQnbb27F6sgl69UsmfV+if9OEJDJAELyLgvLQhF7SCtZ0RNiI+Px8bGptg6Gxsb7t+/X2LVoKry2+crmL51HV2HDebwlh+Iv3Kt2s4laj9NXccA2/0DaLXDg7be3ek44BnO7dlfrecTQtQN/yRgyT2N0F1FFbBMzMwwNDEhLztbwxEJIcSTadnVHVAlrgihq9p4dgXgcsjfGo5ECO1h1VyVgJUU+/jK6MrcXK6EnORKyEl2Ll1Bo6Z2uPT0xq5NK0wUZpgqFJjUN8PUrPCfCgWm5vUxNDICVN+NTczMHjnuyV//4MePl6DMy6vaDwc8uJvC6snTeXPzamxbOjHxqwC+nvgm2RkZ1G9syaSvltHMtS1ZD9LZMP09rv59uspjEFWrqUsbWni4oczNI/jHHU98vBO/7OROdCwjPpiFXeuWtPHqRhuvbgyfPZO4yMuEHzxK+IHD3Lx4qQqi1yw9PT3cnu3PwNcnYO1o/8j2vJwc7kTHFiZa3VD9MyqaxBsxdeaeNv3efVZNfJP/LvmYjv368N8l8+ny3LPs+OQLEqOiNR2eEBV2ft9Bzu87SOPmzeg0wIeO/X1o3s6FNp5daePZlRc+mFUsGSst+W65jmvbuiXO3t1p28OTFu6dMDQ2Vm9T5uWRHBtHEycH3IcMlAQsHSYJWED6PVUFLAMjQ0wUZmSnS0lwoZseFFbAqm9pqeFIRG0WHBzM4MGDi63r378/wcHB1XremHPhhO3ZT6cBzzDkrddZ/8asaj2fqN00dR2DalbQ/vWbGTh1IsPenc6loyHSjkQI8cTULQilEqrQYVlpD1Dm5WFgaIiioUWJrU6EEEJXNLCxxsq+GflKJVFnz2k6HCEqxdDEBCf3TgBcDj6p4WiE0B5FLQhLq4BVlrtxtzn2/c+PHWdgZISpwgyT+gpVUlZ9BSZmZpjWV5B+7161/5m8F5/A6snTmbbpa+w7uPLq8iVs9/+cCV8uxcq+GWnJd1n7+tvERVyu1jhE1ehRWP0qbO9+Uu8kVckxr58OZemIsVjZN6Ndn5608+mJU+eONHVuQ1PnNgyY4se9hEQuHjxK+MEjXDlxusKVt0zN69PE0Z4mTqpqU02cHGji5IClnQ03Qs9zZOuPRB45TkFBQZV8poe1f6Y3g6ZNwq51S0CVnBhx5HixZKu7cbfJV0qFyLzsbL6d+QEDpvjxzIRXaPu0J7N+3sLRwB/Zs2o9WQ/SNR2iEBWWHHuT/es3s3/9Zho1e4pO/X3o2P8Z7Du40rp7F1p378KID2Zx/XQo5/bs59y+g6QlJav3r2dhQVuvrrQtrHLVwMa62PHvxt3m0vETXDoWwpUTp8hX5vPxwT+wdmiOfQdXYs5frOmPLKqAJGCh+kshNysbI1MTFA0bSAKW0FnqCljSekZUUIcOHUhPV30BdnJyolOnTty9e5fY2Fj8/f1p2rQp48ePB+Drr79m2rRpfPLJJ3zzzTc888wzjBw5kiFDhlR7nLuWr6K9Ty9cez1Nq24eMrtKqCkUCkB1LYN2X8cA+7/Zgsdzg7Bq3oz+U/z4PUDa4AghnkyGfA8UtUT6vftYWDVG0bChJGAJIXRaUWupmxcvybNGobNauHfEyMSEewmJUsFCiH9pXFQB6+bjK2BVljI3l/R794u1/qtpiVHRrH19BlPWr6CNZ1fe2b4VfQMDkm/GsXryWyTHVjwBTdQ8hWVDOj/bH4AjW7dV+fGTYm5y6NtADn0biFkDC1x6PU27Pj1w7uFJQ5smeI8agfeoEWSlp3Pp2AnCDx4l4vAxMu6rimPo6etjaWdDEycHrB0d1ElWTZwcsLBqXOp5i9qCJcXc5Nj3P/P3jt+rrB2ncw9PBk2bTPN2LgBkpKZycMN3HNm6jZzMzCo5R21UkJ9P0FfrOPXbbv7z7v9o79OL3uPG4D5kILu+WMXJX/+otmQ5Iarb3Zu3OLBhKwc2bMXyKVs69X+Gjv19cOjUnlZd3WnV1Z3nZ88g6mwYsecjcOrckebtXdA3MFAfIyczi2unznDp2Akij4Vw50bMI+cJP3AY9yED8Rg6SBKwdJQkYBVKv3+fhqZNMGtgwd2425oOR4hKSS+sgKWwlMoHomKOHTum/vdly5YBsHHjRnx9fbGzs8Pe/p/Sujdu3GDIkCEsW7aM6dOnc/PmTSZOnMiePdXf0zsp5ibHt/1Cz/+OZOjMaSwf7Sdf2AUAnTurXm4UXcvafB2DKvl7++IAJn0VQK+xozj56x8kXIuqkXMLIWondQvCBtKCUOi29JR7qgQsuacRQui4ll0K2w+eOqvhSISovNaF7QevhEj1KyGK6BsaYPmULaB6VlnbxYZHsHH6+0z86nMMjY2Ji7zM2tdnFKvwIbSb5wvDMDIxIeb8RWLOhVfruTLup3J6525O79yNobExrbq5q6pj9elJAxtrOg14hk4DniFfqSTmwkWMTU2xdrDHyNSk1GPeS0jkTlQMiTeiSYy6QWJUDOkp9+g8eADdX3gOK/tmDHt3OoOmTeLUb7s5FvgTCddvVCr+ll068+ybr6mrP2alp3NkyzYObvquypK76oLkm3Fs+N97tH3ak+ffe4smTg6MWvgBXiOHs31JQJVfhwZGRrRw78T9xDuSMC5qRMqteA5u+o6Dm76joa0NHfv70GnAMzi6daClR2daenRWj7195RqXjp3g0vEQrp8OIy8np8xjn/79T9yHDKTTwL78+tly8vOkwp6ukQSsQhn37tPQpglmDWTGuNBd6gQsqXwgKsjCwoK0tLQSt/n6+j6y7tChQ7i7u1d3WCXau3oDXYcNobmrM27P9ufsrppJmBHa7ejRo0Dp17K2XccAkUeCOf/XITr07c2ID2axyu8NjcUihNB96kqokrQidJxU9RVC1BYtuxYmYJ08o+FIhKi8Np7dALgc/LeGIxFCe1ja2mJgaEhuVjZpVdTKTdtdOXGK1ZOn07p7Fw59GyitxHSIvqEB3qNHAHDku6qvflWWvJwcIo+GEHk0hJ8XfUYzV2fa+fSkXZ8eNHVug2OnDsXG3omOJTEqWrXciCbxejR3omNKrSQaF3mZPavW4T5kID1efgm71i15evQLPD36BS4H/83R737k4uHjFOTnPzZW+47teHbaZNp4qf7ey83K5mjgTxzYsEX93k1U3KVjISwdMZanX36Rga9PxL6DK9O3ruPkr7v444uvniiR07S+AuceXrR/phcuPb0xra8gMzWNBf2GSZUyUaPuxSdwePP3HN78PQ1tmtChXx9sWjkRExbOpeATFa7ufjn4JGnJdzFv3Ig2Xt2IPBJcTZGL6iIJWIWKSl3KQ16hy6QClqgL0lPusX/9ZgZPn8Lg/03h/L6Dj80YF0Jb/frJF7T17k6rru64DxnAmT8koVAIUTnqFoQyoURU0PHjx9VVIsPDw1mwYAF//vlnqeNffPFFFi5ciKOjI1euXOG9995j9+7dVRaP3NMIIWoDiybWWDs0J1+pJOpsmKbDEaJSFA0b0My1LQCXpQKWEGpW9oXtB2Nv1qnK/NdPh3L9dKimwxAV1KFvHxraNCE1KZmwoP0ajeXmxUhuXowkaOVaLO1sadGlM+n37pEYFU3KrfhyJUo9LCczi5CffiXkp19p2dWdHi+/RHufnrTx6kYbr24k34zjWKCqPWFm6qOTdp9q25pB0ybTrk8PAPJycwn56Vf+WruJ1DqSYFndlHl5HP72e87+sYfB01+n2/ChdB02mA79erP36w0c2fIDyry8ch3L3Kox7X160f6ZXrTq7oGhkVGx7fUszGnj1ZUL+w9Xx0cR4rHuJSQ+cavXfKWS0D/30fO/I/EYOkgSsHSQvqYD0BbSskPUBjJbXNQVh7d8z72ERBo1tePp0S9oOhwhKi3ldjx7V28A4LlZ/8O0vkLDEQkhdFX6fdX3QAMjQ0wUZhqORuiSjz/+GA8PD7p06cL+/fv59ddfcXV1LXGsl5cXgYGBrF+/ns6dO7Njxw527NhBu3btqiweuacRQtQGLbuoWk7ERV6WKiFCZ7Xu3gWAW5ev8iA5RcPRCKE9GjdvCqhabAmh7Xq+/BIAIT/uQJmbq+Fo/pFyO57TO3cTeSSYuzdvVSr56mHXTp5h09uz8R/8Ivu/2UzG/VQaN2vKf975H/P2/soL897FpqUTAE2cHHhl6SJm/vQt7fr0QJmXx4lfdrJk6Ei2+38uyVfVIC35Lj98+P/4YswEos+FY6pQ8NzMacz6ZQvOPb1K3c/a0R4fv7G8uWUNHx/4nRc/fBfnHp4YGhmRcP0Gf637luUvT1Anvbj2erqmPpIQ1eb070EAtPfphYmZPOfVNZKAVaioApaZPOQVOqxotrhZwwbo6csfb1F75WZl8+eXawDo99qr1LOQ5Fmhuw5t+o7EqGgsrBoz8I1Jmg5HCKGjcrOyycnMAiRxRVTMnj17uHr1KleuXGHu3Lk8ePAAT0/PEsdOnz6dP//8k6VLlxIZGcmHH37ImTNnmDZtWqnHNzY2xtzcvNhSlvR7UgFLCKH7WnZVJWBdO3lWw5EIUXlFbZik/aB2mjp1KlFRUWRmZhISEkLXrl3Ltd+oUaMoKChg+/btxdYXFBSUuMyaNUs9Jioq6pHt7733XpV+Ll2groAVc1PDkQhLS0sAbt68SUpKCuvWrUOhKHty46RJkzhw4AD379+noKCABrW4inQz17Y4uXdCmZvH8W3bH79DLZFyK54/ln3Fgn7/YdtH/ty6fBUTs3p4jxzOuzu+Y8a2TbyzfStuA/uSn5/PmV17+PT5l9n2kT8pt+I1HX6tF3vhIivGTuL7uQtJTUqmiZMDk74KYMKXS7Gyb4aenh7N27syePrrvPtrIO/v/IGhb7+hblkZHXaB35et5JP/jObTYWPYtXwVMecvcvHQMYAyk7mE0BWxFy5y50YMxvVMaf9ML02HIypIMjQKqROwpAKW0GFFlQ/09fUxsyj7xYYQuu7Ub7u5dfkqZhYW9Js0XtPhCFFpyrw8fvl/SwHoMeZFnmrbWsMRCSF0Vcb9ospBkrgiKk5fX59Ro0ahUCgIDi65vLmXlxf79u0rti4oKAgvr9IfcM6ePZvU1FT1EhdXdqWA9LuFCViSSCiE0GEtPVQJWFdPntFwJEJUXmsvVULPFWk/qHVGjhxJQEAA8+fPx93dnbCwMIKCgrC2ti5zPwcHB5YuXcrhw4+2ZrK1tS22+Pr6kp+fz88//1xs3Lx584qNW7FiRZV+Nl2groAVKxWwNG3dunUAPP/88wwdOpRevXqxZs2aMvcxMzPjzz//xN/fvyZC1KgehdWvwvb8RVpSsoajqXm5Wdmc+GUnn7/wCit9p3Ju7wHylUqaurRB38CA838d4vMXx7H1vY9Iio7VdLh1SkFBASd/3cWSoSM5sGErytw8XHs/zTs7vmPevl95K3A9fSeOw6aFI3m5uUQeDeGnBZ8y/5nn+L+xkzjwzRYSo6KLHfPaqbNkZ2TQoIk1TV3aaOiTCVF1zvyhqoLlMXSghiMRFSUJWIUypM2BqAXy85TqPtYyY1zUdgX5+fwesBKAHi+/iOVTthqOSIjKu3LiFGd370XfwIAX5r6Dnp6epkMSQuggdVt1uacRFeDq6kpaWhrZ2dl8/fXXDB8+nIiIiBLH2trakpCQUGxdQkICtralfw9bvHgxFhYW6qVp06ZlxiMVsIQQus7C2oomTg7k5+cTdTZM0+EIUSlW9s1o9JQdeTk5XD8dqulwxENmzJjB2rVr2bhxIxEREUyZMoWMjAz8/PxK3UdfX5+tW7fy0Ucfcf369Ue2JyQkFFuGDRvGgQMHiIqKKjYuLS2t2LiMjIwq/3zazqq5VMDSBs7OzvTv3x+AU6dOcezYMd58801Gjx6NnZ1dqfstX76cTz75hJCQkJoKVSPqN7Kk87Oq/z5FrdnqsuunzrJpxhz8n32RHxd8wrJRvmx8633ir1zTdGh1WnZ6Br8HfMnSF8YScTQYQyMjGjSxJutBOmd372XzO/P4qNezrH39bYJ/3F5ma0hlbi6Xg1VJ4669e9TURxCi2pz+Yw8ArT27Yt64kYajERUhCViFiioHSQUsoesepMiMcVF3XDoWwuWQkxgaGzP4f1M0HY4QT+S3pSvISk/H0a0DXYcN0XQ4QggdlK6eVCL3NKL8rly5gpubG927d2fVqlVs2rQJFxeXKjt+Tk4OaWlpxZaypKfI5CghhG5r2UVV/Sou8jJZaQ80HI0QldPaU1X96kboeXWba6EdjIyM8PDwKFaVtKCggH379pVZlfTDDz8kMTGRb7755rHnaNKkCUOGDGH9+vWPbHv//fdJSkrizJkzzJo1CwMDg1KPU9FW1LpAT0+Pxs2kApY28PLyIiUlpdi6ffv2kZ+fT/fu3av0XLp4LXd/4T8YGhsTfS6cmPMXNR2O1ki5HU/Ijzu4eTFS06GIf0mMimbd6zNYMXYyqyf/jw97PcuWdz8k9M99ZD1IL/dxitoQuvT0rq5QhagxybE3uRF2Hn0DA9wKE2qFbpAErEL/tCCUh7xCt8mMcVHX/B7wJQDuQwbSzLWthqMRovJSE+8Q9JWqdPrQGW9gojDTcERCCF3zT1Vf+R4oyi83N5dr165x5swZ5syZQ1hYGNOnTy9xbHx8PDY2NsXW2djYEB8fX2XxyP2MEELXtShMwLpWifaDP/zwA3FxcRQUFDBs2LBy7+ft7U1ubi5nz56t8DmFKEkbr24AXJb2g1rHysoKQ0PDClUlffrpp5kwYQKTJk0q1znGjx9PWloav/zyS7H1//d//8fo0aPx8fFh9erVzJkzh08//bTU41S0FbUusGhihZGpCcrcPFJuV913YFFxtra2JCUVr4ajVCq5e/dumRV6K0PXrmV9QwOeHvUCAEe/k+pXQnfcCDvP5eCTKHNzK7V/xJHjADh0bEf9xpZVGZoQGnHmd2lDqIskAauQtCAUtYXMGBd1TVzEZU7t3A3A0BnTNByNEE/m6Hc/knwzDoVlQ1p4dNZ0OEIIHSMtCEVV0NfXx8TEpMRtwcHB9O3bt9i6/v37ExwcXGXnl/sZIYSua9XVHVC1uqmoCxcu8MYbb1RonwYNGvDtt9/y119/Vfh8QpRE38CA1t08ANStfITuql+/Pps3b2bSpEkkJyeXax8/Pz+2bt1KdnZ2sfXLli3j0KFDnD9/ntWrVzNz5kzefPNNjI2NSzxORVtR64LGhe0HU27Hk69Uajia2mnx4sUUFBSUubRtW7OTcHXtWu7Ytw8NbKxJTUomLGi/psMRosakJSUTW1jdzKVH6VUhhdAVoUF/oczLo3k7F5o4OWg6HFFOhpoOQFuoX1ZIC0Kh42TGuKiL/lyxBreBfWndvQvOPb2IPFJ1LwGFqEn5eUqunTxL42ZNse/gSsThY5oOSQihQ4qq+kriiqgIb29vIiMjMTc35+WXX6ZPnz4MHKiaWbdp0ybi4uKYM2cOAMuXL+fQoUPMmDGDP/74g9GjR9OlSxcmT55cZfEU3c8YmZhgXK8eOZmZVXZsIYSobuZWjWni5EB+fj7Xz4RVeP+FCxc+tlXrw77++mu+++47lEolzz//fIXPKcTDmrm2pZ6FORmpqdKiSQslJSWRl5dX7qqkLVu2xMnJiZ07d6rX6eur5uXn5ubStm1brl+/rt7Wo0cPnJ2dGTVq1GNjOXHiBEZGRjg6OnL58uVHtufk5JCTk1Puz6YLrAoTsJJibmo4ktrr888/Z+PGjWWOuX79OvHx8VhZWRVbb2BgQKNGjaq0Qi/o3rXc478jAQjeth1lXp6GoxGiZkUcOkZzV2dcej3NyV93aTocIZ5Ieso9Lh07gWvvp3EfOpA/V6zRdEiiHKQCVqGMVNXLClPz+ujpy38WobvUM8YlAUvUISm34zmy9UcA+k0cr+FohHgyMRcuAmDf3lXDkQghdE16iipxRSaViIpYvXo1ly5d4q+//qJr164MHDiQffv2AWBvb4+dnZ16bHBwMC+//DKTJ08mLCyMF198keeff57w8PAqiycnM4vcLFW1BYWlJBMKIXRLSw83AG5FXiEztWKJVJXx6quv0qJFC+bPn1+u8cbGxpjM0Va6AAAgAElEQVSbmxdbhHhYUfvBqydOU5Cfr+FoxMNyc3M5ffp0saqkenp69O3bt8SqpJGRkbRv3x43Nzf18ttvv3HgwAHc3NyIjY0tNn7ChAmcOnWKc+fOPTYWNzc3lEoliYmJT/7BdETj5qrKR8k3tbsFnS5LSkri0qVLZS65ubkEBwdjaVm8xdgzzzyDvr4+J06c0FD0mtfM1Rmnzh3Jy80l+Mcdmg5HiBp38bCqDWFb7+4YGEodGqH7Tv/+JwDug6UNoa6oVKbR1KlTiYqKIjMzk5CQELp27Vrq2PHjxz9SHjTzoRmspZURnTVrlnpMVFTUI9vfe++9yoRfoqLZ4vr6+phZyMMHobvUFbAaSgKWqFuOff8TAPYd2mFYStscIXRBbFECVgdJwBJCVEz6fUnEFxXXoUMHTE1NsbGxoX///urkKwAfHx98fX2Ljf/pp59wdnbG1NSUDh06sHv37iqPSe5phBC6qmVh+8FrpyvefrCiWrVqxZIlSxg7dizKcrbBmj17NqmpqeolLk4SCMSjihKwpP2g9goICGDSpEmMGzcOZ2dnVq1ahUKhYMOGDYCqiqm/vz8A2dnZhIeHF1vu3btHWloa4eHh5Obmqo9rbm7OSy+9xLp16x45p6enJ9OnT6djx444OTnx8ssvs2zZMrZs2cK9wu9udYGVvVTA0haRkZHs3bsXAA8PD7y9vfnyyy/5/vvvuX37NgBPPfUUERERxd5h2tjY0KlTJ1q1agWo7oc6der0SDKXrurx8ksAhAX9RVpS+dqOClGb3AyPIC35Lqb1FTi5d9J0OEI8sfCDR8hKT6dxs6dwdOuo6XBEOVQ4AWvkyJEEBAQwf/583N3dCQsLIygoCGtr61L3uX//Pra2turFwaF4j8p/b7O1tcXX15f8/Hx+/vnnYuPmzZtXbNyKFSsqGn6p8vOUZKY9AKCezBgXOuyfClgyW1zULSm34km9k4SBkSHNXdtqOhwhKu325WvkZmdj1sCCxoWl7YUQojwyCtuqKxrI90Ch26SqrxBCV6kTsE6eqdbz6Ovr89133/HRRx9x5cqVcu+3ePFiLCws1EvTpk2rMUqhi4zr1cOhU3sALodIApa22rZtG7NmzWLBggWEhobi5ubGoEGD1JWoHq5iWl6jR49GT0+PwMDAR7ZlZ2czevRoDh06RHh4OB988AHLli2r0lbUuqCoApYkYGmHiRMnAvDbb7+xa9cujh49WuyaNDIywtnZGTMzM/W6KVOmEBoaqk40PHLkCKGhofznP/+p2eCrQf1GlnR+th+AuluEEHVNQUEBEUdUVbBcenlrOBohnlxuVjbn9x0CwGOoVMHSBRWuvTdjxgzWrl2r7sE8ZcoUhgwZgp+fH5988kmJ+xQUFJCQkFDqMR/eNmzYMA4cOEBUVFSx9WlpaWUe50ll3E+lnnl9FA0bkBQd+/gdhNBC6SkpgMwWF3XTjbALdOzXB4eO7Yk6+/hS6UJoI2VeHnGRl3Hs1AH7Dq4kx8pDPSFE+RQlrZg1lAklQrepK2DJpBIhhA6p39gSmxaO5Ofnc/10WLWey9zcnK5du9K5c2e+/PJLQJWUpa+vT25uLgMGDODAgQOP7JeTk0NOTk61xiZ0W4subhgaGZF885bci2q5lStXsnLlyhK3+fj4lLnvwxVOi6xdu5a1a9eWuO3s2bN4eXlVLMhayKpwopz8+dAOKYXvQpo2bUpa2qOtf6Ojo9HT0yu2bv78+eVu3atrPF8chqGxMdFhF9QV9oWoiyIOH6fb80Nx7fU0O5dWXTEXITTlzB9/0nXYYDoN7MuOJctQ5uVpOiRRhgpVwDIyMsLDw6NYS4KCggL27dtX5pfv+vXrc+PGDWJiYtixYweurqW31GnSpAlDhgxh/fr1j2x7//33SUpK4syZM8yaNQsDA4NSj2NsbIy5uXmx5XEyClt2mMmMcaHDpAKWqMtizl0AUM/WFEJXxZxXPSRp3t5Fw5EIIXSJugWhJOILHZeeIi0IRfl5e6tmNV+6dImCggKGDRtW5vjhw4ezZ88eEhMTuX//PsePH2fAgAE1Eaqo5Vp2UVW/un35KpmpqdV6rtTUVNq3b4+bm5t6+frrr4mMjMTNzY0TJ05U6/lF7dXGU9Wm64pUvxLiEYqGDahnXp/8/HySb97SdDhCFKNvaID3qBEAHA2U6leibrt0/ATK3DyaODmoW8cKocuunDhN6p0kFA0b4NzDU9PhiMeoUAKWlZUVhoaGj1ShSkhIwNbWtsR9Ll26hJ+fH8OGDWPs2LHo6+tz/PjxUktcjx8/nrS0NH755Zdi6//v//6P0aNH4+Pjw+rVq5kzZw6ffvppqbHOnj2b1NRU9RIXF/fYz1fUssNMWhAKHfbgnrysEHXXjTBJwBK1Q2x4BAD27UtPWhdCiIcV3c8Y1zPF0MREw9EIUXnp92RSiSg/hUIBwMyZM8s1vlevXuzdu5fBgwfj4eHBgQMH2LlzJ25ubtUZpqgDWnbpDMC1k2crfYwOHTrQqVMnAJycnOjUqRPNmzcHwN/fn02bNgGqCbHh4eHFlsTERLKysggPDycjI+MJP42oq9p4dQOk/aAQJWlc+BI/NfEOeVJNUGiZjv18aNDEmtQ7SYQF7dd0OEJoVHZ6BtdPhwLg0utpDUcjxJMryM/n7O69ALgPHaThaMTjVCgBqzJCQkLYvHkzYWFhHD58mBEjRnDnzh1ee+21Esf7+fmxdetWsrOzi61ftmwZhw4d4vz586xevZqZM2fy5ptvYmxsXOJxFi9ejIWFhXopLeHr3zLuq2anKRrKQ16hu4oqYNUzr4+BkZGGoxGiZsWGR6LMzaNBE2ss7UpODBZCFxRVwGrm0hZ9w9IrfgohxL9lPUhHmasqQa2QNoRCh0kFLFERe/eqHkL+/vvv5Rr/9ttv89lnn3Hq1CmuXr3KBx98wJUrV3juueeqM0xRB6gTsE6dqfQxjh07Rmio6mXRsmXLCA0NZcGCBQDY2dlhb2//5IEKUQpzq8bYtW5Jfn4+V0+c0nQ4Qmgdq+aqd0xJMdJ+UGifnv8dCUDwtu3SmkoI4OKRYwC49vLWcCR1z6RJk4iKiiIzM5OQkBC6du1a5vjp06cTGRlJRkYGMTExBAQEYCITSx9x+vc/AWjXpwem9RUajkaUpUIJWElJSeTl5WFjY1NsvY2NDfHx8eU6Rl5eHmfPnqVVq1aPbOvRowfOzs6sW7fuscc5ceIERkZGODo6lrg9JyeHtLS0YsvjpBcmYJnJywqhw7LS0shXKgFJJhR1T152NnGXLgNSBUvotuSYm2SkpmJkaoJdq5aaDkcIoUOkDaGoDdQVsOR+RtQAPT09zM3NuXv3bpnjjI2NMTc3L7YIUaR+I0tsW7UAUM+2rwwLCwv09PSKLb6+vgD4+vri4+NT6r7z58+nc+fOlT63EK09uwAQF3lZ/XexEOIfVs1VFbCSYx/fbUWImtTM1RlHtw7k5eYS/OMOTYcjhFa4eEiVgNWiS2dMzMw0HE3d4u/vz/z583F3dycsLIygoCCsra1LHDtmzBiWLFnC/PnzcXFxYcKECYwaNQp/f/8ajlr7xUVcJv5aFEYmJnTo10fT4YgyVCgBKzc3l9OnT9O3b1/1Oj09Pfr27UtwcHD5TqivT4cOHbh9+/Yj2yZMmMCpU6c4d+7cY4/j5uaGUqkkMTGx/B/gMdQtCC0kAUvoroKCAmnZIeq0aGlDKGqBgoICYi+o2hA27yBtCIUQ5ZchiSuiFlBXwLKUREJR/WbNmkX9+vXZtm1bmeNmz55NamqqeomLk5ev4h8tCqtf3bp0RV1hXwhd08ZT1X7wSvDfGo5ECO3UuDABKylWKmAJ7eLc0wuAC/sPk5Zc9qQCIeqKpOhY7kTHYmhkRBuvsiswiaq1adMmNm7cSEREBFOmTCEjIwM/P78Sx3p7e3Ps2DECAwOJjo5m7969BAYG0q1btxqOWjec+SMIAI8h0oZQm1W4BWFAQACTJk1i3LhxODs7s2rVKhQKBRs2bABUf6j+nZU4b948+vfvj5OTE507d2bLli04ODg8UuXK3Nycl156qcTqV56enkyfPp2OHTvi5OTEyy+/zLJly9iyZQv37t2r6EcolbQgFLWFtOwQdZk6AaujJGAJ3RZzQdWG0L6di4YjEULokqIKWGZyTyN0mFTAEjVlzJgxfPTRR4wcOZI7d+6UOXbx4sVYWFiol6ZNm9ZQlEIXFLUfvHqy8u0HhdC0Np6ql5OXQ6T9oBAlsbIvSsCSJGyhXRrZ2QJw+8o1DUcihHa5eFhVBcul19MajqRuMDIyAuDAgQPqdQUFBezbtw8vL68S9zl+/DgeHh7qNoVOTk4MHjyYXbt2lXqeulyd+uyuPQC07OaORZOSq4oJzatwAta2bduYNWsWCxYsIDQ0FDc3NwYNGqSuRGVvb4+dnZ16vKWlJWvXriUiIoJdu3ZhYWGBt7c3ERERxY47evRo9PT0CAwMfOSc2dnZjB49mkOHDhEeHs4HH3zAsmXLmDx5ckXDL5O8rBC1xT8VsCQBS9Q90edUCVhNXdpgaGys4WiEqDypgCWE9ps6dSpRUVFkZmYSEhKiflhQEkNDQ+bNm8fVq1fJzMwkNDSUgQMHVnlM6SmF9zQNpKqv0F0PpAKWqAGjRo1i3bp1jBw5kr/++uux43NyckhLSyu2CFGkKAHr+qmzGo5EiMqxaeFIAxtrcrOyiToTpulwhNBKjZurkq+TY6QCltAuDe1sALh3O0HDkQihXSIOHwfApZc3enp6Go6m9mvcuDHAI5ObEhISsLW1LXGfwMBAPvzwQ44ePUpOTg7Xr1/n4MGDLF68uNTz1OXq1HfjbnP9dCj6+vq4P9tf0+GIUlQ4AQtg5cqVODo6YmpqiqenJ3///U9ZYh8fH3x9fdU/z5gxQz3Wzs6OoUOHEhoa+sgx165di0KhIDX10TLdZ8+excvLC0tLS8zMzGjXrh1LliwhJyenMuGXSloQitrinwpYkkwo6p67cbdJTUrG0MiIZq7Omg5HiEqLOa+qgGXb0gnjevU0HI0Q4mEjR44kICCA+fPn4+7uTlhYGEFBQVhblzz7aNGiRbz22mu8+eabuLq68vXXX7N9+3bc3NyqNK4MScQXtYBUwBLVbfTo0WzYsIExY8aUObNWiPJQWDbErnVLAK6ffvSZpxC6oI2Xqs3L9TOh5FXxM3chagMTMzPMGzcCpAWh0D4NbVUJWCm34zUciRDa5fqps2Slp2Nh1ZimLm01HY4oQe/evZkzZw5Tp07F3d2d4cOHM2TIEObOnVvqPnW9OvXpwjaE7kOrfmKvqBqVSsCqrYpaEJo1lAQsodukApao64raEDp2kjaEQnelJSVzLz4BfQMDmrnKDaIQ2mbGjBmsXbuWjRs3EhERwZQpU8jIyMDPz6/E8a+88gr+/v7s3r2bqKgovv76a3bt2sXMmTNLPUdlSmpnFFb1VTSQxBWhu4oSCQ0MDTE1r6/haIS2UygUAHTo0AFQtSzo1KkTzZs3B8Df359Nmzapx48ZM4Zvv/2WmTNncuLECWxsbLCxscFCJuOJSmrhoUqmvn3lmvp5jBC6pnVh+8ErISc1HIkQ2qmo+lVa8l2y0zM0HI0QxRUlYN2LT9RwJEJoF2VeHpePq4rIuPby1nA0tV9ycjLAI5NTbWxsiI8vOUF04cKFbN68mfXr13PhwgV27NjBnDlzmD17dqlVy+p6deqwoP3k5ebS1LkNtoUTgYR2kQSsf0m/p0rAklm2QtcVVcCqLwlYoo6KDjsPgIMkYAkdV1QFy769tCEUQpsYGRnh4eHBvn371OsKCgrYt28fXl5eJe5jYmJCVlZWsXWZmZn06NGj1PNUpqS2ugWhTCoROiwvJ4es9HQAFA3lnkaUrXNnVeu3Y8eOAbBs2TJCQ0NZsGABAHZ2dtjb26vHT548GSMjI7766ivi4+PVy/Lly2s+eFErtOrqDsC1k2c0HIkQlaNvaEDLrqrfpZeDJQFLiJJY2TcDIPlm3WlzJHSDWQMLTMxUlfPvJ0gCli6bNGkSUVFRZGZmEhISQteuXcscP336dCIjI8nIyCAmJoaAgABMTExqKFrdoW5D2PtpDUdS++Xm5gLQp08f9To9PT369u1LcHBwifuYmZmRn59fbJ1SqVTvKx6VmZpK5BHVde0xZICGoxElkQSsfymaLW5iZoaBkZGGoxGi8qRlh6jrbhRWwJIELKHrYsMjAGje3kXDkQgh/s3KygpDQ0MSEhKKrU9ISMDW1rbEfYKCgpgxYwatWrVCT0+Pfv36MWLECOzs7Eo9T2VKaqffl0qoonYoSiZUWMo9jSjb0aNHAbCwsEBPT0+9+Pr6AuDr64uPj496vI+PT7FxD48XoqJaFiZgXZUELKGjHDq2x1Sh4MHdFG5duqLpcITQSkUVsJJipP2g0C6WdqpnEKlJydJCVsf5+/szf/583N3dCQsLIygo6JFKQkXGjBnDkiVLmD9/Pi4uLkyYMIFRo0bh7+9fw1Frv4jCRBX79q7qVrKieo0fP55x48bh7OzMqlWrUCgUbNiwAYBNmzYVu0537tzJ66+/zqhRo3B0dKRfv34sXLiQnTt3PpKYJf5x+ndVG8LOgwdIopoWkgSsf8lKe0B+YValWQOZMS5014OUFEBevIm66+bFSJS5eTRoYq0uwSyELiqqgNVcKmAJofOmT5/OlStXiIyMJCcnhy+//JINGzaU+TChMiW1i1q3SQtCoevS76mq+koFLCGENlM0bIBdYduH66dDNRyNEJXTpqj94IlTFBQUaDgaIbSTVfPCClixUgFLaJeGdoXtB28nPGak0HabNm1i48aNREREMGXKFDIyMvDz8ytxrLe3N8eOHSMwMJDo6Gj27t1LYGAg3bp1q+GotV9a8l1iLqiesbv0lDaENWHu3LksWLCA0NBQ3NzcGDRoEImJqgp99vb2xSajLlq0iM8//5xFixZx8eJF1q9fT1BQEK+99pqmwtcJFw8dIzPtAZZ2tjh5uGk6HPEQScD6l4KCAjJTVS81pHKQ0GXq2eLyskLUUblZ2dy6rJq16ShVsIQOu3kxkvz8fBo3e4r6jSw1HY4QolBSUhJ5eXnY2BRP8rWxsSE+Pr7UfYYPH45CocDBwQFnZ2cePHjA9evXqzS2orbq0oJQ6Lqiqr71pQKWEEKLtSh82H37yjXSU+5pOBohKqeNl+plrbQfFKJ06gpYsVIBS2iXosnH9+IlAUtXGRV2ZDpw4IB6XUFBAfv27cPLy6vEfY4fP46Hh4e6TaGTkxODBw9m165dpZ7H2NgYc3PzYktdoW5D2EsSsGrCmjVrcHR0xNTUFE9PT/7++2/1Nh8fn2LVp5VKJQsWLKB169aYmZnh4ODAtGnTuF9Y4V+ULC8nh3N7Vb8zPIYM1HA04mGSgPWQooe8UgFL6LKih37SrkPUZdHqNoQdNByJEJWX9SCdxKhoAJq3kzaEQmiL3NxcTp8+Td++fdXr9PT06Nu3L8HBwWXum52dza1btzA0NOSFF17g119/rdLY1FWDpAKW0HHqexqZVCKE0GJF7QevnTqr4UiEqBzT+gp1y/srIZKAJURprOylApbQTpaFCVgpkoClsxo3bgzAnTt3iq1PSEjA1ta2xH0CAwP58MMPOXr0KDk5OVy/fp2DBw+yePHiUs8ze/ZsUlNT1UtcXN35fXbx0DEA2nh3w8DQUMPRCFE1Tv/+JwCdBjyDobGxhqMR/yYJWA/JuF84Y1xeWIhymjRpElFRUWRmZhISEqLOOC/JxIkTOXz4MHfv3uXu3bvs3bu3zPGVJe06hIAb6gQsqYAldFtsYYlk+w7ShlAIbRIQEMCkSZMYN24czs7OrFq1CoVCwYYNGwBV6Xh/f3/1+G7dujF8+HCcnJzo0aMHf/75J/r6+nz66adVGldRC8J6FuboGxpU6bGFqElFk6NkUokQQpu17NIZkAQsobtadnXHwNCQOzdiSLldciVXIeo6Q2NjGtg0ASApRipgCe0iLQjrpt69ezNnzhymTp2Ku7s7w4cPZ8iQIcydO7fUfRYvXoyFhYV6adq0aQ1GrFlxEZdITUrGVKGgReH3dyF03fVTZ7kXn0A9C3NcepZcLU9ohiRgPaQoAUshLTtEOfn7+zN//nzc3d0JCwsjKCgIa2vrEsf26dOHwMBAfHx88PLyIjY2lj179vDUU09VaUxFLQiNTE0wrmdapccWQldEh50HoKlLG8n+rkMqkhQLMH36dCIjI8nIyCAmJoaAgABMTExqKNryib0QAaCelSyE0A7btm1j1qxZLFiwgNDQUNzc3Bg0aBCJiYkA2NvbY2dnpx5vamrKokWLuHjxItu3bycuLo4ePXpUeUntjNQ08vPzAanqK3SbVMASQmg7swYWPNW2NaB6+C2ELlK3H5TqV0KUqlFTO/T19cl6kC7tZoXWsbRTVUiSJFrdlZycDPDIe0UbGxvi40v+/7pw4UI2b97M+vXruXDhAjt27GDOnDnMnj0bPT29EvfJyckhLS2t2FJXFBQUEHlEVbFe2hCK2qKgoICzu/YC4D50kIajEf8mCVgPkRaEoqI2bdrExo0biYiIYMqUKWRkZODn51fi2LFjx7Jq1SrCwsK4dOkSEydORF9fv1j7modVpi9zTmYmudnZACgs5YWFqJvuxt0mNSkZQyMjmrm01XQ4ooZUJCl2zJgxLFmyhPnz5+Pi4sKECRMYNWpUsYo12iDmfGEFrPZSAUsIbbNy5UocHR0xNTXF09OTv//+W73Nx8cHX19f9c+HDx+mXbt21KtXD2tra8aPH8/t27erPKaC/HwyU1UP0aQNoSiPgwcPkpqaSkJCAtu3b6dNmzZljh8/fjwFBQXFlszMzCqPS10Bq5HczwghtFMLD9Xs+fir13lwN0XD0QhROW08VZOWLgdLApYQpbGybw5I9SuhnRraqqqzSQUs3ZWbmwuoCjgU0dPTo2/fvgQHB5e4j5mZmXryXRGlUqneVzzq4qGjALj2lAQsUXuc/kPVhtC1lzf1LB6fPyBqhiRgPSSjcAa6WUN5WSHKZmRkBMCBAwfU6woKCti3bx9eXuUr9WdmZoaRkRF3794tdUxl+zKrX1jIjHFRh0VLG8I6pyJJsd7e3hw7dozAwECio6PZu3cvgYGBdOvWrcTxlUmIrQq3Ll8lLycHhWVDGjWr2oqJQojaKUPduk2+B4rHW7NmDZ6envTv3x8jIyP27NmDmZlZmfvcv38fW1tb9eLg4FDlcUkFLCGEtpP2g0LXNbRpQhMnB/KVSq6ePK3pcITQWo2bq9p0Jd8s33N5IWqKvqEBFtZWANyLlwQsXTd+/HjGjRuHs7Mzq1atQqFQsGHDBkD1zPvfk4Z37tzJ66+/zqhRo3B0dKRfv34sXLiQnTt3PpKYJVQuB58kLzcXa0d7rByaazocIarE7cvXuHX5KobGxnTs76PpcEQhScB6iLoFocwWF4/RuHFjAO7cuVNsfUJCAra2tuU6xieffMKtW7fYt29fqWMq25c5/W7hCwt58SbqsOhzkoBVV1QmKfb48eN4eHio2xQ6OTkxePBgdu3aVeL4yibEPillbi5xkVcAqYIlhCif9KJJJXJPI8rhu+++4+LFi5w7d45XX30VBwcHPDw8ytynoKCAhIQE9VLUerMklU1g/mdCiVzHQgjt1LKrJGAJ3dbaS3UvHHshgqy0BxqORgjtZWXfDJAKWEL7NLC2Rt/AgLycHKnGWQvMnTuXBQsWEBoaipubG4MGDVLfa9vb22NnZ6ceu2jRIj7//HMWLVrExYsXWb9+PUFBQbz22muaCl/rZWdkqNuGu/Z6WsPRCFF1zvwRBICHtCHUGpKA9ZCih7z1pAWhqGbvvfceo0ePZvjw4WQXtgssSWX7MqffK0rAkhcWou4qqoDl2KmDhiMR1a0ySbGBgYF8+OGHHD16lJycHK5fv87BgwdZvHhxieMrmxBbFWIvFLYh7CAJWEKIx8u4VzippKHc04iKaVCYtFdWhV6A+vXrc+PGDWJiYtixYweurqX//VTpir4pMqFECKG96llYYNemFQDXTp3RcDRCVE4bL1X158sh0n5QiLKoK2DFSgKW0C4N7WwAuBefSEFBgYajEU9qzZo1ODo6YmpqiqenJ3///bd6m4+PD76+vuqflUolCxYsoHXr1piZmeHg4MC0adO4XzghT5Ts4uHjgCRgidrl7B97AFWFZku78hWIEdVLErAeoq6AJbNsxWMkJycDYG1tXWy9jY0N8fHxZe47c+ZM3n//fQYMGMD58+erJT5p2SEExIZHoMzNo4GNNQ1tbTQdjtAyvXv3Zs6cOUydOhV3d3eGDx/OkCFDmDt3bonjK5sQWxViLkQA0LydS42dUwihu/5JxJfvgaL89PT0+OKLLzh69Cjh4eGljrt06RJ+fn4MGzaMsWPHoq+vz/Hjx0tNTK50Rd/C67iehTn6BgYV/0BCCFGNWnh0Ql9fn4TrN3iQLBUnhO7R09OjdfcugCRgCfE4Vs2lApbQTkXPu1Nul/0+SgihEnH4GAAtPNwwUZhpOBohqsa9hESu/q1qJ955cH8NRyNAErAeUZSAZSYVsMRj5ObmAtCnTx/1Oj09Pfr27UtwcHCp+73zzjvMmzePQYMGcfr06WqLT92yQypgiXKYNGkSUVFRZGZmEhISom7JVprp06cTGRlJRkYGMTExBAQEYGJiUkPRll9uVja3LqtatzlKG8JarTJJsQsXLmTz5s2sX7+eCxcusGPHDubMmcPs2bPR09Or9pgroqgCVjNXZ3kJLYR4rKLvgdKCUFTEypUrad++PaNHjy5zXEhICJs3byYsLIzDhw8zYsQI7ty5U2qrg8omMBfdm+vr61PPonxtC4UQoqa07OoOwLWTUv1K6Cbb1i0xb9yI7IwMokOrZ3KoqMHDE3UAACAASURBVF5Tp06t0LO8IqNGjaKgoIDt27cXW79hwwYKCgqKLbt37y42xtLSki1btnD//n1SUlJYt24dCoWiyj6TNtI3MKDRU6q2X8mx5avkKkRNsfxXBSwhxOMlxdwkMSoaAyNDdSVQIWqD079LG0JtIglYD8lQv6yQBCxRPuPHj2fcuHE4OzuzatUqFAoFGzZsAGDTpk34+/urx7777rssXLgQPz8/bty4gY2NDTY2NtVyo1pUAau+pWWVH1vUPv7+/syfPx93d3fCwsIICgp6JJGlyJgxY1iyZAnz58/HxcWFCRMmMGrUqGLXujYpakNoLwlYtVplkmLNzMzIz88vtk6pVKr31SZ3bsSQmfYA43qm2LR00nQ4Qggt908LQknAEuWzYsUKhg4dio+PT7lbBBbJy8vj7NmztGrVqkpjys9TkpEq17IQQju16iIJWEK3tS186Xjt1FmUeXkajkZU1MiRIwkICCj3s7wiDg4OLF26lMOHD5e4fffu3dja2qqXMWPGFNu+detW2rVrR//+/Rk6dCi9evVizZo1Vfa5tFFDOxsMjAzJzc7mfuIdTYcjxP9n787DoyzPvo9/s++TFZIQshJIQEJC2GlVFlFAFPChiNKCoEFQeK1AqyBqWQS1AqIgylJN1VKpbREsyGIpyC6BhC0EwxICZCcb2SfJ+8dkBsdksk5yz4Tzcxz3cTyZuWfmTJ8xzFz3ef1OPdoErLz0DIUrEcJ8JP5QM4bwQRlDKNqPM/v2oy4vxyc0hE5hXZUu554nDVi/oEsNkgVe0UiLFi1iyZIlxMfHExUVxciRI8nM1Ow4CAgIwNfXV3furFmzsLOz45///Cfp6em6Y/78+UavS97LoiliY2P57LPPSExMZObMmRQXFzN9+vQ6zx08eDCHDx9my5YtpKSksHfvXrZs2UL//qa5Y+BaTQNWUC9pwLoXNKUpdseOHcyaNYsnn3ySoKAgHnroIZYuXcqOHTtqNWYprbq6mtTzmjGEARE9FK5GCGHqtKPbHN1kU4lo2Hvvvcf48eMZNmwY165da/LjLS0tiYiIIC0tzei1FeVqU31lnKYQwnQ4qFzwDdM0nV4+eVrhaoRonq4DNWlJPx07qXAlojnmzp3Lxo0bG72WB5rPbF9++SVvvvkmV65cqfOcsrIyMjIydEdezfcKgPDwcEaNGsVzzz3HiRMnOHz4MHPmzGHSpEl669/tjZe/Znx2zo1bVFdXK1yNEPrcfX0AGUEoRFNcOKAZQ9j9/sEmtwlbiOYqLbzDhYOa5sKeQ+9XuBohDVi/oB1zYG1ri62Dg8LVCHOwYcMGgoKCsLe3Z+DAgZw4cUJ339ChQ5k2bZru5+DgYCwsLGodixcvNnpdd2oSsORihaiPjY0NAPv379fdVl1dzb59+xg0aFCdjzly5Ah9+vTRRZsHBwczevRodu7cafB1bG1tcXFx0TvaSsoZTQOWX48wrG1t2+x1hTKa0hS7bNkyVq5cybJly7hw4QKbN29m9+7dBkcoKS31XE0DVk9pwBJC1O9uI758DhQNmzhxIk8//TSFhYW6hF57e3vd/b9sYH799dcZMWIEwcHB9O7dmy+++ILAwEA2bdpk9Nq0zYTyXhZCmJKQ6EgsLS3JvJpCYc5tpcsRosmsbW0J6RMFwKWjJxo4W5gaGxsb+vTpw759+3S3NbSWB/DGG2+QmZnJX/7yF4PnDBkyhIyMDC5evMhHH32Eh4eH7r5BgwaRm5tLXFyc7rZ9+/ZRVVXFgAED6nw+JdcDjcXTvzMAOddvKFyJELW5aUcQpkkClhCNdfVUAqV3inDx9KDzfd2VLkcIo0k6chyALv37KFyJsFa6AFNTXlKCurwca1tbHF1VlJeUKF2SEM2iHUEoCViiPp6engBkZelHaGdkZBAeHl7nY7Zs2YKXlxeHDh3CwsICGxsb1q9fz4oVKwy+zoIFC/jTn/5ktLqb4vaNWxTm3NZ8oO4exrWEs4rUIdrGhg0bWLlyZZ33DR06VO/nyspKlixZwpIlS9qitBa7fvYCAP495YuhEKJ+xZKEKprAzc2NAwcO6N32zDPPEBsbC2gamH+eDOnu7s7GjRvx8fHRXYQbPHgwiYmJRq+t6LZ2U4m8l4UQpqNLP834wWQZPyjMlE9oMLYO9hTl5pGeXHcSkjBdXl5eWFtbk5Gh33BR31rer371K5599lmioqIMPu93333Hv/71L65evUqXLl1Yvnw5u3btYtCgQVRVVeHj46Pb4KZVWVnJ7du38fHxqfM5lVwPNBavmgas7BtNG9MtRFtw8+kIyAhCIZqiUq0m6chxIh8eRo8HBpN67oLSJQlhFMknNE3yQZE9sbazQ11WpnBF9y5JwKqDjG4T7YFut7gkYAkje/DBB1m4cCEvvPAC0dHRjB8/nkcffZRFixYZfMyKFStQqVS6w8/Prw0rhpSapqvASBlDKMzX9Zovgz6hIdg62DdwthDiXqb9PuPoKiMIRcNUKlWthF5t8xXUTvWdO3euLgHY19eXMWPGEB8f3yq1SZqbEMIUhfTtDcAVGT8ozJSqQwcAcm7eUrgS0RacnZ35/PPPiYmJIScnx+B5X331FTt27ODcuXN88803jBkzhv79+zNkyJBmv7bS64HG4BVQM4JQErBMkru7OwA3btwgNzeXTZs24eTkVO/5H3zwARcvXqS4uJiUlBTWrFmDSmV+353tnBxxrKk7Lz2zgbOFED+XeLBmDOEDgxWuRAjjyU5JJT8jC2tbW4LkWqiipAGrDtoxhI7SgCXMWFHu3QtvMsdYGKJdeOlQs/im5e3tTXp63bPjly5dyueff87mzZs5d+4c27ZtY+HChSxYsMDge628vJzCwkK9oy1dS9CMIZQGLGHOCjKzyM/IwsraGr/wbkqXI4QwYT9vwJLPgcKc6VJ9JQFLCGEi7F2cdZ/FL0sDljBTqo5eABRmGW7GEaYrOzsbtVqNt7e33u2G1vK6dOlCcHAwO3bsoKKigoqKCqZMmcLjjz9ORUUFISEhdb7O1atXycrKIjQ0FID09HQ6duyod46VlRUeHh4G1xCVXg80Bu0IwuxUScAyRdox6OPGjWPMmDE88MADbNiwweD5nTp1olOnTsyfP5+ePXvyzDPPMHLkSDZv3txWJRuNm4/mb0BxfgFlxcUKVyOEeUk8dBQA//u64+LlqXA1QhhP8o+aFKxQGUOoKGnAqoOuAUt2jAszpr3wZmVtjb2Ls8LVCFNVUVEBoLebzcLCguHDh3P06NE6H+Po6Kg3hgY0kePax5qiFGnAEu2ENgXLP6KHwpUIIUyZdgShpZUV9i4uClcjRPPpUn0lAUsIYSKCe0diaWlJ5tUUCrKylS5HiGZx7aBpwMqX97BZqqioIC4ujuHDh+tuq28t7+LFi/Ts2ZOoqCjdsX37dvbv309UVBSpqal1vo6fnx+enp6kpaUBcPToUdzd3YmOjtadM2zYMCwtLTl+/LiRf0vT4dlZk4CVLQlYJic8PJwRI0YAcPLkSQ4fPsycOXOYNGkSvr6+dT7m/PnzTJgwgW+//ZYrV66wf/9+XnvtNR577DGsrKwMvpatrS0uLi56h9LcfTUNWLlpdTdACiEMu5OTS8qZ8wB0v19SsET7kXziFCANWEprVgPWCy+8wNWrVykpKeHYsWP069fP4LlTp06lurpa7ygpKdE759NPP611zq5du/TOcXd354svviA/P79RUaItISM7RHtQWVFB6Z0iQMYQioZNnTqVKVOmEB4ezvr163FycuLTTz8FIDY2luXLl+vO3bFjB7NmzeLJJ58kKCiIhx56iKVLl7Jjx45ajVmmIvV8IpVqNW7eHXHz7tjwA4QwUannEgEI6CkNWEIIwyrVakqLaj4Husl3GmG+tKm+koAl6jN4sGbBPCkpierqasaOHVvv+T4+Pnz55ZckJSVRWVnJ6tWr26JM0U6ERPcC4HKcpF8J8+XSQZP0IE2E5mvVqlXExMQ0ai2vrKyM8+fP6x15eXkUFhZy/vx5KioqcHJy4t1332XAgAEEBgYybNgwvvnmG5KTk9m9ezegaeTatWsXGzdupF+/fgwePJi1a9fy97//Xdek1d6oOnhh62BPpVpNbjv9Hc3ZoEGDyM3N1btt3759VFVVMWDAgEY/j6urKwUFBboNxnVZsGABBQUFuuPmTeUT0bQJWHlpGQpXIoR5SvzhCCBjCEX7ok3ACujZA1sHB4WruXc1uQFr4sSJrFq1isWLFxMdHU1CQgK7d++uNb7q5/Lz8/Hx8dEdgYGBtc7ZtWuX3jlPPfWU3v1ffvkl9913HyNGjGhUlGhLlNQkYDnJCEJh5rQ7xp1lx7howKJFi1iyZAnx8fFERUUxcuRIMjM1s+MDAgL0dg0tW7aMlStXsmzZMi5cuMDmzZvZvXs3zz//vFLlN6iitIxbl5IBCIyKULgaIZpPl4DVs7vClQghTJ1uHLV8pxFmTBKwRGNoN+fNmzevUefb2dmRlZXFsmXLSEhIaM3SRDvk3knz3Tjj8jVlCxGiBVxr1vGlAct8bd26lfnz5zd6La8hlZWV9OrVi+3bt3Pp0iU2b95MXFwc999/P+Xl5brzJk+ezMWLF/n+++/ZuXMnhw4dYsaMGUb//UyFV4Bm/GBuWjpVasPNOUIZPj4+ZGfr/x2rrKzk9u3b+Pj4NOo5PD09ef311xu81rhixQpUKpXu8PPza3bdxuJWk4CVl5GpcCVCmKfEg4cBCBvcHysbG4WrEcI4bt+4xe1baVjZWBPcu5fS5dyzrJv6gLlz57Jx40Y+++wzAGbOnMmjjz7K9OnTeeedd+p8THV1NRkZ9Xdhl5WVGTwnPDycUaNG0bdvX+LiNJ17c+bMYefOncyfP9/oOyyK8iUBS7QPd27n4dnZT3aMiwZt2LCBlStX1nnf0KFD9X6urKxkyZIlLFmypC1KM5qUhHP49wgnMLInCbu/V7ocIZol9bwmAcvLvzNObq661E4hhPil4vx8PDt3ksYVYdYkAUs0xt69ewH49ttvG3V+SkoKv//97wGYPn16q9Ul2idVR83oNmlcEeZMVTOCsCBT3sfmbN26daxbt67O+365lvdL06ZN0/u5tLSUkSNHNviaubm5TJ48ufFFmjlPf02TTU6q8mlH95IVK1bw6quv1ntOeHh4i1/HxcWF//znP1y4cIE//elP9Z5bXl6u14xoCtxrmsxkBKEQzXMz8RL5mVm4duxAl75RXDr6o9IlCWEUySfi6D9uDKH9o0k60n7HRJuyJiVg2djY0KdPH/bt26e7rbq6mn379jFo0CCDj3N2dubatWtcv36dbdu20aNH7bE5Q4YMISMjg4sXL/LRRx/h4eGhu08bJaptvoKGo0RbMpO5WDeCUBZ5hXmTHeNC3JWScBaAoF49Fa5EiOYrLbxD5tUUQFKwhBD1036nkVRfYc7uyPcZYUJass4k2g/XjprkoPyMLIUrEaL5VNoRhNnSgCVEfbz8NQlY2ddvKFzJvWXlypWEh4fXe1y5coX09HS8vLz0HmtlZYWHhwfp6fU3JTk7O/Pdd99RWFjI+PHjUavVrfkrtQpdApaMIBSiWaqrq7n4w1EAuj/wK4WrEcJ4kk+cAqBLvz4KV3LvalIDlpeXF9bW1rWSqjIyMgxGeiYlJTF9+nTGjh3Lb3/7WywtLTly5IheROd3333HlClTGD58OK+88goPPvggu3btwtJSU56Pj48uPleroSjRlsxkLpYRhKKdkB3jQtx1LeEcAH7du0mkrDBr2jGEAT1rN7QLIYSWNiHP0U1SfYX50n6fcXBxxsq6yQHeQhhVS9aZRPtxd3SbNGAJ82RpZYWzp2bjsyRgCVE/ScBSRnZ2NklJSfUeFRUVHD16FHd3d73HDhs2DEtLS44fN5z44eLiwp49eygvL+fxxx+nrKystX+lVuFe04CVKw1YQjTbhYNHAOghDViiHbl8QhNo1LlHGHZOjgpXc29qUgNWcxw7dozPP/+chIQEDh48yBNPPEFWVhbPP/+87pyvvvqKHTt2cO7cOb755hvGjBlD//79GTJkSLNftyUzmYvyNA1YMoJQmDtJwBLirts3blGYcxtrW1s69whTuhwhmi21pgHLP0IasIQQhhXpErDkc6AwX6WFhVRVVgLgKBukhMJass4k2gcHlQobezsA8qVxRZgpZ08PLC0tqVSruZObp3Q5Qpg0r4CaBKxUScAyRRcvXtSNou7Tpw+DBw9m7dq1/P3vfyctLQ2ATp06kZiYSL9+/YC7zVdOTk48++yzqFQqvL298fb21gVCmAMLCwtcvTsCkJcuDVhCNNdPx35EXV6OV0BnOgQFKF2OEEaRl5FJ9vUbWFlbExIdpXQ596QmfaLIzs5GrVbj7e2td7u3t3eDkZ5aarWa06dPExoaavCcq1evkpWVpTsnPT2djh076p3TUJRoeXk5hYWFekdjFedrRxBKA5Ywb7oELA+58CYE3B1DGBgpYwiF+bp+VhKwhBANkxGEoj2orq6+20zoLt9phLJass4k2gfXjpoxR0W5eVRWVChcjRDNo/LSjB+8k5NLdVWVwtUIYdq0IwglAct0PffccwBs376dnTt3cujQIWbMmKG738bGhvDwcBwdNQkg0dHRDBw4kF69enH58mXS09N1h7+/vyK/Q3M4e3pgbWNDVWUlBVnSFC5Ec5UVF3P55GlAUrBE+5Jck4IV2l/GECqhSQ1YFRUVxMXFMXz4cN1tFhYWDB8+nKNHjzbuBS0tiYiI0HWg18XPzw9PT0/dOdoo0ejoaN05jYkSbS4ZQSjaC0nAEkJfypnzAARFRihciRDNdyspGXVFBc4e7rh3qnsUsxBCFOVLqq9oH4qkmVAIYSJUHTQNWPlyoVOYMW0jYb6M0RSiXo6uKhxULgDk3JAGLFOVm5sLaK4purm58eyzz1JUVKS7PyUlBQsLCw4cOADAgQMHsLCwqPNISUlR5HdoDu34wfzMLF1isBCieS4cOAxA9wcGK1yJEMaT/OMpALr0j27gTNEampypuWrVKmJiYpgyZQrh4eGsX78eJycnPv30UwBiY2NZvny57vzXX3+dESNGEBwcTO/evfniiy8IDAxk06ZNADg5OfHuu+8yYMAAAgMDGTZsGN988w3Jycns3r0b0ESJ7tq1i40bN9KvX786o0SNSbvA66BywcLCwujPL0RbKaqJEndyl4sVQgBcSzgHSAKWMG/q8nJuJf0EQEDEfQpXI4QwVbrPgdK0IsycblOJJGAJA5ycnACIiNBssggODiYyMlKXYrB8+XJiY2P1HhMZGUlkZCTOzs506NCByMhIunfvbpx63Fx55IXnsDCjMTZKCeh1H9PWvG02mwpcvTsAmoudQpgrVQfN+1gSU4Son2dN+lV+RhYVpWUKVyOEPjdfzWenvDQZPyhESyUePAJASHSUrvFWCHOnTcDyC+8m72sFNHk1aOvWrcyfP58lS5YQHx9PVFQUI0eOJDMzE4CAgAB8fX1157u7u7Nx40YSExPZuXMnKpWKwYMHk5iYCEBlZSW9evVi+/btXLp0ic2bNxMXF8f9999PeXm57nkmT57MxYsX+f777+uMEjUmbQKWpZUV9i7OrfIaQrSFuxfe5GKFEAA3zidSqVbj5t0RN++ODT9ACBOVek7zOUrGEAohDNGOVZemFWHudGPVpZlQGNC7d28ADh/W7FxevXo18fHxLFmyBABfX18CAgL0HhMfH098fDx9+/Zl8uTJxMfHs3PnzhbXYmllxey/fsLDs55l2PTftfj52ruHZ06n57AHGfLMZKVLaRRtAlZBpjSuCPOl6qAZQViQlaNwJUKYNq8ATQNWduoNhSsRojY3H826dm66NGAJ0VI5N26S9tNlrGysJQVLtBuF2TlkXk3B0tKSkD5RSpdzz7FuzoPWrVvHunXr6rxv6NChej/PnTuXuXPnGnyu0tJSRo4c2eBr5ubmMnly2yzIVFZUUFZcjJ2jI46urpQUFLbJ6wphbLpxHZKAJQQA5SWl3LqUjH+PcAIie5K3579KlyREs6SeuwD8H/4RxklqAPDs7Idvty6c3/8D1dXVRnteIYQytJ8DZQShMHeSgCUacujQIQBUKhWFhbXXb6ZNm1brttZKO6+qrOT7TX/lqbde55EXn+OnEye5XjMGXeizsLQkuHckAN3vH8S/Fa6nMVw7SgKWMH+6RkJJwBKiXp7+fgDkpMr4QWF63H1qErCkAUsIozj7/QF8u3YhYvgQTn27W+lyhDCK5BNxdAwOJLRfH87v/0Hpcu4pkodugK5xxU0uWAjzpU3AclSpsLS2UrgaIUxDSs0YwiAZQyjM2PWzFwDo3D0cS6uW/313ULkw54sNTFvzDpPeel3+zRCiHZDUINFeyHtZmJuT23dyaucerKyt+e07i7F3dlK6JJPUKSxU97+NZ2c/OgQFNPAI5bl2bP0ErK+++oqbN29SXV3N2LFj6z13/Pjx7Nmzh8zMTPLz8zly5AgPP/xwq9Um2geV7n0sjYRC1MerZgRh9nVJwBKmx83XG5ARhEIYy7nvDwAQ/quB2NjbKVyNEMaR/OMpAEIH9FG4knuPNGAZUJynGUMoO8aFOSsuKKSqqgqQ97IQWikJZwEIlAYsYcYyr12n9E4Rdo4OdAwJavHzjZw9AxdPDwD6PjaKae+/I182hTBz2hGE1ra22Dk6KlyNEM2nTcBylgQsYUb+ufRdcm7cwrOzH/+36A9Kl2OSQvr01vs5/NeDFKqk8VRtkIB17tw5XnzxxUad+8ADD7B3715Gjx5Nnz592L9/Pzt27CAqSkZMCMNUXtoELBlBKER9vHQJWNKAJUyPe00DVq40YAlhFDcvXiLnxi1sHewJGzxQ6XKEMIrLNQ1YnbqFSqp8G5MGLAOKC2oasGSXrTBj1VVVlORr3svO7u4KVyOEaUhJ0IwA6dw9DCsbG4WrEaJ5qquqSD2fCEBAzx4tei6/8G4MnjgegL2ffEp5SSk9HvwVz2/4AAeVS4trFUIoo7yklIqyMgAcJdVXmDFJwBLmqPROEV+88gaVajXRjz5Cn8dGKV2SyQnpo2kSyk1LB6D7r03/QodrB00DVkFW6zVgLV26lG3btjXq3Jdffpk///nPnDx5kuTkZF577TV++uknHnvsMYOPsbW1xcXFRe8Q9xZdApaMIBSiXp4BNQlY0oAlTJCbj7YBK13hSoRoP85+/z8AIh56UNlChDCSO7dzSfvpMgBd+vZu4GxhTNKAZUCxdgShqyzyCvN2d5ymvJeFAMi5cZPCnNtY29rSuUeY0uUI0Wy6BqyI5jdgWVhY8MRr87G0suL0zj18t3YDn8x4ieKCAoJ79+LFz9aj6uBlrJKFEG1MPgeK9kCbgOUou/WEmbl+5jy7P9oEwBOvzcOzZpSR0OhS04C156PNmp/7RWPrYK9kSfWysLTExUuTGJvfiiMIW8LCwgIXFxdu375t8JwFCxZQUFCgO27evNmGFQqlWVpZ4eyh2aCZ34qNhEKYO1sHB1RengBkp8rfSWFarO3sdCn2eemZClcjRPuhHUPY48FfYWVtrXA1QhiHNgUrtL+MIWxL0oBlgPZihYxtE+buzu1cAIkXFOJnUs6cAyCwl4whFObr+tkLQMsSsPqOHU1QVASlRUVsX7kWgGvxZ1j3zAvkZ2bh27ULs//6CV4BcsFQCHOk21TiJp8DhWH/+9//KCgoICMjg3//+99069atwcdMmDCBxMRESkpKOHPmDKNGtV66jyRgCXP2382fk/zjKeydnPjtu4tlIb+Gd0gQTu5ulJeUEvftd9y+mYa1rS1d+pnuorCLpweWVlZUqtW6dRZTM3/+fJydndm6davBc1asWIFKpdIdfn5+bVihUJqzpweWlpZUqtUU3c5TuhwhTJZnzfjBotw8SgvvKFyNEPrcvDWJnGXFxZTUTPIRQrTctYRzFGTn4KhS0aVftNLlmLWYmBiuXr1KSUkJx44do1+/fvWe7+rqytq1a7l16xalpaUkJSW16jrTveSn43EA8p5uY9KAZYCMIBTtRZFceBOilpSEmgasSGnAEuYrtaYBy6drCDb2dk1+vIPKhTEvvwjA3vV/oSDz7g7o9J8us3bK82SlpOLZuROz//oJfuENX5AX4l7zwgsvNGlB4aWXXuLixYsUFxdz/fp1Vq1ahZ1d0//7bSzdphL5TiPqsWHDBgYOHMiIESOwsbFhz549ODo6Gjx/0KBBbNmyhc2bN9O7d2+2bdvGtm3buO+++1qlPm0ClnyfEeaouqqKLQsWU5xfQEDPHoycM0PpkkxCSB/N+IOUhHNUqtUk/nAEgO73D1KyrHppU2ELc25TXVWlcDW1PfXUU7z55ptMnDiRrHqSjcrLyyksLNQ7xL3D9efv4+pqhasRwnR51TRgSfqVMEXuvj4A5KZlKFyJEO1LdVUV5/57EICIh4YoW4yZW758OYsXLyY6OpqEhAR2795Nh5px7r9kY2PD3r17CQoKYsKECYSFhRETEyNJvUZy+eRpqqqq8OkSrEtPFK1PGrAMKM7TNGA5SQKWMHNFuTUXLNzlwpsQWtdqGrCCpAFLmLG8jEwKsrKxsrbGL6zpzVEjZ8/A2cOd9OQrHPzyq1r3376Zxtqpz3PjQhIunh688OlHMitciJ+ZOHEiq1atavSCwlNPPcXbb7/N4sWL6d69O88++yxPPvkky5cvb7Uai/NrvtO4yXcaYdjf/vY3Lly4wJkzZ3jmmWcIDAykTx/DKTQvvfQS3333He+99x4XL17kjTfe4NSpU8yePbtV6tN+n7FzdGhWw7EQSsvLyOSrNzR/64dN/x1dB9bfrHsvCOmrGT94Je40ABcPHQMg/Nem24DlWpM2kZ9hemPbnnzySTZt2sTEiRP5/vvvlS5HmDBVB81ItQITHaMphKnQpoDnpN5QuBIhnyyFQgAAIABJREFUanPz9QYgTxqwhDA67RjCnsMewMJSWiiaKzY2ls8++4zExERmzpxJcXEx06dPr/Pc6dOn4+Hhwbhx4zhy5AgpKSkcPHiQM2fOtHHV7VNJQQFpScmApGC1JfnrYYCMIBTthSRgCVHbjfOJVKrVuPl46xbShTBHqecSAfCPaNoYQr/wbgyeOB6Afy1fSZW6ss7z7uTksv7ZFzWjc5ydiPl4NT2HPdCyooVoJ+bOncvGjRsbvaAwePBgDh8+zJYtW0hJSWHv3r1s2bKF/v37t1qN2sYVR1dpxBeN41rzXrl9+7bBcwYNGsS+ffv0btu9ezeDBtXdOGFra4uLi4ve0RRlRcWoKyoAcJL3sjBT5/57gCNb/w3A08vfwMn93v5+HtJH04B1OS4egOQTJ1GXl+PZuRMdgwOVLM0gbQJWQZZpNa5MmjSJTz/9lKeeeoqdO3cqXY4wcaqajQIF2ab1PhbC1Hj6axqwJAFLmCI3n5oGrHRpwBLC2JJPxFFSUIjKy5PAXrJ5v6lsbGwA2L9/v+626upq9u3bZ3DN6PHHH+fo0aOsW7eO9PR0zp49y4IFC7CspwGupetM95rkHzVjCEP7G95sKYxLGrAM0O4Wl3EdwtxpL7w5e9zbC7xC/Fx5SSlply4DEBgZ0aLncvHy5HfvLeP+yRONUZoQTXL9nGYMYUATGrAsLCx44rX5WFpZcXrnHi7/eKre80vvFLFx5suc/f4ANnZ2TF21nP7jxrSobiHMnY2NDX369NFrQmloQeHIkSP06dNHN6YwODiY0aNH13uxtKULCkX5NY349/iFftE4FhYWvP/++xw6dIjz588bPM/Hx4eMDP3F/oyMDHx8fOo8f8GCBRQUFOiO5sTI3031lfeyMF/b/7yG9OQrqDp4MWnpIqXLUYxH5064eXdEXVHB9bOavzXlJaVcqWnGMtUULO3GndZuwIqIiCAyMhLQfFaIjIzE398f0IzyiI2N1Z371FNP8de//pV58+Zx/PhxvL298fb2RqWSzaSibqqONY2EkoAlRL28tA1Y1yUBS5ge95oGrFxpwBLC6CrVas4fOARAxEMPKlyN+fH01KSt/nIken1rRiEhIUyYMAErKytGjx7N0qVLmTdvHosWGf7ObIx1pntJ8gnN9Z9QScBqM9KAZUBxvjYBSxqwhHm7m4Al72Uhfi7lTMvHELp4ejBr81qiHhnOuFdfps9jo4xVnhCNcv1sTQNWz8Y3YPUdO5qgqAhKi4rYvnJtox6jLi/nr/Ne4/g/t2NpZcWTS19j6LTJzapZiPbAy8sLa2vrJjWhbNmyhTfeeINDhw5RXl7OlStX+N///seKFSsMvk5LFxRkrLpoinXr1tGzZ08mTZpk1OddsWIFKpVKd/j5+TX5OXTfaWSsujBjFaVlfPHKG1SUldHjwV/x66cnKF2SIrrUpF+lnkukorRMd3viD0cBCP/1QEXqaohrh7YZQXj48GHi4zXNaKtXryY+Pp4lS5YA4OvrS0BAgO7cGTNmYGNjw0cffUR6erruWLNmTavWKMyXyktzUSzfxJLchDA1nv6az6s5koAlTJCMIBSidWnHEEYMlwastmBpaUlmZiYzZszg1KlTbN26lbfeeouZM2cafIwx1pnuJVfiTlNVWUmHoABUHWUiUFuQBiwDZAShaC/u5OYC4Ci7xYXQcy3hLECzo2SdPd2ZuXkt3iFBlJeUAvCbN1/BvwmNMEK0VOr5iwB4BXRu1GcWB5ULY15+EYC96/9CQWbjLyBVVVay9U8r+O/mvwIwZu5sxsyd3Yyqhbg3PfjggyxcuJAXXniB6Ohoxo8fz6OPPlrvjq6WLijoRhBKI75owIcffsiYMWMYOnRog41+6enpeHt7693m7e1Nenp6neeXl5dTWFiodzSVLgFLxqoLM5d26TLfrtI0wI+ZOxvfbl0UrqjthfTpDaBLvNK6eEjTgNWlb29sHRzavK6G3B1B2LoNWCqVCgsLC71j2rRpAEybNo2hQ4fqzh06dGitc39+vhC/pE3AKpQGLCEMsrKx0TW4ZKemKlyNELW5+2o2feWm1f39SwjRMklHjlNeUopnZz86hXVVuhyzkpOTA0CHDvpNPvWtGaWlpXHp0iWqqqp0tyUmJuLr66sbafhLxlhnupeU3iniRmISAKH9JQWrLUgDlgElNSMIHVycsbS2UrgaIZqvKFcSsISoS0q8JgGrc48wrAx8kDPE2cOdWZvW4tMlmLz0DFZO+B3n9/+AjZ0d095/G5eaXaVCtLaSggKyrl0HwP++7g2eP3L2DJw93ElPvsLBL79q1mv+5/31bP/zBwAMnTaZScsWYWkln5XEvSU7Oxu1Wt2kJpSlS5fy+eefs3nzZs6dO8e2bdtYuHAhCxYswMLCos7HtHRBQTeCUJpWRD3ee+89xo8fz7Bhw7h27VqD5x89epThw4fr3TZixAiOHj3aShX+PAFL3svC/B3629ec/98hbOzs+O27S7Gxt1O6pDYVUpOAdSXutN7tmVdTyLlxC2tbW0L791GitHppRxDmN2EDgxCmRpfkJg1YQhjk4eeLpaUlZcXF3MnJVbocIWpx9e4ISAKWEK2lvKSUi4ePARDx0BBlizEzFRUVAAwZMkR3m4WFBcOHDze4ZnT48GFCQ0P11ka7devGrVu3dM8nWu6ybgyh6X3Xbo+kAcuA4oJCXbelpGAJc1aUJ7vFhahLzo2bFObcxtrWFr/u3Rr9OCd3N2Zu+hCf0BDyMjL5aPpssq/f4MsFfyL98lVcvTvwzPsrmtzUJURzpZ5PBMA/ov70Nb/wbgyeOB6Afy1fSZW6stmveeCvW9jy2lIq1Wr6jX2UZ1avwNru3rp4KO5tFRUVxMXF6TWhNLSg4OjoqLebC6CyslL32NZQrE31dZPvM8KwiRMn8vTTT1NYWIi3tzfe3t7Y29vr7o+NjWX58uW6n9esWcPIkSOZO3cuYWFhvPnmm/Tt25e1axs31rY5dAlY0oAl2omv3niL/MwsfLoE8/gfXlK6nDaj6tgBr4DOVFVWci3+bK37tSlYpjiGUJuAlZ8pjSvCfLl00GwWK5D3sRAGefl3BiD7+g2FKxGiNkdXFXaOmqTQvIxMhasRov2SMYQtM3XqVKZMmUJ4eDjr16/HycmJTz/9FKi9xrR+/Xo8PDxYs2YNXbt2ZfTo0SxcuJB169YpVX67lPxjHIBJbnZqj6QBy4DqqipKC+8A4KiSCxbCfGkvVtg5OtxzO2uFaEjKGU0KVlBkRKPO1zZf+XbtQn5GFuunv0hOqmZBpqyomE//3x8pLiggKDKCCa//sdXqFuLnrp+9AEBAPeMvLSwseOK1+VhaWXF65x4u/3iqxa97cvtOPvv9AipKy7hv6P3M3LCGjsGBLX5eIczFqlWriImJafSCwo4dO5g1axZPPvkkQUFBPPTQQyxdupQdO3bUaswylqI8TaqvJKGK+ri5uXHgwAHS09N1x5NPPqm7PyAgAF9fX93PR48e5emnn2bGjBkkJCQwYcIExo0bx/nz51utRl0ClryXRTtRlJvHlteWUlVVxeCJ4++Zhf2Q6EgAbiUlU3qnqNb9iT9oG7AGtWldDbG2s9P9/ZEELGGuLK2tcPZwB6AgWxqwhDDE018z9l0asIQp0o4fLMjOoVKSYYRoNRcOHqayQo1v1y54BforXY7ZWbRoEUuWLCE+Pp6oqChGjhxJZqamafSXa0w3btzgkUceoV+/fpw5c4YPPviANWvW8PbbbytVfrt09dQZKtVqPDt3wr2Tj9LltHvSgFWP4ny5YCHMX1lRMeqaD+NOrvJeFuLnUhI0FwoDI3s2eK6TmyszN35Ap26h5Gdm8dGzL9ZajMm+foMv/vAGVZWV9B8/hl8/PaFV6haGxcTEcPXqVUpKSjh27Bj9+vWr93xXV1fWrl3LrVu3KC0tJSkpiVGjRrVRtcZx/VxNA1Y9CVh9x44mKCqC0qIitq80XkLJhQOH+OT5lygpKCQ4OpI//PtLnlz6mnyIF/eErVu3Mn/+/EYvKCxbtoyVK1eybNkyLly4wObNm9m9ezfPP/98q9WoTUK1c3TE2ta21V5HmDeVSoWFhYXeERsbq7t/6NChTJs2Te8xX3/9NeHh4djb2xMREcGuXbtatUZJwBLt0U/HfuR/n30JwMTFC3GrGSfTnt0dPxhf5/2Xf4xDXV6OZ+dOJtXYr6pJDSovKdVt1hTC3Lh4emBpaUmlWk3R7TylyxFG8MILLzRp/UPrySefpLq6mn//+9+626ytrXn77bc5c+YMd+7c4ebNm8TGxup9nwG4evUq1dXVescrr7xi1N9LaV4BmgSsnBs3Fa5EiNrcfL0BGT8oRGsrKSgk+cRJQFKwmmPDhg0EBQVhb2/PwIEDOXHihO6+utaYjh07xqBBg3BwcCA0NJQVK1a02mbVe1VZcbFukoqkYLU+acCqR5FuZIc0rQjzprtg4SEXLIT4uZQEzdiLoAYasBxdVTy/8QM6hXWlICub9c/OJjsltc5zk44c59tVmnjUx//wknyYaWPLly9n8eLFREdHk5CQwO7du+nQoUOd59rY2LB3716CgoKYMGECYWFhxMTEcPOmeS2y3bz4E5UValw8PXQ74X7OQeXCmJdfBGDPR5spMPKu/aunEnj/6Wc5s+9/WFpZ0X/cGF79divjF8zFxdPDqK8lhKlZt25doxcUKisrWbJkCV27dsXR0ZHAwEBmz55Nfn5+q9VXWniHSrUakO80wrxJApZor777cAPXz13A0VXFUyvexMKyfS/T3W3AOl3n/eUlpVw+qbkv/H7TScFyrRk/WJAlqUHCfKm8NO/jwuwcqqurFa5GtNTEiRNZtWpVo9c/tAIDA3nvvfc4ePCg3u2Ojo5ER0ezdOlSoqOjeeKJJwgLC2P79u21nuP111/Hx8dHd3z44YdG/d2UJglYwpS51zRg5aalK1yJEO3f2e81/1ZGDB+ibCFCGEnyCc1UlNB+cs2ytbXvlZ0WKq65GOLoKiMIhWFNSVvp0aMHX3/9tW630EsvvdQmNd69YCENWEL8XOr5RCrVatx8vHH1rnuRykGlYubGD/EL70ZBdg7rn51N1rXr9T7vgb9u4eSOXVhZWzNl5Vt4+PnWe74wntjYWD777DMSExOZOXMmxcXFTJ8+vc5zp0+fjoeHB+PGjePIkSOkpKRw8OBBzpw508ZVt4y6rIxbPyUD4N+ze637R86egbOHO+nJV/jhb1tbpYbslFRiX17A+089S9KR41jb2PDrp3/Dwl3/5NHfz8JBxjkLoZi7qb7y36EwX5KAJdqrSrWaL195k7LiYkL7RTP8uSlKl9RqHF1V+HbtAsCVUwkGz9OOIexuQmMIXTtqvivK+EFhyP2/fZKQvr2VLqNeqo7aRsIchSsRxjB37lw2btzY6PUPAEtLS7788kvefPNNrly5ondfQUEBDz/8MP/4xz+4dOkSx48fZ/bs2fTt2xd/f/3RS4WFhWRkZOiO4uJig69pa2uLi4uL3mHqvPxrErBSzWtznrg3uHnXJGBlZCpciRDt37n9B6mqqiKw130Grx0JYU6ST8QBENo/WuFK2j9pwKqH7mKFjG0T9WhK2oqjoyNXrlzh1VdfJS0trc1q1EaLywULIfSVl5SSdukyAIG9aqdgaZqvPsCvezcKc26zfvqLZF5NadRz/2PxO1w/dwEnN1emffAutg4ORq1d6LOxsQFg//79utuqq6vZt28fgwbVffHm8ccf5+jRo6xbt4709HTOnj3LggULsDSQPGDKC4ep5zTxsQE99ccQ+oV3Y/DE8QD8a/lKqtSVrVzHBTY8/3s+mv4i1+LPYutgz7Bnp/Dad//koRnPyH8HQihAl+or32mEGdOO05QELNEeZV+/wb/eWgnAw7OebdR4dHMUHB0JQPrlq7qmyrpcPKRpwArpE2Uynx1VNQ1Yxk6SFe1D2OABjHvl90x7/22THvms0iW5yfvY3NnY2NCnTx/27dunu62h9Q+AN954g8zMTP7yl7806nVcXV2pqqoiL0//b/arr75KdnY2p06dYv78+VhZWRl8jgULFlBQUKA7TD1x3MLSEo/OnQBJwBKmSUYQCtF2CrNzSInXTFDpOUzGEArzdy3+DOqKCtx8vPGsaTgXrUMasOohIwhFYzQlbeXkyZP88Y9/5KuvvqKsrKzNapQLFkIYlnLmHECtCx0OKhee3/A+nXuENbn5CjSpRJ/9/lUKsnPo1C2UScsWYWFhYdTaxV2enp4AZP1iMTkjIwMfn9pj+QBCQkKYMGECVlZWjB49mqVLlzJv3jwWLVpU5/mmvHCYevYCAP4RdxuwLCwseOK1+VhaWXFq5x4u/3iqzeq5/OMpPvzdDDa9OJ9bST/h4OLMqDnPs3DX19w/eaJJX5gQor0p1iahSiO+MGNFufI+FoYNHjwYgKSkJKqrqxk7dmyDj3nwwQeJi4ujtLSUn376ialTp7Z2mfU6uX0np3buwcramslvL8be2UnRelrD3fGD8fWel3XtOjk3bmJta0vXAaYxGuFuApaMIBS1hf1qAKBJees1YoiyxdTjbgOWJGCZOy8vL6ytrcnI0G/AqG/941e/+hXPPvssMTExjXoNOzs73nnnHbZs2UJhYaHu9g8++IBJkyYxdOhQPvnkExYuXMi7775r8HlWrFiBSqXSHX5+fo16faW4+XTE2sYGdXm5pB4Kk+Tuq/lvXEYQCtE2zn5/AICI4dKAJcxfRWmZ7nqopGC1LmnAqoc2AUtGEIq6NCdtpTmMkbhSJBfehDDoWoJmF0NQZITuNnsXZ2Z88j7+93WnMOc2Hz83h4wr15r83PkZWcT+fgHqigoiHx7G8BnPGKlqYQyWlpZkZmYyY8YMTp06xdatW3nrrbeYOXNmneeb8sLh9XM1DVj3hWNRk+DVd+xogqIiKC0qYsd7HypSV+LBw6z6zVQ+/8PrZKWk4uLpwbhXX2bBf7Yy4InHsKxnp6wQwji0Y9Ul1VeYM+2GEmsbG+ycHBWuRpgaJydNs9K8efMadX5QUBD/+c9/2L9/P1FRUbz//vts2rSJhx9+uDXLbNA/l75Lzo1beHbuRO9RytbSGhrbgAV3xxCGm8gYQu3otnxJDhJ16Daov+7/HjhhnIKV1M+1g/Z9LI2E9xpnZ2c+//xzYmJiyMlpuAHP2tqarVu3YmFhwaxZs/TuW716NQcOHODs2bN88sknzJs3jzlz5mBrYJNVeXk5hYWFeocp040fvHGL6qoqhasRojZJwBKibZ39r6YBK6RPlARciHbh8gnNJv3Q/qax2am9kgasehTrxnVIA5aorTlpK81hjMQVbby/fEAQoraUhPMAdO4RhpWNDfbOTjz/yRoCevbgzu1cPo75f6QnX2n2819LOMs/l/4ZgFGzZ3Df0PuNUrfQp11E/OUIWG9vb9LT694VlpaWxqVLl6j62aJaYmIivr6+uibbnzPlhcOMK9coKy7GztER75AgHFQujHn5RQD2fLSZAgUX2aurq4n/bh/vjnuKrW8uJy89AzcfbyYuXsgft/2NqJEPSTqcEK1Imxzk6CbfaYT5qigto7ykFJBNJaK2vXv3AvDtt9826vyZM2dy9epV5s+fz8WLF1m3bh1ff/01L7/8cmuW2aDSO0XEf6cZJ9UpLFTRWozNztGRzt3DALjaiAasiybWgKVNwCrIkAYsoc/FyxPfrl2oqqqiqrKSLn170yEoQOmy6qRtJCyQJDezl52djVqtxtvbW+92Q+sfXbp0ITg4mB07dlBRUUFFRQVTpkzh8ccfp6KigpCQEN252uarwMBARowY0eC6x/Hjx7GxsSEoKMgov5vSPANqGrBSTSfxXAgtS2srVF6aa1K5BtY6hRDGdfvGLW4mXsLK2poeQ36tdDlCtFjyiTgAQvtJAlZralYD1gsvvMDVq1cpKSnh2LFj9OvXz+C5U6dOpbq6Wu8oKSnR3W9tbc3bb7/NmTNnuHPnDjdv3iQ2NhZfX1+957l69Wqt53nllVeaU36jaROwpGlFKMkYiSvaHePOHu7GLk8Is5eTeoM7t3OxtrWlS9/ezPj4fQIielCUm8fHMXNI/+lyi1/jxL93cOhv/wDg6RVv4t0luMXPKfRVVFQAMGTIEN1tFhYWDB8+nKNHj9b5mMOHDxMaGqrX/NOtWzdu3bqlez5zUV1VxY0LSQD49+zOyNkzcPZwJz35Cj/8bavC1WlUqSs5/q8drHh0ItveeZ/CnNt0CArgd39eypzPN2Bjb6d0iUK0S0X5koQq2oc7ubkAOLnJe1m0zKBBg9i3b5/ebbt3724wydoY6dQNSav57uETGtLAmeYlKCoCSysrcm7cJC8js8Hzk3+Mo6KsDA8/XzoGB7ZBhfVTSXKQMKDbQM2a+M3EJBIPHgFg4P81PAZVCSqvmgasbHkfm7uKigri4uIYPny47rb61j8uXrxIz549iYqK0h3bt2/XJUGmpqYCd5uvunbtykMPPcTt27cbrCUqKorKykoyMxv+224OvDpr1t2zr99QuBIhanPt0AFLKyvU5eUU3c5TuhzRCmJiYhp97R3A1dWVtWvXcuvWLUpLS0lKSmLUqFFtVO29Q5uCFTF8iLKFCGEEKWfOU1FWhqqDl0l8126vmtyANXHiRFatWsXixYuJjo4mISGB3bt310qc+Ln8/Hx8fHx0R2Dg3f+HOjo6Eh0dzdKlS4mOjuaJJ54gLCyM7du313qe119/Xe95PvywdcfpFEkClqhHc9JWmsMYiSva5ANpJhSibikJmrnHz7y/gsDInhTl5bP+uTmkXWp585XWN39eQ/KJOOydnJj+wbs4qOTfltYwdepUpkyZQnh4OOvXr8fJyYlPP/0UgNjYWJYvX647d/369Xh4eLBmzRq6du3K6NGjWbhwIevWrVOq/Ba5flYzhnDA+McYPHE8AP966z2q1JVKllWLurycH774iuWjJrDzg48pLSoiMLInPR6UXURCtAZtqq+MIBTm7u5YdXkvi5bx8fEhI0N/bEtGRgaurq7Y29sbfJwx0qkbkp6s+f7h27WL0Z9bSU0ZPwia1LsrJ08D0P3+wa1WV2NpG7AkOUj8knb84KWjP3L0628A6Dd2NFZ1JCorTRKw2pdVq1YRExPTqPWPsrIyzp8/r3fk5eVRWFjI+fPnqaiowNramq+//pq+ffsyefJkrKys8Pb2xtvbW5cQPnDgQF566SV69epFcHAwTz/9NKtXr+aLL74gL699NIPoErBuSAOWMD268YPpmVRXVytcjWgNy5cvb/S1dxsbG/bu3UtQUBATJkwgLCyMmJiYVvmOcq87u+9/AHQb1A87R0dlixGihdTl5VyLPwtAF0nBajVNbsCaO3cuGzdu5LPPPiMxMZGZM2dSXFzM9OnTDT6murqajIwM3fHzHREFBQU8/PDD/OMf/+DSpUscP36c2bNn07dvX/z9/fWep7CwUO95iouLDb6mMXYmFudrx3XIAq+orTlpK0q5ox1BKMkHQtTpWk0Dlp2jI8X5BXz83BzSLiUb9TWq1JX8dd5r3L6ZhldAZ3735yVYWlkZ9TUELFq0iCVLlhAfH09UVBQjR47Ufe4ICAjQS9i8ceMGjzzyCP369ePMmTN88MEHrFmzhrffflup8lvk+jlNA1ZwdCSWVlac2rmHyzUXrkxReUkJ32+M5fQuzdigTt3a16gdIUxFUZ4m1VdGEApzV6wbqy7faYQyjJFO3ZDMq9epVKtxULng6m14o6O50TVgnWxcAxZAonYM4f3KjiG0d3HGztEBkAQsUVvXgX0BuHT0BEmHj5GXnoGTuxsRwx9UuDJ9ltZWuHh6ACg6nl4Yz9atW5k/f36j1z8a4ufnx9ixY/H39ychIYH09HTdMXiwphG2rKyMSZMmceDAAc6fP89rr73G6tWrmTFjRqv8jkrw8pcELHPj7q6Z+HHjxg1yc3PZtGkTTk5O9T7m448/Jjk5meLiYjIzM9m2bRthYWFtUW6LuNc0YOWmyfjB9io2NrbR196nT5+Oh4cH48aN48iRI6SkpHDw4EHOnDnTxlW3f+nJV8i6dh0bOzvFv5sIYQzJP54CILR/H4Urab+a1IBlY2NDnz599KLaq6ur2bdvX71R7c7Ozly7do3r16+zbds2evToUe/ruLq6UlVVVWvnxKuvvkp2djanTp1i/vz5WNVz4doYOxN1Iwhlt7ioR1PSVmxsbIiMjCQyMhJbW1v8/PyIjIykS5fW3d1apLtYIe9lIeqSfOIkoPm7/3HMHG4l/dQqr1OUl89f/t8fKSsuIWzwAB59+YVWeZ172YYNGwgKCsLe3p6BAwdy4sQJ3X1Dhw5l2rRpeucfO3aMQYMG4eDgQGhoKCtWrKCqqqqtyzaK1JoELIDSoiJ2vNe6SaHGkpakaXb0lQYsIVqFdhS1fKcR5k4SsISxpKen4+3trXebt7c3+fn5lJaWGnycMdKpG1JZUUHWtesA+IS2jxQsazs7AiI064CXG5mABZB4SNOAFRIdia2DQ6vU1hiuNelXxfkFqMvKFKtDmB6f0BBcO3agvKSUq6fPUFVZyYl/fwuY3hhCbfNVZYVat0YozN+6deuatP7xc9OmTWP8+PG6n1NSUrCwsKjzOHBAM3rp9OnTDBo0CHd3dxwdHbnvvvt4++23KS8vb71fso15ahuwUiVBxlxs2rQJgHHjxjFmzBgeeOABNmzYUO9j4uLimDZtGt27d+eRRx7BwsKCPXv2YGnZ5LyKNuXm4wNAXnpGA2cKc6NNGty/f7/utoauvT/++OMcPXqUdevWkZ6eztmzZ1mwYEG97+O2GKneXt0dQ2haTfZCNMflE3EAhPaLxsLCQuFq2qcmfaLw8vLC2tq6zqh2n5p//H8pKSmJ6dOnM3bsWH77299iaWnJkSNHDO4UtLOz45133mHLli3ROSrMAAAgAElEQVR6i1kffPABkyZNYujQoXzyyScsXLiQd99912CtxtiZqF3gtbG3w9rOrsmPF/eGpqStdOrUifj4eOLj4+nUqRN/+MMfiI+P131RaC26C2+yW1yIOl0/e4ENz/+eVROncjPxUqu+VtqlZP7++jIAhkx9mj6PyVx2YRy5aem63cx7PtpsNjubtQ2PncKkAUuI1qAbQShJqMLM3ZEELGEkR48eZfjw4Xq3jRgxwmSSrNOTrwDgGxqicCXGERDRA2tbW/Izs8hJbXyiSHZKKtmpN7C2taXrAOV25mqTyPIzsxSrQZgm7fjBK3HxVNak5B//1w6qqqroOrAvXjWjzEyBqmZ8UWFOjoytEsIAF08P7BwdqaqsJPdmmtLliEYIDw9nxIgRAJw8eZLDhw8zZ84cJk2aVG8C3MaNG/nhhx9ISUnh9OnTLFq0iICAAIKCggw+xhQaV9x8OgKaEYSiffH09AQgK0v/82Z9195DQkKYMGECVlZWjB49mqVLlzJv3jwWLVpk8HXaYqR6e6UdQ9j9gcFY29oqW4wQLXT97AXKiktw9nDHu52sO5iaVm/pPnbsGJ9//jkJCQkcPHiQJ554gqysLJ5//vla51pbW7N161YsLCyYNWuW3n2rV6/mwIEDnD17lk8++YR58+YxZ84cbA38oTPGzsSyomIqK9QAOMnIDmFAU9JWDO0mGjp0aKvWqB09Y2Vjjb1z/RG8Qtyrko4cJ/dW20Q4n9nzX/Z+oknK+82br+Dfs/5kSCEa6++LlrFzzcf88LetSpfSaGk/XQbA3dcHB5V83hLC2LSbSmQEoTB3koAlDNGOmYmIiAAgODiYyMhI/P39AVi+fDmxsbG68z/++GNCQkJ45513CAsLY9asWUycOJHVq1e3ffF1SKtpwPLp2j4SsHTjB5uQfqV18dAxAMLvH2zUmppC27hSIA1Y4he6DeoHaMYPauWlZ3CxJr1twP89rkhddXHtqElyy880j006QihB2zSZm5ZBpVqtcDWiMQYNGkRubq7ebfv27aOqqooBAwY06jkcHR2ZNm0aV65cITU11eB5ptC44u6racSREYQCwNLSkszMTGbMmMGpU6fYunUrb731FjNnzjT4mLYYqd5epZ5LJC8jE3snJ7oO6Kt0OUK0SKVazbV4zbjS0H7RClfTPjWpASs7Oxu1Wl1nVHt6euP+0Ver1Zw+fZrQUP2UA23zVWBgICNGjGiwYer48ePY2NjU25VuDMUFmsYVRxnZIcyYuqyMsuJiQHaMi7rFxMRw9epVSkpKOHbsGP369av3fFdXV9auXcutW7coLS0lKSmJUaMkyakpdq/byPn9P2BjZ8eszR8y8DfjlC5JtANJR47z/aZYqtSVSpfSaKV3isi5cQsA327t40KjEKZE14ClUmFZzwh3IUxdkSRgCQN69+4NwOHDhwHNBr74+HiWLFkCgK+vLwEBAbrzr127xqOPPsqIESNISEhg3rx5PPfcc+zZs6fti69Dek1zuk/X9rETtUsLGrASfzgCQPivBxq1pqZw7ViTgGUm6bKibVjZ2BDSR/O359KxE3r3Hf/ndgD6jX0UK2vrNq+tLi5emmSNwmx5HwthiKe/pgGrKWmNQlk+Pj5k/+LvWmVlJbdv3zaYGqQ1a9YsCgsLKSoqYtSoUYwYMYKKmjTDuphC44qbr+a6bF6ajCBsb3JycgDoUNP4r1Xftfe0tDQuXbpEVVWV7rbExER8fX11Iw1/qS1GqrdX1dXVnPu+ZgzhQ0OULUYII0g+cQqA0P7KpU23Z01qwKqoqCAuLk4vqt3CwoLhw4c3Oqrd0tKSiIgI0tLuxrhqm6+6du3KQw89xO3btxt8nqioKCorK3Wj3lqL7oKFq+wYF+atKLdmx7iHXLAQtS1fvpzFixcTHR1NQkICu3fvrvWBX8vGxoa9e/cSFBTEhAkTCAsLIyYmRiJrm6i6upovF/yJ5BNx2Dk68ps3XuG59atQdaz7f3ch2rO0n5IB6NRNxhAKYWwlBXcX1OQ7jTBnkoAlDDl06BAAKpVKL2lam0Y9bdq0WqnTBw4cIDo6Gnt7e0JDQ/USspSW9lNNAlZIMBaWrR5c36osra0IjNQkkzWnAevyj6eoKCvDo5Mv3iFBRq6ucVS65CBJwBJ3BUX2xM7RgYLsHNIuXda778LBw+RnZuHi6cF9Q+9XqEJ9ukZCScASwiBtAlZ2qqxvKm3FihVUV1fXe4SFhbXoNb788kt69+7NAw88wKVLl9i6dSt2dnYGzzeFxhV3H00DliRgtT/a5r8hQ4bobmvo2vvhw4cJDQ3FwsJCd1u3bt24detWvc2EovnO1jRg3Tfk17LBUZi95B/jAOjSt7fe3xFhHE1eyVm1ahUxMTFMmTKF8PBw1q9fj5OTE59+qhmlFBsby/Lly3Xnv/7664wYMYLg4GB69+7NF198QWBgIJs2bQI0zVdff/01ffv2ZfLkyVhZWeHt7Y23t7euS3fgwIG89NJL9OrVi+DgYJ5++mlWr17NF198QV5enjH+dzCoWLvI6yaLvMK8FeXJjnFhWGxsLJ999hmJiYnMnDmT4uJipk+fXue506dPx8PDg3HjxnHkyBFSUlI4ePAgZ86cMfj8tra2uLi46B1CM+r24+fm8M2f11BRVkb3Xw/iD//6gt6jRihdmhBt6lZSTQNWWFeFKxGi/amqrPxZqq80YAnzJQlY4l5x++YtyktKsbG3w9PfvMeCdO4ehp2jA8X5BWRcvtrkx1eUlnH5x9MAdFdoDKGqg6YBq0AaV8TPdBvUH4Cfjv1Y674qdSUntn0LwMAJY9u0LkNUNQlYBZLkJoRB2n9zc65LApbSVq5cSXh4eL3HlStXSE9Px8vLS++xVlZWeHh4NDixp6CggOTkZH744QcmTJhAeHg448ePb81fq0XsnBxxUGnW0/PSWzeUQihn6tSpjb72vn79ejw8PFizZg1du3Zl9OjRLFy4kHXr1ilVfrt3JS6eorx8nD3cCe7dS+lyhGiRG+cvUnqnCEdXlVyTaQVNbsDaunUr8+fPZ8mSJcTHxxMVFcXIkSN1SVQBAQH4+vrqznd3d2fjxo0kJiayc+dOVCoVgwcPJjExEQA/Pz/Gjh2Lv78/CQkJpKen647BgzWLK/+fvTuPi6pe/wD+YRZ2BlCWGVAQWV1BDBH3JdJKc8m00jRFzDKvmt7u9Xe9meaVVs3Sq6GlVHa15aZ2w1TKJRXcwQ0EBBdg2FcZloGZ3x8z5yDKMsDMnFme9+t1Xr8bnDnngd+oc855vp+nrq4OL774Ik6ePIkbN27gH//4BzZv3oxFixZp43fQJvZhBTVgESP3QP3Awp5WjJOHMI2ux48fZ7+mVCqRkJCAiIiIFl/z3HPPITExEdu2bUN+fj6uXbuG1atXg9fG6uzVq1ejsrKS3Sgtq4lSqcSpr/dh88xXcf9GKmwdRZjz4Xq88vEGav4lZiPvVgYAGkFIiK7IylXXNPTvCjFm1bQ4ipgJpUKB/NuqFCyJn3GPIWRGtGVdToZSqezUMZrGELZ8faprTclBlIBFmjANWOmJjzdgAcD5//4ChUKBwGHh6OYpaXEffWKS3CqLSjiuhBDD5dKTErAMRXFxMW7dutXmJpfLkZiYCGdn52avHTduHHg8Hs6dO6fx+Zj01LYSsLjmpE6/klVUor6mhuNqiK6sWbNG42fvOTk5mDBhAsLCwnD16lV89tln2LJlC95//32uyjd5isZG3Dj+JwAaQ0iMn6KxEVmXVSnVvkNCOa7G9HQqy3zbtm3o1asXrK2tMXToUJw/3zTrfuzYsWzMOwC89dZb7L4SiQSTJk1CcnJT7Pjdu3ebRcQ/vJ08qYrzu3LlCiIiIuDs7AxbW1v069cP77//Purr6zv7c2uMeVhhK6LV4sS40Ypx0pLu3VWrIIuKmt9MLigogFgsbvE1vXv3xowZM8Dn8/HMM8/gvffew8qVK7FmzZpWzxMTEwORSMRunp7GvZJbFwqy7uCzOdE4sm0nGuUNCJkwHqt+3os+o4ZzXRohOidNVyVgSfx8KcKZEB1gPgfSohJizJquZxwpHp2YvPxM9RhCf+NuTu89OAQAkHWx4+MHGWmnVWNXfAYHw8rWVit1dYSjGyVgkeZsRCL06BcEAEhvIQELAEpzpchIVN0vD5/+nN5qaw2b5FZEjYSEtIZJwCq+TwlYxiItLQ3Hjh0DAAwePBjDhg3D1q1bsW/fPkilUgCAh4cHUlNTERYWBgDw8fHB3//+d4SGhqJnz56IiIjADz/8gJqaGsTHx3P2s7THWULjB81BbGysxs/eASApKQkRERGwsbGBn58fYmJioFAo9F22WWHGEA4YP5rjSgjputvnLwMA/MIGc1yJ6elUA5Y5oVW2xFSw72VKwCJdxOPxUFhYiEWLFuHy5cv4/vvv8a9//QuLFy9u9TX19fWoqqpqtpHHKRoacXTHV/hszkLkZ2ZB5NIdC7d9jJnr/g9Wdvp/2ECIvpTcz0WdTAahtRVcvHpwXQ4hJqe6grmmoUZ8Yrxk6usZHp8PaxpnTUxcfoY6AcuIG7AsLCzgE6oazZF1qfMNWMX3clB8LwcCoRB+4fq9MWzB48FBPbqNErAIwz98MHg8HvIzs1DZxvsi8ceDAIAh0yaBJ+B2kQnTgFVBjYSEtMhG5MA+/ynNoQQsY7Jw4UIAwKFDhxAfH4/Tp083m5wjFAoRFBQEW3UTd21tLUaOHIn4+HhkZmZi//79qKqqwrBhwx5boGxInCSqhdLl0gKOKyHEvKUnnkedTAYnsTt69uvDdTmEdEnmhUsAVAunaFG8dlEDVjtkFcwIQkrAIsaNErBIS0pKVPHzrq6uzb7u7u6O/PyWV9RIpVKkp6c3W02RmpoKiUTCjjQkXZNz8xY2z5qPE3u+g0KhQPj0yVj107fwDaMoUGKalEolpBm3AQAeAX4cV0OI6WkaQUjXNORx+/fvR25uLpRKJaZMmdLmvqNHj4ZSqXxsc3d313mdjQ0NqKl6AIAWlRDTxyZgGfEIQrF/b9iKRKiTyZCblt6lYzEpWH1GDtNGaRqzd3YCXyCAorERD0rL9HpuYrjaGz/IuHHiT1QWl0Dk6oK+o0boo7QW8QR8OHTvBgCoKqYRhIS0pHsPVfpVRWER6mtqOa6GdERZmerfZ09PTzg5OSEqKgrV1dXs95kJPMy0HalUimeffRZisRhWVlbw8vLCnDlzkJ7etc8quuYkdgMAlOVTAxYhXGqor0fqKdWIdBpDSIxdbloGZJWVsHGwh2dQANflmBRqwGqHTL1a3NaRHlYQ40YJWKQlcrkcADBmzBj2axYWFhg/fjwSExNbfM2ZM2fg5+fXbPRLQEAA8vLy2OORrmuor8cvn3yO7QuWoCQnF908JXjjq22Y8vZyCKysuC6PEK2TpqsasCSB/hxXQojpqS6nEYSkddevX8eSJUs69JqAgACIxWJ2Kyws1FF1zTHvZXtaVEJMHNOY7uLVAwJLS46r6ZzegwcBAO5cuQpFY2OXjpX6p+ohR9CIoV2uqyNE6vGDVSWlXf4ZiOkIiFCNsUpPPN/mfoqGRlw8+CsAYOgM7sYQirqrUtwa5Q3s4kxCSHNMEnfJfUq/IobJWaxOwKIGLEI4R2MIialQKhRsWrXfEAp/0CZqwGoH27TiSA8riHFjE7CcnTmuhBiiefPmYe7cuQgKCsL27dthZ2eH3bt3AwDi4uKwceNGdt/t27ejW7du2LJlC/z9/fHMM8/g//7v/7Bt2zauyjdpWZeS8cnzc5H4wwEAwKhXZmHlD3Ho2b8vx5URol15tzIAAB6BlIBFiLY1jVWnphXyuPfeew8HDhzo0GsKCwtRUFDAbkqlUkfVNVddRotKiHmoLCqGrKISfIEArr28uC6nU3oPDgEA3O7C+EFG5oUrkNfWwVkihruvT5ePpylHN1XaBI0fJIzuPTzRvYcnGuRy3L54pd39k376BQAQOHwonNXjo/TNQT1+sLK4WG//XhNibLr3VCVgFd/P4bgSQlrmJFElDtMIQkK4l/rnWTTU18PNxxvuvXtxXQ4hXZJ5/jIAwHfIYI4rMS3UgNWOphGEdIOXGLemEYT0XiaPW7NmDdavX4/k5GSEhIRg4sSJbJKBl5cXJBIJu29OTg4mTJiAsLAwXL16FZ999hm2bNmC999/n6vyTV6dTIYf13+Ana+vQEVhEdx8vLH0my8w8c1F4AsEXJdHiFbk3coEQCMICdEFGkFItC05ORl5eXk4evQohg1reySYpaUlHBwcmm2dxSRgUTMhMQfSTHU6aIAvx5V0DtOAlaWFBqyGujpkXlTdGO4zIqLLx9MUk4BVWVSst3MaEmYkF2nCjB+8m3Id9TU17e5fcj8H6UkXwOPxMGT6ZF2X1yJH9n1M4wcJaQ0lYBFD56xuwCqjBixCOFdXLWNHUdMYQmLsMs9fAgD0Dg0GT8DnuBrTQQ1Y7aARhMRUNCVg0cMK8rjY2Fj06tUL1tbWGDp0KM6fb4rSHzt2LObPn99s/6SkJERERMDGxgZ+fn6IiYmBQqHQd9lmJ+10Ej6aNgeX44+CLxAg8rX5mPPRe1yXRYhWSDNUDVhOYnfYiOhzFyHaVM1e01AjPukaqVSK1157Dc8//zyef/553L9/HydOnMCgQYNafc3q1atRWVnJbrm5nX+wRQlYxJzkZ2QBACR+vTmupONcvHtC5NId8ro63L+eqpVjpjFjCEfqrwHL0c0VAFBRYH4JWG4+3nj74HeY8+F62HejJHWGpuMHH3bux4MAgCHTJoHH1/9DDZGreTcSEqIJNgHrHiVgEcNjYWEBR3dVKme5NJ/jagghQNMYwv40hpAYufyM26guK4eVrS28+tHUHW2hBqx2VKtXi9vSg0Bi5JjRMzYiB05u+BBCtKOmshJ7/7YWX69aA4VCgYFPjoGjuyvXZRHSZXXVMpTkqB7Kexhp0gMhhoppxKdUX9JV6enpiI2NxeXLl5GYmIioqCicPXsWK1asaPU1MTExEIlE7Obp2flEFUrAIuZEmqFKwBL7Gd/nIl91+tW9azfRUF+vlWOm/pkEAPAJDYaVra1WjtkeRzNuXPEJDYYFj4dBT0fi7YP/weBJE7kuiXMWPB78wlWjOTrSgHXtj1N4UFoGJ3c3BOkxwY1BDViEtM+lJyVgEcNl370bBEIhFI2NqCymNENCDMGNE39C0diInn2D4OzBzZhpQrRBqVSyo9V9h4RyXI3poAasdjAjCPlCAazt7TiuhpDOY97LPB4PNqLOj/0ghBiGlCO/486VqwCAgU+O5bgaQrSDHUMY6M9xJYSYFibVl0ZRE104f/48/PxaHx9bX1+PqqqqZltnNSVgUQMWMX35maoELLG/8SVg9R6sSsXTxvhBRsn9HBTdvQ+BUAj/oU9o7bhtEakXulQUml8C1rmfDmHLy1HITU2HnZMjXo5Zi+jtm+EsMd8HTD37BcFWJIKsshL3b6Rp/LpGuRwXDsYDAIbOmKKr8lpFDViEtM3SxppNPCy+TwlYxPAw4wcrCougaGzkuBpCCKBa6Mhc6wwYP4bbYgjposwLlwEAfkMGc1yJ6aAGrHY01NWhvqYWAI0hBIDuPTzRe3AIhNZWXJdCOkjR2Mg2YdHDN0JMw9VjxwEAAyOpAYuYBmk6NWARogtsqi9dzxAdCAkJgVQq1cu5mhKw6HqGmD6mAaubhwRWdvpJfNKW3uoErKxLV7R63LTTiQCgtxQhNgGr0DwbV3JT0/Hpywvw66fbIa+rQ9CIofjrgb0Y/tIMWFhYcF2e3gVEDAEAZJ67BKVC0aHXnvvvIQBAn5ERek+wFrmZ9/uYkPZ066FKZ5VVVKKmsvMLBQjRFSd183O5tIDjSgghD2saQziK40oI6ZrM85cAAD4hA8EXCjmuxjRQA5YGmBXjto7me5NXaG2FSSuW4G+/7MOSPdux4ewxvBm3AxOXLoL/0DBY2lhzXSLRADN+xr6bM8eVEEK04WqCqgGr16CB7KpWQoxZ3q0MAICERhASolUy9ShqvkAAawd7jqshhmbAgAEIDg4GAPj4+CA4OBg9e/YEAGzcuBFxcXHsvsuWLcNzzz0HX19f9OvXD5s3b8a4ceOwbds2vdRKCVjEnNRUVqG8oBAAIPYznhQsZ4kY3TwlaGxowJ3k61o9duqfqgasPiP104DFXGNVmHFykKKhEX98+TU+mTEXWZeSYWVri+n/txJL4nbAzceb6/L0imnASk+80OHXFt25h8wLl8Hj8zFk2mRtl9YmkUt3AEBlsfm+jwlpi0tPVQNW8T1KvyKGyVmsSsAqy6cGLEIMyXV1A5bPoGDYd6dnrsR4FdzORlVJKYTWVvAe2I/rckwCNWBpwNxTg/yGDMaqn77F2AVzwBcIUFVSCoFQCJ/QYEQumo/FOz/DhjPH8ObXX+Dppa8hIIIasgxVdTmNnyHElFQUFOFO8jXweDwMjBzDdTmEdBkzglDs1xs8Pp/jaggxHQ319aiTyQAAdk7UuEKaO3PmDJKTVdH5mzdvRnJyMtavXw8AkEgk8PLyYve1tLTEJ598gmvXruHkyZMIDg7Gk08+iT/++EMvtVICFjE3+RmqFCyJv/E0p/sMVjV05ty8hfqaGq0e+/bFK5DX1sFJ7K7zpjS+UMguXqsoML8RhI8qunMP/57/Bn7a8BFqq6vhM2ggVv74NZ5c9Cp4AtP/3G5pYwPv4P4AgPTE8506RtKPBwEA4dMnw4Knv1vybCMhJWAR0iKXnj0AqEbdEmKInNQNWOXSfI4rIYQ8rLygEPeu3QSPx0P/sZSCRYwbk4LlFxbKcSWmgRqwNMA0rZjbyA4bkQNmvrsar3+5FS5ePVCeX4BdS1bh3THP4l9PP4/9//wXLh46jDJpPvhCAXwGDcSTi17Fa7Gqhqyl38Ti6b8sRkDEEFja2HD94xAAD8rKANCKcUJMScpR1QPPgZHjOK6EkK4rzc1DbXU1hFZWcPXuyXU5hJiUpkZ887qmIe0TiUSwsLBots2fPx8AMH/+fIwd2zTq+KOPPoK/vz9sbW3h4uKCcePG4cSJE3qrlUn0pesZYi6YMYTGlIDVNH4wWevHbqirQ+YF1Y1hXY8hFLmqUoPkdXWoqazU6bmMhVKpxNn9/8VHU2cj9c+zEFha4umlr2HFvt3o0TeI6/J0yveJQRAIhSjJyUVJTm6njnEt4QSqyyvgLBEjcHi4litsGV8ggEP3bgCASjNOciOkLd2ZBKz7nfuzTYiuOUnUDVj5hRxXQgh5VNMYwtEcV0JI12ReuAwA8B0ymONKTAM1YGmAScCyNaNVtgOeHIO3D3yH8OefAwCc2fcTPpz6MlJPnQEAlObk4fyB/+E//1iPDU9Nw78mTse+f27AhYPxKM2Tgi8UoFfIADwZPQ+vxW7BhjNHsfSbWIyZ9zIsLCy4/NHMGjuyg5IPCDEZV4+pxhD6hAbDQT1agBBjpVQqm5IeAvw4roYQ08IuKjGjaxpieh5eHEVJicQcSDNuAzCuBizfwYMA6KYBC2gaQxg0YqhOjs9wdHMDAFQUUvrVo8rzC7DrjZXY+/e1qC4rh0egP5Z9twuTViyB0NqK6/J0oivjBxkN9fW4+MthAMDQ56dopa72MM1XjfIGdiQ1IaQ5Fy9KwCKGzVndgFUmpRGEhBiaa7+fAAD4hz/Bpo4SYoyYBKxewf0hsDLNazp9ogYsDbAjCM0gAUvk6oJ5m2Pw6uYYiFxdUJh9F1vnvob//utj1FXLWn1daa4UFw78in1r3sO/JkzHhgnTsG/Ne7hw8NdmDVmTVy3FyzFrzSKe3BCxIzuc6cEbIaaiPL8Ad1Oug8fjYQCttCAmIC9dNYbQI9Cf40oIad8bb7yB7Oxs1NTUICkpCWFhYa3ue/z4cSiVyse2//3vf3qpVVZOjfjE+NVUVkGhUAAwv4RqYp7yM42rAcu+uzPcfLwBANlXrurkHGnqBqzeoSGwsrPVyTkAQOSmeoBSSWPbWnX516P4YMpLuBx/FDw+H2MXzMGqn76FrwmOrQiIUH3G6+z4QcY59RjCvqOH6+UhHfs+Li6GUqnU+fkIMUbuvj4AgKK71IBFDBMzgrCMRhASYnCK7txD1qVkCIRCjJk/m+tyCOm04rv3UVFQBIGlJXxCBnBdjtGjBiwNmMNqcQsLC4Q//xzePvAdBj45Bo3yBhz7Yjc+mTG3UzfNyvLyceFgPPat2cA2ZB38cAsa5Q0IfXYC5n/6gV46KAVWVpjyt+VY+dM3WLF/D5Z99yXe/PoLvP7VNry28zMs3L4JCz77EPM2x+CVj97DyzFr8eKGNXhh7d8x/R+rMPXvKzB51VKTSZWhBCxCTBMzhjD4KRpDSIxf3q0MAIBHICVgEcM2c+ZMbNq0CevWrUNoaChSUlJw5MgRuLq6trj/9OnTIRaL2a1fv35oaGjADz/8oJd6mxqwTPeahpg+RWMjaiqrANAYQmIeCrLuQKFQwKF7N9h3d+a6nHb1DlWNH8xLz9TZ2L6SnFwU3bkHvlAA//DWG5+7ytFN9e+5vse27d+/H7m5uVAqlZgypf2UpNGjR+PSpUuora1FRkYG5s2bp4cqm1SXlWPv39Zi15JVKC8ohItXD7zx1TbMWPs3WNvb6bUWXRG5uULs1xsKhQIZ5y516VgFWXeQdSkZfIEAYVOf1VKFrROpP5dSI6Fp6shikIfNmjULSqUSP//882PfW7duHfLy8iCTyXDs2DH4+TW/Lnd2dsa3336LiooKlJWVYdeuXbCzM94/6y7ePeHo5gp5XR1ybqZxXQ4hjxFYWbFphuX5lIBFiCE69sVXAIBhL0xj/7wSYowyL6iudXyHmN6CGn2jBiwNyB4ac2CKXLx6YPGuzzHz3dWwETng3rWb2Pziq/htaywa6uu1co6yvHyc+mYfvlr2NuS1deg7ejgW7aV6tpQAACAASURBVNis05sxIjdXLNnzb4yaMwseAX7o0TcQXgP6wmfQQPiFhSJgaBj6jIhAv7EjMfDJMQiZ+CQGT5qIsCnPYuiMKRj+4vMYOXsmxsx7GbYiB53VqU+UgEWIabqaoBpD2HtwiFE8mCGkLdJbqgQsGkFIDN1bb72FnTt3Ys+ePUhNTcXixYshk8mwYMGCFvcvKytDQUEBu0VGRkImk+mtAauaHatumtc0xHxUlzHXNNSARZqLjo7W+EG0QCDAP//5T2RmZqKmpgbJycmYMGGCHqvVjLy2DiX3VIkcEj9fjqtpX+/BqgYsXY0fZKSeVo8hHKm7MYSO6nQifY8gvH79OpYsWaLRvr169cKvv/6K48ePIyQkBJ9++il27dqFp556SsdVPi711Bl8OOUlnN3/XwBAxIypeOHd1XqvQxcChqr+Lsm5kaaVxsKknw4BAMKnPwcLC4suH68tIlfVgtLK4hKdnofoX0cXgzC8vb3x8ccf49SpU4997+2338Zf/vIXLF68GOHh4aiursaRI0dg9dAi6r1796Jfv36IjIzEpEmTMGrUKMTGxmr959MXvyGDAQB3U65r7TkIIdrk5K76M10nk7ELUQghhiU98QLupFyD0NoKY16lFCygY9fmD2urSZzoXqZ6sYlf2GCOKzF+Aq4LMAaySuZhhWk1rfAEfIye+xImvL4QQmsr1Mlq8NvWWPy593so1WMdtC3tz0R88doyRG39GL5PDMLiL7di5+IV7E10bfEO7s+OUawuK8eBDzajurwSPD4ffIEAfKGg6X8L+ODxBeAL+eAJBODz1f9XIABPoNrngZbr4wqbgEUPKwgxKWV5+bh37Sa8BvTFgHFjkPgDfUAlxkuaoRq14+TuBltHETsKmhBDIhQKMXjwYMTExLBfUyqVSEhIQEREhEbHiIqKwr59+yCTtT7m29LSstkDDweHzi8KYJtWHE3rmoaYn2pKcyOt2LhxIxYvXoxz585h+fLlOHLkCAIDA1FU9HgDzYYNGzBnzhxER0cjLS0NEyZMwM8//4xhw4YhOVm3zUMdJc3MgmsvL4j9eiPj3EWuy2mTvhqw0v5MxKg5s9BnhGb/5nYGVyMI33vvPVRVafaAdfHixcjOzsaqVasAAGlpaRgxYgRWrFiBo0eP6rLMFtVVy/DTho+QdiYJCz77EIHDwmFhYWH0o++0NX6QkXL0D0z9+3J07+EB/6FhWjtuS9j3sZ6T3IjuPbwYBFD9ffDss89iwYIF+OCDD1p8DY/Hw969e7F27VqMHDkSTo9MSFi+fDk2bNiAQ4dUTYJz585FQUEBpk6div379yMoKAhPP/00nnjiCVy6pHpAt3TpUsTHx2PVqlWQSqWPnVOb1zO64KcemZp54TLHlRDSMmeJGABQJqX0K0IM2bEdXyF6+2ZEzJyG47u/xYPSMq5L4lRHrs0ZbTWJE/1gErC8+veFpY0N6mtqOK7IeFEClgbYcR0m9LDCs08Alu39EpNWLIHQ2gq3zp7Dx9Nn49Q3+3TWfMXIvpyC7VFLUFVSip59g/Bm3A44ubtp7fhDpk7CG19tg8jVBXnpmfj0pQW4/OtR3DqThNRTZ3D9j5NIOfI7rsQfxcVD8Tj331+Q+MPPOP3djzj19T4c370Xv++Mw9HtX+K3z2Px6+Z/a71BjCsPylT/6NMIQkJMz9VjNIaQmIY6mQzF91VJDx6B/hxXQ0jLXFxcIBAIUFDQ/CZoQUEBxGJxu68PCwvDgAEDsGvXrjb3W716NSorK9ktNze30zXLKqgRn5iGplRfei+T5uLi4jROJXzllVewceNGHD58GNnZ2dixYwfi4+OxcuVKPVfdvvzMLACAxN+wE7CsHezZBFNdN2DdvngF9TW1cBK7Q6yj3wszglDfCVgdERERgYSEhGZfO3LkSJvN4JaWlnBwcGi2aVvqn2chr6uDjYM9uvXw1Prx9c1/qHYbsBrq6nDpl98AAENntD9msiscXQ3/fUw6jlkM8vCff00Wg7zzzjsoLCzEV1999dj3fHx8IJFImh2zsrIS586dY48ZERGBsrIytvkKABISEqBQKBAeHt7iObV5PaMLTAJW5vmujRclRFecJO4AgHJqwCLEoKWdTsK96zdhZWuD0XNf5LocznXk2hxo3iSelZXV7vH1cU1jjkpzpSjNlYIvFMAnNJjrcowaJWBpoLpcnYBlQCMIh74wlY3ABvB4ZPUj//3w9/lCAQKHhYMvEEBWUYmDH27BxUPxOq33Ubmp6dj26ut4LXYL3Hy8seTrHfhi0TIU373f6WPy+HxMXrUUo+bMAgBcPXYc//nHe9Sh+ZCmBCzTaSYkhKikHP0Dk956E75hg2Dn7GQyjaPEPOXdyoRLzx6QBPjRjVBikqKionD16lVcuHChzf1iYmKwadMm9r8dHBw6/dDCEK9pCOkM9pqGErCImlAoBAAcP36c/Vp7D6KtrKxQW1vb7Gs1NTUYMWJEq+fhKsWDSQcV+/XWy/k6yydkIHg8Horu3EOVjsedNdTXI/PCJfQdNRyBEUOQr/4daZOIGUFowMlBYrG4xWZwR0dHWFtbP/YeB1TNEO+++65O61I0NEKafhteA/rCs08AStSLK4yRJMAXIpfuqJPV4E7Kda0dN+mnQxg5eyb6jx0F++7OeFCim5QEB/UIwqoiGkFoStpaDBIUFNTia4YPH46oqCiEhIS0+H1mEUlbC0zEYjEKCwubfb+xsRGlpaWtLkLR5vWMtrn7+sChezfU19Ti3rWbXJdDSIucxaoGrLL8fI4rIYS059iO3Yja+hGGvzQDJ/Z8x6Z3m5POXJsDzZvER44c2e559HFNY64yL1zCEM9J8BsSiltnkrgux2hRApYGmNXitk6G8bDC2sEez6/5K4KfGsduAyPHNt+eHNNsGzB+NLv1HTUcfIEAVw4fwwdTXtR78xWj6M49bJ27GIXZd9HNQ4I343Z0OunC1lGERTs+ZZuvftu2E1+v/Ac1Xz2CWS1ubWcHgaUlx9UQQrSpNFeK+zdSwePzMWD8aK7LIaRLpOmZAACPQD+OKyGkZcXFxWhoaIC7u3uzr7u7uyO/nRujtra2ePHFF/Hll1+2e576+npUVVU12zqLHUFITSvEyFECFnlU9+6qBoNHxxm0lUp45MgRvPXWW/Dz84OFhQWefPJJTJ8+HRKJpNXzcJXiwTQXufv5PL74zoD0fkI/4wcZd5KvAQA8gnSTmOrork4OKjCt5KCYmBiIRCJ28/TUTUJVblo6AKBHn0CdHF9fAoYOAQBkXbqCRrlca8fNz7iNOynXwBcKEDblWa0d91GORtBISHTP3t4e33zzDaKjo1FSot9mPG1ez2gbk351J/mqVv98E6JNTuoGrPL8wnb2JIRw7ebJ08i5eQtWtrYY9Yp5pmB15tqcaRKPjo7W+Dz6uqYxR5nnVIvh/cIGc1yJcetUAtYbb7yBv/71rxCLxUhJScHSpUtbXb09b948dhY5o7a2FjY2Ns2+tm7dOkRHR8PJyQlnzpzB66+/jszMTPb7zs7O+PzzzzF58mQoFAr89NNPWLZsGaqrqzvzI3SIrEK9WlwkAo/Ph6KxUefnbItHoD94PB4qi0twbEdTZLBSqWzaqdn/fPg/VP+7IOsOsi+n6LrUdpXnF2Dbq68jevtm9OgbiDd2/xtfLlmJ7CtXNT6G2K835n/2AVx69kCdTIbvVq/H9T9O6rBq41Vb9QCNDQ3gCwSwdXJEJUWQE2JSrh47jp79+iD4qXFI+vEg1+UQ0ml5t9QNWAE0gpAYJrlcjkuXLmH8+PE4eFD1962FhQXGjx+PrVu3tvnaF154AVZWVvj222/1USqLHUFIo6iJkaMELKINy5Ytw86dO5GWlgalUonbt29j9+7dbY5F4CrFo/h+Dhrq62FtZwdnDzFKc6U6P2dn9B6sasC6racGLGm6qjFNF6MZrexsYWVrCwCoKjbcxpX8/PwWm8ErKipaTL8CVM0Q9fX1Oq8tJ/UWAKBHnwCdn0uXAiJUDVjpiW2nlnZG0o8H0St4AIY+PwUndu9tfl9XSxxcVA/BKovo/p8p6ehiEF9fX/j4+OCXX35hv8bjqdbly+VyBAYGsq979Bju7u5ITlb9vZ6fnw83N7dmx+bz+ejWrVu7i1AMkV9YKAAg8/xljishpHU0gpAQ43Lsi68wf8sHGPHyCzgR9x/UVFZyXZJB62yTuL6uacxR5gVVA1aPvoGwtrdD7QPd9+GYog4nYM2cORObNm3CunXrEBoaipSUFBw5cgSu6pnyLamoqIBYLGY3b2/vZt9/++238Ze//AWLFy9GeHg4qqurceTIkWbR7nv37kW/fv0QGRmJSZMmYdSoUYiNje1o+Z3CNGABgI2DvV7O2RbPINXNi7sp13F2/3/ZLfH7n5u2H5q2pB8ONG0/HkTSjwcNovmK8aC0DNujliDrUjJsHOyx6IstCBw+VKPX9h83Gn/ZuxMuPXugJCcXn81ZRM1X7WBiL+mBBSGmJ+WoKtrVNyzUbP+MR0dHIzs7GzU1NUhKSkJYWFj7LwIwa9YsKJVK/PzzzzqukGgiLz0DACD28wGPz+e4GkJatmnTJkRHR2Pu3LkICgrC9u3bYWdnh927dwMA4uLisHHjxsdeFxUVhQMHDqC0tFSv9TKfAQ0l1ZeQzqIELPIo5kbto/el2kolLC4uxrRp02BnZwdvb28EBQXhwYMHyMrKavU8XKV4KBoaUZB1BwAg9tN+s5E2WNpYo2ffPgBUSUH6IM1QNey7+/qAJ9Du50VHN9V7qaayCvU1LTcyGYLExESMHz++2dciIyORmJjIUUVNcm+qGrA8goy3AUtgack2FqYnntf68VOO/I6aqgdw8erBJvFoE18ggEP3bgCAShpBaFIeXgzCYBaDtPTnPy0tDf3790dISAi7HTp0CMePH0dISAju37+P7OxsSKXSZsd0cHBAeHg4e8zExEQ4OzsjNDSU3WfcuHHg8Xg4d+6cDn9i7bOwsIAv04ClftBIiCFylqgSY8qkxtfkSIg5unH8T+TdyoC1vR1GzZnJdTl619Fr84ebxOVyOeRyOebOnYvnnnsOcrkcvXv31kvdpElFQRGK7t4Hj8+HT2jLo6tJ+zrcgPXWW29h586d2LNnD1JTU7F48WLIZLI2VwkqlUoUFBSw26OzwpcvX44NGzbg0KFDuHbtGubOnQsPDw9MnToVABAUFISnn34aCxcuxPnz53HmzBksXboUL774Ypvx8NqiaGxETdUDAICtATzQ9lTHq+ep47xNQe2DasQuXo7UP8/C0sYaCz7/ECETxre6v4WFBSIXL8D8Le/DytYWGUkX8emLC9hoftI6ZvyMfTdnjishhGhbyf0c5Kamgy8QoP+4UVyXw4mNGzd2qEkcALy9vfHxxx/j1KlTeqqStKcsV4ra6moILC3h2suL63IIadH333+PVatWYf369UhOTkZISAgmTpzIXut4eXk9dq0SEBCAkSNHajR+UNtk5apFJUIrK1jaWOv9/IRoCyVgkUfJ1WODxowZw36trQfRD6urq0NeXh4EAgGef/55NtXQ0ORnqhrDxH6GeQPae2B/8IUClEnzUZannweEZXn5qH1QDYFQCFdv7X5eZBqwKjhIDR8wYACCg4MBAD4+PggODkbPnj0BqK514uLi2H137NiB3r1744MPPkBgYCBef/11zJw5E5s3b9Z73Y+SZtxGY0MDHLp3Y8c5GpteIQNgaWONisIi9s+gNtXX1OLyr0cAAOHPP6f14zPpVw1yOWTqRnxiOjqyGKSurg43btxotpWXl6Oqqgo3btxg/x399NNPsWbNGkyePBn9+/fH119/jby8PBw4cACAqpHr8OHD2LlzJ8LCwjBs2DBs3boV+/btg1RqmOmMrRH7+8LOyRF1Mhnu30jluhxCWsWOIKQELEKMglKpxLEvVP8Wj5w9E9YGEOqiTx29NtekSZzoH9Oc7h9OYwg7q0MNWEKhEIMHD0ZCQgL7NaVSiYSEBERERLT6Ont7e9y5cwf37t3DgQMH0LdvX/Z7Pj4+kEgkzY5ZWVmJc+fOsceMiIhAWVkZLl1qWo2QkJAAhUKB8PDwFs9paWkJBweHZltXsCM7HLm/yesRqGrAyr2VwXEl2iWvrcPuv/wNV+KPQiAUYvaH61u8AWFpY4NXPt6AiUtU82BPfbsfsYuXN0sqI62jBCxCTFvK0T8AAAMjx3FcCTfi4uI61CTO4/Gwd+9erF27ts3EA6JfSqWSHSvDfO4hxBBt27YNvXr1grW1NYYOHYrz55vSEcaOHYv58+c32z89PR0WFhbNrn30pU4mQ4M6ntvWAK5pCOksNgGLxmmSR8ybN0/jVMIhQ4Zg2rRp8PHxwYgRI/Dbb7+Bx+Phww8/5Kr8NjHNHxJ/w2zAYlKCsvQ0fpAhVS/C8wjw0+pxRa4uAIDKIv2PHzxz5gw77mvz5s1ITk7G+vXrAQASiQReXk3NZnfu3MGzzz6LyMhIpKSkYOXKlVi4cCGOHj2q97of1VBfzya3eQYFcltMJzHjBzOSLursHBcOxgMAgjScBNARIldm/GCxTsYbEm51ZjFIez788EN8/vnniI2NxYULF2Bvb4+JEyeirq6O3Wf27NlIS0vD77//jvj4eJw+fRqLFi3S6s+mD0zqXNblFCgaGjmuhpCW2TqK2MVT5QWF7exNCDEU1xJOQJpxGzYiB4ycbX4pWIDm1+aaNokT/bqtHs/sF0YNWJ3VoQYsFxcXCAQCFBQ077YuKCiAWCxu8TW3bt3CggULMGXKFMyZMwc8Hg9nz56Fp6cnALCva+uYYrH4sdSsxsZGlJaWtnre1atXo7Kykt1yc3M78qM+hmlasXHkdmQHXyiE2Fd1wy031XQSsBiNDQ3Yu3odzu7/L3g8Hma+uxpj589mv9/NU4Kl33yB4KfGoUEux/5//gsHP/gUika6UNIUk4BFIzsIMU0px1QNWP7hT8BGZD5jpoRCIQDg+PHj7Nc0aRJ/5513UFhYiK+++qrdc2i7uZu0LU/daO4RYJijdggxRmwjvjM1YBHj1XQ9Q+9j0tyaNWs0fhBtbW2NDRs24ObNm/j555+Rm5uLESNGoKLCMFNipBnqBCx/w/xcxFkDVrpqDKG2fy9MYhMXCVgikQgWFhbNNqahe/78+Rg7dmyz/U+ePInQ0FBYW1vDz8+vWUIW15j7lj36GOcYwoAI1Th7XYwfZOSlpaNBLoeNyAHOHi3f4+4skToJuorGD5qsji4Gedj8+fMxbdq0x76+du1aSCQS2NjYIDIyEhkZzReAl5WVYfbs2RCJRHByckJUVBSqq6u190Ppid8Q1fjB2+dp/CAxXMz4wcriEjRSEwIhRkOpVCJBnYI16pVZsLKz5bgi/evItTkxPJnqz0eSQD+zesaoTQJdnyApKQlJSUnsf589exapqal47bXX8M477+jsvDExMdi0aRP73w4ODl1qwqpRpytxnRok9vUBXyiArKIS5fmmGTuqVCjw04aPIKuswpPR8zDprTdhIxLh1tlzmPfJv2Dn7ITK4hLELV+NOynXuC7X6LAPLCgBixCTVHz3PvJuZcAj0B8Dxo3C+QP/47okvejeXbW6t6io+UOSgoICBAUFtfia4cOHIyoqCiEhms2yXr16Nd59990u1Uk0xyRgSSgBixCtkVVUwtHNlT4HEqP2QH09Y21nB4GlJZvsRkhsbCw++eSTFr/3aNPKqVOn0K9fP32UpRX56qQnNx9v8AR8g0rr4AuF8B7YH4DpJWBVFOo/AcuU5KbeQtiUZ+DZ1/gSsGwdRfDso6o7PemCzs7T2NCAgsxsePYJgGdQgFZHeDq6qd/HHCS5EWLILHg8+A4eBADIOEcNWMRwOUlo/CAhxirl2HE8lXUH7r17YcRLL+D3XYazSEIfOnJt/qi2GsiJflSVlCL/djbEvj7wfWIQrv9xkuuSjE6HErCKi4vR0NAAd3f3Zl93d3dHfr5mF4gNDQ24cuUK/PxUN0eY17V1zPz8fLi5uTX7Pp/PR7du3Vo9b319PaqqqpptXVGtbsCydeK2088zSLVqLDfN9NKvHnX4sx345ZOtAIDxC+fija+2wc7ZCfeu38SnL86n5qtOako+oAQsQkwVO4bwqbY/zJoze3t7fPPNN4iOjkZJiWYrgmNiYiASidiNSfMkupGXrk7A8tfuAzVCzBnTiE8jCIkxq616gMaGBgCALTUTEjNRJs1HbXU1BEIhXL16cl1OMz379YHQ2gpVJaUozL6r13M3JWBpdzSjo5sqOaiSgwQsU5KTegtA071MY+I/NAw8Hg/SjNuoKtZtghRzj1fbo9cdHhpBSAhp4hnkDxuRA2oqq8ziGQsxXs7qBqwyqfaacwkh+qFUKJAQq0rBGj3vJVjZml8KFjFuty+oxhD6h9MYws7oUAOWXC7HpUuXMH78ePZrFhYWGD9+PBITEzU7IY+HAQMGQCqVAgCys7MhlUqbHdPBwQHh4eHsMRMTE+Hs7IzQ0FB2n3HjxoHH4+HcuXMd+RE6TaZuWrHleAShR5DqYtxcLg5O7NmL79+NgUKhAABc+t9v2PbqG6goMJybYNHR0cjOzkZNTQ2SkpIQFhbW5v4zZsxAamoqampqcPXqVTz99NN6qlSFErAIMX1Xj6nG8PkPDYONyDzG5DFNVK7qMQuM1prEfX194ePjg19++QVyuRxyuRxz587Fc889B7lcjt69H3+Io+3mbtI2JgHL0Z3SegjRFmrEJ6aCfS/Tvw/EjORnqsYQSgxsDCFX4wcBQKr+nXTzkMDawV5rxxW5UQKWNjAjxZ0lYqP77BEwVPfjBxnMPV7PIO02YDmqr42pAYuQ5vzCVA8Ssy4lQ6l+5kCMl7OzMwAgJycHZWVl2LVrF+zs7DR+fXx8PJRKJaZMmaKrEjvNSawaQWiqk3AIMXXJv/2Oojv3YOfkiGEvTue6HEI6hBlD6BsW2s6epCUdasACgE2bNiE6Ohpz585FUFAQtm/fDjs7O+zererkjIuLw8aNG9n9//nPfyIyMhI+Pj4YNGgQvv32W3h7e2PXrl3sPp9++inWrFmDyZMno3///vj666+Rl5eHAwcOAADS0tJw+PBh7Ny5E2FhYRg2bBi2bt2Kffv2sY1cuiZjRhByvFqcacDKS8toZ0/Tce6nQ/j3q69jz4rV+G71OjTU1XFdUjMbN27EunXrEBoaipSUFBw5cuSxBgBGREQE/vOf/+DLL7/EoEGDcODAARw4cECvow+qy9UNWEZ284sQornC7LuQZtyGQChEvzEjuS5HL+RyOQBgzJgx7NfaahJPS0tD//79ERISwm6HDh3C8ePHERISgvv37+urdNKK+poaFN/LAaD91eCEmKumaxpuF5UQ0lXMohJ7uqYhZoQZtyc2oAYsnoCP8OmTATStkNWn2qoHKM1T3ReU+GkvBYsZQVhZZDiL/4xRXbUMRXfuATC+FKyAiCEA9NOAxTSqeQRq93fU9D6mBixCHuanTnLI5ODfLaJ9zHPGqVOnYtKkSRg1ahRiY2M1eu3y5cuhVCp1WV6XOIlVU4HK8ws5roQQ0hmKxkYci90DABgz72VY2lhzWxAhHcBc30v8fWHfzZnjaoxPhxuwvv/+e6xatQrr169HcnIyQkJCMHHiRBQWqj4EeHl5QSKRsPs7Oztj586dSE1NRXx8PEQiEYYNG4bU1FR2nw8//BCff/45YmNjceHCBdjb22PixImoe6jRZvbs2UhLS8Pvv/+O+Ph4nD59GosWLerKz94hzApbLkccWFhYwDPQfEYQPiz7ylVcSzjBdRktiouLw549e5CamorFixdDJpNhwYIFLe67bNky/Pbbb/j444+RlpaGd955B5cvX8abb77Z6vEtLS3h4ODQbOuK6jLVe5keVhBi2q6qxxAGPzWO40r0a968eRo1idfV1eHGjRvNtvLyclRVVeHGjRtsQxfhFvMwQhJAYwgJ0QZ2BCGlBhEjRwlYxBzlZ6jSnsRabDTqqiHTJsPFqweqSkpx4WA8JzUwvxdtfV60sLBgk4MqaARhl7FjCPsYTwOWi1cPdPOUoEEu10uyG3PN081TotUEaxEzgpCS3Ahh8QR8+IQGA2hKdiDGKygoCJGRkQCAixcv4syZM1i6dClefPHFZs8oWxIcHIyVK1e2+hzHEDhLVAlYNIKQEON1Jf4oiu/nwL6bMyJemMZ1OYRorLq8gr1OoRSsjutwAxYAbNu2Db169YK1tTWGDh2K8+ebVgONHTsW8+fPZ//7rbfeYveVSCSYNGkSkpMfv3hdu3YtJBIJbGxsEBkZiYyM5glPZWVlmD17NkQiEZycnBAVFYXq6urOlN8psgruRxB28/SAtb0d5HV1KLxzl7M6iIpQKAQAHD9+nP2aUqlEQkICIiIiWnxNREQEEhISmn3tyJEjre4PAKtXr0ZlZSW75ebmdqnuB2VlAAA7J2rAIsSUpagbsAKGDdHqOA5Dt2bNGo2bxInhk6ZnAgA8AqkBixBtqK6gEYTkcfv370dubq7GozdGjx6NS5cuoba2FhkZGZg3b54eqmyOHatO72ViRpgRhIbSgCWwssJTr6keWibE7kF9TQ0ndeSpPy9qazSjnbMT+EIBFAoFqkpKtXJMc8YsIO3RJ5DjSjTHpF/dSb6G+ppanZ+v9kE1SnJU9/o8tLjwhE3AKqYGLEIYPfoGwdrODtXlFez9BmK8IiIiUKZ+1sFISEiAQqFAeHh4q6+zsbHBd999hyVLlqCgQLPxftpeJK8JJ4k7AKBcSiMICTFWisZG/B4bBwAYM382hNZWHFdEiOYyz6tSsPyoAavDOtWAZY4MYQQhM34wPzMLioZGzuogKt27q1aSFT0SSV9QUACxej73o8Ri8WMf6tvaHwBiYmIgEonYzdPTs0t1MwlYds60WpwQU1aQdQf5TNtJJgAAIABJREFUmVmqMYSjR3Bdjt7ExsZq3CT+qPnz52PaNFqJYkiYB2oeATSCkBBtkJXTCELyuOvXr2PJkiUa7durVy/8+uuv7MjeTz/9FLt27cJTTz2l4yqbowQsYo6YEYTde3oaxPiK4bOmw9HdFWXSfCT+cICzOvLVvxdtJWA5uqnSrx6UlNK9Ny3IZRKwjGgEoT7HDzJy09RjCLX0e+ILBOyoEErAIqSJX5hq/ODti1cMevQc0YxYLEbxI02mjY2NKC0tbfN5y+bNm3H27FkcOnRI43Npe5F8e3gCPttIW5ZPCViEGLOL/zuMkpw8iFy6Y+iMqVyXQ4jGMi+o0kL9hgzmuBLjQw1YGqpWP6ywdeLuYQUT152bal7jB81dfX09qqqqmm1dUV2uWi0usLSEla2tNkokhBioq8dUCX3mNoaQmA4m5tbdtxd4Aj7H1RBi/AxhrDoxPO+99x4OHNCseWLx4sXIzs7GqlWrkJaWhm3btuHHH3/EihUrdFxlc8w1DSVgEXNSXVaOqpJS8Hg8uPn04rQWKztbjF84FwBw9N9fopHD8d3aTsBiHnZWFFHTijYw9zBde3nBys7w70Hx+Hz2AUN64gW9nZe57vEM0s7CEwcX1aLRBrmc/fxHCAH8hqgSHG5foPGDhiwmJgZKpbLNLTCwc8mKkydPxrhx47B8+fIO16TNRfLtcXR1BY/Hg7yuDtWl5To9FyFEtxQNjfh9lyoFa9yCORBYUQoWMQ5Zl5KhUCjg5uPNXicTzVADloZk5dyPIPQMVDVgMRflhFslJSUAAFdX12Zfd3d3R34rqxLy8/Ph7u6u8f66IK+tYyPUKQWLENPGjCEMHB5uFDe7CXlUWV4+ah9UQ2BpCbde3lyXQ4jRY5pWbDlM9SXGrTMj1XUxroNN9aVmQmJm8jNUYwgl/tyOIRw99yXYOTuhMPsuLv5ymNNaiu7eQ4NcDmt7Ozh7tJ52oSlHd9U9HkoN0o7q8gqUSVX3vIwhBatn/z6wcbCHrKISOTfT9HbePPWoRo9A7TRgidzU4wepkZAQFl8gQK+QgQCaRuoQw/TJJ58gKCiozS0rKwv5+flwcWn+QJjP56Nbt26tPm8ZN24cfH19UV5eDrlcDrm6ifynn37C8ePHW61J24vk28OMH6woKKK0NkJMwMWD8SiT5kPk6oLw6ZO5LocQjdRUVrGJxkwTO9EMNWBpqLpCdYPXytYWfKGQkxqYGxVMLDXhFvPhfMyYMezXLCwsMH78eCQmJrb4msTERIwfP77Z1yIjI1vdX1fYFeNOtGKcEFOWn5mFwuy7EFhaot8Y8xlDSEyHUqmElBlDGKidsTKEmDNmUQk14ZPOam2kuqOjI6ytWx6JpotxHZSARcyVNFM1bk+spbSnzrBzcsToeS8BAA5vjYWikdsxfYqGRhTczgYASPy7/nmRTcAqLOrysYiKMY0hZMYPZpy7CKVCobfzMvd63X19wBcIunw8R1dqwCLkUV4D+sLK1gZVJaXIz8ziuhzShuLiYty6davNTS6XIzExEc7Ozs1eO27cOPB4PJw7d67FY7///vsYOHAgQkJC2A0AVqxYgfnz5+v8Z9OUs7oBi2liJoQYt8aGBvy+62sAwLioVzjrMyCko5imdWaMM9EMNWBpqO5BNXtTiYtVtvbdnOHo7gqFQsE+iCSGYd68eZg7dy6CgoKwfft22NnZYffu3QCAuLg4bNy4kd13y5YtmDhxIt566y0EBgZi7dq1eOKJJ7B161a91syuGO9GDywIMXVMChaNISTGih0rE0ANWIR0FTNW3drOTisP9wjRhC7GdTQlYNH1DDEv+RmqBiyJH3cJWOOi5sLazg45N2/h2rHWkyL0Scr8XgK63phGyUHax4wh9OzTuXFR+hQwNAwAkJ6kv/GDAFCeXwBZRSUEQiHcfX26fDwR24BV0uVjEWIqfNXjRW9fvMJxJURb0tLScOzYMQDA4MGDMWzYMGzduhX79u2DVCoFAHh4eCA1NRVhYaq/3wsKCnDjxo1mGwDcu3cPd+7c4eTnaImTWJXqWZ5f0M6ehBBjcf7n/6G8oBBO7m4YMm0S1+UQopFM9dhmv3BqwOoIasDSkFKphKxC9cCCizGETOpDyb0c1Mlkej8/ad2aNWuwfv16JCcnIyQkBBMnTkRhYSEAwMvLCxKJhN03MTERL7/8MhYtWoSUlBTMmDEDU6dOZT/o6wslYBFiPlKO/g4ACBw+FFa2NIaQGB+mAcsjQDvjOAgxZ7VVVeyiElsa3UY6obWR6hUVFaitrW3xNboY11FdxiRg0fuYmBepOrFD7MdNApajuyuGv/Q8ACD+sx0GMxKHbUzTQjKYo5tqBGFFASVgaUuOugGrR1/DbsCysrWF98D+AID0xPN6P3+uegyhZ1DXr3tElIBFyGP8wlSjczLPX+K4EqJNCxcuBAAcOnQI8fHxOH36NBYtWsR+XygUIigoCLZGdk+0KQGLGrAIMRWNcjmOf/UNAGD8wrm0MJIYhexLKWhsaED3Hp5wloi5LsdoUANWB7ANWBw8rGgaP5iu93OTtsXGxqJXr16wtrbG0KFDcf58002asWPHPhZd++OPPyIoKAjW1tYYMGAADh8+rO+S6YEFIWZEmn4bRXfuQWhlhb6jh3NdDiEdlndLNY6DRhAS0nUPLyqh0W2kM2ikOiHcKshUjdpzdHeFjUj/iwMjX1sAoZUVbl+6gltnkvR+/tbkpTMJWF3/vOjoqmrAqiyiBixtyVGPIHTz8YbAyorjalrnGxYKvlCA4vs5KM3J0/v52eseLYxqZJPcCqkBixAAEFhaolfIAADUgGVqysrKAACenp5wcnJCVFQUqqur2e/fvXsXFhYWOHnyZKvHsLCwwMGDB3Vea0c4iVUNWJSARYhpSfrxECoKi+AsEeOJKc9wXQ4h7aqTyZBzIw0A4DcklONqjAc1YHUA+7CCiwQstgErQ+/nJqbnQRk9sDB1fKEQPfoGYuiMKZjxzt+wfN9XCH/+Oa7LIhxhxhAOjBzLcSWEdFx+RhYUCgVEri6w7+bMdTmEGD0ur2mIYRowYACCg4MBAD4+PggODkbPnj0BABs3bkRcXBy7744dO9C7d2988MEHCAwMxOuvv46ZM2di8+bNeq2ZGUEotLaCpY21Xs9NCJfqZDKUqBtDJP76HUPYvWcPdlTG4c++0Ou528OMIHT17gmBpWWXjsU0rlQUUgOWtlQWFqGqpBR8gUArKWW6EhChHj+YqN/xgwzmnq+nNhqwXNQNWMXUgEUIAHgP7AehlRUqCotQdOce1+UQ0i4ndQJWOSVgEWJSGurrcXz3XgDA+IXzwBPwOa6IkPZlqJvXfcNoDKGmqAGrA6rLVTd5uRlBqIqfzrtFCVik65j3MiVgmQaBpSV69uuDiBem4YW1f8eK/Xuw8dzvWLF/D15Y+3dEvDAVPfv1Qa/gAVyXSjhy9dhxAECfkcNgaWPDcTWEdEx9TQ1K7ucC0E6qASHmjr2moRGERO3MmTNITk4GAGzevBnJyclYv349AEAikcDLy4vd986dO3j22WcRGRmJlJQUrFy5EgsXLsTRo0f1WnN9TQ3kdXUAaFEJMT/57BhC/TZgTVyyEHyBAKl/nkX25RS9nrs9lYVFqC6vAF8ggHvvXp0+Dl8ggEP3bupjUuOKNuWqxxB69ul6c5GuBEQMAcDN+EGg6Z4vcw+4KygBi5Dm/MKfAADcvnCZ40oI0YyzmBlBmM9xJYQQbUv68QCqSkrRvYcHnpj0NNflENKu2xdUDViUgKU5GjDaAbIKbh5WCK2t4NZLddObuWFBSFdUUwKW0RJYWcEjwBc9+gapt0CIfXuDL3z8r/Pq8grk3ExDzs1byEm9hXtXb7R63OjoaCxduhRisRgpKSlYunQpLlxof9XnrFmzsG/fPhw4cADTpk3r0s9GdCc3LR3F93Lg4tUDfUcNQ/KR37kuiZAOybuVAVfvnvAI8ENGEjcr0gkxFU2j26gBi6iIRCJUVVW1+L1Hx6kDwMmTJxEayv1Nl+ryCji5u8HO2ZEeTBCzkp+ZhX5jRui1AUsS4IuQpyMBGF76FUOacRt+YaEQ+/siN61z985ErqqmlYb6erZhmWhHblo6gkYMRY8+gVyX0iInsTvce/eCorGRs/FkhVl30VBfDxsHe3TzlKA0V9rpY4lcugMAKoqoAYsQAPALU312pfGDxBhY2dnCRuQAACjPL+S4GkKItslr63Bi915MXrUU4xfNw8VfDkPR2Mh1WYS0KvvKVTTI5XCWiNG9Zw+U3M/huiSDRwlYHdA0rkO/Dysk/r7g8fmoLC5BVUmpXs9NTBMlYBmfwGHhqmSrpAQs++5LPL/mrwifPhmeQQHgCwV4UFqGtNNJSIjdgz0rVmPDhGl4Z+RExL62HPFbtuPq0T/anBm/ceNGrFu3DqGhoUhJScGRI0fg6uraZk3e3t74+OOPcerUKW3/uEQH2DGET43juBJCOi4vPRMAJWARog2ycvU1DTXiEyNHi0qIuWLG7elzlNvTb74GHo+H5N8SOt3cpGtS9edFjy58XmwaP0hNK9qWk3oLgOEmYI2cPROA6uFCTWXLTcm61tjQgPzMbACAR2Dnf098oZAd3V5FDViEQGhtBa+B/QAAmecpAYsYPid1+pWsohL1NTUcV0P0KTo6GtnZ2aipqUFSUhLCwsI0et2sWbOgVCrx888/67hCoi1nv/8vHpSWwaVnDwx65imuyyGkTfLaOjbgg1KwNEMNWB3A1QhCzyDV6rC8tAy9npeYLuZhhb2zM8eVEE0MmTYZUds+Ro++geALBKgqKUXqn2dxLHY3di/7O96LnIq1o5/BztdX4PDnX+BawgmU5XUsBSAuLg579uxBamoqFi9eDJlMhgULFrS6P4/Hw969e7F27VpkZWV19UckenD1mKoBSzWG0JrjagjpGPaBWiA1YBHSVU0jCPU/Vp0QbaJFJcRc5WeqGrDE/vpJwPIO7o9+Y0eisaEBv23bqZdzdkZTY1rnfy9MAlYlNa1oXe5NVQOWxN8XPAGf42qac+jeDcNmTQcA/L7ra05rybuluvfrGdT5MYRM+lWDXE5JboQA8Bk0EAKhEGXSfJTk5HJdDiHtcpbQ+EFzRYvkzUd9TS1OxH0HAIhc9CosLCw4roiQtmWqxzj7DRnMcSXGgRqwOoBZLa7vEYQe6otuQ11lSIxP02px83tYIbCywuBJE/HC2r9j1NwX0bN/X4O7+fewCW8sxKz1/we+QIALB+Ox/snn8O6YZ7HrjZX47fNYXP/jZJvJVu0RCoUAgOPHj7NfUyqVSEhIQERERKuve+edd1BYWIivvvpKo/NYWlrCwcGh2Ub0K+fmLZTk5MLSxhpBI1r//y0hhoh5EOHu6wO+gCZoE9IVNIKQmApKwCLmqjD7HhobGmArEkHk1vYDGW145i+LAQAXD8aj6M49nZ+vs6RaSEx1VP8+KwqLtFITaVKam4eaqgcQWlnBvXcvrstpZuyCObC0scadlGu4dSaJ01qYe78eXWjAcnBVNWBVUpIbIQAA3zDVg0JKvyLGwkkiBgCUSzt/z58YJ1okb17O7vsvaqoewLWXF7wH9ue6HELalHnuIoCmsc6kbdSA1QGySqYBS88JWIGqi+48asAiWsI8rLB1FMGCZx5/Dbj7+mDK35Zj7R+H8HLMWgydMQVT/roMy//zJTacOYbFuz7HhCXRCIgYAis7W67LBU/Ax6z1/8BTr0cBAI59sRv71ryHigLt3gju3l11Y66oqPlxCwoKIBaLW3zN8OHDERUVhejoaI3Ps3r1alRWVrJbbi6tOOPC1aOqRrtgGkNIjExZXj5qqh5AIBTC1ceb63IIMWoyJjWImlaIkWtKwKL3MlHp6MiOZcuWIS0tDTKZDPfu3cOmTZtgZWWlp2o7r1EuR9Hd+wB0P4YwICIMfkMGo6G+Hkd3aLb4hivM6DaRq0un/15wVI8gpMYV7VMqlWxzUY8+gRxX08TBpTuGzVSlXx3Ztovjah5qwArsfAOWI5PkVkzvY0KAplE5ty9c4rgSQjTjrB5BWNaFRdfEuNAiefNUJ5Ph5snTAIABT47hthhC2nH36g3I6+ogcnWBGz2faZd5dF5oCfOwwlakvwYsCx6PXb2Xe4tGEBLtqK5QvZd5fD5sHOw5rkZ3BFZWGDz5abwZtwNvH/gOo+bMgq1IhNJcKU5+/R/cOHEasopKWNnawD/8CTy1eAFei92CDWeOYsX+PZi2+i2ETBivl1XFD7OytUXU5x9jyLRJUDQ24od17+O3rbF6raE19vb2+OabbxAdHY2SkhKNXxcTEwORSMRunp6eOqyStCblqHoM4ajhEFob/sMlQh5GYwgJ0Y7qcm4WlRCibeac6kta1pGRHS+99BLef/99rFu3Dn369EFUVBRmzZqFjRs36rnqzslnxu356XYM4dPq9Kuz+3/uUvKyPtTX1KD4Xg6AzjemiSgBS6dyU1VjCD2CAjiupMm4Ba9AaG2F7CtXkZ54nuty2Guebh4S2HTy/jPzPqZGQkJU91h79usDgBKwiPFwUjdgldMIQrNBi+TN17WEEwCAAU+O5rYQQtrRUP//7N15WJT1+vjxN8MOgoILmwkoCpoLYqaYO1qmttimlctxK+qXp455Ks0WtSQ7qadO5jeX1NS0xbKsDMUUc98RDVzRFFkFBFlnGH5/DDNKgDIwM88g9+u6nqvjzLPceAZn5vncSwkXjsUDMoawJiQBywiGClsL3uBt7n8XDs5OFBcUGG4kCVFXWk0phbl5wJ1ZMV6h29XctwkM60KpRsPxmB0sifwXc4c+wU//+YQvpvybt/sM4cNHnubbWR9w6KfNXL2cjMrWlpYdgun9zJOM+eg93tn2EzM2b+DpuW/T88lHzdou361ZU15c8RkhvXtSXFDIF/98nX3f/Wi26+mTqP6+MOHl5UVqauUveW3atCEwMJBNmzahVqtRq9WMHTuWhx9+GLVaTevWVS8AlJSUkJeXV2ETlnfpZAJZySk4ujgTcl9PpcMRwihX9AlYbSUBS4i6KChPxHdtLEkron6TDlji74wZ2dGrVy92797NunXruHjxIlu3bmXdunXce++9Fo66dlLO6kaMeLc1XwJWx4H9aNWxA8UFBWxbtsps1zGlFH1iWi0TsBqXfy/OzZAELHNITrCuDljuzZsR/tSjAGxZrHz3K4Ci6/lkXtLd/61t4Yl7s/IRhBmSgHWne/HFF2vc+XHEiBEcPHiQ7Oxsrl+/ztGjRxk9enSFfcrKyqrcpk2bZtgnKSmp0vOvv/662X7GugoM64ytnR1XLyeTLcksop5o4lOegJWarnAkwlpJkfyd49Se/ZQUFtG0pV+dOqAKYQlnD+qS2SUB6/bslA6gPim4pq8Wt9xihV95VVjK6XOUabUWu6648+XnXMPZ3Q3XJk3I4C+lw6kzO0dHutw/kPAnHyWwa2fD41nJKezb8CMHfviZvMzKH0bLyspIO3+BtPMXDIlO7i2aE9i1MwGhnQgM64JfcFuatvSlaUtf7nnoQUD3RhO9aCnnDx8z2c/QItCfyYsX4unnQ97VLJb/v2lcOplgsvNXRa1WA9C/f3/Wr18PgI2NDREREXz66aeV9k9MTKRjx4rzqN977z3c3Nx4+eWXuXTpklnjFXV3fOt2+v/jGbrcP5D4bbFKhyNEjV0p7wQqHbCEqBvDKGrpGiTqOemAJfRqM7Jjz549jB49mu7du3Pw4EECAwMZOnQoq1evrvY6Dg4OFUYUKjmyI/WMPgHLPCMIbVQqHpzyHAA7V3/N9axss1zH1FJOn6VTRD9DJ3ljuZePILwmnYPM4rKhA1ZbbGxsKCsrUzSegRPHYO/oSNKROE7vPahoLDe7kniGZne1xC+kHecOGt+xR/86zs2o+YKsqH+eeuopFixYQGRkJPv37+eVV14hOjqa4ODgSh1UALKysnj//fdJTEykpKSE4cOHs2LFCtLT09myZQtApS4rDz74IMuXL2fDhg0VHn/rrbdYunSp4c/WXGQZ1F23QCjdr0R94lGegJWdYt3dR4Xp1KVIXk+l0vVbUavVBAcHc/78+UrHlZSUUFJSYsrQRR2VFBaRuHsfnQf1p9Og/ob730JYo7P7D8NL0Oaerlbxfc6aSQKWEfTV4nb29jg4O1NSWGj2a+oTsJITT5v9WqJhyc/OoVmrljTyrN8V495Bren5xCN0e2iIYTxoqUbDye1/sO+7Hzm994DRbwK56RnERW8jLnoboGtX7d/lbgK7diGga2dah3UhqHsYQSsXc3rfQaIXLePCseN1+jkCw7ow4ZMPcWnsTsaFv1j6wlSuXrZcC9hx48axZ88eDhw4wCuvvIKrqysrVqwAdJXkycnJzJgxg+LiYk6ePFnh2Jwc3eLX3x8X1iluyzb6/+MZ2ve7DztHRzTFxUqHJESN6Mdx+Eg1kBB1oh9F7ezuho1KJUUeot6SDlhC71YjO0JCQqo8Zt26dTRr1oxdu3ZhY2ODvb09ixcvJioqqtrrTJ8+nXfffddkcdeFvtOTd+tAs/xbHjbsAbyDWlNwLZcdq74y6bnNqc4dsGQEoVllXPgLdVExTq6uNG3VksyLyhVwubdoTs8nHgEg+jPr6H6ll3zqDJ0HD6h1F4TGzfUJWPI6vpNNnTqVpUuXsnLlSgAiIyMZNmwYEyZMYN68eZX2j42tWID3ySefMG7cOHr37m1IwEpLq5js8cgjj7B9+3aSkpIqPJ6Xl1dpX2vV5t4wAM4ePKxwJELUjI1KRWOvFoCMIGxIpEi+YYvftkOXgBXRj+hFS29/gBAKuXTiT4oLCmnk6YFXUGtSy79/i8pkBKERSgqLUJcvVFuqytY3RPdlWxKwhKkpMVLTlDoO7MdLX37Ov39YS59nn8LF3Z2rl5P55b+LmTP4UVZNncGpPftNkoFbXFDA6b0Hif5sGZ9P/idzhz7B7vUb0KjVtOvZnSmrP+e5/1tIq8531+r8nQcP4PklH+PS2J0LcfH8b8xzFk2+Apg5cyazZ8/m2LFjhIaGMmTIENLTdW2OW7VqhY+Pj0XjEebzV/yfZKek4uTqSsh9PZQOR4gaSz17Hq1Wi3uzpjRq6qF0OELUW/quviqVChd35bq3CFFXhg5YkoAlaqFfv37MmDGDF198kbCwMEaMGMGwYcOYOXNmtcdY08iOrOQrlBQWYe/kSNOWviY9t62dHQ+8OAmA379YTVHedZOe35z0I6u9g1pjozLulqejiwtOjVwByJUOWGahLS01VPUrPYYwYtJY7B0dOXf4KGf2H1I0lr+7kqj7O/ILqV0Clltz6eR2p7O3t6dbt27ExMQYHrtd58e/GzhwIMHBwezcubPK51u0aMGwYcNYvnx5pefeeOMNMjMzOXLkCNOmTcPW1rba6zg4OODm5lZhsxQnt0aGf2ukA5aoL9yaemJnb0+pRkNuFdM8xJ1t3LhxjB07lpCQEBYvXlypSH7u3LkAhiL5m7ecnBzy8vI4efKkIaFL1A9/xu6mVK3Bp20bmge0UjocIapVqtFw4WgcAG1lDOEtSQKWkW6MIXS3yPX0HbD0X76FMJXr2boRAvVtwaJ93/v419crGf/xBwR27UypWkPclt/5/LmXiRr6JL8v/7LKUYOmdC0tg+/f/4gPhj3F3u82UqrWEHxfT15eu4yJiz6iZYeqq6yr0mf0SMZ89B72jo6c+D2W/5s0xZAcZ0lLliwhICAAJycnevbsyYEDBwzPDRgwgPHjx1d77Pjx4xkxYoQlwhQmcnyrbjxLl/sHKhyJEDVXUljE1b8uA+Bby7EyQgjQakopzNWNCZExhKI+y8+REYRCx9iRHQBz5sxh9erVLF++nBMnTrBx40ZmzJjB9OnTsbGxqfKYkpIS8vLyKmxKKdNqSTuv60jiHWTaMYQ9Hn+Ypi19yc3IZNdX35r03OZ29VIyJYVFODg7GZ2Yph/bVph33SId7xsq/RhCv/btFIuhiVcLej7+MADRi6yr+xXAlfIiXK/WgdiWj1g1hqEDlizc37GaNWuGnZ1dpS5UaWlplcYI3szd3Z28vDxKSkr45ZdfmDJlSoUkrpuNGzeOvLw8vv/++wqPf/LJJ4waNYoBAwbw+eefM2PGDD788MNqrzl9+nRyc3MNW3Ky5QpO23QLRWVrS3rSRXKls6GoJ5p467pf5WZkoi0tVTgaYWlSJN8wFeVdNxQEdIror2wwQtzG2fIR6UHlXUZF1SQBy0iGBKzG5r/J696iOY08PSjVaEg5W3lerxB1kZ+t74BVPxKw2oXfyz/XLGXSoo9o2SGYovx8ti5ZwZzBj/Dlq2/WatRgXWWnpPLdrHl88NBT7P9+E6UaDR363se/vl7BhE8+NCRQVsXGxoaH//1PHn39FVQqFbvXb2Dlv2agLpJxcML8jm/RJWC173sfKrvqKxWFsDb6rga+7WQMoRB1oR9DWF8+BwpRlfwc3XdzWzs7nNwaKRyNUNLNIzv09CM79u7dW+UxLi4uaP82tq+0fJGrugQsa2MYt9fOdAlYDs5ODH5eV3yz9fMV9e77aZlWS+o53f0zHyMT9t0NY9uka5A56Tv8K9kBa+Cksdg5OHD24BHOHbS+rjg5aenk51zD1t4O7zaBRh1ra29vKLSUhBPxd3l5eYSGhtK9e3fefPNNFixYQL9+/arcd8KECaxdu5bi4orvAwsXLiQ2Npb4+Hg+//xzXn31VaZMmYKDg0OV51Gye2Sb8s4MZ63w91yI6jTx0SVR5qTUjzGfwrSkSL7hit+2A4BOg6p+XxbCWpw9oBvr3PqerkZ3nW5IavU38+KLL5KUlERhYSH79u2je/fuNTpu5MiRlJWV8cMPP1R4vKysrMpt2rRphn2SkpIqPf/666/XJvw6MYxta2z+Dlh+wbrFxfSki2iK69dNL2H9DBWTG+99AAAgAElEQVTjHtZdMd6mexj/b+Vinl/yMf5dOlJcUMjvX6xm7pDH+e1/S8i7mqV0iGQlp/DNO3OZ9/DTHPzxV7Slpdw9oA9Tv13FuIVRlW6I2zk4MPo/c+g39mkAfl7wKd+//xFlf1sAEMJcLsaf5HpWNs5ujQgI7ax0OELUmH5kibELakKIigrKE1dcLdTVVwhz0BQXU1xQAEgyodCp6cgOgE2bNvHCCy8wcuRIAgICGDRoEHPmzGHTpk2VErOsVeoZXaKRd1Brk53zvqefwL15M65eTmb/hp9Mdl5L0v+9+LQ1LjGtsZeug5qMHzSvZEMHLGUSsJp4e9FD3/3qM+vrfqV3YwyhcZ3C3Js1BUBTUmIoIhZ3nszMTDQaDV5eXhUev1XnR9CtwZw7d464uDgWLFjAd999x/Tp0yvt17t3b0JCQli27Pa/I/v378fe3p6AgIAqn1eye2RQd11nhnPlC4VC1Ace3rrf6+xUScASoiE5sX0nWq2WVh070MTb6/YHCKGQy3+eouh6Pi7u7vgGyxpNdYxOwHrqqadYsGABs2bNIiwsjLi4OKKjoyu1ev87f39/Pvrooyrnint7e1fYxo8fj1arZcOGDRX2e+uttyrs97///c/Y8OvsxghC8yet6Ntx6xcbhTAla++AFRDamchl/+PFLxbRulso6uJiYr9cx9yhj/PLws8UGdN3O1cvXWb9zDl8+OgzHPklGq1WS+dB/Zm2YQ1jPnoPrzaBOLu78/ySjwl9IAKNWs2a199h+4q1SocuGpgyrZbE3fsAaN8nXOFohKi5FH0HLPlwL6yEsYUpjRs35tNPP+XKlSsUFRVx6tQpHnzwQQtFe4M+EV9GEIr6zvCdxsqLSoRlGDOy47333mP+/Pm89957/Pnnnyxfvpzo6Gief/55pcI3WupZ0yZgObk1YuCEMYBuLFupRmOS81qavmOqsQn7+rFt16RrkFmlnDlPqVqDa5PGiiwuRUwai529PWf2H+L8oaMWv35NJZ/SdQrzDTGu869+lGZuhowfvJOp1WoOHz5MRESE4bHbdX6sikqlwtHRsdLjEydO5NChQxw/fvy25wgNDaW0tNTwfmstXBq7GxIYzx6SDlii/mjio3tvzEmpPplSCHHnuX41m6SjcQB0ipAuWMJ6aUtLOX/4GABB3bspHI31sjP2gKlTp7J06VJWrlwJQGRkJMOGDWPChAnMmzevymNUKhVr167lnXfeoU+fPjT5W8LH3+eVP/LII2zfvp2kpKQKj+fl5VXa19IKypM+XCzQAcu3vANWcsJps19LNDyGDlhWtvB2V8cODPl/kwnp3RMAjVrNvu9+ZNvSVfVmFEDGhb9Y+8a7xCxZyeDICXR9cDChD0TQefAA8rNzcGvqSWHedVa8/LpVtrsXDUPCzj3c89CDtO/Ti18WfqZ0OELUyJVTugW1Fq0DsLWzq7cLg+LOoC9MiYyMZP/+/bzyyitER0cTHBxMRkblxVt7e3u2bt1Keno6TzzxBMnJyfj7+5NT/pnMkgxdfa00EV+ImsrPycHTz0deywLQjeyYP39+lc8NGDCgwp9LS0uZPXs2s2fPtkRoZqEfQdjc/y5s7e0pLR/FWFv9//EMLo3dST17niO/bjFFiIpI1Y9mNLIDlnt5YWluFe/hwnRK1WpSz53HL6QdLTsEk2PBDh8ePt7c+9hDgHV3v4IbHbCMTsCSUZoNxoIFC1i1ahWHDh3iwIEDvPLKK5U6PyYnJzNjxgwA3njjDQ4dOsS5c+dwdHRk6NChjBkzhhdeeKHCed3c3HjyySd59dVXK12zZ8+e9OjRg+3bt5OXl0d4eDgLFy5kzZo1inynuZU293QFdMnK169mKxyNEDWnT07OlhGEQjQ48TGxtOnWlU6D+vPH2m+UDkeIap09cJgO/e4jqEc3Yr9cp3Q4VsmoDlj29vZ069aNmJgYw2NlZWXExMQQHl59B423336b9PR0vvjii9teo0WLFgwbNozly5dXeu6NN94gMzOTI0eOMG3aNGxtbas9j4ODA25ubhU2Uyi4Vp6AZYkOWCHSAUuYj6Fa3NM6Fiv8Qtox4X//4ZV1ywnp3ZNStYa9320kauiT/DB3fr28eZR2/gJrXnub/zw2mrgtv6NSqXBr6klOahqfjouU5CuhqFN7DqAtLcWnbRs8fLyVDkeIGslOSaUwNw87e3tatPZXOhzRwN1cmJKQkEBkZCQFBQVMmDChyv0nTJiAp6cnjz76KHv27OHixYvs3LmzRpXlpiYjCMWdQv+dppF0wBINUG5GJgXXcrG1s6NFYN0+FzVq6kHf0SMB2Py/JZTVkzGMVdF3wGp6lx8Ozk41Pk4/glA6YJmfvtDU2PF6dRUxeRx29vac3neQpCNxFr22sZLL7wX7BbfDxsamxse5Sye3BuObb75h2rRpNe786OrqymeffcbJkyfZvXs3jz/+OKNHj660BjNq1ChsbGxYt67yYlpxcTGjRo0iNjaWkydP8uabb7Jw4UKee+458/6wtRB0r64jw1m59yrqGQ99B6xU6+oqJ4QwvxPbYgEIDOtCo6YeCkcjRPXOHtSNd24dForqFrk6DZlRHbCaNWuGnZ1dpS5UaWlphISEVHnMfffdx8SJEwkNDa3RNcaNG0deXh7ff/99hcc/+eQTjhw5QlZWFr169SIqKgofH58qqzEApk+fzrvvvlujaxpDP4LQtbF5b/A6NXKlWauWACQnSgcsYXrXs3XVP0pXi3sHteaBFyfRebCuIllbWsqhTZvZ+vkKsi5fUTQ2U0k9c44vX30T3+C2tO/Ti4M//Uqu3AwTCivMzeVi3AkCw7oQ0jucvd/+oHRIQtTIlTNnadOtK77t2pJy+pzS4YgGSl+YEhUVZXjsdoUpDz/8MHv37mXRokU88sgjZGRk8NVXXzFv3jy01Sx0Ozg4VBgLYqqiknx9UYmZv9MIYW43uvpaR1GJEJaWcvYcbbp1xadta8Oo5tp4eNo/cXRx4a/4Pznxe6wJI7S8/OwccjOv4t6sKV5tWnPpxJ81Ou5G4kr9K/6qb5ITTwHD8WsfbLFrevh6c++jwwHYYuXdrwDSky6gKSnBqZErHn4+Nb4/pn8d52XKCMKGYNGiRSxatKjK5/7e+fGtt97irbfeuu05ly5dytKlS6t87ujRo7cswrcmbbqHAboODULUJzc6YMkIQiEamuyUVC6dTOCuu9tzd/8+7N/wk9IhCVGlK6fOUpCbi4u7Oy07BPNXfM2+czckRnXAMlajRo1YvXo1kydP5urVmn3xmzBhAmvXrqW4uLjC4wsXLiQ2Npb4+Hg+//xzXn31VaZMmYKDg0OV54mKisLd3d2w+fn51fnnAcgvrxY39whCn3ZBgO4fXH3SlxCmpK8Wd3ZrhK2d0dNITaLb8CG8umE1nQcPQKvVcuSXaOY98jRfv/X+HZN8dbMrp86wbdkqSb4SViPhj70AtO9TP26gCQGQUj6GUD+qWQgl3Kowxdu76q6CrVu35oknnsDW1pahQ4cyZ84cXn31VWbOnFntdaZPn05ubq5hS05ONkn8+dm6pBVLdPUVwpwMXX2lA5ZooFLPnAeMH7d3s0HPj6fb8CGUajT89NEnpgpNUfpkNN92Nf97adxCOmBZyuU/dYWmLS2YgDVo8j+wtbfj9N4DJB21fPdRY2k1paSc1f1++xnxvadxC0kkFKKRp4fhffH8oaMKRyNEzdk5OuLW1BPAoiN6hRDW4/jWHQB0GtRf0TjqavLkySQlJVFYWMi+ffvo3r17tftOmjSJnTt3kpWVRVZWFlu3br3l/kJ5ZVot5w7qPmPpu46KioxKwMrMzESj0eDl5VXhcS8vL1JTK2dkt2nThsDAQDZt2oRarUatVjN27Fgefvhh1Go1rVu3rrB/7969CQkJYdmy21ci7d+/H3t7ewICAqp8vqSkhLy8vAqbKdwYQWjeBCy/EN2X6yuJMn5QmEdRXh7a0lJAucW3gZPGolKpOLljFx89Npq1b7xL5sVLisQiREP0587dAAT1uAe7ahKahbA2+tHMPkYsqAlhDVQqFenp6Tz33HMcOXKEb775hvfff5/IyMhqjzFXUYmhq68krYh6TjpgiYYu5YyuG6h3UO0+F4UNf4AHX9KNjvp+7nyrH8tWU4a/FyMS09zLE1dyJXHF7K6cOoNWq6WxV3OLjFfx9POh+yPDAIheZP3dr/T094R9jRjV6N6sKQB5mfI6Fg2XvvvVlVNnyM+5pnA0QtRcE+8WABTl51OYa5r1TCFE/RK/bQcAbXvcg5NbI2WDqYO5c+cya9YswsLCiIuLIzo6mubNm1e5b//+/Vm3bh0DBgwgPDycS5cusWXLFnx9fS0ctTCGvsuoJGBVzagELLVazeHDh4mIiDA8ZmNjQ0REBHv37q20f2JiIh07diQ0NNSw/fTTT2zfvp3Q0FAuXaqYaDFx4kQOHTrE8eO3r0QKDQ2ltLTUMNfcUiw1gtAvRFcFJuMHhbmUlZUZvoS6elh+wcKrTSDebQLRlJTw1fR3STuXZPEYhGjoUk6f5VpaBo4uzrS5p6vS4QhRI1fKxw5KByyhJGMLUwBSUlI4ffp0hXGDCQkJ+Pj4YG9vX+UxZisq0X8GlBGEAuMqE8eNG0dZWVmFrbCw0ILRViQdsERDl1reIcc7qPVt9qys9T1dGTn7TQB+/2I1+77daNLYlKQfU+1b3l3+dlw9mmBX/l4so9vMr6Sw0FB8p7//aU6DnhuPrb0dp3bv40JcvNmvZypXTunuCRvTAcvd0MlNErBEwxVkGD94ROFIhDCOR/n4wZxUy655CiGsR8aFv0g9ex47e3s69O2ldDi1tmrVKlauXElCQgKRkZEUFBQwYcKEKvcdPXo0ixcvJi4ujlOnTjFp0iRUKlWFXBRhfc4e1H3OCgjtrNiULWtm9AjCBQsWMHnyZMaOHUtISAiLFy/G1dWVFStWALpfqrlz5wJQXFzMyZMnK2w5OTnk5eVx8uRJ1Gq14bxubm48+eSTVXa/6tmzJy+//DKdO3cmMDCQZ555hoULF7JmzRpyyiteLUWfsGLujkH6RcVk6YAlzMiQgKVAB6wu9w8E4NSeAxRdz7f49YUQOgl/7AEg5A4ZQyjtbe98qWfPoS0txa2pp6E1uxCWZmxhCsDu3bsJCgrCxsbG8Fi7du24cuVKhe9FlnBdRhCKmxhTmQhw7do1vL29DZu/v78Fo61IOmCJhk6fgOXp54Ojq0uNj2sR6M/4/36Anb09x6K38et/F5srREWknNGNIKzpaEb35rruV3lXsyjVaMwWl7jhcsIpwPxjCJu29OOehx8E4LfP6k/3K7hxT9g3xIgErPLXcm6GJGCJhkvfieHswcMKRyKEcZr4lCdgpcj4QSEasvhtsQB0iuivbCC1oC8w3b59u+GxsrIyYmJiCA+v2fqTi4sL9vb2ZGVlVbuPg4MDbm5uFTZhWWlnz3M9KxtHF2dadeqgdDhWx+gErG+++YZp06Yxe/Zsjh07RmhoKEOGDDF0omrVqhU+Pj5GBzJq1ChsbGxYt25dpeeKi4sZNWoUsbGxnDx5kjfffJOFCxfy3HPPGX2dutJXizu7u1VYPDElWzs7vNvqqhf11U5CmINhwUKBDlj6BKy4Lb9b/NpCiBsS/tAlCrTvU38rKm4m7W3vfOqiYjL/ugyATw27GghhDsYUpgAsXrwYT09PPv74Y9q2bcvQoUOZMWMGixYtsnjs+rHq0gFLgHGViaC7eZaWlmbYbteV2pw3xvTJhEp8nxHCGhTm5pGTpvsdrGkXrEaeHkz6bD4ujd25cCyedW/OoayszJxhWlza+YtoS0tx9WhiSEi5lcZWNH7QmIISgJdffpnExEQKCgr466+/WLBgAY6OjhaKtvaSE8q7O7Wv+Xi92hj0/D+wtbMjYdde/jp+0qzXMjX96HUPH29cGrvfdn9be3tDgaUkYImGyr15M1oE+qMtLeXcoaNKhyOEUfzKR85mXUlROBIhhJLiY3YAENI7HHsn6/9cf7OmTXXjsDMyMio8npaWhre3d43OMW/ePK5cuUJMTEy1+0yfPp3c3FzDlpycXPugRa2UlZUZumC1kTGElRidgAWwaNEiAgICcHJyomfPnhw4cMDw3IABAxg/fny1x44fP54RI0ZUenzp0qW4urqSm5tb6bmjR48SHh6Oh4cHLi4u3H333XzwwQeUlJTUJvw60Y8gVKlUOJkpo7JF6wDs7O0pzM0jK1k+bAnz0Y/saGThBQuvNoF4B7VGo1ZzcscfFr22EKKiM/sOolGrae5/F81atVQ6nDqT9rYNw5XTuq4GMoZQKMnYwpTLly/zwAMP0L17d44fP84nn3zCxx9/zAcffGDx2PNzdN9pbO3tcGrkavHrC+tQ28rERo0aceHCBf766y82btxIhw63rnQz542xfH0ClnRzEw1Y6pmajyG0c3Rkwicf0rSlH5mXLvPFP19DU1xs7hAtTlNcTEb5iLuadMFqbBjblnGbPc3PmIKSp59+mg8++IBZs2bRvn17Jk6cyMiRIyskgFur5PIOWOZMwGp6V0u6DR8CQPSi+tX9CqA4v8BQeFKT7z3uzXULXpqSEsP9ayEamqB7deMHkxNPU5R3XeFohKg5la0toUMGAfDnjl0KRyOEUFJy4mmuXr6Cg7MTwb16Kh2ORb3++uuMGjWKESNGUHyL76lRUVG4u7sbNj8/PwtGKfTOHtB1G9WPfxY31CoBqyEr1WgoyteNS3Ntcvvqo9rQZ7onn5Lxg8K88hWqGNd3vzq954B8GRZCYcUFBZw/fAyA9n3vUzia2rNEe1tpbWs99NXgvsHSAUsoy9jClH379hEeHo6zszNBQUFERUWh1WotHTaa4mJKCosAGUPYkNWmMvHUqVNMmDCBRx55hNGjR6NSqdizZ88tb3aZ88aYvqOvc2N3bFRye0M0TPoxhLdLwLKxseHZqHfw79KR/JxrLH1hquGewJ0o5cw5oGYdU931CVgZyidgGVNQ0qtXL3bv3s26deu4ePEiW7duZd26ddx7770Wjtp4l8s7YDW7qyVObo3Mco3Bz4/H1s6OP3fu5tKJP81yDXNLTtT9PdVkDKG+29s1K+jkJoRSgrqXjx88cEThSIQwTtue3XFr6kne1SxO7d2vdDhCCIXFb9sBQKdB/ZQNxEhXr14FqFRA4uXlRWpq6i2PffXVV3njjTe4//77iY+Pv+W+JSUl5OXlVdiE5Z0r74AVENoJOwcHhaOxLnKHshYKyivGa9L+uTb0CVhXEiUBS5iXUhXjMn5QCOuS8MceANr3qVmikjWyRHtbaW1rPa6c0nXAkhGEQtSeYRS1jCEURti3bx+rV68mLi6OnTt38thjj5GRkcHzzz9f7THmvDF2c4dqF3dJjBYNkyHR6DadnoZPfYnOgwegKSlhxcuvk1neIepOlVLeMdWYDli5acolYNWmoGTPnj1069bNMKYwMDCQoUOH8uuvv1Z7HWspKinMzTV0/fczQ1fbZv530W34AwBs+Wy5yc9vKfrCE7/g23cK0ydg5WVeNWtMQlizNuUdsM4ePKxwJMJSPDw8AF3H6ezsbJYtW4ar6627PG/fvp2ysrIK2+LFiy0RbrX071nHfotBqylVNBYhhPLiY2IBuLtfb2zt7BSOpubUajUA/fv3NzxmY2NDREQEe/furfa4f//737z11lsMGTKEw4flPby+SE+6SG5GJvaOjvh36ah0OFZFErBqQX+T11zV4vqqJn2VkxDmkp+jG0FoyQ5YXq0DDOMHT2zfabHrCiGql/iH7sNvm3u64uDsrHA0yqhJe1tpbWs99AtqXoEB2JYvVgkhjKMvKnH1kASshqoulYl6Go2Go0ePEhSkTEKsVlNKQa7+tWzZrr5CWIvUs7oErFt1wOo18jH6/+MZANbPfI+kI3EWiU1JNzpg3T4By9A5KEO5zkG1KShZt24db7/9Nrt27aKkpITz58+zY8cOoqKiqr2ONRWVXNaPIewQbPJzD35+PCpbW07u2MWlkwkmP7+lJJcX59akA1bjFvoOWMp3chNCCU28vWh2V0tKNRqSDt/573NCZ9ky3YjZRx99lOHDh9O3b1+WLFly2+OWLFmCt7e3YXvttdfMHWq1HJyd6ThQ1+Xm8M/RisUhhLAeF+Piyc3IxNndjaB7uykdjtHGjRvH2LFjCQkJYfHixbi6urJixQpA1/H35pHpr732GnPmzGHChAlcuHABLy8vvLy8bptMK6zD2fIuWPXxdWpOkoBVCwXXypNWzFQtrq/8kgQsYW5KdMCS8YNCWJ/0pItcvZyMnYMDbXvUzw9KlmhvK61trUdOahoFubnY2tvRItBf6XCEqJfyy7/TyAjChqu2lYk3U6lUdOrUiZSUFHOEWCP52eXfz+W1LBqotPMX0Gq1uDX1pJGnR6Xn2/fpxYjpUwH49eP/4+jmrZYOURGGhP3WAajsbG+5r3t54kpuPRvd1q9fP2bMmMGLL75IWFgYI0aMYNiwYcycObPaY6ypqCRZn4AVcvvuTsZoHtCKsKH3A7Bl8TKTntvSrpzS3Rv2Cgy47VgPt2blr2MFEwmFUJJ+4e/yyUSKCwoUjkZYQkhICIMHDwbg0KFD7N69mylTpjBq1Ch8fHxueWxBQQFpaWmGTcl7fB0j+uLo4kzGhb/q7chcIYRplZWVceJ3XQOLToP7KxtMLcycOZPZs2dz7NgxQkNDGTJkCOnp6QC0atWqwr/RL7zwAo6OjmzYsIHU1FTDNm3aNKXCF0Y4u/8QAEHdwxSOxLpIAlYt6LsGmWMEoaefD87ubmhKSkg/f8Hk5xfiZobRM00sVy3eWcYPCmGVEnaWjyHse5/CkdSOtLdteFJO67oa+JphZIkQDYEhEV9GEDZ4xlQmvvXWWwwePJjAwEC6du3KmjVr8Pf3N1SeK8HwnUY6YIkGSl1UzNVLui5Gfx+359e+HWM+moPK1pb9G35i27JVSoSoiOwrqRTl52Pn4EBz/1a33Fc/glDJzkG1KSiZM2cOq1evZvny5Zw4cYKNGzcyY8YMpk+fjo2NTZXHWFNRSXKCLrmoZXvTdsC6P3KCrvvV9j+4/Ocpk57b0q6lZZCfnYOtvR1ebQJuua++A1ZuhowgFA1TkGH84BGFIxGWEh4eTnZ2doXHYmJi0Gq19OjR45bHPvvss2RkZBAfH8/cuXNxvs1EAHOO8O02bAgAh3+R7ldCiBvit+0AoOOAvtio6lc6x5IlSwgICMDJyYmePXty4MABw3MDBgxg/Pjxhj8HBgZiY2NTaZs1a5YSoQsjnT2g+9zVqvPdODg7KRyN9ahfv7FWwpwjCH2DdVVfqWeTKNVoTH5+IW6mrxZv5GmZxYoWgf74tG0j4weFsEIJf5QnYPUJVziSupH2tg3HlVPl4ziClRl7JUR9p/9OI0krwpjKRA8PD5YuXUpCQgK//vor7u7u9OrVi4QE5cY7SQcsIW6M27t5DGETrxZM/PQjHF1cOL33AN+996FS4SmirKyM1DPngcqJaTdT2dkaOocp2TmoNgUlLi4uaLXaCo+VlpYajrV2+hGELQL9sXdyNMk5WwT6E/qgrhtKdD3vfqWXXP69xy/k1olq+lGa0gFLNFRtyjsvnD0gxXUNhbe3N5mZFf/NKy0tJSsrq9rxvQBfffUVo0ePZsCAAURFRTFmzBjWrFlzy2uZa4SvW1NP2oV3B+CIjB8UQtzk7MEjFOTm4tbUk8CunZUOR4gqXb2cTHZKKnb29gSEyutUTxKwasGwWGGGG7x+7XUJWPpFRSHM6Xp5hYilOmB1eSACgNN7ZfygENbm7MGjqIuKaeLthfctFiisnbS3bTiunNKNlfFtJwlYQtSGObv6ivrFmMrEqVOnGvb18fFh+PDhHDt2TImwDaQDlhCQelaXaKRPwHJq5MqkxQto3KI5KWfOsWrqDLSaUiVDVIQ+Mc3nFp8X3Zs2RaVSoVGrDd0hlWRMQcmmTZt44YUXGDlyJAEBAQwaNIg5c+awadOmSolZ1igv8yq5mVdR2dre8v8jY9wfOQGVSsWJ32MNHbbquyuJ+gSsW3f+vZGApVwnNyGU4tnSF09fHzRqNReOHVc6HFFHUVFRlJWV3XILDq5998SlS5eyZcsWTpw4wVdffcXYsWN57LHHaN26dbXHmGuEb9eh96OyteXCsXiuXjZNUpcQ4s6g1ZRycvsuADpF9Fc2GCFu4cw+3RjCruWFMALslA6gPjIsVribrs2onl/5GJ3kxPrdIrsh8PDQVUhevnwZrVbLhg0bePnll8nPz6/2mMmTJ/PMM88QFhaGu7s7TZo04dq1a5YKuRJ9tbi9kyMOzk6UFBaZ9XpdyscPHpfxg0JYHU1xMWcOHKJD3/to3yec1PLFivpmyZIlzJ8/v8rnBgwYUOHPgYGBlghJmEnKaV0ClqkWa4RoaAwjCKVrkKjnbnTAkgQs0XAZErDatkZlZ8vY+e/j07YNuRmZLHvxVYquV3+f4k5m+Lx4iwIT9xY3ugaVlZVZJK5b0ReUeHt7c+zYsUoFJTcnVr333nuUlZXx3nvv4efnR0ZGBps2beLNN99UKnyjJSecwr1PL1q2D+av4yfrdC6/kHZ0GTIIgOjPlpsiPKuQfEqXSHa70es3ErBkBKFoeIK6dwPgUvyfZr+/Lcxv/vz5rFy58pb7nD9/ntTUVJo1a1bhcVtbWzw9Pasd31uV/fv3AxAUFMT58+er3KekpISSkpIan7OmwoY/AMDhn38z+bmFEPVf/LYddH9kKJ0G9ePHD/+rdDhCVGnfhh+5d8Rwwobdzy8ff8b1q9m3P+gOJx2wasGsIwhD9AlY0gHL2i1bpmtl/uijjzJ8+HD69u3LkiVLbnmMi4sLv/32W4WKRSWVFBaiLi4GzL9gUXH84B9mvZYQonYSdurHEPZSOBIhblaIZ34AACAASURBVC/l7Hm0paW4NfXErVlTpcMRot4puCZJK+LOcKMDliQTioZLn2jkHdSaJ2a+RnCvHhQXFLL8pWnkpKYpHJ1ybnTAqj4Bq3GL5oD1jG0zpithaWkps2fPpm3btri4uODv789LL72kaKGfsfRjCP1C2tXpPLZ2dox6byYqlYpjv8XcUZMF9B2wfIPbVjta0s7BwZBUfy3dOl7LQlhS0L3l4wcPHlE4EmEKmZmZnDp16pabWq1m7969hiJ5vYEDB6JSqQxJVTURGhoKQEpKikl/jtvxah3AXR1CKFVriIveZtFrCyHqh1N7DlBcUIiHjzctO4QoHY4QVboYd4ILcfHYOThw38jHlQ7HKkgCVi0U6DtgmTgBy6WxOx4+utnUd9KNgjtRSEgIgwfrWukdOnSI3bt3M2XKFEaNGlVhvNXfffzxx8ybN499+/bV+FoODg64ublV2ExJ39HN3AsW+vGDZ/YdpDA3z6zXEkLUTuKuvQAEhHbC2QxdHoUwJU1xMekX/gKgXc/uCkcjRP2Tn6MvKpERhKJ+kw5YQkDmpctoSkpwcnWlx+MPoy0tZc1rb3P5z4bdXV2fgOXp64NTI9cq93EvT8C6liZj25SgHxPo16H2o6QABkdOwDe4LdezsvkhaoEpQrMa6Rcuoi4uxqmRK55+vlXu49bMEwB1cTGFubmWDE8IxTm6uBgKCc/sP6RwNMKSEhMT2bp1KwDdunWjV69efPrpp6xfv96QTOXr60tCQgLdu+vuG7Vu3ZqZM2cSFhaGv78/Dz30EF9++SWxsbHEx8dbNP6wYbruV4m79hrWaIQQ4maa4mLDmk2nQf2VDUaIW4j9cj0A4U+NwM7RUeFolCcJWLWQf00/gtC0ixX6aq/Mvy5TnF9g0nML0woPDyc7u2ILvZiYGLRaLT169DDptaZPn05ubq5hS0427SzwG+NnzLtgoR8/KNUcQlivrOQUUs8lYWtnR7vwe5UOR4jbOvrrFgAGThxTbTW4EKJq+qISGUEo6jtDByx5LYsGTKspJT3pouHPG+f9lz9jdykYkXUozM0zdACrbgzhjbFt0jVICcnlHbB82rbB1s6uVudo2SGEgRPHALDh/Y+4nnVnjbzQakoNY0b1kxP+rnFzfSc3GT8oGp5eI0fg0tid9KSLnD98TOlwhIVNmjQJgJ9++olff/2VXbt28dxzzxmet7e3JyQkBBcXF0A3SnDQoEFs2bKFxMRE5s+fz4YNG3jooYcsGreNjY0hAevwL9EWvbYQon45vnU7AJ0lAUtYsRPbYslKTsGtqSfdht2vdDiKkwSsWtCPIDT1DV7fYP34wdMmPa8wPW9vbzIzK96cKy0tJSsrC29vb5NeKyoqCnd3d8Pm5+dn0vNbogOWjB8Uov5I/ENXUdG+T7jCkQhxe7u++pbC3Dy8g1pLFZAQRtInrbg0lqQVUb8ZOmB5SAeshm7y5MkkJSVRWFjIvn37DJ0OqrJ9+3bKysoqbT///LMFIzYt/aJz7Or17F73ncLRWI8r+vGM1SRg6UcQXkuXDlhKyEpOoSA3Fzt7e7zaBBp9vK29PU+//xa2dnYc3byV41t+N0OUytOPIaxuVKN7C0kkFA2TvZMj/cY9A8C2ZV9SptUqHJGwNH2RvJ+fH02aNGHixInk5+cbnr948SI2NjbExsYCcPnyZfr370+zZs1wdnamXbt2vP766+TlWXZiR0DXznj6+VB0PZ+TOyRpXghRvYQ/9qApKaFFoD9erQOUDkeIKmlLS/njq28A6DtmlMLRKE8SsGpBXy3u1Mi11tVZVfFrr/sSLeMHlRMVFVXlTdibt+DgurVFN1ZJSQl5eXkVNlPKL68MdP3bvHRT6lze/UrGDwph/RL+2ANASO9ws3QUCgjtTGBYF+lWJEyi6Ho+f6zVfbAf/Px4eV0JYQR9Er6DsxP2TtIaWtRf0gFL6M2dO5dZs2YRFhZGXFwc0dHRNC/vCvN3jz32GN7e3obt7rvvRqPR8O2331o4atP5eeEi/jtqAj99+LHSoViV1PIxhNV1wGqsT1xJl8QVpejHELZsb/z9tiH/bxLeQa3Ju5rFD3Pnmzo0q5Fcfq9YX7z7d+7NmwKSgCUanp5PPIpbU0+uXk7myK/SRUjUH92GDwF0nW00xcUKRyOEsGbF+QWc3nsQkDGEwrod+H4TRfn5eAe1JriXaaeF1TeSgFULhXnX0ZZXUzg3djPZeQ0dsBKkA5ZS5s+fT0hIyC238+fPk5qaSrNmzSoca2tri6enJ6mpqQpFXzuW6IBlGD94h1YiCnEnSToSR9H1fNyaetKyQ4hJzx0Y1oUpqz/npVX/x5vR3zP05RdqVeUsxM12rvmGouv5+Aa3pUP/3kqHI0S9UZxfQKlaA4BrA+qC1S68O89+8C73PjocG5V8Hb4T6EeqO7u7obKzVTgaoaRVq1axcuVKEhISiIyMpKCggAkTJlS5b3Z2NmlpaYZt8ODBFBQU3DIBy8HBATc3twqbNVEXFXPpZILSYVidK6d1CVi+7YKqfN5dOmApTn8fVF+YWlOtOt9N/388C8C3sz4w3N+6E10pn5bgV80IQnfDCEJJwBINh52DAwPG6/4N2LZ0FVpNqcIRCVEztvb2dHlAt15y+OffFI5GCFEfxMfsAKBTRH9F4xDiVoqu57P/+00A9BvbsLtgyR3nWijTag1dfEy1WGHn6EiLQH/gRlWTsLzMzExOnTp1y02tVrN37148/tYxauDAgahUKvbv369Q9LWjX7BwbWKekR3NA1rh2y6IUrWGE7/L+EEhrF2pRsPpvQcA044htLGx4ZHXXgZAq9Xi4eNNxKSxvLbxK6Z+s4p+Y5/GvXmz25xFiMoKc3PZVT5mZ3Bk1YusQoiqGcYQNoDOQcH39WTKmiU8v+QTwoY9wMg5bzL1m5W0C69+RJmoHwrzrqMt1S24NaRkQnGDvb09oBsrqFdWVkZMTAzh4TX7PDtx4kTWr19PQUFBtftMnz6d3Nxcw5acnFy3wIVFpJR3wKp2BGFzGd2mtOTEUwD4GdEBy87RkaffewuVrS2HNm3m5PY7+36TfpRmE2+vKjs+usvrWDRAPR57iMYtmpN1JYVDP21WOhwhaqx9n164uLuTk5bOuUNHlQ5HCFEPnNzxB9rSUlp2CMbTz0fpcISo1q6136AtLSX4vp54B7VWOhzFSAJWLRVcywVMt1jhE9QaWzs78q5mkStVd1YvMTGRrVu3AtCtWzd69erFp59+yvr160lJSQHA19eXhIQEune/sajj5eVFly5dCArSVV526tSJLl26VErmsiRDBywzLbzpu1+d3n+Qwtxcs1xDCGFaCX/sBSCkTy+TnTNs+BDuurs9Rdfzef+Bx1g1dQYnfo9Fo1bj174dD//7n7wV8yPPL/mYex4eiqOLi8muLe58O79cR3FBAXd1CKG9CV+3QtzpbnRCNU8ivjVo36cX/1y7jOf+byEBXTqhLirmyC/RFOTm4hvclueXfMLERR/h1TpA6VBFLZVptYbv53fya1lUr2lT3eitjIyK91LS0tLw9va+7fHdu3enU6dOLFu27Jb7RUVF4e7ubtj8/PxqH7SwmIyki2jUapzdGuHhU/H14ODshLO7rpOZdMBSzuU/dQlYvsFta9yd8sEpz9Ei0J9r6Rls/GChOcOzCsX5BWT+dRmoegyhfgThNRml2aC8+OKLJCUlUVhYyL59+yrcg/67ESNGcPDgQbKzs7l+/TpHjx5l9OjRFfZZsWIFZWVlFbbNmysmNnl4eLBmzRquXbtGdnY2y5Ytw9XV1Sw/363Y2tszcOIYALZ/sYZSjcbiMQhRW92GPwDA0V+2UFY+aUcIIW4lP+eaIWGzY0Q/haMRonpZySnEb4sFoO/okQpHoxxJwKqlgvLFCpfG7iY5n295C+kr0v2q3pg0aRIAP/30E7/++iu7du3iueeeMzxvb29PSEgILjclEURGRnLs2DHDjd0//viDY8eO8fDDD1s2+JsYOmCZabFCn4B1PFrGDwpRXyTu0iVg3dWxPY08654g6uDsxNCXIwGIWbqSnNQ0jm/dzoqX32DWgOF8N/tDko7EoVKpaBd+L0+//xbv7viFZ+fNIqRPuIwTEreVn3ONPeu/B2Dw8+MVjkaI+sOQtGKi7zTW5O7+vXll/RdM+mw+/p3vpqSwiNgv1/H+g4+z9o13iRr6JDtXf02pWkOHvvfx6obVPD7z3yZ53xOWZ+6iEnFnmzhxIsePH+fgwYO33K+kpIS8vLwKm7B+pRoN6UkXgcpdsPRdg4ry8ynOr777mTCvjIuXKC4oxNHFmeb+d912/8CwLvQdoxtp8c27UYYpBXe65PIxhFUnYOley3mZkoDVUDz11FMsWLCAWbNmERYWRlxcHNHR0TQvH0f5d1lZWbz//vuEh4fTuXNnVqxYwYoVK7j//vsr7Ld582a8vb0N29NPP13h+bVr13L33XczePBghg8fTt++fVmyZInZfs7qdH9kKE28vbiWlsGBH362+PWFqC1ndzc69LsPgMO/yPhBIUTN6ZNaOssYQmHldq7+GoCw4Q802PuskoBVS/nXym/wmmjEgV9IOwCuJEoCVn2RnZ0NgJ+fH02aNGHixInk5+cbnr948SI2NjbExsYaHps1axY2NjaVtlWrVlk8fj1zLlY0878L3+C2lKo1xP++0+TnF0KYR25GJpf/PIVKpSK4V486n6//uGdo4tWCq5ev8Meabyo8V3Atl73f/sCn4yJ5/8HH2fy/z0lPuoiDsxNhQ+9n8mcLeDvmJx5941/c1bFDnWMRd64dX35FSWER/l060i78XqXDEaJe0H8OvFNGENrY2NBxYF/+9fVKJvzvP9x1d3uKCwrZvmIt7z/4GD/95xPyMq8CuvefHz/8Lx+OeIb4bbHY2tnRa+RjTP/lWwZOHIudo6PCP40whrmLSoR1u3pV93v990VnLy8vUlNTb3msi4sLo0aNYvny5WaLTygvpXx8m2+7oAqPu7fQvWZypWuQosq0WsP/R7cbQ+jg7MSoOTNRqVTs/34TieXdmxsCQwJWSOUErMblr2XpgNVwTJ06laVLl7Jy5UoSEhKIjIykoKCACRMmVLl/bGwsGzduJDExkfPnz/PJJ59w/PhxevfuXWG/4uJi0tLSDFtO+chygJCQEB588EEmTZrEgQMH2L17N1OmTGHUqFH4+FhuHJLKzpaBE8cCsH3FGjQlJRa7thB11XnwAOwcHLhy+iwpp88pHY4Qoh458bturdk/tBNuzZoqHI0Q1btw7DgXj5/E3tGRXk+NUDocRUgCVi2ZegShPgFL/2VaCEu5Xr5YYY4sVH33qzP7D8n4QSHqmYRdewBo37du49zcWzSn/3hdW/tf/vvZLW+MZV2+QsySlcx7eBT/HTWBnWu+Ju9qFm5NPenz7FO8sm45b2z6usFmzYtbu341m73fbQTg/siqbzoLISrKL19Qqe8JWDY2NnQa1J+p365i/MfzaNkhmOKCAn5f/iVzH3ycnxd8yvWr2VUem3nxEitfeYNF41/k0skEnBq5MuyVF3j9p3V0HXo/NjY2Fv5pRG3cKCqRBKyGSK1WA9C/f3/DYzY2NkRERLB3762TM5588kkcHR1Zs2aNOUMUCks5o1vg9GnbusLjN5JWZPyg0i4n6MYQtrxNAtbQl1+gWauWZKek8tN/PrZEaFZDX7Srv4esZ+fgYJjQkJtx1eJxCcuzt7enW7duxMTEGB4rKysjJiaG8PDwGp1j4MCBBAcHs3NnxYLZ/v37k5aWRmJiIp999hmenp6G58LDw8nOzubw4cOGx2JiYtBqtfToUXXxnoODA25ubhW2uuo27AGatvQl72oW+zb8WOfzCWFJ3YYPAeDIz9L9SghhnGtpGVyMO4FKpaLjgL5KhyPELe1cvR6AXqMex87BQeFoLE8SsGqpIKc8AcsE4zpsVCp82unaoEsClrA0fbW4S2N3ky8whT4QAUBc9DaTnlcIYX6JO3WLVcH39UBlW/sRgEP/+TyOLs4kHYkz6t+CSycT+HHef5k96GGWvvAvjvwSTUlhEVqtlutZVS+iC7FjxVrUxcUEhnWhTfcwpcMRwurpv9PU17FtNjY2dHkgglc3rOYfC6PwDW5L0fV8Ypas5P0HHuOX/y6u8XvG+UNH+fjpiayd/i45qWl4+vowet4s/rl2GYFdO5v5JxF1daMDVv18LQvTGDduHGPHjiUkJITFixfj6urKihUrAFi1ahVz586tdMzEiRPZuHEjWVlZlg5XWJC+u5LP3zpgNS4f25abIV2DlJb8py4B6+/JRTdr0z2MPs8+BcA378yl6Hp+tfveiZJP6RKwWgT6V1jEcG+u64CgLi6W4scGolmzZtjZ2ZGWllbh8bS0NLy9vas9zt3dnby8PEpKSvjll1+YMmVKhSSu3377jbFjxxIREcHrr79Ov3792Lx5MyqVbgnJ29ub9PT0CucsLS0lKyur2utOnz6d3Nxcw5acnFzbHxsAla0tEZP/AcCOlV+hLiqu0/mEsCQPH2/a3NMVrVbLkV+3KB2OEKIeit+2A4DOg/srGocQt3M8ZjvZKam4NfUkbOj9tz/gDmOndAD1lX4EoUuTuidgNWvVEkcXF0oKi8i4eKnO5xPCGPpqcVs7O5zcGlGYm2eS88r4QSHqt4vxJ8nPuYZrk8b4d76bpKPHjT5Hyw7BdH9kGAA//ueTWsWh1ZSSuGsfibv24ejigoef5drai/onNyOT/d9vovfTTzD4+fGcO3hE6ZCEsGoFZhxFbS6Ori408faiZftgBk4cg3eQrptJYd51dn31LbFfrq/14mNZWRlHfo4mPmYHfceMYuDEMbTq1IGXvvycuC2/88vCz7h6uW6LRsI8DB2wZARhgzZz5kxmz56Nt7c3x44dY8iQIYaF4latWqHVaivs365dO/r06cPgwYOVCFdYkL4DVvOAVtja21Na3jXN3Us6YFkLfUGqX4eqE7AcXVwYOftNAPZ88wOn9x60WGzWIjc9g+tZ2TTy9MA7KJDL5Ulr7uXjVyWRUNxOXl4eoaGhNGrUiIiICBYsWMD58+eJjdWNNPr6668N+544cYLjx49z/vx5+vfvz++//16ra0ZFRbFgwQLDn93c3OqUhBU6JILm/neRn53Dnq+/r/V5hFBC1/IF6HMHjnAtTT57CCGMF78tluFTX6JN9zCc3d0l+V5YLa2mlF1ffcdDr75E37GjOLDxZ6VDsqhadcB68cUXSUpKorCwkH379tG9e/caHTdy5EjKysr44YcfKjy+YsUKysrKKmybN2+usI+Hhwdr1qzh2rVrZGdns2zZMlxdXWsTvkkUlo8gdG1c98UKv+C2gK4ir+xvNwSFMLdStdpQNWjKxTcZPyhE/Vam1XJqz34AQvrUbgzhw/9+GYDDP//GpRN/1jmm4oICUssXT4Sozvblq9Go1bTtcQ+BYV2UDkcIq2ZtIwgdnJ1oEehPu/DudH90GIMjJ/DkO28wefFC/v3DWt7bs5W5+7bx2saveCbqHbyDWlOYm0f0Z8t4f8hj/PbpEpN87lQXFbNt6So+GPYUe7/biLa0lC73D+S1n9bx8L//iYdP9Z0FhDL0HbAaSQJWg7ZkyRICAgJwcnKiZ8+eHDhwwPDcgAEDGD9+fIX9T58+jY2NTYXuH+LOdC0tg4Jrudja2eHVOsDwuKEDVrokrigt9ex5NGo1Lu7uePhWfp8d/upLNG3py9XLV/h5/qcKRGgdrpyqPIZQ3wFLxg82HJmZmWg0Gry8vCo87uXlRWpqarXHlZWVce7cOeLi4liwYAHfffcd06dPr3b/pKQkMjIyCArSdQ9MTU2lRYsWFfaxtbXF09Oz2uuWlJSQl5dXYastG5XK0P0q9sv1lBQW1vpcQiih20O68YOHf5Hxg0KI2sn86zJXTp/F1s6Ou/v3VjocIW5p34YfKS4owKdtG9qF1yyX6E5hdAesp556igULFhAZGcn+/ft55ZVXiI6OJjg4mIyM6rO2/f39+eijjyrNFdfbvHlzhZthxcUV28euXbsWHx8fBg8ejL29PStWrGDJkiU8++yzxv4IJqGvsDXFCEK/9rovzfpW0kJYWn5ODk6NXHH1aELmX5dNck59AlbcltpVSAkhlJewczdhQ++nQ99ebP7k/4w6tlNEP9rc05WSwiJ+/e9iM0UoRGU5aekc3PgL4U8+yuDnx7Pk+VeUDkkIq5Wv4AhC1yaNGTBhDF5tAmji7UUTrxY1/m5VkJtLTkoacVu3s2vtN2YbQZR3NYvvZs3TVWxNfYmQ3j3pN/Zp+o19mvSki5zee4DTew9w9uARivMLzBKDjY0NzQNa6RZabWwoKSykpLCo/L+FFBfo/ltSUIS6qIiysjKzxGHt8uthNzchhGWlnDlHm3u64tO2jSGJpXGL8g5Y0jlIcaUaDalnztOyQzAt2weTfeVGMke78Hvp9dQIAL5++32KC8zznlsfJCeeoV34vfhWSMCSUZoNjVqt5vDhw0RERPDjjz8Cus+MERERfPppzRMUVSoVjo6O1T7v5+dH06ZNSUlJAWDv3r14eHgQFhbGkSO6btMDBw5EpVKxf//+OvxENdN58AC82wRSkJvLrnXfmv16QpiSX0g7vNsEoi4qJj5mh9LhCCHqsfiYHfi2C6LToH4c+ulXpcMRolpFedfZ//0m+o4eSd8xoxpUF2OjE7CmTp3K0qVLWblyJQCRkZEMGzaMCRMmMG/evCqPUalUrF27lnfeeYc+ffrQpEnlqtTi4uJKc8v1QkJCePDBB7nnnns4fPgwAFOmTOHXX39l2rRphi8BN3NwcKjwBcLNzc3YH/WWCgwjCOt+g9c3WPel+UqiJGAJZeRnX6NpSz9cq/jdrI1mrVriF9KOUo2GE7/HmuScwrwmT57MlClT8Pb2Ji4ujilTpnDwYNVvhpMmTWLs2LF07NgRgMOHDzNjxoxq9xf116nd+9FqtfgGt6WxV/Mat8e2tbdn+KsvAbBj1VfkpKWbM0whKtm2bBX3Pjqc4F49aNX5bv46flLpkISwSkqNIHRwdmbS4gW06tih0nNF1/PJSU0jJzWdnNQ0rqWl6/53mv6xdItXu6eeOcfSF/5F8H09iZg8loAunWgR6E+LQH96P/MkpWoNF47Hc3rvQU7v2c+lk4m17mzs3rwZrTp14K6OHXT/vbs9zm6Nany8ISHLkKRVRElBIcmJp9k0/3+1iqk+0HfAcpEOWEKIaqScPqtLwGoXZHjMvUV54oqMAbIKyQmnaNkhGL8OwcRv091LcmrkysjZMwDY9dW3DX7E+JVT5aMay6cpwI0ELBml2bAsWLCAVatWcejQIQ4cOMArr7yCq6srK1asAGDVqlUkJyczY4bu9+eNN97g0KFDnDt3DkdHR4YOHcqYMWN44YUXAHB1deWdd95hw4YNpKam0qZNGz788EPOnj1LdHQ0AImJiWzevJmlS5cSGRmJvb09n376KevXr69yfcaUbGxsGPTcPwD4Y/XXZit+EMJc9N2vTu74w2wFREKIhiF+2w4eeHESwb164ODsLB0hhVXbtfZbej/zJO379KJFoD/pSReVDskijErAsre3p1u3bkRFRRkeKysrIyYmhvDw8GqPe/vtt0lPT+eLL76gT58+Ve7Tv39/0tLSyM7O5vfff2fmzJlkZWUBEB4eTnZ2tiH5iv/P3n2HNXW+fQD/EpbKUBAEFw5U0Lo3bkUUtbW2Wtu6aG1dbR11z6L4qvVn1VqhjjqrVuuqba0TxWoRUVFxAQoisrfsmZz3j0hqCtGAwEnC93Nd96U5OePOyc2BJ3nO8wDw9vaGTCZDt27dcOLEiWL7W7RoEZYvX16al1cq2eU4BWE9R3mjOTo45I33RVQWRdPP1Glsh4fl0F+q3SBnAECo/03FzwppttWrV6s9smG/fv1w8OBBXL16Fbm5uViwYAHOnTuHt956CzExMSJkTxUl63kant17gMbt2sCxlxP8j/2h1na9Ph4Fq4YNkJaQCJ9d+ys4S6LiUmPiEHDyDLq+9zZcpnyKnV/OFTslIo2UVXRTSTm0adQlMdDHhA2rYNe6FbJSn+PU5m1IjYlTdLbS5A+jQ3yvIcT3GqqZmqBZ105o4dQVLZy6wrpRQ9h36gD7Th0w5KvJyE5Px+NrN/HI7zpCrvorjeLxsmqmJmj4Vks0bN0KDVu3hF2bVqhlU6fYevk5uYgJeYyC3DwYVa8GoxrV5f9Wrw6j6tVhXKO6Yl3jGsqPi+hJ9MrvRGigovYMR8AiIlViX0xlXre5vWKZouPKK0b0p8oTFRSCblCeXm/4vJmoZWuDpGdR+Ov7H8VLTkNEv7h5t65DM+jp6UEQBEUdZyRxCsKq5PDhw7C2toaHhwdsbW1x584duLq6IiFBfgOcnZ0dZC/dEGBiYoIff/wRDRo0QE5ODoKDgzFu3DgcPnwYACCVStG2bVu4ubmhVq1aiImJwblz57Bs2TLk5+cr9jN27Fh4enriwoULkMlkOHbsGGbMmFHhr/et/r1Rr0Uz5GZm4covHP2KtItEXx8dhrgAAAJOnhU5GyLSdrGPwpD0LApWdg3g2NsJdzkLEWmw5Kho3L94GW0H9kOf8R/hqEfJgznpmlJ1wLKysoKBgUGxkari4+Ph6OhY4jY9e/bEZ599hvbt26vc75kzZ3D8+HGEh4fD3t4eq1evxunTp+Hk5ASZTAZbW1tF46GIVCpFSkoKbG1tS9znmjVrsGHDBsVjMzMzREdHq/tSX6u8piA0s6oNc6vakEmlig+DiCpb+O27aNm7B4bMnIqEp8/w8O9/3mh/nH5Q++zdu1ftkQ3HjRun9Pjzzz/HyJEj4ezsjH379pW4/4oelZAqTtAVPzRu1wYte/dQqwOWiUUtuEyRTyl8evM23oFBovH+aS86Dx+CVn16okErfc5QGwAAIABJREFUB0Q9ZEd3ov8qGjWoupkpJAb6kBVKK/yYo5cvQsteTsjLzsGOL+fg2b2HFX7M8pabmYX7Fy/j/sXLAADL+nUVnbGad++MGubmaDdogOJv4sSISMVUhWaWForRrWyaNi62b5lUirjQJ3h27yGe3X+IZ/ceIj4sHDKp6vdGT08PhtWM5R2yalR/0TGrGoyr/9tR61U3RZRmJFQAGDVqFFauXInGjRvj8ePHWLBgAU6fPq3m2asYWany9rmphUWl1TIRaRdFB6wW8g5YNWqaw/BFGzU9kR1XNEF0sHx0pwYtHQAAjr2d0O39dyCTyXBo6Urk5+SKmZ5GSHz6DAV5eahmYgLLBvWRHBmFmnWKRsDiFIRVjZeXF7y8vEp8rn///kqPly1bhmXLlqncV25uLlxdXV97zNTUVIwdO7Z0iZYDlykTAchHwstJz6j04xO9iWZdO8Hc2gpZqc8R4ntN7HSISAfc876E/hPHof1gZ0Tef4hqpqaobmaKaqamqGZmguqm//6/mqkpqpuaoFrR86YmqG5miviwcBxc+n/sxE8V7vK+Q2g7sB86vzMEpzdvU3werctKPQVhaZiammLfvn2YNGkSkpNV/wD/+uuviv/fv38fd+/exZMnT9CvXz9cvFi2Dhz5+flKd2eUt+zn8g+wDasZw7CaMQpy88q0n/ovRr9KePqszPsgelM+u/ajbrOm6DB0ENw2rsaeWYsQdNm3TPuq3bAB6rcsmn7wcjlnSuXN0NAQAODj46NYps7Ihi+rUaMGDA0NFaMWlqSiRyWkihN02RdDvpqM5t07Q9/QENKCgleuP/iLz1Hd3AxRD0Nw83fOQU7iSY6Mwq1T59D5nSFwmfIpds9cKHZKRBonJyMTMpkMEokEJjVrIiNZ9e/y8jBk+hR0eXcYpIWF2Dd3qVZ2vipJSnQsrh39HdeO/g6Jvj4atHJAix7d4ODUFY3atoZ1o4awbtQQPT8aWWzb5KhoPLv3EJH3g/Ds/kNEB4WU+gtmQRBeTDmYC6Skljr/0oyE6uTkhIMHD2LRokU4efIkxowZgxMnTqBjx4548EC86V7TEpOQk5GJ6mam+HTTWvw8Z4lOta+rm5vD1r4xbJo1ha19E9jaN4WNfWMYGhsjMyUVmSmpyEhOUfr3v/8X68tKk1o1Yd3IDtaNG8LKriFMLS2gb2gAfQMDSAwMYGAo/1f/pVA8NlT+V2JggB/GfI7U2JJHlSN6lbjHTwAANetYw6RWTZi9GDUoMyX1tW0cqhyxj0Ihk0phbm0Fm6aNMdp9EQD5B/bht++KnJ1mKLqB1651K9R3bI7kyCiYWdUGAKQnsgMW6aaWvXugQSsH5GVn4/K+Q2KnQ1Rqnd6Wd268c/YCpIWFImdDRLrgrrcP+k8cp3TzX2nVsrXBV3u3Yuuk6SpHbicqD+G3AvHs/kPYtW4Fp9HvwXvbbrFTqnCl6oCVlJSEwsJC2NjYKC23sbFBXFzxH057e3s0adIEf/75p2KZRCIBABQUFMDBwQFPnjwptl14eDgSExPRrFkzXLx4EXFxcahTR3kqBn19fVhaWpZ43MqQl50NaUEh9A0NYFKzJp7nJrx+oxLUc5APqx0T8rg80yMqFZlUil8We0BPIkF714H4ZONq7J61EMFX/Eq9r6Jf9qH+NxUjxZHmql1b/kHdf79ge9XIhv+1du1axMTEwNvbW+U6FT0qIVWcmODHSE9Mgrm1FZp2ao/H11SPiGHTtDG6j3oXAPDHuk0QBKGy0iQq0YWf9qLjsMFoPaAv6rZohthHoWKnRKRRBJkMOekZMKlVEzVqVWwHrJ4fjcTAyZ8AAI6uWIugK1cr7Fhikkml8tGr7j2E97bdMDapgWZdOqJFj25o0r4t0pOSFKNbRd4P0oi7vkozEurMmTNx5swZfPfddwCAb775Bi4uLvjqq68wbdq0EvdfGSOhFublYf/8ZXDbsAat+vTE5K3fY+f0ecjNyCz3Y1Wk6uZmsLVvAptmTWHTtDFsX3S4KppeStU21o3tXrvvwoIC5U5ZyamKzlnyeGl56nMUluKGNqPq1RUdDa0a28n/b9cQ1o3t3njU8P/SNzIs1/1R1ZGXnY3kqGjUblAfts3tYWBkBICdVjRJfk4uEsIjYNusKT7dtBY1bayREB6B05u3i52aRokJfgy71q1Qz7E57p73Qc061gBYy6S7ikZZv3roOD9rJq1jVL0a2gzsCwAIOHlG5GyISFdE3g9C+O27aNKhLQry8pCbmYXcjEzkZGbK/83IlC8revzS/3MzsyAIAkavWAQruwb46udt2DZpBhLCI8R+WaTDLu/7FePWrkDPj0bCZ9d+nb8JqlQdsAoKChAQEABnZ2f8/vvvAOTTHTg7O8PT07PY+sHBwWjdurXSsv/7v/+DmZkZZs6cicjIyBKPU79+fdSuXRuxsbEAAD8/P1hYWKBjx464desWAGDAgAGQSCTw9/cvzUsoV1lpaTC3qo3qNc3xPL5sHbDqt3zRAevFMNtEYpFJpTiwaDn0JBK0GzQAn37/LXbNWFDqYXHbD3YGwOkHq4oFCxbgo48+Qr9+/ZCXp3qUgYoelZAqjiAICP7nGrq+9zZa9nZ6ZQesd+ZOh76BAe5d+BthN29XYpZEJUsIj0Dg2QvoMMQFLlM+xc9zloidEpHGyUp9DpNaNWFSq2aFHaPNwH4YsWg2AOC053ZcP3Gywo6lafKysvHg0j94cOnNpviuCGUZCdXJyUmpUz0AnD17FiNGjFB5nMoaCTX4n2vYPmUmPvP8Dk07tccXO72wfdosZCaXflSwymBubYXm3TqjwVuOsH3R4aroS/SSpMTEIv7JU8SHhiMu7Aniw8KRm5kFU0sLRZjVtiz+/9qWqG5mCgNDQ9SyqYNaNnVUHuNluZlZSp2zMor+n5wKA0NDWDVuKB/ZqlHDV+YNAKmxcUiMiETi02dIT0yCtKAA0kIppIWFkBYWQlZQiMLCAsgKCl8skz8nKyxUrCPfppB35tIbiX0UitoN6qNuc3vkZ8unSk9LKD7aH4knOvgRbJs1hXVjO8ikUhxcuhKFr/isoSoquom3vkMLGBgbKzq6sgMW6aIWTl3RqF1r5Ofk4tLPv4idDlGpvdW/D4xr1EBSZBQiAu+LnQ4R6QhBEOA5YYpaM5ao4jlhKqZs3wTbZk3x5Z4t2D51FqKD2FeBKkbguQt4e/aXqGVTBx2HuuCGjs+eU+opCDds2IC9e/fi5s2buH79OmbNmgUTExPs3i0fLmzv3r2Ijo7G4sWLkZeXV2wagufP5Xf4Fi03MTGBu7s7jh07hri4ONjb2+N///sfQkNDcfbsWQDyjlynT5/GTz/9hKlTp8LQ0BCenp44dOiQopOWGLKfyztgvcmXFfUd5FMQRrMDFmkAWaEU+xd8Az09PbR16Y9PN32L3TMWIOSqeh0dOf2g9imaHtbaWvlLE1UjG75szpw5WLhwIQYOHIh79+5VWI4kvqArV190wOqBP9b9UOI6Dj26oWXvHigsKMDJDcU7ZROJxXv7HnQY4oJ2gwbAxr4J4sPCxU6JSKNkp8mnVq+oDlhNOrbD2G+XQyKR4Orh36rEMNPaoiwjodra2iI+Pr7Y+ra2tiqPU5kjoYbfvosfJ36Jydu+R/2WLfDV3m3YNnmGRnTaMapeHfadO6CFU1c0794ZdZvbl7heamwc4sLCER8ajviwF52tnjxFXlZ2ieurc5eqgZERTC1qwbS2JUxrv+icZVELppaWSh24TGvL/zUwNEQ1UxNUMzWBlV0DtV5fRnIKkiIi5R2tIiKRGPEMiRGRSI6M0qnpIEm7xT5+gtYD+qJei2ZIiZF/npiewE4rmiQqKEQxVdOlPQfw7K5409tqquhgeQeseo7NYW5lCQAoyM0TbapZoopUNPrVtaO/a2yneqJX6fT2YADArZNnRc6EiHTRm4wilJ6YhB8//QKfb9kAu9atMG2nF3Z+NRfhtwLLMUMiOVmhFP/8cgRvf/0l+oz/iB2w/uvw4cOwtraGh4cHbG1tcefOHbi6uiIhQT4ClJ2dHWQymdr7k0qlaNu2Ldzc3FCrVi3ExMTg3LlzWLZsmdJoKWPHjoWnpycuXLgAmUyGY8eOYcaMGaVNv1wVfVlRo4xfVhjXqKGYKiAmhFPikGaQFUqxb/4yTPhuFdo498Wnm9Zi14x5eOSnetSbIorpB68HcEhoLVHw4g+0fv364dChQwBePbJhkXnz5mHJkiUYPHgwAgICKiVXEs8jv+uQFhSiTpNGqN2gPpKjlL80lejr45250wEAvgePIulZlBhpEpUoLvQJAs9dRLtBAzBw8ic4sMBd7JRIh3zxxReYN28ebG1tERgYiOnTp+PGjZL/ZnJzc1NM81YkNzcX1atXr4RMVSv6m62sbZpXsbFvgomb/wdDY2Pcv/g3jq/6rtyPQZqvskdCjQl5DM8JUzBl+w+wbtQQX/28Ddsnz0T8k6eVlgMg//uowVuOaOHUFS26d0Gjdq1hYPjv9HkymQxRD4MRfisQcY+fvLaj1ZsozM/H8/gEtUfurmZmKh9Fy9ICJhb/dswyezGiliCVvtTJKgpJzyL5xT9phZgX01HbNreHtLAQAEfA0jRh129BJpMhLvQJznjtEDsdjVQ0rXotmzqo9+LG3vQkdiQk3WPfuQOadmqPgrw8+OzeL3Y6RKVmWtsCLZy6AgAC/mIHLHq9SZMmYfr06Wp9xvT5559jwoQJilmoAgICsHjxYpXrE5Uk63katn4+HRM3r0OzLh0xZdsm7Pl6IYL/Kd3MSETquHb0d7hMmYh6Ds3RvFtnPPa/KXZKFabUHbAAwMvLC15eXiU+179//1du++mnnyo9zs3Nhaur62uPmZqairFjx6qfZCXITnvxZcWLoZ5Lq26LZgCAtPhEZKbwDg7SHLJCKfbNXYoJG1ahdf8+mPjDOuz8au5rL4ZFHbA4/aD2cXNzw9WrV187siEAzJ8/Hx4eHhgzZgyePn0KGxsbAEBmZiaysrJEew1UcXIzsxB+OxDNunZCyz5O+OeXo0rPd3t/OOo2t0dW6nOc58gmpIG8t+9Bu0ED0N51IM5t2YnEp8/ETol0wOjRo7FhwwZMnToV/v7+mDVrFs6ePQsHB4diIwoVSUtLg4ODg+KxIAiVla5KWS9GKC7vEbBq2dTB5K0bUcPcHOG372LffHcIpbhRhypeWUZCjYuLU/ztp876Ykl6FoXNE6ZgyrbvFcPp/zRtNiIfBFXoca3sGrwY4aoLmnfthOrmZkrPJ0dF45HfDTzyu47H/gHISU+v0HzKKjcjE7kZmUiKiBQ7FaJyFfc4DABg26yp4nO4NE7bplGigx9h/cjxSI2Je6M7+nVZXnY2EiMiYd2oIRx7yacM5khupItcpkwEAFz/7SSn2CSt1H7wQOgbGCDi7gP+XU1qWb16tdqfMfXr1w8HDx7E1atXkZubiwULFuDcuXN46623EBMTI0L2pK3ysrLx07TZcFu/Cq369sTEH9bhwKLlCDx7QezUSMfkpGfgxu9/odfHo9Bn/Ec63QFLInYC2izr+YvpOmqW7cuK+o6cfpA0l7SwED/PXoIHPldgWM1Y3gO6ayeV69duUB8NWjnIpx+88HclZkrlYenSpfDw8MCdO3fQvn37YiMb1q1bV7HutGnTYGxsrJg6tijmzp0rVvpUCYKu+AEAHHv3UFpezdQEg7/8HABwdstOjn5AGikm5DHu+1yGRCKB8+duYqdDOmL27Nn46aefsGfPHgQFBWHq1KnIzs7GxIkTVW4jCALi4+MVUfS7VkzZL9o0Zi+moysP1c3N8PmWDahla4O4sHDs/GoeCvM4BZmmeXkk1CJFI6H6+fmVuI2fnx+cnZ2Vlrm4uKhcX0zpCYnw+mQaIu4+gIlFLUzdufmV7Zmy0JNI0KpvL4xevghLzhzHor+OYOTSeWg7sB+qm5shOz0dgecu4ojHWqweMgqrh4zCUY+1uHveR2M7XxHpsqRn8ikxjWtUR+P2bQDIb4okzRIX+gR52eU/GqAuiQmRT0Po2Ks7AHYkJN3TuH1bNO/eGYUFBbi4c5/Y6RCVSdGUurf+OiNyJqQt9u7dq/ZnTOPGjcOWLVsQGBiIkJAQfP755/LPPf/TXidSR2FeHnbPWoDbp85B39AA49auQNf33hE7LdJBV/b/CplMhlZ9e6JOk0Zip1Nh2AHrDfw7BWHZRsCq79gCABAdwg5YpJmkhYXYO2cJHv7tC6Pq1fCZ53ew79yhxHXbDZaPfhV24xanH9RC27dvR+PGjVGtWjV0794d169fVzzXv39/pdELmzRpAj09vWKxYsUKMVKnShJ05SoAoFmXjjCsZqxY7jzJDWa1LRH/5Cn8jvwmVnpEr3V+q3x0to7DBqF2wwYiZ0PaztDQEJ06dYK3t7dimSAI8Pb2hpOTk8rtTE1N8fTpUzx79gwnTpxAq1atXnkcIyMjmJmZKUV5y0iSj4LUZ/yH+HzLBsUUCWVlYGSET39Yi7rN7ZEWn4ifpn7NjiYazs3NDRMmTICjoyO2bNlSbCTU1atXK9bdtGkTXF1dMXv2bDg4OMDd3R2dO3d+5dTVYspOS8e2STPw6NoNVDMxwaQtG9B6QJ833q9xjRroPXY0Fp78FZ95rkO3kcNhWb8uCgsKEHo9AKc2bcX3H3+Gb3oPwc9zluDakRPFpnAmosonk0oR9yQcwL8jP6arGLWSSJMV3cxrUdcWADg6EOkclynyzyFv/P4XnsfFi5wNUelZN7aDXZtWkBYW4s4ZjiJDr2b4Yqp6Hx8fxTJ1PmN6WY0aNWBoaIiUlBSV61TGZ0ykvWSFUhxYtAJ+R05Aoq+PDz0Wo8+Ej8ROi3RM0rMoPLx0BQDQe+xokbOpOOyA9QbedArCei9GwIoJflxuORGVN2lBAfZ8vQhBV67KO2F5rUfTTu2LrdeW0w8S6bT4sHCkxMTC0NgYzbrIR4+wbFAPfcZ9CAD487vNkBVKxUyR6JWiHgYj6MpV6BsYwPnzCWKnQ1rOysoKBgYGiI9X/jIgPj4etra2JW4TEhKCiRMn4t1338W4ceMgkUhw9epV1K9fX+VxFi1ahPT0dEVER5d/B46bf57G3fM+kMlkaNnLCVO2b8Lc4/vR9b13YGBkVKp96UkkGPvtcth36oCcjExsn/Y1vzDRAqUZCdXPzw9jxozB5MmTERgYiFGjRmHEiBF48OCBWOm/Vl52NnZ8MQd3z/vAwMgIbhtWo8uIYWXal0U9WwyfNwPLvH/HiIVfw6phA2SnpePy/l/x07SvsaznIGz57Ctc2LEXkfcfctpNIg0U+yhU6TGnbiNt9N/PktkBi3RJw9at4NirO6SFhRz9irRWx2GDAQAhV/0V0x4TqVL7xYjk/51q8FWfMf3X2rVrERMTo3Sj4H9VxmdMpN0EmQxHPdbCZ9d+AMC782Zi8JeTRM6KdM3f+34FAHQePrTMfWw0HTtgvYGiUX7UnYJQT08Pdm1aYfAXn2PWoV1o+FZLAEB0EEfAIs0mLSjAnlmLEPzPNRjXqI7Pf1yPJh3bKZ63bFAPDVs5QlpYiHucfpBIZwVdlo+C1bKPfBrCYbO+gIGREUKu+itGyCLSZOe3yUd06fzOEFjUU+8DDKLycu3aNezbtw+BgYG4fPky3n//fSQmJmLKlCkqt1mzZg3Mzc0V8arOWmWVmZKKvbMXY82wD3B536/IzcpC3eb2+NBjMZae+w2Dv/gcprUt1NrXiIVfo61LfxTm52P3jPmIexxW7vlS+SvNSKgAcPToUTg6OqJatWpo06YNTp8+Xdkpl5q0oAD75i2D//E/IdHXx0crl6LPePXv5GzSoS0mrF+FxaeOou+Ej1HdzBQJ4RE46vE/rHR5F7+v/R7B/1xDfk5uBb4KIioPsS/9bpIWFvJLUdJKRSNgFWFHQtIlRaNf3frrLFKiYkTOhqhsOr0t74B16+RZkTOhqmDBggX46KOP8N577yEvL0/lepXxGRPphpMbvfDX91sAAIOmTsS7C2ZBT09P5KxIVzy5eRuRD4NhVL0anD54T+x0KgQ7YL2Bf6cgVN0Bq7q5Gdq7DsTHq76Bu89JzPxlJwZN+0zR+erehb85FQFphcL8fOyeuQAhvtdgXKMGJm3ZgMbt2wIA2g16afrB1OdipklEFSjoih8AoGXvHmjSoS3aD3aGTCrFH99tFjkzIvVEBN7HI7/r0Dc0wIDPOAoWlV1SUhIKCwthY2OjtNzGxgZxcXFq7aOwsBC3b99Gs2bNVK6Tn5+PjIwMpagoKVEx+P1/32PlwHfxx7ofkBITC7Palhg07TMsO3cCH3osgW1ze5XbD/hsAnp9PAoymQy/LPZA2M3bFZYrUVnIpFIcdl+NS3t+AQC8O38mXKdPVrm+xEAfHYYOwsyDO/HVz9vQbtAASPT1EXLVHz99MRv/e/dj+B35jZ2uiLRM7KN/O2BlJCVDEAQRsyEqm/TEJGQk/zvFUPqLKaWJtF19xxZ4q18vyKRSeP+0V+x0iMqkcbs2qN2gPnKzsnDf57LY6ZAWSE6W/x63trZWWq7OZ0xz5szBwoULMWjQINy7d++V61bmZ0yk/S7u/BnHV30HAOgz7kN8uHIJJPr6ImdFuuLyvkMAgJ4fj4S+gYHI2ZQ/dsB6A9nPS56CsG4Lewz4bDy+3LMFHpdPY/y6leg8fAjMalsiJyMTgecu4tDSlVjebxj2zFooRupEZVKYn49dMxfikd91eSesrRvQuF0bRQcsTj9IpNvCbgSgIC8PlvXr4uPV7gAA/+N/atQIJ5MmTUJ4eDhycnJw7do1dOnS5ZXrjxo1CkFBQcjJycHdu3cxZMiQSsqUxHJu6y4AQNf33kYtmzoiZ0PaqqCgAAEBAXB2dlYs09PTg7OzM/z8/NTah0QiQZs2bRAbG1tRaZZJbmYW/v75INYM/QB75yzB08B7MDAyQtf33sa84/sx5acf0LJ3D6U73zoPH4phs6YBAH5f+z0Cz14QK32i1/pz/WbFnZwukz/F+0vmKtVzdXNzDPhsPJacOY5xa1fArnUrFOTlwf/YH1j33lhsnzILwVf82GmDSEvFPv53CsK0+MRXrEmk2WJC/p2GMD2BtUy6YeDkTwAAd854IykiUtxkiMqo44vRr+55X0JBrurRiIiKFBQUAAD69eunWKbOZ0zz5s3DsmXL4OrqioCAgIpOk6og30PH8MuiFZAWFqLLu8Mwft1K6BsavnY7fkdDrxN45gLS4hNRs4412rsOFDudcqd7XcoqUdaLEbBMLWrhrX690LJPT7Ts7YRatsp3wsc+DkPwFT8EXbmK8Dt3ISuUipEuUbkozMvDrhnz8dnm79C8e2dM3v49jGvU4PSDRFVAfk4uwm7chmOv7qjdoB5yM7Nwxmu72GkpWb16NaZOnQp/f3/MmjULZ8+ehYODAxITi38g7eTkhIMHD2LRokU4efIkxowZgxMnTqBjx4548OCBCNlTZQi/FYjQG7fQrEtH9J84Dr+t2SB2SqSlNmzYgL179+LmzZu4fv06Zs2aBRMTE+zeLZ/qcu/evYiOjsbixYsBAMuWLcO1a9cQGhqKWrVqYd68eWjUqBF27Ngh5stQSSaV4u65i7h77iLs2r6FvuM/QpuB/dCiexe06N4FCeERuLz/V2Qmp2D0ikUAgIu79uGfX46InDnR613c+TNy0jPw/tK56PnRSNQwN4P3jp/R88P30Xn4UBhVrwZAPqKI76Fj8Dv8G0f6JdIRmcmpyEhOgVltS6Qlcto20l4xwY/h0KMbALCWSSfYNrdHW5f+kMlk8N6+R+x0SEtYWFgAAKKioiCTyXDs2DHMnDkTWVlZr9yue/fuWLVqFbp16wapVIo7d+5g8ODByM19s9Ft9Q0MFF8kB3D6QSolNzc3XL16Va3PmObPnw8PDw+MGTMGT58+VYzQnpmZ+dr6JyqNgJNnkJedjfHrVqKtS398ZlIDe2YtfOVo4PyOhl5HWliIfw4exbBZ09B3wscIOHlG7JTKFTtgvYGiKQhNLGph4uZ1iuX5ObkIvR6Ah5d9EfyPH1Jj1JuGhEhbFOTmYef0ufjM8zs079YZABB28za/lCCqAoKu+MKxV3cAwIUde5GZnCpyRsr27t2LPXv2AACmTp2KYcOGYeLEiVi7dm2xdWfOnIkzZ87gu+/kQ+l+8803cHFxwVdffYVp06YVW9/IyAjGxsaKx2ZmZhXzIqjCnd+6C826dET3D0bAvktHUXL487vNCLnqL8qxqXwcPnwY1tbW8PDwgK2tLe7cuQNXV1ckJCQAAOzs7CCTyRTrW1hY4KeffoKtrS1SU1MREBCAHj16ICgoSKyXoLZndx9g37xlsKhri15jPkC3kcNRp0kjjFo2X7HOzT9P49SLUYWItIHfkd+Qk56OMWuWo8PQQegwdJDiueigR/h73yHcOeMN6Yu7kYlId8Q+DoNZbUuOGkRaLfrFCFgFuXnIzcgUORuiNzdwkhsA+ahB8U+eipsMaY2iG5pGjBiB/Px87N69G9u3b8fYsWNVbtO9e3ecOXMGa9aswfTp01FYWIh27doptd/LyrFXd5jUqom0hESEXueIRFQ6S5cuVfszpmnTpsHY2BjHjh1T2sfy5cuxYsWKSs2bdN/9i5ex44s5+PSHtXDo0Q2Tt23Cji/nqPwbtCK/owH4PY2u8DtyAgMnf4L6LVtg/u8HIZNW/gBGfkdOwPfg0XLfLztgvYHMlBQ8j4tHLVsbJEdFI+jyVTy8fBVhN2+jMI9Di5JuK8jNw67p8/CZ13o069IRN37/S+yUiKgS3L94BcNmfYnncfG4vO9XsdNRMHwx9K2Pj49imSAI8Pb2hpOTU4nbODk5YcMG5dGPzp49ixEjRpS4/qJFi7B8+fLySZhEFXo9AKHXA9CsayfUbW4vSg7GpiaiHJfKl5e5qZ8MAAAgAElEQVSXF7y8vEp8rn///kqPZ8+ejdmzZ1dGWhUmNTYOf67fjHNbdqLLiGHoPW40rBo2QIjvNRz+ZjWnZCOtc+fsBeRkZuGTjWtgYGyEh5eu4PK+XxF287bYqVEZTJo0CdOnT4etrS0CAwMxffp03LhxQ+X6NWvWxKpVq/D+++/D0tISERERmDVrFk6fPl2JWZMYQq8HoEX3LogOfvz6lYk0VPitQBQWFCA65JHYqRC9sRo1zdGqby8AwPltu0XOhrSFo6MjXFxcAAA3b95ERkYGpk+fjlOnTmHu3LmIjY0tcbuNGzfihx9+UOoI8OhR+VxL2wyUfw5w+9R5COXQoYuqlu3bt2P9+vUlPvffz5iaNGlSGSkRKTz2v4ltk2fi8x/Xo+Fbjqjb3B7htwKV1qmM72gAfk+jK3LS03Ht2O/oO/4j2DRtLEoOppYWFbJfdsB6A7JCKTZ84IZqpqZIjooWOx2iSpefk4ttk2agTtPGiHscJnY6RFQJnsfFY+07HyIvJweF+flip6NQu3ZtACg2jG18fDwcHR1L3MbW1hbx8fHF1re1tS1x/TVr1ig1BszMzBAdzd//2mrnV/PQsHVLSCQSUY4fG8rfm6S98rKz8c8vR+B76BjqtWiG2MdhotylRFQeQnyvYc3boyGRSPA8Lv71G5DGKs00B4aGhjh//jwSEhIwatQoREdHo1GjRnj+nKM6VwU+u/bj/sXLiA8LFzsVojIraptnPU8TOxWiN5adlo41Q0ehZe8eiH0UKnY6pCWcnJyQmpqqmIYQALy9vSGTydCtWzecOHGi2DbW1tbo3r07Dhw4AF9fX9jb2yM4OBhLliyBr6+vymOpO9rKkRXf4t6FS/wbg4h0UkTgffz46RewrFe3WOcroHK+owH4PY0uObnBE/fO+8DAyEiU46dEl9xZ+02xA9YbynqexoYuVWkyqZSdr4iqmOfxCWKnIIr8/Hzka1CnM3oz+Tk5CLtxS+w0iLSaIJMhOpijLpD24zRkuqE00xxMnDgRlpaW6NGjBwoLCwEAERERr9w/pznQHTKplF+Mkk6oqC8MiMSQkZyC6ydOip0GaRFbW1skJSUpdcCSSqVISUlR+cV906ZNAcinaZs7dy7u3LmDCRMm4MKFC2jdujVCQ0vuAKjuaCvSggI88LlS+hdDRKQlYh+FIfaRuN8J83sa3SErlCL89l2x0yh34tzyT0RERFSOkpOTAcjvZHuZjY0N4uLiStwmLi4ONjY2aq9PRERERJqnLNMcDB8+HH5+fvDy8kJcXBzu3buHRYsWvXJkzEWLFiE9PV0RvMOWiIiIqPytWbMGgiC8MhwcHMq076K/9bZt24Y9e/bgzp07mD17NkJCQjBx4sRX5mRubq6I+vXrl+n4RES6jN/REMmxAxYRERFpvYKCAgBAv379FMv09PTg7OwMPz+/Erfx8/ODs7Oz0jIXFxeV6xMRERGR5nnVNAevGv1g1KhR0NfXx9ChQ7Fy5UrMmTMHS5cuVXkcfvFGREREVPHWr18PR0fHV8aTJ08QFxcHKysrpW319fVhaWmp8ov72Fj5yIEPHz5UWh4UFAQ7OzuVOeXn5yMjI0MpiIhIGb+jIZJjBywiIiLSGW5ubpgwYQIcHR2xZcsWmJiYYPfu3QDk09KsXr1ase6mTZvg6uqK2bNnw8HBAe7u7ujcuTM8PT3FSp+IiIiIKoFEIkFCQgImT56MW7du4fDhw1i1ahWmTp2qcht+8UaVYdKkSQgPD0dOTg6uXbuGLl26vHL9mjVrwtPTEzExMcjNzUVISAiGDBlSSdkSERGVv6SkJISEhLwyCgoK4OfnpzT9IAAMGDAAEokE/v7+Je776dOniI6OLjaCVosWLV47HTUREamH39FQVccOWERERKQzli5dCg8PD9y5cwft27eHq6srEhISAAB2dnaoW7euYl0/Pz+MGTMGkydPRmBgIEaNGoURI0bgwYMHYqVPRERERKVUlmkOYmNj8ejRI8hkMsWyoKAg1K1bVzGlIZEYVq9ejRUrVqBjx44IDAzE2bNni9V2EUNDQ5w/fx6NGzfGqFGj4ODggEmTJnF6TCIiqhKCg4Nx/vx5AECnTp3Qo0cPeHp64tChQ4qRrurVq4egoCClDs3r1q3DjBkzMHLkSNjb28PDwwOOjo7YuXOnKK+DiEjX8DsaIkCoCmFmZiYIgiCYmZmJngtDN0KsmmItM8ozWMcMXQkxaop1zCjvYE0xXhesEUZ5Bv8OZOhKFNXU1q1bFcv09PSEyMhIYcGCBSVus2rVKiE8PFzQ09NTLJsxY4YQHR1d6uOylhnlEUX1tG3bNsUyPT09ISoqSmUdT5kyRQgNDRUMDAzUPo6RkZFgZmamiHr16rGOGeUavDYyXhWsD0Z5h52dnSAIgpCeni48f/5c2Llzp2BiYqJ4vlGjRoIgCELfvn2VtluwYIHw7NkzITMzU/D19RV69uxZquOylhnlGWybM3QlWMsMXYjyqCeOgEVERERERERERFqtNNMcbNmyBZaWlti0aROaN2+OoUOHYvHixfDy8hIrfariikZe8/HxUSwTBAHe3t5wcnIqcZvhw4fDz88PXl5eiIuLw71797Bo0SJIJKo/7l20aBHS09MVwdGyiIhIm6WmpgIA6tevj1q1auGzzz5DVlaW4vmIiAjo6enh77//Vtpu7dq1sLOzg6mpKXr27AlfX99KzZuIiIh0FztgERERERERERGRVivNNAdRUVEYPHgwunTpgrt37+KHH37Apk2b8O2334qVPlVxtWvXBgAkJiYqLY+Pj4etrW2J2zRt2hSjRo2Cvr4+hg4dipUrV2LOnDlYunSpyuOsWbMG5ubmiqhfv375vQgiIiIiIiKiKs5A7AQqm5mZmdgpkI4Qu5bEPj7pBrHrSOzjk+4Qs5ZYx1ReWEukLtYKlQex60js45PuKKql7du3Y/369SWu079//2LLrl27pnJkobIcn+hNmJqalnobiUSChIQETJ48GTKZDLdu3UL9+vUxb948eHh4lLhNfn4+8vPziy1nHVN5YS2ROlgnVF7EriWxj0+6Qew6Evv4pDvEriWxj0+6oTzqqMp0wCo6WRxam8qbmZkZMjIyKvV4AGuZyhfrmHRFZdYy65gqSmVfk0l78LpDFYF/B5KuYC2TLrCzs1N6bGNjg7i4uBLXjY2NRUFBAWQymWJZUFAQ6tatC0NDQxQUFLz2eKxjqihs01BJeM2hisK/A0kXsI5JV7CWSRe8SR1XmQ5YMTExqF+/Pht+kBdMdHQ0z4caXneuzMzMEBMTU6k5sZblWMel86rzxToWF2tZfZp2TWYd/4t1rD5Nq2PSLrzu/IvXHfXx70DNxTpWnyb+/mQty7GO1fe6c3Xp0iV06NABu3fvBgDo6enB2dkZnp6eJe7P19cXY8aMgZ6eHgRBAAC0aNECMTExanW+AljHL2Mtq08Tr8mkHXjN+RevOerTxGsOa/lfrGX1sW2uuVjH6uM1WXOxjtVXGXUsMKpWmJmZCYIgCGZmZqLnounBc6W5wfeG50tXgu8Nz5UuBN8bnisGo7KDP0s8V7oQfG94rnQh+N6U37kaPXq0kJOTI0yYMEFwdHQUtm7dKqSkpAh16tQRAAh79+4VVq9erVi/QYMGQlpamvDDDz8IzZs3F4YOHSrExcUJixcvFv21amOwlnmuGIzKDP4c8VzpSvD94bnSheB7w3OlC8H3RnPOVZUZAYuIiIiIiIiIiIhIEx0+fBjW1tbw8PCAra0t7ty5A1dXVyQkJACQT0/48nSDUVFRGDx4MDZu3Ii7d+8iOjoamzZtwtq1a8V6CURERERERERVGjtgEREREREREREREYnMy8sLXl5eJT7Xv3//YsuuXbsGJyenik6LiIiIiIiIiNSgD2C52ElQ5ZNKpbh06RKkUqnYqWg8nivNxfemdHi+NBffG/XxXGkuvjfq47kiKh/8WVIfz5Xm4nujPp4rzcX3Rn08V5qN74/6eK6I3hx/jtTHc6XZ+P6oj+dKc/G9UR/Plebie6O+ijxXepDPRUhERERERERERERERERERERERESlJBE7ASIiIiIiIiIiIiIiIiIiIiIiIm3FDlhERERERERERERERERERERERERlxA5YREREREREREREREREREREREREZcQOWERERERERERERERERERERERERGXEDlg6yt3dHYIgKEVQUJDieWNjY3h6eiIpKQkZGRk4evQo6tSpI2LGlad37974448/EB0dDUEQ8O677xZbZ8WKFYiJiUF2djbOnz+PZs2aKT1vYWGB/fv3Iy0tDampqdixYwdMTEwq6yVUKaxl1VjL2oN1rBrrWLuwllVjLROVP15zVOM1R3uwjlVjHWsX1rJqrGXtwTpWjXVMVDF43VGN1x3twTpWjXWsPVjHqrGOtQtrWTVNqWV2wNJh9+/fh62trSJ69eqleG7jxo1455138MEHH6Bv376oV68ejh8/LmK2lcfExASBgYH48ssvS3x+/vz5mDFjBqZOnYpu3bohKysLZ8+ehbGxsWKdAwcO4K233oKLiwvefvtt9OnTB9u3b6+sl1DlsJZLxlrWLqzjkrGOtQ9ruWSsZaKKwWtOyXjN0S6s45KxjrUPa7lkrGXtwjouGeuYqOLwulMyXne0C+u4ZKxj7cI6LhnrWPuwlkumSbUsMHQv3N3dhdu3b5f4nLm5uZCXlyeMHDlSsczBwUEQBEHo1q2b6LlXZgiCILz77rtKy2JiYoQ5c+Yona+cnBzhww8/FAAIjo6OgiAIQqdOnRTrDB48WJBKpULdunVFf026Fqxl9YK1rNnBOlYvWMeaH6xl9YK1zGCUT/Cao17wmqPZwTpWL1jHmh+sZfWCtazZwTpWL1jHDEb5Ba876gWvO5odrGP1gnWs2cE6Vi9Yx5ofrGX1Qsxa5ghYOqx58+aIjo5GWFgY9u/fj4YNGwIAOnXqBCMjI3h7eyvWDQkJQUREBJycnMRKVyM0adIEdevWVTo36enp8Pf3V5wbJycnpKamIiAgQLGOt7c3ZDIZunXrVuk5VwWs5dJjLWse1nHpsY41E2u59FjLRGXHa07p8ZqjeVjHpcc61kys5dJjLWse1nHpsY6J3gyvO6XH647mYR2XHutY87COS491rJlYy6VXmbXMDlg6yt/fH5988glcXV0xbdo0NGnSBFeuXIGpqSlsbW2Rl5eHtLQ0pW3i4+Nha2srUsaaoej1x8fHKy1/+dzY2toiISFB6XmpVIqUlJQqf/4qAmu5bFjLmoV1XDasY83DWi4b1jJR2fCaUza85mgW1nHZsI41D2u5bFjLmoV1XDasY6Ky43WnbHjd0Sys47JhHWsW1nHZsI41D2u5bCqzlg3eMFfSUGfOnFH8/969e/D390dERARGjx6NnJwcETMjKh3WMukC1jHpCtYyEVUmXnNIF7COSVewlkkXsI6JqLLxukO6gHVMuoB1TLqCtaz5OAJWFZGWloZHjx6hWbNmiIuLg7GxMWrWrKm0jo2NDeLi4kTKUDMUvX4bGxul5S+fm7i4ONSpU0fpeX19fVhaWlb581cZWMvqYS1rNtaxeljHmo+1rB7WMlH54DVHPbzmaDbWsXpYx5qPtawe1rJmYx2rh3VMVH543VEPrzuajXWsHtaxZmMdq4d1rPlYy+qpzFpmB6wqwsTEBPb29oiNjUVAQADy8/Ph7OyseL5FixZo1KgR/Pz8RMxSfOHh4YiNjVU6N2ZmZujWrZvi3Pj5+cHCwgIdO3ZUrDNgwABIJBL4+/tXes5VDWtZPaxlzcY6Vg/rWPOxltXDWiYqH7zmqIfXHM3GOlYP61jzsZbVw1rWbKxj9bCOicoPrzvq4XVHs7GO1cM61mysY/WwjjUfa1k9lV3LAkP3Yt26dUKfPn2ERo0aCU5OTsK5c+eEhIQEwcrKSgAg/Pjjj8LTp0+Ffv36CR07dhR8fX0FX19f0fOujDAxMRHatWsntGvXThAEQZg1a5bQrl07oWHDhgIAYf78+UJKSorwzjvvCK1btxZ+++03ISwsTDA2Nlbs49SpU0JAQIDQpUsXoUePHkJISIhw4MAB0V+bLgZrWXWwlrUnWMeqg3WsXcFaVh2sZQaj/IPXHNXBa472BOtYdbCOtStYy6qDtaw9wTpWHaxjBqNigtcd1cHrjvYE61h1sI61J1jHqoN1rF3BWlYdGlTL4p8MRvnHwYMHhejoaCE3N1eIjIwUDh48KDRt2lTxvLGxseDp6SkkJycLmZmZwrFjxwQbGxvR866M6Nu3r1CS3bt3K9ZZsWKFEBsbK+Tk5Ajnz58XmjdvrrQPCwsL4cCBA0J6errw/PlzYefOnYKJiYnor00Xg7WsOljL2hOsY9XBOtauYC2rDtYyg1H+wWuO6uA1R3uCdaw6WMfaFaxl1cFa1p5gHasO1jGDUTHB647q4HVHe4J1rDpYx9oTrGPVwTrWrmAtqw5NqWW9F/8hIiIiIiIiIiIiIiIiIiIiIiKiUpKInQAREREREREREREREREREREREZG2YgcsIiIiIiIiIiIiIiIiIiIiIiKiMmIHLKp07u7uEAT1Zr4UBAHu7u4VnBHRm3Fzc4MgCGjUqNFr1w0PD8fu3bsrISvSVI0aNYIgCHBzcxM7FSIiIioDtmdIF7FNQ6XBNg0REZF2Y5uGdA3bM1QabM8QUUViBywiIiIiIiIiIiIiIiIiIiIiIqIyMhA7ASIioqokIiIC1apVQ0FBgdipEBERERERlRrbNEREREREpK3YniGiisQRsIiIiCpZXl4eZDKZ2GkUY2xsDD09PbHTICIiIiIiDcc2DRERERERaSu2Z4ioorADloaws7ODl5cXgoODkZ2djaSkJBw+fLjE+Ypr1qyJDRs2IDw8HLm5uYiMjMTevXtRu3ZtxTrGxsZwd3dHSEgIcnJyEBMTg2PHjqFp06Zq5+Tj44N79+6hTZs2uHTpErKysvD48WOMHDkSANCnTx9cu3YN2dnZCA4OhrOzc7F99OzZE9evX0dOTg5CQ0MxefLkEo9lZGSEDRs2ICEhAenp6fj9999Rv359tXMl8ZiammLjxo2KeoyPj8e5c+fQoUMHAKrn0/bx8YGPj4/icd++fSEIAj744AN88803iIqKQnp6Oo4cOQJzc3MYGRlh48aNiI+PR0ZGBnbt2gUjI6NS5bp7925kZGSgYcOG+PPPP5GRkYGoqCh88cUXAIDWrVvjwoULyMzMxNOnT/Hxxx8X20erVq1w4cIFZGdnIzIyEkuWLIFEUvKldMmSJYiMjERWVhYuXryIVq1alSpf0lzu7u4QBAHNmzfHvn378Pz5cyQkJMDDwwMA0KBBA5w4cQJpaWmIjY3F7NmzFduWNL94UW3Wq1cPv/32GzIyMpCQkIB169aprC9Viq7dHTt2hK+vL7Kzs/HkyRNMmTJFab2in7kPP/wQK1euRFRUFLKzs2Fubv4GZ4aIiKoqtmfYntFmbNOwTVMVsU1DRESkjG0atmm0FdszbM9URWzPEJGm4hSEGqJLly7o0aMHDh06hKioKDRu3BjTpk3DpUuX0KpVK+Tk5AAATExMcOXKFbRs2RK7du3CrVu3YGVlheHDh6NBgwZITk6GRCLByZMnMXDgQBw8eBCbNm2CmZkZXFxc0Lp1azx58kTtvCwsLHDy5EkcOnQIR44cwbRp03Do0CGMHTsW33//PbZu3YpffvkF8+bNw9GjR9GwYUNkZmYCkP+hdO7cOSQmJmL58uUwMDDAihUrEB8fX+w4O3bswPjx43HgwAFcvXoVAwYMwF9//VU+J5cq1NatWzFq1Ch4enri4cOHqF27Nnr16oWWLVvi9u3bpd7fokWLkJOTg2+//RbNmjXD9OnTUVBQAJlMBgsLCyxfvhzdu3fHp59+ivDwcKxcubJU+9fX18fp06dx+fJlzJ8/H2PHjoWXlxeysrKwatUqHDhwAMePH8fUqVPx888/w8/PD0+fPgUA2NjYwMfHBwYGBvj222+RlZWFyZMnK34+X+bh4YFly5bhr7/+wqlTp9CxY0ecO3eu1A0S0my//vorgoKCsHDhQgwbNgzLli1DSkoKpkyZgosXL2LBggUYO3Ys1q9fjxs3buDKlSsq96Wvr4+zZ8/C398fc+fOxcCBAzF37lyEhYVh69atpcrLwsICp06dwuHDh3Hw4EGMHj0aW7duRX5+frHG9rJly5Cfn4/vvvsOxsbGyM/PL9O5ICKiqo3tGbZntBnbNGzTVGVs0xAREcmxTcM2jbZie4btmaqM7Rki0kQCQ/yoVq1asWXdunUTBEEQxo0bp1i2fPlyQRAEYcSIESr39cknnwiCIAizZs16o5x8fHwEQRCEjz76SLGsRYsWgiAIQmFhodC1a1fFchcXF0EQBMHNzU2x7Pjx40J2drbQsGFDxTJHR0ehoKBAEARBsaxt27aCIAiCp6en0vH3798vCIIguLu7i/7+MFRHamqqsHnzZpXPh4eHC7t37y6xvnx8fBSP+/btKwiCINy9e1cwMDBQLD9w4IAglUqFv/76S2l7X19fITw8vFS57t69WxAEQVi4cKFiWc2aNYWsrCxBKpUKo0ePViwvqvWX62/Dhg2CIAhCly5dFMusrKyE1NRUQRAEoVGjRoplubm5wp9//ql0/P/7v/8TBEEo8XwwtCvc3d0FQRCErVu3KpZJJBLh2bNnglQqFebPn1+sxore90aNGhW7XhbV5tKlS5WOExAQINy4caNUuRVdu7/++mvFMkNDQ+HWrVtCXFyc4uer6GcuNDS0xN9BDAaDwWCUJtieYXtGm4NtGrZpqmKwTcNgMBgMhnKwTcM2jbYG2zNsz1TFYHuGwWBoanAKQg2Rm5ur+L+BgQEsLS0RGhqK1NRUdOzYUfHcyJEjcefOHZw4cULlvkaOHInExERs3rz5jfPKyMjAoUOHFI8fPXqE1NRUBAUF4fr164rl/v7+AKAYPlcikWDw4ME4ceIEIiMjFesFBwfj7NmzSscYOnQoAOCHH35QWv7999+/cf5U8Z4/f45u3bqhbt265bK/n3/+GYWFhYrH/v7+kEgk2LVrl9J6/v7+aNiwIfT19Ut9jB07dij+n5aWhpCQEGRlZeHw4cOK5UW1/vKQ0EOHDoWfnx9u3LihWJaUlIQDBw4o7X/gwIEwNjYu9jPImtY9L9eSTCbDzZs3IZFIsHPnTsXyohpTZ3jx/95FceXKlVINS16koKAA27ZtK/bYxsYGnTp1Ulp37969Sr+DiIiIyoLtGbZntBnbNGzTVGVs0xAREcmxTcM2jbZie4btmaqM7Rki0jTsgKUhqlWrhhUrVuDZs2fIy8tDcnIykpKSYGFhgZo1ayrWs7e3x/3791+5L3t7e4SEhEAqlb5xXlFRUcWWpaWlKf3BDgDp6ekA5EMqAoC1tTVq1KiBx48fF9s+JCRE6XGjRo0glUoRFhb2yvVIM82fPx+tW7dGZGQk/P394e7ujiZNmpR5f8+ePVN6nJaWBgDFai4tLQ36+vpKPx/qyMnJQVJSUrF9qar1opoG5LWqbk0DKLZuUlISUlJSSpUvabaS6jUnJwfJycnFlr9cSyUpqTZTU1NhaWlZ6rxiYmKQnZ2ttOzRo0cAgMaNGystDw8PL/X+iYiI/ovtGbZntBnbNGzTVGVs0xAREcmxTcM2jbZie4btmaqM7Rki0jTsgKUhNm/ejCVLluDw4cMYPXo0XFxcMHDgQCQlJUEiEe9tUtVAULVcT0+vItMhDXTkyBE0bdoU06dPR0xMDObNm4cHDx7A1dUVACAfybg4VXdFVHTNsaapPJVUN2WtpfL4QKYscnJyRDkuERHpFrZnSJuxTUNVGds0REREcmzTkLZie4aqMrZniEjTsAOWhhg1ahT27t2LuXPn4tixY/D29sY///yDWrVqKa0XFhaG1q1bv3JfYWFhcHBwgIGBQUWm/EqJiYnIzs5G8+bNiz3n4OCg9DgiIgL6+vqwt7d/5XqkueLi4rBlyxa89957aNKkCZKTk7FkyRIA8t7h/61j4N87ELRJRESE2jUNoNi6VlZWZeopT1Ra9erVQ40aNZSWtWjRAgDw9OlTETIiIiJdx/YM2zPajm0atmlIs7BNQ0RElY1tGrZptBnbM2zPkGZhe4ao6mIHLA0hlUqL9bydPn16sT/Qjx07hvbt22PEiBEq93Xs2DFYW1vjq6++qpBc1SGTyXD27FmMGDECDRs2VCx3dHTE4MGDldY9ffo0AGDGjBlKy2fNmlXxidIbkUgkMDc3V1qWmJiImJgYGBsbA5A3Nrt37w5DQ0PFOsOGDYOdnV2l5loeTp06BScnJ3Tp0kWxzMrKCmPHjlVaz9vbG/n5+Zg+fbrSctY0VRZDQ0NMmTKl2OOEhAQEBASImBkREekqtmfYntFWbNOwTUOaiW0aIiKqbGzTsE2jjdieYXuGNBPbM0RVl3jd70nJyZMnMX78eKSlpeHhw4dwcnJSDG/7snXr1mHUqFE4cuQIdu3ahYCAAFhaWmL48OGYOnUq7t69i59//hkTJkzAxo0b0bVrV1y5cgUmJiYYOHAgfvzxR/zxxx+V8prc3d3h6uqKK1eu4Mcff4SBgQGmT5+OBw8eoF27dor1AgMD8csvv+DLL79EzZo1cfXqVTg7O6NZs2aVkieVnZmZGaKionD06FEEBgYiMzMTAwcORNeuXTF79mwAwI4dO/DBBx/gzJkzOHz4MOzt7TFu3DiEhoaKnH3p/e9//8P48eNx5swZbNq0CVlZWZg8eTIiIiKU7iBJSkrCd999h8WLF+PkyZM4deoUOnTogCFDhiAxMVHEV0BVRXR0NBYsWIDGjRvj0aNH+PDDD9GhQwdMmjQJhYWFYqdHREQ6iO0Ztme0Fds0bNOQZmKbhoiIKhvbNGzTaCO2Z9ieIc3E9kMIl/IAACAASURBVAxR1cUOWBpi5syZkEqlGDt2LKpVqwZfX18MHDgQZ8+eVVovKysLvXv3xooVK/Dee+/Bzc0NCQkJuHDhAqKiogDI72wYOnQolixZgjFjxmDkyJFITk7GP//8g3v37lXaa7p37x4GDx6MDRs2wMPDA1FRUXB3d0fdunWV/rgHgIkTJyIxMRFjx47FiBEjcPHiRQwbNkzxmkgzZWdn48cff8SgQYPw/vvvQyKRIDQ0FNOmTcPWrVsBAOfOncPs2bMxe/ZsfP/997h58ybefvttrF+/XuTsSy8uLg79+/fH5s2bsXDhQiQnJ2Pr1q2IiYnBrl27lNZdunQpcnNzMXXqVPTv3x/+/v4YNGgQ/vrrL5Gyp6okNTUVbm5u2Lx5MyZNmoT4+Hh8+eWX2LFjh9ipERGRjmJ7hu0ZbcU2Dds0pJnYpiEiosrGNg3bNNqI7Rm2Z0gzsT1DVHXpARDEToKIiIjKh4+PD6ysrNCmTRuxUyEiIiIiIio1tmmIiIiIiEhbsT1DVLVJxE6AiIiIiIiIiIiIiIiIiIiIiIhIW3EKwirIwsICRkZGKp+XSqXF5jUn0mTm5uaoXr36K9eJj4+vpGyIKgav3URERHL8nUi6iG0aqgp4/SYiIpLj70TSNWzPUFXAazcRqYMdsKqg48ePo1+/fiqff/r0KZo0aVJ5CRG9oU2bNuGTTz555Tp6enqVkwxRBeG1m4iISI6/E0kXsU1DVQGv30RERHL8nUi6hu0Zqgp47SYidegBEMROgipXx47/z96dx1VV538cf7GDCCqIbCqLoKilCK6NjZqaW1lY6dhio2UuU5OjNo5lTZpKza+wRUbLzMxJJ2fSylxQyzL3FVxRVMAFQXADZV9+fyC3GEFBgcPyfj4e9/GQc7/nnPd9zJ24l/M5n08QjRo1KvX5jIwMtm3bVoWJRO5O69at8fDwuOWaH374oYrSiFQO/bdbRESkkH4nSm2k7zRSF+i/3yIiIoX0O1FqG32fkbpA/+0WkbJQAZaIiIiIiIiIiIiIiIiIiIiIiMgdqlMjCD08PEhLSzM6htQiDg4OJCQkVPl59V6WiqT3sdQWRr2XRUSqkn5/SkXS50CpLfReltpA32dEpC7Q706paPocKNXB6NGj+fOf/4yrqyuHDh3ilVdeYe/evSWutbS0ZNKkSTz55JO4u7sTExPD22+/zdKlS4ut8/Dw4J133mHAgAHUq1ePEydOMHLkSNNxFy1adNPYx3Xr1jFgwIAy59b7WCqavtOI1KEOWB4eHpw7d87oGFILeXp6VukvE72XpTLofSy1RVW/l0VEqpJ+f0pl0OdAqS30XpbaQN9nRKQ20+9OqSz6HCi1wYMPPsiGDRsAaNiwIfv372fTpk3MmzeP5ORk/P39OXnyJKdOnQIKC7BcXV0ZOXKk6RhZWVlcuXKlTOfT+1gqi77TSF1XZzpgFVXwenp6qppXKoSDgwPnzp2r8veT3stSkfQ+ltrCqPeyiEhV0u9PqUj6HCi1hd7LUhvo+4yI1AX63SkVTZ8DpTr48ccf2bdvH5MnTwbAzMyMo0eP8vHHHzNnzpyb1h87dox3332XBQsWAL++j5977jlTAdaUKVM4c+YMo0aNMu0XFxd307GysrJISkq6o9x6H0tF03cakUJ1pgCrSFpamv6PL7WC3stSG+h9LCIiUn76/Sm1gd7HUlvovSwiIlI++t0ptYXey2JlZUVgYCAzZ84s9l7YsGEDQUFBJb4/rK2tuXLlyk3Pde3a1fTvwYMHExERwfLly+nRowfnzp3jn//8J59++mmxfXr27ElSUhKXL1/mxx9/ZNq0aVy6dKnErNbW1tjY2Jh+dnBwAPQ+FhGpaOZGBxAREREREREREREREREREakpGjdujKWl5U1dqJKSknBzcytxn4iICCZOnIifnx9mZmb06tULoNh6X19fxo0bR0xMDP369WPevHl8+OGHjBgxwrRm3bp1jBgxgt69ezNlyhR69OjB2rVrMTcv+dL/1KlTSU1NNT00flBEpHLUuQ5YIiIiIiIiIiIiIiIiIiIiVenll19mwYIFREdHU1BQQGxsLAD5+fmmNebm5uzZs4fXXnsNgMjISO655x7Gjh3LF198AcBXX31lWn/o0CEOHDjAqVOn6NmzJz/++ONN5w0NDSUsLMz0c9G4OBERqVjqgCUiIiIiIiIiIiIiIiIiIlJGKSkp5Obm4urqWmy7q6sriYmJpe4TEhKCvb09Xl5eBAcHAxAXF2dac/78eY4cOVJsv6NHj9K8efNSs8TGxpKcnIyfn1+Jz2dnZ5vGDWrsoIhI5VEBloiIiIiIiIiIiIiIiIiISBnl5OSwd+9eevfubdpmZmZG79692b59+y33zcrKIiEhAUvLwmFVq1evNj23detWWrVqVWx9y5YtiY+PL/V4np6eODs7c/78+Tt5KSIiUkFUgCVyh+677z4Ajh07RkFBAY888sht9+nRowd79+4lMzOTmJgYnn322cqOKSIiIiIiIiIiIiIiUit99dVXnDt3TtdpxBBhYWGMHj2aESNGEBAQwLx587C3t2fRokUALF68mNmzZ5vWd+7cmZCQEHx8fOjevTsrVqwA4IMPPjCtmTNnDl27dmXq1Km0aNGC4cOH88ILLxAeHg6Avb09//jHP+jSpQteXl488MADfPvtt5w4cYKIiIgqfPUiIvK/VIAlcgtmZmY4ebqX+Jy9vT0AkyZNKtOxvL29Wb16NZs2bSIwMJD333+fTz/9lAcffLDC8orUBla2Ntg3bGB0DBERERERkTtiZm6OuaWF0TFEREREagXnZk1v+fyhQ4f405/+VKZj6TqNVLTly5czefJkZsyYQWRkJIGBgfTv358LFy4A0Lx5c9zdf73OaGtry8yZMzly5AgrV640day6evWqac2ePXsICQlh+PDhHDp0iNdff50JEyawdOlSAPLy8mjXrh3fffcdx48fZ+HChezdu5f777+f7OzsKnz1IiLyvyyNDiBSXTk4O/Fk6N9x9fXhvSdGcP3ylWLPb9iwAYDvv/++TMcbO3YssbGxTJ48GYDo6Gi6d+/OX/7yF9avX1/qftbW1tjY2Pyay8GhvC9Fqol7+/TksWmvYGltbcj5t/77a9Z+ON+Qc5dV257defyNKURv2cFXb8wyOo6IiIhIhXDydGfUR//Htq9WsO2rFUbHEbljj017BccmjVk88VXyc/OMjlMtPfN/b9G21/0smTyNwz9tMTqOiIiISI1lZm5OyNSJdBw8kHmj/sSZw0dLXPfWW2+RlpZWpmPeyXUaXaOpPdxb+jHqo39gVwn/G/4rIQYSYgAY/P4sBt/YvpVcaNWUmds2cHLPPhb9eQpt27Y17efg4MDw4cNvOt7q1auLjSX8rczMTPr371/hrwHAsYkLf/1m6V0dIyM1jZTTZ0g5fZbk02e4ePosyfFnuHg2gbycnApKKiJSPakAS6QEre7rwvDZb+Dg7ERWegaeAS05vn3XXR2zW7dubNy4sdi2iIgI3n///VvuN3XqVN588827OrcYz87Rgcdf/yv1nRoZlsHKxpjCr/JIu3gJR5fGdBw8gB8WfkFK/BmjI4mIiIjctU6PPoS7fwsemvgiUet/vOnmDpGawM7RkfuGDQHAM6AVZw4duetj3n///bzyyisEBwfj4eHBo48+yrfffnvLfXr06EFYWBht27blzJkzvPvuu8We/9vf/saQIUMICAggIyODbdu2MWXKFI4fP25as2nTJnr27Flsv/nz5zNu3Li7fk35+flY2djQxNdbBVgiIiIid8jS2pqn3n6Tdn17kZ+fj0crv1ILsMrjTq7T6BpN7REydSJOHiVPvakK1ra2hp27rMzMwM6h/l0dw86hPk6e7rTs1rnY9vz8fK6cTyLl9BmS48+QcuYsKfFnSTmt4iwRqT1UgCXyG+aWFgx4aQwPjHoGgITjJ1gyeRoXYuPv+thubm4kJSUV25aUlESDBg2wtbUlMzOzxP1CQ0MJCwsz/ezg4MC5c+fuOo9UrQEvjaG+UyMST5xi0YS/QUFBlWfISLtW5ecsr9MHj3B40y+07XU//cY/z5dT/m50JBEREZG75t+lIwA29ez4/TN/qPZdSUVK4tHKz/TvZm0DKqQAy97enqioKD777DNWrlx52/VFI2Pmz5/PU089Re/evZk7d26xNT169CA8PJzdu3djaWnJ7NmzWb9+PW3atCE9Pd207pNPPuGNN94w/fzb5+5G0qk4AFx9vSvkeCIiIiJ1jZ2jAyM/fIcWwR3Izc7my7+9yYENmyrk2HdynUbXaGqHNj2606JjB3KysvjnyPGkX02t8gw5WVlVfs7ySrt4idBBT9z5AczMcHBqROPmTWncvBmNvZrRuFlTGns1xdbeHidP95KLs/LyuHw+iaiIjax+f95dvgoREeOoAEtqhObt2tK4mScHNvxEbiXNL3bydOfpd2bg1f4eoHBc23fvfkSuwR+IsrOzNbO5hmvaphXdhoYAsGLWu+rqdBvrwhfQttf9BPbvww+ffkFizEmjI4mIiIjcMZt69Wh+TxvTz92ffJyfPl9KRmrV/7FX5G54tPI3/btZ29YVcsx169axbt26Mq8vaWRMr169eOyxx0xrBgwYUGyfP/7xjyQnJxMcHMwvv/xi2p6enn7TxbdbKevomaIbuJr4eJf52CIiIiJSqIGrC6PnzcHdvwUZaddY9Oe/cnLPfkMz6RpNzWduYcGgv4wH4Jd/fcXpg3d/M0ltlZ+bR8rps3d1jJT4M8TuP3DT9vrOjXApVpRVvDjLuakHDzw3gs1LviLt4qW7yiAiYhRzowOI3I5tfXvGLviQp96eztQ1/+G+YUOwsLKq0HO0e/ABJv7nC7za30N6aiqfT/gbK2a9W6HFV4mJibi6uhbb5urqytWrV0vtfiU1n5mZGUNeewVzc3P2rY4w/MtiTZBwLIbIiB8wNzen3/jnjY4jIiIicld8gwOxsLLk4tlznIs+jq29Pb9/ZpjRsUTK7bcdsJq2aWVIhpJGxvzvz/+rQYMGAFy6VPwP+E899RTJyckcPHiQ2bNnY2dnd8vjTJ06ldTUVNOjtK4HF250wGri43XL44mIiIhIca6+3ry05BPc/Vtw9UIy4X8cW+F/T9d1mrqp06ODcGvhw/XLV/jh0y+MjlNnXbt4mdj9B9j9zWrWfvQxSyZPY86wP/Ja1z682XMQiSdjAfAOvNfgpCIid04FWFLtdRjwIDb16gHQ0LUJj017hamrl9P1iUexsLy7Jm6WNjY89vpfefa9Wdg51Ccu8iBhTzzLwR9+rojoxWzfvp3evXsX29a3b1+2b99e4eeS6qPzkIfxateWzGvX+e7djwzJMH78eGJjY8nIyGDHjh106tSp1LWWlpa8/vrrnDhxgoyMDCIjI+nXr99N6zw8PFiyZAkpKSmkp6dz4MABgoODKyxzRPgC8vPyaNenp2EXd0REREQqgn+3ws9ex3fsZsPHiwC4/8knsHWob2QskXLzaPlrByzXFj5Y2drcYnXlKGlkTHJyMgC2trY3rTczM+P9999ny5YtHD582LR96dKlPP300/Tq1YvQ0FCeeeYZ/vWvf93y3KGhoTg6Opoenp6eJa5Ljj9Dfl4edg71cXRpXN6XKCIiIlIneQe248UvPqaRuxsXYuP56OkXOH+84icj6DpN3WNtZ0v/P40GYMPHi8i8dt3gRFKStIuXOHWj4NK7QzuD04iI3DkVYEm11+WxhwFY/f4/+Xrm/3E1KZlG7m488cYU/vb9croMeRhzS4tyH9e1hQ8Tli3kvqEh5Ofns3HBYsJHjuNyQmKZ9re3twfg3nsLK7F9fHxo3749zZo1A2D27NksXrzYtH7+/Pn4+vryzjvv0KpVK8aNG8fQoUOZM2dOubNLzWDfsAGDJhS2tV0XvoC0lItVnmHo0KGEhYUxffp0goKCiIqKIiIiAhcXlxLXz5w5kzFjxvDSSy/Rpk0b5s+fz8qVKwkMDDStadiwIVu3biUnJ4cBAwbQpk0bJk2axOXLlyss94XYePatXg9A/xdfqLDjioiIiFQ1/y4dAYjZsYdDP/zM+ZiT2Dk60P3JJwxOJlJ25pYWuPn5AJCTlYWFpWWxkYTVVXh4OPfccw9/+MMfim1fsGAB69ev59ChQyxdupQRI0YwZMgQfH19Sz1WdnY2aWlpxR4lycvJ4eKZwu5Yrr7eFfZaRERERGqrtr3uZ+yCD6nXwJG4qIN89MwLXD5ftus0UHiNpn379oCu08jNejz7JI4ujUk5c5ZtX60wOo7cQmxk4dhCn0AVYIlIzaUCLKnWPANa0qxta3Jzctj59Xds+2oFswc+zsrQ90hNTsHJ052h01/lb6u+otMjAzG3KFshVpchDzNh2We4+7cgNeUiC8ZOYO2H88nPzStztg4dOgCwdetWAObMmUNkZCQzZswAwN3dnebNm5vWx8XFMWjQIPr27UtUVBSTJk3i+eefZ/369WU+p9QsA14ei33DBiQcP8HWZf81JMPEiRNZsGABn3/+OUePHmXs2LGkp6czatSoEtc/88wzzJ49m7Vr1xIbG8v8+fNZs2YNkyZNMq2ZMmUKZ86cYdSoUezevZu4uDg2bNjAqVOnSs1hbW2Ng4NDscftrJ+3kLzcXFrffx/e+sAtIiIiNVB950Z4tCwc23Zi114KCgrY+MnnAPR45g/Y2NczMJ1I2TXx9sLS2prMa9eJ2bkHgGZtA6o8R0kjY4puLvnfkTEfffQRDz30EL169Sp1XGCRnTt3AuDn53fLdWWVFBsHQBMVYImIiIjcUtfHH+GPc0KxsrXh8E9bmP/8S6RfTS3XMbZu3UpkZCSg6zRSXH3nRvQa+RQAaz+YT15ursGJ5FbiIg8C4NmmFZY2Vd9xWUSkIqgAS6q1zkMKu18d+uFnrl+5CkBudjZblv6XWQMe59t/fEDaxUs4N/XkDzNf56/fLiP4of6lFmLZ1rfn6X/MYOj0V7G2s+XY1h289/gzHN++u9zZtmzZAoCjoyNmZmamx8iRIwEYOXIkvXr1KrbPzz//TFBQELa2tvj5+RW780Jql+b3tqHLkMEArJj1Lvl5ZS/uqyhWVlYEBwezceNG07aCggI2btxIt27dStzHxsbmpgsXGRkZdO/e3fTz4MGD2bNnD8uXLycpKYl9+/bx/PPP3zLL1KlTSU1NNT1udwEE4OLZc+z65nsA+r84+rbrRURERKob/86F3a/ORR/n+uUrAESt/5ELsfHUa+DI7/7wmJHxABg9enSZx1UDNGjQgLlz55KQkEBmZibHjh1jwIABVZRWjOIRUNjt6vzxE5w5dBSApm2qvgCrpJExDzzwwE3rPvroI0JCQnjggQeIi4u77XGLOv6eP3++QnJeOFV4TnXAEhERESndg2NH8cTf/4a5hQU7V6zi8wl/Iyczq9zH+d9rNLpOI0UeHPscNvXqcfrgESIjfjA6jtzGpbMJpCanYGllZcgNPyIiFUEFWFJtWdrYEDyoHwA7V3x30/O5WVlsXvJvZg94jFXvfsS1S5dx8WrGk6F/55WVX9Jh4IOYmf/6Fm/WtjV/Wf45HQb0JS8nl+/D5rJg3ESuXay4sWkiAGbm5gyZ9grm5ubs/nYNsfuiDMnRuHFjLC0tSUpKKrY9KSkJNze3EveJiIhg4sSJ+Pn5YWZmRp8+fRgyZAju7u6mNb6+vowbN46YmBj69evHvHnz+PDDDxkxYkSpWUJDQ3F0dDQ9PD09y/QaNn78ObnZ2fh36Yhf5+Ay7SMiIiJSXfx2/GCRgvz8X7tgjRiOtZ2dEdFMZs+eXeZx1VZWVmzYsAFvb28ef/xxWrVqxejRo8tUXC81m0fLwgKshOMnOHM4GqiYAix7e3vat29/VyNjQkJCih0zPDycp59+mieffJK0tDRcXV1xdXXF1tYWKPw+M23aNIKCgvDy8uLhhx/miy++4Oeff+bgwYN3/ZoAkk7FA9DEx6tCjiciIiJSm5iZm/PY63+l358Kb7rd8PEilv99tiE3MUvt5eLdnK6PPwLAqrC5BqeRsordf2MMYQdNRRGRmkkFWFJttevbEztHBy6dO1/sgsX/ys7I5KfFS5nV/zG+nxPO9StXaeLjxdPvTGfyin8R2K83PUYM56Uln9C4WVMunk1g7h/HsmnRlxQUFFThK5K6ouvjj9CsTQAZqWl8P6dmfbB/+eWXiYmJITo6muzsbObOncuiRYvIz883rTE3N2ffvn289tprREZGsmDBAhYsWMDYsWNLPW52djZpaWnFHmVxJTGJ7f/5BoABL425uxcnIiIiUsX8uxZ2k4rZWbzj7v61G0g5fZb6To24b2hISbtWmcWLF5d5XPWoUaNwcnLi0UcfZdu2bcTHx7N582YOHDhQ6vHvZBS1VD8erQpH852LPs7ZI4UFWK6+3nddQNixY0ciIyPvamTMiy++WOyY48ePp2HDhvz8888kJiaaHsOGDQMKv5v06dOH9evXEx0dzXvvvcfXX3/Nww8/fFev5beS1AFLREREpESWNjY8Gzab+4aGkJ+fz9cz/491cz8xOpbUQgNfHoeFpSWHN/3CqT37jY4jZVQ0htA7UAVYIlIzqQBLqq2i8W07V64qU6FUdkYGmz77F7P6DWHNB/NJv5qKWwsfnnl3JoNf+TMWVpZErf+RsKHPcvrA4cqOL3VUfadGDHy5sBBp7dxPDO2wlpKSQm5uLq6ursW2u7q6kpiYWOo+ISEh2Nvb4+XlRUBAANeuXePUqVOmNefPn+fIkSPF9jt69GixCyMV6YdPvyA7IxPvwHsJuL/k0YkiIiIi1Y1zU0+cPN3Jy8nl1N7iHVHz8/LYuOBzAHr88UmsbG2qPJ+VlRUAmzZtMm273bjqwYMHs337dsLDw0lMTOTgwYNMnToVc/PS/7RwJ6OopfrxaHWjA9axE6SlXORK0gXMLSzwvDGa8E79/PPPN42LKe/ImKVLlxZ7vqTjmZmZmTppnT17lp49e9K4cWPs7Oxo2bIlU6ZMKfNNImWRHFfYAcvRpTG2DvUr7LgiIiIiNZmdoyNjP/mAe3v3ICcriy8mvsq2r1YYHUtqIZ8O7WjXpyf5eXmsfv+fRseRcijqgOUdeC9mZmYGpxERKT8VYEm11NirGX6dgsjPy2PPN6vLtW9Wejo/fLqYWf2HsC58ARmpaeRkZvGfGe/wxaTXyEy7VkmpRWDQhPHUc3Tk7JFjhn95zMnJYe/evfTu3du0zczMjN69e7N9+/Zb7puVlUVCQgKWlpY89thjfPvtt6bntm7dSqtWrYqtb9myJfHx8RX7Am5IS7nI1mX/BWDAi+qCJSIiIjWDf9fC8YPxBw6RnZFx0/N7v1/HxbMJODZ2putjj1R1PJydnQFITk4utv1W46p9fX15/PHHsbCwYODAgbz11ltMmjSJadOmlXqeOx1FLdWHg7MTDs5O5OflkXjiJICpC1bTtq2NjFZtZV67ztWkwv9vaQyhiIhUZ+PHjyc2NpaMjAx27NhBp06dbrn+5ZdfJjo6mvT0dE6fPk1YWBg2NlV/M4HUPA1dm/Di4nn4BLUnIzWNT8ZM4OAPPxsdS2qphyYVdsnduXKVqTut1AwJ0cfJyczCvmEDXLwr56Z/EZHKpAIsqZa6hDwEQPTWHVxJunBHx8i8dp0N8z9jRp/BzOgzmB03xpiJVBbv9vfS+cZ7d8Xsdyn4zdg+o4SFhTF69GhGjBhBQEAA8+bNw97enkWLFgHw8ccfF1vfuXNnQkJC8PHxoXv37qxbtw5zc3P+8Y9/mNbMmTOHrl27MnXqVFq0aMHw4cN54YUXCA8Pr7TXsWnRv8i8fp2mbVpxb+8elXYeERERkYri36WwACtmx+4Sn8/PzePHhV8A0GvU01haW1dZtjtlbm7OhQsXeOGFF9i3bx/Lly9n1qxZlTKKWqqPou5XKafPkpOZBcCZwzcKsNq0KnW/ui4pNg7QGEIREam+hg4dSlhYGNOnTycoKIioqCgiIiJwcXEpcf3w4cN5++23mT59Oq1bt+a5555j2LBhzJ49u4qTS03TomMHXvpyAW5+vlxJusDcP47j1N5Io2NJLXVvn554t7+XrPQMIsI/NTqOlFNebi6nDxVOYNEYQhGpiVSAJdWOuaUFHR8ZBMDOr1fd9fGyMzJJv5p618cRuRVzCwuGTJsMwM4Vq4iPOmRwokLLly9n8uTJzJgxg8jISAIDA+nfvz8XLhQWNjZt2rTYeltbW2bOnMmRI0dYuXIl586do3v37ly9etW0Zs+ePYSEhDB8+HAOHTrE66+/zoQJE24a/VGRrl+5yuYlXwHQ70+jMbvFmBsRERERo5mZmeHXORiAmJ17Sl23+9s1XD6fSIMmLqZC/qpy8eJFgJsusN1qXPX58+c5fvw4+b+50eDo0aO4u7ubRhpK7eMRUDR+MMa07ezhowA0UwesUl24cae9q4+3kTFERERKNXHiRBYsWMDnn3/O0aNHGTt2LOnp6YwaNarE9ffddx9bt25l2bJlxMfHs2HDBpYtW0bnzp2rOLnUBE18vOj/4gu8uva/jF/0Txq6NiHxZCwfPf0CiTEnjY4ntZS5pQWDJowH4OfFS0lLuWhwIrkTRWMIfTqoAEtEah5dwZZqp83vf4djY2fSLl7iyOYtRscRKZP7hoXgGdCS9Kup1W6meHh4ON7e3tja2tK1a1d27dplem7QoEHF1m7evJm2bdtiZ2eHi4sLzz77LOfPn7/pmKtXr6Zdu3bY2dnRpk0bPv208u8k+fmLZaSnpuLu34LA/n0q/XwiIiIid8q9pR/1nRqRlZ7O6YNHSl2Xl5PDps/+BUDv50dgUYVFTDk5OQD07NnTtO1246q3bt2Kn58fZmZmpm0tW7YkISHBdDypfYo6YCUcO2HadvbIMQBcvJtjY1/PkFzVUJmj5gAAIABJREFUXdGokybqgCUiItWQlZUVwcHBbNy40bStoKCAjRs30q1btxL32bZtG8HBwaYxhT4+PgwcOJA1a9aUuN7a2hoHB4diD6ndHJyduP/pYUz492dM+e7f9B0zEuemnmRev87OFauYO2IsVxKTjI4ptVi3xx/FxasZaRcv8dPnlXfDuFSuuBsFWN6B9xqcRESk/FSAJdVOlyGDAdj97Wryc/MMTiNyew7OTvR/cQwAaz6Yz/XLVwxOVDtlpl3jp0WFX5r6jX8ecwsLgxOJiIiIlKxo/ODJPfvJy8295dqdK1Zx9UIyDd1c6fTIwKqIV8yzzz5b6rjqxYsXFxspM2/ePJycnPjggw/w9/dn4MCBvPrqq5U6ilqM59HSDyjeAevapctcSjiPubk5nq01hrAkRQVYGkEoIiLVUePGjbG0tCQpqXgxTFJSEm5ubiXus2zZMt544w22bNlCdnY2p06d4qeffiI0NLTE9VOnTiU1NdX0OHfuXIW/DjGetZ0dQQ/1Y/S8Obzxw3c8OmUCzdq2Ji83lyM/b2XJK6/zZs9BLP/7bDJSNalEKo+NfT36ji3s4Bfxz0/JSk83OJHcqbgbE2aa+Hhh36ihwWlERMpHBVhSrTRwdSGge1eg8EKESE3w0MQXsXOoz+lDR9jx9bdGx6nVfvlyOdcuXcbFqxkdHx5gdBwRERGREvl3LSzAutX4wSK52dmmLlgPPDcCc8uqLTKfNm1aqeOqmzdvjru7u2nt2bNn6devH506deLAgQN8+OGHfPDBB7z99ttVmlmqjqW1NS7ezQE495sCLPi1C1azNgFVnqsmKBpB6OTpjqW1tbFhREREKkCPHj149dVXGT9+PEFBQYSEhDBo0CCmTZtW4vrQ0FAcHR1ND09PzypOLJXF3MKCgO5deertN3nzp9U8FfomAd27Ym5hQXzUIVbMfo8ZvQez8MXJRK7bSE5mltGRpQ7oNeppHJyduBAbz84V3xkdR+5CRmoqiSdjAfBuf4/BaUREysfS6AAiv9XpkUGYW1hwcs9+UuLPGB1H5LZ8gwPpOHgA+fn5rJj5LgX5+UZHqtWyMzL4YeEXPPLKy/QdN4q9qyPI07gbERExyPjx43nllVdwc3MjKiqKl156id27d5e6vkGDBsyaNYshQ4bg5OREfHw8EyZMYO3atVWYWiqbhaUlvsEdAIjZcfsCLIAdX39L79HP4tzUg+CH+rP7m9WVGbGYTz75hPfee6/E53r16nXTth07dpQ6lkZqHzc/HywsLbl++QqpF5KLPXf2cDTt+vSkaVsVYJUk7eIl0lNTqefoiIt3M84fP2l0JBEREZOUlBRyc3NxdXUttt3V1ZXExMQS93nrrbdYsmQJCxcuBODQoUPY29vzySefMGvWLAoKCoqtz87OJjs7u3JegBii2T1tCBr0IB0G9MXB2cm0PTn+DPu+X8e+NetJOX3WwIRSVzk2caHHM8MBWP3+PzVdpxaI238AtxY+eHdox+GfthgdR0SkzNQBS6oNMzMzOoc8DMDOr1WdLtWfuaUFQ16bDMCO/37LmcNHDU5UN2z7aiVXLyTj5OFOlyEPGx1HRETqqKFDhxIWFsb06dMJCgoiKiqKiIgIXFxcSlxvZWXFhg0b8Pb25vHHH6dVq1aMHj1aYzhqoebt2mJTz460i5dIjClbwUVOZhY/LfoSgD6j/6hRy1JteLT0ByDh2Imbniv6/qMOWKW7EBsPQBMfb0NziIiI/K+cnBz27t1L7969TdvMzMzo3bs327dvL3GfevXqkf8/N5/m5eWZ9pXa7aG//IkJyxby+6eH4eDsxLVLl9my9D988ORzvP3QUNbP/0zFV2KY/uOfx9rOlth9URz6cbPRcaQCxEUeAMAnsJ3BSUREykcFWFJt+HXpiHNTDzJS0ziwcZPRcURuq/vwJ3D3b8H1y1dY++F8o+PUGblZWWz85HMA+rzwRyxtbIwNJCIiddLEiRNZsGABn3/+OUePHmXs2LGkp6czatSoEtePGjUKJycnHn30UbZt20Z8fDybN2/mwIEDVZxcKpt/l8Lxgyd27b2pC8CtbFu+kuuXr9C4eVMCB/SprHgi5eIRcKMA63jMTc+dPRINgIt3c2wd6ldprpriwqnCAixXHy+Dk4iIiNwsLCyM0aNHM2LECAICApg3bx729vYsWrQIgMWLFzN79mzT+lWrVjFu3DiGDRuGt7c3ffr04a233mLVqlU3FWZJ7WJjX4/uTz0BQOS6jXw6fhLTez/MytAwTh88YnA6qevc/Hzp9OggAFaFzTUkw/jx44mNjSUjI4MdO3bQqVOnUtdaWlry+uuvc+LECTIyMti6dWuJ6zw8PFiyZAkpKSmkp6dz4MABgoODi62ZPn06CQkJpKens2HDBvz8/Cr0dRkpdn/h38uatg3AwsrK4DQiImWnAiypNoo62exbs14zwaXac3RpTL/xzwOFLW3Tr6YanKhu2bliFZfOnadBExfuGxZidBwREaljrKysCA4OZuPGjaZtBQUFbNy4sdTRbIMHD2b79u2Eh4eTmJjIwYMHmTp1KubmpX8ls7a2xsHBodhDqr+WXQv/0Bqzs2zjB4tkZ2Tw0+JlAPR9YSRmt3hviFQVj1ald8BKv5rKxbOFXfyatm5VpblqiqRTcQA08fU2NIeIiEhJli9fzuTJk5kxYwaRkZEEBgbSv39/Lly4AEDz5s1xd3c3rZ85cybvvfceM2fO5MiRIyxcuJCIiAjGjBlj1EuQKtKuT0+sbGxIPBnLklde5+gv2zTiTaqNQX8Zj7mFBVHrfyQ+6lCVn7+8HdJnzpzJmDFjeOmll2jTpg2fffYZAO3a/drpqWHDhmzdupWcnBwGDBhAmzZtmDRpEpcvXzat+etf/8qf//xnxo4dS5cuXbh+/ToRERHY1JIb1lNOnyXt4iWsbGxo2kbfN0Wk5tBfdKVasG/YgHt79wA0flBqhocnv4RtfXviow6xa+X3Rsepc/Jyctgwv/CLSe/nRmBtZ2dwIhERqUsaN26MpaUlSUlJxbYnJSXh5uZW4j6+vr48/vjjWFhYMHDgQN566y0mTZrEtGnTSj3P1KlTSU1NNT00rrD6s7azo/m9bYHyF2ABbP33f0m/mkoTHy/aP/hARccTKTePloV3UCccu7kDFsDZI8cAaKoxhCUqKsByVQGWiIhUU+Hh4Xh7e2Nra0vXrl3ZtWuX6blevXoxcuRI0895eXnMmDEDf39/6tWrh5eXFy+++CJXr141IrpUoQ4DHwRg/5r1BicRKc6vczBtfv878nJyWfPBPEMylLdD+jPPPMPs2bNZu3YtsbGxLFy4EICXXnrJtGbKlCmcOXOGUaNGsXv3buLi4tiwYQOnTp0yrZkwYQIzZ87ku+++4+DBg4wYMQIPDw8effTRyn3BVSg+6iCgMYQiUrMYVoBVnnaMAC+//DLR0dGkp6dz+vRpwsLCak0Vr0DQQ/2xtLbmzJFozkUfNzqOyC35dQ4maOCD5Ofl8fWs/yvXaBmpOHtWrSU5/gz1nRpx/1NDjY4jIiJyS+bm5ly4cIEXXniBffv2sXz5cmbNmsXYsWNL3Sc0NBRHR0fTw9PTswoTy53w7RiIhZUlF8+e49LZhHLvn3U9nc3/+gooHLVsZmZW0RFFyqyRuxt2jg7k5uSQdDK2xDVnDh8FoFlbFWCV5MKNAiwX7+bqaiciIiI1koOzk2nM+v41GwxOI/IrMzMzHpr4JwC2/2clKafPVnmGO+mQbmNjQ2Zm5k3bu3btavr34MGD2bNnD8uXLycpKYl9+/bx/PPPm5738fHB3d292HlTU1PZuXNnqeetiV3WY/cXFmB5d1ABlojUHIb89ae87RiHDx/O22+/zfTp02ndujXPPfccw4YNKzZ/XGq2ovGD6n4l1Z2FpSUhr04CYNvylZw7qoJBo+Tn5RHxz08B6DnySWwd6hucSERE6oqUlBRyc3NxdXUttt3V1ZXExMQS9zl//jzHjx8nPz/ftO3o0aO4u7tjZWVV4j7Z2dmkpaUVe0j1VnRhImZH+btfFfnly+VkpF3D3b8F99zoEixiBI9Whd2vLpyKIy83t8Q1Zw9HA9BUBVglupRwnpysLKxsbHDycL/9DiIiIiLVTGD/PphbWBAXddA0flqkOgjs34dmbVuTee06Gz5eZEiGO+mQHhERwcSJE/Hz88PMzIxevXoBFFvv6+vLuHHjiImJoV+/fsybN48PP/yQESNGFFtbnvPWxC7rcfsPAOAdeK/BSUREys6QAqzytmO877772Lp1K8uWLSM+Pp4NGzawbNkyOnfuXOo5amIlb13VvF1b3P1bkJ2Ryf61uoNCqrduQx/FrYUPaRcvsW7uJ0bHqfMi123kfMxJ6jk60mPEcKPjiIhIHZGTk8PevXvp3bu3aZuZmRm9e/dm+/btJe6zdetW0x/XirRs2ZKEhARycnIqPbNUjZZdCzs738n4wSKZadf45cvlAPQdM/I2q0Uqj3srfwASjp0odc3Zo4UjCBs3a4qdo2OV5KpJCvLzSY47DUATjSEUERGRGkjjB6U6srCyYsCfCzuK//jZEq5dumxworJ7+eWXiYmJITo6muzsbN59912AYjfsmZubs2/fPl577TUiIyNZsGABCxYsuGUX9dupiV3WzxyJJjc7GwdnJxo3b2p0HBGRMqnyAqw7ace4bds2goODTWMKfXx8GDhwIGvWrCn1PDWxkreu6jpkMABR638kM+2awWlEbq1tr98D8OPCJWSkqguF0Qry84kIXwDA758Zhn3DBgYnEhGRuiIsLIzRo0czYsQIAgICmDdvHvb29ixaVHjX5eLFi4t17J03bx5OTk588MEH+Pv7M3DgQF599VXCw8ONeglSweo7NcLjRsHKiV177+pYm5d8Reb163gGtKRtz+4VEU+k3DxaFnbASjgWU+qajNQ0kuPPANCsbasqyVXTJN0YQ+iqAiwRERGpYZybNcWrXVvycnOJjPjB6DgiJr8b/hjOTT24mpTM5iX/NizHnXRIT0lJISQkBHt7e7y8vAgODgYgLi7OtOb8+fMcOXKk2H5Hjx6lefPmAKZjl+e8NbHLel5ODmdudF32DtQYQhGpGaq8AOtO2jEuW7aMN954gy1btpCdnc2pU6f46aefCA0NLfU8NbGSty6yqVePwAF9ANi5QuMHpXozt7TAq909ABzfvsvgNFLk4A8/c/bIMWzt7ek18mmj44iISB2xfPlyJk+ezIwZM4iMjCQwMJD+/ftz4cIFAJo3b467+6/jps6ePUu/fv3o1KkTBw4c4MMPP+SDDz7g7bffNuolSAXz6xQEFBar3O3dtxmpqWxd9jUAfceW3ClapLJ5BrQEIOF46R2wAM4euTGGsI3GEJbkQmw8AE18vAxOIiIiIlI+QYMKu1/F7NjDtYs1p8OQ1G52jg70faGwW/S6uZ+Qk5llWJY76ZBeJCsri4SEBCwtLQFYvXq16bmtW7fSqlXxG1xatmxJfHzhd4vY2FjOnz9f7LwODg506dLltuetaUxjCDtoDKGI1AyGjCAsrx49evDqq68yfvx4goKCCAkJYdCgQUybNq3UfWpiJW9dFNi/Nzb16nEhNp7YfVFGxxG5Jc+AVtjUsyP9aipJJ2ONjiO/sXbuxwD8bvjjODR2NjiNiIjUFeHh4Xh7e2Nra0vXrl3ZtevXAu1evXoxcmTx8XE7duygW7du2NnZ4efnR2hoaLEW81Kz+VfA+MHf+vmLZWSlZ9CsbWsC7i+5W7RIZbGpV8804uFWHbAAzh5WAdatXFAHLBEREamhgm6MH9yn8YNSjXQcPJB6DRw5H3OS3d+VPimpqpS3Q3rnzp0JCQnBx8eH7t27s2LFCgA++OAD05o5c+bQtWtXpk6dSosWLRg+fDgvvPBCsS7q77//PtOmTePhhx/mnnvu4YsvviAhIYFvvvmmil551YiNLCzA8lEHLBGpISyr+oR30o7xrbfeYsmSJSxcuBCAQ4cOYW9vzyeffMKsWbMoKCio9NxSObrcGD+4c8Uqg5OI3J5vUHsAYvdF6b871Uz0L9uJizyId+C9PPDcM3z7zvtGRxIREZE6xr9rRwCO79hdIce7fvkK25evpOcfn+TBMaOI/qV23cUq1Zu7fwsAriYlc/3ylVuuPXP4KADN2rau9Fw1UVJsHABNfNUBS0RERGoOz9YtaeLjRU5mFod+/NnoOCImbX5/H1B4XbGgGtzUtnz5clxcXJgxYwZubm5ERkbe1CH9tzff2draMnPmTHx9fbl27RobNmwA4OrVq6Y1e/bsISQkhNDQUN544w1iY2OZMGECS5cuNa35xz/+YbpW3rBhQ7Zs2UL//v3JyjKuI1hliIs8CICbny92jo5kpKYanEhE5NaqvAPWnbRjrFev3k13hufl5Zn2lZrJzb8FXu3vIS8nlz2rjK9SF7kd3+DCAqxT6tZWLf342RIAAn7X1eAkIiIiUtc4NfXAuakneTm5nNoTWWHH/enzL8nJzMKr/T2069urwo4rcjvurfwASDh+6+5XAGePHgPAydMd+0YNy3We+++/n++++45z585RUFDAI488ctt9evTowd69e8nMzCQmJoYnn3zypjXjx48nNjaWjIwMduzYQadOnYo9b2Njw9y5c0lJSSEtLY3//ve/NGnSpFzZyyo57gz5eXnUc3TEwdmpUs4hIiIiUtGCBvUD4PBPv5B1Pd3gNCKFrO3s8O3YAYCjv2wzOM2vytMhffPmzbRt2xY7OztcXFwYM2ZMicdcvXo17dq1w87OjjZt2vDpp5/etObvf/877u7u2NnZ0bdvX2Jibv/9raa5fvmKaay7V/u2BqcREbk9Q0YQlrcd46pVqxg3bhzDhg3D29ubPn368NZbb7Fq1SqN7KjBuoQ8DBR+gNf8cKnuzMzM8OlQVIBVcRfVpOKkxJ8BKPdFHxEREZG75d+lsPvV6YOHyc7IqLDjpl28xPb/Fo4PeDZsNm/88B3DZ71B8EP9NXZZKpVHK38AEo6duO3arOvppj+Il3cMob29PVFRUfzpT38q03pvb29Wr17Npk2bCAwM5P3332fu3LnF1gwdOpSwsDCmT59OUFAQUVFRRERE4OLiYlozZ84cHn74YZ544gl69OiBh4eHafRHRcvNzubSufMANNEYQhEREakBzMzN6dC/L6Dxg1K9+HftiKWVFSmnz5quB0jtFxdV2AVLYwhFpCao8hGEUP52jDNnzqSgoICZM2fi6elJcnIyq1at4rXXXjMivlQAS2trgh/uD8DOFd8ZnEbk9pr4eGHfqCHZGZmcO3LM6DhSgms3RqPYN2yAuaUF+bl5BicSERGRuqKoACtm554KP/b6eZ/RoIkLre+/jwZNXOg4eAAdBw8A4HzMSY5v38Xx7bs4tTeS7IzMCj+/1E0eRR2wjpXtDuqzR6Jp4uNF0zatOLZ1R5nPs27dOtatW1fm9WPHjiU2NpbJkycDEB0dTa9evXjsscdMayZOnMiCBQv4/PPPTfsMGjSIUaNG8c477+Do6Mhzzz3Hk08+yaZNmwAYOXIk0dHRdOnShZ07d5Y5T1klnYqjcfOmuPp6c3L3vgo/voiIiEhFatGxAw1cXUhPTSV6S9k/24lUttY3xg9Wp+5XUvni9h+g86MP4d1BBVgiUv0ZUoAFhe0Yw8PDS3yuV6/ioxXy8vKYMWMGM2bMqIpoUgXueeD32DdswJXEJI5t23X7HUQM5hMcCED8gUPk5eYanEZKkn41lfy8PMwtLLBv2JC0lItGRxIREZE6wMzMDL/OwQAc37G7wo+fkZrKF5New9LaGp8O7WjZrRP+3TrjGdASd/8WuPu3oMeI4eRmZxMXeZDj23dzfPsuzh49RoE6RssdMDM3x92/fAVYZw5HEzSoH83atq7MaHTr1o2NGzcW27Zx40ZTAZaVlRXBwcGEhoaani8oKGDjxo1069YNgODgYKytrYsd59ixY8THx9OtW7dSC7Csra2xsbEx/ezg4FDm3BdOxdG2Z3dc1QFLREREaoCggQ8CELX+R/JycgxOI/Kr1vffKMDarAKsuiR2/wEAmt/TRjffi0i1Z1gBltRtXR4bDMCuld/rooDUCL5BheMHY/dFGZxESlOQn8/1K1dxcHaivlMjFWCJiIhIlXDz98XB2Yms9AxOHzhcaefJzc4mZueewi5b78/DvmED/Lt0pGW3zvh364SThzt+nYPx6xzMwJfHcv3KVU7s2mvqkFU0Ak3kdpybeWJTz46czCxSTp8t0z5nDh8FoFnb8o0gLC83NzeSkpKKbUtOTgbA1taW+vXrY2lpedOapKQkAgICTMfIysri6tWrN61xc3Mr9dxTp07lzTffvKPcSbFxQGFnZREREZHqzMLKinZ9C5sk7F+t8YNSfbi3bEFD1yZkZ2Rycs9+o+NIFUqOO831K1exb9gAz4BWnDl0xOhIIiKlUgGWVDmnph607NqJ/Px8dn3zvdFxRMrE50YB1ikVYFVr1y5dNhVgiYiIiFQF/66dADi1L7JKO6Vev3KVyIgfiIz4AYDGXs1o1a0zLbt1okWnYOwbNqD9gw/Q/sEHSI4/w9sPDa2ybFKzebTyBwpHXObnle3O4nNHj5Ofn09DN1fqOzfi2sXLlRnREKGhoYSFhZl+dnBw4Ny5c2Xa90JsPABN1AFLREREqrnW99+HnaMDV5IucGpvpNFxREyKul/F7NxDbna2wWmkKhUUFBAXeZC2PbvjHXivCrBEpFpTAZZUuc4hDwEQs30XlxMSDU4jcnsN3Vxx8nAnLzeX+KhDRseRW7h2qfBCjwqwREREpKr4d+kIQMz2ih8/WB4p8WdIiT/D1n9/jbmFBc3vaUPLbp1o2a0zZ45EG5pNahaPVuUbPwiQnZHBhdh43Fr40LRNANG/bK+UbImJibi6uhbb5uLiAkBmZiaZmZnk5ubetMbV1ZXExETTMWxsbGjQoEGxLli/XVOS7Oxssu/wQk/SqTgAGro2wca+HlnX0+/oOCIiIiKVLWhQ4fjB/Ws2UFBQYHAakV+Zxg/+ovGDdVFRAZZPh3b88q+vjI4jIlIqc6MDSN1ibmFB50cKC7B2rFhlcBqRsvENLux+de7ocbIzMgxOI7eiAiwRERGpSuaWFrTo2AEovAu3usjPyyMu6iDr53/G3GfH8u077xsdSWoQj5aFHbASjp8o135nDxcW+jVr27rCMxXZvn07vXv3LrbtgQceMP07JyeHvXv3FltjZmZG79692b69sChs7969ZGdnF1vTsmVLvLy8TGsqWmbaNVKTUwBo4uNdKecQERERuVs29vVo0+N3AOxfo/GDUn3YOTrgHXgvQKXd7CHVW1zkAQDT+0BEpLpSAZZUqVa/60oDVxeuXbrM4U2/GB1HpEx8gwsvqqnlcvVnKsBq1NDgJCIiIlIXeN3bFpt69bh26TLny1msIlJd3UkHLIAzh48C0KxNQJn3sbe3p3379rRvX3jTi4+PD+3bt6dZs2YAzJ49m8WLF5vWz58/H19fX9555x1atWrFuHHjCAkJKXbMsLAwRo8ezYgRIwgICGDevHnY29uzaNEiAFJTU1m4cCFhYWH07NmToKAgFi1axLZt29i5c2e5XnN5FHXBctUYQhEREamm2vXpiZWNDYknYzkXfdzoOCImrbp1xtzCgvMxJ7l8XpN16qLTh46Sm5NDgyYuOHm6Gx1HRKRUKsCSKtX1sYcB2LNqLXk5OQanESkbn6DCiwGn9qkAq7pTBywRERGpSkXjB0/s3qfxHFIr2Dk60sjdDaDcRYVFHbCati17AVbHjh2JjIwkMrLwu9acOXOIjIxkxowZALi7u9O8eXPT+ri4OAYNGkTfvn2Jiopi0qRJvPjii8WOuXz5ciZPnsyMGTOIjIwkMDCQ/v37c+HCBdOav/zlL3z//fd8/fXXbN68mcTERIYMGVKu11teF2LjAXD19arU84iIiIjcqQ4Di8YPqvuVVC8BN8YPqvtV3ZWblcW5I8cA8O7QzuA0IiKlUwGWVBmHxs60/n1h+9pdtWj84OjRo4mNjSUjI4MdO3bQqVOnW65/+eWXiY6OJj09ndOnTxMWFoaNjU0VpZXysm/YALcWPgDE7osyOI3czrXLVwCo76wCLBEREal8fl0LC7Biduw2OMmdK8/3mWeffZaCgoJijwyN6K5VirpfXTybQOa16+Xa99yx4+Tn5dGgiQuOLo3LtM/PP/+MmZnZTY+RI0cCMHLkSHr16nXTPkFBQdja2uLn58fSpUtvOm54eDje3t7Y2trStWtXdu3aVez5rKwsXnzxRZydnalfvz6PPfYYSUlJ5Xq95VXUAauJOmCJiIhINeTg7GS6wWT/mg0GpykfXaOp3czMzAjo3hWAo79sMziNGCm2aAxhe40hFJHqSwVYUmU6PTIQC0tLYvcfMP3hsTaYPXs206dPJygoiKioKCIiInBxcSlx7fDhw3n77beZPn06rVu35rnnnmPYsGHMnj27ilNLWRV1v0o8cYr0q6kGp5HbuXZRHbBERESkaljb2eHdrvCPfjE79hic5s6V5/sMwNWrV3FzczM9vLzUzac28WjlD5R//CBATmaW6bt+03KMIawrLhQVYHnr/zMiIiJS/QT274O5hQVxUQe5ePac0XHKRddoarembVvj4OxERto1UwGO1E1xkQcB8FEHLBGpxlSAJVXCzNycLkMGA7BzxXcGp6lYixcv5vPPP+fo0aOMHTuW9PR0Ro0aVeLa++67j61bt7Js2TLi4+PZsGEDy5Yto3PnzlWcWsrq1/GDNbf71fjx48t8B5ClpSWvv/46J06cICMjg8jISPr161fq+ilTplBQUMCcOXMqI3q5mUYQNlIBloiIiFQu3+D2WFhZcunc+Rp3geK3yvN9BqCgoICkpCTT47dj3aTmK+qAdScFWABnDh+hufLzAAAgAElEQVQFoFk5xhDWFUXFac7NPLGwtDQ2jIiIiMj/qMnjB3WNpnZrfX83AI5v30V+bp7BacRIcfsLC/Dc/FtgW9/e4DQiIiVTAZZUibY976dx86akp6YSFfGj0XEqhJWVFQCbNm0ybSsoKGDjxo1069atxH22bdtGcHCwqQDGx8eHgQMHsmbNmlLPY21tjYODQ7GHVB3foEAAYvdFGpzkzgwdOpSwsLAy3wE0c+ZMxowZw0svvUSbNm2YP38+K1euJDAw8Ka1HTt2ZMyYMURFVZ/itGuXLgHqgCUiIiKVz79L4Wf6mjp+8E6+zwDUr1+fuLg4Tp8+zTfffEObNm1ueR59n6lZPFoWdcA6cUf7nz0cDUBTFWDdJDU5hcxr17GwtKSxVzOj44iIiIiYODdrile7tuTl5hIZ8YPRccpM12jqhtb33wdo/KBA2sVLpJw5i7m5OV7t7jE6johIiVSAJVWi16inANj27xVkZ2QYnKZiODs7A5CcnFxse1JSEm5ubiXus2zZMt544w22bNlCdnY2p06d4qeffiI0NLTU80ydOpXU1FTT49y5mnt3fU1jbWeHZ+uWAJzaW32KjMpj4sSJLFiwoMx3AD3zzDPMnj2btWvXEhsby/z581mzZg2TJk0qts7e3p4vv/yS0aNHc/ny5dvmqKovqdcuXwHAtr49ljY2lXIOEREREQD/Lh0BiNlZM8cP3sn3mWPHjjFq1CgeeeQRnn76aczNzdm2bRuenp6lnkffZ2oOc0sL3Px8AEg4frcdsFpXWK7apKgLlquvt6E5RERERH4raFBh96uYHXu4dvH2f+utLnSNpvar79yI5vcW3vQT/ct2g9NIdRC3v3AMoXfgvQYnEREpmQqwpNL5dGiHd/t7ycnKYsvS/xgdx1A9evTg1VdfZfz48QQFBRESEsKgQYOYNm1aqfuEhobi6Ohoetzq4oZULK/292BhacmlhPNcSUwyOk65WVlZERwczMaNG03bbncHkI2NDZmZmcW2ZWRk0L1792LbwsPDWb16NT/8ULY7oqrqS2pm2jVyc3IAqN+oYaWcQ0RERMS+UUNToX7MrppZgHUnduzYwZIlS4iKimLz5s0MGTKE5ORkxowZU+o++j5TczTx9sLS2prMa9e5fO78HR0j4fhJ8nJycXB2oqFrkwpOWPNdiI0DoIkKsERERKQaCboxfnBfDRw/WF66RlOzBPyu8DrGmcNHSbt4yeA0Uh3ERhaOIfTu0M7gJCIiJbM0OoDUfr1GPg3Anu/W1qoPSBcvXgS4aZSbq6sriYmJJe7z1ltvsWTJEhYuXAjAoUOHsLe355NPPmHWrFkUFBTctE92djbZ2dkVnF7KwjeoPcD/s3fncVXW6f/HX+dw2BcVREBAFgERNwQ1XFIZdFzaxhbbXNJ+pjnZQs40NjUumTZT0TjJV8tK+Wb1HadyJqfFpUw0twJxBVxYlH1T9uWw/P44cuoEqMCBmwPX8/G4H4/hPp9z7vdpLDnnvj7XRWq8aXa/6tu3LxqNhtxcw+Kx3NxcAgObHwmye/duIiMjiY2N5dKlS0RERHDvvfdiZmamX/Pggw8SEhKib9N8K9avX09UVJT+Z3t7+w4rwiorukpvl37YOfY2ycI5IYQQQnR9fmNCAcg6f9Gkdoj/Uls+z/xabW0tJ06cwM/Pr8U18nnGdPQP1I0fzD5/sdnPpreitrqanEspuAcG4DEkkGu5ecaMaPKkA5YQQgghuhr3wQH08/FCW1XNme8OKB2nVeQeTfc3+HZdAVaidL8S16Ul6DpgeQ0fgtrMjPq6OoUTCSGEIemAJTqUi683Q8Jvp76+nu9jPlY6jlFpr3fZmTx5sv6cSqUiIiKCI0ea/2XQxsaG+vp6g3N11385UKlUHRNUtJnP9QKsFBMtwGqLZ555hgsXLpCUlERNTQ0bN25k69at+j+3Hh4ebNiwgUcffZTq6upbft2amhpKS0sNjo7SeBPUzrFPh11DCCGEED2bqY8fhLZ9nvk1tVrNsGHDyM5uW7ck0bX0D9AVYGUmt238YKOMs0kAeAxpftNHT5bXWIDl461kDCGEEEIIvZA7pgFw9vuDVJdXKJymdeQeTfemNjNj0LjbAEg8eFjhNKKryL2YQmVJKZY2NrgFDFQ6jhBCNCEFWKJDTX7sUQDOfBdLQfoVhdN0jPnz5zNv3jwCAwPZtGkTtra2bN26FYCYmBjWrVunX7tr1y6efPJJHnzwQby9vZkyZQqvvPIKu3btavJLv1CWmUaD1/ChAKTGJSicpm0KCgqora3FxcXF4PyNdgAVFBQwa9YsbG1t8fLyIjAwkLKyMlJSUgAIDQ3FxcWF+Ph4tFotWq2WyZMn8/TTT6PValGrlf9rpfxqYwGWo8JJhBBCCNFd+YddL8A6aroFWI1a83nm5ZdfZurUqfj4+DBy5Ei2b9+Ol5cX7733nlLxhRH1H6TrZJbVzgKsK9cLsDyDBrc7U3fT2AHL2XuA3OATQgghhOJUajUjp08FTHv8oNyj6Z68RgzF2sGesqKrXDmTqHQc0UU0NDSQduoMAD4yhlAI0QXJCELRYRyc+xJyp273xP6t2xVO03Feeukl1qxZg6urKwkJCUyfPp28PN2YhQEDBhj80r527VoaGhpYu3Yt7u7u5Ofns2vXLv785z8rFV+0wGNIIBbWVpQVXdV/SW5qtFotcXFxRERE8J///Af4eQfQxo0bb/jc6upqsrKy0Gg03HfffezYsQOAb7/9lqFDhxqs3bp1K0lJSfz1r3/tEh9SS4ukA5YQQojOsXTpUv7whz/g6urKyZMnWbZsGT/++GOza+fPn8+2bdsMzlVVVWFtbd0JSYUx9envSl9PD+pqa0mJO6F0nHZrzeeZPn36sGXLFlxdXbl69SpxcXGMGzeOxET5Mrw76D9I1wErK/liu17nylndnwdP6YDVRFFmNrU1NVhYW9HbzYWrWbc27lMIIYQQoiMMHDWSXi7OVJSUkHToqNJx2kzu0XRPQRPHAZD0w1EausB9B9F1pJ04xeAJY/EeMYxDH3+qdBwhhDAgBViiw9w+ZzYac3MuxZ3g8qmzSsfpMO+++y5vvvlms4+Fh4cb/FxXV8eaNWtYs2ZNZ0QT7eB7ffxg6olTCidpn6ioKGJiYvjpp584fvw4zz77rMEOoHfeecdg/ZgxY3B3dychIQF3d3dWrVqFWq3mb3/7GwBlZWWcPWv473N5eTmFhYVNziulrLEAq09vhZMIIYTozmbPnk1UVBRLlizh2LFjPPvss+zevZtBgwaRn5/f7HOKi4sZNGiQ/ueGhobOiiuMyP+20QBcPn3O5EZ0NKc1n2ciIyOJjIzsjFiik9k7OWLv5Eh9XR05Fy+167WyL1yiVqvFtk9v+vR3lSKjX6ivqyM//Qpu/gNx8fWWfzZCCCGEUFTIzN8CcHLPd9RdH+dniuQeTfcUePv1AqyDzY+T7Epas0FPo9GwYsUK5s+fj7u7OxcuNO1AvHLlSlatWmVwLikpicGDf+4yvH//foPxmwCbN2/mySefbPf76eoa79t5SwcsIUQXpPysKNEtWdnZMvaBWQDs/+AjhdMI0Xo+IcEApMSb5vjBRjt27GD58uWsWbOGhIQEgoODDXYAeXh4GKy3srJi7dq1nDt3jp07d5KZmcmECRMoLi5WIn6b6AuwnKQDlhBCiI4TGRnJli1b2LZtG4mJiSxZsoSKigoWLlzY4nMaGhrIzc3VH41/HwvTEtA4fvCY6Y8fFKJRY/ergssZaKuq2/VadVot2Rd0RVweQdIF69fyUtMB6OfrrWwQIYQQQvRoZubmDJ+qK0468aXpjh8U3VNvl370D/Cjvq6O5MPHlI5zQ40b9FavXk1ISAgnT55k9+7dODs7N7t+7dq1LF68mGXLlhEUFMQHH3wAwPDhhsVEZ86cwdXVVX9MmDChyWu9++67Bmv++Mc/Gv8NdkFXzpyjrraWPm6u9Hbpp3QcIYQwIAVYokOE3f87rO3tyLmYQtLBw0rHEaJVVCqVfnZ0atxJhdO0X3R0NN7e3lhZWREWFsbx48f1j91xxx0Ga2NjYxkyZAjW1tY4Ozszf/58srOzb/j64eHhPPfccx2SvS3Ki64BMoJQCCFExzE3Nyc0NJR9+/bpzzU0NLBv3z7Gjh3b4vPs7OxIS0vj8uXL/Pvf/yYoKOiG17GwsMDe3t7gEMrzu00KsET30z+wcfxg093XbZFxNgkAzyGDb7Ky52kcce/i461kDCGEEEL0cINvH4e1gz3XcvNIiTPtTcii+wm8XffdSvqps1QUlyic5sZau0Fv7ty5rFu3jq+//prU1FTef/99AJYtW2awrra21mATX2FhYZPXqqioMFhTWlpq/DfYBdVUVuk/u0oXLCFEVyMFWMLozDQaJs55EIDvYz6W0SrC5Lj4+WLTy4Hqigoyk84rHUe0UmljBywpwBJCCNFB+vbti0ajITc31+B8bm4urq6uzT4nOTmZhQsXcs899zBnzhzUajWHDx/G3d29xeusWLGCkpIS/ZGZmWnU9yFaz9V/IPZOjlRXVJJ+8ozScYQwmsYOWJlJxinAunI2EQDPIdIB69fyGguwpAOWEEIIIRQUcodu/OCJr/bKPRzR5QyeqBs/mBjbtRs8tGWDnqWlJVVVVU3Oh4WFGfzs7+9PZmYmly5dYvv27Xh6ejZ5zqOPPkp+fj6nT59m3bp1WFtbt5i1u23y048hDB6mcBIhhDAkBVjC6ELu+C29XJwpzs0nXlrXChPkGzICgPSTZ6ivq1M4jWitxhGEtn16K5xECCGE+NnRo0f58MMPOXnyJLGxsdx7773k5+ezePHiFp+zfv16HBwc9MeNirVE5wgIGw1AavxJ6rRahdMIYTz9A/wAyDpv3A5YMoKwqcYOWDKCUAghhBBKsbS1IWjSeABOfCX3cETXYmZujv9tus/eiV18wk5bNujt3r2byMhI/Pz8UKlUhIfrRoH+cv2xY8d47LHHmD59Ok8++SQ+Pj4cPHgQOzs7/ZqPP/6YOXPmEB4ezvr165k7dy7bt29vMWt32+SXlnAakA5YQoiuR6N0ANG9qFQqJj/2KACx2/8pNyWESWoswEqJN/3xgz1RWVERAPaOjgonEUII0V0VFBRQW1uLi4uLwXkXFxdycnJu6TVqa2s5ceIEfn5+La6pqamhpqamXVmFcfnL+EHRDWksLHD2HgBAVvJFo7xmzsUUamtqsOnlgKNHf4oysozyut1BXtpl6uvrse3dCzvHPvoNJEIIIYQQnWX4lMmYW1qScylVJkCILmfgqGAsbawpzss32oj0ruSZZ55hy5YtJCUl0dDQQGpqKgD19fX6Nd98843+f58+fZpjx46Rnp7O7Nmz+eCDDwDYsmWLfs2ZM2fIzs7mu+++w9fXl5SUlCbXXb9+PVFRUfqf7e3tTboIKy1B1wGrf4AfFtbW1FRWKpxICCF0pAOWMKrA28fh6udLZWkZRz/9t9JxhGgTn9BgAFLiEhROItqi/Oo1AMytLLG0sVE4jRBCiO5Iq9USFxdHRESE/pxKpSIiIoIjR47c0muo1WqGDRtGdnZ2R8UURqbWmOE7Svd74oWjPyqcRgjjcfXzwUyjofzqNUry8o3ymnW1tfpiLs8hg43ymt1FbXU1V7N0/+3v5+OlcBohhBBC9EQjZzaOH5TuV6LrCbxdN34w6eCtfb+ipLZs0CsoKGDWrFnY2tri5eVFaGgoAGlpaS1ep7i4mPPnz99wE9+xY8cAWlxTU1NDaWmpwWHKinPzKcrKxkyjwWv4EKXjCCGEnhRgCaMKX6jrfnXkXzupKitXOI0Qrefo7kZvl37UarVcPn1W6TiiDWoqq6iu0O12sHPso3AaIYQQ3VVUVBSLFi1i3rx5BAYGsmnTJmxtbdm6dSsAMTExrFu3Tr/+5ZdfZurUqfj4+DBy5Ei2b9+Ol5cX7733nlJvQbTSgCFBWNnaUn71WrfchSt6rv4B/oDxul81unI2EQBPGUPYhIwhFEIIIYRS7J0c9Z19T3y1V+E0QjQVdL0Aq6uPH4T2bdCrrq4mKysLjUY3rOrLL79sca2trS0DBw684Sa+4GDdhrGetNFPxhAKIboiGUEojMZrxFAGho6kVqvl4PYdSscRok18QnS/pGacS0JbVa1wGtFWZUVXsbSxxtaxN4UZpttGVwghRNe1Y8cOnJ2dWbNmDa6uriQkJDB9+nTy8vIAGDBggEH7+D59+rBlyxZcXV25evUqcXFxjBs3jsTERKXegmilQRPCALhwPI6GhgaF0whhPG6DdDuks84bt7Aw42wSAB5DpADr1/JS0gmaOB4XH2+lowghhBCihwmePgW1mRlpJ0/L96aiy+k7wANn7wHUarWcN5HO01FRUcTExPDTTz9x/Phxnn322SYb9DIzM3nxxRcBGDNmDO7u7iQkJODu7s4rr7wCwIYNG/Sv+frrr7Nr1y7S09Pp378/q1evpq6ujk8++QQAX19fHnnkEb766isKCwsZPnw4b731FgcOHOD06dOd/E9AOWknThEy87d4jximdBQhhNCTAixhNJMf03W/iv/vbkryCxROI0Tb+IaMACA17qTCSUR7lBVdxcmjP/bSAUsIIUQHio6OJjo6utnHwsPDDX6OjIwkMjKyM2KJDjJk0gQAzh34QeEkQhiXe2AAAJlJxi3AunJOV2DqERSISqWSwsVfyEtNA8DFV0YQCiGEEKJzyfhB0ZUFThgL6O7PVJdXKJzm1rR2g56VlRVr167F19eXsrIy9u7VdaIrLi7Wr/Hw8OCTTz7BycmJ/Px8Dh06RFhYGAUFunuvNTU1TJkyRV/sdeXKFT777DPWrl3bie9ceaknTgG6BiEqtZqGX/xzFkIIpcgIQmEUfb08GfqbiQB8v+0jhdMI0Xa+oboOWCnxUoBlysqvXgNkBKEQQgghjKOXizPugwOor68n6dCNxwgIYWr6B1zvgGXk0Zq5l9LQVlVjbW+Hk6d7i+uWLl1KamoqlZWVHD16lNGjR7e4VqPR8PLLL3Px4kUqKytJSEhgypQpBmtSU1NpaGhocmzcuFG/Zv/+/U0e37RpU/vf9C3KTUkHZAShEEIIITqXk6cHXsOHUFdbS8Lub5WOI0QTg01o/OAvRUdH4+3tjZWVFWFhYRw/flz/WHh4OAsWLND/HBsby5AhQ7C2tsbZ2ZnFixc3eb2HH34Yd3d3rKys8PT05OGHHyYlJUX/eEZGBpMnT6Zv375YW1sTEBDACy+8QGlpace+0S4m+8IlqsrLsba3w9XPR+k4QggBSAGWMJLJ8x9BrVZzdv9BclPSlI4jRJvYOfWhn48X9fX1pJ6QAixTVlZ0FQA7R0eFkwghhBCiOxg8cTwAl0+d1Rd6C9Ed9HFzxdrBnlqtljwjf5avr6sjM/k8AJ5DBje7Zvbs2URFRbF69WpCQkI4efIku3fvxtnZudn1a9euZfHixSxbtoygoCA2b97MRx8ZbgIbPXo0rq6u+qOxQOtf//qXwbp3333XYN0f//jH9r7lW9b4vUkfN1csrK077bpCCCGE6NlC7tB1v7pw9CfKCq8qnEYIQxbWVgwcPRIwvQIsoYyG+nounzoLgHfwcIXTCCGEjhRgiXazd3Jk1N0zANi/dbvCaYRoO5+RuvGDORdTqCzpWTsFupuyoiIAbB17K5xECCGEEN1B0PUCLBk/KLqb/oN03a/yUtKoq601+utnnE0CwGNIYLOPR0ZGsmXLFrZt20ZiYiJLliyhoqKChQsXNrt+7ty5rFu3jq+//prU1FQ2b97Mnj2G43MKCgrIzc3VH3feeScXL17kwIEDBusqKioM1t1st7iFhQX29vYGR1tVlpRQWqj7zNLPR8YQCiGEUE5rOlEC9OrVi40bN5KVlUVVVRXJycnMmDGjk9KK9rC0sWHsA78DIF7GD4ouyG/MKMwtLSnMyCQvNV3pOMJENI4h9BkpBVhCiK5BCrBEu0145AHMLS1JSzit/4tOCFPkG6IbP5gq4wdNXun1Dlj2MoJQCCGEEO1kbmVJQJjuRtS52EMKpxHCuNwG+QOQlXyxQ17/yvUCrOY6YJmbmxMaGsq+ffv05xoaGti3bx9jx45t9vUsLS2pqqoyOPfrn399jTlz5vDBBx80eezRRx8lPz+f06dPs27dOqxv0olqxYoVlJSU6I/MzMwbrr+Zxi5YLjKGUAghhEJa24nS3NycvXv34u3tzf3338+gQYNYtGhRu/9OFJ3jt08+Tq9+zhRczuCkjB8UXdDg23WfARIPHlE4iTAlaQm6+9LewcMUTiKEEDpSgCXaxdLGhnEP3QvA/q0f3WS1EF2bT6iuA1ZKXILCSUR7lRfpRgPZSQGWEEIIIdrJb3Qo5laWXM3OIfv8JaXjCGFU/QN0HbCyki90yOtfOZsIgPvgAFQqlcFjffv2RaPRkJuba3A+NzcXV1fXZl9v9+7dREZG4ufnh0qlYsqUKdx1110tXv93v/sdvXv3Ztu2bQbnP/74Y+bMmUN4eDjr169n7ty5bN9+447e69evx8HBQX+4u7vfcP3NNI58lA5YQgghlNLaTpQLFy7E0dGR3/3udxw+fJj09HRiY2M5dUo2ZXd1rn6+3D5nNgCfr3uT2poahRMJ0VSgvgBLxg+KW5d+8iz1dXU4ebhj39dJ6ThCCCEFWKJ9xtx7FzYODuSlpnP2+4NKxxGizSxtbXC/vvs7RTpgmbyy6x2wpABLCCGEEO0VNEnGD4ruyz0wAOi4Aqy81HSqKyqxsrXF2XtAu1/vmWee4cKFCyQlJVFTU8PGjRv56KOWN4M9/vjjfP3112RnZxuc37JlC3v27OHMmTN8/PHHzJs3j3vvvRdfX98WX6umpobS0lKDoz0aO2D1kw5YQgghFNCWTpR33303R44cITo6mpycHE6fPs2KFStQq5u/zWTM8b2ifWa9+DxmGg2n9n1P8g9HlY4jRBMuA31w7O+GtqqaSz/GKx1HmJDqigr9ZjkZQyiE6AqkAEu0mVpjxqR5DwHwfczHNNTXK5xIiLbzHjEMtZkZhRmZlOTlKx1HtFNjAZZtn94KJxFCCCGEqfu5AEvGD4ruxdLGhr4DPICOK8BqqK8nK+k8AB5DAg0eKygooLa2FhcXF4PzLi4u5OTkNPt6BQUFzJo1C1tbW7y8vAgMDKSsrKzZtQMGDGDKlCm89957N8157NgxAPz8/G661ljyUtMAGUEohBBCGW3pROnr68v999+PmZkZM2fO5JVXXuH555/npZdeana9scf3irYZOfO3+I0Ooaayii/+tkHpOEI0K2jiOAAuHP8JbVW1wmmEqUk7eRoAbynAEkJ0AVKAJdosePoU+ri5UlJQSNyub5SOI0S7/Dx+ULpfdQdlV693wOrTp8moEyGEEEKIW9V/kD+9XV2orqjk4nHZhSu6Fzf/gQAU5+ZTfq24w65z5WwSAJ5Bgw3Oa7Va4uLiiIiI0J9TqVRERERw5MiRG75mdXU1WVlZaDQa7rnnnmbXLFiwgLy8PL788subZgwODgZo0imrI+WlpAPQ19MDtcas064rhBBCtJVarSYvL48nnniC+Ph4duzYwauvvsqSJUuaXW/s8b2i9Sxtbbh7+TIA9r27javZzRe5C6G0wNt1BVhJB2/8OUCI5qSe0I3C9R4xTOEkQggBGqUDCNMVvmAOAAe375CZ4cLk+YbovnBPjU9QOIkwhrKiawCYmWuwsrensqRE4URCCCGEMEWN3a8uHPtRPvOIbsdtkK7bU9b5jul+1ejKuUQAPH/VAQsgKiqKmJgYfvrpJ44fP86zzz6Lra0tW7duBSAmJobMzExefPFFAMaMGYO7uzsJCQm4u7uzatWqZjdcqFQqFixYQExMDHV1dQaP+fr68sgjj/DVV19RWFjI8OHDeeuttzhw4ACnT5829ttv0bXcPKrKy7GytaWvpwd5qemddm0hhBCiLZ0os7Oz0Wq11P9iEkZiYiJubm6Ym5uj1WoN1tfU1FAjv0MratrS/4eDc1/y0y7zfczHSscRollWdrb60XGJh6QAS7Re2vUCLI/Bg7C0saG6okLhREKInkw6YIk2GTQ+jP4BflSVl3PkXzuVjiNEu5iZmzNgWBAAKfHSAas7qNNqqSwpBcDeqY/CaYQQQghhqoImNo4f/EHhJEIYX/9B/gBkJV/s0OtkXO+A1T8wAJXa8GuoHTt2sHz5ctasWUNCQgLBwcFMnz6dvLw8QDdG0M3NTb/eysqKtWvXcu7cOXbu3ElmZibTpk1rcs0pU6bg5eXFBx980OSxmpoapkyZwp49e0hKSuLNN9/ks88+46677jLm274ljUVXMoZQCCFEZ2tLJ8offvgBPz8/g+LngIAAsrKymhRfCeW5+g9kwiMPALBzfRR18v+R6KICxo7BTKMhNyWNoowspeMIE3Q1O4eCyxmYmWvwuy1U6ThCiB5OsQKspUuXkpqaSmVlJUePHmX06NE3XN+rVy82btxIVlYWVVVVJCcnM2PGjE5KK34t/LFHATj22Rf6IgchTJXnkMGYW1pSWlhEftplpeMIIykr0o0htO3TW+EkQgghhDBFdk598LxepJ8oYxBEN9S/sQNWcsd2wMpPv0JVeTmWNtb08/Fq8nh0dDTe3t5YWVkRFhbG8ePH9Y+Fh4ezYMEC/c+xsbEMGTIEa2trnJ2dmT9/frNdOvbu3YtKpeLChabvLSMjg8mTJ9O3b1+sra0JCAjghRdeoLS087/baBxD2E8KsIQQQiggKiqKRYsWMW/ePAIDA9m0aVOTTpTr1q3Tr9+0aROOjo5s2LABf39/Zs6cyYsvvkh0dLRSb0HcwL1/fh4zjYaTe74j+fAxpeMI0aLBE3XjBxNjDyucRJiyxIO6Pz+BE8YqnEQI0dMpMoJw9uzZREVFsWTJEo4dO8azzz7L7t27GSJ2a3IAACAASURBVDRoEPn5+U3Wm5ubs3fvXvLy8rj//vvJzMzEy8uLa9euKZBeeAQF4h82ijptLbEf/lPpOEK0m2/oCABSpftVt1J29RrO3gOwc5QOWEIIIYRovcETxqJWq7lyLomSvKafU4UwZSq1Gjf/gUDHF2A11NeTmXiegaNG4jlkMLmXUjv0eqYkNyUNoNnCNCGEEKKj7dixA2dnZ9asWYOrqysJCQlNOlH+ctxgRkYG06ZN46233uLUqVNkZmayYcMG/vrXvyr1FkQLQu6cxsDQkVRXVPLF6/9QOo4QLVKpVPqCmcYCGiHaIunQEW5/dDaDb5cCLCGEshQpwIqMjGTLli1s27YNgCVLlnDHHXewcOHCZn9ZX7hwIY6OjowbN47a2loA0tPTb3gNCwsLLC0t9T/b29sb7w30cOELdN2vTny9l2s5uQqnEaL9fEODAUiJS1A4iTCmxg5YUoAlhBBCiLYYfH38YKKMHxTdkJOnO5Y2NtRUVpGffqXDr3flbOL1AqxAfvriqw6/nqnIS00DZAShEEII5URHR7fYwSo8PLzJuaNHjzJ2rNzc7sqs7Gy56/llAOx7d6vcwxFdmvvgABz6OlFVXi4b5EW7XPzxBNqqavq4ueIy0Ec2/gghFNPpIwjNzc0JDQ1l3759+nMNDQ3s27evxV/c7777bo4cOUJ0dDQ5OTmcPn2aFStWoFa3HH/FihWUlJToj8zMTKO/l57IycOd4VN1H7z2b/tI4TRCtJ9KrcY7eDgAKfFSgNWdNBZg2UsBlhBCCCFayUyjYdD42wA4+/0hhdN0rEWLFpGamkplZSVHjx5l9OjRt/S8Bx98kIaGBnbu3NnBCUVH6D/IH4Cciyk0/KKzRUfJOJsEgMeQwA6/lin5ZQcslUqlbBghhBBCdAvTli7Coa8TeanpHIj5ROk4QtxQ4O268YPnj/xI3fUGHEK0RW11NRd/igd0Hc2FEEIpnV6A1bdvXzQaDbm5hlX3ubm5uLq6NvscX19f7r//fszMzJg5cyavvPIKzz//PC+99FKL11m/fj0ODg76w93d3ajvo6eaNP9h1GZmJB48TM6FS0rHEaLd3PwHYm1vR1VZOVnJF5WOI4yosQDLVgqwhBBCCNFKA0ePxMrWlpL8AjITk5WO06HWrVvH6tWrCQkJ4eTJk+zevRtnZ+cbPsfLy4s33niD2NjYTkopjK3/ID+g48cPNrpyTleA5T4oALXGrFOuaQoKMzKp1WqxtLGhl0s/peMIIYQQwsS5Bfgx4ZH7Adi5/k0paBFdXtD1AqzEWBk/KNov6eARAP1YSyGEUEKnF2C1hVqtJi8vjyeeeIL4+Hh27NjBq6++ypIlS1p8Tk1NDaWlpQaHaB/v4OHcdt/dAOzfKt2vRPfgGzoCgLSE052y81t0HhlBKIQQQoi20o8fjD1MQ0ODwmk6VkxMDNu2bSMxMZElS5ZQUVHBwoULW1yvVqv56KOPWLlyJSkpKTd9fQsLC+zt7Q0Oobz+AboOWFnnO2cTSuHlDEoLizC3siTi/83vlGuagvraOgouZwAyhlAIIYQQ7Xffn5ejNjMjYfe3nD/yo9JxhLgh2z698RwWBEDSoSMKpxHdQeOfI5/QEVja2CicRgjRU3V6AVZBQQG1tbW4uLgYnHdxcSEnJ6fZ52RnZ3P+/Hnqf1EckZiYiJubG+bm5h2aV+j0dunHY39fj8bcnJN7vuPSj/FKRxLCKHxCggEZP9gdSQGWEEIIIdpqyOQJAJyL/UHhJB2n8bP0/v379ecaGhrYt28fY8e2vFv0L3/5C3l5eXzwwQe3dJ0VK1ZQUlKiPzIzM9sXXBhFZ3fAamho4IvXNwAwdfECvEYM7ZTrmoK8xjGEUoAlhBBCiHYIvWsGPiEjqK6o0P/eJURXNmj8bajVajITz1OSX6B0HNENFFzOID/9Chpzc/xuC1U6jhCih+r0AiytVktcXBwRERH6cyqVioiICI4cab7C+YcffsDPzw+VSqU/FxAQQFZWFlqttsMz93TmVpY89o+/Yu/kSFbyBf7vpbVKRxLCaHxDdB2wUuNPKpxEGJsUYAkhhBCiLfr5eOHk4U5tTU233jXu5OQEQH5+vsH53NxcXF1dm33O+PHjefzxx1m0aNEtX2f9+vU4ODjoD3d397aHFkZh7eBAHzfd/8fZndQBCyD+yz3Ef7kbM42GR19bhaWt7EgGyE1NA6QDlhBCCCHazsrejruefwqAvZs/oDg3/ybPEEJ5gxvHDx6U8YPCeBq7YDX++RJCiM6myAjCqKgoFi1axLx58wgMDGTTpk3Y2tqydetWQDcCYd26dfr1mzZtwtHRkQ0bNuDv78/MmTN58cUXiY6OViJ+j/Pg6hfxDAqkrOgqHzz9R2oqK5WOJIRROHl64ODcl9qaGi6fPqd0HGFk+gKsPr0VTiKEEEIIUxI0Sdf96uLxePns8wt2dnZ8+OGHLFq0iMLCwlt+Xk1NDaWlpQaHUFZj96vCjEyqyso79dqfrX2dwowsnDzcuffF5Z167a7q5w5YXsoGEUIIIYTJmv77Rdg7OZKbkkbsh/9UOo4QN6U2MyNwfBgAibFSgCWMp7EAK3BCmMJJhBA9lSIFWDt27GD58uWsWbOGhIQEgoODmT59Onl5eQAMGDAANzc3/fqMjAymTZvG6NGjOXXqFP/4xz/YsGEDr732mhLxe5TfPD6XkTN/S522lpjn/8zVrObHRAphinxDdd2vrpxJpLamRuE0HWfp0qWkpqZSWVnJ0aNHGT16dItrNRoNL7/8MhcvXqSyspKEhASmTZtmsOZPf/oTx48fp6SkhNzcXHbu3ElAQEBHv41WK7uqK8Cy6d0LtZmZwmmEEEIIYSqCJo0H4NyBQwon6ViNRVTOzs4G511cXMjJafq5b+DAgfj4+LBr1y60Wi1arZZ58+Zx9913o9Vq8fX17ZTcov36D/IHICu587pfNaoqK+fjFaupr6tj1N0zGDljaqdn6GpyGwuwvKUASwghhBCt13+QP+Mfug+AnevepK62VuFEQtzcgGFDsOnlQPm1YtJPn1U6juhGLv54Am1VNX3cXHEZ6KN0HCFED6RIARZAdHQ03t7eWFlZERYWxvHjx/WPhYeHs2DBAoP1R48eZezYsVhbW+Pn58f69eupr6/v7Ng9yuCJ45nx9BIAdr4WRcpPJxROJIRx+YYEA5DSjccPzp49m6ioKFavXk1ISAgnT55k9+7dTW60NVq7di2LFy9m2bJlBAUFsXnzZnbu3ElwcLB+zaRJk4iOjiYsLIypU6dibm7Onj17sLHpWiNEKq6VUF9fj1qtxqa3g9JxhBBCdEOtKXL+pQcffJCGhgZ27tzZwQlFa1k7OOAdPAyAc7E/KJymY2m1WgAmT56sP6dSqYiIiODIkSNN1iclJTF06FCCg4P1xxdffMH+/fsJDg7mypUrnRVdtFNjB6ys5AuKXD8t4RT73t0GwH0v/UE/DrGnyk+7DIC9kyM2veRzixBCCCFunUql4t4/L0dtZsaJr/dy4dhPSkcS4pYMGjcGgPOHj9HQDe71tmcT/A8/NP3uYeXKlTQ0NBgciYmJBmssLS3ZuHEjBQUFlJaW8umnn9KvXz+jvzdTU1tdzcWf4gEYPGGswmmEED2RYgVYomvr5+PFnL+uRq1Wc3jHTo7skJtDovvxCdF1wEqJT1A4SceJjIxky5YtbNu2jcTERJYsWUJFRQULFy5sdv3cuXNZt24dX3/9NampqWzevJmvvvqK559/Xr9mxowZxMTEcO7cOU6dOsVjjz2Gl5cXoaGhnfW2bkl9XR0V14oBsHN0VDiNEEKI7qa1Rc6NvLy8eOONN4iNje2kpKI1AieEYabRkH3hUo/p/jt//nzmzZtHYGAgmzZtwtbWlq1btwIQExPDunXrAKiurubs2bMGx7Vr1ygtLeXs2bP6gi7R9fUPUK4DVqO972wl7eRprB3seWT9SlTqnvv1VE1lFUWZ2QC4+HorG0YIIYQQJmXU3TPwGTmc6ooKvnjjbaXjCHHL/Mbo7iWcP2r6RYPt3QT/wQcfADB8+HCDdWfOnMHV1VV/TJgwweDxt956i7vuuosHHniASZMm0b9/fz7//POOeZMmJulg4xhCKcASQnS+nvsNl2iRtYM9C99+HSs7Wy7FneDf66OUjiSE0dk7OeLs5Ul9fT1pCaeVjtMhzM3NCQ0NZd++ffpzDQ0N7Nu3j7Fjm//F09LSkqqqKoNzlZWVTX65/6VevXoBUFRU1OIaCwsL7O3tDY7OUFakG0No16d3p1xPCCFEz9HaImcAtVrNRx99xMqVK0lJSbnpNZT6+7Mn+3n8YPfufvVLL730EmvWrCEhIYHg4GCmT59OXl4eAAMGDMDNzU3hhMKYLKytcfXTjWHIOq9MByzQbZb46E+rqCorxzc0mIj/N0+xLF1BbmoaAP2kAEsIIYQQt8jawZ47nvs9AHv+531K8vIVTiTErbGwtsJr+FAALh43/QKs9m6Cf//99wFYtmyZwbra2lpyc3P1R2Fhof4xBwcHHn/8cSIjI9m/fz/x8fEsWLCA8ePHc9ttt3XcmzURidcLsHxCR2DZxSa3CCG6PynAEgbUZmbMff0VnL08KcrK5n8j/ywzw29i0aJFrRo906tXLzZu3EhWVhZVVVUkJyczY8aMTkorGvmE6kbqZSdfpKq0TOE0HaNv375oNBpyc3MNzufm5uLq2vyYj927dxMZGYmfnx8qlYopU6Zw7733tnjjTaVS8fe//51Dhw5x9mzLs9pXrFhBSUmJ/sjMzGz7G2uFsqvXALBz7NMp1xNCCNEztKXIGeAvf/kLeXl5+t2NN6PU3589ldrMjMAJYUDPKsB699138fb2xsrKirCwMI4fP65/LDw8nAULFrT43AULFjBr1qzOiCmMZPDEcWgsLCi4nEFRRpaiWYoysvj81TcA+O2TjzNg+BBF8ygpLzUdkA5YQgghhLh10596AnsnR3IuphD70T+VjqMouUdjWnxGjsDMXENRZra+E6ypMtYmeICwsDCDn/39/cnMzOTSpUts374dT09P/WOhoaFYWFgYXDc5OZn09PQWr9uTNvkVXskgP/0KGnNz/MNGKR1HCNHDSAGWMHBn5O8ZNO42qisq2fr0C/ruMaJl69atu+XWoubm5uzduxdvb2/uv/9+Bg0axKJFi+RmmgIGXi/A6s7jB9vimWee4cKFCyQlJVFTU8PGjRvZunUr9S3MYY+Ojmbo0KE89NBDN3zd9evX4+DgoD/c3d07In4T+g5YUoAlhBDCiNpS5Dx+/Hgef/xxFi1adMvXUervz57KO3gYNg4OlF8rJv3UGaXjCNEhhk8NB+DU3u8UTqIT999viP9qD2YaDY++tqrH7k7OS0kDpAOWEEIIIW6N++AAxs3WbYT4fN2b1NfWKZxIWXKPxrT4jQkB4OLxOIWTtJ8xNsGHh+s+o/1y/bFjx3jssceYPn06Tz75JD4+Phw8eBA7Ozv92urqaoqLi2/5uj1tk1/SIRlDKIRQhhRgCb1Rd89k0ryHAfi/l9eSlazcOAJTEhMTc8utRRcuXIijoyO/+93vOHz4MOnp6cTGxnLq1KlOTi18QkYAkBJ/UuEkHaegoIDa2lpcXFwMzru4uJCTk9Pic2bNmoWtrS1eXl4EBgZSVlbW7Jikt99+mzvvvJPw8PCb/rJeU1NDaWmpwdEZ9AVYTlKAJYQQQjl2dnZ8+OGHLFq0yKBl/M0o9fdnTxU0UTd+MPHgYRpaKD4XwpSZW1ky+Hbdl88n9+xXOM3PPlv7OkWZ2fT19GDWi5FKx1FE7vUCLBcfbyVjCCGEEMIEqFQq7v3zctRmZsR/tYdLP8YrHUlxco/GtPiN0XUkutANxg+2xa83wb/xhq4r8C83wX/zzTd8+umnnD59mj179jBz5kx69+7N7Nmz23zdnrbJ7+cCrLCbrBRCCOOSAiwBwIDhQ3hg5QsA7H1nK6f2dI3dsF2Zubk5APv3//zF9c1ai959990cOXKE6OhocnJyOH36NCtWrECtbvlfxZ7UFrSzWNnb4RbgB0BqXPftgKXVaomLiyMiIkJ/TqVSERERwZEjR2743OrqarKystBoNNx333385z//MXj87bffZtasWfzmN78hLS2tI+Ibhb4Aq48UYAkhhDCe1hY5Dxw4EB8fH3bt2oVWq0Wr1TJv3jzuvvtutFotvr6+nRVd3MDgSboCrJ40flD0LIPGhWFpY0NRZjYZ55KUjqNXVVrGxytWUV9Xx+h77iB4WsTNn9TNNHbAcnR3w9zKUtkwQgghhOjSRt9zB94jhlFVXs6uN95WOo6i5B6N6bGyt8MjaBAAF4+bfvGgMTbBh4aGAtzwPktxcTHnz5/Hz093XysnJwdLS0t69ep1y9ftaZv8Lv54Am1VNX3cXHEZ6KN0HCFEDyIFWAKHfs4s+PtraCwsOPPdAXZHb1E6kklwcnICID8/3+D8jVp8+vr6cv/992NmZsbMmTN55ZVXeP7553nppZdavE5PawvaGbyDh6FWq8lPv0JpYZHScTpUVFQUixYtYt68eQQGBrJp0yZsbW3ZunUrAO+8847B+jFjxjBr1ix8fHyYMGEC33zzDWq1mr/97W/6NdHR0cyZM4dHHnmE0tJSXFxccHFxwcrKqlPf262QEYRCCCE6QmuLnJOSkhg6dCjBwcH644svvmD//v0EBwdz5cqVzowvmuHk4Y7rQB/qtLUkHz6mdBwhOsSI314fP7iv63S/apR64hT7tsQAcP9fXqC3q8tNntG9lF8r1n926eftpXAaIYQQQnRlUxY/BsCe/3mfkvwCZcMoTO7RmJ6BocGozczIS02nJC//5k/o4oy1CR7gyy+/bHGtra0tAwcOJDs7G4C4uDhqamoMrhsQEICXl9dNr9tT1FZXc/FH3ZjLwTKGUAjRiaQAq4fTWFqy4O+v4eDcl+wLl/h4xRoaGhqUjtVtqdVq8vLyeOKJJ4iPj2fHjh28+uqrLFmypMXn9LS2oJ0h9M7pAKR24/GDjXbs2MHy5ctZs2YNCQkJBAcHM336dPLy8gDw8PAwWG9lZcXatWs5d+4cO3fuJDMzkwkTJhjMEl+6dCm9e/fmwIED5OTk6I8HH3ywU9/brZACLCGEEB3lZkXOMTExrFu3DtB9qXb27FmD49q1a5SWlnL27Fm0Wq2Sb0UAgyeOAyAlPoGq0jKF0whhfBoLC4ImTQDg1N6uV4AFsPedD0g/eQZrB3seeW0lqht0IeiOclPTAOjn661oDiGEEEJ0XQOGBeHk4U51RQWHd3yudByTJPdolKUfP3is+4wfbM33Q9B0E/znn+v+Xd6wYYN+zeuvv87EiRPx8vJi7Nix7Ny5k7q6Oj755BMASkpKeP/994mKimLy5MmEhISwdetWDh8+zLFjsqmskX4M4e1SgCWE6DwapQMIZT2w8gUGDAui/FoxW59+geqKCqUjmYzCwkIAnJ2dDc7fqMVndnY2Wq3WYJZzYmIibm5umJubN3vzraamhpqaGiMm79nufO73hMz8LfX19cT99xul43SK6OhooqOjm33sjjvuoKSkRP9zbGwsQ4YMueHrqVQqo+brSFKAJYQQoqPs2LEDZ2dn1qxZg6urKwkJCQZFzgMGDDD4nU90bUMm6wpTzsXK+EHRPQWMHYOVnS3XcvO4fOqs0nEMLF26lD/84Q+4urpyNjGRU9QyMHQkv1k4l2/fizFYq9FoWLFiBfPnz8fd3Z3k5GRWr15tsGblypWsWrXK4FxSUhKDBw/W/2xpacmbb77JQw89hKWlJbt372bp0qX6/4YrIS8lnYGhI3GRAiwhhBBCtCB4xlQAzu4/iLaqWuE0ypN7NKbH7zbduL2Lx+MUTmI8rf1+qHETvK+vL2VlZezduxfAYBO8h4cHn3zyCU5OTuTn53Po0CHCwsIoKPi5691zzz1HfX09n332mcFnGvGzxINHmbUCfEJGYGljI/fAhRCdomdtJxQGJs9/hFF3zaCutpYPl79EYYa0TW2Nxl/EJ0+erD93s9aiP/zwA35+fgYFLAEBAWRlZUnng04QsWg+4QvnAPDp6te61S/5onn6Aqw+vRVOIoQQojuKjo7G29sbKysrwsLCOH78uP6x8PBwFixY0OJzFyxYwKxZszojprgJS1sbfEeNBODcASnAEt3T8KnXxw/u3d+lul7Pnj2bqKgoVq9eTUhICHE//sh93oOxNtMwben/w3NokMH6tWvXsnjxYpYtW0ZQUBCbN2/mo48+avK6Z86cwdXVVX9MmDDB4PG33nqLu+66iwceeIBJkybRv39//c5zpeSmpAHQz0dGEAohhBCiKZVaTfA03bixE1/vUzhN1yD3aEyLnWMf+gf4AXDpx3iF0xhXa74fatwEb21tjbOzM4sXL27yeg8//DDu7u5YWVnh6enJww8/TEpKisGa6upqnnrqKZycnLCzs+O+++4jNze3496kCSq8kkF++hU05ub4h41SOo4QooeQAqweatD4MO54TlcJ/cXr/+hW7T472/z582+5teimTZtwdHRkw4YN+Pv7M3PmTF588cUWuxMJ45nwyP3MfFrXRvg/r2/g2Oe7FE4kOkNZ0TUArB3sMTM3VziNEEIIIbqigLFj0Jibk592mYL0K0rHEcLozDQahobfDnS98YORkZFs2bKFbdu2kZiYyJIlSygtLsYxrxgzcw1z/roaC2tr/fq5c+eybt06vv76a1JTU9m8eTN79uxp8rq1tbXk5ubqj8buCAAODg48/vjjREZGsn//fuLj41mwYAHjx4/ntttu65T33Zy81HQA6YAlhBBCiGb5hIygVz9nKkpKSD4sI8Z+Se7RmIaBo0MAyEq+QPm14pusFsI49GMIJ8gYQiFE55ACrB7I2XsAc/+2BrWZGcc+38Whj/+ldCST9tJLL7FmzRoSEhIIDg5u0lrUzc1NvzYjI4Np06YxevRoTp06xT/+8Q82bNjAa6+9plT8HmHU3TOZteJ5APZsep/Y//0/hROJzlJVWkqdthYAO0fpgiWEEEKIpoImjQdk/GBPFjB2NAFjxygdo8P4h43C2sGekvwC0hJOKx1Hz9zcnNDQUPbt+7mDQ0NDA/v27cOmrIqirGz6DvBg1opI/eOWlpZUVVUZvM6vfwbw9/cnMzOTS5cusX37djw9PfWPhYaGYmFhYXDd5ORk0tPTGTu25S/lLSwssLe3NziMKe96B6y+Xp6ozcyM+tpCCCGEMH0jp08B4PS+A9RJpyYDco/GNPhdL8C6IJNJRCf6uQArTOEkQoieQqN0ANG5VGo186PWYe1gT+qJU3y29nWlI5m8d999lzfffLPZx8LDw5ucO3r06A2/1BXGNWzKZB5c8yIABz78P3b/z3sKJxKdqaGhgbKrV+nVzxk7xz4U5+YrHUkIIYQQXYhKpWLw7eMAOPv9IYXTCCVY2dny+MY30FhY8E30FvZu/kDpSEY3fOpvADj97QEa6usVTvOzvn37otFomozJyM3NJTAwkE9+v4Qn39/ImFl3knjoCKf2fMfu3buJjIwkNjaWS5cuERERwV133WXw/GPHjvHYY4+RnJyMm5sbK1eu5ODBgwwdOpSysjJcXV2prq6muLi4yXVdXV1bzLtixQpWrVpltPf/a9dycqmuqMTSxhpHj/7SkU8IIYQQemqNmX6kdMI3exVO0/XIPRrT4DcmFICLx6QAS3Seiz+eQFtVTR83V1z9fMm5mHLzJwkhRDtIB6weZsjk23HzH0hFcQkxz62QnRKiWxs07jbm/KLb2xd/26B0JKGAsqKrANj16aNwEiGEEEJ0NZ5DB2Pv5EhlaRmpJ04qHUcooJ+PFxoLCwCm/34R9/55OSp19/mqRK0xY+hvJgJwcs93CqdpnZS4BL59/38BeGDlC/R26cczzzzDhQsXSEpKoqamho0bN/LRRx8ZPO+bb77h008/5fTp0+zZs4eZM2fSu3dvZs+e3a4869evx8HBQX+4u7u36/V+raGhgbw0GUMohBBCiKb8x4zCzrEPpYVFXDwer3QcIVqtl4sz/Xy8qK+rIyXuhNJxRA9SW13NxR91RX8yhlAI0Rm6z7eK4pZMnPsgAId37KS0sEjhNEJ0HJ+Rw3ns76+hMTcnYfe3/Gu1tBDuqcqvXgPAzlEKsIQQQghhKGjSBACSfzhKfW2dwmmEEvr5eAO6ov36+nrGP3Qfc19/RV+UZer8Rodg27sXpYVFpMZ3rSLDgoICamtrcXFxMTjv4uJCTk4OoBshn37qLDYODjy8fiWFRUXMmjULW1tbvLy8CAwMpKys7IbXKS4u5vz58/j5+QGQk5ODpaUlvXr1avG6zampqaG0tNTgMLb8tMsAOHsNMPprCyGEEMJ0Bc/QjR88uec76uvkc4swPX6jdd2vrpxNoqqsXOE0oqeRMYRCiM4kBVg9iPvgAAaOGkmdtpYf/u8zpeMI0WHcBwfwePSbWFhbkXjwMB//aVWXGrUhOpe+A5YUYAkhhBDiV4ImjQfg3IEfFE4ilOLi6wVAwu5v2f7Hv1BbU8OI3/6GRZvfwsreTuF07dc4fvDMd7Fd7madVqslLi6OiIgI/TmVSkVERARHjui+IK+vreOjP62iqrwcv9EhDJmsK5qsrq4mKysLjUbDPffcc8Pr2NraMnDgQLKzswGIi4ujpqbG4LoBAQF4eXnpr6uUwiuZADh59Fc0hxBCCCG6DjNzc4ZFTAYg4WsZPyhMk99t18cPHpfxg6LzJR48CoBPyAgsbWwUTiOE6O40SgcQnWfinIcAOLnnW0ry8hVOI0TH6OfjxROb/461vR2X4k4QE/kidbW1SscSCirVF2D1VjiJEEIIIbqS3i79cA8MoL6+Xr8bUvQ8/Xx0BVh5qemc3P0t5VevsWDDX/EbHcLvt/4PW56MpCS/QOGUbaNS1Lcn7QAAIABJREFUq/XjB0/t7ZrjB6OiooiJieGnn37i+PHjPPvss9ja2rJ161YAYmJiyMzM5F9r/oZKrcKmrIpZs2aRkJCAu7s7q1atQqVSGbzm66+/zq5du0hPT6d///6sXr2auro6PvnkEwBKSkp4//33iYqKoqioiJKSEt5++20OHz7MsWPHOv2fwS8VXskAwMnTuOMNhRBCCGG6AieEYW1vx7WcXNISTisdR4g28RvTWID1k8JJRE9UeCWD/PQrOHt54h82ijPfxSodSQjRjUkHrB7Cvq+Tvk1t7PYdCqcRomM4uruxeMs/sHPsw+Uz53j/98vRVlUrHUsorKywsQDLUeEkQgghhOhKBk/Udb9KP3mG8mvFCqcRSmkcQZiXmg7odmT/z4KllBQU0n+QP8s+fJe+Xp7KBWwH35AR2Ds5Un6tmIs/xisdp1k7duxg+fLlrFmzhoSEBIKDg5k+fTp5eXkADBgwADc3N058tYf4/+7GysqKtWvXcu7cOXbu3ElmZibTpk0zeE0PDw8++eQTkpOT2bFjB4WFhYSFhVFQ8HMh3XPPPcd///tfPvvsM2JjY8nJyeHee+/t1PfenMKMLACcPKQASwghhBA6I2dMBSDhm29paGhQOI0Qrefk4Y5jfzdqtVpST5xSOo7ooX4eQzhW4SRCiO5OOmD1EOMevBeNuTmpJ05x5cw5peMIYXQOzn1ZvOUf9HbpR87FFLYseY7q8gqlY4kuoPyqjCAUQgghRFMyflCoNWb6Qpe81DT9+cyk87w99wme2Px3nL08Wfa/7/De75eb3Gfp4b/9xfjB2q41fvCXoqOjiY6Obvax8PBwg59jY2MZMmSIwTl7e3uDnx9++OGbXrO6upqnnnqKp556qpVpO1Zhhm4EYR83V9RmZl1ubKQQQgghOpeFtRVBk3QjmE/I+EFhohrHD6afOiMb5oViEg8e4fZHZzP4dinAEkJ0LOmA1QNoLCwYN3sWALHb/6lwGiGMz6aXA0+883f6enpQcCWDd554horiEqVjiS6irEgKsIQQQghhyNzKEv/bRgFw7sAhhdMIpfT19MDMXENVeTnFufkGjxVlZLFx3mKunE3EzrEPT76/kUHjwxRK2noqlYrhUyYDcGrffmXDiFtWkleAtroaM3MNvV37KR1HCCGEEAoLmjQBSxtrCi5nkHEuSek4QrSJf+P4wWNxCicRPdmln06graqmt6sLrn6+SscRQnRjUoDVA4TcMQ07xz4UZWVz5tsDSscRwqgsbW1YtPkt3PwHUpybzzuLnqYkv+DmTxQ9Run1AizbPr0VTiKEEEIIY9FYWrbr+X5jRmFuZUlRZjY5F1OMlEqYml+PH/y1sqKrbFr4FMmHj2FpY83jb79O6J3TOy9gO3gHD8PBuS+VJaVcOPqT0nHELWpoaKAoMxuQMYRCCCGEgJEzpgBw4hvpfiVM18DGAqzjUoAllFNbXc3FH3V/BmUMoRCiI0kBVg8wce6DAPzw8afSvl50KxpLSx7f+AYDhgZRfvUa7zzxtP7LaiEaSQcsIYQQovsw02iY8fQS1h3dx/LPtzNx3kNtKrLWjx+MlfGDPVk/Hy+g5QIsgOqKCt7//XLiv9yNmbmGR9avZPL8RzorYpsNn6obP3j2+0PUabUKpxGt0TiG0NGjv8JJhBBCCKEkK3s7fZFAwtf7FE4jRNu4+Hrj0NeJmsoq0k+dVTqO6OGSDh0BIHCC6XS3FkKYHinA6ub8bxuFm/9AqisqOLZzl9JxhDAaM42G+VGvMnDUSCpLy3h3ybPkpqQpHUt0QeVF1wCwtLHGwtpK4TRCCCGEaKt+Pl4s2/4uUxbNx0yjwc1/IPf84RlWfruL+VHrGHz7ONRmZrf0WvoCrANSgNWT3UoBFkBdbS0fr1jN9zEfA3DX8mXctXwZKpWqwzO2hUqlYvjUyQCc2vudsmFEqxVe0RVg9fWUDlhCCCFETzbsNxPRWFiQfeGSdO0VJsvvtlEApJ44KRtDhOISDx4FwCdkBJY2NgqnEUJ0VxqlA4iOdfscXferH//zFZUlpQqnEcJ47nhuKUETx1NTWcX7Ty0n41yy0pFEF1VdUYG2qhpzK0vdOFbpkiaEEEKYnLGzZ3H38qexsLai/FoxO9dHYWVry5hZdzJgWBDDp4YzfGo4xXn5/PTF1xz/938pSL/S7Gu5BwbQ26Uf1RWVXPoxvpPfiehKbrUAC3Sj4Xa98Tal+YXctXwZk+c/gr2TI/98+VXqams7OmqreA4LorerC1Xl5SQfPq50HNFKhRlZADjKCEIhhBCiRwuePhWAhG+k+5UwXX4yflB0IYVXMshPu4yz9wD8w0Zx5rtYpSMJIbohKcD6/+zdeVxU9f7H8RcwgIogiggCCigK7iSuqaVhaal1bdEWtatGoWmaLaZpqZnmvYl5k+zqLfWa9ct7zVvmglkmrqAo5AKKCMQii6CyM8Py+2NgkgRknTMDn+fjMY9Hc/iec96nDGHO53w+TVj7zi70GjkcgKM7diqcRoiG076zC8OfewaArxa+R+zZCIUTCUOXnZlJO6eOWLWVAiwhhBDCmLS2a8vk5e/qOlZdORnKN0tWkpWWDsDJ/+zGsVtXBv1lHD7jx9Kmgz2+L03D96VpXAsLJ/R/PxIR9Avq/HzdMXuUHSv6VChFarX+L0oYDF0BVi066f667WuyMzKZvOJdfMaPpXVbW7a+vrjCnzGl9SsbP3jpyHH5M26Eyjtg2UkHLCGEEKLZsmprS7ch2s5BUoAljJWJqSkeA/sDEB0iBVjCMEQeO4m9W2e8RgyVAiwhRKOQEYRNWHn3q4u/Hqvy6W8hjNG4+bMxM1cRefQEFw8fVTqOMAI5mTcBaN2urcJJhBBCCFFTPR4Yxpu7vqLng8PQFBbyvzWfsOmV+briq3Ip0TH88Pd/sML3cbbOf4dLR45TUlxMFx9vnv1gCct+/ZFJyxfj1q8PAD0fkPGDd/Lz8yM2Npb8/HxOnTrFwIEDq1w7ceJETp8+zc2bN8nJyeHcuXNMmTJFj2kbjo19e1pat6a4qIgbZQUvNRX24wG+mPsWhXn5eA4bwpvfbefxt17D8/7BqCwtGylxzfV9eBQAvx2U8YPGKCOxrADLxUnhJEIIIYRQSt/RozBTqUi4GMmN3xOVjiNEnTh5etCqjQ0FObkkRcoEE2EYoo5pxxD2GD5U4SRCiKZKOmA1US1trBn4xDgAjn71rcJphGg47vf1pe/DoygpLubHgECl4wgjkXvzFgDWUoAlhBBCGDzzFpY8/uZr3D/5SQCSr1xlxzvLSImOqXa/4qIizv98hPM/H8HGvj0DHn+UQX8Zj71bZwY/OYHBT04gLTZe1/XoUvCJRr8WY7Bq1Sr8/f0JCQlh/vz5BAUF4enpSXp6+l1rMzMz+fDDD4mKikKtVjN+/Hi2bNlCWloaBw8eVCB93ZX/OchMTKZYo6n1/pePn2LjzDnM3PB37FyceXDaczw47Tk0hYVcCwvn8vEQLp8Mveef24bm0tOLds4dKczLJ+r4Kb2eWzSMzCTtCMJWNja0tLEmPytb4URCCCGE0DfvR0cDEL5ful8J49VtkLaLW8yZc5QUFyucRgitmDPn0BQUYuvogKNHF1KuXlM6khCiiZECrCZq8MQJWLZqyfXoGKJDzigdR4gGM+HN1wAI2b1HfjASNabrgGUnBVhCCCFEQ7FzcWbyB+9yMzmFyKMnuHwilPysrHod06WnJy98tFxXHHPk39+wb/3ntR6jlpV+g1++2M4vX2zH/b6+DHpyAv0e8dUd9/cLl8i+kVGvrE3Ftm3b2Lp1KwD+/v6MGzeOGTNmsGbNmrvWHjlypML7f/zjH7z44osMHz68ygIsCwsLLO/oCmVtbd1w4etBN34wNr7Ox0i4cImPxk/Cc9gQPIcOwnPYYGwdHfC8fzCe9w8G4HZqOpdPhnDlRChXToaSe+t2g+SvSr9HtN2vIo+eQFNQ2KjnEo1DU1DI7bR02nSwx87FmcRLUUpHEkIIIYQe2XSwp4uPNwDhQT8rnEaIuvMY7APA1VAZPygMR1FhIVdPh9FjxP14DR8q9xmFEA1OCrCaIFMzM4Y9/zQAwdul+5VoOrzH+OLatxeFeXkEBf5L6TjCiORkaAuwrNraKpxECCGEaDoGTRxP1wH3ATDg8UcpKS4mPuICkUdPcin4ONevXK3xsUxMTRk1fQpjX/XDzFzF7dR0vlnyAdGnTtc7Z+y534g99xv/W72OfmN88bx/ECe+/a7exzV25ubmABw+fFi3rbS0lEOHDjF0aM1a8T/00EN4enqycOHCKtcsWrSIZcuW1StrY2iIAiyAgpxcIoJ+JqLs5lgHd1dtQdawwXT1uY82DvYM+st4Bv1lPCUlJSRFXtZ2xzoRQnzEBYqLiup9LXfqM7ps/OBPh++xUhiyzMRkbQFWJynAEkIIIZqbfo88hKmpKdfCwrmVkqp0HCHqxFRlhnv/fgDSJEIYnKhjJ8sKsIbw69YdSscRQjQxpkoHEA2v90MP0M6pIzmZNzm7z7jGQAhRFTNzcx6bPxuAw1t2SMcCUSu6DlgyglAIIYRoME5e3QDth6nXo2MwNdN+wPrYPH/e3LWd9w79wDPvv0Pvhx7EslWrKo/T1smRWV9uYNz8WZiZq4g4+At/f3JKgxRf3akwL4/Q3XvY/tZSYs6ca9BjGyM7OzuAu0YNpqam4ujoWOV+NjY2ZGdno1ar2bt3L3PnzuXQoapHo6xevRobGxvdy9nZuWEuoJ7KC7BSY+Ma9LhpsfEc/epb/jVrAUuHj+Fzv9c4/OVXJF+OxtTUlE69ejD65b/y6taNrDh2gKffW4ipyqxBzt2xuwf2rp3QFBQSKSM2jVpGonYMoZ2Lk8JJhBBCCKFv940tGz94QMYPCuPVqVcPWlhZkXvzlt7Hsith9uzZxMbGkp+fz6lTpxg4cGCVa1UqFUuXLuXq1avk5+dz/Pjxao+9cOFCSktLWbduXYXthw8fprS0tMJr48aNDXI9TV3k0VMAdOnvjaVV1Z9XCSFEXUgHrCboganPAnBi526KCmXkgGgahj/3NHYuTtxOS+fItq+VjiOMTM7NWwBYSwGWEEKIBjR79mzeeustHB0diYiIYO7cuZw+XXnR0MSJE1m8eDEeHh6Ym5sTHR3N2rVr+eqrr/ScuuE4e3YH4MCGzcSF/4atowM9RtxPjxFD8Rg8gDYO9gx5+gmGPP0ERRoNsWERXDp6nKijJ3Vdh/qPH8OTi9+kpXVrCnJz2b0qgDM/7FPyssQ9ZGdn4+3tTevWrfH19SUgIIBr167dNZ6wnFqtRl3LEZL64NDFDah/B6zqFKnVRJ86TfSp0/y4LhDr9nZ0HzoIr2GD6TZkINZ27Rj6zF8wU6n49r0P632+fo88BEDksZOo8/PrfTyhnIyEREA76lUIIYQQzUc754649utNSXExET/9onQcIerMY1DZ+MHTZyktLVU4TeOaNGkSAQEB+Pv7ExISwvz58wkKCsLT0/OuB54AVq5cyZQpU/Dz8yMqKoonnniCdevW0bdv37uKsQYMGMArr7xCREREpefetGkT7733nu59Xl5ew15cE5WRkEh63O/Yu3Wm2+CBXPil8s8zhBCiLqQDVhPTqXdP3O/rS5FGI2M1RJPRqo0No1/5KwAHPt2EOr9A2UDC6ORkZgLQul07hZMIIYRoKso/YFu+fDn9+/cnIiKCoKAg7O3tK12fmZnJhx9+yNChQ+nbty9btmxhy5YtPPLII3pO3jCs2trSxkF7reWjBm+lpHLyP7v58rW3eW/EWP758jyCt39LenwCKnNzug0ZwBNvzWPhD//H4v3/xf9fn/LC6mW0tG5N7LnfWPv0NCm+0qOMDG1H2T//mXVwcCAlJaXK/UpLS4mJiSEiIoKAgAD++9//smjRokbN2tAsW7XC1tEBgLTY3/V23uwbGYTt2c+Od5axfNR4tr3xLiXFxQyaOJ6H/WfU+/jlBVgyftD4/dEBSwqwhBBCNK7adG250+TJkyktLWX37t2NnLB58S7rfnU1NIycjJsKpxGi7roNGgA0j/GDCxYsYPPmzWzdupXIyEj8/f3Jy8tjxozKf8ebOnUqq1atYv/+/cTGxvLFF18AMHfu3ArrrKys2LFjB35+fty8Wfn3g7y8PFJTU3Wv7Ozshr24Jizy2EkAvEYMUTiJEKKpkQKsJuaBKZMACN9/SEa0iSZj9CvTaWVjQ/KVq5yWm3KiDspHEFq1s1U4iRBCiKaith+wHTlyhP/9739ERUVx7do1/vGPf/Dbb78xfPjwKs9hYWGBtbV1hZehcPLUjh+88XsihZU8YVmkVnPlZCjf/+0TPho/idXjnuF/H63j8vFTFKnV2Lk4023wAIqLiti/YROfTZ9NZlnBgdAPjUYDwMiRI3XbTExM8PX15eTJkzU+jqmpKZaWlg0dr1HZu3UCIDsjk/ysLEUylJaW8tvBX/juw7UAjH3VjwGPP1bn4zl0daeDuytFajWXjhxrqJhCIRkJSQDYdZICLCGEEI2ntg+VlHN1deXjjz8mODhYT0mbj/sefRiAc/tl/KAwXioLC9zu6wNAzOmzCqdpXObm5vj4+HDo0B//z5aWlnLo0CGGDh1a6T6WlpYUFNzdZGDIkIqFQIGBgezdu5eff/65yvO/8MILpKenc/78eVatWkXLli2rXGvInzEpIeqYdgxhj+GV/3cSQoi6khGETYhNB3v6PeILQPBX/6dwGiEahl0nF4Y9+xQAez7+lNKSEoUTCWOUk6kdQdhaRhAKIYRoAOUfsK1evVq37V4fsP3ZQw89hKenJwsXLqxyzaJFi1i2bFl94zYKp+4eACRFXanR+hu/J3J0x06O7tiJRcuWeAzywblHdyKDj5N46XJjRhX38OKLL3LixAlCQ0OZP38+VlZWbNmyBYBt27aRlJTE4sWLAXjnnXc4c+YMMTExWFpa8thjjzF16lRmzZql5CXUWgd3V6Bxxw/W1Mn/7KadsyMPzZzGpGWLuJ2aVqenxPs9PAqAyydCKcyVsRPGLiNRW4Bl69gBM5WK4qIihRMJIYRoiu58qATA39+fcePGMWPGDNasWVPpPqampuzYsYP333+fESNGYGsrDzs2FIcubjh5dqNIo+H8zzIOSxgv1369Mbe05HZaukH8ztWY2rdvj0qlIjU1tcL21NRUvLy8Kt0nKCiIBQsWEBwcTExMDKNGaX+Xc3R01K2ZPHky/fv3r7Yr4ddff018fDzJycn07duXNWvW4OnpyVNPPVXpekP+jEkJMWfOoSkoxNbRAUePLqRcvaZ0JCFEEyEFWE3IsMlPYmauIubMOZIia3YjRAhDN27+LFTm5kQdO8WVk6FKxxFGKuemtgBLZW5OC+vWFGTnKJxICCGEMavLB2wANjY2JCUlYWlpSXFxMbNnz67wlOSfrV69moCAAN17a2trkpKS6n8BDcDJS9sBK/lydK33Vefnc+nIMenSYyCWLFnCihUrcHR0JDw8nLFjx5KWlgZA586dKbnjAQgrKys+++wzXFxcyM/PJyoqiilTprBz506l4tdJB3c3AFKvxSkZQ2ff+s9p29GR+x57hBfXrWbDi/6kRMfU6hh9Zfxgk5KdkUlhXj6WrVpi29GRjIREpSMJIYRoYur6UMl7771HWloaX375JSNGjKj2HBYWFhU6pTb3biv3Uj5+8PLxEMW6tArRELoN1o4fvBoapnASwzRv3jw2b95MVFQUpaWlxMbGAuh+93ZxcWH9+vU8/PDDFBYWVnmczZs36/75woULXL9+nV9++YUuXbpw7drdxUSG/BmTEooKC7l6OoweI+7Ha/hQKcASQjQYGUHYRJi3sGTopIkABG//VuE0ojmxd+vM2LkvY93ersGP7davD/0eeYiS4mL2BGxo8OOL5qOosJCCnFxAumAJIYRQTnZ2Nt7e3gwcOJB3332XgIAAHnzwwSrXq9VqsrOzK7wMhbNXdwCSL19VOImor02bNuHm5kaLFi0YMmQIoaF/PPQwatQopk+frnu/dOlSunfvTqtWrbCzs2PYsGFGV3wFhtUBC7Q3O79ZspKYM+doad0av8/WYtOh+tE/d+rg7krHbl0p1hRx8dejjZhU6FNmknYsa3sZQyiEEKIRVPdQyZ1dWO40bNgwZs6ciZ+fX43OsWjRIrKysnSv5nyjvybKC7DCD/ykcBIh6sdjkA8AV0OafgHWjRs3KCoqwsHBocJ2BwcHUlJSqtxn4sSJWFlZ4erqio+P9t9XXFwcAD4+Pjg4OHD27Fk0Gg0ajYaRI0fy2muvodFoMDWt/NZ+SEgIAB4eHpV+3ZA/Y1JK5NGTAPQYIWMIhRANR9ECrNmzZxMbG0t+fj6nTp2qtpXinSZPnkxpaSm7d+9u5ITGw2f8WKxs25CRmCwfuAq9enTuKzz88nRe3boRW0eHe+9QCxPemgvA6f/trfUT4OIPtfleq1KpWLp0KVevXiU/P5/w8HDGjBlTr2MaipzMmwC0bisFWEIIIeqnLh+wgbbIIiYmhoiICAICAvjvf//LokWLGjtug1NZWNDBTVvAklzDEYRCGBJDK8ACKNZo2DLvHVKvxWHr6MBLgR9jadWqRvv2GT0SgCshp8nPkg/Rm4ryMYTtXJwUTiKEEEJA69at2b59O35+fmRkZNRon9WrV2NjY6N7OTtLUXFVnL2608HdFU1BIRcPS6dgYbwsWrakc++eAESH1n60urHRaDSEhYXh6+ur22ZiYoKvry8nT56sdt/CwkKSk5NRqbTDqvbu3QvAzz//TO/evfH29ta9Tp8+zY4dO/D29q7QpfpO3t7eAFy/fr0hLq1ZiCorwHK/r1+Nf/8WQoh7UawAa9KkSQQEBLB8+XL69+9PREQEQUFB2NtX/5Snq6srH3/8McHBwXpKahxGTJkMwLGv/0NpFX/5CtEYOvXuAYC9ayde3boRO5eG+UW67yMP4davD4V5+RwI3HzvHUSlavu9duXKlbzyyivMnTuXnj178vnnn7N7927dD+91OaahyLlZVoAlHbCEEELUU30+YLuTqalphZEcxsKhqxtm5irybmdxKzVN6ThC1IqpmRn2rp0ASIuNUzbMn+RnZfGv2QvIzsjE2as7L679EFOV2T336/dw2fjBgzJ+sCnJSNR2wGqo37GFEEKIO9X2oZKuXbvi7u7Onj17dB1Zpk2bxuOPP45Go6FLly537SPdVmrO+1Ft96tLwccpzMtTOI0Qdefevx9m5ioyEpO4mVz1A2pNSUBAAH5+fkybNg0vLy82btyIlZUVW7ZsAWDbtm2sWrVKt37QoEFMnDgRd3d3hg8fznfffQfA+vXrAcjJyeHixYsVXrm5uWRkZHDx4kUAunTpwpIlS+jfvz+urq5MmDCBf//73xw5coTz58/r+d+A8cpITCI97nfMzFV0G2z4TQaEEMZBsQKsBQsWsHnzZrZu3UpkZCT+/v7k5eUxY8aMKvcxNTVlx44dvP/++5XOr22uug8dhGNXdwpycwndvUfpOKIZsWprSzunjgCkxyfQzrkjr27diL1b53od18zcnHHzZwHw69YdZKXfqHfW5qq232unTp3KqlWr2L9/P7GxsXz++efs27ePN954o87HBLCwsMDa2rrCS990HbDspABLCCFE/dX2A7Z33nmH0aNH4+7ujpeXFwsWLGDq1Kl89dVXSl1CnTl5dgMgSbpfCSPU1qkjKgsL1PkF3Lqeeu8d9Cwz6Tr/mv0GhXn5eA4bwtNLF1a73q6TC849ulNcVMTFw8b5oFp9O/aOHj26wpp33nmH0NBQsrKySE1NZffu3XTv3r3CmsOHD1NaWlrhtXHjxka5vrrKSNB2wLKTEYRCCCEaQW0fKomKirqrI8sPP/zA4cOH8fb2JiEhQZ/xm5zy8YPn9sv4QWHcujWj8YPldu7cyZtvvsmKFSsIDw/H29ubsWPHkpamfWCtc+fOdOzYUbe+RYsWrFy5kkuXLrF7925dx6rbt2/X+JxqtZrRo0dz8OBBoqKiWLt2Lbt27WLChAkNe3HNQOQx7d95XiOGKJxECNFUqJQ4qbm5OT4+PqxevVq3rbS0lEOHDjF0aNVzVt977z3S0tL48ssvGTFiRLXnsLCwqPA0uRI3+/XlgWnPAhD63Y8U5OQqnEY0Jy49vQDt6I7PZryK/+Z/4OjRhdlbPuOffq+RcrVuhZLDnn2K9p1cyEq/wa9bv27IyM1KXb7XWlpaUlBQUGFbfn4+w4cPr/MxARYtWsSyZcvqcTX1l5MhHbCEEEI0nJ07d2Jvb8+KFStwdHQkPDz8rg/Y7mwLb2VlxWeffYaLiwv5+flERUUxZcoUdu7cqdQl1Fl5AVby5WiFkwhRe+XjB9Pjfqe0tFThNJVLvBTFV2+/x/T1HzH4yQlkJl/n0D+3VLq278MjAYg5fZbcWzX/wN5QlHfX9ff3JyQkhPnz5xMUFISnpyfp6el3rV+5ciVTpkzBz8+PqKgoxowZw44dOyqsefDBBwkMDOT06dOoVCpWrVrFwYMH6dmzJ3l3dJTYtGkT7733nu59noF1mygfQWgnIwiFEEI0koCAALZt28aZM2cIDQ1l/vz5dz1UkpSUxOLFiyksLNR1Xil369YtgLu2i9px7debdk4dKcjNJfJozTsqC2GIPAZrC7CiQ5tPARZAYGAggYGBlX5t1KhRFd4HBwfTq1cv3Xtra2uee+65ao//52MkJiYycuTIuoUVFUQdO8UDUyYz8PHH8Bw6uE7H+P38Rb5a+L5MqBJCAAoVYLVv3x6VSkVqasWnTVNTU/Hy8qp0n2HDhjFz5swKY7CqYwg3+/Whg7srPYYPpaSkhGNf/0fpOKKZ6dRL+/9r4qUosm9k8NmMV3nln+tx7tGd2V8G8s9X5pEUWbvOCC1tbHj4lekAHNiwCXV+foPnbi75gs0AAAAgAElEQVTq8r02KCiIBQsWEBwcTExMDL6+vjz55JOYmZnV+ZgAq1evJiAgQPfe2tqapKSkul5aneg6YLW11et5hRBCNF21+YBt6dKlLF26VB+xGt0fBVhXFU4iRO05dHEDDG/84J9dOnKM3asDeGrJWzw652VuXU/lzA/77lrXd7T2e03ET8Y5fvDO7roA/v7+jBs3jhkzZrBmzZq71k+dOpUPP/yQ/fv3A/D5558zduxYnnjiCd2aRx99tMI+f/3rX0lPT8fHx4ejR4/qtufl5d31e40hkQ5YQgghGlttHyoRjaO8+9WFX4IpKixUOI0QddfSxhrnHp4AXG1mBVjCeMWcOUdW+g1s7NvTzrnjvXeoRDvnjkQdO8np7+/+nV0I0fwoUoBVW61bt2b79u34+fmRkZFRo30M4Wb/vbj09MLW0YHokNMU5tbtScsRL0wC4NKvR3VPRwqhL+UdsBIuRgGQe/MWG1+ag9/Gdbj27cWsf21g06zX+f23mj8FNfrlF2nVxobr0TGE/m9vo+QWVZs3bx6bN28mKiqK0tJSYmJi2LJlS7XjBWtCrVajVqsbKGXd5NzUPpUnHbCEEEKI+nGWEYTCiJV3wEqLjVc4yb2d+PY72jo58tCMqUxatojbqWlEh5zRfb1tR0c69+lJSXExF345omDSummojr1/fv9nbdq0ASAzM7PC9hdeeIEpU6aQkpLCnj17+OCDD8iv5gEgfXdav5mcQklJCS2srLBqa0tu2e8zQgghREOqzUMlfzZ9+vTGiNSsmJia4j1GOwZSxg8KY9d1wH2YmpqSei2O7Bs1u5crhNKKCgv5219eoH1nlzrt3/uhBxjt9yJj57zMuQM/SyGtEEKZAqwbN25QVFSEg4NDhe0ODg6kpKTctb5r1664u7uzZ88e3TZTU1NAO6vc09OTa9cqjjozhJv91bFo2ZLZWwKxbNWKIo2GqyFhXPglmIu/HiUr/UaNjtHSxoYBjz8GQPD2bxszrhCVurMDVrn8rGz++fJrvBS4li4+3ryyaT1fvPom18LC73m8di5ODH/uaQD2rN0g7Trrqbbfa8v3mThxIpaWltjZ2ZGcnMxHH32k+x5bl2MaCl0HLCnAEkIIIeqsrZMjLW2sKdJoSLsWp3QcIWrNmAqwAPZ9spG2HR2579GHeXHdajZMe0U36r1P2fjBa2HhunHbxqShOvZOmDChynOYmJjwySefcOzYsQrjkb7++mvi4+NJTk6mb9++rFmzBk9PT5566qkqj6XvTutFajVZaenYOjpg5+IkBVhCCCFEE9TFxxsb+/bk3rpN9MnTSscRol48BmnHD0r3K2Fs8rOySLhwqU77Xr9ylf7jHqGdU0dGvPAMh7/8qoHTCSGMjakSJ9VoNISFheHr66vbZmJigq+vLydP3j3jOioqit69e+Pt7a17/fDDDxw+fBhvb28SEhL0Gb9BdO7TE8tWrQBQmZvjNXwIT7/3Nu//sod5X3+B70sv4tDVvdpjDHn6cSxatiAp6goxZ87pI7YQOq3t2mLr6EBJScldYwYLc/PYPOt1ok+doYWVFX4b19FtyMB7HvOx1/xRWVhw+UQIl4+faqzozUZtv9feqbCwkOTkZFQqFU899RTff/99vY+pNCnAEkIIIeqvfPxgakwsxUVFCqcRovbKRxCmGkkBVmlpKf+3ZCUxYedoad0av40B2HSwB6Dfww8B8JuRjh+si3nz5hEdHU1UVBRqtZoNGzawY8eOKtcHBgbSu3dvnn322QrbN2/ezMGDB7lw4QJff/0106ZN48knn6RLly5VHmv16tXY2NjoXs7OjT8a8IZuDGHdnsYWQgghhGG779GHAfjt0GH5/UoYvfICrDu79grR1BWp1Rz4dBMAvjOn0aqNjcKJhBBKU6QACyAgIAA/Pz+mTZuGl5cXGzduxMrKii1btgCwbds2Vq1aBWgLAS5evFjhdevWLbKzs7l48SIajUapy6gz1369AW1b2TWPP8uP6wKJizgPaIuzHpvnz9v/+5pFe//DhDfm4t6/Hyamf/znMlWZMfz5ZwDpfiWUUT5+MD3udwrz7h6hqc4v4F9z3iTy6AksWrZg5oa/02PE/VUer3PfXtz36MOUlJSwZ+2GRsvd3Nzre+0///nPCusHDRrExIkTcXd3Z/jw4Rw4cABTU1P+9re/1fiYhiqnbOSIFGAJIYQQdVc+fjD5crTCSYSoPau2trRqY0NJSQnp8cbzIFeRWs2W194hLTYeW0cHXgr8mA7urrh596GkpITzPxvf+EGoX8deKysrXF1d8fLyIicnp9K1n376KePHj2fUqFEkJSVVmyUkJAQADw+PKteo1Wqys7MrvBpbZmIyAHYuTo1+LiGEEELol6nKjL4Pa8c8hu8/pHAaIeqntV1bOnbrCkDM6bMKpxFCv87uDSIp6gotbawZ/fJflY4jhFCYYgVYO3fu5M0332TFihWEh4fj7e3N2LFjSUtLA6Bz58507NhRqXiNzq1fHwDiws+TFhvP4S+/4tMpL7Ns5Dh2LlvNpeDjaAoLad/ZhZF/fZ452z7n/V/2MHnFu/QaNQKf8WOxdehAdkamzAZXmJ+fH7GxseTn53Pq1CkGDrx3pyeAyZMnU1payu7duxs5YeMoL8C6c/zgnxUVFrJl3jtc+OUI5paW/HX9R/TxfbDStY+/MReAM9/v4/qVqw0fuJm61/daF5eKT1K3aNGClStXcunSJXbv3k1SUhLDhw/n9u3bNT6mocrJ1I7ssLJtU6GgVQghhBA111FXgCU/rwnjUz5+8GbydYoKCxVOUzv5WVlsnvU62RmZOHt1Z862zwGIO/cbWek3FE5XNw3VsfeJJ5646+uffvopEydO5KGHHiIuLu6eWby9vQG4fv167S6ikWUklnfAavxuW0IIIYTQr+5DBmJl24asGxky4aSemus9GkPiMaA/AEmRV8i7naVwGiH0q7S0lB8DAgEY9uxTtHVyVDiREEJJKiVPHhgYSGBgYKVfGzVqVLX7Tp8+vTEi6U15B6z4iAsVtmdnZBKy6wdCdv2AZatWeA4bTK9RI+j5wDCs7doxaOJ4Bk0cr1t/4v92UWyEHcCaklWrVuHv709ISAjz588nKCgIT09P0tPTq9zH1dWVjz/+mODgYD0mbVidemkLsBIuVl2ABVCs0bDtjXd5ftX73Pfow0z9eCXfvPsB5/Yd1K3p4/sg7v37oc4vYP+GTY2auzmq7nvtuHHjyMr64xei4OBgevXqVa9jGqrcW9oCLFMzM1q1sSH35i2FEwkhhBDGx9lLW4CVFHXlHiuFMDzl4wfTjGT84J9lJl3ni1ffZPaWz7BqawsY//jBgIAAtm3bxpkzZwgNDWX+/Pl3dUdPSkpi8eLFgLZjr7OzM+Hh4Tg7O7Ns2TJMTEwqHDMwMJDnn3+eJ554guzsbF2Hrdu3b1NQUECXLl14/vnn2bdvHxkZGfTt25d169Zx5MgRzp8/r99/AfeQUT6C0EUKsIQQQoimxnusdvxgRNDPlJaUKJzGuDXXezSGxGPwAACiQ2X8oGierpwM5crJULoPHcSjc1/h60XLlY4khFCItABRgL1bZ6xs26ApKKx2dEdhXh6//XSYbxav4P2Rj7Fx5hyCv/qWzCTtE5kFObmc+I9U5itt27ZtbN26lcjISPz9/cnLy2PGjBlVrjc1NWXHjh28//77XLt27Z7Ht7CwwNrausLLENSkA1a5kqJidryzjNPf78VMpeL51e8z8C/jADBTqRj3+qsA/Lrta7LSqv6lSIj6KCkqJveWtpOXjCEUQgghaq9FaytdEYB0wBLGqLwDlrEWYAEkXIzkq7eXUlJcTHFREecP/ap0pHqpbXf0yjr2jhkzpsIxZ8+eja2tLUeOHCElJUX3mjx5MqAdJTh69GgOHjxIVFQUa9euZdeuXUyYMEF/F15Dug5YMoJQCCGEaFJUlpa6SREyfrD+mus9GkPiMcgHgKuhMn5QNF8/rtM2LfAZPxbnHt0VTiOEUIqiHbCaK7ey7lcJFyMpLiqq0T4lRcVcDQ3jamgY36/5BEePLhTm5ZGTcbMxo4pqmJubA3D48B9PHJeWlnLo0CGGDh1a5X7vvfceaWlpfPnll4wYMeKe51m0aBHLli2rd96GZG3XDluHDpSUlJAUWbPuB6UlJXy79EM0hWrunzSRZz9YgsrCAjOVCnvXTmTdyODXLTsaOblo7nIyb2Jl24bWbW1JVTqMEEIIYWQ6dvcA4Ob1FPKzZKSAMD5NoQAL4OKvx9g4cw6mZmbcSjXsMeA1UZvu6JV17P3zDbA/d8T6s8TEREaOHFn7oArISEwGwKaDPSoLC4rUaoUTCSGEEKIh9Bg+hBatrchMvk78bxfuvYOoVHO+R2NIbB0dsHftRHFREdfCZJymaL6SIq8Q9uMBfMaPZfzrr/LPl+cpHUkIoQDpgKUA1359gLvHD9ZGytVr3ExOaahIog7s7OwA7mpjm5qaiqNj5fN9hw0bxsyZM/Hz86vxeVavXo2NjY3u5eys/OiB8u5XabHxqPPza7xfaWkpuz74G8HbvwXg6aVvM27+bACCAjdTmJfX8GGFuEPOTW3Ramu7dgonEUIIIYxP+fhB6X4ljFV5AVbqtThlgzSAa2HhXA0NUzqGaGS5N29RkJOLqakp7Zw73nsHIYQQQhgF70fLxg8e+JnS0lKF0xiv5nyPxpCUd79KvBhFYa7c4xHN2/5P/0mRWk33oYPoPnSQ0nGEEAqQAiwFuJZ1wIqrRwGWMD6tW7dm+/bt+Pn5kZGRUeP91Go12dnZFV5K69SrbPzgxXuPH6zM93/7hJ//9W8ALFq2IOXqNUJ3/9hg+YSoSnnXQBlBKIQQQtSeU/fyAqyqx6gLYahUlpa0ddIWsBh7ByzRvJSPIWwnYwiFEEKIJsGiZUt6PjAMgPAgGT+oT03pHo0hKS/AipYHRITgZnIKx/9vFwDjF7x6zw7NQoimR0YQ6pmlVSscPboAEB9xXuE0oj7Kf0C3t7evsN3BwYGUlLu7k3Xt2hV3d3f27Nmj22Zqqq2B1Gg0eHp61mjeuCEo74CVeKluBVgA+9ZvJD8ri0ETJ/Cf5WsoKS5uqHhCVCknUwqwhBBCiLpyKuuAlRRVsxHUQhgSe9dOmJqaknvrNrk3bykdR4gay0hIwtmrO+07SacFIYQQoinoNXI4Fi1bkB6fQOKly0rHMWrN+R6NIek2WFuAJR16hdA6tGkrg/4yHmev7vQfN4awHw8oHUkIoUfSAUvPOvfphampKRmJyWRnZCodR9SDRqMBYOTIkbptJiYm+Pr6cvLkybvWR0VF0bt3b7y9vXWvH374gcOHD+Pt7U1CQoK+otebS1kHrIQ6dsAqd3jLDtY8/ixx4b81RCwh7klXgNXWVuEkQgghhHExNTPTPUgiIwiFMXIoGz8o3a+EsclITAagnYsUYAkhhBBNgfdYX0C6XzWE5nyPxlDYdXLB1tGBIrVa7vMIUSbvdhY/f6GdAjR27suoLCwUTiSE0CfpgKVn5eMH43+T8YNNxYsvvsiJEycIDQ1l/vz5WFlZsWXLFgC2bdtGUlISixcvprCwkIsXL1bY99Yt7ZPXf95uyGzs29Omgz0lxcUkX5buB8K4lHc7kA5YQgghRO3Yu3XG3NKSgtxcMsvGYQlhTDpIAZYwUuUjCNtLAZYQQghh9Fq0tsJr+FAAwg/8rHCapqO53aMxJOXdr+IiLqApKFQ4jRCG4+iO/zD8uadp59SR4c89za/bvlY6khBCT6QDlp65efcBZPxgU7JkyRJWrFhBeHg43t7ejB07lrS0NAA6d+5Mx44dFU7YsMrHD6Zei0OdX6BwGiFqJ1tGEAohhBB14lw2fvD6lRhKS0sVTiNE7ekKsK7FKRtEiFrKSNAWYLVzcVI4iRBCCCHqq9eoB1BZWJASE0tKdIzScZqM5naPxpB4DJLxg0JUpqiwkAMbNgHg6/ciLW2sFU4khNAX6YClRyYmJrj27QVAXLgUYDUVmzZtYu3atZV+bdSoUdXuO3369MaI1KhcenoCyHx6YZRypABLCCGEqBOn7toCrOTL0QonEaJuOri7AZAqHbCEkSkfQWgnHbCEEEIIo1c+fjDigIwfbEjN7R6NIZECLCGqdmbPAR6Y9hxO3T3wnTmNH9cFKh1JCKEH0gFLj+zdOtPKxgZ1fgHJV64qHUeIOunUqwcAiZciFU4iRO3lZGQCUoAlhBBC1JZTWQespCgZQS2Mj4mJCfZunQEZQSiMz63rKZQUF2PRsgXW7e2UjiOEEEKIOmppY4Pn0MEAhAfJ+EFh/Bw9umBt1w51fgG//yYjHIX4s9KSEvZ+8hkAw194BltHB4UTCSH0QQqw9Mitn3b8YMLFSEqKihVOI0Td6DpgXZQOWML45N68BUCrNjaYqaQJpBBCCFFTTp7lHbDkQZKmxs/Pj9jYWPLz8zl16hQDBw6scu1LL71EcHAwmZmZZGZm8tNPP1W73lDYdnTAomULitRqbiZfVzqOELVSXFTEzeupgHTBEkIIIYxZH98HMTNXkXw5Wh4KEE2C17AhAMSei6C4qEjhNEIYpqijJ7kaGoa5pSVj57ysdBwhhB5IAZYeufbrDUB8hIwfFMbJpoM9NvbtKSkuJumydD8QxifvdhYlxdoCWKu2tgqnEUIIIYyDdXs7rO3aUVJcTMrVGKXjiAa2atUqli9fTv/+/YmIiCAoKAh7e/tK144cOZJvvvmGUaNGMXToUBISEjh48CBOTk56Tl075eMH0+MTdD8LCmFMMnVjCA37/zUhhBBCVK18/GD4Ael+JZqGAU88BsD5Q0cUTiKEYfsxQDt60GfCWDp291A4jRCisUkBlh6VF2DFRVxQOIkQddOprPtV6rU4NAWFCqcRovZKS0vJKeuCJWMIhRBCiJpxLhs/mB6fID8DNkHbtm1j69atREZG4u/vT15eHjNmzKh07ZQpU9i4cSMRERFcvnyZl156CVNTU3x9ffWcunY6uLsCMn5QGK8biYkA2HWSDlhCCCGEMbJqa4vHIB8Awg8cUjiNEPXn3KM7Hbt1RVNYSHiQ/JmePXt2jTtLq1Qqli5dytWrV8nPz+f48ePVHnvhwoWUlpaybt26CtstLS3ZsGEDN27cIDs7m//+97906NChQa5HNKyEi5Gc2/8TpqamjH/9VaXjCCEamRRg6UmL1lY4dHUHIF4KsISRcunVA9D+sCCEscrJvAlA63bSAUsIIYSoCd34wSjpgNqUmJubA3D48GHdttLSUg4dOsTQoUNrdIxWrVphbm5OZmZmlWssLCywtrau8NI3KcASxu6PDlhSgCWEEEIYo76jR2GmUpFwMZKMxCSl4whRbwMe13a/unj4KPlZ2QqnUdakSZMICAiocWfplStX8sorrzB37lx69uzJl19+CUDfvn3vWjtgwABeeeUVIiIi7vraunXrmDBhAs888wwPPvggTk5OfPfddw17caLB7P/HPynSaPAaPoRuQ6ou0BNCGD8pwNKTzn16YWpqyo2ERN3NfyGMjUtZB6zES5cVTiJE3eVmSgcsIYQQDaM2Tzi+9NJLBAcHk5mZSWZmJj/99FO16w1JeQFW0uVohZOIhmRnZwdAenp6he2pqak4OjrW6Bhr1qwhOTmZQ4eqfuJ50aJFZGVl6V5JSfq/4eTQxQ2AtNg4vZ9biIaQUV6AJR2whBBCCKPk/ehoQMYPiqbBTKXCZ9wYAE5/v1fhNMpbsGABmzdvrnFn6alTp7Jq1Sr2799PbGwsX3zxBQBz586tsM7KyoodO3bg5+fHzZsV7yvb2Ngwc+ZMFixYwOHDhzl79izTp09n2LBhDB48uHEuVNRLRmISJ77VFsiNf/1VTExMFE4khGgsUoClJ25l4wel+5UwZp2kA5ZoAnLKOjS0btdO4SRCCCGMWW2fcBw5ciTffPMNo0aNYujQoSQkJHDw4EGcnJz0nLz2dB2wLl9VOIkwJAsXLuTZZ59l4sSJFBZWPZpy9erV2NjY6F7OzvovIJEOWMLYZSSUjSB0Mfy/M4QQQghRkY19e7r4eAMQESQFWML49Xjgfqza2pKVfoMrJ08rHUdR5ubm+Pj4VHgo6V6dpS0tLSkoKLhr+5AhQyq8DwwMZO/evfz8893fN3x8fLCwsKhw3suXLxMfH1/leQ2hO3Vzd2jTVgpycnHp6Yn3ow8rHUcI0UikAEtP3Lz7AFKAJYxXGwd7rO3aUVxUJDffhFHL1o0glA5YQggh6q62TzhOmTKFjRs3EhERweXLl3nppZcwNTXF19e3ynMYwodj5i0ssXftBMgIwqYmIyMD4K6iQQcHB1JSUqrd94033uCdd97hkUce4fz589WuVavVZGdnV3jpU0sbG6zttIX3abG/6/XcQjSU8g5YNvbtMW9hqXAaIYQQQtRG34dHYWpqSlz4eW5er/7nbCGMwcAntOMHw/YcoKS4WOE0ymrfvj0qlYrU1NQK26vrLB0UFMSCBQvw8PDAxMSEUaNGAVRYP3nyZPr378+iRYsqPYajoyOFhYXcvn27xuc1hO7UzV3uzVv88uV2AB6d+wpm5uYKJxJCNAYpwNIDExMTOvfpBUBcePUfTgthqFx6egGQGhNLUTVPuAth6MrHwLZua6twEiGEEMaqLk84/lmrVq0wNzcns6wzY2UM4cMxR4+umJqZkZ2RSXZG1VmF8dFoNIC2O1s5ExMTfH19OXnyZJX7vfXWWyxdupSxY8cSFhbW2DHrrYN7ZwBupaSizs9XOI0QdZOflU1eVhYAdi4yhlAIIYQwJt5jy8cPVj22WwhjYdXWlh4jhgFw+od9CqcxTvPmzSM6OpqoqCjUajUff/wxACUlJQC4uLiwfv16XnjhhWq7TdeWIXSnFhC8/f+4nZqOnYsTw559Suk4QohGIAVYetChixstbawpzMvjenSM0nGEqJPy8YOJly4rnESI+sm9eQuQDlhCCCHqri5POP7ZmjVrSE5OrlDE9WeG8OGYs1fZ+EHpftVkvfjii0ybNg0vLy82btyIlZUVW7ZsAWDbtm2sWrVKt/btt9/mgw8+YMaMGcTFxeHg4ICDgwNWVlZKxb+n8vGDqdfilA0iRD1lJGiLcGUMoRBCCGE8bB064H5fX0pKSog4+IvScYSot/6PPYKZuYrfL1wiNSZW6TiKu3HjBkVFRTg4OFTYXl1n6Rs3bjBx4kSsrKxwdXXFx8cHgLi4OEA7XtDBwYGzZ8+i0WjQaDSMHDmS1157DY1Gg6mpKSkpKVhaWtKmTZsan1fp7tRCS1NQSNBnmwEY/fJfaWHdWuFEQoiGplI6QHPg1q83AAkXIpt9O05hvFx6egKQcDFS4SRC1E+OjCAUQgihsIULF/Lss88ycuTIap9mVKvVqNVqPSa7m5NnWQGWjKBuspYsWcKKFStwdHQkPDycsWPHkpaWBkDnzp11T+ECzJo1C0tLS3bt2lXhGMuWLWP58uV6zV1TDu5uAKTFxiuaQ4j6ykhMplOvHrSTDlhCCCGE0eg3RjtyPvZsBFnpNxROI0T9DXhcO37wzA/7FU5iGDQaDWFhYfj6+vL9998Df3SW3rBhQ7X7FhYWkpycTNu22vsUe/fuBeDnn3+md+/eFdZu2bKFqKgo1qxZQ0lJCWFhYajVanx9ffnuu+8A6N69O66urtV2tBaG4fT3+3hg2nM4dnXn8TfmEvHTYb1nSI+LJzPput7PK0RzIAVYeuDarw8AcREXFE4iRN2VjyBMvBSlcBIh6icno6wAy04KsIQQQtRNXZ5wLPfGG2/wzjvvMHr0aM6fN/zx5OUFWEmXoxVOIhrLpk2bWLt2baVfGzVqVIX37u7u+ojUoMo7YEkBljB25R2w2neSAiwhhBDCWMj4QdGUdOzeFZeenhRpNJzbd1DpOAYjICCAbdu2cebMGUJDQ5k/f/5dnaWTkpJYvHgxAIMGDcLZ2Znw8HCcnZ354IMPAFi/fj0AOTk5XLx4scI5cnNzycjI0G3Pysriiy++ICAggMzMTLKysvj00085ceIEISEh+rp0UUclxcXsXfcZMzf8ncFPPc7gpx7Xe4aC3Fw+HPMkebez9H5uIZo6KcDSA9eyDljxUoAljJStQwes7dpRrCki+YqM0RTGLbusA5ZVW1uFkwghhDBWdX3C8a233uLdd99lzJgxhIWF6StunZmYmODk6QHICEJhvKQAy/DNnj2bt956C0dHRyIiIpg7dy6nT5+udK1KpWLRokW8+OKLODs7c/ny5Uq7r93rmJaWlqxdu5Znn30WS0tLgoKCmD17tq77myHKSNQWYLWTEYRCCCGEUWjn4kTnPj0pKS7mt0P6724iREMr73516ddjUrRxh507d2Jvb1/jztItWrRg5cqVdOnShZycHH766ScAbt++Xavzvv7665SUlLBr164Kv9MI43DpyDGObP8/uvh46/3c9p070aK1FR6DfPhNge5bQjR1UoDVyFraWOPYVfuUcPxvUoAljJNLrx4ApMRco6iaMTlCGIPcm9oCrBZWVpi3sERTIH+mhRBC1F5tn3B8++23WbFiBc8//zxxcXG67lk5OTnk5uYqdh3VaefijGWrVmgKC0mPT1A6jhC1ZmZuritWkQIswzRp0iQCAgLw9/cnJCSE+fPnExQUhKenJ+np6XetX7lyJVOmTMHPz4+oqCjGjBnDjh07an3MdevWMW7cOJ555hlu377Nhg0b+O677xg+fLherrsuMhOTAWjfyUXhJEIIIYSoCe+y8YNXT5/VdeQXwliZqszwGT8W0I5PExUFBgYSGBhY6df+3Fk6ODiYXr166d5bW1vz3HPPVXv8Px8DtCMM58yZw5w5c+qQWBiCH/62XpHzPrFwPg9MmSwFWEI0ElOlAzR1nfto/xJNj08g9+YthdMIUTcuvTwBSLwo4weF8SvIyaVIrRv5eKkAACAASURBVAagdVsZQyiEEKJudu7cyZtvvsmKFSsIDw/H29v7riccO3bsqFs/a9YsLC0t2bVrFykpKbrXm2++qdQl3JOzl3b84PXoGEqKixVOI0Ttte/kjJlKRX52DlnpN5SOIyqxYMECNm/ezNatW4mMjMTf35+8vDxmzJhR6fqpU6eyatUq9u/fT2xsLJ9//jkHDx6s1TFtbGyYOXMmCxYs4PDhw5w9e5bp06czbNgwBg8eXGVWCwsLrK2tK7z06UZCIgDtnDtiYmKi13MLIYQQova8x8j4QdF0eN4/BGu7dmRnZBJ1/KTScYQQ9XA1VNuVv9vgAQonEaJpkgKsRubm3QeQ8YPCuHXqqe2AlXBJCrBE05BTNoawdTspwBJCCFF3gYGBuLm50aJFC4YMGUJoaKjua6NGjWL69Om69+7u7piYmNz1qmx0lqFwKi/AunxV4SRC1E2HLm6AdL8yVObm5vj4+HDo0B83JUtLSzl06BBDhw6tdB9LS0sKCgoqbLvzfU2O6ePjg4WFRYU1ly9fJj4+vsrzAixatIisrCzdKykpqXYXXE+3U9Mp1hShsrDApkN7vZ5bCCGEELVj79YZ5x7dKdYUcf7Qr0rHEaLeBj6hHT94dm8QJUXygJYQxizmzDlKiovp4O6KTQd7peMI0eRIAVYjc+vXG4C4iPMKJxGi7lx6Sgcs0bRklxVgWbWzVTiJEEIIYbicumsLsJIuRyucRIi66eDuCkgBlqFq3749KpWK1NTUCttTU1NxdHSsdJ+goCAWLFiAh4cHJiYmjB49mgkTJtTqmI6OjhQWFnL79u0anxdg9erV2NjY6F7Ozs61ut76Kiku5ub1FADsZAyhEEIIYdC8x2q7X10JOU3e7SyF0whRP63a2NBr1AgATn+/V+E0Qoj6KsjOITHyMgAeg/ornEaIpkcKsBqRiampbgRhXLgUYAnj1LajI63btaVYU8T16Bil44g6mD17NrGxseTn53Pq1CkGDhxY7fp58+YRFRVFXl4ev//+OwEBAVhaWuq+bmpqyooVK7h27Rp5eXlcvXqVJUuWNPZlNKjcTO1IWGvpgCWEEEJUqXwEYXLUFYWTCFE3UoDV9MybN4/o6GiioqJQq9Vs2LCBHTt26OXcarWa7OzsCi99yygbQ2jn4qT3cwshhBCi5rzH+AIQIeMHRRNw36MPozI3JynyCtevyD0iIZoC3RjCQTKGUIiGJgVYjcihqzstWltRkJtLytVrSscRok7Ku19dj46hSK1WOI2orUmTJhEQEMDy5cvp378/ERERBAUFYW9feVvR5557jo8++ojly5fTo0cPZs6cyeTJk1m1apVuzcKFC5k1axZz5syhR48eLFy4kLfffpu5c+fq67LqTUYQCiGEENVr1cYGW0cHAJKvyAhCYZykAMuw3bhxg6KiIhwcHCpsd3BwICUlpcp9Jk6ciJWVFa6urnh5eZGTk1OrY6akpGBpaUmbNm1qfF5DkZGYDIBdJ/123xJCCCFEzTl6dMHRowtFajXnfwlWOo4Q9TagbPygdL8Soum4GqItwPIY7KNwEiGaHinAakTl4wcTzkdSWlKicBoh6salVw8AEi/J+EFjtGDBAjZv3szWrVuJjIzE39+fvLw8ZsyYUen6+++/n+PHj/PNN98QHx/PTz/9xDfffMOgQYMqrPn+++/Zt28f8fHx7Nq1i4MHD1ZYY+jKC7Cs2koBlhBCCFEZJ09t96sbCYkU5uYpnEaIuvmjACtO2SCiUhqNhrCwMHx9fXXbTExM8PX15eTJk9XuW1hYSHJyMiqViieeeKJWxwwLC0OtVldY0717d1xdXe95XqXpCrBcpABLCCGEMFTl4wcvHw+hIDvnHquFMGwOXd3p3LsnxZoizu47qHQcIUQDiT0XQbGmiHZOHWknHZaFaFBSgNWIXMsKsOJ+k/GDwnh1KuuAlSAFWEbH3NwcHx8fDh36o9V1aWkphw4dYujQoZXuc+LECXx8fHRjCt3d3XnsscfYt29fhTW+vr5066a9Mdu3b1+GDx/O/v37q8xiYWGBtbV1hZeScm5KBywhhBCiOuUFWMmXpfuVME5tHOxpYWVFsaaIG2Vj24ThCQgIwM/Pj2nTpuHl5cXGjRuxsrJiy5YtAGzbtq1CN95BgwYxceJE3N3dGT58OAcOHMDExKRWx8zKyuKLL74gICCAkSNH0r9/f7Zs2cKJEycICQnR38XXgW4EobN8QC6EEEIYqvLxg+FBMn5QGL+Bj2u7X0UePU7uzVsKpxFCNBR1fgHxv10AoNsg6YIlRENSKR2gKXPr1weA+PALCicRou50HbAuSgGWsWnfvj0qlYrU1NQK21NTU/Hy8qp0n2+++Yb27dtz7NgxTExMMDc3Z+PGjaxevVq35qOPPsLGxoaoqCiKi4sxMzPj3Xff5euvv64yy6JFi1i2bFmDXFdD0I0gtJMCLCGEEKIyfxRgRSucRIi66eDuBkBGYhIlRcWKZhFV27lzJ/b29qxYsQJHR0fCw8MZO3YsaWlpAHTu3JmSOzqKt2jRgpUrV9KlSxdycnLYt28fs2bN4sqVKzU+JsDrr79OSUkJu3btwtLSkqCgIGbPnq2/C68jGUEohBBCGDZnr+7Yu3VGU1DIxcPHlI4jRL2YmpnRf/wYAE5/X/XD10II43Q1NIwuPt54DB5AyHd7lI4jRJMhBViNpKWNjW7cQXkFqRDGpq2TI1a2bSjSaLgeHaN0HKEHDz74IIsXL2b27NmEhITg4eHB+vXrWbJkCStXrgRg0qRJvPDCCzz//PNcvHgRb29vPvnkE5KTk/n3v/9d6XFXr15NQECA7r21tTVJSUl6uabK5GRIBywhhBCiOs5eUoAljJuMHzQegYGBBAYGVvq1UaNGVXgfHBxMr169KmyrrLtudccE7QjDOXPmMGfOnDokVk5GovZ3qNbt2mJp1UpGxAohhBAGxnustvtV5NETFObJ39PCuHUfOpA2HezJvXmLyODjSscRQjSw6NAwHpk1Ew/pgCVEg5ICrEbi2k/7gWBabDx5t7MUTiNE3XQq6351PTqGYo1G4TSitm7cuEFRUREODg4Vtjs4OJCSklLpPh988AHbt2/niy++AODChQtYWVmxadMmPvzwQ0pLS/n73//ORx99xLfffqtb4+rqyqJFi6oswFKr1ajV6ga8uvrRdcBqa6twEiGEEMLwmKlUdOjiBkBylBRgCeP0RwFWvMJJhGg4hbl55GTepHW7trRzduL6FRkTK4QQQhiSfmNGA3DugIwfFMZvQNn4wbP7DlJcVKRwGiFEQ4uPuICmoBCb9nY4dHEj9Vqc0pGEaBJMlQ7QVLl5l40flO5Xwoi59NSOqZPxg8ZJo9EQFhaGr6+vbpuJiQm+vr6cPHmy0n1atWpVYcQHQHFxsW7f6taYmhrPXyk5N6UDlhBCCFEVh67uqMzNycvK4ub1you2hTB05QVYqdekAEs0LeVjCNvLGEIhhBDCoHTq3RM7FycK8/KkW5Awei1trOn90AMAnP5+r8JphBCNoVijIfZcBAAegwconEaIpsN47pYbGbe+2gKsuAgpwBLGq1OvsgKsS1KAZawCAgLw8/Nj2rRpeHl5sfH/2bvzuKjq9Q/gn2EbZRxcAFkVJRS33BCV6pd60cKs1DJLM03MQtKLomaapSIX81aYW1hISpaUadclM5KbLYqikOCGKArIvssi+3B+fyBznQRlWObMDJ/36/W8Xs2Z7zDPOTx5ZjjP+X6DgiCTybBr1y4AwOeff64y/siRI1iwYAFefvll9OrVC+PHj8f69etx5MgRZdPVkSNH8N577+GZZ56Bg4MDpkyZAl9fX/znP//R+P41153C2wAAY6kUUpmpyNkQERFpF1vn+uUHObMK6S6r3r0AcAlC0j/1yxCa27MBi4iIWs7b2xtJSUkoLy/HmTNn4Orq2ujYN954A3/88QcKCgpQUFCA48ePP3B8e1O//OCV306iuqJS5GyIWmbI0+4wlkqRef0G0uOviZ0OEbWR61ExAMBlCIlaEZcgbAMSAwP0eLRu6bbk2IsiZ0PUfPUzYKVejhc5E2quffv2wdLSEn5+frC2tkZsbCw8PDyQk5MDALC3t1cZ7+/vD0EQ4O/vDzs7O+Tm5iobruotWrQI69evx2effYbu3bsjIyMDn3/+Ofz8/DS6by1RVV6ByrIySE1N0albN1TeKRM7JSIiIq1h2+9uAxaXHyQdJZWZorOVJQAgJ/mWyNkQtS5lAxZnwCIiohaaPn06AgMD4eXlhaioKCxevBjh4eFwdnZGbm7ufePHjh2LsLAwREZGoqKiAitWrMAvv/yCgQMHIiMjQ4Q90B4SiQRDn65rwIoN/6/I2RC1nOvkuuUHzx3k7FdE+izxbDQAwMl1OCQGBhD+tvoNEamPDVhtwNrJER1kMlSU3kH2jSSx0yFqlm72tjDtbIaaqipkXb8pdjrUAtu3b8f27dsbfG7SpEkoLi5WPlYoFPDz83tgM1VpaSmWLFmCJUuWtHqumlRaUHi3AasL8lPTxE6HiIhIa9jVz4B1jQ1YpJu696pbfrA4Nw8VJaUiZ0PUugpS6y5wm9vbipwJERHpOl9fXwQHB2P37t0AAC8vL0yaNAmenp7YuHHjfeNnzZql8viNN97Aiy++CHd3d+zZs0cTKWutXkMfRRdrK5SXlOLqyTNip0PUIpa9eqLXkEehqKnBX0fDxU6HiNpQ2pUEVJTegWlnM9g6O3HGO6JWIOoShPo6vW2vIXXLD966eJmdoqSz6me/yriWCEVNjcjZELW+0oK6ZQg7desqciZERETaRbkEIWfAIh3VvXddA1ZOUorImRC1vry7M2B14xKERETUAsbGxnBxcUFERIRymyAIiIiIgJubW5N+hqmpKYyNjVFQUNDg8yYmJpDL5Sqhr4Z6jAcAXD7xJ2qqqkTOhqhlRjxfN/tVwqkolOQ3/P83EemHWoUCN6LPAwD6jBwhcjZE+kG0Bqz66W3XrVuH4cOHIy4uDuHh4bC0tGxwfP30tuPGjYObmxtSU1Pxyy+/wNZW++74cxgyCACQHHdJ5EyImq/HwLoGrLQrCSJnQtQ2SgsKAbABi4iI6F5drK1g2tkMiuoaZHE2X9JR9Q1Y2TeTxU2EqA0UpN5twLK1gYGhocjZEBGRrrKwsICRkRGys7NVtmdnZ8Pa2rpJP2Pjxo3IyMhQaeK618qVK1FcXKyM9PT0FuetjSQGBhg8YRwAIPbnho8Fka6QGBhgxHMeAIBzh38SORsi0oTEszEAAKdRLiJnQqQfRGvAund62/j4eHh5eaGsrAyenp4Njp81axaCgoIQFxeHhIQEvPHGGzAwMIC7u3uD48W8u6LX3QaslLiLGntPotZWPwNW2pWrImdC1DbYgEVERHS/+tmvspOSoaiuFjkboubp7tgLAGfAIv1UlJOLmqoqGBobobNVwzcxEhERtbUVK1bglVdewdSpU1FZWdngmA0bNsDMzEwZdnb6OXujo8tQmFlaoKyoGNdOnxU7HaIW6TPKBV2srVBWVIwrv50UOx0i0oDrUdEA6s5nBka8yYeopURpwNLE9LZi3V0h69IZlr16AgBSLlzWyHuSuObPn6+XS2naD3AGAKRdZgMW6SdlA1ZXNmARERHVs+3H5QdJ93EJQtJngiCgID0TAGDOZQiJiKiZ8vLyUFNTAysrK5XtVlZWyMrKeuBrly5dinfffRdPPfUULl5s/Cb0qqoqlJSUqIQ+ql9+8OJ/f4eipkbkbNonfb1GI4b65QfPHzvO5TSJ2oms6zdwp/A2pKam6DlwgNjpEOk8URqwNDG9rVh3VzgMeRRA3VIH5cX6+YWCVAUEBOjdUprm9nYwNTNDTVUVshJvip0OUZsoLbzbgGXOBiwiIqJ6tn2dAAAZCWzAIt1kYGQIi572ANiARforP63uJkPzHmzAIiKi5qmurkZMTIzKCiMSiQTu7u44ffp0o69bvnw53n//fXh4eCAmJkYTqWo1A0NDDB4/FgCXHxSTPl6jEYNUZopH3ccCAM4d4vKDRO2FIAhIPPcXAC5DSNQaRFuCsCWaMr2tWHdXOCiXH7ykkfcj8YWGhrbZUppi6TGwbvnBjIRE3rVDeotLEBIREd3Prl9fAGzAIt3Vzc4WRsbGqCwrR1F2jtjpELWJ/NS7DVicAYuIiFogMDAQ8+fPx+zZs9GvXz8EBQVBJpNh165dAOr+7h0QEKAc/84772D9+vXw9PREcnIyrKysYGVlBZlMJtYuiM5ppAs6deuK0oJCJJ5lQ5pY9PEajRiGPOUOk44dkHUjCamXroidjk7x9vZu8ixsRkZGeP/995GYmIjy8nKcOnXqvjFeXl6Ii4tDUVERioqKEBkZCQ8PD5UxJ06cgCAIKhEUFNTq+0btQ/0yhE4j2YBF1FKiNGBpYnpbsfS624CVHKd9uVHrMjY2BlD3Iadeay+lCQAmJiaQy+Uq0dbsB9Q1YKVd4fKDpL9K89mARUREdC+pzFQ5cxAbsNoPdZbrGDBgAPbv34+kpCQIggAfHx8NZto0VvXLDyanQBAEkbMhahv5aRkAOAMWERG1zL59+7Bs2TL4+fkhNjYWQ4cOhYeHB3Jy6prYe/bsCRsbG+X4BQsWQCqV4sCBA8jKylLGsmXLxNoF0dUvP3gh4jfUKhQiZ9P+6PM1GjG4Tq5bfjD6MGe/Usf06dMRGBjY5FnY/P398dZbb2HRokUYMGAAvvzySwDA4MGDlWPS0tLw7rvvwsXFBSNGjMCvv/6KQ4cOYcAA1eXhvvjiC1hbWyvjnXfeabsdJb1W30Tca+ijMJJKRc6GSLeJ0oClr9PbGhgaosegupNfciwbsPSdubk5ACA3N1dle2supQkAK1euRHFxsTLS09Obn3QT2d+dASv1MhuwSH8pZ8Dq2kXkTIiIiLSDTZ+65QdvZ+fgzu0ikbMhTVFnuQ5TU1PcvHkT7777LjIzMzWcadN0d+wFAMjl8oOkx5RLENpzqRwiImqZ7du3o1evXujQoQNGjx6Ns2fPKp8bN24c5s6dq3zcu3dvSCSS+2LdunVipC46QyMjPDp+DAAuPygWfb5Go2nmPezh6DIUtQoFYn4MFzsdneLr64vg4OAmz8L22muvISAgAMeOHUNSUhJCQkIAAIsWLVKO+fHHH3Hs2DEkJibi+vXrWL16NUpLSzF69GiVn1VWVobs7GxlaGo1KNI/ucm3UJSdC2OpVDnZDBE1j2hLEOrj9LY2fR6B1LQjyotLkHMzWex0SMs1ZSlNANiwYQPMzMyUYWfXtne4SiQS2Pd3BsAZsEi/lRbeBgDIunaBRCIRORsiItJF6kwxrwszB9n16wMAyLjK2a/aE3WW64iOjsY777yD77777oHfYe6l6bvFu9+dASubDVikx7gEIRERkfj6uo2EqZkZinPzcDMmVux0qBm09RqNGEY8PxEAcO30ORTn5D5kNNUzNjaGi4uLSgPfw2Zhk0qlqKiouG/735ur6hkYGODll1+GTCa7bxKTV199Fbm5ubh48SICAgLQsWPHRnNtLzO5UfNdP3t3GcJRXIaQqCVEa8DSx+ltHe52hN66eJlLHbQD+fn5AHDf3eGtvZRmVVUVSkpKVKItmfewQ0czOaorK5F142abvheRmO7cnQHL0MgIHc34ZYOIiNSj7hTzujBzkI1z3QxYXH6wfWiN5TqaQtN3i9c3YOWwAYv0WEF63RKEpp3N+F2GiIhIBAZGhnB7aQoA4MLxExBqa0XOqH3S12s0miaRSDDiuboGrHOHjoqcjW6xsLCAkZERsrOzVbY/aBa28PBw+Pr6wsnJCRKJBOPGjQOA+8YPGjQIJSUlqKysxI4dOzB16lTEx8crn9+7dy9mzZqFcePGYcOGDXjttdfw9ddfN5pre5jJjVqmfhnCPiNHiJwJkW4TrQEL0L/pbesbsJLjLomcCWlCdXU1AGDs2LHKbfqwlKb9gLrlBzMSElFbw3XrSX8pampQVlwMAOjUravI2RARka5Rd4p5XZg5yM65LwAgnQ1Y7UJrLNfRFJq+W5wNWNQeVJVXoDiv7oIjlyEkIiLSLCvHXvjn18EYOO7/AADRR34WOaP2S1+v0Wia44hh6GZng/LiElw68afY6eg9Hx8fXL9+HVevXkVVVRU+/vhjAEDt3xo5ExISMHToUIwaNQpBQUEIDQ1F//79lc8HBwfjl19+waVLl7B3717Mnj0bL7zwAhwdHRt83/Ywkxu1TGJU3b+HPQb1h9TUVORsiHSXqA1Y+qbXkEcBAClswGpX5syZo1dLafYYWPcBjssPUntQml83CxYbsIiISB3NmWK+OTR5d6KBoSFs+jwCgDNgUevS5N3incy7wtTMDLUKBfJSUtvsfYi0gXIZwh72ImdCRETUPkgkEjw5+xUs2bcbPQb2R1lRMfYsW43US1fETq3d07drNJrmOnkSACA2/L+oaeINY1QnLy8PNTU1sLKyUtn+oFnY8vLyMHXqVMhkMjg4OMDFpW65t+TkZJVx1dXVuHHjBv766y+sWrUKcXFx8PHxaTSXqKgoAICTk1ODz+v7TG7UcoWZWchLTYOhkRF6uwwROx0incUGrFbSqVtXWPSs+6NXysXLImdDmrR69Wq9WkrTfoAzACDtMhuwSP/dKbwNgA1YRESknuZMMd8cmrw70aKnPYw7SFFZVqa8qE/6rSXLdWgrq969AAAF6ZmoqaoSNReitpafdrcBizNgERERtbmuttbwCtmGyct9YCyVIv7kaXw09VXEhv9X7NQI+neNRpNMOnbE4AljAQDRh34SNxkdVF1djZiYGLi7uyu3NWUWNgCorKxERkYGjIyMAABHjz54+UcDAwNIpdJGnx86dCgAIDMzs6npE92nfhYsLkNI1HxGYiegL+qXH8xKvImKklKRsyFN+uKLL/DJJ580+Fz92s31evfurYmUmk0ikSiXIEy9Ev+Q0US6r6SAM2AREZH2qqqqQpWGmkjs+tUtP5h57QaEv017T/rp3uU6vv32WwD/+0Pxtm3bxEyt2br37gWAyw/qGm9vbyxfvhzW1taIi4vDokWLcO7cuUbH+/j4YMGCBejZsyfy8vJw+PBhleeTkpLQq1ev+163fft2LFy4EABw4sQJlaVqAGDHjh1YsGBBi/dHU+qbZbuxAYuIiKhNjZz6HCav8EEHmQyVZWU4/PFWnPn+oNhp0T306RqNJnWzt8WUdxZDamqK3ORbSI67KHZKOikwMBChoaGIjo7G2bNnsXjx4vtmYUtPT8eqVasAACNHjoSdnR1iY2NhZ2eH9evXAwA2b96s/JkBAQE4duwYbt26BblcjpkzZ2Ls2LF4+umnAQCOjo6YOXMmfvrpJ+Tn52Pw4MHYtGkTfv/9d1y8yN8jNV/i2RiMnjYZTiNdxE6FSGexAauV9LrbgMXlB0mXmfe0R4dOMlRXVCL7RrLY6RC1uVI2YBERUTM0Z4p5bWfrXDdFPZcfbH/mzJmDyMjIJv2h2NjYGAMGDAAAmJiYwM7ODkOGDEFpaSlu3Lgh2j7U697bAQAbsHTJ9OnTERgYCC8vL0RFRWHx4sUIDw+Hs7MzcnNz7xs/Y8YMfPjhh/D09ERkZCT69u2L0NBQlTGurq4wNDRUPh40aBAiIiLw/fffq4z74osv8MEHHygfl5WVtfLeta38tAwAgIU9lyAkIiJqC3Lzbnhp7UoMHPsEAOBmTCy+Xe2vnIWSSFdJTU0x/s05ePK1V2BkYoJahQLhQSFip6Wz9u3bB0tLS/j5+cHa2hqxsbH3zcJWe8+Nbh06dIC/vz8cHR1RWlqK48ePAwCKioqUY7p3746vvvoKNjY2KCoqwoULF/D0008jIiICQN0Ne+PHj1d+h09NTcWBAwfg7++vwT0nfZR4tm4GLNt+fWDa2QxlRcUiZ0Ske9iA1UochjwKAEhmAxbpsB4D+wMA0hOuoVahEDkborbHBiwiImqOe6eYP3ToEADdnznI1rluBqx0NmC1O/XLdTTlD8W2traIjY1VPl6+fDmWL1+O33777b47y8XwvwasZHEToSbz9fVFcHAwdu/eDQDw8vLCpEmT4OnpiY0bN943/rHHHsOpU6cQFhYGAEhJScH+/fuxaNEi5Zi8vDyV17z77rtITEzE77//rrK9rKzsvqVkdUlBGmfAIiIiaiuDJ4zDtPffgaxrF9RUVeHY1i/w+1dhnC2YdJrEwACuzz+DiT5eMLMwBwBcO30Wh/69GVmJN0XOTrdt374d27dvb/C5v39X/uOPPzBw4EDlY7lcjhkzZqiMeeONNx74fmlpaffN6EvUGkryC5CVeBPWTo54ZMQwXPzv7w9/ERGpYANWKzAwMlQ2rqRwik7SYfYDnAEAaVcSRM6ESDPuFLIBi4iImkfdKea1feYgzoDVfqmzXEdKSgokEokm0moWzoClW4yNjeHi4oINGzYotwmCgIiICLi5uTX4msjISMyaNQuurq44d+4cevfujaeeeuqB7zFr1iwEBgbe99yrr76KWbNmISsrC0eOHMH69etRXl7e6M8yMTGBVCpVPpbL5U3ZzTaTd3cJwq42VjAwMkRtDW+iIiIiaqmOZnK8sGophk+qW+YrPf4a9r7nh6zr4n9nI2qJ3sOHYMqKJcprQLkpqTj80RZc+f2kyJkRkbZJPBsDaydHOI0awQYsomZgA1YrsO3rBJOOHVBWXMw/9JJOq28kTLscL3ImRJpRms8GLCIiah51p5jX5pmD5ObdYGZpgdraWl5YIJ1l0rEDutnZAACybyaLmww1iYWFBYyMjO6bhSo7Oxv9+vVr8DVhYWGwsLDAyZMnIZFIYGxsjJ07d8LZ2bnB8VOmTEGXLl2UM2zV27t3L1JSUpCRkYHBgwdj48aNcHZ2xosvvthovitXrsTatWvV2se2VJKXj+qKShh3kKKrOSdB+gAAIABJREFUjQ3yU9PETomIiEin9XUbiZfXv4cuVt1Rq1Dgvzu/wvEdX0JRUyN2akTN1tXWGs/6LsTQp90BAOUlpTi+40uc3Ps9a5uIGnQ9KgZPzHwJTiNdxE6FSCexAasV1C8/mHLhMgRBEDkbouaRSCSw61+39EwqZ8CidqKESxASEVELqDPFvDbPHGTr3AcAkJeSiqryCpGzIWoeS4eeAOqWmC4rKhY5G2orY8aMwapVq+Dt7Y2oqCg4OTlhy5YtjY6fN28ejh07hszMTJXtwcHByv++dOkSMjMz8euvv8LR0RE3bza8/MqGDRtUZtKSy+VIT09v4R61TH5aOqydHGFub8sGLCIiomYy6dgBz/ouxOOv1DVi5ybfwt73/HDrwmWRMyNqPpOOHeH+xmyMmTMDxlIpahUKnDlwGOHbg1F692/iREQNuRF9HrW1tbB+pDfkFuYoycsXOyUincIGrFbQa8ggAEBK3CWRMyFqPstePdFBJkNVeQVyeMc4tRP1XzY7de0iciZERETi4fKDpA+4/KDuycvLQ01NDaysrFS2W1lZISsrq8HXrF+/Hnv27EFISAiAuuYpCwsLBAcH39fk2rNnT4wfPx4vvPDCQ3OJiooCADg5OTXagFVVVYWqqqqH/ixNyk+924DVww44LXY2REREuqf38CF42e89WDr0AAD8+c0+HP30M1RXVIqcGVHzSCQSjHh+Ip7xWQAzSwsAwPWoaBz696fIvMYZr4no4cqLi5F+9Rp6DOgHp5EuOP/TL2KnRKRT2IDVChyUDVgXRc6EqPnq1/7OSLiOWoVC5GyINONO4W0AgKxrFxgYGrL2iYioXbLtVzcLavpVNmCR7mIDlu6prq5GTEwM3N3dcejQIQB1F4zc3d2xbdu2Bl9jamqqsrwrACjufob/ewPW3LlzkZOTg6NHjz40l6FDhwLAfTNlabv8tAwAgLm9nciZEBER6ZYu1lZ4dok3hj3zFADgdlY2vl3tj+tR0SJnRtR8vYYOxuQVPug5aAAAIC81DUc+3opLv/4hcmZEpGsSo2LQY0A/9GEDFpHa2IDVQnLzbjC3t0NtbS1SOCUt6TD7Af0AAKmX40XOhEhz7twuQm1tLQwMDCDr0hkl+QVip0RERKRxtn3vzoB1jQ1YpLvYgKWbAgMDERoaiujoaJw9exaLFy+GTCbDrl27AAChoaFIT0/HqlWrAABHjhyBr68vzp8/r1yCcPXq1QCg0pglkUgwd+5chIaGKhu06jk6OmLmzJn46aefkJ+fj8GDB2PTpk34/fffcfGibt1Yl59Wt+ygub2tyJkQERHpBuMOUoybOwvj5s6CSccOqK2tRdQPh/Fj4HZUlJSKnR5Rs3S1tcYknwXKhsKK0juI+GIX/vh6HxTV1SJnR0S6KPFsNMbNfRVOo1zEToVI57ABq4UchjwKAMi+kYTKO2UiZ0PUfPYD6xqw0q4kiJwJkeYItbW4U3gbcvNu6GTelQ1YRETU7hhJpcrGlQzOgEU6rLtjLwBAdlKyqHmQevbt2wdLS0v4+fnB2toasbGx8PDwQE5ODoC6ZQTvbazy9/eHIAjw9/eHnZ0dcnNzER4eDkdHR5WfO378eDg4OODLL7+87z2rqqowfvx4ZbNXamoqDhw4AH9//7bd2TaQn3p3BqwenAGLiIjoYYZNnIBnfd9GF+u65Y9vRJ/HoY2fIv3qNZEzI2oe085mcJ8/B0/MmAYjExPU1tbi7A9HcGzb5yjNLxQ7PSLSYUl/XYCiugbm9nboZmeDgnTdmi2aSExswGqhXneXH0zm8oOkwyQGBrC7u/QMZ8Ci9qa0oLCuAatrV7FTISIi0jjrR3rDwNAQpQWFKM7NEzsdomYxMjGBpUMPAJwBSxdt374d27dvb/C5cePGqTxWKBTw8/ODn5+fcptcLsf8+fNVxh0/fvy+JQnrpaWlYezYsS1LWkvkp6UD4BKERERED2I/oB+mvLsEvYcNBgAUpGfiyCdbceH4CZEzI2oeI6kU/zdzGtzfmIOOZnIAwPUz0TjyyVY2FBJRq6gsK8OtS1fQe9hgOLm64Gz6j2KnRKQz2IDVQg53G7BS4i6JnAlR81k69EAHmQyVZeW8YEHtzp3C2wCATt3YgEVERO2P8+OjAAAZCZz9inTXy+vfg7FUiuK8fBRmZImdDpHG1N+F3KGTDLIunXHndpHIGREREWkPuYU5nvHxwsgpzwIAKsvK8WvIV/gtNAw1lZUiZ0ekPomBAUY85wGPhW8qZ3LLSLiOHzd9hoRTZ0TOjoj0TeLZmLoGrFEuOHuQDVhETcUGrBaw6GmPHgP7A2ADFum2+uUHM65eg3DP8g5E7UFpQd10zGzAIiKi9qb/k4/D4+26WWMu/vd3kbMhap6nvDwx/JmnoKiuwTcr1vD7DLUrNVVVuJ2dgy5W3WHew44NWERERKibHfXJ116G+/w56CCTAQCiDx/D0c1BKM7JFTk7oubp98RoTFryNmz7OgEACjOz8PO2YMT8+DO/AxFRm7geFY0Jb82F00gXsVMh0ikGYiegqzpbWeKt4C0w7iDFrYtXkJt8S+yUiJrN+bG6mQ9Sr1wVORNqC97e3khKSkJ5eTnOnDkDV1fXB4738fHB1atXUVZWhlu3biEwMBBSqVRljK2tLfbs2YO8vDyUlZXhwoULcHHRzQ9hbMAiIqL2qMfA/njto/UwMDRE1A9HEPndD2KnRKS2YRMn4Om7TYQH/P+NxLMxImdEpHlchpCIiOh/Bv1jDJYf/AaTFnujg0yGlLhL2PzqGwh7z4/NV6ST7Ac4wyt4K+YHbYJtXyeUF5fgyCfb8OFzryD68E9sviKiNpMSdwnVlZXo3N0S3Xs7iJ0Okc7gDFjNIOvaBW99sQXdbG2Qm3wLIYuWQRAEsdMiahaPhW9ixHMTAQBX/zwtcjbU2qZPn47AwEB4eXkhKioKixcvRnh4OJydnZGbe/8fHWbMmIEPP/wQnp6eiIyMRN++fbF7924IgoClS5cCALp06YJTp07hxIkTmDhxInJzc9GnTx8UFhZqevdaRcndBixZty4iZ0JERKQZ5vZ2mLf9Y0hNOyL+5GnsX79R7JSI1NZz8EC8vP49AMBvu/ci6ocjImdEJI781HQ84jIM5j3YgEVERO2XTd9HMPmdxegzagQAoCg7F0c//Qx/HQ3ntRvSSd3sbDDxn14Y/sxTAOpmPj25dz8igkNRXlwscnZE1B7UVFUh+fxF9Bk9Ak4jXZCTlCJ2SkQ6gQ1YapLKTDE/KBBWjr1wOysbn7/pg9J83Ww6IJq46C2Mf/N1AMChjzYjITJK3ISo1fn6+iI4OBi7d+8GAHh5eWHSpEnw9PTExo33X2x97LHHcOrUKYSFhQEAUlJSEBYWhlGjRinHrFixAqmpqfD09FRuS05ObtP9aEt3Cm4DAOScAYuIiNoBWZfOmB8UCLl5N6ReuYqvfN9DbY1C7LSI1NLVxhqeW/4NY6kUl078gR83bRc7JSLR5KdlAOAMWERE1D4ZGBriGZ8FGDP7FRgYGqK6shK/he7Frzv3oKq8XOz0iNRm2tkM49+ai8dfeRFGxsYAgOgjx/Dzti9QmJElcnZE1N5cPxutbMDi7PlETcMGLDUYSaWYt+1j9BjYH6UFhfj8TR8UZvIDD+mmZ3wWwP2N2QCAgxs/xZ9ffydyRtTajI2N4eLigg0bNii3CYKAiIgIuLm5NfiayMhIzJo1C66urjh37hx69+6NZ555Bnv27FGOef755xEeHo59+/ZhzJgxSE9Px2effYadO3c2mouJiYnKMoZyubwV9rB1lBYUAAA6desmciZERERty7iDFJ7bPoJlr54oSM9EiPdSXpQgnSOVmWLe9o8hN++G9KvX8M2KtVx2g9q1/NS6JQi72duKnAkREZFmSU1NMesjPwx48nEAQGz4f/Fj4DY2qZBOMjQ2xpjZr+Afnq+ho1nd384TIqNwdNNnSL96TeTsiKi9SjwbAwBwGukCiUTCWSWJmoANWE1kYGSIOZ/8C4+MGIbyklJ84bWYU+2Rzpq0xBv/8HwNAPCfDYE4ufd7kTOitmBhYQEjIyNkZ2erbM/Ozka/fv0afE1YWBgsLCxw8uRJSCQSGBsbIygoSKWJy9HREQsWLEBgYCACAgLg6uqKLVu2oKqqCl999VWDP3flypVYu3Ztq+1bayq9uwRhJ86ARUREekxiYIBXP1yHXkMeRVlRMYIXLEFJfoHYaRGpRWJggFn/9oNNn0dQnJuHLxcuZxMhtXv5aXUNWBZcgpCIiNqRLtZWmLf9Y9j2dUJVeQXC3vPDheMnxE6LqFm62dti9sf+6DGwPwAg/eo1/Bi4HddOnxU5MyJq71Ivx6Pizh3IunSGTV8nZCRcFzslIq1nIHYCukBiYIAZ//oAA8Y8juqKSny5aDnS49lxTrrpWd+FyuarHwI+YfMVqRgzZgxWrVoFb29vDB8+HFOnTsWkSZOwevVq5RgDAwP89ddfeO+99xAbG4vg4GAEBwfDy8ur0Z+7YcMGmJmZKcPOTnsuDpTcbcCSde0iciZERERtZ8q7S/Co+xhUV9Z9n+HNJKSLnlu2CAOerP9e/g5uZ+eInRKR6AruLkFo1t0SRiYmImdDRETU9noMGgCfsBDY9nVCcW4ePpvrzeYr0lmPuo+B73e70WNgf9y5XYS9K9dh0/TX2XxFRFqhtkaBm9GxAACnUS4iZ0OkG9iA1QQvrFqK4c88BUV1DXb7rsTNmFixUyJqlueWLcK4ua8CAH7418c4FbZf5IyoLeXl5aGmpgZWVlYq262srJCV1fBU3OvXr8eePXsQEhKCS5cu4eDBg1i1ahVWrlwJiUQCAMjMzMSVK1dUXhcfH4+ePXs2mktVVRVKSkpUQlvcKbwNAOgo78QLFkREpJfGvv4qnpgxDbW1tdi7ch2Szl8QOyUitbm9NBVjXnsFALD3PT+kXo4XOSMi7VBaUIiKO3dgYGCArrbWYqdDRETUpgZPGIe3d30GMwtzZCRcx+aZb/BzIekkQ2NjTF6xGK9/+iE6msmRHHsRgdNmI+bHn7nEFxFpletnowEAfUaOEDkTIt3ABqyHmPhPLzz28gt1FytWrcPVP0+LnRJRszz/jg/GzpkJANjv92+c+vaAyBlRW6uurkZMTAzc3d2V2yQSCdzd3XH6dMP/lpmamqK2tlZlm0KhUL4WAE6dOgVnZ2eVMX379kVKim7OpFFeXAJFdQ0AoBNnwSIiIj0zbOIEPLd0IQDg8EdbeGc46aQ+o10xdZUvAOCnLTtw4ZdfRc6ISLvUz4JlzmUIiYhIj/1j3mzMCQyAcQcprvx+Cttme+F2VrbYaRGprZudDRaG7sCTs14GAJz48mtsn7uAM/wSkVZKjIoBADiOGAoDI0ORsyHSfkZiJ6DNxr7+KsbPnwMAOLD+34j9OULkjIiaZ/KKxcoP89+v+xBn9h8SOSPSlMDAQISGhiI6Ohpnz57F4sWLIZPJsGvXLgDA559/rjL+yJEj8PX1xfnz5xEVFQUnJyesX78eR44cUTZmbdq0CZGRkVi5ciX27duHkSNH4s0338Sbb76p8f1rLaUFhehsZYlO5l35RZeIiPTGIyOG4RX/umWEf/8qDH9+/Z3IGRGpr3tvB8z55F8wNDJC9JFj+G9wqNgpEWmd/LQM2Dr3gbk9G7CIiEj/GBoZ4aW178J18iQAwB97vsPhj7dA+NtNpES6YNA/nsTL69+DqZkZyoqKsXeVH+L/OCV2WkREjcq8log7t4sg69IZ9gP64daFy2KnRKTVOANWI0a9+LzyTvEfN21nwwrprKmrliqbr/atCWAttzP79u3DsmXL4Ofnh9jYWAwdOhQeHh7IyalrMrK3t1cZ7+/vj08++QT+/v64cuUKQkJCEB4ejrfeeks5Jjo6GlOnTsWMGTNw6dIlvP/++1i8eDH27t2r0X1rTaUFhQAAWdeuImdCRETUOqwe6Y25mzfCyMQEcb/8iiMfbxU7JSK1ybp0xrxtH6OjmRxJf8Vh35oNYqdEpJXyU9MBcAYsIiLSP6adzfBW8Ba4Tp4ERU0NDvh/hEP//pTNV6RzDI2M8Pzyf2Lu5o0wNTNDctxFfDJtNpuv9IS3tzeSkpJQXl6OM2fOwNXVtdGxRkZGeP/995GYmIjy8nKcOnV/DXh5eSEuLg5FRUUoKipCZGQkPDw8VMZIpVJs27YNeXl5KCkpwf79+9G9e/dW3zciQRCQeLZuFiwuQ0j0cGzAasCQp90x7YMVAIBfQ77CiS+/FjkjIvVJJBK88N4yPDFjGmpra/Hd+/9C1A9HxE6LRLB9+3b06tULHTp0wOjRo3H27Fnlc5MmTVIZq1Ao4Ofnhz59+sDU1BQODg5YuHAhioqKVMYdPXoUgwcPRseOHTFgwADs3LlTI/vSVkoL6xqwOnVjAxYREek+s+6WmB8UiI5mctyMicXelesgCILYaRGpxdDYGHM+3QCLnvbIT0vHrsXvQlFdLXZaRFopP+1uA5a9rciZEBERtR4Lhx745zc78ciIYagovYOQhcsR+d0PYqdFpLauNtZ4e3cQxsyeAQD4bfdefPa6N5fQ1BPTp09HYGAg1q1bh+HDhyMuLg7h4eGwtLRscLy/vz/eeustLFq0CAMGDMCXX34JABg8eLByTFpaGt599124uLhgxIgR+PXXX3Ho0CEMGDBAOWbTpk147rnn8NJLL2HMmDGwtbXFDz/w30hqG/UNWE6jXETOhEj7sQHrb5wfH42ZG9bAwMAAkfv+g6OfBomdEpHa6puvHn/lRdTW1mLfmgCcPfij2GkRaa36GbDkbMAiIiIdJ5WZYv5nn6CrjTWybybjy3+uQE1VldhpEantpTUr8IjLMJSXlCJk4XLcKbwtdkpEWis/LQMAuAQhERHpjUdGDIPPNzth6dADBemZ2Pram0g4dUbstIjUNnDsE/DdHwqHIYNQVlyMLxctx5FPtkJRUyN2atRKfH19ERwcjN27dyM+Ph5eXl4oKyuDp6dng+Nfe+01BAQE4NixY0hKSkJISAgAYNGiRcoxP/74I44dO4bExERcv34dq1evRmlpKUaPHg0AMDMzw7x58+Dr64sTJ07gr7/+wty5c/H4449j1KhRbb/T1O7UN2D1HjoYRiYmImdDpN3YgHWP3sMG4/VNG2BkbIzzx47jh399LHZKRGqTSCR48f138NjLLyhnvjp38KjYaRFptfoGLM6ARURE6lBninkAmDZtGuLj41FeXo4LFy5g4sSJrZqPoZERXt+0AbbOfVCcm4fgBUtQXlzcqu9B+mf+/PlaVccA8I95r8F18iTUKhTYs2w1sm8ktfp7EOmT/NQ0AEA3O86ARUREus91yiS89cUWmHauW6Zt86vzkJV4U+y0iNRiYGSI55YugufWj2BqZoaUC5cR+NIcXP7tpNipUSsyNjaGi4sLIiIilNsEQUBERATc3NwafI1UKkVFRcV92+ubq/7OwMAAL7/8MmQyGU6fPg0AcHFxgYmJicr7JiQkICUlpdH3NTExgVwuVwmipspJSkFRTi6MO0jhMHig2OkQaTU2YN1l168v5m3/BCYdO+DKH6cQtsqP64iTzpFIJJj2wQq4vTQFtbW1+Pa99Yg+/JPYaRFpvdKCuhkVZN26iJwJERHpCnWnmHdzc0NYWBhCQkIwbNgwHDx4EAcPHsTAga33R4vp61ahr9tIVJaVYefbS1GYkdVqP5v0V0BAgFbV8aPuYzBpsTcA4OCHm5AQGdVqP5tIXxVmZKFWoYDUtCPk5t3EToeIiKhZJBIJJi1egFfWr4ahsRHOHzuOoHmLUJpfKHZqRGrpYm2Ft3cHYezrMwEAv+/5FtvnePE7uh6ysLCAkZERsrNVl5PMzs6GtbV1g68JDw+Hr68vnJycIJFIMG7cOAC4b/ygQYNQUlKCyspK7NixA1OnTkV8fLxybGVlJYqKipr8vitXrkRxcbEy0tPTm7XP1H79bxnCESJnQqTdjMROQBtY9uqJ+Ts2oaO8E27EnMdXS9/j9J+kcyQSCV5auxKjXngOtQoFwlavx18/houdFpFOqJ8Bq7OlBTp0komcDT1MRekdsVMgIlKZYh4AvLy8MGnSJHh6emLjxo33jffx8cHPP/+Mjz+um2X3gw8+wIQJE7Bw4UIsWLCgxfl4LHoTI56fCEVNDUJ930N6/LUW/0xqH0JDQ7Wmju0HOGPmhrUAgJN7v8epbw+0+GcStQeKmhrczspBNzsb2PR1QvXFy2KnRA9QU1XN5YGJiP7GuIMUMwPWYPCEukaEX3Z8iV8+2wlBEETOjEg9/Z98HDMDPoBpZzOUF5fg2/f9cenXP8ROi7SIj48PgoODcfXqVQiCgKSkuhmfa/82KUhCQgKGDh2Kzp07Y9q0aQgNDcWYMWOUTVjq2rBhAwIDA5WP5XI5m7BILYlRMXB51gN9RrogfHuw2OkQaa1234DVxdoKb32xGXLzbki9chVfLlyO6opKsdMiUotEIsF0v1UYOeVZ1CoU2LvKD+d/+kXstIh0Rn0DlvPjo/Gv0xEPGU1iKi8pxerHJoidBhG1c/VTzG/YsEG57WFTzLu5uan8oQuou+txypQpjb6PiYkJpFKp8nFj08OPfmkKJrw5FwCwf91GJJw60+R9ofbL2NgYAHDixAnlNjHr2Ky7JTy3fASTjh0Qf/I0Dv17c5P3hYiA/LR0dLOzwVtf8P8dbfdryFc4+mmQ2GkQEWkNWZfOeCMoED0HDUBNVRX2rdmAmB9/FjstIrU97f0GnlowDwBw69IV7Fm2GgXpmSJnRW0pLy8PNTU1sLKyUtluZWWFrKyGZzzLy8vD1KlTIZVKYW5ujpKSEhQXFyM5OVllXHV1NW7cuAEA+Ouvv+Dq6gofHx94eXkhKysLUqkUnTt3VpkF60HvW1VVhSreBEAtcP1sNACg56MDYdKxI6rKy0XOiEg7tfslCA2MDKGoqUFOUgqCvZZwVg3SSYIgoLqiEoqaGnzz7lo2XxGpKeXCJRRl54qdBhER6YjmTDFvbW2t1nig6dPDGxkboba2FuGf7cTZgz+quTfUXpmbmwMAcnNVPwOJVccdO8mgqKlB5vUb+Hr5+6hVKNTZHaJ278LxE5zNnYiIdFJF6R1UV1TiTuFt7HhjEZuvSGcVpGcAAP74+jtsm+3F5qt2oLq6GjExMXB3d1duk0gkcHd3x+nTpx/42srKSmRkZMDIqG6ulKNHjz5wvIGBgfLmppiYGFRVVam8b9++feHg4PDQ9yVqrsKMLOSnpaOqvBzde/cUOx0irdXuZ8AqSMvA9jkLYGBggDuFt8VOh6jZ/hPwCc4dPIrUy82bfpSoPbtTeBvrJ0yGgaGh2KkQEREpNXV6+JN79yMl7jI/B5JWamodZ99MxuZX58HYRMobo9oZb29vLF++HNbW1oiLi8OiRYtw7ty5Rsf7+PhgwYIF6NmzJ/Ly8nD48GGV59esWYO1a9eqbLt69Sr69++vfCyVSvHJJ5/glVdegVQqRXh4OLy9vZGTk9Oq+6ZJkd/9gDP7D0EikYidCj0El9MiIlKlqKnB7sXvoqNcjvw0LodFuuvcoZ+QlZjE7+btTGBgIEJDQxEdHY2zZ89i8eLFkMlk2LVrFwAgNDQU6enpWLVqFQBg5MiRsLOzQ2xsLOzs7LB+/XoAwObN/5vJNiAgAMeOHcOtW7cgl8sxc+ZMjB07Fk8//TQAoLi4GCEhIQgMDERBQQGKi4uxdetWREZGIioqSsNHgNqTIM+FKMrJ5U1zRA/Q7huwAKA4N0/sFIhaTBAEfrAnagFBEHjHOBERNUlzppjPyspSazyg3vTw/BxI6srPzwcAWFpaqmwXs45L8wubNI70x/Tp0xEYGAgvLy9ERUVh8eLFCA8Ph7Oz832zswHAjBkz8OGHH8LT0xORkZHo27cvQkND7xt36dIljB8/Xvm45m+f8zdt2oRJkybhpZdeQlFREbZt24YffvgBTzzxROvvpAbxj+BERKSryoqKUVZULHYaRC3G7+btz759+2BpaQk/Pz9YW1sjNjYWHh4eyps7evbsidraWuX4Dh06wN/fH46OjigtLcXx48cBQGUpwe7du+Orr76CjY0NioqKcOHCBTz99NOIiIhQjlmyZAlqa2tx4MABlZtKiNpSYWbjf/8hov8R2kPI5XJBEARBLpeLngtDP0KsmmItM1ozWMcMfQnWFIPB0HScOXNG2LJli/KxRCIRUlNThRUrVjQ4/ttvvxUOHz6ssu3UqVNCUFBQk9+T/9YxWjPq62nHjh3KbaxjhqbjzJkzwtatW5WPJRKJkJaW1mgNbt26VYiIiFDZtmXLFpWaWrNmjXD+/PlG39PMzEyorKwUXnzxReU2Z2dnQRAEYdSoUY2+zsTERJDL5cqwtbVlLTNaLfhvI4PBaA/Bf+sYrR382zZDH4J1zNCXYE0xGHVhACJqkfnz5yMpKQnl5eU4c+YMXF1dHzh+2rRpiI+PR3l5OS5cuICJEydqKFMiIiIiai2BgYGYP38+Zs+ejX79+iEoKOi+KeYDAgKU4zdv3gwPDw/4+vrC2dkZa9aswYgRI7Bt2zaxdoEIADBnzhzWMYnC2NgYLi4uKndxC4KAiIgIuLm5NfiayMhIuLi4KL939+7dG0899dR94/r06YP09HTcuHEDX3/9NXr06KF8zsXFBSYmJirvm5CQgJSUlEbfFwBWrlyJ4uJiZTS0lCYRERERaR6v0RAREZE2Ea37y9vbW0hKShLKy8uFM2fOCK6urg8cP23aNCE+Pl4oLy8XLly4IEycOLHJ78WuS0ZrR31NVVRUCK+//rrQv39/4fPPPxcKCgoES0vLBl/j5uYmVFdXC8uWLRP69esn+Pn5CZWVlcLAgQPVfl/WMqM1gndXMPQlWFMMBkOMePvtt4Xk5GShoqJCOHPmjDBy5Ejvcm/0AAAPn0lEQVTlcydOnBB27dqlMn7atGnC1atXhYqKCuHixYtqfZ8B+G8do3Wjvp6WLl3KOmaIEjY2NoIgCMLo0aNVtm/cuFE4c+ZMo69btGiRUFlZKVRVVQmCIAjBwcEqNeXh4SFMmzZNePTRR4WnnnpKOHXqlJCcnCx06tRJACDMmDFDqKiouO/nRkVFCR9++GGj78sZsBhtGfy3kcFgtIfgv3WM1g5eo2HoQ/AaDUNfgjXFYChDnDeePn26Rj8U8X96RmtHfU19/vnnym0PWy7h22+/FY4cOaKy7fTp01yygyFa8MM9Q1+CNcVgMNpD8N86RmsGPwcyxI7mNGCNGTNGyMzMFObNmycMGjRImDJlinDr1q0H1lTnzp2F27dvC56engLQ/AasvwdrmdGawXpiMBhiBW+SZ+hy8BoNQx+C380Z+hKsKQajLkRbgtDX1xfBwcHYvXs34uPj4eXlhbKyMnh6ejY43sfHBz///DM+/vhjXL16FR988AH++usvLFy4UMOZE9UxNjYGAJw4cUK57WHLJbi5uakscwAA4eHhD1zmwMTEBHK5XCWIiIiIiIiIdFleXh5qampgZWWlst3KygpZWVkNvmb9+vXYs2cPQkJCcOnSJRw8eBB+fn4AAIlE0uBrioqKcO3aNTg5OQEAsrKyIJVK0blz5ya/LxERkT6aPn06AgMDsW7dOgwfPhxxcXEIDw+HpaVlg+Pd3NwQFhaGkJAQDBs2DAcPHsTBgwcxcOBADWdOVIfXaIiIiEjbiNKAZWxsDBcXF5UPOa39oYgfiKitmZubAwByc3NVtmdnZ8Pa2rrB11hbWyM7O7vJ4wFg5cqVKC4uVkZ6enoLMyciIiIiIiISV3V1NWJiYuDu7q7cJpFI4O7ujtOnTzf4GlNTU9TW1qpsUygUytc2RCaT4ZFHHkFmZiYAICYmBlVVVSrv27dvXzg4ODT6vkRERPqorW+S5zUaamu8RkNERETaxkiMN7WwsICRkVGDH3L69evX4GvU/VC0cuVKrF279r7t/JBPraVTp04aeZ8NGzYgMDBQ+VgulyM9PZ21TK1C7DoS+/1Jf7CWiKg94b951BrEriOx35+0Q1BQEHbs2IHLly8jOjoa3t7ekMlk+P777yGXy/H5558jIyMD69atAwD88ssvePvtt3H16lVER0fD0dER77//PgAoG7M++ugjHDlyBCkpKbC1tcW6deugUCgQFhYGACguLkZISAgCAwNRUFCA4uJibN26FZGRkYiKilJ7H1jL1BpYR0SkafU3yW/YsEG5rSk3yd/7d2qg7ib5KVOmNDie12iorfEaDekDsetI7Pcn/cFaIqojSgOWJvz9A5GNjQ0SEhLYmU6trmfPniqPH7RsQVZWllrLKwBAVVUVqqqqlI/rT2CsZWpNcrkcJSUlGn0/gHVMrU/TtUxEpEk8f1Jb4OdA0gY7duxQeXzjxg2Vx0uXLlV5vGvXrvt+Rn0t29vbIywsDObm5sjNzcXJkycxevRo5OXlKccuWbIEtbW1OHDgAKRSKcLDw+Ht7a1Wzqxlagv8PkNEmqKJm+R5jYY0hddoSB/wuznpC36nofZOlAasvLw81NTUqPUhR90PRX//QFRSUgI7Ozv+D4//defzeDzcw47Vb7/9hmHDhin/+Fu/XMK2bdsa/HmnT5+Gu7s7Nm/erNw2YcIEtZY5yMjI4O8OrGN1Peh4yeVyZGRkaDQf1vH/sJab7mHHSoxaJiLSJJ4//4fnz6bj50DtxTpuOnU+B86YMeOhP6+yshILFy5sdMmkpmAt12EdNx2/zxBRe8NrNI3j+bPpeI1Gu7GWm47fzbUX67jp+J2GqGkEMeLMmTPCli1blI8lEomQmpoqrFixosHx3377rXD48GGVbadOnRKCgoJEyV+XQy6XC4IgCHK5XPRctD0edqymT58ulJeXC7Nnzxb69esn7NixQygoKBC6d+8uABBCQ0OFgIAA5Xg3NzehqqpK8PX1FZydnYU1a9YIlZWVwsCBA0XfV10L1jGPl74Efzc8VgwGg8FQP3hO4LHSh+DvhsdKH4K/Gx4rBoOhm2FsbCxUV1cLkydPVtm+e/du4eDBgw2+JiUlRfDx8VHZtnbtWiE2Nlb0/dG14Dmh9Y4Vr9Fo9++HwWOlC8HfDY8Vg9GaYQCRBAYGYv78+Zg9ezb69euHoKAgyGQyZZd6aGgoAgIClOM3b94MDw8P+Pr6wtnZGWvWrMGIESMa7WIn0oR9+/Zh2bJl8PPzQ2xsLIYOHQoPDw/k5OQAqJv61sbGRjn+9OnTmDlzJt58803ExcVh2rRpmDJlCi5fvizWLhARERERERERERFRO1JdXY2YmBi4u7srt9XPHNTYTED1MwfdS92Zg4haG6/REBERkbYRrfvr7bffFpKTk4WKigrhzJkzwsiRI5XPnThxQti1a5fK+GnTpglXr14VKioqhIsXLwoTJ04UvYNNF4PdqTxW+hD83fB46Uvwd8NjxWAwGAz1g+cEHit9CP5ueKz0Ifi74bFiMBi6G5w5SLzgOYHHSl+Cvx8eK30I/m54rBiM1gxDAGshknPnzuHTTz+Fv78/du7cifT0dOVzoaGhOHTokMr4K1euYNu2bfD390dQUBASExM1nbLeUCgU+O2336BQKMRORevxWGkv/m7Uw+Olvfi7aToeKyIiqsdzQtPxWGkv/m6ajsdKe/F303Q8VkSkTS5fvozbt29j9erVWLZsGQDg1VdfxbVr1wAAPj4+UCgUyus0aWlpiI+Px/Lly7Fy5UpYW1tj3rx5iIyMFG0fdBnPCU3HY6Xd+PtpOh4r7cXfTdPxWBE9mAR1nVhERERERERERERERERERERERESkJgOxEyAiIiIiIiIiIiIiIiIiIiIiItJVbMAiIiIiIiIiIiIiIiIiIiIiIiJqJjZgERERERERERERERERERERERERNRMbsIiIiIiIiIiIiIiIiIiIiIiIiJqJDVhERERERERERERERERERERERETNxAYsPbVmzRoIgqAS8fHxyuelUim2bduGvLw8lJSUYP/+/ejevbuIGWvO//3f/+Hw4cNIT0+HIAiYPHnyfWPWrVuHjIwMlJWV4fjx43ByclJ5vmvXrvj6669RVFSEwsJC7Ny5EzKZTFO70K6wlhvHWtYdrOPGsY6JiKgxPH82judP3cE6bhzrWLewlhvHWiYiosbw/Nk4nj91B+u4caxj3cE6bhzrmKh1sQFLj126dAnW1tbKeOKJJ5TPbdq0Cc899xxeeukljBkzBra2tvjhhx9EzFZzZDIZ4uLi8Pbbbzf4/DvvvIN//vOf8PLywqhRo3Dnzh2Eh4dDKpUqx3zzzTcYOHAgJkyYgGeffRZPPvkkvvjiC03tQrvDWm4Ya1m3sI4bxjomIqIH4fmzYTx/6hbWccNYx7qHtdww1jIRET0Iz58N4/lTt7COG8Y61i2s44axjolan8DQv1izZo1w/vz5Bp8zMzMTKisrhRdffFG5zdnZWRAEQRg1apTouWsyBEEQJk+erLItIyNDWLp0qcrxKi8vF15++WUBgNCvXz9BEATBxcVFOebpp58WFAqFYGNjI/o+6VuwlpsWrGXtDtZx04J1zGAwGIx7g+fPpgXPn9odrOOmBetY+4O13LRgLTMYDAbj3uD5s2nB86d2B+u4acE61u5gHTctWMcMRsuDM2DpsT59+iA9PR03btzA119/jR49egAAXFxcYGJigoiICOXYhIQEpKSkwM3NTax0tULv3r1hY2OjcmyKi4sRFRWlPDZubm4oLCxETEyMckxERARqa2sxatQojefcHrCW1cda1j6sY/WxjomIiOdP9fH8qX1Yx+pjHWsn1rL6WMtERMTzp/p4/tQ+rGP1sY61D+tYfaxjIvWxAUtPRUVF4fXXX4eHhwcWLFiA3r17488//0SnTp1gbW2NyspKFBUVqbwmOzsb1tbWImWsHer3Pzs7W2X7vcfG2toaOTk5Ks8rFAoUFBS0++PXFljLzcNa1i6s4+ZhHRMRtW88fzYPz5/ahXXcPKxj7cNabh7WMhFR+8bzZ/Pw/KldWMfNwzrWLqzj5mEdE6nPSOwEqG38/PPPyv++ePEioqKikJKSgunTp6O8vFzEzIjUw1omfcA6JiIiUh/Pn6QPWMekL1jLRERE6uP5k/QB65j0AeuYiDSFM2C1E0VFRbh27RqcnJyQlZUFqVSKzp07q4yxsrJCVlaWSBlqh/r9t7KyUtl+77HJyspC9+7dVZ43NDREt27d2v3x0wTWctOwlrUb67hpWMdERHQvnj+bhudP7cY6bhrWsfZjLTcNa5mIiO7F82fT8Pyp3VjHTcM61m6s46ZhHROpjw1Y7YRMJsMjjzyCzMxMxMTEoKqqCu7u7srn+/btCwcHB5w+fVrELMWXlJSEzMxMlWMjl8sxatQo5bE5ffo0unbtiuHDhyvH/OMf/4CBgQGioqI0nnN7w1puGtaydmMdNw3rmIiI7sXzZ9Pw/KndWMdNwzrWfqzlpmEtExHRvXj+bBqeP7Ub67hpWMfajXXcNKxjouYRGPoXH330kfDkk08KDg4Ogpubm/DLL78IOTk5goWFhQBA+Oyzz4Tk5GRh7NixwvDhw4VTp04Jp06dEj1vTYRMJhOGDBkiDBkyRBAEQVi8eLEwZMgQoUePHgIA4Z133hEKCgqE5557Thg0aJDwn//8R7hx44YglUqVP+Onn34SYmJiBFdXV+Gxxx4TEhIShG+++Ub0fdPHYC03Hqxl3QnWcePBOmYwGAxGY8HzZ+PB86fuBOu48WAd61awlhsP1jKDwWAwGguePxsPnj91J1jHjQfrWHeCddx4sI4ZjFYP0RNgtEGEhYUJ6enpQkVFhZCamiqEhYUJjo6OyuelUqmwbds2IT8/XygtLRUOHDggWFlZiZ63JmLMmDFCQ3bt2qUcs27dOiEzM1MoLy8Xjh8/LvTp00flZ3Tt2lX45ptvhOLiYuH27dtCSEiIIJPJRN83fQzWcuPBWtadYB03HqxjBoPBYDQWPH82Hjx/6k6wjhsP1rFuBWu58WAtMxgMBqOx4Pmz8eD5U3eCddx4sI51J1jHjQfrmMFo3ZDc/Q8iIiIiIiIiIiIiIiIiIiIiIiJSk4HYCRAREREREf1/u3ZMAwAAwDDIv+t56LcEdAAAAAAAAPBKwAIAAAAAAAAAAIgELAAAAAAAAAAAgEjAAgAAAAAAAAAAiAQsAAAAAAAAAACASMACAAAAAAAAAACIBCwAAAAAAAAAAIBIwAIAAAAAAAAAAIgELAAAAAAAAAAAgEjAAgAAAAAAAAAAiAQsAAAAAAAAAACAaMJWaX0HWL9OAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 3000x1000 with 21 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n","\n"]}],"source":["# print(survey_df)\n","\n","plt.style.use('dark_background')\n","\n","title_name_list = [[\"total\", \"short\", \"long\"], [\"rev_total\", \"rev_short\", \"rev_long\"]]\n","survey_dfs_list = [[survey_df, short_survey_df, long_survey_df], [rev_survey_df, rev_short_survey_df, rev_long_survey_df]]\n","# title_name = \n","# survey_df_list = \n","\n","space_ = \" \" * 140\n","\n","for d_idx, (title_name, survey_dfs) in enumerate(zip(title_name_list, survey_dfs_list)):\n","\n","  fig = plt.figure(figsize=(30, 10))\n","\n","  gs = gridspec.GridSpec(nrows=1, # row 몇 개 \n","                          ncols=3, # col 몇 개 \n","                          # height_ratios=[1, 1, 1]\n","                        )\n","\n","  # gs = fig.add_gridspec(1, 3, wspace=0, hspace=0)\n","\n","  # nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","  nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","  # nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","\n","  # if d_idx == 0:\n","  # else:\n","    # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","  for gs_idx, (title, s_df) in enumerate(zip(title_name, survey_dfs)):  \n","\n","\n","    inner_gs = gs[gs_idx].subgridspec(nrows=nrows, # row 몇 개 \n","                          ncols=ncols, # col 몇 개 \n","                          height_ratios=h_r\n","                        )\n","\n","    for col_idx, s_cols in enumerate(s_df.columns):\n","      plt.subplot(inner_gs[col_idx])\n","      plt.plot(s_df[s_cols])\n","      plt.title(s_cols)\n","\n","  # plt.suptitle(\"total\" + \" \" * 140 + \"short\" + \" \" * 140 + \"long\")\n","  plt.suptitle(space_.join(title_name))\n","  plt.show()\n","  print(\"\\n\")"]},{"cell_type":"markdown","metadata":{"id":"Up1TNNxbfKbk"},"source":["#### fucntional res_plot()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YEruNXz_jYo4"},"outputs":[],"source":["# t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","# t_w_s2 = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list in ['s']), 1, 0))\n","# t_w_s == t_w_s2\n","\n","# tc_zone_wl(np_zone_list, np_pr, np_side_list, zone=['l', 's'])\n","res_info(np_pr, tp_ratio_list, dr_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WQ0ISsnIdwH7"},"outputs":[],"source":["def tc_zone_wl(np_zone_list, np_pr, np_side_list, zone=['l', 's']):  \n","\n","  t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list in zone), 1, 0))\n","  c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list in zone), 1, 0))\n","  t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list in zone), 1, 0))\n","  c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list in zone), 1, 0))\n","\n","  return t_w, c_w, t_ls, c_ls\n","\n","\n","def res_info(np_pr, tp_ratio_list, dr_list):\n","\n","  total_pr = np.cumprod(np_pr)\n","\n","  for_sum_pr = np_pr - 1\n","  for_sum_pr[0] = 1\n","  sum_pr = np.cumsum(for_sum_pr)\n","  sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","  wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","  \n","  total_rollmax_pr = np.maximum.accumulate(total_pr)\n","  total_acc_mdd = np.max((total_rollmax_pr - total_pr) / total_rollmax_pr)\n","  total_rollmax_sumpr = np.maximum.accumulate(sum_pr)\n","  total_sum_mdd = np.max((total_rollmax_sumpr - sum_pr) / total_rollmax_sumpr)\n","\n","  np_tp_ratio_list = np.array(tp_ratio_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","  mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","  np_dr_list = np.array(dr_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","  mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","  return total_pr, sum_pr, wr, total_acc_mdd, total_sum_mdd, mean_tr, mean_dr\n","\n","\n","# def res_plot(res_df, pr_list, zone_list, side_list, tp_ratio_list, dr_list, nontp_liqd_list, nontp_pr_list, config, liqd_list):\n","def res_plot():\n","\n","    fontsize = 10\n","    plt.style.use('default')\n","    # mpl.rcParams.update(mpl.rcParamsDefault)\n","\n","    fig = plt.figure(figsize=(14, 10))\n","\n","    gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                            ncols=3, # col 몇 개 \n","                            height_ratios=[10, 10, 1]\n","                          )\n","    # plt.figure(figsize=(16, 12))\n","    # plt.figure(figsize=(12, 8))\n","    # plt.figure(figsize=(10, 6))\n","    plt.suptitle(key)\n","\n","    try:\n","      np_pr = np.array(pr_list)\n","\n","      sr = sharpe_ratio(np_pr)\n","\n","      dpf = (len(res_df) / 1440) / len(np_pr)\n","\n","      np_zone_list = np.array(zone_list)\n","      # np_pr_list = np.array(pr_list)\n","      np_side_list = np.array(side_list)\n","\n","      t_w = np.sum(np.where((np_zone_list == 't') & (np_pr > 1), 1, 0))\n","      c_w = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1), 1, 0))\n","      t_ls = np.sum(np.where((np_zone_list == 't') & (np_pr < 1), 1, 0))\n","      c_ls = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1), 1, 0))\n","\n","      # np_pr = (np.array(pr_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # ----- fake_pr ----- #\n","      # np_pr = np.where(np_pr > 1, 1 + (np_pr - 1) * 3, np_pr)\n","\n","      total_pr = np.cumprod(np_pr)\n","\n","      for_sum_pr = np_pr - 1\n","      for_sum_pr[0] = 1\n","      sum_pr = np.cumsum(for_sum_pr)\n","      sum_pr = np.where(sum_pr < 0, 0, sum_pr)\n","\n","      wr = len(np_pr[np_pr > 1]) / len(np_pr[np_pr != 1])\n","      \n","      total_rollmax_pr = np.maximum.accumulate(total_pr)\n","      total_acc_mdd = np.max((total_rollmax_pr - total_pr) / total_rollmax_pr)\n","      total_rollmax_sumpr = np.maximum.accumulate(sum_pr)\n","      total_sum_mdd = np.max((total_rollmax_sumpr - sum_pr) / total_rollmax_sumpr)\n","\n","      np_tp_ratio_list = np.array(tp_ratio_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_tr = np.mean(np_tp_ratio_list[np.isnan(np_tp_ratio_list) == 0])\n","\n","      np_dr_list = np.array(dr_list) # 초기에 tr 을 정하는거라 mean 사용하는게 맞음\n","      mean_dr = np.mean(np_dr_list[np.isnan(np_dr_list) == 0])\n","\n","      # pr_gap = (np_pr - 1) / config.lvrg_set.leverage + fee\n","      # tp_gap_ = pr_gap[pr_gap > 0]\n","      # # mean_config.tr_set.tp_gap = np.mean(pr_gap[pr_gap > 0])\n","      # mean_ls_gap = np.mean(pr_gap[pr_gap < 0])\n","\n","      # ---- profit fee ratio ---- #\n","      # mean_pgfr = np.mean((tp_gap_ - fee) / abs(tp_gap_ + fee))\n","\n","      plt.subplot(gs[0])\n","      plt.plot(total_pr)\n","      plt.plot(sum_pr, color='gold')\n","      if len(nontp_liqd_list) != 0:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\nnontp_liqd : %.3f\\nontp_liqd_pr : %.3f\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), min(nontp_liqd_list), min(nontp_pr_list), t_w, c_w, t_ls, c_ls) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\n len(td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\" \n","                  % (wr, len(np_pr[np_pr != 1]), dpf, np.min(np_pr), total_pr[-1], sum_pr[-1], sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (total_acc_mdd, total_sum_mdd, config.lvrg_set.leverage, min(liqd_list), mean_tr, mean_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_liqd_list), t_w, c_w, t_ls, c_ls) ,\n","                  position=title_position, fontsize=fontsize)\n","      # plt.show()\n","\n","      survey_df.iloc[survey_i] = wr, sr, len(np_pr[np_pr != 1]), dpf, \\\n","        total_pr[-1], sum_pr[-1], total_acc_mdd, total_sum_mdd, min(liqd_list), np.min(np_pr), mean_tr, mean_dr\n","\n","      print('supblot231 passed')\n","\n","    except Exception as e:\n","      print(\"error in 231 :\", e)\n","\n","\n","    try:\n","      #         short only      #\n","      short_np_pr = np.array(short_list)\n","\n","      short_sr = sharpe_ratio(short_np_pr)\n","\n","      short_dpf = (len(res_df) / 1440) / len(short_np_pr)\n","\n","      short_total_pr = np.cumprod(short_np_pr)\n","      \n","      short_for_sum_pr = short_np_pr - 1\n","      short_for_sum_pr[0] = 1\n","      short_sum_pr = np.cumsum(short_for_sum_pr)\n","      short_sum_pr = np.where(short_sum_pr < 0, 0, short_sum_pr)\n","\n","      short_wr = len(short_np_pr[short_np_pr > 1]) / len(short_np_pr[short_np_pr != 1])\n","      \n","      t_w_s = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      c_w_s = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 's'), 1, 0))\n","      t_ls_s = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","      c_ls_s = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 's'), 1, 0))\n","\n","      short_rollmax_pr = np.maximum.accumulate(short_total_pr)\n","      short_acc_mdd = np.max((short_rollmax_pr - short_total_pr) / short_rollmax_pr)\n","      short_rollmax_sumpr = np.maximum.accumulate(short_sum_pr)\n","      short_sum_mdd = np.max((short_rollmax_sumpr - short_sum_pr) / short_rollmax_sumpr)\n","\n","      np_short_tp_ratio_list = np.array(short_tp_ratio_list)\n","      mean_short_tr = np.mean(np_short_tp_ratio_list[np.isnan(np_short_tp_ratio_list) == 0])\n","      \n","      np_short_dr_list = np.array(short_dr_list)\n","      mean_short_dr = np.mean(np_short_dr_list[np.isnan(np_short_dr_list) == 0])\n","      \n","      # short_pr_gap = (short_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # short_tp_gap = short_pr_gap[short_pr_gap > 0]\n","      # # mean_short_tp_gap = np.mean(short_pr_gap[short_pr_gap > 0])\n","      # # mean_short_ls_gap = np.mean(short_pr_gap[short_pr_gap < 0])\n","\n","      # mean_short_pgfr = np.mean((short_tp_gap - fee) / abs(short_tp_gap + fee))\n","      \n","      # plt.subplot(232)\n","      plt.subplot(gs[1])\n","      plt.plot(short_total_pr)\n","      plt.plot(short_sum_pr, color='gold')\n","      if len(nontp_short_liqd_list) != 0:   \n","\n","        max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","        \n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), min(nontp_short_liqd_list), min(nontp_short_pr_list), max_nontp_short_term, t_w_s, c_w_s, t_ls_s, c_ls_s) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(short_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (short_wr, len(short_np_pr[short_np_pr != 1]), short_dpf, np.min(short_np_pr), short_total_pr[-1], short_sum_pr[-1], short_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (short_acc_mdd, short_sum_mdd, config.lvrg_set.leverage, min(short_liqd_list), mean_short_tr, mean_short_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_short_liqd_list), t_w_s, c_w_s, t_ls_s, c_ls_s),\n","                  position=title_position, fontsize=fontsize)\n","   \n","      short_survey_df.iloc[survey_i] = short_wr, short_sr, len(short_np_pr[short_np_pr != 1]), short_dpf, \\\n","        short_total_pr[-1], short_sum_pr[-1], short_acc_mdd, short_sum_mdd, min(short_liqd_list), np.min(short_np_pr), mean_short_tr, mean_short_dr\n","        \n","      print('supblot232 passed')\n","    \n","    except Exception as e:\n","      print(\"error in 232 :\", e)\n","\n","    try:\n","      #         long only      #\n","      long_np_pr = np.array(long_list)\n","      # long_np_pr = (np.array(long_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      long_sr = sharpe_ratio(long_np_pr)\n","\n","      long_dpf = (len(res_df) / 1440) / len(long_np_pr)\n","\n","      long_total_pr = np.cumprod(long_np_pr)\n","      \n","      long_for_sum_pr = long_np_pr - 1\n","      long_for_sum_pr[0] = 1\n","      long_sum_pr = np.cumsum(long_for_sum_pr)\n","      long_sum_pr = np.where(long_sum_pr < 0, 0, long_sum_pr)\n","\n","      long_wr = len(long_np_pr[long_np_pr > 1]) / len(long_np_pr[long_np_pr != 1])\n","\n","      t_w_l = np.sum(np.where((np_zone_list == 't') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      c_w_l = np.sum(np.where((np_zone_list == 'c') & (np_pr > 1) & (np_side_list == 'l'), 1, 0))\n","      t_ls_l = np.sum(np.where((np_zone_list == 't') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","      c_ls_l = np.sum(np.where((np_zone_list == 'c') & (np_pr < 1) & (np_side_list == 'l'), 1, 0))\n","\n","      long_rollmax_pr = np.maximum.accumulate(long_total_pr)\n","      long_acc_mdd = np.max((long_rollmax_pr - long_total_pr) / long_rollmax_pr)\n","      long_rollmax_sumpr = np.maximum.accumulate(long_sum_pr)\n","      long_sum_mdd = np.max((long_rollmax_sumpr - long_sum_pr) / long_rollmax_sumpr)\n","\n","      np_long_tp_ratio_list = np.array(long_tp_ratio_list)\n","      mean_long_tr = np.mean(np_long_tp_ratio_list[np.isnan(np_long_tp_ratio_list) == 0])\n","      \n","      np_long_dr_list = np.array(long_dr_list)\n","      mean_long_dr = np.mean(np_long_dr_list[np.isnan(np_long_dr_list) == 0])\n","\n","      # long_pr_gap = (long_np_pr - 1) / config.lvrg_set.leverage + fee\n","      # long_tp_gap = long_pr_gap[long_pr_gap > 0]\n","      # # mean_long_tp_gap = np.mean(long_pr_gap[long_pr_gap > 0])\n","      # # mean_long_ls_gap = np.mean(long_pr_gap[long_pr_gap < 0])\n","\n","      # mean_long_pgfr = np.mean((long_tp_gap - fee) / abs(long_tp_gap + fee))\n","\n","      plt.subplot(gs[2])\n","      plt.plot(long_total_pr)\n","      plt.plot(long_sum_pr, color='gold')\n","      if len(nontp_long_liqd_list) != 0:\n","\n","        max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr)  + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n nontp_liqd : %.3f\\n nontp_liqd_pr : %.3f\\n max_nontp_term : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_long_liqd_list), min(nontp_long_liqd_list), min(nontp_long_pr_list), max_nontp_long_term, t_w_l, c_w_l, t_ls_l, c_ls_l) ,\n","                  position=title_position, fontsize=fontsize)\n","      else:\n","        plt.title(\"wr : %.3f\\nlen(long_td) : %s\\n dpf : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n sr : %.3f\"\n","                  % (long_wr, len(long_np_pr[long_np_pr != 1]), long_dpf, np.min(long_np_pr), long_total_pr[-1], long_sum_pr[-1], long_sr) + \\\n","                  \"\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n leverage %s\\n liqd : %.3f\\n mean_tr : %.3f\\n mean_dr : %.3f\"\n","                  % (long_acc_mdd, long_sum_mdd, config.lvrg_set.leverage, min(long_liqd_list), mean_long_tr, mean_long_dr) + \\\n","                  \"\\n nontp_liqd_cnt : %s\\n tw cw tls cls : %s %s %s %s\"\n","                  % (len(nontp_long_liqd_list), t_w_l, c_w_l, t_ls_l, c_ls_l),\n","                  position=title_position, fontsize=fontsize)\n","\n","      long_survey_df.iloc[survey_i] = long_wr, long_sr, len(long_np_pr[long_np_pr != 1]), long_dpf, \\\n","        long_total_pr[-1], long_sum_pr[-1], long_acc_mdd, long_sum_mdd, min(long_liqd_list), np.min(long_np_pr), mean_long_tr, mean_long_dr\n","\n","      print('supblot233 passed')\n","\n","    except Exception as e:\n","      print(\"error in 233 :\", e)\n","\n","\n","    try:\n","      #     reversion adjustment      #\n","      # rev_np_pr = 1 / (np.array(pr_list) + fee) - fee\n","      rev_fee = tp_fee + out_fee - np.array(fee_list)\n","      rev_np_pr = (1 / ((np.array(pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - rev_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_np_pr = (1 / (np.array(pr_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_sr = sharpe_ratio(rev_np_pr)\n","\n","      rev_total_pr = np.cumprod(rev_np_pr)\n","      rev_wr = len(rev_np_pr[rev_np_pr > 1]) / len(rev_np_pr[rev_np_pr != 1])\n","\n","      rev_total_for_sum_pr = rev_np_pr - 1\n","      rev_total_for_sum_pr[0] = 1\n","      rev_total_sum_pr = np.cumsum(rev_total_for_sum_pr)\n","      rev_total_sum_pr = np.where(rev_total_sum_pr < 0, 0, rev_total_sum_pr)\n","\n","      rev_rollmax_pr = np.maximum.accumulate(rev_total_pr)\n","      rev_acc_mdd = np.max((rev_rollmax_pr - rev_total_pr) / rev_rollmax_pr)\n","      rev_rollmax_sumpr = np.maximum.accumulate(rev_total_sum_pr)\n","      rev_sum_mdd = np.max((rev_rollmax_sumpr - rev_total_sum_pr) / rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[3])\n","\n","      plt.plot(rev_total_pr)\n","      plt.plot(rev_total_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[-1], \n","                   rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)), fontsize=fontsize)\n","      \n","      rev_survey_df.iloc[survey_i] = rev_wr, rev_sr, rev_total_pr[-1], rev_total_sum_pr[-1], rev_acc_mdd, rev_sum_mdd, np.min(rev_np_pr)\n","\n","    except Exception as e:\n","      print(\"error in 234 :\", e)\n","\n","    try:\n","      #         short       #\n","      # rev_short_np_pr = 1 / (np.array(short_list) + fee) - fee\n","      rev_short_fee = tp_fee + out_fee - np.array(short_fee_list)\n","      rev_short_np_pr = (1 / ((np.array(short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - rev_short_fee - 1) * config.lvrg_set.leverage + 1\n","      # rev_short_np_pr = (1 / (np.array(short_list) + fee) - fee - 1) * config.lvrg_set.leverage + 1\n","      \n","      rev_short_sr = sharpe_ratio(rev_short_np_pr)\n","          \n","      short_rev_total_pr = np.cumprod(rev_short_np_pr)\n","      rev_short_wr = len(rev_short_np_pr[rev_short_np_pr > 1]) / len(rev_short_np_pr[rev_short_np_pr != 1])\n","\n","      rev_short_for_sum_pr = rev_short_np_pr - 1\n","      rev_short_for_sum_pr[0] = 1\n","      short_rev_sum_pr = np.cumsum(rev_short_for_sum_pr)\n","      short_rev_sum_pr = np.where(short_rev_sum_pr < 0, 0, short_rev_sum_pr)\n","\n","      short_rev_rollmax_pr = np.maximum.accumulate(short_rev_total_pr)\n","      short_rev_acc_mdd = np.max((short_rev_rollmax_pr - short_rev_total_pr) / short_rev_rollmax_pr)\n","      short_rev_rollmax_sumpr = np.maximum.accumulate(short_rev_sum_pr)\n","      short_rev_sum_mdd = np.max((short_rev_rollmax_sumpr - short_rev_sum_pr) / short_rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[4])\n","\n","      plt.plot(short_rev_total_pr)\n","      plt.plot(short_rev_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[-1], \n","                   short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)), fontsize=fontsize)\n","      \n","      rev_short_survey_df.iloc[survey_i] = rev_short_wr, rev_short_sr, short_rev_total_pr[-1], short_rev_sum_pr[-1], short_rev_acc_mdd, short_rev_sum_mdd, np.min(rev_short_np_pr)\n","\n","    except Exception as e:\n","      print(\"error in 235 :\", e)\n","\n","    try:\n","      #         long       #\n","      # rev_long_np_pr = 1 / (np.array(long_list) + fee) - fee\n","      rev_long_fee = tp_fee + out_fee - np.array(long_fee_list)\n","      rev_long_np_pr = (1 / ((np.array(long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - rev_long_fee - 1) * config.lvrg_set.leverage + 1\n","          \n","      rev_long_sr = sharpe_ratio(rev_long_np_pr)\n","\n","      long_rev_total_pr = np.cumprod(rev_long_np_pr)\n","      rev_long_wr = len(rev_long_np_pr[rev_long_np_pr > 1]) / len(rev_long_np_pr[rev_long_np_pr != 1])\n","\n","      rev_long_for_sum_pr = rev_long_np_pr - 1\n","      rev_long_for_sum_pr[0] = 1\n","      long_rev_sum_pr = np.cumsum(rev_long_for_sum_pr)\n","      long_rev_sum_pr = np.where(long_rev_sum_pr < 0, 0, long_rev_sum_pr)\n","\n","      long_rev_rollmax_pr = np.maximum.accumulate(long_rev_total_pr)\n","      long_rev_acc_mdd = np.max((long_rev_rollmax_pr - long_rev_total_pr) / long_rev_rollmax_pr)\n","      long_rev_rollmax_sumpr = np.maximum.accumulate(long_rev_sum_pr)\n","      long_rev_sum_mdd = np.max((long_rev_rollmax_sumpr - long_rev_sum_pr) / long_rev_rollmax_sumpr)\n","\n","      plt.subplot(gs[5])\n","\n","      plt.plot(long_rev_total_pr)\n","      plt.plot(long_rev_sum_pr, color='gold')\n","\n","      plt.title(\"wr : %.3f\\n sr : %.3f\\n acc_pr : %.3f\\n sum_pr : %.3f\\n acc_mdd : -%.3f\\n sum_mdd : -%.3f\\n min_pr : %.3f\" \n","                % (rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[-1], \n","                   long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)), fontsize=fontsize)\n","      \n","      rev_long_survey_df.iloc[survey_i] = rev_long_wr, rev_long_sr, long_rev_total_pr[-1], long_rev_sum_pr[-1], long_rev_acc_mdd, long_rev_sum_mdd, np.min(rev_long_np_pr)\n","      \n","    except Exception as e:\n","      print(\"error in 236 :\", e)\n","\n","    if show_plot:\n","      \n","      frq_dev, s_frq_dev, l_frq_dev = frq_dev_plot(res_df, trade_list, side_list, plot=False)      \n","      plt.subplot(gs[6])\n","      plt.plot(frq_dev)\n","\n","      plt.subplot(gs[7])\n","      plt.plot(s_frq_dev)\n","\n","      plt.subplot(gs[8])\n","      plt.plot(l_frq_dev)\n","\n","      plt.show()\n","    \n","\n","    try:\n","\n","      h_np_pr = np.array(h_pr_list)\n","      # h_rev_np_pr = 1 / (np.array(h_pr_list) + fee) - fee    # define, for plot_check below cell\n","      h_rev_np_pr = (1 / ((np.array(h_pr_list) - 1) / config.lvrg_set.leverage + np.array(fee_list) + 1) - np.array(fee_list) - 1) * config.lvrg_set.leverage + 1\n","\n","      # --------------------- h pr plot --------------------- #\n","      if len(h_np_pr[h_np_pr != 1]) != 0:\n","\n","        plt.figure(figsize=(16, 12))\n","        plt.suptitle(key + \" hedge\")\n","\n","        h_total_pr = np.cumprod(h_np_pr)\n","        h_wr = len(h_np_pr[h_np_pr > 1]) / len(h_np_pr[h_np_pr != 1])\n","\n","        plt.subplot(gs[0])\n","\n","        plt.plot(h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_wr, np.min(h_np_pr), h_total_pr[-1], config.lvrg_set.leverage))\n","        # plt.show()\n","\n","        #         short only      #\n","        h_short_np_pr = np.array(h_short_list)\n","\n","        short_h_total_pr = np.cumprod(h_short_np_pr)\n","        h_short_wr = len(h_short_np_pr[h_short_np_pr > 1]) / len(h_short_np_pr[h_short_np_pr != 1])\n","        \n","        plt.subplot(gs[1])\n","        plt.plot(short_h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_short_wr, np.min(h_short_np_pr), short_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long only      #\n","        h_long_np_pr = np.array(h_long_list)\n","\n","        long_h_total_pr = np.cumprod(h_long_np_pr)\n","        h_long_wr = len(h_long_np_pr[h_long_np_pr > 1]) / len(h_long_np_pr[h_long_np_pr != 1])\n","        \n","        plt.subplot(gs[2])\n","        plt.plot(long_h_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_long_wr, np.min(h_long_np_pr), long_h_total_pr[-1], config.lvrg_set.leverage))\n","\n","\n","        #     reversion adjustment      #\n","            \n","        h_rev_total_pr = np.cumprod(h_rev_np_pr)\n","        h_rev_wr = len(h_rev_np_pr[h_rev_np_pr > 1]) / len(h_rev_np_pr[h_rev_np_pr != 1])\n","\n","        plt.subplot(gs[3])\n","        plt.plot(h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_wr, np.min(h_rev_np_pr), h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         short       #\n","        # h_rev_short_np_pr = 1 / (np.array(h_short_list) + fee) - fee\n","        h_rev_short_np_pr =  (1 / ((np.array(h_short_list) - 1) / config.lvrg_set.leverage + np.array(short_fee_list) + 1) - np.array(short_fee_list) - 1) * config.lvrg_set.leverage + 1\n","           \n","        short_h_rev_total_pr = np.cumprod(h_rev_short_np_pr)\n","        h_rev_short_wr = len(h_rev_short_np_pr[h_rev_short_np_pr > 1]) / len(h_rev_short_np_pr[h_rev_short_np_pr != 1])\n","\n","        plt.subplot(gs[4])\n","        plt.plot(short_h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_short_wr, np.min(h_rev_short_np_pr), short_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","\n","        #         long       #\n","        # h_rev_long_np_pr = 1 / (np.array(h_long_list) + fee) - fee\n","        h_rev_long_np_pr =  (1 / ((np.array(h_long_list) - 1) / config.lvrg_set.leverage + np.array(long_fee_list) + 1) - np.array(long_fee_list) - 1) * config.lvrg_set.leverage + 1\n","            \n","        long_h_rev_total_pr = np.cumprod(h_rev_long_np_pr)\n","        h_rev_long_wr = len(h_rev_long_np_pr[h_rev_long_np_pr > 1]) / len(h_rev_long_np_pr[h_rev_long_np_pr != 1])\n","\n","        plt.subplot(gs[5])\n","        plt.plot(long_h_rev_total_pr)\n","        plt.title(\"wr : %.3f\\n min_pr : %.3f\\n acc_pr : %.3f\\n leverage %s\" % (h_rev_long_wr, np.min(h_rev_long_np_pr), long_h_rev_total_pr[-1], config.lvrg_set.leverage))\n","        \n","        if show_plot:\n","          plt.show()\n","          \n","    except Exception as e:\n","      print('error in h_pr plot :', e)   "]},{"cell_type":"markdown","metadata":{"id":"zQ-roiifspcX"},"source":["#### ep_loc.point & zone legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Js5eL87VspcX"},"outputs":[],"source":["\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","\n","    \n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # ------------------------------------ short ------------------------------------ # \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 0:\n","        #   mr_score += 1          \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_upper_1m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_upper_3m'].iloc[i] <= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_upper_5m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","        # ------------------------------------ long ------------------------------------ # \n","          \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 1:\n","        #   mr_score += 1   \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 1:\n","        #   mr_score += 1     \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 1:\n","          # mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_lower_1m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_lower_3m'].iloc[i] >= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_lower_5m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"]},{"cell_type":"markdown","metadata":{"id":"MteLY9PS2ZeK"},"source":["##### check statistical significance"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":6961,"status":"ok","timestamp":1642590194232,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"NzbWuwSw2jaj","outputId":"732156c4-d74c-4c27-deb6-42ed7fd354c7"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 36 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n","\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 3000x1000 with 21 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n","\n"]}],"source":["# print(survey_df)\n","\n","plt.style.use('dark_background')\n","\n","title_name_list = [[\"total\", \"short\", \"long\"], [\"rev_total\", \"rev_short\", \"rev_long\"]]\n","survey_dfs_list = [[survey_df, short_survey_df, long_survey_df], [rev_survey_df, rev_short_survey_df, rev_long_survey_df]]\n","# title_name = \n","# survey_df_list = \n","\n","space_ = \" \" * 140\n","\n","for d_idx, (title_name, survey_dfs) in enumerate(zip(title_name_list, survey_dfs_list)):\n","\n","  fig = plt.figure(figsize=(30, 10))\n","\n","  gs = gridspec.GridSpec(nrows=1, # row 몇 개 \n","                          ncols=3, # col 몇 개 \n","                          # height_ratios=[1, 1, 1]\n","                        )\n","\n","  # gs = fig.add_gridspec(1, 3, wspace=0, hspace=0)\n","\n","  # nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","  nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","  # nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","\n","  # if d_idx == 0:\n","  # else:\n","    # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","  for gs_idx, (title, s_df) in enumerate(zip(title_name, survey_dfs)):  \n","\n","\n","    inner_gs = gs[gs_idx].subgridspec(nrows=nrows, # row 몇 개 \n","                          ncols=ncols, # col 몇 개 \n","                          height_ratios=h_r\n","                        )\n","\n","    for col_idx, s_cols in enumerate(s_df.columns):\n","      plt.subplot(inner_gs[col_idx])\n","      plt.plot(s_df[s_cols])\n","      plt.title(s_cols)\n","\n","  # plt.suptitle(\"total\" + \" \" * 140 + \"short\" + \" \" * 140 + \"long\")\n","  plt.suptitle(space_.join(title_name))\n","  plt.show()\n","  print(\"\\n\")"]},{"cell_type":"markdown","metadata":{"id":"o-XjNS1L31YB"},"source":["##### ep_loc.point & zone legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"taB2j7kT33iN"},"outputs":[],"source":["\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] - 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","    # res_df['entry_{}'.format(strat_version)] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry_{}'.format(strat_version)] + 1, res_df['entry_{}'.format(strat_version)])\n","\n","\n","    \n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # ------------------------------------ short ------------------------------------ # \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 0:\n","        #   mr_score += 1          \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_upper_1m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_upper_3m'].iloc[i] <= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_upper_5m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","        # ------------------------------------ long ------------------------------------ # \n","          \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 1:\n","        #   mr_score += 1   \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 1:\n","        #   mr_score += 1     \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 1:\n","          # mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_lower_1m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_lower_3m'].iloc[i] >= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_lower_5m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"]},{"cell_type":"markdown","metadata":{"id":"-IbP_Z3Dlwk4"},"source":["### nontp survey"]},{"cell_type":"markdown","metadata":{"id":"FxJ1y8v2fkCR"},"source":["##### term & liqd"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1628300788555,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"-qIWa48pl1GO","outputId":"b2687c93-e070-4d45-8a67-4cc783fd78f1"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 360x720 with 2 Axes>"]},"metadata":{"tags":[]},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}],"source":["# print(nontp_long_indexs)\n","\n","plot_size = 100\n","\n","for s_i in range(plot_size, len(trade_list), plot_size):\n","\n","  slice_trade_list = trade_list[s_i - plot_size:s_i]\n","  slice_liqd_list = liqd_list[s_i - plot_size:s_i]\n","\n","  # print(len(slice_trade_list))\n","  np_trade = np.array(slice_trade_list)\n","  trade_term = np_trade[:, [2]] - np_trade[:, [1]]\n","\n","  plt.figure(figsize=(5, 10))\n","  plt.subplot(211)\n","  plt.bar(np.arange(len(trade_term)), trade_term.reshape(-1,), width=1, color='b')\n","\n","  # plt.plot(trade_term.reshape(-1,))\n","  plt.ylim(0, 1000)\n","  # plt.show()\n","  # print()\n","\n","  plt.subplot(212)\n","  # print(len(liqd_list))\n","  # plt.bar(np.arange(len(liqd_list)), liqd_list)\n","  plt.bar(np.arange(len(slice_liqd_list)), np.array(slice_liqd_list), width=1, color='r')\n","  # plt.plot(slice_liqd_list)\n","  plt.show()\n","\n","print()"]},{"cell_type":"markdown","metadata":{"id":"VBwVaUkvfnOd"},"source":["##### check nontp index"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":454,"status":"ok","timestamp":1628220543161,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"mRCMBOU4frNY","outputId":"ce4a9c9b-3589-40b3-8a19-4be03d5b9a1e"},"outputs":[{"name":"stdout","output_type":"stream","text":["32747\n"]}],"source":["# np_nontp_short_indexs = np.array(nontp_short_indexs)\n","# np_nontp_long_indexs = np.array(nontp_long_indexs)\n","\n","# short_til_term = len(res_df) - np_nontp_short_indexs\n","# long_til_term = len(res_df) - np_nontp_long_indexs\n","\n","max_nontp_short_term = len(res_df) - nontp_short_indexs[0]\n","max_nontp_long_term = len(res_df) - nontp_long_indexs[0]\n","\n","print(max_nontp_long_term)"]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## basic strategy"]},{"cell_type":"markdown","metadata":{"id":"FaRGwR4NEop2"},"source":["### shifting"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a8aYsjEgQnGF"},"outputs":[],"source":["org_res_df = res_df.copy()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":291,"status":"ok","timestamp":1626515312874,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"RF3RM2G2RCb1","outputId":"ba8f6a75-d4df-4f85-cd0f-190935341f7a"},"outputs":[{"name":"stdout","output_type":"stream","text":["                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272145    0.27005\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...   0.272145    0.27005\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...   0.272523    0.27021\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...   0.272523    0.27021\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...   0.272523    0.27021\n","\n","[5 rows x 37 columns]\n","                            open     high  ...  min_upper  max_lower\n","2021-06-30 23:55:59.999  0.27223  0.27281  ...   0.272523    0.27021\n","2021-06-30 23:56:59.999  0.27274  0.27290  ...        NaN        NaN\n","2021-06-30 23:57:59.999  0.27246  0.27257  ...        NaN        NaN\n","2021-06-30 23:58:59.999  0.27166  0.27183  ...        NaN        NaN\n","2021-06-30 23:59:59.999  0.27144  0.27211  ...        NaN        NaN\n","\n","[5 rows x 37 columns]\n"]}],"source":["#         refresh res_df      #\n","res_df = org_res_df.copy()\n","print(org_res_df.tail(5))\n","\n","# break\n","\n","\n","shift_size = -4\n","# shift_size = -1\n","# shift_size = -7\n","# shift_size = +3\n","\n","res_df['min_upper'] = res_df['min_upper'].shift(shift_size)\n","res_df['max_lower'] = res_df['max_lower'].shift(shift_size)\n","res_df['minor_ST1_Trend'] = res_df['minor_ST1_Trend'].shift(shift_size)\n","res_df['minor_ST2_Trend'] = res_df['minor_ST2_Trend'].shift(shift_size)\n","res_df['minor_ST3_Trend'] = res_df['minor_ST3_Trend'].shift(shift_size)\n","res_df['middle_line'] = res_df['middle_line'].shift(shift_size)\n","\n","print(res_df.tail(5))"]},{"cell_type":"markdown","metadata":{"id":"2gxvme1PC6ha"},"source":["### load model"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5831,"status":"ok","timestamp":1628862368878,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"dtYdAuSsC72_","outputId":"e8dccc53-aaa7-4bab-ed8d-753f634c08d6"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94773248/94765736 [==============================] - 1s 0us/step\n"]}],"source":["# model_name = 'inner_tick_cnnreg_lscalemm_prefee_gpu_%s_%s_%s_%s_%s.h5'\n","\n","# model = tf.keras.models.load_model(ckpt_path + model_name)\n","\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","\n","model = ResNet50(weights='imagenet', include_top=False)\n","# model.summary()\n"]},{"cell_type":"markdown","metadata":{"id":"5la6usMOFzkX"},"source":["#### gen selected vector"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oQk3-jbKF8FB"},"outputs":[],"source":["def min_max_scale(npy_x):\n","\n","  return (npy_x - np.min(npy_x)) / (np.max(npy_x) - np.min(npy_x))\n","\n","def expand_dims(npy_x):\n","\n","  row, col = npy_x.shape\n","  npy_x2 = np.array(npy_x).reshape(-1, row, col, 1).astype(np.float32)\n","  # input_x = np.array(data_x).reshape(-1, row, col).astype(np.float32)\n","\n","  #     1c to 3c    #\n","  npy_x3 = npy_x2 * np.ones(3, dtype=np.float32)[None, None, None, :]\n","\n","  return npy_x3\n","\n","\n","def vector_dist(f1, f2):\n","  return np.linalg.norm(f1-f2)\n","\n","\n","\n","# ------------------------ params ------------------------  #\n","selected_i = 500\n","input_size = 100\n","\n","\n","\n","#   1. 선택된 인덱스를 입력받았을 때, input generating 형태만 만들어놓고,     #\n","#   1-1. input cols 필요함    #\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","sma_list = ['sma']\n","\n","#     -------------- outer price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","\n","selected_price_colname = basic_list + senkoua_list + senkoub_list + sar_list\n","selected_outprice_colname = [macd_list]\n","\n","\n","#         global scaling for outer price data       #\n","#         1. nan 처리       #\n","\n","# # print((np.isnan(df.values)))\n","# print(\"np.sum(np.isnan(df.values), axis=0) :\", np.sum(np.isnan(df.values), axis=0))\n","\n","# max_nan = np.max(np.sum(np.isnan(df.values), axis=0))\n","# # print(max_nan)\n","\n","# df = df.iloc[max_nan:-max_nan]\n","\n","# total_gdata = []\n","# for g_col in selected_outprice_colname:\n","\n","#   temp_data = min_max_scale(res_df[g_col])\n","#   total_gdata.append(temp_data)\n","\n","\n","\n","#   1-2. cols 에 따른, scaling method 구분함    #\n","onprice_input_x = min_max_scale(res_df[selected_price_colname].iloc[selected_i - input_size:selected_i].values)\n","print(onprice_input_x.shape)\n","\n","\n","#   2. plot_check 에서 본인이 원하는 shape 의 인덱스를 선택   #\n","#   3. vertorize, \n","#   3-1. input generator 를 이용해 entry signal 발생할 때마다 dist 비교 진행    #\n","re_onprice_input_x = expand_dims(onprice_input_x)\n","print(re_onprice_input_x.shape)\n","      \n","# break\n","\n","selected_vector = model.predict(re_onprice_input_x, verbose=1)\n","print(selected_vector.shape)"]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gcpo4MGd9Wm4"},"outputs":[],"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   단리    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"복리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   복리 tr_thresh  #\n","#   1. trade_num 에 영향 받지 않음\n","#   2. loss_gap 에 비례함\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"단리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"]},{"cell_type":"markdown","metadata":{"id":"JNQxkb06ZdTe"},"source":["# traded section plot"]},{"cell_type":"markdown","metadata":{"id":"5z4L3MMYmUI0"},"source":["## sorted plot_check"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qv1MM2MemZnF"},"outputs":[],"source":["assert len(open_list) == len(trade_list), \"len(open_list) != len(trade_list)\"\n","assert len(tp_state_list) == len(fee_list), \"len(tp_state_list) != len(fee_list)\"\n","\n","if multi_mode:\n","  strat_version = cfg_list[0].strat_version\n","\n","save_plot = 0\n","tf_plot = 1       # true - false plot\n","pr_sort = 1       # 이상한 체결 확인하기 좋음\n","pr_descend = 1    # 1 -> 내림차순\n","position = -1      # -1 / 1 / 0 (short / long / both)\n","front_plot = 0    # ide -> 1 / logic 검수 -> 0  \"limit plot_range til loc_set idx = replacing x_max value\"\n","# wl_case = 1     # 1 / -1 / 0 (win loss study) --> oid\n","\n","x_max = 500\n","x_margin = x_max / 30\n","\n","inversion = 0\n","hedge = 0\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 130\n","post_plotsize = 120\n","\n","\n","if position == -1:\n","  position = config.ep_set.short_entry_score\n","elif position == 1:\n","  position = -config.ep_set.short_entry_score\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","# ------------------ additional indi. ------------------ #\n","h_c_itv_list = ['15T', 'H', '4H']\n","for h_c_iiv in h_c_itv_list:  \n","  if 'hopen_{}'.format(h_c_iiv) not in res_df.columns:  \n","    res_df = h_candle_v2(res_df, h_c_iiv)\n","\n","res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","# res_df[\"ema_1m\"] = ema(res_df['close'], 200)\n","\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1_{}\".format(strat_version), \"short_tp_gap_{}\".format(strat_version), \"long_tp_1_{}\".format(strat_version), \"long_tp_gap_{}\".format(strat_version)]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1_{}\".format(strat_version), \"short_dtk_gap_{}\".format(strat_version), \"long_dtk_1_{}\".format(strat_version), \"long_dtk_gap_{}\".format(strat_version),\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2', 'dc_lower_v2']\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_c_itv_list[0], 'hclose_%s' % h_c_itv_list[0]] #, \n","                #'hopen_%s' % h_c_itv_list[1], 'hclose_%s' % h_c_itv_list[1], 'hopen_%s' % h_c_itv_list[2], 'hclose_%s' % h_c_itv_list[2]]\n","\n","# ------------------ dc & bb level ------------------ #\n","dc_interval = '3m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","st_list = ['st_base_%s' % hhdc_interval, 'st_upper_%s' % hhdc_interval, 'st_lower_%s' % hhdc_interval]\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_3m', 'sar_5m', 'sar_15m']\n","\n","ma_list = ['ma30_1m', 'ma60_1m']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_1m', 'ema_5m']\n","ema_list = ['ema_1m'] \n","# ema_list = ['ema_5m']\n","\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# ------------------ under price phase ------------------ #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3']\n","# stoch_list = ['stoch_5m']\n","# fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","# cctbbo_list = ['cctbbo']\n","# emaroc_list = ['ema_roc']\n","# bbwp_list = ['bbwp', 'bbwp_ma']\n","rsi_list = ['rsi_%s' % config.loc_set.point.exp_itv] \n","cci_list = ['cci_%s' % config.loc_set.point.exp_itv] \n","\n","\n","# ------------------ enlist colname ------------------ #\n","\n","# ------ indi. add manual : on_price phase indi. 먼저 서술 + outer_price phase indi. 서술 ------ #\n","input_colname = ohlc_list + hcandle_list  # + dc_list + hdc_list + bb_list + hbb_list + dc_v2_list + ema_list + ma_list + hhdc_list + hhbb_list + st_list + cci_list + dtk_list + rsi_list\n","  \n","# ------ currently just used for ymin, ymax ------ # --> future_data warning !\n","norm_range_colname = ohlc_list  #  + hhdc_list + hhbb_list  + dc_list + hdc_list + bb_list + hbb_list + dc_v2_list + ema_list \n","\n","\n","# ------------------ pr serialize ------------------ #\n","# aggr_obj = dict(zip(plot_pr_list, open_list, enumerate(trade_list)))\n","aggr_obj = dict(zip(plot_pr_list, zip(open_list, enumerate(trade_list))))\n","sorted_obj = sorted(aggr_obj.items(), key=(lambda x: x[0]), reverse=pr_descend)\n","\n","if not pr_sort:\n","  sorted_obj = aggr_obj\n","\n","# print(aggr_obj)\n","# print(sorted_obj)\n","\n","odd_cnt = 0\n","obj_i = -1\n","rev_obj_i = 0\n","len_obj = len(sorted_obj)\n","\n","#   지금, continue 발생시 true / false idx 가 같이 상승하는 문제\n","while 1:\n","\n","  if obj_i >= len_obj or rev_obj_i >= len_obj:\n","    break\n","\n","  if odd_cnt % 2 == 1 and tf_plot: #  loss plot 을 채워야하는 상황\n","    rev_obj_i += 1\n","    temp_pr, (open_idx, (t_i, (ep_idx_list_, out_idx_list_, tp_idx_list_))) = sorted_obj[-rev_obj_i]\n","    if temp_pr > 1.0:\n","      continue  \n","\n","  else:\n","    obj_i += 1\n","    temp_pr, (open_idx, (t_i, (ep_idx_list_, out_idx_list_, tp_idx_list_))) = sorted_obj[obj_i]\n","    if temp_pr < 1.0:\n","      continue  \n","\n","  if not(i >= prev_plotsize):\n","    continue\n","  \n","  #   open size indexing by open_idx    #\n","  open_side_ = res_df['entry_{}'.format(strat_version)].iloc[open_idx]\n","\n","  # ------------------ const. zone ------------------ #\n","\n","  if position != 0:\n","    if open_side_ != position:\n","      continue\n","\n","  if multi_mode:\n","    if not strat_version in tp_state_list[t_i]:\n","    # if tp_state_list[t_i] != 'long close tp':\n","    # if tp_state_list[t_i] != 's-long_tp':\n","      continue\n","\n","  # if open_idx == 63901:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","\n","  # if tp_ratio_list[t_i] > 0.4:\n","  #   continue\n","\n"," \n","  # print(\"open_idx :\", open_idx)\n","  print(\"open_side_ :\", open_side_)\n","  print(\"np_timeidx[open_idx] :\", np_timeidx[open_idx])\n","  print(\"open_idx, ep_idx_list_[0], tp_idx_list_[-1] :\", open_idx, ep_idx_list_[0], tp_idx_list_[-1])\n","  #   const. 에 합하는 조건 나올때까지 loop 돌리고, const. phase 통과시 odd_cnt += 1,\n","  #   => odd_cnt 로 gs_plot 을 채운다는 느낌 \n","  #   odds = 1 -> wl_case == 1 만 허용, odds = 2 -> wl_case == -1 만 허용\n","  odd_cnt += 1\n","\n","  # break\n","\n","  plot_df = res_df.iloc[open_idx - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df[['ST1_Trend%s' % basic_st_interval, 'ST2_Trend%s' % basic_st_interval, 'ST3_Trend%s' % basic_st_interval]].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=0, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","  \n","  odds = 1 if odd_cnt % 2 == 1 else 2\n","  if odds == 1:\n","\n","    plt.style.use('dark_background')\n","\n","    fig = plt.figure(figsize=(26, 18))\n","    \n","    gs = gridspec.GridSpec(nrows=2, # row 몇 개 \n","                        ncols=2, # col 몇 개 \n","                        height_ratios=[3, 1]\n","                        )\n","    \n","  ax = fig.add_subplot(gs[odds - 1])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ------ h_candle ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for cd_i, candle in enumerate(hcandle_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","      lw = lw * 2 if (cd_i % 2 == 1) else lw * 1\n","    # alpha = 0.1\n","    # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","    #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  except:\n","    pass\n","\n","   # ------ ma ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for ma_i, item in enumerate(ma_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","  except:\n","    pass\n","\n","  # ------ ema ------ #\n","  try:\n","    alpha = 1\n","    lw = 4\n","    for sm_i, item in enumerate(ema_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  except:\n","    pass\n","    \n","   # ------ st ------ #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(st_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#00ff00', linewidth=lw)\n","\n","\n","  # ------------------ dc_series ------------------ #  \n","  \n","  # ------ dc_v2 ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for sm_i, item in enumerate(dc_v2_list):\n","        plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","  except:\n","    pass\n","\n","  # ------ dc ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for sm_i, item in enumerate(dc_list):\n","        plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","  except:\n","    pass\n","\n","  # ------ hdc ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for sm_i, item in enumerate(hdc_list):\n","        plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","  except:\n","    pass\n","\n","  # ------ hhdc ------ #\n","  try:\n","    alpha = 1\n","    lw = 4\n","    for sm_i, item in enumerate(hhdc_list):\n","        plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","  except:\n","    pass\n","\n","  # ------------------ dc_series ------------------ #  \n","\n","  # ------ bb ------ #\n","  try:\n","    alpha = 1\n","    lw = 1\n","    for sm_i, item in enumerate(bb_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","    alpha = 0.2\n","    plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","                        where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","  except:\n","    pass\n","\n","  # ------ hbb ------ #\n","  try:\n","    alpha = 1\n","    lw = 2\n","    for sm_i, item in enumerate(hbb_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","    \n","    alpha = 0.2\n","    plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","                        where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  except:\n","    pass\n","  \n","  # ------ hhbb ------ #\n","  try:\n","    alpha = 1\n","    lw = 4\n","    for sm_i, item in enumerate(hhbb_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","    \n","    alpha = 0.2\n","    plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","                        where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  except:\n","    pass\n","  \n","  # ------------------ dtk_line (old, tp_line) ------------------ #  \n","  try:\n","    alpha = 1\n","    lw = 2\n","    rtc_ratio_list = [config.loc_set.zone.dt_k]\n","    \n","    for rtc_k in rtc_ratio_list:    \n","      # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","    hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","    hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","    alpha = 1\n","    lw = 4\n","    # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","    h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","    # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","    \n","    for h_rtc_k in h_rtc_ratio_list:\n","      plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","      # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","    # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","    # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","  except:\n","    pass\n","  # ------------------------------------------------------ #\n","  \n","  # ------------------ tr_set plotting ------------------ #\n","  # ------ ep ------ #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","    #        initial order         #\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--', color='#ffeb3b')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    # plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.7, linestyle='--', color='#ffeb3b')\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","\n","  # ------ x lim ------ #\n","  if front_plot:\n","    x_max = prev_plotsize + (ep_idx_list_[0] - open_idx)\n","\n","  if len(plot_df) > x_max:\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","  x0,x1 = plt.gca().get_xlim()\n","\n","  # ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0])) / x1\n","  ep_xmin = (prev_plotsize + (ep_idx_list_[ep_i] - open_idx)) / x1\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='--', xmin=ep_xmin, xmax=1, alpha=1, color='lime')  # ep line axhline  \n","  plt.text(x1, ep_tp_list[t_i][0][0], ' ep :\\n %s' % ep_tp_list[t_i][0][0], ha='left', va='center', fontweight='bold') # ep line label\n","\n","  \n","  # ------ tp ------ #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","\n","    # tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0])) / x1\n","    tp_xmin = (prev_plotsize + (tp_idx_list_[sub_i] - open_idx)) / x1\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='--', xmin=tp_xmin , xmax=1, alpha=1, color='lime')  # tp line axhline\n","    plt.text(x1, ep_tp_list[t_i][1][sub_i], ' tp :\\n %s' % ep_tp_list[t_i][1][sub_i], ha='left', va='center', fontweight='bold') # tp line label\n","     \n","    # plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","    # plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","\n","  # ------ rtc horizontal range ------ # --> open_idx 로 할지는 추후 수정 권고 (ep_loc.point2 에 의해 진입 기준 point 가 변경될 수 있음)\n","  #       loss_study 과정에서 최적 tp_gap / out_gap 을 선출하기 위해 plotting 함       #\n","  # rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  rtc_ratio_list = [0.]\n","  if open_side_ == config.ep_set.short_entry_score:\n","    # plt.axhline(res_df['short_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['short_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    out_line = res_df['short_out_{}'.format(strat_version)].iloc[out_idx_list_[0]]\n","    plt.axhline(out_line, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, out_line, ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_short_rtc_1_{}'.format(strat_version)].iloc[open_idx] - res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_short_rtc_1_{}'.format(strat_version)].iloc[open_idx] - res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","      \n","    y_max = out_line\n","    y_min = res_df['h_short_rtc_1_{}'.format(strat_version)].iloc[tp_idx_list_[-1]] - res_df['h_short_rtc_gap_{}'.format(strat_version)].iloc[tp_idx_list_[-1]] * rtc_k\n","\n","    print(\"short_tp :\", res_df['short_tp_{}'.format(strat_version)].iloc[tp_idx_list_[-1]])\n","    print(\"short_out :\", out_line)\n","\n","  else:\n","    # plt.axhline(res_df['long_rtc_1'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    # plt.axhline(res_df['long_rtc_0'].iloc[open_idx], linewidth=.5, linestyle='-', alpha=1, color='#ffffff') \n","    out_line = res_df['long_out_{}'.format(strat_version)].iloc[out_idx_list_[0]]\n","    plt.axhline(out_line, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","    plt.text(x0, out_line, ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","    for rtc_k in rtc_ratio_list:\n","      plt.axhline(res_df['h_long_rtc_1_{}'.format(strat_version)].iloc[open_idx] + res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[open_idx] * rtc_k, linewidth=.5, linestyle='-', alpha=1, color='#ffffff')\n","      plt.text(x0, res_df['h_long_rtc_1_{}'.format(strat_version)].iloc[open_idx] + res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[open_idx] * rtc_k, ' %s' % rtc_k, ha='left', va='center', fontweight='bold')\n","\n","    y_max = res_df['h_long_rtc_1_{}'.format(strat_version)].iloc[tp_idx_list_[-1]] + res_df['h_long_rtc_gap_{}'.format(strat_version)].iloc[tp_idx_list_[-1]] * rtc_k\n","    y_min = out_line\n","\n","    print(\"long_tp :\", res_df['long_tp_{}'.format(strat_version)].iloc[tp_idx_list_[-1]])\n","    print(\"long_out :\", out_line)\n","  \n","    # t_tr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx] - tp_fee * res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx] + out_fee * res_df['close'].iloc[open_idx]))\n","    # t_dr = ((res_df['long_tp'].iloc[open_idx] - res_df['close'].iloc[open_idx]) / (res_df['close'].iloc[open_idx] - res_df['long_out'].iloc[open_idx]))     \n","    # print(\"t_tr :\", t_tr)\n","    # print(\"t_dr :\", t_dr)\n","\n","  # ------ hedge ep & tp ------ #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    # plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axvline(prev_plotsize + (h_i - open_idx), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  # ------ check pr ------ #\n","  if not config.lvrg_set.static_lvrg:\n","    \n","    #   list length 만 sync 맞으면 t_i 걱정 안해도됨, zip 해서 순서가 바뀌었을 뿐, original serialized order 에서 t_i 로 indexing 하는 것뿐임   #\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n lvrg : %s\\ntp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                                h_plot_pr_list[t_i], leverage_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * leverage_list[t_i] + 1)    \n","\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\n tp_ratio : %.3f\\n dr : %.3f\\n fee : %.4f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], \n","                                                                                     h_plot_pr_list[t_i], tp_ratio_list[t_i], dr_list[t_i], fee_list[t_i]))\n","\n","    print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","    print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee_list[t_i] - 1) * config.lvrg_set.leverage + 1)\n","  \n","  # ------ y lim ------ #  \n","  if front_plot:\n","    y_max_ = max(np.max(plot_df[norm_range_colname].iloc[:x_max]))\n","    y_min_ = min(np.min(plot_df[norm_range_colname].iloc[:x_max]))\n","  else:\n","    y_max_ = max(np.max(plot_df[norm_range_colname]))\n","    y_min_ = min(np.min(plot_df[norm_range_colname]))\n","\n","  y_max = max(y_max, y_max_)\n","  y_min = min(y_min, y_min_)\n","  y_range = y_max - y_min\n","  y_margin = y_range / 20\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plt.ylim(y_min - y_margin, y_max + y_margin)\n","\n","\n","  # ------------------ plot ------------------ #\n","\n","  #           rsi          #    \n","  try:\n","    plot_df[rsi_list[0]]\n","    plt.subplot(gs[odds + 1])\n","    alpha = 1\n","    for rsi_ in rsi_list:\n","      plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","      # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","      alpha -= 0.2\n","    plt.axhline(50, linestyle='--')\n","    plt.axhline(50 + config.loc_set.point.osc_band, linestyle='--')\n","    plt.axhline(50 - config.loc_set.point.osc_band, linestyle='--')\n","    \n","    plt.axvline(prev_plotsize, linestyle='--')\n","  except:\n","    pass\n","  \n","  #           cci          #    \n","  try: \n","    plot_df[cci_list[0]]    \n","    plt.subplot(gs[odds + 1])\n","    alpha = 1\n","    for cci_ in cci_list:\n","      plt.step(np.arange(len(plot_df)), plot_df[cci_].values, 'g', alpha=alpha)\n","      # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","      alpha -= 0.2\n","    plt.axhline(config.loc_set.point.osc_band, linestyle='--')\n","    plt.axhline(-config.loc_set.point.osc_band, linestyle='--')\n","    \n","    plt.axvline(prev_plotsize, linestyle='--')\n","  except:\n","    pass\n","\n","\n","  #     vline open     #\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - open_idx), alpha=0.7, linestyle='--', color='#ffeb3b')\n","  \n","  #     vline close     #\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - open_idx), alpha=1., linestyle='--', color='#ffeb3b', zorder=2)\n","\n","  if len(plot_df) > x_max:\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","\n","  if not save_plot:\n","    if odds == 2:\n","      plt.show()\n","      plt.close()\n","  \n","  else:\n","    # ------------------ save mode ------------------ #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  # plt.close()  \n","  print()\n","\n","  # break\n"]},{"cell_type":"markdown","metadata":{"id":"X0FsT-8FZRti"},"source":["## sync_check"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"inQ6f-CDZYkr"},"outputs":[],"source":["if multi_mode:\n","  strat_version = \"v3\"\n","\n","save_plot = 0\n","\n","open_idx_range = reversed(range(0, len(res_df), 1000))\n","plot_range = 100\n","\n","x_max = 400\n","\n","inversion = 0\n","hedge = 0\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","\n","prev_plotsize = 30\n","post_plotsize = 20\n","\n","\n","\n","h_candle_intv1 = 15\n","h_candle_intv2 = 60\n","if 'hopen_{}'.format(h_candle_intv2) not in res_df.columns:\n","  res_df = h_candle(res_df, h_candle_intv1)\n","  res_df = h_candle(res_df, h_candle_intv2)\n","\n","res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","\n","res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line)\n","# res_df = dtk_plot(res_df, dtk_itv2='15m', hhtf_entry=1, use_dtk_line=1)\n","# break\n","\n","rtc_list = [\"short_tp_1_{}\".format(strat_version), \"short_tp_gap_{}\".format(strat_version), \"long_tp_1_{}\".format(strat_version), \"long_tp_gap_{}\".format(strat_version)]\n","# h_rtc_list = [\"h_short_tp_1\", \"h_short_tp_gap\", \"h_long_tp_1\", \"h_long_tp_gap\"]\n","dtk_list = [\"short_dtk_1_{}\".format(strat_version), \"short_dtk_gap_{}\".format(strat_version), \"long_dtk_1_{}\".format(strat_version), \"long_dtk_gap_{}\".format(strat_version),\n","            # \"short_dtk_1_line\", \"short_dtk_gap_line\", \"long_dtk_1_line\", \"long_dtk_gap_line\",\n","            \"short_dtk_plot_1\", \"short_dtk_plot_gap\", \"long_dtk_plot_1\", \"long_dtk_plot_gap\"]\n","dc_v2_list = ['dc_upper_v2_{}'.format(strat_version), 'dc_lower_v2_{}'.format(strat_version)]\n","\n","\n","ohlc_list = ['open', 'high', 'low', 'close'] # + basic_st_list\n","hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hopen_%s' % h_candle_intv2, 'hclose_%s' % h_candle_intv2]\n","# hcandle_list = ['hopen_%s' % h_candle_intv1, 'hclose_%s' % h_candle_intv1, 'hhigh_%s' % h_candle_intv2, 'hlow_%s' % h_candle_intv2]\n","\n","# --------------------- dc & bb level --------------------- #\n","dc_interval = '1m'\n","hdc_interval = '5m'\n","hhdc_interval = '15m'\n","\n","st_list = ['st_base_%s' % hhdc_interval, 'st_upper_%s' % hhdc_interval, 'st_lower_%s' % hhdc_interval]\n","\n","dc_list = ['dc_upper_%s' % dc_interval, 'dc_lower_%s' % dc_interval]\n","hdc_list = ['dc_upper_%s' % hdc_interval, 'dc_lower_%s' % hdc_interval]\n","hhdc_list = ['dc_upper_%s' % hhdc_interval, 'dc_lower_%s' % hhdc_interval]\n","\n","bb_interval = dc_interval\n","hbb_interval = hdc_interval\n","hhbb_interval = hhdc_interval\n","\n","bb_list = ['bb_upper_%s' % bb_interval, 'bb_lower_%s' % bb_interval]\n","hbb_list = ['bb_upper_%s' % hbb_interval, 'bb_lower_%s' % hbb_interval]\n","hhbb_list = ['bb_upper_%s' % hhbb_interval, 'bb_lower_%s' % hhbb_interval]\n","\n","bbwp_list = ['bbwp', 'bbwp_ma']\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1']\n","senkoub_list = ['senkou_b1']\n","\n","sar_list = ['sar_3m', 'sar_5m', 'sar_15m']\n","\n","ma_list = ['ma30_1m', 'ma60_1m']\n","sma_list = ['sma_1m']\n","\n","ema_list = ['ema_5m']\n","# cb_list = ['cloud_bline_1m']\n","cb_list = ['cloud_bline_30m']\n","# cb_list = ['cloud_bline_5m']\n","\n","\n","\n","# -------------- under price phase -------------- #\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3']\n","# stoch_list = ['stoch_5m']\n","# fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","# cctbbo_list = ['cctbbo']\n","# emaroc_list = ['ema_roc']\n","rsi_list = ['rsi_%s' % config.loc_set.point.exp_itv] \n","cci_list = ['cci_%s' % config.loc_set.point.exp_itv] \n","\n","\n","# -------------- summation -------------- #\n","# input_colname = ohlc_list + basic_st_list + pline_list + bb_list + hbb_list + sma_list + cb_list + stoch_list + sar_list + dc_list\n","input_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dtk_list + dc_v2_list + rsi_list + ema_list + ma_list + st_list# + cci_list\n","\n","# yrange_colname = ohlc_list + basic_st_list + pline_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + hhdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","yrange_colname = ohlc_list + hcandle_list + bb_list + hbb_list + hhbb_list + dc_list + hdc_list + dc_v2_list + ema_list # currently just used for ymin, ymax\n","\n","\n","\n","odd_cnt = 0\n","obj_i = -1\n","rev_obj_i = 0\n","\n","#   지금, continue 발생시 true / false idx 가 같이 상승하는 문제\n","\n","# while 1:\n","for open_idx in open_idx_range:\n","\n","  # if obj_i >= len_obj or rev_obj_i >= len_obj:\n","  #   break\n","\n","  # if odd_cnt % 2 == 1 and tf_plot: #  loss plot 을 채워야하는 상황\n","  #   rev_obj_i += 1\n","\n","  # else:\n","  #   obj_i += 1\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","  \n","\n","  odd_cnt += 1\n","\n","  # break\n","\n","  print(\"open_idx :\", open_idx)\n","  \n","  plot_df = res_df.iloc[open_idx - prev_plotsize:open_idx + plot_range + post_plotsize][input_colname]\n","  \n","  odds = 1 if odd_cnt % 2 == 1 else 2\n","  if odds == 1:\n","\n","    plt.style.use('dark_background')\n","\n","    fig = plt.figure(figsize=(26, 18))\n","    \n","    gs = gridspec.GridSpec(nrows=2, # row 몇 개 \n","                        ncols=2, # col 몇 개 \n","                        height_ratios=[3, 1]\n","                        )\n","    \n","  ax = fig.add_subplot(gs[odds - 1])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='#26a69a', colordown='#ef5350', alpha=0.5)\n","\n","  # ---------- h_candle ---------- #\n","  alpha = 1\n","  lw = 1\n","  for cd_i, candle in enumerate(hcandle_list):\n","\n","    if cd_i == 2:\n","      lw = 2      \n","    plt.step(np.arange(len(plot_df)), plot_df[candle].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.1\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['hclose_60'].values, plot_df['hopen_60'].values, \n","  #                     where=1, facecolor='#ffffff', alpha=alpha)  \n","  \n","\n","   # --------- ma --------- #\n","  alpha = 1\n","  lw = 2\n","  for ma_i, item in enumerate(ma_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","   # --------- ema --------- #\n","  alpha = 1\n","  lw = 4\n","  for sm_i, item in enumerate(ema_list):\n","    plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","    \n","   # --------- st --------- #\n","  alpha = 1\n","  lw = 2\n","  for sm_i, item in enumerate(st_list):\n","      plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#00ff00', linewidth=lw)\n","\n","  # ---------------------- dc_v2 ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_v2_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- dc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(dc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffeb3b', linewidth=lw)\n","\n","  # # ---------------------- hdc ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#e65100', linewidth=lw)\n","\n","  # # ---------------------- hhdc ---------------------- #\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhdc_list):\n","  #     plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#c2185b', linewidth=lw)\n","\n","\n","  # # ---------------------- bb ---------------------- #\n","  # alpha = 1\n","  # lw = 1\n","  # for sm_i, item in enumerate(bb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ffffff', linewidth=lw)\n","\n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % bb_interval].values, plot_df['bb_lower_%s' % bb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % bb_interval].values >= plot_df['bb_lower_%s' % bb_interval].values, facecolor='#ffffff', alpha=alpha)   \n","\n","  # # ---------------------- hbb ---------------------- #\n","  # alpha = 1\n","  # lw = 2\n","  # for sm_i, item in enumerate(hbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#ff00ff', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hbb_interval].values, plot_df['bb_lower_%s' % hbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hbb_interval].values >= plot_df['bb_lower_%s' % hbb_interval].values, facecolor='#ff00ff', alpha=alpha) \n","  \n","  # # ---------------------- hhbb ---------------------- #\n","\n","  # alpha = 1\n","  # lw = 4\n","  # for sm_i, item in enumerate(hhbb_list):\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#3179f5', linewidth=lw)\n","  \n","  # alpha = 0.2\n","  # plt.fill_between(np.arange(len(plot_df)), plot_df['bb_upper_%s' % hhbb_interval].values, plot_df['bb_lower_%s' % hhbb_interval].values, \n","  #                     where=plot_df['bb_upper_%s' % hhbb_interval].values >= plot_df['bb_lower_%s' % hhbb_interval].values, facecolor='#3179f5', alpha=alpha) \n","  \n","  # ------------------- dtk_line (old, tp_line) ------------------- #\n","  \n","  # alpha = 1\n","  # lw = 2\n","  # rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  \n","  # for rtc_k in rtc_ratio_list:    \n","  #   # plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1_line'].values - plot_df['short_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1_line'].values + plot_df['long_dtk_gap_line'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * rtc_k)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * rtc_k)  \n","\n","  # alpha = 1\n","  # lw = 4\n","  # # h_rtc_ratio_list = [config.loc_set.zone.dt_k]\n","  # h_rtc_ratio_list = [config.loc_set.zone.zone_dt_k]\n","  # # h_rtc_ratio_list = [0.272, 0.36, 0.4, 0.5]\n","  \n","  # for h_rtc_k in h_rtc_ratio_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   plt.step(np.arange(len(plot_df)), plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_short_tp_1'].values - plot_df['h_short_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","  #   # plt.step(np.arange(len(plot_df)), plot_df['h_long_tp_1'].values + plot_df['h_long_tp_gap'].values * h_rtc_k, alpha=alpha, linestyle='--', color='#ffffff', linewidth=lw)\n","\n","  # # hy_min = np.min(plot_df['short_dtk_plot_1'].values - plot_df['short_dtk_plot_gap'].values * h_rtc_k)\n","  # # hy_max = np.max(plot_df['long_dtk_plot_1'].values + plot_df['long_dtk_plot_gap'].values * h_rtc_k)  \n","\n","  # ------------- y lim ------------- #  \n","  y_max = max(np.max(plot_df[yrange_colname]))\n","  y_min = min(np.min(plot_df[yrange_colname]))\n","  # y_max = max(y_max, y_max_)\n","  # y_min = min(y_min, y_min_)\n","  \n","  # hy_min = np.min(plot_df['short_dtk_1'].values - plot_df['short_dtk_gap'].values * 0.36)\n","  # hy_max = np.max(plot_df['long_dtk_1'].values + plot_df['long_dtk_gap'].values * 0.36)  \n","  # y_max = max(y_max, y_max_, hy_max)\n","  # y_min = min(y_min, y_min_, hy_min)\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    print('continued in yminmax')\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  #           rsi          #    \n","  plt.subplot(gs[odds + 1])\n","  alpha = 1\n","  for rsi_ in rsi_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[rsi_].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(50 + config.loc_set.point.osc_band, linestyle='--')\n","  plt.axhline(50 - config.loc_set.point.osc_band, linestyle='--')\n","  \n","  plt.axvline(prev_plotsize, linestyle='--')\n","  \n","  #           cci          #    \n","  # plt.subplot(gs[odds + 1])\n","  # alpha = 1\n","  # for cci_ in cci_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cci_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axhline(config.loc_set.point.osc_band, linestyle='--')\n","  # plt.axhline(-config.loc_set.point.osc_band, linestyle='--')\n","  \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","\n","\n","  if len(plot_df) > x_max:\n","    x_margin = x_max / 20\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","\n","\n","  if not save_plot:\n","    if odds == 2:\n","      plt.show()\n","      plt.close()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  # plt.close()  \n","  print()\n","\n","  # break\n"]},{"cell_type":"markdown","metadata":{"id":"13a-U32Uy50I"},"source":["## brief np_pr survey"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"executionInfo":{"elapsed":847,"status":"ok","timestamp":1642840948860,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"L9LdjV2uUWnp","outputId":"dd6fb708-a494-4593-e6e8-9f086f466098"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# plot_pr_list[:100]\n","\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":431,"status":"ok","timestamp":1642841093462,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"un8OQJs488LJ","outputId":"2f2d6e14-8193-4ae6-f155-44d268b6787a"},"outputs":[{"data":{"text/plain":["0.9908759124087592"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["len(np_pr[np_pr > 1.0001]) / len(np_pr[np_pr > 1.000])"]},{"cell_type":"markdown","metadata":{"id":"TBE0l6dHRYrE"},"source":["## whole pr & chart sync"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"elapsed":1436,"status":"ok","timestamp":1636355589887,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"-txULkhXRbz5","outputId":"7cda9fc7-4a4e-4c52-ffa3-a974b5f7c66f"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 3 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}],"source":["#     chunky survey 필요함    #\n","chunk_size = 50000\n","\n","sync_pr = np.ones(len(res_df))\n","sync_tr = np.zeros(len(res_df))\n","# sync_tr = np.empty(len(res_df))\n","# sync_tr[:] = np.nan\n","\n","max_tr = np.max(tp_ratio_list)\n","min_tr = np.min(tp_ratio_list)\n","\n","for ck_i in range(0, len(res_df), chunk_size):\n","\n","  chunked_df = res_df.iloc[ck_i:ck_i + chunk_size]\n","  # break\n","\n","  for pr_, eptp_idx, tr_ in zip(pr_list[ck_i:ck_i + chunk_size], trade_list[ck_i:ck_i + chunk_size], tp_ratio_list[ck_i:ck_i + chunk_size]):\n","    # print(pr_, eptp_idx)\n","    sync_pr[eptp_idx[-1][0]] = pr_\n","    sync_tr[eptp_idx[-1][0]] = tr_\n","    # break\n","\n","  chunked_pr = sync_pr[ck_i:ck_i + chunk_size]\n","  chunked_tr = sync_tr[ck_i:ck_i + chunk_size]\n","  chunked_tr = np.where(np.isnan(chunked_tr), pd.Series(chunked_tr).shift(1), chunked_tr)\n","\n","  # plt.figure(figsize=(8, 6))\n","\n","  plt.subplot(311)\n","  plt.plot(np.arange(len(chunked_df)), chunked_df['close'])\n","  # plt.show()\n","\n","  plt.subplot(312)\n","  plt.plot(np.cumprod(chunked_pr))\n","  \n","  plt.subplot(313)\n","  plt.plot(chunked_tr)\n","  plt.ylim(min_tr + 0.5 * (max_tr - min_tr), max_tr)\n","  \n","  plt.show()\n","  print()\n"]},{"cell_type":"markdown","metadata":{"id":"Qys2Bw5Ou3u9"},"source":["## plot indi. legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pi5ntOOVu6JT"},"outputs":[],"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  # ---------------------- sar ---------------------- #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"59nW2aKYzkN8"},"source":["## plot all indicator (stepline ver.)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":828},"executionInfo":{"elapsed":3326,"status":"ok","timestamp":1631665238032,"user":{"displayName":"7th June","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08178289703395036410"},"user_tz":-540},"id":"JDH4rXgNzno6","outputId":"3ee8589d-27d7-4433-ed78-7bb1233cf175"},"outputs":[{"name":"stdout","output_type":"stream","text":["short real pr : [0.95849245]\n","long real pr : [1.0378222]\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 864x1152 with 2 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n"]}],"source":["save_plot = False\n","\n","\n","if save_plot:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".xlsx\", \"\")\n","  try:\n","    os.mkdir(plot_check_dir)\n","  except:\n","\n","    #     remove existing dir   #\n","    shutil.rmtree(plot_check_dir)\n","    print(plot_check_dir, 'removed !')\n","    os.mkdir(plot_check_dir)\n","    # pass\n","    \n","# prev_plotsize = 120\n","prev_plotsize = 150\n","post_plotsize = 20\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    try:\n","      h_plot_pr_list = h_np_pr\n","    except Exception as e:\n","      print(\"error in h_plot_pr :\", e)\n","      h_plot_pr_list = np_pr\n","\n","\n","#         select plot columns       #\n","major_st_list = ['major_ST1_Up', 'major_ST1_Down', 'major_ST2_Up', 'major_ST2_Down', 'major_ST3_Up', 'major_ST3_Down',\n","                 'major_middle_line', 'major_upper_middle', 'major_lower_middle']\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower'] # + major_st_list\n","\n","\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1',  'senkou_a2']\n","senkoub_list = ['senkou_b1',  'senkou_b2']\n","\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1']\n","\n","# ma_list = ['sma1', 'sma4']\n","ma_list = ['ema5']\n","\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","# macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3']\n","# trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","trix_list = ['trix1', 'trix2', 'trix3']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher30', 'fisher60', 'fisher120']\n","cctbbo_list = ['cctbbo']\n","emaroc_list = ['ema_roc']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + ma_list\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + ma_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","input_colname = basic_list + major_st_list + senkoua_list + senkoub_list + sar_list + stoch_list + fisher_list + emaroc_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list # currently just used for ymin, ymax\n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","\n","\n","# for t_i, (initial_i, i, j) in enumerate(trade_list):\n","for t_i, (ep_idx_list_, tp_idx_list_) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # if 100 < i < 1860:\n","  if ep_idx_list_[0] == 370530:\n","    pass\n","  else:\n","    continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > short_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + post_plotsize, input_cols]\n","  plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  # st_trend_plot_df = res_df.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize, [7, 10, 13]]\n","  # st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  st_trend_plot_df = res_df[['minor_ST1_Trend', 'minor_ST2_Trend', 'minor_ST3_Trend', 'major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  # htf_st_trend_plot_df = res_df[['major_ST1_Trend', 'major_ST2_Trend', 'major_ST3_Trend']].iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","\n","  if np.isnan(y_max) or np.isnan(y_min):\n","    continue\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","  \n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, plot_df['minor_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, plot_df['minor_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, plot_df['minor_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, plot_df['minor_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, plot_df['minor_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, plot_df['minor_ST3_Down'], np.nan)\n","\n","  plot_df[\"off_color_upper_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, plot_df['major_ST1_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, plot_df['major_ST2_Up'], np.nan)\n","  plot_df[\"off_color_upper_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, plot_df['major_ST3_Up'], np.nan)\n","  plot_df[\"off_color_lower_hst1\"] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, plot_df['major_ST1_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst2\"] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, plot_df['major_ST2_Down'], np.nan)\n","  plot_df[\"off_color_lower_hst3\"] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, plot_df['major_ST3_Down'], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df['minor_ST1_Up'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == 1, np.nan, plot_df['minor_ST1_Up'])\n","  plot_df['minor_ST2_Up'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == 1, np.nan, plot_df['minor_ST2_Up'])\n","  plot_df['minor_ST3_Up'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == 1, np.nan, plot_df['minor_ST3_Up'])\n","  plot_df['minor_ST1_Down'] = np.where(st_trend_plot_df['minor_ST1_Trend'] == -1, np.nan, plot_df['minor_ST1_Down'])\n","  plot_df['minor_ST2_Down'] = np.where(st_trend_plot_df['minor_ST2_Trend'] == -1, np.nan, plot_df['minor_ST2_Down'])\n","  plot_df['minor_ST3_Down'] = np.where(st_trend_plot_df['minor_ST3_Trend'] == -1, np.nan, plot_df['minor_ST3_Down'])\n","\n","  plot_df['major_ST1_Up'] = np.where(st_trend_plot_df['major_ST1_Trend'] == 1, np.nan, plot_df['major_ST1_Up'])\n","  plot_df['major_ST2_Up'] = np.where(st_trend_plot_df['major_ST2_Trend'] == 1, np.nan, plot_df['major_ST2_Up'])\n","  plot_df['major_ST3_Up'] = np.where(st_trend_plot_df['major_ST3_Trend'] == 1, np.nan, plot_df['major_ST3_Up'])\n","  plot_df['major_ST1_Down'] = np.where(st_trend_plot_df['major_ST1_Trend'] == -1, np.nan, plot_df['major_ST1_Down'])\n","  plot_df['major_ST2_Down'] = np.where(st_trend_plot_df['major_ST2_Trend'] == -1, np.nan, plot_df['major_ST2_Down'])\n","  plot_df['major_ST3_Down'] = np.where(st_trend_plot_df['major_ST3_Trend'] == -1, np.nan, plot_df['major_ST3_Down'])\n","\n","\n","  plot_short_ep = short_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_ep = long_ep.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]\n","  plot_long_tp = long_tp.iloc[ep_idx_list_[0] - prev_plotsize:tp_idx_list_[-1] + post_plotsize]  \n","\n","\n","  # fig = trendln.plot_support_resistance(plot_df['close'], accuracy=8, fromwindows=False, numbest=1,  window=30) # requires matplotlib - pip install matplotlib\n","\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                       ncols=1, # col 몇 개 \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  plt.step(plot_df[['minor_ST1_Up', 'minor_ST2_Up', 'minor_ST3_Up']].values, 'r', alpha=1)  # upper on color\n","  plt.step(plot_df[['minor_ST1_Down', 'minor_ST2_Down', 'minor_ST3_Down']].values, 'b', alpha=1)  # lower on color\n","  \n","  plt.step(plot_df[['major_ST1_Up', 'major_ST2_Up', 'major_ST3_Up']].values, 'r', alpha=1, linewidth=3)  # major upper on color\n","  plt.step(plot_df[['major_ST1_Down', 'major_ST2_Down', 'major_ST3_Down']].values, 'b', alpha=1, linewidth=3)  # major lower on color\n","\n","  plt.step(plot_df[['middle_line']].values, 'fuchsia', alpha=1)  # middle \n","  plt.step(plot_df[['major_middle_line']].values, 'fuchsia', alpha=1, linewidth=3)  # major_middle \n","  \n","  plt.step(plot_df[['off_color_upper_st1', 'off_color_upper_st2', 'off_color_upper_st3']].values, 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df[['off_color_lower_st1', 'off_color_lower_st2', 'off_color_lower_st3']].values, 'b', alpha=1, linestyle=':')  # lower off color\n","  \n","  plt.step(plot_df[['off_color_upper_hst1', 'off_color_upper_hst2', 'off_color_upper_hst3']].values, 'r', alpha=1, linestyle=':', linewidth=3)  # major upper off color\n","  plt.step(plot_df[['off_color_lower_hst1', 'off_color_lower_hst2', 'off_color_lower_hst3']].values, 'b', alpha=1, linestyle=':', linewidth=3)  # major lower off color\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_long_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  plt.step(plot_df[['major_upper_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  plt.step(plot_df[['major_lower_middle']].values, 'g', linestyle='--', alpha=1, linewidth=3)  # major_middle \n","  \n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- on price indicator part ---------------------- #\n","\n","  # ---------------------- sma ---------------------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(ma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='black', linewidth=lw)\n","  #   alpha -= 0.2\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  # if i != initial_i:\n","  # if len(ep_idx_list_) > 1:\n","  \n","  # ------------- initial order ------------- #\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  for ep_i in range(len(ep_idx_list_)):\n","    plt.axvline(prev_plotsize + (ep_idx_list_[ep_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  for sub_i in range(len(ep_tp_list[t_i][1])):\n","    plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline  \n","    plt.axvline(prev_plotsize + (tp_idx_list_[sub_i] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","\n","\n","  #         hedge ep & tp         #\n","  h_i = h_trade_list[t_i][1]\n","  if h_i is not None:\n","    plt.axvline(prev_plotsize + (h_i - ep_idx_list_[0]), linestyle='--')\n","    plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","    plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  if not static_lvrg:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\nlvrg : %s\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], lvrg_list[t_i], tp_ratio_list[t_i]))\n","  else:\n","    plt.title(\"%s ~ %s -> %.5f\\n %s\\n h_pr : %.5f\\ntp_ratio : %.2f\" % (ep_idx_list_[0], tp_idx_list_[-1], plot_pr_list[t_i], tp_state_list[t_i], h_plot_pr_list[t_i], tp_ratio_list[t_i]))\n","\n","  print(\"short real pr :\", (ep_tp_list[t_i][0] / ep_tp_list[t_i][1][sub_i] - fee - 1) * lvrg + 1)\n","  print(\"long real pr :\", (ep_tp_list[t_i][1][sub_i] / ep_tp_list[t_i][0] - fee - 1) * lvrg + 1)\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for emaroc in emaroc_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_list[t_i]), alpha=0.5, linestyle='--', color='lime')\n","  plt.axhline(0, linestyle='--')\n","\n","\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  if not save_plot:\n","    plt.show()\n","  \n","  else:\n","    # ---------- save mode ---------- #\n","    fig_name = plot_check_dir +  \"/%s.png\" % t_i\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","\n","  \n","  plt.close()\n","  print()\n","\n","  # break\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KGuJu2j4Aby9"},"outputs":[],"source":["# print()\n","for item in os.listdir(current_path + \"plot_check/\"):\n","  if item.endswith('png'):\n","    os.remove(current_path + \"plot_check/\" + item)\n","    print(current_path + \"plot_check/\" + item, \"removed !\")"]},{"cell_type":"markdown","metadata":{"id":"cj9X6S1jJjER"},"source":["## plot nontp case"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gb1jGrS4Jl8A"},"outputs":[],"source":["prev_plotsize = 50\n","\n","# inversion = True\n","inversion = False\n","\n","# hedge = True\n","# hedge = False\n","\n","short_ver = False\n","\n","\n","if inversion:  \n","\n","    plot_pr_list = rev_np_pr\n","    h_plot_pr_list = h_rev_np_pr  # hedge\n","\n","else:\n","\n","    plot_pr_list = np_pr\n","    h_plot_pr_list = h_np_pr\n","\n","\n","\n","#         select plot columns       #\n","# basic_cols = [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14] # you don't need to touch\n","\n","# sar_cols = [15, 18] # 15 ~ 19\n","# ichimoku_cols = [20, 21]  # 20 ~ 29\n","# # ichimoku_cols = [22, 23]  # 20 ~ 29\n","# ichimoku_cols2 = [22, 23]  # 20 ~ 29\n","# macd_cols = [30]  # 30 ~ 34\n","\n","# print(res_df.columns[basic_cols])\n","# break\n","\n","basic_list = ['open', 'high', 'low', 'close', 'minor_ST1_Up', 'minor_ST1_Down',\n","       'minor_ST2_Up', 'minor_ST2_Down', 'minor_ST3_Up', 'minor_ST3_Down',\n","       'middle_line', 'min_upper', 'max_lower']\n","# senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3', 'senkou_a4', 'senkou_a5']\n","# senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3', 'senkou_b4', 'senkou_b5']\n","senkoua_list = ['senkou_a1', 'senkou_a2', 'senkou_a3']\n","senkoub_list = ['senkou_b1', 'senkou_b2', 'senkou_b3']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","# sar_list = ['sar1', 'sar2', 'sar3', 'sar4', 'sar5']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","sar_list = ['sar1', 'sar2', 'sar3']\n","\n","#     -------------- under price phase --------------    #\n","macd_list = ['macd_hist1', 'macd_hist2', 'macd_hist3', 'macd_hist4', 'macd_hist5']\n","trix_list = ['trix1', 'trix2', 'trix3', 'trix4', 'trix5']\n","stoch_list = ['stoch']\n","fisher_list = ['fisher']\n","cctbbo_list = ['cctbbo']\n","\n","\n","#       \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols + ichimoku_cols2\n","# input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + trix_list\n","input_colname = basic_list + senkoua_list + senkoub_list + sar_list + macd_list + stoch_list + fisher_list + cctbbo_list\n","price_colname = basic_list + senkoua_list + senkoub_list + sar_list \n","# input_cols = basic_cols + sar_cols + ichimoku_cols + macd_cols\n","\n","\n","if short_ver:\n","  nontp_indexs = nontp_short_indexs\n","  nontp_liqd_list = nontp_short_liqd_list\n","  nontp_pr_list = nontp_short_pr_list\n","  nontp_ep = nontp_short_ep_list\n","else:\n","  nontp_indexs = nontp_long_indexs\n","  nontp_liqd_list = nontp_long_liqd_list\n","  nontp_pr_list = nontp_long_pr_list\n","  nontp_ep = nontp_long_ep_list\n","\n","\n","for t_i, i in enumerate(nontp_indexs):\n","\n","  j = len(res_df) - 1\n","\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if i <= 4860:\n","  # if i == 1536:\n","  # # if 1800 < i < 1860:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if tp_state_list[t_i] != 'd-open':\n","  #   continue\n","\n","  # if (entry[i] == -1) and res_df['close'].iloc[i - 1] > upper_ep.iloc[i]:\n","  #   pass\n","  # else:\n","  #   continue\n","\n","  # if plot_pr_list[t_i] > 0.5:\n","  # if plot_pr_list[t_i] > 1.0:\n","  # # if plot_pr_list[t_i] < 1.0:\n","  #   continue\n","\n","  # plot_df = res_df.iloc[i - prev_plotsize:j + 1, input_cols]\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1][input_colname]\n","\n","\n","  #       keep off-color st with another variable         #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","\n","  # y_max = np.max(plot_df.iloc[:, [4, 6, 8]])\n","  # y_min = np.min(plot_df.iloc[:, [5, 7, 9]])\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  \n","  # y_max = max(np.max(plot_df.iloc[:, [4, 6, 8]]))\n","  # y_min = min(np.min(plot_df.iloc[:, [5, 7, 9]]))\n","  \n","  y_max = max(np.max(plot_df[price_colname]))\n","  y_min = min(np.min(plot_df[price_colname]))\n","  # print(\"y_max, y_min :\", y_max, y_min)\n","  # break\n","\n","  plot_df[\"off_color_upper_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, plot_df.iloc[:, [4]], np.nan)\n","  plot_df[\"off_color_upper_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, plot_df.iloc[:, [6]], np.nan)\n","  plot_df[\"off_color_upper_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, plot_df.iloc[:, [8]], np.nan)\n","  plot_df[\"off_color_lower_st1\"] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, plot_df.iloc[:, [5]], np.nan)\n","  plot_df[\"off_color_lower_st2\"] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, plot_df.iloc[:, [7]], np.nan)\n","  plot_df[\"off_color_lower_st3\"] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, plot_df.iloc[:, [9]], np.nan)\n","\n","\n","  #       replace st values with np.nan, using st trend     #\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  plot_upper_middle = (plot_df['middle_line'] + plot_df['min_upper']) / 2\n","  plot_lower_middle = (plot_df['middle_line'] + plot_df['max_lower']) / 2\n","\n","  plot_short_tp = short_tp.iloc[i - prev_plotsize:j + 1]\n","  plot_long_tp = long_tp.iloc[i - prev_plotsize:j + 1]  \n","\n","\n","\n","  # fig = plt.figure(figsize=(12, 16))\n","  fig = plt.figure(figsize=(12, 16))\n","  \n","  gs = gridspec.GridSpec(nrows=3, # row 몇 개 \n","                       ncols=1, # col 몇 개 \n","                       height_ratios=[3, 1, 1]\n","                      )\n","  \n","  # fig = plt.figure(figsize=(8, 12))\n","  # ax = fig.add_subplot(111)\n","  # ax = fig.add_subplot(311)\n","  ax = fig.add_subplot(gs[0])\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.step(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  # plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper on color\n","  plt.step(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower on color\n","  plt.step(plot_df.values[:, [10]], 'fuchsia', alpha=1)  # middle\n","  \n","  plt.step(plot_df.values[:, -6:-3], 'r', alpha=1, linestyle=':')  # upper off color\n","  plt.step(plot_df.values[:, -3:], 'b', alpha=1, linestyle=':')  # lower off color\n","\n","\n","\n","  # plt.step(np.arange(len(plot_df)), plot_upper_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","  # plt.step(np.arange(len(plot_df)),plot_lower_ep.values, alpha=1, linestyle='--', color='y')  # ep\n","\n","  plt.step(np.arange(len(plot_df)), plot_upper_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","  plt.step(np.arange(len(plot_df)), plot_lower_middle.values, alpha=1, linestyle='--', color='g')  # 2nd middle\n","\n","  # plt.step(np.arange(len(plot_df)), plot_short_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","  # plt.step(np.arange(len(plot_df)), plot_long_tp.values, alpha=1, linestyle=':', color='y')  # tp\n","\n","\n","\n","  # ---------------------- indicator part ---------------------- #\n","  \n","  #               sar               #\n","  alpha = 1\n","  markersize = 5\n","  for sar in sar_list:\n","    plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","    markersize += 1\n","    alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  alpha = 0.7\n","  for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","                      where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","    plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","                      where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","    alpha -= 0.05\n","  \n","  # ------------------------------------------------------------- #\n","\n","\n","  #       ep & tp     #\n","  if i != initial_i:\n","    plt.axvline(prev_plotsize - (i - initial_i), alpha=0.5, linestyle='--')\n","  plt.axvline(prev_plotsize, alpha=0.5, linestyle='--')\n","  plt.axhline(nontp_ep[t_i], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='lime')  # ep line axhline\n","\n","  # for sub_i in range(len(ep_tp_list[t_i][1])):\n","  #   plt.axhline(ep_tp_list[t_i][1][sub_i], linestyle='-', xmin=0.75 + 0.05 * (sub_i + 1) , xmax=1, linewidth=3, color='lime')  # tp line axhline\n","    # plt.axhline(ep_tp_list[t_i][1], linestyle='-', xmin=0.9, xmax=1, linewidth=3)  # tp line axhline    \n","\n","  #         hedge ep & tp         #\n","  # h_i = h_trade_list[t_i][1]\n","  # if h_i is not None:\n","  #   plt.axvline(prev_plotsize + (h_i - i), linestyle='--')\n","  #   plt.axhline(h_ep_tp_list[t_i][0], linestyle='-', xmin=0.75, xmax=1, linewidth=3, color='magenta')  # ep line axhline\n","  #   plt.axhline(h_ep_tp_list[t_i][1], linestyle='-', xmin=0.85, xmax=1, linewidth=3, color='magenta')  # tp line axhline\n","\n","  \n","  #         check pr        #\n","  plt.title(\"%s ~ %s -> liqd : %.2f\\npr : %.2f\" % (i, j, nontp_liqd_list[t_i], nontp_pr_list[t_i]))\n","\n","  #           y lim         #\n","  plt.ylim(y_min, y_max)\n","\n","\n","  # #           macd          #\n","  # # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(313)\n","  plt.subplot(gs[1])\n","  alpha = 1\n","  for stoch in stoch_list:\n","    plt.step(np.arange(len(plot_df)), plot_df[stoch].values, 'g', alpha=alpha)\n","    # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","    alpha -= 0.2\n","  plt.axvline(prev_plotsize, linestyle='--')\n","  plt.axhline(50, linestyle='--')\n","  plt.axhline(stoch_upper, linestyle='--')\n","  plt.axhline(stoch_lower, linestyle='--')\n","\n","\n","\n","  # ---------------------- plot ---------------------- #\n","\n","  plt.show()\n","  # plt.draw()\n","  plt.close()\n","  print()\n","\n","  # break\n"]},{"cell_type":"markdown","metadata":{"id":"-g7YY5BvMcLS"},"source":["## show detail values"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":255,"status":"ok","timestamp":1625228960601,"user":{"displayName":"7th June","photoUrl":"","userId":"08178289703395036410"},"user_tz":-540},"id":"5TxQ3rDnKMa7","outputId":"422ac214-8c88-4f39-ec3a-7c823574f6da"},"outputs":[{"name":"stdout","output_type":"stream","text":["upper_ep.iloc[i] : 2348.266954813089\n","short_tp.iloc[j] : 2205.609333246829\n"]}],"source":["i, j = 27267, 27268\n","print(\"upper_ep.iloc[i] :\", upper_ep.iloc[i])\n","print(\"short_tp.iloc[j] :\", short_tp.iloc[j])"]},{"cell_type":"markdown","metadata":{"id":"7AIl6EBuZNOL"},"source":["## none plot off-color st"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yaVxrNGzZgrF"},"outputs":[],"source":["prev_plotsize = 50\n","\n","for t_i, (i, j) in enumerate(trade_list):\n","  # print(i, j)\n","\n","  if not(i >= prev_plotsize):\n","    continue\n","\n","  # if pr_list[t_i] >= 1:\n","  #   continue\n","\n","  plot_df = res_df.iloc[i - prev_plotsize:j + 1, [0, 1, 2, 3, 5, 6, 8, 9, 11, 12, 14, 15, 16]]\n","\n","  #       replace st values with np.nan, using st trend     #\n","  st_trend_plot_df = res_df.iloc[i - prev_plotsize:j + 1, [7, 10, 13]]\n","  plot_df.iloc[:, [4]] = np.where(st_trend_plot_df.iloc[:, [0]] == 1, np.nan, plot_df.iloc[:, [4]])\n","  plot_df.iloc[:, [6]] = np.where(st_trend_plot_df.iloc[:, [1]] == 1, np.nan, plot_df.iloc[:, [6]])\n","  plot_df.iloc[:, [8]] = np.where(st_trend_plot_df.iloc[:, [2]] == 1, np.nan, plot_df.iloc[:, [8]])\n","  plot_df.iloc[:, [5]] = np.where(st_trend_plot_df.iloc[:, [0]] == -1, np.nan, plot_df.iloc[:, [5]])\n","  plot_df.iloc[:, [7]] = np.where(st_trend_plot_df.iloc[:, [1]] == -1, np.nan, plot_df.iloc[:, [7]])\n","  plot_df.iloc[:, [9]] = np.where(st_trend_plot_df.iloc[:, [2]] == -1, np.nan, plot_df.iloc[:, [9]])\n","\n","\n","  plot_upper_ep = upper_ep.iloc[i - prev_plotsize:j + 1]\n","  plot_lower_ep = lower_ep.iloc[i - prev_plotsize:j + 1]\n","\n","  fig = plt.figure(figsize=(8, 6))\n","  ax = fig.add_subplot(111)\n","\n","  # fig.show()\n","  # fig.canvas.draw()\n","\n","  temp_ohlc = plot_df.values[:, :4]\n","  index = np.arange(len(temp_ohlc))\n","  candle = np.hstack((np.reshape(index, (-1, 1)), temp_ohlc))\n","  mf.candlestick_ohlc(ax, candle, width=0.5, colorup='r', colordown='b')\n","\n","  # print(plot_df.values[:, 4:])\n","  plt.plot(plot_df.values[:, [4, 6, 8]], 'r', alpha=1)  # upper\n","  plt.plot(plot_df.values[:, [5, 7, 9]], 'b', alpha=1)  # lower\n","  plt.plot(plot_df.values[:, [10]], 'g', alpha=1)  # middle\n","\n","  plt.plot(plot_df.values[:, [11]], 'c*', alpha=1, markersize=5)  # sar mic\n","  plt.plot(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  plt.plot(plot_upper_ep.values, alpha=1, linestyle='--')  # ep\n","  plt.plot(plot_lower_ep.values, alpha=1, linestyle='--')  # ep\n","\n","  plt.axvline(prev_plotsize, linestyle='--')\n","\n","  plt.title(\"%s ~ %s -> %.5f\" % (i, j, pr_list[t_i]))\n","  plt.show()\n","  # plt.draw()\n","  plt.close()"]}]}