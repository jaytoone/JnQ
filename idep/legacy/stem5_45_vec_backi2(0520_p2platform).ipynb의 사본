{"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"6rmQpzEGXfCw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1653016422694,"user_tz":-540,"elapsed":16656,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"52f8d625-13b5-44d4-9320-28043e21a3b6"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import os, sys\n","\n","current_path = '/content/drive/My Drive/Colab Notebooks/JnQ/'\n","\n","os.chdir(current_path)\n","\n","strat_pkg = 'IDE'\n","\n","mpl_finance_path = '/content/drive/My Drive/Colab Notebooks/JnQ/mpl_finance'\n","ta_lib_path = '/content/drive/My Drive/Colab Notebooks/JnQ/ta_lib'\n","\n","if mpl_finance_path not in sys.path:\n","\n","  try:\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ')\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/{}'.format(strat_pkg))\n","    sys.path.insert(0, '/content/drive/My Drive/Colab Notebooks/JnQ/funcs')\n","    sys.path.insert(0, mpl_finance_path)\n","    sys.path.insert(0, ta_lib_path)\n","    \n","  except Exception as e:\n","    print(e)"]},{"cell_type":"markdown","metadata":{"id":"8uqYv5StTazo"},"source":["# requirements"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"9qGt60DKTZmf","executionInfo":{"status":"ok","timestamp":1653016438891,"user_tz":-540,"elapsed":16199,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# !pip install zigzag --target=$'/content/drive/My Drive/Colab Notebooks/JnQ/zigzag'\n","# !pip install talib-binary --target=$'/content/drive/My Drive/Colab Notebooks/JnQ/ta_lib'\n","# !pip install findiff\n","\n","# import nvstrings, nvcategory, cudf\n","# import cuml\n","# import cudf\n","\n","import os\n","import talib\n","from funcs.funcs_idep import *\n","from funcs.funcs_duration_v2 import *\n","from funcs.funcs_plot_check import *\n","from funcs.funcs_pairing import *\n","# from funcs.funcs_ide import *\n","# from funcs.funcs_indicator_candlescore import *\n","from funcs.funcs_indicator import *\n","from funcs.funcs_trader import *\n","from ast import literal_eval\n","import logging\n","import importlib\n","\n","import mpl_finance as mf\n","import matplotlib.pyplot as plt\n","from matplotlib import gridspec\n","# from zigzag import *\n","# from tqdm.notebook import tqdm\n","\n","# import IPython\n","# import IPython.display\n","\n","import numpy as np\n","# import jax.numpy as np\n","import pandas as pd\n","# import seaborn as sns\n","# import tensorflow as tf\n","# from scipy import stats, signal\n","\n","import pickle\n","import shutil\n","import json\n","from easydict import EasyDict\n","import copy\n","\n","import datetime\n","from datetime import datetime\n","import random\n","import time\n","# import warnings\n","\n","# warnings.simplefilter(\"ignore\", category=RuntimeWarning)\n","\n","np.seterr(invalid=\"ignore\")\n","np.set_printoptions(suppress=True)\n","np.set_printoptions(linewidth=2000) \n","\n","pd.set_option('mode.chained_assignment',  None)\n","\n","pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)"]},{"cell_type":"markdown","metadata":{"id":"Ic1mfmwWCIBu"},"source":["# makeset - with to_htf dataframes"]},{"cell_type":"markdown","metadata":{"id":"AUSBU7T8Suzi"},"source":["## sync_check_make"]},{"cell_type":"code","source":["\n","def bb_level_v2(res_df, itv, period):\n","\n","    bb_base = res_df['bb_base_{}{}'.format(itv, period)].to_numpy()\n","\n","    bb_upper2 = 'bb_upper2_{}{}'.format(itv, period)\n","    bb_lower2 = 'bb_lower2_{}{}'.format(itv, period)\n","    bb_upper3 = 'bb_upper3_{}{}'.format(itv, period)\n","    bb_lower3 = 'bb_lower3_{}{}'.format(itv, period)\n","\n","    level_gap = res_df['bb_upper_{}{}'.format(itv, period)].to_numpy() - bb_base\n","\n","    res_df[bb_upper2] = bb_base + level_gap * 2\n","    res_df[bb_lower2] = bb_base - level_gap * 2\n","\n","    res_df[bb_upper3] = bb_base + level_gap * 3\n","    res_df[bb_lower3] = bb_base - level_gap * 3\n","\n","    return res_df"],"metadata":{"id":"kuf6ZhccgRj9"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QmhLikYlSuzi"},"outputs":[],"source":["def sync_check_make(df):\n","\n","    make_itv_list = ['3T', '5T', '15T', '30T', 'H', '4H', 'D']\n","    offset_list = ['1h', '1h', '1h', '1h', '1h', '1h', '9h']\n","\n","    assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        \n","    htf_df_list = [to_htf(df, itv_=itv_, offset=offset_) for itv_, offset_ in zip(make_itv_list, offset_list)]\n","\n","    df_3T, df_5T, df_15T, df_30T, df_H, df_4H, df_D = htf_df_list\n","\n","    for htf_df in htf_df_list:\n","      print(\"{} -> \".format(pd.infer_freq(htf_df.index)), htf_df.tail(1))\n","\n","    # heikinashi_v2(res_df_)\n","    # h_candle_v3(df, df_5T, '5T')\n","    # df = h_candle_v4(df, df_5T)\n","    # df = h_candle_v4(df, df_15T)\n","    # df = h_candle_v4(df, df_30T)\n","    # df = h_candle_v4(df, 'D')\n","\n","    # df = candle_pattern_pkg(df, df_5T)\n","    # df = candle_pattern_pkg(df, df_30T)\n","    # df = candle_pattern_pkg(df, df_H)\n","    # df = candle_pattern_pkg(df, df_4H)\n","\n","    \n","    # df = enough_space(df, '15T', 1)\n","    \n","    # --------------- dc --------------- #  \n","    dc_period = 1\n","    # df = donchian_channel_v4(df, dc_period)\n","    # df = dc_line(df, df_5T, '5T')  # join 사용시에만 return df 허용함\n","    # df = dc_line(df, df_15T, '15T')\n","    # df = dc_line_v2(df, df_H, 'H', dc_period=5)\n","\n","    # df = dc_line_v4(df, df_15T, dc_period=dc_period)\n","    # print(\"dc phase done\")\n","\n","    # --------------- bb --------------- #  \n","    bb_period = 20\n","\n","    # upper, base, lower = talib.BBANDS(res_df_.close, timeperiod=20, nbdevup=1, nbdevdn=1, matype=0)\n","    \n","    # df = bb_width_v3(df, period=60, multiple=1)\n","    # df = bb_line(df, df_5T, '5T')\n","    # df = bb_line_v3(df, df_15T, 60)\n","\n","    # df = bb_level_v2(df, 'T', 60)\n","    # print(\"bb phase done\")\n","\n","    c_itv = '5T'\n","\n","    # df =  wick_ratio(df, c_itv)\n","    df =  wick_ratio(df, c_itv)\n","\n","    bb_itv= 'T'\n","\n","    # df = candle_range_ratio(df, c_itv, bb_itv, bb_period)\n","    # # candle_pumping_ratio(df, c_itv, bb_itv, bb_period)\n","\n","    dc_itv= '15T'\n","    dc_period = 4\n","    # df = candle_pumping_ratio_v2(df, c_itv, dc_itv, dc_period)\n","    # print(\"candle_pumping_ratio_v2 phase done\")\n","\n","    # df = dc_over_body_ratio(df, c_itv, dc_itv, dc_period)\n","    # print(\"dc_over_body_ratio phase done\")\n","\n","    # df = body_rel_ratio(df, c_itv)\n","    # print(\"body_rel_ratio phase done\")\n","\n","    # --------------- cbline --------------- #    \n","    # cloud_bline(df_3T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_3T, [-1]), how='inner')\n","    # # cloud_bline(df_5T, 20)\n","    # # df = df.join(to_lower_tf_v2(df, df_5T, [-1]), how='inner')\n","    # cloud_bline(df_15T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_15T, [-1]), how='inner')\n","    # cloud_bline(df_30T, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_30T, [-1]), how='inner')\n","    # cloud_bline(df_H, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_H, [-1]), how='inner')\n","    # cloud_bline(df_4H, 20)\n","    # df = df.join(to_lower_tf_v2(df, df_4H, [-1]), how='inner')\n","\n","    # print(\"cbline phase done\")\n","\n","\n","\n","    # --------------- sd_dc --------------- #\n","    # df = sd_dc(df, 20, 40)\n","    # df = sd_dc(df, 20, 20)\n","    # df = sd_dc(df_5T, 20, 40, df)\n","    # df = sd_dc(df_H, 20, 40, df)\n","\n","    # print(\"sd_dc phase done\")\n","\n","    # --------------- imb_ratio --------------- #\n","    # imb_ratio(df, '5T')\n","    # imb_ratio_v3(df, \"5T\")\n","    # imb_ratio_v4(df, \"5T\")\n","\n","    # imb_ratio(df, 'H')\n","    # imb_ratio_v2(df, '5T')\n","    \n","    # print(\"imb_ratio phase done\")\n","\n","    # --------------- rel_abs_ratio --------------- #\n","    # rel_abs_ratio(df, '5T', norm_period=120)\n","\n","    # --------------- normalize data --------------- #\n","    # itv = 'T'\n","    # lb_period = 15\n","    # target_col = 'close_{}{}'.format(itv, lb_period)\n","    # target_data = df['close'].diff(lb_period).to_numpy()\n","    # norm_data(df, target_data, target_col)    \n","    # print(\"normalize data phase done !\")\n","\n","    # --------------- lucid sar --------------- #\n","    # lucid_sar_v2(df)\n","    # lucid_sar_v2(df_3T)\n","    # df = df.join(to_lower_tf_v2(df, df_3T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_5T)\n","    # df = df.join(to_lower_tf_v2(df, df_5T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_15T)\n","    # df = df.join(to_lower_tf_v2(df, df_15T, [-2, -1]), how='inner')\n","    # lucid_sar_v2(df_30T)\n","    # df = df.join(to_lower_tf_v2(df, df_30T, [-2, -1]), how='inner')       \n","\n","    # print(\"sar phase done\")\n","\n","    # --------------- supertrend --------------- #\n","    # df = st_price_line(df, df_3T, '3m')\n","    # df = st_price_line(df, df_5T, '5m')\n","    # df = st_price_line(df, df_15T, '15m')\n","    # df = st_price_line(df, df_30T, '30m')\n","    # df = st_price_line(df, df_H, '1h')\n","    # df = st_price_line(df, df_4H, '4h')\n","\n","    # print(\"supertrend phase done\")\n","\n","    # --------------- rsi --------------- #  \n","    # df['rsi_1m'] = rsi(df, 14)    \n","    # df_5T['rsi_5m'] = rsi(df_5T, 14)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['rsi_5m']))\n","    \n","    # print(\"rsi phase done\")\n","\n","\n","    # --------------- cci --------------- #  \n","    # df['cci_1m'] = cci(df, 20)\n","\n","    # print(\"cci phase done\")\n","\n","    # --------------- ema --------------- #      \n","    # df_5T['ema_5m'] = ema(df_5T['close'], 195)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1]), columns=['ema_5m']))\n","    \n","    # print(\"ema phase done\")\n","        \n","    # --------------- stochastic --------------- #\n","    # df['stoch_1m'] = stoch(df, 13, 3, 3)\n","\n","    # df_5T['stoch'] = stoch(df_5T, 13, 3, 3)\n","    # df = df.join(pd.DataFrame(index=df.index, data=to_lower_tf_v2(df, df_5T, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","    # print(\"stoch phase done\")\n","\n","\n","    return df\n"]},{"cell_type":"markdown","metadata":{"id":"mEKyVbHWSuzi"},"source":["## make & save res_df (concat 생각하면, timeindex sync 맞춰야함)"]},{"cell_type":"markdown","metadata":{"id":"VdukVo5-Suzj"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"khKb9nhlSuzj"},"outputs":[],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  if '2021-07-01'.upper() not in file_list[i]:\n","  # if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    excel_name = key.replace(\".xlsx\", \"_st1h_backi2.xlsx\")\n","    excel_path = save_path + excel_name\n","\n","    if excel_name in exist_list:\n","      print(excel_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","    latest_open_index = sorted(open_indexes)[-1]\n","    \n","    open_ts = datetime.timestamp(latest_open_index)\n","    latest_open_index_1m = datetime.fromtimestamp(open_ts + a_day)\n","\n","    #   str 로 만들어 접근하면 불가함  #\n","    end_index = pd.to_datetime(str(df.index[-1]).split(\" \")[0] + \" 08:59:59.999000\")\n","    # break\n","\n","    sliced_df = df.loc[latest_open_index_1m:end_index] # to_lower_tf 의 기준 ltf\n","    sliced_second_df = second_df.loc[latest_open_index:end_index]\n","    sliced_third_df = third_df.loc[latest_open_index:end_index]\n","    sliced_fourth_df = fourth_df.loc[latest_open_index:end_index]\n","    sliced_fifth_df = fifth_df.loc[latest_open_index:end_index]\n","\n","    print(\"sliced index\")\n","    print(sliced_df.index[[0, -1]])\n","    print(sliced_second_df.index[[0, -1]])\n","    print(sliced_third_df.index[[0, -1]])\n","    print(sliced_fourth_df.index[[0, -1]])\n","    print(sliced_fifth_df.index[[0, -1]])\n","\n","    try:\n","      sliced_sixth_df = sixth_df.loc[latest_open_index:end_index]\n","      sliced_seventh_df = seventh_df.loc[latest_open_index:end_index]\n","\n","      print(sliced_sixth_df.index[[0, -1]])\n","      print(sliced_seventh_df.index[[0, -1]])\n","\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df, sliced_sixth_df, sliced_seventh_df)\n","    \n","    except:\n","      res_df = sync_check(sliced_df, sliced_second_df, sliced_third_df, sliced_fourth_df, sliced_fifth_df)\n","\n","\n","\n","    res_df.to_excel(excel_path)\n","    print(excel_name, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"Bw5JibDKSuzj"},"source":["### xlsx to feather"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VA-_gcA7Suzj"},"outputs":[],"source":["pd.set_option('display.max_rows', 500)\n","pd.set_option('display.max_columns', 500)\n","pd.set_option('display.width', 1000)\n","\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","exist_list = os.listdir(save_path)\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  # if '2021-04-30'.upper() not in file_list[i]:\n","  # if '2021-07-01'.upper() not in file_list[i]:\n","  if '2021-10-10'.upper() not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","\n","    feather_name = key.replace(\".xlsx\", \".ftr\")\n","    # feather_path = save_path + feather_name\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    open_indexes = []\n","    \n","    df = pd.read_excel(date_path + key, index_col=0)\n","    second_df = pd.read_excel(date_path2 + key, index_col=0)\n","    third_df = pd.read_excel(date_path3 + key, index_col=0)\n","    fourth_df = pd.read_excel(date_path4 + key, index_col=0)\n","    fifth_df = pd.read_excel(date_path5 + key, index_col=0)\n","    \n","    print(df.index[[0, -1]])\n","    print(second_df.index[[0, -1]])\n","    print(third_df.index[[0, -1]])\n","    print(fourth_df.index[[0, -1]])\n","    print(fifth_df.index[[0, -1]])\n","\n","    open_indexes.append(df.index[0])\n","    open_indexes.append(second_df.index[0])\n","    open_indexes.append(third_df.index[0])\n","    open_indexes.append(fourth_df.index[0])\n","    open_indexes.append(fifth_df.index[0])\n","    \n","    try:\n","      #     Todo    #\n","      #      1. 1m 마지막 timeindex 의 date 기준, 08:59:59.999000 를 last timestamp 로 설정\n","      #      2. 시작 timestamp 는 모든 tf 의 가장 최근 시작 index,\n","      #       a. 1m 의 시작 timeindex 는 최소, htf 의 시작 timeindex 보다 interval 만큼 앞서야함\n","      #         i. 따라서 1m open_index, latest_open_index + 1d 를 하면 댐\n","      #           1. timestamp 으로 변환후 1day 를 더하고 datetime 으로 변환\n","      sixth_df = pd.read_excel(date_path6 + key, index_col=0)\n","      seventh_df = pd.read_excel(date_path7 + key, index_col=0)\n","\n","      print(sixth_df.index[[0, -1]])\n","      print(seventh_df.index[[0, -1]])\n","      print()\n","\n","      open_indexes.append(sixth_df.index[0])\n","      open_indexes.append(seventh_df.index[0])\n","\n","    except Exception as e:\n","      print(e)\n","\n","\n","    df.reset_index().to_feather(date_path + feather_name, compression='lz4')\n","    second_df.reset_index().to_feather(date_path2 + feather_name, compression='lz4')\n","    third_df.reset_index().to_feather(date_path3 + feather_name, compression='lz4')\n","    fourth_df.reset_index().to_feather(date_path4 + feather_name, compression='lz4')\n","    fifth_df.reset_index().to_feather(date_path5 + feather_name, compression='lz4')\n","    sixth_df.reset_index().to_feather(date_path6 + feather_name, compression='lz4')\n","    seventh_df.reset_index().to_feather(date_path7 + feather_name, compression='lz4')\n","\n","    print(\"xlsx converted to feather !\")\n","    "]},{"cell_type":"markdown","metadata":{"id":"Pe0QpnORSuzk"},"source":["### add itv_name to ftr"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M-gl30KxSuzk"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","# dir_path = \"bbdc3m_backi2\"\n","# date = '2021-10-10'\n","date = '2021-07-01'\n","\n","db_path = './candlestick_concated/database_bn/non_cum/%s/' % date\n","os.makedirs(os.path.join(db_path), exist_ok=True)\n","\n","# exist_list = os.listdir(os.path.join(save_path, dir_path))\n","# break\n","\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","        \n","    df = shutil.copy(date_path + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n","    second_df = shutil.copy(date_path2 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval2))\n","    third_df = shutil.copy(date_path3 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval3))\n","    fourth_df = shutil.copy(date_path4 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval4))\n","    fifth_df = shutil.copy(date_path5 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval5))\n","    sixth_df = shutil.copy(date_path6 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval6))\n","    seventh_df = shutil.copy(date_path7 + key, db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval7))\n","\n","    print(\"copied to\" + db_path + key.replace(\".ftr\", \"_%s.ftr\" % interval))\n"]},{"cell_type":"markdown","metadata":{"id":"4oZ1ohTtSuzk"},"source":["### feather ver. (database to res_df)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vgVHpnUsSuzk"},"outputs":[],"source":["# db_path = './candlestick_concated/database_ub/' # upbit\n","db_path = './candlestick_concated/database_bn/'   # binance\n","\n","save_path = './candlestick_concated/res_df/'\n","\n","save_dir_path = \"bb1d_backi2\"\n","date = '2022-02-17'\n","\n","# concat_path = 'noncat' # 새로운 cols 를 기존 cum/concat 에 붙이려는 경우\n","concat_path = 'concat'\n","cum_path = \"cum\"\n","# cum_path = \"non_cum\"  # non_cum 으로 진행하는 경우, row concat 용도이기 때문에 noncat -> concat 으로 변경 (base cols 를 모두 담고 있음)\n","\n","load_path = os.path.join(db_path, cum_path, date)\n","save_path = os.path.join(save_path, save_dir_path, concat_path, cum_path, date)\n","\n","os.makedirs(save_path, exist_ok=True)\n","\n","file_list = os.listdir(load_path)\n","exist_list = os.listdir(save_path)\n","# break\n","\n","a_day = 3600 * 24\n","\n","for i in tqdm(range(len(file_list))):\n","\n","  keys = [file_list[i]]\n","\n","  # if 'neo'.upper() not in file_list[i]:\n","    # continue\n","\n","  if date not in file_list[i]:\n","    continue\n","\n","\n","  for key in keys:      \n","\n","    # if 'eth'.upper() not in key:\n","    #   continue\n","    # print(key)\n","    \n","    if \".ftr\" not in key:\n","      continue\n","\n","    if \"_1m\" not in key:\n","      continue\n","\n","    # feather_name = key.replace(\".ftr\", \"_%.ftr\" % save_dir_path)\n","    feather_name = key.replace(\"_1m\", \"\")\n","    feather_path = os.path.join(save_path, feather_name)\n","\n","    if feather_name in exist_list:\n","      print(feather_name, \"already exist !\")\n","      continue\n","    \n","    df = pd.read_feather(os.path.join(load_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    res_df = sync_check_make(df)\n","\n","    res_df.reset_index().to_feather(feather_path, compression='lz4')\n","    print(feather_path, \"saved succesfully !\")"]},{"cell_type":"markdown","metadata":{"id":"YxCPUzoyidwH"},"source":["#### just add col to loaded df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"odqVwQHpYo1M","colab":{"base_uri":"https://localhost:8080/","height":602},"executionInfo":{"status":"ok","timestamp":1652066331412,"user_tz":-540,"elapsed":2108,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"90cf9151-9050-4f0c-fa54-9f9a9a9e38bb"},"outputs":[{"output_type":"stream","name":"stdout","text":["3T ->                          open     high      low    close\n","index                                                  \n","2022-04-27 08:45:00  2803.55  2803.97  2799.26  2800.43\n","5T ->                          open     high      low    close\n","index                                                  \n","2022-04-27 08:45:00  2803.55  2803.97  2799.26  2800.43\n","15T ->                          open     high      low    close\n","index                                                  \n","2022-04-27 08:45:00  2803.55  2803.97  2799.26  2800.43\n","30T ->                          open     high      low    close\n","index                                                  \n","2022-04-27 08:30:00  2783.61  2806.93  2780.79  2800.43\n","H ->                          open     high      low    close\n","index                                                  \n","2022-04-27 08:00:00  2819.33  2822.77  2761.27  2800.43\n","4H ->                          open    high      low    close\n","index                                                 \n","2022-04-27 05:00:00  2837.34  2855.0  2761.27  2800.43\n","D ->                          open    high      low    close\n","index                                                 \n","2022-04-26 09:00:00  3006.12  3043.0  2761.27  2800.43\n"]},{"output_type":"execute_result","data":{"text/plain":["                         bb_upper_T60  bb_lower_T60  bb_base_T60  bb_upper2_T60  bb_lower2_T60  bb_upper3_T60  bb_lower3_T60  upper_wick_ratio_5T  lower_wick_ratio_5T  candle_updown_5T\n","index                                                                                                                                                                                   \n","2022-04-27 08:41:59.999   2823.126867   2790.340133  2806.733500    2839.520235    2773.946765    2855.913602    2757.553398             0.354545             0.640260                 0\n","2022-04-27 08:42:59.999   2822.498326   2790.088008  2806.293167    2838.703485    2773.882848    2854.908644    2757.677689             0.354545             0.640260                 0\n","2022-04-27 08:43:59.999   2821.914551   2789.914116  2805.914333    2837.914768    2773.913898    2853.914986    2757.913681             0.354545             0.640260                 0\n","2022-04-27 08:44:59.999   2821.473171   2789.742162  2805.607667    2837.338676    2773.876657    2853.204181    2758.011153             0.354545             0.640260                 0\n","2022-04-27 08:45:59.999   2820.842501   2789.526499  2805.184500    2836.500502    2773.868498    2852.158503    2758.210497             0.089172             0.248408                 0"],"text/html":["\n","  <div id=\"df-882399d2-6441-4f90-a90e-e91ecbb1b52a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>bb_upper_T60</th>\n","      <th>bb_lower_T60</th>\n","      <th>bb_base_T60</th>\n","      <th>bb_upper2_T60</th>\n","      <th>bb_lower2_T60</th>\n","      <th>bb_upper3_T60</th>\n","      <th>bb_lower3_T60</th>\n","      <th>upper_wick_ratio_5T</th>\n","      <th>lower_wick_ratio_5T</th>\n","      <th>candle_updown_5T</th>\n","    </tr>\n","    <tr>\n","      <th>index</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2022-04-27 08:41:59.999</th>\n","      <td>2823.126867</td>\n","      <td>2790.340133</td>\n","      <td>2806.733500</td>\n","      <td>2839.520235</td>\n","      <td>2773.946765</td>\n","      <td>2855.913602</td>\n","      <td>2757.553398</td>\n","      <td>0.354545</td>\n","      <td>0.640260</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-27 08:42:59.999</th>\n","      <td>2822.498326</td>\n","      <td>2790.088008</td>\n","      <td>2806.293167</td>\n","      <td>2838.703485</td>\n","      <td>2773.882848</td>\n","      <td>2854.908644</td>\n","      <td>2757.677689</td>\n","      <td>0.354545</td>\n","      <td>0.640260</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-27 08:43:59.999</th>\n","      <td>2821.914551</td>\n","      <td>2789.914116</td>\n","      <td>2805.914333</td>\n","      <td>2837.914768</td>\n","      <td>2773.913898</td>\n","      <td>2853.914986</td>\n","      <td>2757.913681</td>\n","      <td>0.354545</td>\n","      <td>0.640260</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-27 08:44:59.999</th>\n","      <td>2821.473171</td>\n","      <td>2789.742162</td>\n","      <td>2805.607667</td>\n","      <td>2837.338676</td>\n","      <td>2773.876657</td>\n","      <td>2853.204181</td>\n","      <td>2758.011153</td>\n","      <td>0.354545</td>\n","      <td>0.640260</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2022-04-27 08:45:59.999</th>\n","      <td>2820.842501</td>\n","      <td>2789.526499</td>\n","      <td>2805.184500</td>\n","      <td>2836.500502</td>\n","      <td>2773.868498</td>\n","      <td>2852.158503</td>\n","      <td>2758.210497</td>\n","      <td>0.089172</td>\n","      <td>0.248408</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-882399d2-6441-4f90-a90e-e91ecbb1b52a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-882399d2-6441-4f90-a90e-e91ecbb1b52a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-882399d2-6441-4f90-a90e-e91ecbb1b52a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}],"source":["res_df_ = sync_check_make(res_df_)  # suffix duplication 유의\n","res_df_.tail().iloc[:, -10:]\n","# res_df_.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3SKglsQCj5_x"},"outputs":[],"source":["test_df_ = sync_check_make(res_df_.iloc[-4000:])  # suffix duplication 유의\n","test_df_.tail().iloc[:, -10:]"]},{"cell_type":"code","source":["# ------ validation ------ #\n","# res_df_.cppr_15T.describe()\n","print((res_df_.open_15T.to_numpy() - res_df_.close_15T.to_numpy())[-10:])\n","print((res_df_.dc_upper_15T4.to_numpy() - res_df_.dc_lower_15T4.to_numpy())[-10:])"],"metadata":{"id":"gOQxwYqK0jCS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# np.where(res_df_.CDL3LINESTRIKE_15T) #.iloc[-1000:,]\n","\n","# CDL3LINESTRIKE = talib.CDL3LINESTRIKE(df_15T.open, df_15T.high, df_15T.low, df_15T.close)\n","for col in talib.get_function_groups()['Pattern Recognition']:  \n","  print(np.unique(res_df_[col + '_15T'].to_numpy(), return_counts=True))\n","\n","# CDLCLOSINGMARUBOZU = talib.CDLCLOSINGMARUBOZU(df_15T.open, df_15T.high, df_15T.low, df_15T.close)\n","# print(np.unique(CDLCLOSINGMARUBOZU.to_numpy(), return_counts=True))\n","# print(CDLCLOSINGMARUBOZU.tail(50))"],"metadata":{"id":"RmiB5VU5DN6B"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1071,"status":"ok","timestamp":1652066337627,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"XrgJPQRuisCa","outputId":"c3a01224-f5a8-442f-8300-805b0988100d"},"outputs":[{"output_type":"stream","name":"stdout","text":["./candlestick_concated/database_bn/cum/2022-04-27/2022-04-27 ETHUSDT_1m.ftr saved !\n"]}],"source":["# ------------ save current res_df ------------ #\n","ftr_path = os.path.join(save_path.replace(\"res_df\", \"database_bn\"), \"cum\", date)\n","ftr_full_path = os.path.join(ftr_path, key)\n","\n","res_df_.reset_index().to_feather(ftr_full_path, compression='lz4')  # key 잘 확인하고 저장\n","print(ftr_full_path, 'saved !')"]},{"cell_type":"markdown","metadata":{"id":"E0n53hflJbnp"},"source":["### htf candle check"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6xW0yugCWvGz"},"outputs":[],"source":["itv_list = ['3T', '5T', '15T', '30T', '1H', '4H']\n","comp_df_list = [second_df, third_df, fourth_df, fifth_df, sixth_df, seventh_df]\n","offset_list = ['1h', '2min', '2min', '2min', '2min', '2min']\n","# itv_list = ['4H']\n","# comp_df_list = [seventh_df]\n","\n","slice_len = 100\n","for itv_, comp_df_, offset in zip(itv_list, comp_df_list, offset_list):\n","\n","  print(\"itv_ :\", itv_)\n","\n","  # df = h_candle_v2(df, '3T')\n","  # end_ts = \n","  h_res_df = df.resample(itv_, offset=offset).agg({\n","          'open': 'first',\n","          'high': 'max',\n","          'low': 'min',\n","          'close': 'last'\n","      })\n","\n","  #   앞은 길이가 다르고, 뒤에서부터 잘라서 비교    #\n","  #   last_row 빼고는 동일, 4h 제외\n","  # print(df.tail())\n","  print(h_res_df.tail())\n","  print(comp_df_.tail())\n","  # # print(h_res_df.head())\n","  # # print(second_df.head())\n","\n","  # print(len(h_res_df))\n","  # print(len(second_df))\n","\n","  # print(h_res_df.values[-slice_len:])\n","  # print(second_df.iloc[:, :4].values[-slice_len:])\n","  # print(np.argwhere(h_res_df.values[-slice_len:] != comp_df_.iloc[:, :4].values[-slice_len:]))\n","  # print()\n","  break"]},{"cell_type":"markdown","metadata":{"id":"jTN3M842Suzl"},"source":["## concat & save new res_df"]},{"cell_type":"markdown","metadata":{"id":"MlFkpO1MSuzl"},"source":["### old (xlsx)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"U-3QkfbFSuzl"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","dict_name = \"2021-07-01 ETHUSDT_bb15m_backi2_res_dfs.pkl\"\n","\n","#     load with pickle    #\n","with open(save_path + dict_name, 'rb') as f:\n","  saved_res_df_dict = pickle.load(f)\n","\n","print(dict_name, \"loaded !\")\n","res_df_files = os.listdir(save_path)\n","res_df_files.reverse()\n","\n","print(res_df_files)\n","\n","res_df_dict = {}\n","\n","base_postfix = '_bb15m_backi2.xlsx'\n","new_postfix = '_st1h_backi2.xlsx'\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for k_i, key in enumerate(res_df_files):\n","\n","  if '2021-07-01'.upper() not in key:\n","  # if '2021-10-10'.upper() not in key:\n","    continue\n","\n","  # if \"link\".upper() not in key:\n","  # if \"btc\".upper() not in key:\n","  #   continue\n","\n","  if new_postfix not in key:\n","    continue\n","\n","  # if key in \n","\n","  if sample_cnt == max_cnt:\n","    dict_name = \"%s_res_dfs.pkl\" % key.split(\".\")[0]\n","    print(\"dict_name :\", dict_name)\n","\n","  base_df = saved_res_df_dict[key.replace(new_postfix, base_postfix)]\n","  # base_df = pd.read_excel(save_path + key.replace(new_postfix, base_postfix), index_col=0)  \n","  res_df = pd.read_excel(save_path + key, index_col=0)  \n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  droped_new_res_df.head()\n","  # break\n","\n","  # res_df_dict[key] = res_df\n","  res_df_dict[key] = droped_new_res_df\n","  print(key, \"saved to dict !\")\n","\n","  #     save with pickle    #\n","  with open(save_path + dict_name, 'wb') as f:\n","    pickle.dump(res_df_dict, f)\n","\n","  sample_cnt -= 1\n","\n","  if sample_cnt <= 0:\n","    break\n"]},{"cell_type":"markdown","metadata":{"id":"t1E_eAyPSuzm"},"source":["### new col to latest feather (1m_indi. only)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xyI5NrM7Suzm"},"outputs":[],"source":["save_path = './candlestick_concated/res_df/'\n","\n","cum_dir = \"cum\"\n","\n","new_dir_path = \"rsi_backi2\"\n","base_dir_path = \"bbdc3m_backi2\"\n","\n","new_date = '2021-11-17'\n","\n","\n","\n","#     load ftr list    #\n","base_save_path = os.path.join(save_path, base_dir_path, \"concat/cum\", new_date)\n","new_save_path = base_save_path.replace(base_dir_path, new_dir_path)\n","\n","#     save to (new) cum dir    #\n","#      1. if dir. not exists, makedir\n","os.makedirs(new_save_path, exist_ok=True)\n","\n","ftr_list = [s for s in os.listdir(base_save_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","max_cnt = 10\n","sample_cnt = max_cnt\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_save_path, key), columns=None, use_threads=True).set_index(\"index\")\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  droped_new_res_df = sync_check(base_df)\n","\n","  # new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # # new_res_df.head()\n","\n","  # intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  # droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break\n","\n","  droped_new_res_df.reset_index().to_feather(os.path.join(new_save_path, key), compression='lz4')\n","\n","  print(os.path.join(new_save_path, key), \"saved !\")\n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"nUs4fjVHSuzl"},"source":["### feather ver. (col concat)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6cu-Y82iSuzl"},"outputs":[],"source":["new_dir_path = \"st3m_backi2\"\n","base_dir_path = \"bb1d_backi2\"\n","\n","# new_date = \"2021-11-17\"\n","new_date = \"2022-01-10\"\n","\n","#     save to (new) concat dir    #\n","#      1. if dir. not exists, makedir\n","save_path = './candlestick_concated/res_df/'\n","save_path = os.path.join(save_path, new_dir_path, \"concat/cum\", new_date)   \n","# save_path = os.path.join(save_path, new_dir_path, \"concat/non_cum\", new_date)   # row col 하려면 concat 맞음, noncum 사용\n","os.makedirs(save_path, exist_ok=True)\n","\n","\n","#     load ftr list    #\n","# ftr_list = [s for s in os.listdir(os.path.join(save_path, new_dir_path)) if \"ftr\" in s]\n","\n","noncat_path = save_path.replace(\"concat/\", \"noncat/\")\n","ftr_list = [s for s in os.listdir(noncat_path) if \"ftr\" in s]\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:\n","    continue\n","\n","  try:\n","\n","    #       read from base postfix's directory    #\n","    base_df = pd.read_feather(os.path.join(save_path.replace(new_dir_path, base_dir_path), key), columns=None, use_threads=True).set_index(\"index\")\n","    res_df = pd.read_feather(os.path.join(noncat_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","    # print(base_df.head())\n","    # print(res_df.head())\n","    # break\n","\n","    new_res_df = pd.concat([base_df, res_df], axis=1) # df_tot.drop_duplicates()\n","    # new_res_df.head()\n","\n","    droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","    # droped_new_res_df.head()\n","    # break\n","\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df\n","    print(os.path.join(save_path, key), \"saved !\")\n","  \n","  except Exception as e:\n","    print(\"error occured ! :\", e)\n","  \n","\n","  # sample_cnt -= 1\n","\n","  # if sample_cnt <= 0:\n","  #   break\n"]},{"cell_type":"markdown","metadata":{"id":"WVAKq3i8Suzm"},"source":["### feather ver. (row concat) , database cum 도 호환가능"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XG2p9OhhSuzm"},"outputs":[],"source":["# save_path = './candlestick_concated/res_df/'        # cols 추가된 cum db 에 new_row's cols 기준으로 합치는 경우\n","save_path = './candlestick_concated/database_bn/'   # ohlcv cum db 만들 경우\n","\n","base_date = '2022-04-25'\n","# new_date = '2022-02-17'\n","new_date = '2022-04-27'\n","\n","# ------ load ftr list ------ #\n","if \"database\" in save_path:\n","  base_dir_path = \"\"\n","  new_dir_path = \"\"\n","  concat_dir = \"\"\n","else:\n","  base_dir_path = \"sar_backi2\"\n","  new_dir_path = \"bb4h_backi2\"  # dir_path 가 base / new 서로 달라질 수 있어서 분할함\n","  concat_dir = \"concat\"\n","\n","base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"cum\", base_date)      # 기존 cum db 와 new_date db 를 cum 진행\n","# base_date_path = os.path.join(save_path, base_dir_path, concat_dir, \"non_cum\", base_date)    # non_cum db 와 new_date db 를 cum 진행\n","\n","# new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"cum\", new_date)      # 상황별로 직접 선택해야할 듯\n","new_date_path = os.path.join(save_path, new_dir_path, concat_dir, \"non_cum\", new_date)\n","\n","\n","\n","# ------ save to (new) concat dir ------ #\n","#      1. if dir. not exists, makedir\n","save_path = new_date_path.replace(\"non_cum\", \"cum\")   # non_cum 아니여도 무관\n","os.makedirs(save_path, exist_ok=True)   # noncat / concat 두가지 경우 존재가능할 것\n","# os.makedirs(os.path.join(save_path, dir_path, \"noncat/cum\", new_date), exist_ok=True)\n","\n","\n","ftr_list = [s for s in os.listdir(new_date_path) if \"ftr\" in s]\n","exist_list = os.listdir(save_path)\n","print(ftr_list)\n","# break\n","\n","\n","for key in ftr_list:\n","\n","  if new_date not in key:   # date rejection\n","    continue\n","  if '1m' not in key:  # itv rejection\n","    continue\n","\n","  # if key in exist_list:\n","  #   print(key, \"already exist !\")\n","  #   continue\n","\n","  #       read from base postfix's directory    #\n","  base_df = pd.read_feather(os.path.join(base_date_path, key.replace(new_date, base_date)), columns=None, use_threads=True).set_index(\"index\")   # key 에 new_date 담겨있음\n","  res_df = pd.read_feather(os.path.join(new_date_path, key), columns=None, use_threads=True).set_index(\"index\")\n","\n","  # print(base_df.head())\n","  # print(res_df.head())\n","  # break\n","\n","  new_res_df = pd.concat([base_df, res_df], axis=0) # df_tot.drop_duplicates()\n","  # new_res_df.head()\n","\n","  intersection_cols = res_df.columns.intersection(base_df.columns)\n","\n","  droped_new_res_df = new_res_df.loc[~new_res_df.index.duplicated(keep='last'),intersection_cols]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.columns.duplicated(keep='last')]\n","  # droped_new_res_df = new_res_df.loc[:,~new_res_df.index.duplicated(keep='last')]\n","  # droped_new_res_df.head()\n","  # break  \n","  \n","  print(droped_new_res_df.iloc[[0, -1]])  \n","\n","  # ------------- verify df continuity directly itv by itv ------------- #\n","  true_continue = True\n","  if \"_\" in key:\n","\n","    # interval = key.split(\".\")[0].split(\"_\")[-1] \n","    # itv_num = to_itvnum(interval)\n","\n","    # verified_df = consecutive_df(droped_new_res_df, to_itvnum(interval))\n","    # verified_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","    # res_df_dict[key] = res_df\n","    # res_df_dict[key] = droped_new_res_df  \n","\n","    np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","    ideal_ts_gap = 60 # * itv_num\n","\n","    for ts_i in range(len(np_idx_ts)):\n","      \n","      if ts_i != 0:\n","        ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","        if ts_gap > ideal_ts_gap or ts_gap < ideal_ts_gap:\n","        # if ts_gap == ideal_ts_gap:\n","          print(droped_new_res_df.index[ts_i - 1])\n","          print(droped_new_res_df.index[ts_i])\n","          # print(ts_gap)\n","          print(\"------------------ unideal ts_gap ------------------\")\n","          true_continue = False\n","\n","    print(\"continuity checked !\")\n","\n","  if true_continue:\n","    droped_new_res_df.reset_index().to_feather(os.path.join(save_path, key), compression='lz4')\n","\n","  print(os.path.join(save_path, key), \"saved !\")\n","  \n"]},{"cell_type":"markdown","metadata":{"id":"L7l5CTJfSuzn"},"source":["### check continuity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"w-5jn9opBl73"},"outputs":[],"source":["droped_new_res_df = res_df_"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nGzMGyC3Suzn"},"outputs":[],"source":["# print(droped_new_res_df.columns)\n","\n","print(droped_new_res_df.iloc[[0, -1]])\n","\n","np_idx_ts = np.array(list(map(lambda x: datetime.timestamp(x), droped_new_res_df.index)))\n","\n","print(np_idx_ts[:10])\n","for ts_i in range(len(np_idx_ts)):\n","  \n","  if ts_i != 0:\n","    ts_gap = np_idx_ts[ts_i] - np_idx_ts[ts_i - 1]\n","\n","    if ts_gap > 60 or ts_gap < 60:\n","\n","      print(\"invalid ts_gap found !\")\n","    # if ts_gap == 60:\n","      print(droped_new_res_df.index[ts_i - 1])\n","      print(droped_new_res_df.index[ts_i])\n","      # print(ts_gap)\n","      print()\n"]},{"cell_type":"markdown","metadata":{"id":"x_XGJqBi8Jex"},"source":["### check length of front missing value + middle_data non_missing validity"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yRNwqVeAu8X8"},"outputs":[],"source":["#       1. new_date 의 시작 timeidx 와 base_date end timeidx 의 최소 days' gap     #\n","#       2. new_date 의 시작 부분 indi. value 는 np.nan 으로 채워질 거기 때문에 계산해야함    #\n","\n","df_count = droped_new_res_df.count()\n","len_missing = df_count.max() - df_count.min()\n","print(len_missing / 1440)\n","\n","#       3. \n","missing_sliced_df = droped_new_res_df.iloc[len_missing:]\n","df_count2 = missing_sliced_df.count()\n","# print(df_count2)\n","print((df_count2.max() - df_count2.min()))    # this value should be zero !\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AY7E2_hTBsyM"},"outputs":[],"source":["# df_count2.index[df_count2.argmin()]\n","# missing_sliced_df.head(5)\n","\n","stay_missed = np.sum(pd.isnull(missing_sliced_df), axis=0)\n","print(stay_missed)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"p9yqewOw9g33"},"outputs":[],"source":["stay_missed_cols = stay_missed[stay_missed != 0].index\n","\n","for sm_col in stay_missed_cols:\n","  \n","  row_idx = np.argwhere(pd.isnull(missing_sliced_df[sm_col].values))\n","\n","  plt.figure(figsize=(3,3))\n","  plt.plot(row_idx)\n","  plt.ylim(0, len(missing_sliced_df))\n","  plt.title(sm_col)\n","\n","  plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"MSUY4nnku3s9"},"source":["## legacy"]},{"cell_type":"markdown","metadata":{"id":"epgS5Dksu-HX"},"source":["### mv files"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aJcVpEdrslA5"},"outputs":[],"source":["df_path = './candlestick_concated/survey_df_v2'\n","files_ = os.listdir(df_path)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cEKyEYkotFDy"},"outputs":[],"source":["dirs = [file_ for file_ in files_ if not file_.endswith('.ftr')]\n","files = [file_ for file_ in files_ if file_.endswith('.ftr')]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IgM79tcxtPVZ"},"outputs":[],"source":["dirs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"M767iRtwtRQP"},"outputs":[],"source":["def move_fn(dir_, file_):\n","  src_path = os.path.join(df_path, file_)\n","  dst_path = os.path.join(df_path, dir_, file_)\n","  shutil.move(src_path, dst_path)\n","  print(\"moved to {}\".format(dst_path))\n","\n","_ = [move_fn('2022-01-10 ETHUSDT_all', file_) for file_ in files if 'eth'.upper() in file_]\n","# sols\n"]},{"cell_type":"markdown","metadata":{"id":"Iy76iO7gztne"},"source":["### move legacy files"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hMRht32Czwry"},"outputs":[],"source":["# print()\n","cur_dir_list = os.listdir('.')\n","for f in cur_dir_list:\n","  if 'legacy' in f :\n","    # print(f)\n","    if os.path.isdir(current_path + f,):\n","      continue\n","\n","    shutil.move(current_path + f, current_path + 'legacy/' + f)\n","    print(\"moved to\" + current_path + 'legacy/' +  f)"]},{"cell_type":"markdown","metadata":{"id":"5duWn8t4BRyv"},"source":["# IDE platform\n"]},{"cell_type":"markdown","metadata":{"id":"6HOjnZjSgzk1"},"source":["## load ftr_list"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"7FPBG5Qqg2jB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1653017704095,"user_tz":-540,"elapsed":4787,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"abed3f16-a812-4ac4-82a9-8e4aa0614bb6"},"outputs":[{"output_type":"stream","name":"stdout","text":["['2022-04-27 ETHUSDT_1m.ftr']\n","2022-04-27 ETHUSDT_1m.ftr loaded !\n","load res_df_ elapsed time : 2.0492825508117676\n"]}],"source":["save_path = './candlestick_concated/database_bn/'\n","\n","# dir_path = \"bb1d_backi2\"\n","# date = \"2022-02-17\"\n","# ftr_path = os.path.join(save_path, dir_path, \"concat/cum\", date)\n","\n","# ------ 1T_database ------ #\n","# date = \"2022-04-27\"\n","# ftr_path = os.path.join(save_path, \"non_cum\", date)\n","\n","date = \"2022-04-27\"\n","# date = \"2022-02-17\"\n","ftr_path = os.path.join(save_path, \"cum\", date)\n","\n","# ------ load ftr list ------ #\n","ftr_list = [s for s in os.listdir(ftr_path) if \"ftr\" in s if date in s]\n","print(ftr_list)\n","\n","start_0 = time.time()\n","key = ftr_list[0]  # tempoaray use single key\n","res_df_ = pd.read_feather(os.path.join(ftr_path, key), columns=None, use_threads=True).set_index(\"index\")\n","# print(res_df_.head())\n","print(key, \"loaded !\")\n","print(\"load res_df_ elapsed time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RQH_l4opEh_O"},"outputs":[],"source":["res_df_.dtypes"]},{"cell_type":"markdown","metadata":{"id":"x2yj2SwAXDLp"},"source":["### edit cols"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x9wkWw15XCAm"},"outputs":[],"source":["col_list = list(res_df_.columns)\n","# # [col_ for col_ in col_list if 'score' in col_]\n","\n","# ------ drop ------ #\n","# res_df_.drop([col_ for col_ in col_list if 'open_15T' in col_], inplace=True, axis=1)\n","res_df_.drop([col_ for col_ in col_list if 'es' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list if '_T40' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list if 'long_base' in col_], inplace=True, axis=1)\n","# res_df_.drop([col_ for col_ in col_list[5:]], inplace=True, axis=1)\n","\n","# ------ replace ------ #\n","# for c_i, col_ in enumerate(col_list):\n","#   if 'basis' in col_:\n","# #   # if col_[-1] in ['m', 'h', 'd', 'H'] and '_' in col_:eTa_5T\n","# #   # if col_[0] in ['h'] and '_' in col_:\n","# #   if 'bir_' in col_:\n","\n","#     col_list[c_i] = col_.replace('basis', 'base')\n","# #     # col_list[c_i] = col_.replace('m', 'T').replace('h', 'H').replace('1T', 'T')\n","# #     # col_list[c_i] = col_.replace('1d', 'D')\n","# #     # col_list[c_i] = col_.replace('eTa_5T', 'ema_5T')\n","# #     # col_list[c_i] = col_list[c_i][1:]\n","# #     # print(col_list[c_i][0])\n","# res_df_.columns = col_list\n","# col_list[-2:] = ['resi_T', 'sup_T']"]},{"cell_type":"markdown","metadata":{"id":"14chOHeXh6JD"},"source":["### lab"]},{"cell_type":"markdown","metadata":{"id":"O87s8_EUakqS"},"source":["#### instant indi."]},{"cell_type":"code","source":["\n","\n","def wave_range_ratio_v4_2(res_df, wave_itv, wave_period, roll_hl_cnt=3):\n","\n","    wave_high_fill_ = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    roll_highs = [res_df['wave_high_fill_{}{}_-{}'.format(wave_itv, wave_period, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","    roll_lows = [res_df['wave_low_fill_{}{}_-{}'.format(wave_itv, wave_period, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","\n","    cu_wave1_range = roll_highs[-1] - roll_lows[-2]   # cu's roll_high_[:, -1] = prev_high & cu's roll_low_[:, -1] = current_low\n","    cu_wave2_range = roll_highs[-1] - wave_low_fill_     # for short, cu\n","    co_wave1_range = roll_highs[-2] - roll_lows[-1]   # co's roll_low_[:, -1] = prev_low & co's roll_high_[:, -1] = current_high\n","    co_wave2_range = wave_high_fill_ - roll_lows[-1]     # for long, co\n","    wave3_range = wave_high_fill_ - wave_low_fill_\n","\n","    res_df['cu_wrr_21_{}{}'.format(wave_itv, wave_period)] = cu_wave2_range / cu_wave1_range\n","    res_df['cu_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / cu_wave2_range\n","\n","    res_df['co_wrr_21_{}{}'.format(wave_itv, wave_period)] = co_wave2_range / co_wave1_range\n","    res_df['co_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / co_wave2_range\n","\n","    return res_df\n","\n","\n","def get_roll_wave_data_v2(res_df, valid_prime_idx, roll_idx_arr, data_col, roll_hl_cnt):\n","\n","    data = res_df[data_col].to_numpy()\n","    len_res_df = len(res_df)\n","    roll_cols = [data_col + '_-{}'.format(cnt_ + 1) for cnt_ in reversed(range(roll_hl_cnt))]\n","\n","    roll_data = pd.DataFrame(index=res_df.index, data=np.full((len_res_df, roll_hl_cnt), np.nan))\n","    roll_data.iloc[valid_prime_idx[roll_hl_cnt - 1:], :] = data[roll_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","\n","    res_df[roll_cols] = roll_data.ffill()\n","\n","    return res_df\n","\n","def roll_wave_hl_idx_v4(t_df, wave_itv, wave_period, roll_hl_cnt=4):\n","\n","    high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx, this should be \"unique\"\n","    valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","    roll_high_idx_arr = np.array([valid_high_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_high_prime_idx)) if\n","                                  idx_ + 1 >= roll_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","    roll_low_idx_arr = np.array(\n","        [valid_low_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_low_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n","    \n","    assert len(roll_high_idx_arr) > 0 and len(roll_low_idx_arr) > 0\n","\n","    return valid_high_prime_idx, valid_low_prime_idx, roll_high_idx_arr, roll_low_idx_arr\n","    \n","def to_lower_tf_v3(ltf_df, htf_df, cols, backing_i=1, show_info=False):\n","    ltf_itv = pd.infer_freq(ltf_df.index)\n","    assert ltf_itv == 'T', \"currently only -> 'T' allowed..\"\n","    # assert type(column[0]) in [int, np.int64], \"column value should be integer\"\n","\n","    # cols = htf_df.columns[column]  # to_lower_tf_v1 의 int col 반영\n","\n","    if show_info:\n","        print(\"backing_i :\", backing_i)\n","\n","    renamed_last_index = htf_df.rename(index={htf_df.index[-1]: ltf_df.index[-1]}, inplace=False).iloc[[-1]]\n","    if htf_df.index[-1] != renamed_last_index.index[-1]:  # cannot reindex a non-unique index with a method or limit 방지\n","        htf_df = htf_df.append(renamed_last_index)\n","\n","    downsampled_df = htf_df[cols].shift(backing_i).resample(ltf_itv).ffill()\n","\n","    if len(downsampled_df) > len(ltf_df):\n","        downsampled_df = downsampled_df.iloc[-len(ltf_df):]\n","\n","    downsampled_df.index = ltf_df.index[-len(downsampled_df):]\n","    # assert len(ltf_df) <= len(downsampled_df), \"for join method, assert len(ltf_df) <= len(downsampled_df)\"\n","\n","    # ------ check last row's validity ------ #\n","    assert np.sum(~pd.isnull(downsampled_df.iloc[-1].values)) > 0, \"assert np.sum(~pd.isnull(downsampled_df.iloc[-1].values)) > 0\"\n","\n","    return downsampled_df"],"metadata":{"id":"gWOmz--hNaSR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","def wave_range_cci_v2(t_df, wave_period):\n","\n","    t_df = cci_v2(t_df, wave_period)\n","    itv = pd.infer_freq(t_df.index)\n","\n","    cci_ = t_df['cci_{}{}'.format(itv, wave_period)].to_numpy()\n","    b1_cci_ = t_df['cci_{}{}'.format(itv, wave_period)].shift(1).to_numpy()\n","\n","    band_width = 100\n","    upper_band = band_width\n","    lower_band = -band_width\n","\n","    len_df = len(t_df)\n","    len_df_range = np.arange(len_df).astype(int)\n","\n","    data_cols = ['open', 'high', 'low', 'close']\n","    open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","    # b1_close = t_df.close.shift(itv_num).to_numpy()\n","\n","    # ============ modules ============ #\n","    # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","    cu_bool = (b1_cci_ > upper_band) & (upper_band > cci_)\n","    co_bool = (b1_cci_ < lower_band) & (lower_band < cci_)\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    cu_fill_idx, co_fill_idx, cu_prime_idx, co_prime_idx, cu_prime_fill_idx, co_prime_fill_idx, valid_cu_bool, valid_co_bool = get_terms_info_v4(\n","        cu_idx, co_idx, len_df, len_df_range)\n","\n","    # ------ get post_terms ------ #\n","    high_post_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    low_post_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","    high_post_terms_cnt = high_post_terms[:, 1] - high_post_terms[:, 0]\n","    low_post_terms_cnt = low_post_terms[:, 1] - low_post_terms[:, 0]\n","\n","    paired_post_cu_idx = high_post_terms[:, 1]\n","    paired_post_co_idx = low_post_terms[:, 1]\n","\n","    # ------ get prime_terms ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","    # high_prime_terms = np.vstack((co_prime_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    # low_prime_terms = np.vstack((cu_prime_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","    # high_prime_terms_cnt = high_prime_terms[:, 1] - high_prime_terms[:, 0]\n","    # low_prime_terms_cnt = low_prime_terms[:, 1] - low_prime_terms[:, 0]\n","\n","    # paired_prime_cu_idx = high_prime_terms[:, 1]\n","    # paired_prime_co_idx = low_prime_terms[:, 1]\n","\n","    # ====== get wave_hl & terms ====== #\n","    wave_high_ = np.full(len_df, np.nan)\n","    wave_low_ = np.full(len_df, np.nan)\n","\n","    wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_post_terms])\n","    wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_post_terms])\n","\n","    wave_high_[paired_post_cu_idx] = wave_highs\n","    wave_low_[paired_post_co_idx] = wave_lows\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    # ------ Todo, update_hl 에 대해서, post_terms_hl 적용 ------ #\n","    wave_high_terms_low_ = np.full(len_df, np.nan)\n","    wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_post_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","    wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_post_terms])\n","\n","    wave_high_terms_low_[paired_post_cu_idx] = wave_high_terms_lows\n","    wave_low_terms_high_[paired_post_co_idx] = wave_low_terms_highs\n","\n","    update_low_cu_bool = wave_high_terms_low_ < wave_low_fill_\n","    update_high_co_bool = wave_low_terms_high_ > wave_high_fill_\n","\n","    # ------ term cnt ------ #\n","    wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","    wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_cnt_[paired_post_cu_idx] = high_post_terms_cnt\n","    wave_low_terms_cnt_[paired_post_co_idx] = low_post_terms_cnt\n","\n","    wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","    wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","    # ------ hl_fill 의 prime_idx 를 찾아야함 ------ #\n","    # b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","    # b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","    # wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","    # wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","    #\n","    # high_prime_idx_fill_ = fill_arr(wave_high_prime_idx)\n","    # low_prime_idx_fill_ = fill_arr(wave_low_prime_idx)\n","\n","    # ============ enlist to df_cols ============ #\n","    t_df['wave_high_fill_{}{}'.format(itv, wave_period)] = wave_high_fill_\n","    t_df['wave_low_fill_{}{}'.format(itv, wave_period)] = wave_low_fill_\n","    t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, wave_period)] = wave_high_terms_cnt_fill_\n","    t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, wave_period)] = wave_low_terms_cnt_fill_\n","\n","    # ------ for plot_checking ------ #\n","    t_df['wave_update_low_cu_bool_{}{}'.format(itv, wave_period)] = update_low_cu_bool  # temporary, for plot_check\n","    t_df['wave_update_high_co_bool_{}{}'.format(itv, wave_period)] = update_high_co_bool\n","    t_df['wave_cu_{}{}'.format(itv, wave_period)] = cu_bool #* ~update_low_cu_bool\n","    t_df['wave_co_{}{}'.format(itv, wave_period)] = co_bool #* ~update_high_co_bool\n","    t_df['wave_cu_marker_{}{}'.format(itv, wave_period)] = get_line(cu_idx, close)\n","    t_df['wave_co_marker_{}{}'.format(itv, wave_period)] = get_line(co_idx, close)\n","    \n","    # Todo, idx 저장은 sync. 가 맞는 tf_df 에 대하여 적용하여야함\n","    # ------ for roll prev_hl ------ #\n","    # high_post_idx 를 위해 co_prime_idx 입력\n","    t_df['wave_high_prime_idx_{}{}'.format(itv, wave_period)] = co_prime_idx # co_prime_idx wave_high_prime_idx  # high 갱신을 고려해, prev_hl 는 prime_idx 기준으로 진행\n","    t_df['wave_low_prime_idx_{}{}'.format(itv, wave_period)] = cu_prime_idx # cu_prime_idx wave_low_prime_idx  # cu_prime_idx's low 를 사용하겠다라는 의미, 즉 roll_prev 임\n","\n","    # ------ for first_high ------ #\n","    t_df['wave_high_prime_idx_fill_{}{}'.format(itv, wave_period)] = co_prime_fill_idx # co_prime_fill_idx high_prime_idx_fill_\n","    t_df['wave_low_prime_idx_fill_{}{}'.format(itv, wave_period)] = cu_prime_fill_idx # cu_prime_fill_idx low_prime_idx_fill_\n","\n","\n","    return t_df"],"metadata":{"id":"euA18M1uyc3s"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"LyGnAMvLYvOZ"},"source":["#### wave_range"]},{"cell_type":"markdown","source":["##### plot_check"],"metadata":{"id":"O1uu9vQnY5dn"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"YqBXjVPzdccC"},"outputs":[],"source":["i = random.randint(0, len(res_df))\n","# i = 235290, 512385\n","# i = 74470\n","# i = 82533\n","i = 387103\n","i = 370055\n","i = 370940\n","# i = 185369\n","i = 186060\n","\n","plot_size = 150 # 1500\n","# t_df = res_df.iloc[i - plot_size:i + plot_size]\n","t_df = res_df.iloc[i - plot_size:i]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","source":["wave_itv1, wave_period1 = 'T', config.tr_set.wave_period1\n","\n","\n","if wave_itv1 != 'T':\n","    offset = '1h' if wave_itv1 != 'D' else '9h'\n","    htf_df = to_htf(t_df, wave_itv1, offset=offset)\n","    htf_df = wave_range_cci_v2(htf_df, wave_period1)\n","    \n","    cols = list(htf_df.columns[-15:-4])  # except idx col\n","\n","    roll_hl_cnt = 3\n","    valid_high_prime_idx, valid_low_prime_idx, roll_prev_high_idx_arr, roll_prev_low_idx_arr = roll_wave_hl_idx_v4(htf_df, wave_itv1, wave_period1, roll_hl_cnt=roll_hl_cnt)\n","\n","    htf_df = get_roll_wave_data_v2(htf_df, valid_high_prime_idx, roll_prev_high_idx_arr, 'wave_high_fill_{}{}'.format(wave_itv1, wave_period1), roll_hl_cnt)\n","    cols += list(htf_df.columns[-roll_hl_cnt:])\n","\n","    htf_df = get_roll_wave_data_v2(htf_df, valid_low_prime_idx, roll_prev_low_idx_arr, 'wave_low_fill_{}{}'.format(wave_itv1, wave_period1), roll_hl_cnt)\n","    cols += list(htf_df.columns[-roll_hl_cnt:])\n","\n","    htf_df = wave_range_ratio_v4_2(htf_df, wave_itv1, wave_period1, roll_hl_cnt=3)\n","    cols += list(htf_df.columns[-4:])\n","\n","    # ------ 필요한 cols 만 join (htf's idx 정보는 ltf 와 sync. 가 맞지 않음 - join 불가함) ------ #\n","    t_df.drop(cols, inplace=True, axis=1, errors='ignore')\n","    t_df = t_df.join(to_lower_tf_v3(t_df, htf_df, cols, backing_i=0), how='inner')\n","\n","else:  \n","  t_df = wave_range_cci_v2(t_df, wave_period1)\n","\n","# t_df = wave_range_v11(t_df, config)\n","# t_df = wave_range_v11_2(t_df, config)\n","# t_df = wave_range_dcbase_v11_3(t_df, config, over_period=2)\n","# t_df = wave_range_cci_v1(t_df, wave_itv1, wave_period1)\n","# t_df = wave_range_v12(t_df, config, ltf_df=None)\n","# t_df = wave_range_v13(t_df, config, ltf_df=None, term_thresh=1)\n","# t_df = wave_range_v14(t_df, config, ltf_df=None, term_thresh1=1, term_thresh2=3)\n","# t_df = wave_range_v15(t_df, config, term_thresh1=2, term_thresh2=3)\n"],"metadata":{"id":"PgaNnempXRd_"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-Dr_tTk9csFm","colab":{"base_uri":"https://localhost:8080/","height":862},"executionInfo":{"status":"ok","timestamp":1652691528689,"user_tz":-540,"elapsed":1421,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"0b9b01ba-a97c-419a-d8d2-80602e565862"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x1080 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 15))\n","nrows, ncols = 2, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols,\n","                        height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","# _ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","\n","len_df = len(t_df)   \n","len_df_range = np.arange(len_df).astype(int)\n","\n","# ============ ============ ============ #\n","# ============ ============ ============ #\n","\n","wave_high_fill_ = t_df['wave_high_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","wave_low_fill_ = t_df['wave_low_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","wave_high_terms_cnt_fill_ = t_df['wave_high_terms_cnt_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","wave_low_terms_cnt_fill_ = t_df['wave_low_terms_cnt_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","wave_cu_idx_ = get_index_bybool(t_df['wave_cu_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","wave_co_idx_ = get_index_bybool(t_df['wave_co_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","# wave_cu_bool_idx_ = get_index_bybool(t_df['wave_cu_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","# wave_co_bool_idx_ = get_index_bybool(t_df['wave_co_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","wave_update_low_cu_bool_idx_ = get_index_bybool(t_df['wave_update_low_cu_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","wave_update_high_co_bool_idx_ = get_index_bybool(t_df['wave_update_high_co_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy(), len_df_range)\n","wave_cu_marker_ = t_df['wave_cu_marker_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","wave_co_marker_ = t_df['wave_co_marker_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","# high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","# low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","# high_prime_idx_fill = t_df['wave_high_prime_idx_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","# low_prime_idx_fill = t_df['wave_low_prime_idx_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","# ============ plot_check ============ #\n","# dc_base_ = t_df['dc_base_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","# plt.step(len_df_range, dc_base_, alpha=1.0, color='cyan', linewidth=1)\n","\n","plt.step(len_df_range, wave_cu_marker_, \"o\", alpha=1.0, color='#ff00ff', markersize=3)\n","plt.step(len_df_range, wave_co_marker_, \"o\", alpha=1.0, color='#00ff00', markersize=3)\n","\n","# [plt.axvline(int(idx_), color=\"#ff0000\") for idx_ in wave_cu_bool_idx_ if not np.isnan(idx_)]\n","# [plt.axvline(int(idx_), color=\"#0000ff\") for idx_ in wave_co_bool_idx_ if not np.isnan(idx_)]\n","[plt.axvline(int(idx_), color=\"#ff0000\") for idx_ in wave_update_low_cu_bool_idx_ if not np.isnan(idx_)]\n","[plt.axvline(int(idx_), color=\"#0000ff\") for idx_ in wave_update_high_co_bool_idx_ if not np.isnan(idx_)]\n","\n","# [plt.axvline(int(idx_), color=\"#ff00ff\") for idx_ in wave_cu_idx_ if not np.isnan(idx_)]\n","# [plt.axvline(int(idx_), color=\"#00ff00\") for idx_ in wave_co_idx_ if not np.isnan(idx_)]\n","\n","# [plt.axvline(int(idx_), color=\"#00ff00\") for idx_ in wave_high_prime_idx if not np.isnan(idx_)]\n","# [plt.axvline(int(idx_), color=\"#ff00ff\") for idx_ in wave_low_prime_idx if not np.isnan(idx_)]\n","\n","plt.step(len_df_range, wave_high_fill_, \"*\", alpha=1.0, color='#00ff00', markersize=6)\n","plt.step(len_df_range, wave_low_fill_, \"*\", alpha=1.0, color='#ff00ff', markersize=6)\n","\n","plt.xlim(0, len_df)\n","\n","plt.subplot(gs[1])\n","cci_ = t_df['cci_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","plt.step(len_df_range, cci_, alpha=1.0, color='yellow', linewidth=2)\n","plt.axhline(100, color=\"#ffffff\")\n","plt.axhline(-100, color=\"#ffffff\")\n","[plt.axvline(int(idx_), color=\"#ff00ff\") for idx_ in wave_cu_idx_ if not np.isnan(idx_)]\n","[plt.axvline(int(idx_), color=\"#00ff00\") for idx_ in wave_co_idx_ if not np.isnan(idx_)]\n","\n","# plt.step(len_df_range, wave_high_terms_cnt_fill_, alpha=1.0, color='yellow', linewidth=2)\n","# plt.step(len_df_range, wave_low_terms_cnt_fill_, alpha=1.0, color='yellow', linewidth=2)\n","# plt.step(len_df_range, wave_high_terms_cnt_fill_, \"*\", alpha=1.0, color='#00ff00', markersize=6)\n","# plt.step(len_df_range, wave_low_terms_cnt_fill_, \"*\", alpha=1.0, color='#ff00ff', markersize=6)\n","\n","plt.xlim(0, len_df)  # for sync. with gs[0]\n","\n","plt.show()"]},{"cell_type":"markdown","source":["###### data_window"],"metadata":{"id":"c2yVTn1tnxMn"}},{"cell_type":"code","source":["idx_ = 990\n","\n","# t_df[roll_cols].iloc[idx_]\n","t_df.iloc[:, -4:].iloc[idx_]\n","\n","# roll_cnt = 3\n","# valid_high_prime_idx, valid_low_prime_idx, roll_prev_high_idx_arr, roll_prev_low_idx_arr = roll_wave_hl_v4(t_df, wave_itv1, wave_period1, roll_hl_cnt=roll_cnt)\n","# roll_high = get_roll_wave_data(valid_high_prime_idx, roll_prev_high_idx_arr, len_df, wave_high_fill_, roll_cnt)\n","# roll_low = get_roll_wave_data(valid_low_prime_idx, roll_prev_low_idx_arr, len_df, wave_low_fill_, roll_cnt)\n","\n","# print(roll_high[idx_])\n","# print(roll_low[idx_])\n","# roll_prev_high_idx_arr\n","# valid_high_prime_idx"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I_ZNM9n7hFOf","executionInfo":{"status":"ok","timestamp":1652690281646,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"aee10236-b76e-45db-f25d-4a3c6d352d69"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["cu_wrr_21_15T5    2.096046\n","cu_wrr_32_15T5    0.838580\n","co_wrr_21_15T5    0.780256\n","co_wrr_32_15T5    1.000000\n","Name: 2021-05-20 14:10:59.999000, dtype: float64"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["roll_hl_cnt = 3\n","high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx\n","valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","roll_high_idx_arr = np.array([valid_high_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_high_prime_idx)) if\n","                              idx_ + 1 >= roll_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","roll_low_idx_arr = np.array(\n","    [valid_low_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_low_prime_idx)) if idx_ + 1 >= roll_hl_cnt])"],"metadata":{"id":"zj_d5wsfDzf_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["wave_co_bool_idx_[~np.isnan(wave_co_bool_idx_)]\n","# wave_cu_bool_idx_[~np.isnan(wave_cu_bool_idx_)]"],"metadata":{"id":"BvF0CoLn7bF3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%timeit -n1 -r1 wave_range_v10(res_df[-100000:], period1, ltf_df=None) # 23.7 s per loop\n","%timeit -n1 -r1 wave_range_v11(res_df[-100000:], period1, ltf_df=None) # 574 ms per loop"],"metadata":{"id":"Z-EokTzIqb-T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t_df = cci_v2(t_df, wave_period)\n","\n","cci_ = t_df['cci_{}{}'.format(itv, wave_period)].to_numpy()\n","b1_cci_ = t_df['cci_{}{}'.format(itv, wave_period)].shift(1).to_numpy()\n","\n","band_width = 100\n","upper_band = band_width\n","lower_band = -band_width\n","\n","len_df = len(t_df)\n","len_df_range = np.arange(len_df).astype(int)\n","\n","data_cols = ['open', 'high', 'low', 'close']\n","open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","# b1_close = t_df.close.shift(itv_num).to_numpy()\n","\n","# ============ modules ============ #\n","# ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","cu_bool = (b1_cci_ > upper_band) & (upper_band > cci_)\n","co_bool = (b1_cci_ < lower_band) & (lower_band < cci_)\n","\n","cu_idx = get_index_bybool(cu_bool, len_df_range)\n","co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","cu_fill_idx, co_fill_idx, cu_prime_idx, co_prime_idx, cu_prime_fill_idx, co_prime_fill_idx, valid_cu_bool, valid_co_bool = get_terms_info_v4(\n","    cu_idx, co_idx, len_df, len_df_range)\n","\n","# ------ get post_terms ------ #\n","high_post_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","low_post_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","high_post_terms_cnt = high_post_terms[:, 1] - high_post_terms[:, 0]\n","low_post_terms_cnt = low_post_terms[:, 1] - low_post_terms[:, 0]\n","\n","paired_post_cu_idx = high_post_terms[:, 1]\n","paired_post_co_idx = low_post_terms[:, 1]\n","\n","# ------ get prime_terms ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","# high_prime_terms = np.vstack((co_prime_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","# low_prime_terms = np.vstack((cu_prime_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","# high_prime_terms_cnt = high_prime_terms[:, 1] - high_prime_terms[:, 0]\n","# low_prime_terms_cnt = low_prime_terms[:, 1] - low_prime_terms[:, 0]\n","\n","# paired_prime_cu_idx = high_prime_terms[:, 1]\n","# paired_prime_co_idx = low_prime_terms[:, 1]\n","\n","# ====== get wave_hl & terms ====== #\n","wave_high_ = np.full(len_df, np.nan)\n","wave_low_ = np.full(len_df, np.nan)\n","\n","wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_post_terms])\n","wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_post_terms])\n","\n","wave_high_[paired_post_cu_idx] = wave_highs\n","wave_low_[paired_post_co_idx] = wave_lows\n","\n","wave_high_fill_ = fill_arr(wave_high_)\n","wave_low_fill_ = fill_arr(wave_low_)\n","\n","# ------ Todo, update_hl 에 대해서, post_terms_hl 적용 ------ #\n","wave_high_terms_low_ = np.full(len_df, np.nan)\n","wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_post_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_post_terms])\n","\n","wave_high_terms_low_[paired_post_cu_idx] = wave_high_terms_lows\n","wave_low_terms_high_[paired_post_co_idx] = wave_low_terms_highs\n","\n","update_low_cu_bool = wave_high_terms_low_ < wave_low_fill_\n","update_high_co_bool = wave_low_terms_high_ > wave_high_fill_\n","\n","# ------ term cnt ------ #\n","wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","wave_high_terms_cnt_[paired_post_cu_idx] = high_post_terms_cnt\n","wave_low_terms_cnt_[paired_post_co_idx] = low_post_terms_cnt\n","\n","wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","# ------ hl_fill 의 prime_idx 를 찾아야함 ------ #\n","# b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","# b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","# wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","# wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","#\n","# high_prime_idx_fill_ = fill_arr(wave_high_prime_idx)\n","# low_prime_idx_fill_ = fill_arr(wave_low_prime_idx)\n","\n","# ============ enlist to df_cols ============ #\n","t_df['wave_high_fill_{}{}'.format(itv, wave_period)] = wave_high_fill_\n","t_df['wave_low_fill_{}{}'.format(itv, wave_period)] = wave_low_fill_\n","t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, wave_period)] = wave_high_terms_cnt_fill_\n","t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, wave_period)] = wave_low_terms_cnt_fill_\n","\n","# ------ for roll prev_hl ------ #\n","# high_post_idx 를 위해 co_prime_idx 입력\n","t_df['wave_high_prime_idx_{}{}'.format(itv, wave_period)] = co_prime_idx # co_prime_idx wave_high_prime_idx  # high 갱신을 고려해, prev_hl 는 prime_idx 기준으로 진행\n","t_df['wave_low_prime_idx_{}{}'.format(itv, wave_period)] = cu_prime_idx # cu_prime_idx wave_low_prime_idx  # cu_prime_idx's low 를 사용하겠다라는 의미, 즉 roll_prev 임\n","\n","# ------ for first_high ------ #\n","t_df['wave_high_prime_idx_fill_{}{}'.format(itv, wave_period)] = co_prime_fill_idx # co_prime_fill_idx high_prime_idx_fill_\n","t_df['wave_low_prime_idx_fill_{}{}'.format(itv, wave_period)] = cu_prime_fill_idx # cu_prime_fill_idx low_prime_idx_fill_\n","\n","# ------ for plot_checking ------ #\n","t_df['wave_cu_bool_{}{}'.format(itv, wave_period)] = cu_bool  # temporary, for plot_check\n","t_df['wave_co_bool_{}{}'.format(itv, wave_period)] = co_bool\n","t_df['wave_cu_{}{}'.format(itv, wave_period)] = cu_bool * ~update_low_cu_bool\n","t_df['wave_co_{}{}'.format(itv, wave_period)] = co_bool * ~update_high_co_bool\n","t_df['wave_cu_marker_{}{}'.format(itv, wave_period)] = get_line(cu_idx, close)\n","t_df['wave_co_marker_{}{}'.format(itv, wave_period)] = get_line(co_idx, close)\n","# t_df['update_low_cu_bool_{}{}'.format(itv, wave_period)] = update_low_cu_bool\n","# t_df['update_high_co_bool_{}{}'.format(itv, wave_period)] = update_high_co_bool\n","\n","if itv != 'T':\n","    join_cols = np.arange(-15, 0, 1).astype(int)  # wave vars. + wave_unit's col\n","    res_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","        res_df = res_df.join(to_lower_tf_v3(res_df, t_df, join_cols, backing_i=0), how='inner')\n","    except Exception as e:\n","        print(\"error in wave_range()'s join() :\", e)\n","\n","    return res_df\n","\n","else:\n","    return t_df"],"metadata":{"id":"TqMmmSAGuChM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["roll_hl_cnt = 3\n","wave_itv = pd.infer_freq(t_df.index)\n","wave_period = config.tr_set.wave_period\n","\n","len_df = len(t_df)\n","\n","high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()   # cu_post_idx\n","low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()    \n","\n","valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx\n","valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","roll_high_idx_arr = np.array([valid_high_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_high_prime_idx)) if idx_ + 1 >= roll_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","roll_low_idx_arr = np.array([valid_low_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_low_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n"],"metadata":{"id":"50ucQUF-Jixd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### legacy"],"metadata":{"id":"Q_1wJTcRYpm8"}},{"cell_type":"code","source":["\n","def get_roll_wave_data(valid_prime_idx, roll_idx_arr, len_df, data, roll_hl_cnt):\n","\n","    roll_data = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    roll_data.iloc[valid_prime_idx[roll_hl_cnt - 1:], :] = data[roll_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","\n","    return roll_data.ffill().to_numpy()\n","\n","def roll_wave_hl_idx_v4(t_df, wave_itv, wave_period, roll_hl_cnt=4):\n","\n","    high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx, this should be \"unique\"\n","    valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","    roll_high_idx_arr = np.array([valid_high_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_high_prime_idx)) if\n","                                  idx_ + 1 >= roll_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","    roll_low_idx_arr = np.array(\n","        [valid_low_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_low_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n","\n","    return valid_high_prime_idx, valid_low_prime_idx, roll_high_idx_arr, roll_low_idx_arr\n","    \n","def wave_range_ratio_v4_1(res_df, config, roll_hl_cnt=3):\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","    len_df = len(res_df)\n","\n","    valid_high_prime_idx, valid_low_prime_idx, roll_high_idx_arr, roll_low_idx_arr = roll_wave_hl_v4(res_df, config, roll_hl_cnt=roll_hl_cnt)\n","\n","    wave_high_fill_ = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    roll_high_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, wave_high_fill_, roll_hl_cnt)\n","    roll_low_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, wave_low_fill_, roll_hl_cnt)\n","\n","    cu_wave1_range = roll_high_[:, -1] - roll_low_[:, -2]   # cu's roll_high_[:, -1] = prev_high & cu's roll_low_[:, -1] = current_low\n","    cu_wave2_range = roll_high_[:, -1] - wave_low_fill_     # for short, cu\n","    co_wave1_range = roll_high_[:, -2] - roll_low_[:, -1]   # co's roll_low_[:, -1] = prev_low & co's roll_high_[:, -1] = current_high\n","    co_wave2_range = wave_high_fill_ - roll_low_[:, -1]     # for long, co\n","    wave3_range = wave_high_fill_ - wave_low_fill_\n","\n","    res_df['cu_wrr_21_{}{}'.format(wave_itv, wave_period)] = cu_wave2_range / cu_wave1_range\n","    res_df['cu_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / cu_wave2_range\n","\n","    res_df['co_wrr_21_{}{}'.format(wave_itv, wave_period)] = co_wave2_range / co_wave1_range\n","    res_df['co_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / co_wave2_range\n","\n","    return res_df\n","\n","def wave_range_ratio_v4(res_df, config, roll_hl_cnt=3):\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","    len_df = len(res_df)\n","\n","    valid_high_prime_idx, valid_low_prime_idx, roll_high_idx_arr, roll_low_idx_arr = roll_wave_hl_v4(res_df, config, roll_hl_cnt=roll_hl_cnt)\n","\n","    wave_high_fill_ = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    roll_high_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, wave_high_fill_, roll_hl_cnt)\n","    roll_low_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, wave_low_fill_, roll_hl_cnt)\n","\n","    wave1_range = roll_high_[:, -2] - roll_low_[:, -2]\n","    cu_wave2_range = roll_high_[:, -2] - roll_low_[:, -1]  # for short, cu\n","    co_wave2_range = roll_high_[:, -1] - roll_low_[:, -2]  # for long, co\n","    wave3_range = roll_high_[:, -1] - roll_low_[:, -1]\n","\n","    res_df['cu_wrr_21_{}{}'.format(wave_itv, wave_period)] = cu_wave2_range / wave1_range\n","    res_df['cu_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / cu_wave2_range\n","\n","    res_df['co_wrr_21_{}{}'.format(wave_itv, wave_period)] = co_wave2_range / wave1_range\n","    res_df['co_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / co_wave2_range\n","\n","    return res_df\n","\n","\n","def get_terms_info_v4(cu_idx, co_idx, len_df, len_df_range):\n","\n","    cu_fill_idx = fill_arr(cu_idx)\n","    co_fill_idx = fill_arr(co_idx)\n","\n","    notnan_cu_bool = ~np.isnan(cu_idx)\n","    notnan_co_bool = ~np.isnan(co_idx)\n","\n","    valid_cu_bool = notnan_cu_bool * ~np.isnan(co_fill_idx)  # high_terms 를 위해 pair 되는 fill & idx 의 nan 제거\n","    valid_co_bool = notnan_co_bool * ~np.isnan(cu_fill_idx)\n","\n","    # ------ 생략된 idx 에 대한 prime_idx 탐색 ------ #\n","    high_bool = cu_fill_idx < co_fill_idx  # 이렇게 해야 high_terms[:, 1] 이 cu_idx 가 나옴\n","    low_bool = co_fill_idx < cu_fill_idx\n","\n","    high_terms_vec = get_index_bybool(high_bool, len_df_range)\n","    low_terms_vec = get_index_bybool(low_bool, len_df_range)  # -> low_terms\n","\n","    high_terms_list = using_clump(high_terms_vec)\n","    low_terms_list = using_clump(low_terms_vec)\n","\n","    valid_co_prime_idx = np.array([terms.min() for terms in high_terms_list])\n","    valid_cu_prime_idx = np.array([terms.min() for terms in low_terms_list])\n","\n","    valid_co_post_idx = np.array([terms.max() for terms in high_terms_list])\n","    valid_cu_post_idx = np.array([terms.max() for terms in low_terms_list])\n","\n","    cu_prime_idx = np.full(len_df, np.nan)\n","    co_prime_idx = np.full(len_df, np.nan)\n","\n","    cu_prime_idx[valid_cu_prime_idx] = valid_cu_prime_idx\n","    co_prime_idx[valid_co_prime_idx] = valid_co_prime_idx\n","\n","    cu_prime_fill_idx = fill_arr(cu_prime_idx)\n","    co_prime_fill_idx = fill_arr(co_prime_idx)\n","\n","    # cu_post_idx = np.full(len_df, np.nan)\n","    # co_post_idx = np.full(len_df, np.nan)\n","\n","    # cu_post_idx[valid_cu_post_idx] = valid_cu_post_idx\n","    # co_post_idx[valid_co_post_idx] = valid_co_post_idx\n","\n","    # cu_post_fill_idx = fill_arr(cu_post_idx)\n","    # co_post_fill_idx = fill_arr(co_post_idx)\n","\n","    valid_cu_bool *= ~np.isnan(co_prime_fill_idx)\n","    valid_co_bool *= ~np.isnan(cu_prime_fill_idx)\n","\n","    return cu_fill_idx, co_fill_idx, cu_prime_idx, co_prime_idx, cu_prime_fill_idx, co_prime_fill_idx, valid_cu_bool, valid_co_bool\n","    # return cu_fill_idx, co_fill_idx, cu_prime_idx, co_prime_idx, cu_prime_fill_idx, co_prime_fill_idx, \\\n","    #         cu_post_idx, co_post_idx, cu_post_fill_idx, co_post_fill_idx, valid_cu_bool, valid_co_bool\n","\n","\n","def wave_range_dcbase_v11_3(res_df, config, itv='T', over_period=2):  # v2 for period1 only\n","\n","    if itv != 'T':\n","      offset = '1h' if itv != 'D' else '9h'\n","      t_df = to_htf(res_df, itv, offset=offset)\n","    else:\n","      t_df = res_df\n","\n","    period1 = config.tr_set.wave_period\n","    itv_num = to_itvnum(itv)\n","    # print(itv_num)\n","\n","    t_df = donchian_channel_v4(t_df, period1)\n","\n","    dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","    # b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","    len_df = len(t_df)\n","    len_df_range = np.arange(len_df).astype(int)\n","    # short_open_res = np.ones(len_df)\n","    # long_open_res = np.ones(len_df)\n","\n","    data_cols = ['open', 'high', 'low', 'close']\n","    open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","    # b1_close = t_df.close.shift(itv_num).to_numpy()\n","\n","    over_base = close > dc_base_\n","    prev_over_base = pd.Series(over_base).rolling(over_period).min().shift(1).to_numpy() == 1   # min = 1 => period's all-over, max = 0\n","    prev_under_base = pd.Series(over_base).rolling(over_period).max().shift(1).to_numpy() == 0  # max = 0 => period's all-under, \n","\n","    # ============ modules ============ #\n","    # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함    \n","    cu_bool = prev_over_base & ~over_base\n","    co_bool = prev_under_base & over_base\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","    \n","    cu_fill_idx, co_fill_idx, cu_prime_idx, co_prime_idx, cu_prime_fill_idx, co_prime_fill_idx, valid_cu_bool, valid_co_bool = get_terms_info_v4(cu_idx, co_idx, len_df, len_df_range)    \n","\n","    # ------ get post_terms ------ #\n","    high_post_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    low_post_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","    high_post_terms_cnt = high_post_terms[:, 1] - high_post_terms[:, 0]\n","    low_post_terms_cnt = low_post_terms[:, 1] - low_post_terms[:, 0]\n","\n","    paired_post_cu_idx = high_post_terms[:, 1]\n","    paired_post_co_idx = low_post_terms[:, 1]\n","\n","    # ------ get prime_terms ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","    # high_prime_terms = np.vstack((co_prime_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    # low_prime_terms = np.vstack((cu_prime_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","    \n","    # high_prime_terms_cnt = high_prime_terms[:, 1] - high_prime_terms[:, 0]\n","    # low_prime_terms_cnt = low_prime_terms[:, 1] - low_prime_terms[:, 0]\n","\n","    # paired_prime_cu_idx = high_prime_terms[:, 1]\n","    # paired_prime_co_idx = low_prime_terms[:, 1]\n","\n","    # ====== get wave_hl & terms ====== #\n","    wave_high_ = np.full(len_df, np.nan)\n","    wave_low_ = np.full(len_df, np.nan)\n","\n","    wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_post_terms])\n","    wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_post_terms])\n","\n","    wave_high_[paired_post_cu_idx] = wave_highs\n","    wave_low_[paired_post_co_idx] = wave_lows\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    # # ------ Todo, update_hl 에 대해서, post_terms_hl 적용 ------ #\n","    wave_high_terms_low_ = np.full(len_df, np.nan)\n","    wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_post_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","    wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_post_terms])\n","\n","    wave_high_terms_low_[paired_post_cu_idx] = wave_high_terms_lows\n","    wave_low_terms_high_[paired_post_co_idx] = wave_low_terms_highs\n","\n","    update_low_cu_bool = wave_high_terms_low_ < wave_low_fill_\n","    update_high_co_bool = wave_low_terms_high_ > wave_high_fill_\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","    wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_cnt_[paired_post_cu_idx] = high_post_terms_cnt\n","    wave_low_terms_cnt_[paired_post_co_idx] = low_post_terms_cnt\n","\n","    wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","    wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","    # ------ hl_fill 의 prime_idx 를 찾아야함 ------ #\n","    b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","    b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","    wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","    wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","\n","    high_prime_idx_fill_ = fill_arr(wave_high_prime_idx)\n","    low_prime_idx_fill_ = fill_arr(wave_low_prime_idx)\n","\n","    # ============ enlist to df_cols ============ #\n","    t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","    t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","    t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","    t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","    t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * ~update_low_cu_bool\n","    t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * ~update_high_co_bool\n","    t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool  # temporary, for plot_check\n","    t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","    t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","    t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","    # ------ for roll prev_hl ------ #\n","    # high_post_idx 를 위해 co_prime_idx 입력\n","    t_df['wave_high_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx # co_prime_idx wave_high_prime_idx  # high 갱신을 고려해, prev_hl 는 prime_idx 기준으로 진행\n","    t_df['wave_low_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx # cu_prime_idx wave_low_prime_idx  # cu_prime_idx's low 를 사용하겠다라는 의미, 즉 roll_prev 임\n","\n","    # ------ for first_high ------ #\n","    t_df['wave_high_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_fill_idx # co_prime_fill_idx high_prime_idx_fill_\n","    t_df['wave_low_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_fill_idx # cu_prime_fill_idx low_prime_idx_fill_\n","    \n","    if itv != 'T':\n","        join_cols = np.arange(-17, 0, 1).astype(int)  # points & donchian_channels\n","        res_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","        try:\n","            res_df = res_df.join(to_lower_tf_v3(res_df, t_df, join_cols), how='inner')\n","        except Exception as e:\n","            print(\"error in wave_range()'s join() :\", e)\n","            \n","        return res_df\n","\n","    else:\n","        return t_df\n","\n","def wave_range_v11_2(res_df, config, itv='T'):  # v2 for period1 only\n","\n","    if itv != 'T':\n","      offset = '1h' if itv != 'D' else '9h'\n","      t_df = to_htf(res_df, itv, offset=offset)\n","    else:\n","      t_df = res_df\n","\n","    period1 = config.tr_set.wave_period\n","    itv_num = to_itvnum(itv)\n","    # print(itv_num)\n","\n","    t_df = donchian_channel_v4(t_df, period1)\n","\n","    dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","    b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","    len_df = len(t_df)\n","    len_df_range = np.arange(len_df).astype(int)\n","    # short_open_res = np.ones(len_df)\n","    # long_open_res = np.ones(len_df)\n","\n","    data_cols = ['open', 'high', 'low', 'close']\n","    open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","    b1_close = t_df.close.shift(itv_num).to_numpy()\n","\n","    # ============ modules ============ #\n","    # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","    cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","    co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    cu_fill_idx = fill_arr(cu_idx)\n","    co_fill_idx = fill_arr(co_idx)\n","\n","    # ------ get co, cu terms ------ #\n","    high_bool = cu_fill_idx < co_fill_idx\n","    low_bool = co_fill_idx < cu_fill_idx\n","\n","    high_terms_vec = get_index_bybool(high_bool, len_df_range)\n","    low_terms_vec = get_index_bybool(low_bool, len_df_range)  # -> low_terms\n","\n","    high_terms_list = using_clump(high_terms_vec)\n","    low_terms_list = using_clump(low_terms_vec)\n","\n","    high_terms = np.array([[terms.min(), terms.max() + 1] for terms in high_terms_list])\n","    low_terms = np.array([[terms.min(), terms.max() + 1] for terms in low_terms_list])\n","\n","    high_terms_cnt = high_terms[:, 1] - high_terms[:, 0]\n","    low_terms_cnt = low_terms[:, 1] - low_terms[:, 0]\n","\n","    wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])\n","    wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","    # ------ get valid_idx range (inner len_df) ------ #\n","    paired_cu_idx = high_terms[:, 1]\n","    paired_co_idx = low_terms[:, 1]\n","\n","    valid_cu_bool = paired_cu_idx < len_df\n","    valid_co_bool = paired_co_idx < len_df\n","\n","    paired_cu_valid_idx = paired_cu_idx[valid_cu_bool]\n","    paired_co_valid_idx = paired_co_idx[valid_co_bool]\n","\n","    # ------ get wave_hl & terms ------ #\n","    wave_high_ = np.full(len_df, np.nan)\n","    wave_low_ = np.full(len_df, np.nan)\n","\n","    wave_high_[paired_cu_valid_idx] = wave_highs[valid_cu_bool]\n","    wave_low_[paired_co_valid_idx] = wave_lows[valid_co_bool]\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","    wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_cnt_[paired_cu_valid_idx] = high_terms_cnt[valid_cu_bool]\n","    wave_low_terms_cnt_[paired_co_valid_idx] = low_terms_cnt[valid_co_bool]\n","\n","    wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","    wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","    # ------ check update high & low (occurs by point missing) ------ #\n","    co_prime_idx = np.full(len_df, np.nan)\n","    co_prime_idx[paired_co_valid_idx] = paired_co_valid_idx\n","    co_prime_idx_fill_ = fill_arr(co_prime_idx)\n","    # valid_idx = co_idx > co_prime_idx_fill_\n","    valid_idx = cu_idx > co_prime_idx_fill_\n","\n","    update_low = np.full(len_df, np.nan)\n","    # update_low[valid_idx] = [low[iin:iout + 1].min() for iin, iout in zip(cu_prime_idx_fill_[valid_idx].astype(int), cu_idx[valid_idx].astype(int))]  # include open low\n","    # 1. 잘 생각해보면, cu_idx 에는 co_prime_idx_fill_ 을 사용하는게 맞음\n","    #   a. cu_idx 에 달려있는 low 가 co_prime_idx_fill_ 기준이니까\n","    update_low[valid_idx] = [low[iin:iout + 1].min() for iin, iout in zip(co_prime_idx_fill_[valid_idx].astype(int), cu_idx[valid_idx].astype(int))]  # high_terms' update_low\n","\n","    cu_prime_idx = np.full(len_df, np.nan)\n","    cu_prime_idx[paired_cu_valid_idx] = paired_cu_valid_idx\n","    cu_prime_idx_fill_ = fill_arr(cu_prime_idx)\n","    valid_idx = co_idx > cu_prime_idx_fill_\n","\n","    update_high = np.full(len_df, np.nan)\n","    update_high[valid_idx] = [high[iin:iout + 1].max() for iin, iout in zip(cu_prime_idx_fill_[valid_idx].astype(int), co_idx[valid_idx].astype(int))]\n","\n","    # ============ enlist to df_cols ============ #\n","    t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","    t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","    t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","    t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","    t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * ~(update_low < wave_low_fill_)  # point_missing 으로 인한 low 갱신 회피\n","    t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * ~(update_high > wave_high_fill_)\n","    t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool  # temporary, for plot_check\n","    t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","    t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","    t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","    # ------ for roll prev_hl ------ #\n","    t_df['wave_high_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx\n","    t_df['wave_low_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx\n","\n","    # ------ for first_high ------ #\n","    t_df['wave_high_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_idx_fill_\n","    t_df['wave_low_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_idx_fill_\n","    \n","    if itv != 'T':\n","        join_cols = np.arange(-17, 0, 1).astype(int)  # points & donchian_channels\n","        res_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","        try:\n","            res_df = res_df.join(to_lower_tf_v3(res_df, t_df, join_cols), how='inner')\n","        except Exception as e:\n","            print(\"error in wave_range()'s join() :\", e)\n","            \n","        return res_df\n","\n","    else:\n","        return t_df\n","\n"],"metadata":{"id":"RVFfP9VcDG2_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","\n","def roll_wave_hl_v3(t_df, config, roll_hl_cnt=4):\n","  \n","    wave_itv = pd.infer_freq(t_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    len_df = len(t_df)\n","\n","    wave_high_fill_ = t_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = t_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()    \n","    high_prime_idx_fill_ = t_df['wave_high_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    low_prime_idx_fill_ = t_df['wave_low_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx\n","    valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","    roll_high_idx_arr = np.array([valid_high_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_high_prime_idx)) if idx_ + 1 >= roll_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","    roll_low_idx_arr = np.array([valid_low_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_low_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n","\n","    roll_high_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    roll_low_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))    \n","    roll_high_prime_idx_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    roll_low_prime_idx_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","\n","    roll_high_.iloc[valid_high_prime_idx[roll_hl_cnt - 1:], :] = wave_high_fill_[roll_high_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","    roll_low_.iloc[valid_low_prime_idx[roll_hl_cnt - 1:], :] = wave_low_fill_[roll_low_idx_arr]\n","    roll_high_prime_idx_.iloc[valid_high_prime_idx[roll_hl_cnt - 1:], :] = high_prime_idx_fill_[roll_high_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","    roll_low_prime_idx_.iloc[valid_low_prime_idx[roll_hl_cnt - 1:], :] = low_prime_idx_fill_[roll_low_idx_arr]\n","\n","    return roll_high_.ffill().to_numpy(), roll_low_.ffill().to_numpy(), roll_high_prime_idx_.ffill().to_numpy(), roll_low_prime_idx_.ffill().to_numpy()  # t_df 에 hl_cnt 만큼 col 만들어야해서 numpy 로 뽑음\n","\n","\n","def wave_range_v15(res_df, config, itv='T', term_thresh1=1, term_thresh2=3):  # v2 for period1 only\n","  \n","    # itv = pd.infer_freq(t_df.index)\n","    if itv != 'T':\n","      offset = '1h' if itv != 'D' else '9h'\n","      t_df = to_htf(res_df, itv, offset=offset)\n","    else:\n","      t_df = res_df\n","\n","    period1 = config.tr_set.wave_period\n","    # print(period1)\n","\n","    itv_num = to_itvnum(itv)\n","    # print(itv_num)\n","\n","    t_df = donchian_channel_v4(t_df, period1)\n","\n","    dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","    b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","    len_df = len(t_df)\n","    len_df_range = np.arange(len_df).astype(int)\n","    # short_open_res = np.ones(len_df)\n","    # long_open_res = np.ones(len_df)\n","\n","    data_cols = ['open', 'high', 'low', 'close']\n","    open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","    b1_close = t_df.close.shift(itv_num).to_numpy()\n","\n","    # ============ modules ============ #\n","    # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","    cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","    co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)  # for marking\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    # high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","    # high_terms, low_terms, high_terms_cnt, low_terms_cnt, cu_idx_term, co_idx_term = get_terms_info_v2(cu_bool, co_bool, len_df_range)\n","    high_terms, low_terms, high_terms_cnt, low_terms_cnt, cu_idx_term, co_idx_term = get_terms_info_v3(cu_bool, co_bool, len_df, len_df_range)\n","\n","    paired_cu_idx1 = high_terms[:, 1]\n","    paired_co_idx1 = low_terms[:, 1]\n","\n","    # ------ 생략 이전 terms' hl ------ #\n","    wave_high_terms_low_ = np.full(len_df, np.nan)\n","    wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])\n","    wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])\n","\n","    wave_high_terms_low_[paired_cu_idx1] = wave_high_terms_lows\n","    wave_low_terms_high_[paired_co_idx1] = wave_low_terms_highs\n","\n","    # ------ 생략된 cu, co 에 대한 2nd pairing 진행 ------ #\n","    # cu_bool[high_terms[:, 1][high_terms_cnt <= term_thresh]] = False\n","    # co_bool[low_terms[:, 1][low_terms_cnt <= term_thresh]] = False\n","    cu_bool[high_terms[:, 1][(high_terms_cnt <= term_thresh1) & (cu_idx_term <= term_thresh2)]] = False\n","    co_bool[low_terms[:, 1][(low_terms_cnt <= term_thresh1) & (co_idx_term <= term_thresh2)]] = False\n","\n","    # high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","    # high_terms, low_terms, high_terms_cnt, low_terms_cnt, _, _ = get_terms_info_v2(cu_bool, co_bool, len_df_range)\n","    high_post_terms, low_post_terms, high_prime_terms_cnt, low_prime_terms_cnt, high_prime_terms, low_prime_terms, _, _ = get_terms_info_v3(cu_bool,\n","                                                                                                                                          co_bool,\n","                                                                                                                                          len_df,\n","                                                                                                                                          len_df_range,\n","                                                                                                                                          True)\n","\n","    paired_cu_idx2 = high_prime_terms[:, 1]\n","    paired_co_idx2 = low_prime_terms[:, 1]\n","\n","    # ====== get wave_hl & terms ====== #\n","    wave_high_ = np.full(len_df, np.nan)\n","    wave_low_ = np.full(len_df, np.nan)\n","\n","    wave_prime_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_prime_terms])\n","    wave_prime_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_prime_terms])\n","\n","    wave_high_[paired_cu_idx2] = wave_prime_highs\n","    wave_low_[paired_co_idx2] = wave_prime_lows\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    # ------ Todo, update_hl 에 대해서, post_terms_hl 적용 ------ #\n","    wave_post_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])  # 생략전 post_terms_hl 사용\n","    wave_post_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","    update_low_cu_bool = wave_high_terms_low_ < wave_low_fill_\n","    update_high_co_bool = wave_low_terms_high_ > wave_high_fill_\n","\n","    update_paired_cu_bool = (cu_bool * update_low_cu_bool)[paired_cu_idx1]\n","    update_paired_cu_idx = paired_cu_idx1[update_paired_cu_bool]\n","    wave_high_[update_paired_cu_idx] = wave_post_highs[update_paired_cu_bool]\n","\n","    update_paired_co_bool = (co_bool * update_high_co_bool)[paired_co_idx1]\n","    update_paired_co_idx = paired_co_idx1[update_paired_co_bool]\n","    wave_low_[update_paired_co_idx] = wave_post_lows[update_paired_co_bool]\n","\n","    # wave_high_fill2_ = fill_arr(wave_high_)\n","    # wave_low_fill2_ = fill_arr(wave_low_)\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    # wave_high_terms_low_ = np.full(len_df, np.nan)\n","    # wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    # wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","    # wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])\n","\n","    # wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","    # wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","    wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","    wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_cnt_[paired_cu_idx2] = high_prime_terms_cnt\n","    wave_low_terms_cnt_[paired_co_idx2] = low_prime_terms_cnt\n","\n","    wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","    wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","    # ------ hl_fill 의 prime_idx 를 찾아야함 ------ #\n","    b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","    b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","    wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","    wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","\n","    high_prime_idx_fill_ = fill_arr(wave_high_prime_idx)\n","    low_prime_idx_fill_ = fill_arr(wave_low_prime_idx)\n","\n","    # ============ enlist to df_cols ============ #\n","    t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","    t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","    # t_df['wave_high_fill2_{}{}'.format(itv, period1)] = wave_high_fill2_\n","    # t_df['wave_low_fill2_{}{}'.format(itv, period1)] = wave_low_fill2_\n","\n","    t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","    t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","    t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * ~update_low_cu_bool\n","    t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * ~update_high_co_bool\n","    t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool  # temporary, for plot_check\n","    t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","    t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","    t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","    # ------ for roll prev_hl ------ #\n","    t_df['wave_high_prime_idx_{}{}'.format(itv, period1)] = wave_high_prime_idx  # cu\n","    t_df['wave_low_prime_idx_{}{}'.format(itv, period1)] = wave_low_prime_idx\n","\n","    # ------ for first_high ------ #\n","    t_df['wave_high_prime_idx_fill_{}{}'.format(itv, period1)] = high_prime_idx_fill_\n","    t_df['wave_low_prime_idx_fill_{}{}'.format(itv, period1)] = low_prime_idx_fill_\n","    \n","    if itv != 'T':\n","        join_cols = np.arange(-17, 0, 1).astype(int)  # points & donchian_channels\n","        res_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","        try:\n","            res_df = res_df.join(to_lower_tf_v3(res_df, t_df, join_cols), how='inner')\n","        except Exception as e:\n","            print(\"error in wave_range()'s join() :\", e)\n","            \n","        return res_df\n","\n","    else:\n","        return t_df\n","\n","\n","def wave_range_ratio_v3(res_df, config):\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    roll_high_, roll_low_, _, _ = roll_wave_hl_v3(res_df, config, roll_hl_cnt=4)\n","\n","    wave1_range = roll_high_[:, -2] - roll_low_[:, -2]\n","    cu_wave2_range = roll_high_[:, -2] - roll_low_[:, -1]  # for short, cu\n","    co_wave2_range = roll_high_[:, -1] - roll_low_[:, -2]  # for long, co\n","    wave3_range = roll_high_[:, -1] - roll_low_[:, -1]\n","\n","    res_df['cu_wrr_21_{}{}'.format(wave_itv, wave_period)] = cu_wave2_range / wave1_range\n","    res_df['cu_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / cu_wave2_range\n","\n","    res_df['co_wrr_21_{}{}'.format(wave_itv, wave_period)] = co_wave2_range / wave1_range\n","    res_df['co_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / co_wave2_range\n","\n","    return res_df\n","\n","def get_terms_info_v3(cu_bool, co_bool, len_df, len_df_range, prime_terms=False):\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    cu_fill_idx = fill_arr(cu_idx)\n","    co_fill_idx = fill_arr(co_idx)\n","\n","    notnan_cu_bool = ~np.isnan(cu_idx)\n","    notnan_co_bool = ~np.isnan(co_idx)\n","\n","    valid_cu_bool = notnan_cu_bool * ~np.isnan(co_fill_idx)\n","    valid_co_bool = notnan_co_bool * ~np.isnan(cu_fill_idx)\n","\n","    if prime_terms:\n","        # ------ 생략된 idx 에 대한 prime_idx 탐색 ------ #\n","        high_bool = cu_fill_idx < co_fill_idx  # 이렇게 해야 high_terms[:, 1] 이 cu_idx 가 나옴\n","        low_bool = co_fill_idx < cu_fill_idx\n","\n","        high_terms_vec = get_index_bybool(high_bool, len_df_range)\n","        low_terms_vec = get_index_bybool(low_bool, len_df_range)  # -> low_terms\n","\n","        high_terms_list = using_clump(high_terms_vec)\n","        low_terms_list = using_clump(low_terms_vec)\n","\n","        valid_cu_prime_idx = np.array([terms.min() for terms in low_terms_list])\n","        valid_co_prime_idx = np.array([terms.min() for terms in high_terms_list])\n","\n","        cu_prime_idx = np.full(len_df, np.nan)\n","        co_prime_idx = np.full(len_df, np.nan)\n","\n","        cu_prime_idx[valid_cu_prime_idx] = valid_cu_prime_idx\n","        co_prime_idx[valid_co_prime_idx] = valid_co_prime_idx\n","\n","        cu_prime_fill_idx = fill_arr(cu_prime_idx)\n","        co_prime_fill_idx = fill_arr(co_prime_idx)\n","\n","        valid_cu_bool *= ~np.isnan(co_prime_fill_idx)\n","        valid_co_bool *= ~np.isnan(cu_prime_fill_idx)\n","\n","    high_post_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    low_post_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","    high_post_terms_cnt = high_post_terms[:, 1] - high_post_terms[:, 0]\n","    low_post_terms_cnt = low_post_terms[:, 1] - low_post_terms[:, 0]\n","\n","    # ------ co, cu idx's terms ------ #\n","    valid_cu_idx = cu_idx[valid_cu_bool]\n","    valid_co_idx = co_idx[valid_co_bool]\n","    valid_shift_cu_idx = pd.Series(valid_cu_idx).shift(1).to_numpy()\n","    valid_shift_co_idx = pd.Series(valid_co_idx).shift(1).to_numpy()\n","\n","    cu_idx_term = valid_cu_idx - valid_shift_cu_idx\n","    co_idx_term = valid_co_idx - valid_shift_co_idx\n","\n","    # ------ get co, cu terms_v2 ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","    if prime_terms:\n","        high_prime_terms = np.vstack((co_prime_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","        low_prime_terms = np.vstack((cu_prime_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","        \n","        high_prime_terms_cnt = high_prime_terms[:, 1] - high_prime_terms[:, 0]\n","        low_prime_terms_cnt = low_prime_terms[:, 1] - low_prime_terms[:, 0]\n","\n","        return high_post_terms, low_post_terms, high_prime_terms_cnt, low_prime_terms_cnt, high_prime_terms, low_prime_terms, cu_idx_term, co_idx_term\n","\n","    return high_post_terms, low_post_terms, high_post_terms_cnt, low_post_terms_cnt, cu_idx_term, co_idx_term\n","  \n","def wave_range_ratio_v2(res_df, config):\n","\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    roll_high_, roll_low_ = roll_wave_hl_v2(res_df, config, roll_hl_cnt=4)\n","    \n","    wave1_range = roll_high_[:, -2] - roll_low_[:, -2]\n","    cu_wave2_range = roll_high_[:, -2] - roll_low_[:, -1]  # for short, cu\n","    co_wave2_range = roll_high_[:, -1] - roll_low_[:, -2]  # for long, co\n","    wave3_range = roll_high_[:, -1] - roll_low_[:, -1]\n","\n","    res_df['cu_wrr_21_{}{}'.format(wave_itv, wave_period)] = cu_wave2_range / wave1_range\n","    res_df['cu_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / cu_wave2_range\n","\n","    res_df['co_wrr_21_{}{}'.format(wave_itv, wave_period)] = co_wave2_range / wave1_range\n","    res_df['co_wrr_32_{}{}'.format(wave_itv, wave_period)] = wave3_range / co_wave2_range\n","\n","    return res_df\n","    \n","def roll_wave_hl(t_df, config, roll_hl_cnt=4):\n","  \n","    wave_itv = pd.infer_freq(t_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    len_df = len(t_df)\n","\n","    wave_high_fill_ = t_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = t_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    cu_prime_idx = t_df['wave_cu_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    co_prime_idx = t_df['wave_co_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    valid_cu_prime_idx = cu_prime_idx[~np.isnan(cu_prime_idx)].astype(int)  # -> 필요한 prev_hl 갯수만큼 각 index 기준으로 자르기\n","    valid_co_prime_idx = co_prime_idx[~np.isnan(co_prime_idx)].astype(int)  # -> 필요한 prev_hl 갯수만큼 각 index 기준으로 자르기\n","\n","    cu_roll_hl_idx_arr = np.array(\n","        [valid_cu_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_cu_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n","    co_roll_hl_idx_arr = np.array(\n","        [valid_co_prime_idx[idx_ + 1 - roll_hl_cnt:idx_ + 1] for idx_ in range(len(valid_co_prime_idx)) if idx_ + 1 >= roll_hl_cnt])\n","\n","    cu_roll_high_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    cu_roll_low_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    co_roll_high_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","    co_roll_low_ = pd.DataFrame(np.full((len_df, roll_hl_cnt), np.nan))\n","\n","    cu_roll_high_.iloc[valid_cu_prime_idx[roll_hl_cnt - 1:], :] = wave_high_fill_[cu_roll_hl_idx_arr]\n","    cu_roll_low_.iloc[valid_cu_prime_idx[roll_hl_cnt - 1:], :] = wave_low_fill_[cu_roll_hl_idx_arr]\n","    co_roll_high_.iloc[valid_co_prime_idx[roll_hl_cnt - 1:], :] = wave_high_fill_[co_roll_hl_idx_arr]\n","    co_roll_low_.iloc[valid_co_prime_idx[roll_hl_cnt - 1:], :] = wave_low_fill_[co_roll_hl_idx_arr]\n","\n","    return cu_roll_high_.ffill().to_numpy(), cu_roll_low_.ffill().to_numpy(), co_roll_high_.ffill().to_numpy(), co_roll_low_.ffill().to_numpy()  # t_df 에 hl_cnt 만큼 col 만들어야해서 numpy 로 뽑음\n","\n","def backing_future_data(res_df, future_cols, itv_list): # itv 자동 조사 가능 ? (future_work)\n","  \n","    for col_, itv_ in zip(future_cols, itv_list):\n","        back_col_ = 'b1_' + col_\n","        res_df[back_col_] = res_df[col_].shift(to_itvnum(itv_))\n","\n","    return res_df\n","\n","\n","\n","def wave_loc_pct_v2(res_df, config, itv, period):\n","\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    wave_high_fill_ = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    bb_upper_ = res_df['bb_upper_{}{}'.format(itv, period)].to_numpy()\n","    bb_lower_ = res_df['bb_lower_{}{}'.format(itv, period)].to_numpy()\n","\n","    bb_gap = bb_upper_ - bb_lower_\n","    \n","    cu_prime_idx_fill_ = res_df['wave_cu_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    co_prime_idx_fill_ = res_df['wave_co_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    cu_prime_bb_gap = get_line(cu_prime_idx_fill_, bb_gap)\n","    co_prime_bb_gap = get_line(co_prime_idx_fill_, bb_gap)\n","\n","    res_df['wave_high_loc_pct_{}{}'.format(wave_itv, wave_period)] = (bb_upper_ - wave_high_fill_) / cu_prime_bb_gap\n","    res_df['wave_low_loc_pct_{}{}'.format(wave_itv, wave_period)] = (wave_low_fill_ - bb_lower_) / co_prime_bb_gap\n","\n","    return res_df\n","\n","def wave_loc_pct(res_df, config, itv, period):\n","\n","    wave_itv = pd.infer_freq(res_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    wave_high_fill_ = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    wave_low_fill_ = res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","    bb_upper_ = res_df['bb_upper_{}{}'.format(itv, period)].to_numpy()\n","    bb_lower_ = res_df['bb_lower_{}{}'.format(itv, period)].to_numpy()\n","\n","    bb_gap = bb_upper_ - bb_lower_\n","\n","    res_df['wave_high_loc_pct_{}{}'.format(wave_itv, wave_period)] = (bb_upper_ - wave_high_fill_) / bb_gap\n","    res_df['wave_low_loc_pct_{}{}'.format(wave_itv, wave_period)] = (wave_low_fill_ - bb_lower_) / bb_gap\n","\n","    return res_df\n","\n","\n","def get_terms_info_v2(cu_bool, co_bool, len_df_range):\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    cu_fill_idx = fill_arr(cu_idx)\n","    co_fill_idx = fill_arr(co_idx)\n","\n","    notnan_cu_bool = ~np.isnan(cu_idx)\n","    notnan_co_bool = ~np.isnan(co_idx)\n","  \n","    # ------ get co, cu terms_v2 ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것    \n","    valid_cu_bool = notnan_cu_bool * ~np.isnan(co_fill_idx)  # co 와 pair 가 가능한 cu_idx\n","    valid_co_bool = notnan_co_bool * ~np.isnan(cu_fill_idx)\n","\n","    high_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","    low_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","    high_terms_cnt = high_terms[:, 1] - high_terms[:, 0] \n","    low_terms_cnt = low_terms[:, 1] - low_terms[:, 0] \n","\n","    # valid_cu_idx = cu_idx[notnan_cu_bool]\n","    # valid_co_idx = co_idx[notnan_co_bool]\n","    valid_cu_idx = cu_idx[valid_cu_bool]\n","    valid_co_idx = co_idx[valid_co_bool]\n","    valid_shift_cu_idx = pd.Series(valid_cu_idx).shift(1).to_numpy()\n","    valid_shift_co_idx = pd.Series(valid_co_idx).shift(1).to_numpy()\n","\n","    cu_idx_term = valid_cu_idx - valid_shift_cu_idx\n","    co_idx_term = valid_co_idx - valid_shift_co_idx\n","\n","    return high_terms, low_terms, high_terms_cnt, low_terms_cnt, cu_idx_term, co_idx_term\n","\n","def get_terms_info(cu_bool, co_bool, len_df_range):\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    cu_fill_idx = fill_arr(cu_idx)\n","    co_fill_idx = fill_arr(co_idx)\n","  \n","    # ------ get co, cu terms_v2 ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","    valid_cu_idx = ~np.isnan(cu_idx) * ~np.isnan(co_fill_idx)\n","    valid_co_idx = ~np.isnan(co_idx) * ~np.isnan(cu_fill_idx)\n","\n","    high_terms = np.vstack((co_fill_idx[valid_cu_idx], cu_idx[valid_cu_idx])).T.astype(int)\n","    low_terms = np.vstack((cu_fill_idx[valid_co_idx], co_idx[valid_co_idx])).T.astype(int)\n","\n","    high_terms_cnt = high_terms[:, 1] - high_terms[:, 0] \n","    low_terms_cnt = low_terms[:, 1] - low_terms[:, 0] \n","\n","    return high_terms, low_terms, high_terms_cnt, low_terms_cnt\n","\n","\n","\n","def wave_range_v13(t_df, config, ltf_df=None, term_thresh=2):  # v2 for period1 only\n","\n","    itv = pd.infer_freq(t_df.index)\n","    period1 = config.tr_set.wave_period\n","    # print(period1)\n","\n","    itv_num = to_itvnum(itv)\n","    # print(itv_num)\n","\n","    t_df = donchian_channel_v4(t_df, period1) \n","\n","    dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","    b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","    len_df = len(t_df)   \n","    len_df_range = np.arange(len_df).astype(int)\n","    # short_open_res = np.ones(len_df)\n","    # long_open_res = np.ones(len_df)\n","\n","    data_cols = ['open', 'high', 'low', 'close']\n","    open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","    b1_close = t_df.close.shift(itv_num).to_numpy()\n","    \n","    # ============ modules ============ #  \n","    # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","    cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","    co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","\n","    cu_idx = get_index_bybool(cu_bool, len_df_range)   # for marking\n","    co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","    high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","\n","    paired_cu_idx = high_terms[:, 1]\n","    paired_co_idx = low_terms[:, 1]\n","\n","    # ------ 생략 이전 terms' hl ------ #\n","    wave_high_terms_low_ = np.full(len_df, np.nan)\n","    wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])\n","    wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])  \n","\n","    wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","    wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","    # ------ 생략된 cu, co 에 대한 2nd pairing 진행 ------ #\n","    cu_bool[high_terms[:, 1][high_terms_cnt <= term_thresh]] = False\n","    co_bool[low_terms[:, 1][low_terms_cnt <= term_thresh]] = False  \n","    high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","    \n","    paired_cu_idx = high_terms[:, 1]\n","    paired_co_idx = low_terms[:, 1]\n","\n","    # ====== get wave_hl & terms ====== #\n","    wave_high_ = np.full(len_df, np.nan)\n","    wave_low_ = np.full(len_df, np.nan)\n","\n","    wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])\n","    wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","    wave_high_[paired_cu_idx] = wave_highs\n","    wave_low_[paired_co_idx] = wave_lows\n","\n","    wave_high_fill_ = fill_arr(wave_high_)\n","    wave_low_fill_ = fill_arr(wave_low_)\n","\n","    # wave_high_terms_low_ = np.full(len_df, np.nan)\n","    # wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","    # wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","    # wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])\n","\n","    # wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","    # wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","    wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","    wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","    wave_high_terms_cnt_[paired_cu_idx] = high_terms_cnt\n","    wave_low_terms_cnt_[paired_co_idx] = low_terms_cnt\n","\n","    wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","    wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","    \n","    # ------ hl_fill 의 prime_idx 를 찾아야함 ------ # \n","    b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","    b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","    wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","    wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","\n","    cu_prime_idx = wave_high_prime_idx\n","    cu_prime_idx_fill_ = fill_arr(cu_prime_idx)\n","\n","    co_prime_idx = wave_low_prime_idx\n","    co_prime_idx_fill_ = fill_arr(wave_low_prime_idx)  \n","\n","    # ============ enlist to df_cols ============ #       \n","    t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","    t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","\n","    t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","    t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","    t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * (wave_high_terms_low_ >= wave_low_fill_)   # co ~ cu’s low 가 wave_low 갱신할 경우 point 에서 제외\n","    t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * (wave_low_terms_high_ <= wave_high_fill_)\n","    t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool   # temporary, for plot_check\n","    t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","    t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","    t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","    # ------ for roll prev_hl ------ # \n","    t_df['wave_cu_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx\n","    t_df['wave_co_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx\n","    \n","    # ------ for first_high ------ # \n","    t_df['wave_cu_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_idx_fill_\n","    t_df['wave_co_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_idx_fill_\n","      \n","    if itv != 'T':\n","      assert ltf_df is not None, \"assert ltf_df is not None\"\n","      join_cols = np.arange(-15, 0 ,1).astype(int)  # points & donchian_channels\n","      ltf_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","      try:\n","        ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, t_df, join_cols), how='inner')\n","      except Exception as e:\n","        print(\"error in wave_range()'s join() :\", e)\n","    else:\n","      ltf_df = t_df    \n","\n","    return ltf_df\n"],"metadata":{"id":"841i4oo2abh-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### dump"],"metadata":{"id":"02DcTVB2cYuR"}},{"cell_type":"code","source":["\n","\n","def get_roll_wave_data_v2(valid_prime_idx, roll_idx_arr, len_df, data, roll_prev_hl_cnt):\n","\n","    roll_data = pd.DataFrame(np.full((len_df, roll_prev_hl_cnt), np.nan))\n","    roll_data.iloc[valid_prime_idx[roll_prev_hl_cnt:], :] = data[roll_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","\n","    return roll_data.ffill().to_numpy()\n","\n","def roll_wave_hl_v5(t_df, config, roll_prev_hl_cnt=3):\n","  \n","    wave_itv = pd.infer_freq(t_df.index)\n","    wave_period = config.tr_set.wave_period\n","\n","    len_df = len(t_df)\n","\n","    high_prime_idx = t_df['wave_high_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","    low_prime_idx = t_df['wave_low_prime_idx_{}{}'.format(wave_itv, wave_period)].to_numpy()    \n","\n","    valid_high_prime_idx = high_prime_idx[~np.isnan(high_prime_idx)].astype(int)  # roll_high 를 위한 prime_idx\n","    valid_low_prime_idx = low_prime_idx[~np.isnan(low_prime_idx)].astype(int)  # roll_low 를 위한 prime_idx\n","\n","    roll_prev_high_idx_arr = np.array([valid_high_prime_idx[idx_ - roll_prev_hl_cnt:idx_] for idx_ in range(len(valid_high_prime_idx)) if idx_ >= roll_prev_hl_cnt])  # cnt 수를 만족시키기 위해 idx 제한\n","    roll_prev_low_idx_arr = np.array([valid_low_prime_idx[idx_ - roll_prev_hl_cnt:idx_] for idx_ in range(len(valid_low_prime_idx)) if idx_ >= roll_prev_hl_cnt])\n","\n","    return valid_high_prime_idx, valid_low_prime_idx, roll_prev_high_idx_arr, roll_prev_low_idx_arr"],"metadata":{"id":"Go7ARIUhfC1g"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["t_df[roll_cols].tail(100)"],"metadata":{"id":"pgA8QqyXZ66o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_col = 'wave_high_fill_{}{}'.format(wave_itv1, wave_period1)\n","data = htf_df[data_col].to_numpy()\n","len_htf_df = len(htf_df)\n","\n","\n","roll_data = pd.DataFrame(index=htf_df.index, data=np.full((len_htf_df, roll_hl_cnt), np.nan))\n","roll_data.iloc[valid_high_prime_idx[roll_hl_cnt - 1:], :] = data[roll_prev_high_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","\n","# roll_data.ffill()\n","htf_df[roll_cols] = roll_data.ffill()\n","htf_df[roll_cols]\n","\n","# htf_df[roll_cols] = np.nan\n","# htf_df[roll_cols].iloc[valid_high_prime_idx[roll_hl_cnt - 1:]] = data[roll_prev_high_idx_arr]  # 제한된 idx 를 제외한 row 에 roll_hl 입력\n","\n","# htf_df[roll_cols] = htf_df[roll_cols].ffill().to_numpy()\n","\n","# valid_high_prime_idx\n","# np.sum(~np.isnan(roll_high))\n","# htf_df[roll_cols]\n","# roll_prev_low_idx_arr"],"metadata":{"id":"wF7fKJ3mOhaf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# t_df\n","to_lower_tf_v2(res_df, t_df, join_cols)"],"metadata":{"id":"3vHLGont-BFe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["wave_post_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_post_terms])\n","wave_post_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_post_terms])\n","\n","# print(len(paired_cu_idx))\n","# print(len(wave_post_highs))\n","# print(len(cu_bool))\n","\n","update_paired_cu_bool = (cu_bool * (wave_high_terms_low_ < wave_low_fill_))[paired_cu_idx]\n","update_paired_cu_idx = paired_cu_idx[update_paired_cu_bool]\n","wave_high_[update_paired_cu_idx] = wave_post_highs[update_paired_cu_bool]\n","\n","update_paired_co_bool = (co_bool * (wave_low_terms_high_ > wave_high_fill_))[paired_co_idx]\n","update_paired_co_idx = paired_co_idx[update_paired_co_bool]\n","wave_low_[update_paired_co_idx] = wave_post_lows[update_paired_co_bool]\n","\n","wave_high_fill2_ = fill_arr(wave_high_)\n","wave_low_fill2_ = fill_arr(wave_low_)"],"metadata":{"id":"Mh3w2s-j34Zs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# wave_post_highs\n","# update_cu_bool = (cu_bool * (wave_high_terms_low_ < wave_low_fill_))[paired_cu_idx]\n","# print(paired_cu_idx[update_cu_bool])\n","# print(paired_cu_idx)\n","print(len(update_paired_cu_idx))\n","print(len(wave_post_highs[update_paired_cu_bool]))\n","# print(high_prime_terms[:, 1])\n","# print(high_post_terms[:, 1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eQ06-kWq4m6F","executionInfo":{"status":"ok","timestamp":1651799326382,"user_tz":-540,"elapsed":3,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"5c5df956-4fbd-4aa4-e1d6-dc5d0c23ac19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["11\n","11\n"]}]},{"cell_type":"code","source":["cu_idx = get_index_bybool(cu_bool, len_df_range)\n","co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","cu_fill_idx = fill_arr(cu_idx)\n","co_fill_idx = fill_arr(co_idx)\n","\n","notnan_cu_bool = ~np.isnan(cu_idx)\n","notnan_co_bool = ~np.isnan(co_idx)\n","\n","# ------ 생략된 idx 에 대한 prime_idx 탐색 ------ #\n","high_bool = cu_fill_idx < co_fill_idx  # 이렇게 해야 high_terms[:, 1] 이 cu_idx 가 나옴\n","low_bool = co_fill_idx < cu_fill_idx\n","\n","high_terms_vec = get_index_bybool(high_bool, len_df_range)\n","low_terms_vec = get_index_bybool(low_bool, len_df_range) # -> low_terms\n","\n","high_terms_list = using_clump(high_terms_vec)\n","low_terms_list = using_clump(low_terms_vec)\n","\n","valid_cu_prime_idx = np.array([terms.min() for terms in low_terms_list])\n","valid_co_prime_idx = np.array([terms.min() for terms in high_terms_list])\n","\n","cu_prime_idx = np.full(len_df, np.nan)\n","co_prime_idx = np.full(len_df, np.nan)\n","\n","cu_prime_idx[valid_cu_prime_idx] = valid_cu_prime_idx\n","co_prime_idx[valid_co_prime_idx] = valid_co_prime_idx\n","\n","cu_prime_fill_idx = fill_arr(cu_prime_idx)\n","co_prime_fill_idx = fill_arr(co_prime_idx)\n","\n","# ------ get co, cu terms_v2 ------ # # 기본은 아래 logic 으로 수행하고, update_hl 도 해당 term 구간의 hl 이 더 작거나 클경우 적용 가능할 것\n","valid_cu_bool = notnan_cu_bool * ~np.isnan(co_fill_idx) * ~np.isnan(co_prime_fill_idx)\n","valid_co_bool = notnan_co_bool * ~np.isnan(cu_fill_idx) * ~np.isnan(cu_prime_fill_idx)\n","\n","high_post_terms = np.vstack((co_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","low_post_terms = np.vstack((cu_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)\n","\n","high_terms_cnt = high_post_terms[:, 1] - high_post_terms[:, 0] \n","low_terms_cnt = low_post_terms[:, 1] - low_post_terms[:, 0] \n","\n","high_prime_terms = np.vstack((co_prime_fill_idx[valid_cu_bool], cu_idx[valid_cu_bool])).T.astype(int)\n","low_prime_terms = np.vstack((cu_prime_fill_idx[valid_co_bool], co_idx[valid_co_bool])).T.astype(int)"],"metadata":{"id":"SUFmr9Z_kcCN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# co_prime_idx\n","# co_prime_fill_idx\n","high_prime_terms"],"metadata":{"id":"_3pOQtt2ttfk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#  get_index_bybool(notnan_cu_bool, len_df_range)\n","valid_cu_idx = cu_idx[notnan_cu_bool]\n","valid_shift_cu_idx = pd.Series(valid_cu_idx).shift(1).to_numpy()\n","valid_co_idx = co_idx[notnan_co_bool]\n","valid_shift_co_idx = pd.Series(valid_co_idx).shift(1).to_numpy()\n","\n","valid_cu_idx - valid_shift_cu_idx\n","valid_co_idx - valid_shift_co_idx"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kKaD1fK3WPRP","executionInfo":{"status":"ok","timestamp":1651756811396,"user_tz":-540,"elapsed":6,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"bbe470f3-17d0-4029-97e9-2fb383a0c752"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([nan,  2.,  7.,  2.,  4.,  2.,  7.,  5.,  4.,  6.,  9.,  2.,  5., 11., 14.])"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["def wave_range_v14(t_df, config, ltf_df=None, term_thresh1=1, term_thresh2=3):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(t_df.index)\n","  period1 = config.tr_set.wave_period\n","  # print(period1)\n","\n","  itv_num = to_itvnum(itv)\n","  # print(itv_num)\n","\n","  t_df = donchian_channel_v4(t_df, period1) \n","\n","  dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","  b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","  len_df = len(t_df)   \n","  len_df_range = np.arange(len_df).astype(int)\n","  # short_open_res = np.ones(len_df)\n","  # long_open_res = np.ones(len_df)\n","\n","  data_cols = ['open', 'high', 'low', 'close']\n","  open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","  b1_close = t_df.close.shift(itv_num).to_numpy()\n","  \n","  # ============ modules ============ #  \n","  # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","  cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","  co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","\n","  cu_idx = get_index_bybool(cu_bool, len_df_range)   # for marking\n","  co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","  # high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","  # high_terms, low_terms, high_terms_cnt, low_terms_cnt, cu_idx_term, co_idx_term = get_terms_info_v2(cu_bool, co_bool, len_df_range)\n","  high_terms, low_terms, high_terms_cnt, low_terms_cnt, cu_idx_term, co_idx_term = get_terms_info_v3(cu_bool, co_bool, len_df_range)\n","\n","  paired_cu_idx = high_terms[:, 1]\n","  paired_co_idx = low_terms[:, 1]\n","\n","  # ------ 생략 이전 terms' hl ------ #\n","  wave_high_terms_low_ = np.full(len_df, np.nan)\n","  wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","  wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])\n","  wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])  \n","\n","  wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","  wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","  # ------ 생략된 cu, co 에 대한 2nd pairing 진행 ------ #\n","  # cu_bool[high_terms[:, 1][high_terms_cnt <= term_thresh]] = False\n","  # co_bool[low_terms[:, 1][low_terms_cnt <= term_thresh]] = False  \n","  cu_bool[high_terms[:, 1][(high_terms_cnt <= term_thresh1) & (cu_idx_term <= term_thresh2)]] = False\n","  co_bool[low_terms[:, 1][(low_terms_cnt <= term_thresh1) & (co_idx_term <= term_thresh2)]] = False  \n","\n","  # high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","  # high_terms, low_terms, high_terms_cnt, low_terms_cnt, _, _ = get_terms_info_v2(cu_bool, co_bool, len_df_range)\n","  high_post_terms, low_post_terms, high_terms_cnt, low_terms_cnt, high_prime_terms, low_prime_terms, cu_idx_term, co_idx_term = get_terms_info_v3(cu_bool, co_bool, len_df_range)\n","  \n","  paired_cu_idx = high_prime_terms[:, 1]\n","  paired_co_idx = low_prime_terms[:, 1]\n","\n","  # ====== get wave_hl & terms ====== #\n","  wave_high_ = np.full(len_df, np.nan)\n","  wave_low_ = np.full(len_df, np.nan)\n","\n","  wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])\n","  wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","  wave_high_[paired_cu_idx] = wave_highs\n","  wave_low_[paired_co_idx] = wave_lows\n","\n","  wave_high_fill_ = fill_arr(wave_high_)\n","  wave_low_fill_ = fill_arr(wave_low_)\n","\n","  # wave_high_terms_low_ = np.full(len_df, np.nan)\n","  # wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","  # wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","  # wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])\n","\n","  # wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","  # wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","  wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","  wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","  wave_high_terms_cnt_[paired_cu_idx] = high_terms_cnt\n","  wave_low_terms_cnt_[paired_co_idx] = low_terms_cnt\n","\n","  wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","  wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","  \n","  # ------ hl_fill 의 prime_idx 를 찾아야함 ------ # \n","  b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","  b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","  wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","  wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","\n","  cu_prime_idx = wave_high_prime_idx\n","  cu_prime_idx_fill_ = fill_arr(cu_prime_idx)\n","\n","  co_prime_idx = wave_low_prime_idx\n","  co_prime_idx_fill_ = fill_arr(wave_low_prime_idx)  \n","\n","  # ============ enlist to df_cols ============ #       \n","  t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","  t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","\n","  t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","  t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","  t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * (wave_high_terms_low_ >= wave_low_fill_)   # co ~ cu’s low 가 wave_low 갱신할 경우 point 에서 제외\n","  t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * (wave_low_terms_high_ <= wave_high_fill_)\n","  t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool   # temporary, for plot_check\n","  t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","  t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","  t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","  # ------ for roll prev_hl ------ # \n","  t_df['wave_cu_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx\n","  t_df['wave_co_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx\n","  \n","  # ------ for first_high ------ # \n","  t_df['wave_cu_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_idx_fill_\n","  t_df['wave_co_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_idx_fill_\n","    \n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-15, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, t_df, join_cols), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range()'s join() :\", e)\n","  else:\n","    ltf_df = t_df    \n","\n","  return ltf_df\n","  \n","def wave_range_v13(t_df, config, ltf_df=None, term_thresh=2):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(t_df.index)\n","  period1 = config.tr_set.wave_period\n","  # print(period1)\n","\n","  itv_num = to_itvnum(itv)\n","  # print(itv_num)\n","\n","  t_df = donchian_channel_v4(t_df, period1) \n","\n","  dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","  b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","  len_df = len(t_df)   \n","  len_df_range = np.arange(len_df).astype(int)\n","  # short_open_res = np.ones(len_df)\n","  # long_open_res = np.ones(len_df)\n","\n","  data_cols = ['open', 'high', 'low', 'close']\n","  open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","  b1_close = t_df.close.shift(itv_num).to_numpy()\n","  \n","  # ============ modules ============ #  \n","  # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","  cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","  co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","\n","  cu_idx = get_index_bybool(cu_bool, len_df_range)   # for marking\n","  co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","  high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","\n","  wave_high_terms_low_ = np.full(len_df, np.nan)\n","  wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","  wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])  # 생략 이전 terms' hl\n","  wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])  \n","\n","  paired_cu_idx = high_terms[:, 1]\n","  paired_co_idx = low_terms[:, 1]\n","\n","  wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","  wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","  # ------ add update_hl ------ #\n","  wave_high_ = np.full(len_df, np.nan)\n","  wave_low_ = np.full(len_df, np.nan)\n","\n","  wave_low_[paired_cu_idx] = wave_high_terms_lows  \n","  wave_high_[paired_co_idx] = wave_low_terms_highs\n","\n","  # ------ 생략된 cu, co 에 대한 2nd pairing 진행 ------ #\n","  cu_bool[high_terms[:, 1][high_terms_cnt <= term_thresh]] = False\n","  co_bool[low_terms[:, 1][low_terms_cnt <= term_thresh]] = False  \n","  high_terms, low_terms, high_terms_cnt, low_terms_cnt = get_terms_info(cu_bool, co_bool, len_df_range)\n","  \n","  paired_cu_idx = high_terms[:, 1]\n","  paired_co_idx = low_terms[:, 1]\n","\n","  # ====== get wave_hl & terms ====== #\n","  wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])\n","  wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","  wave_high_[paired_cu_idx] = wave_highs\n","  wave_low_[paired_co_idx] = wave_lows\n","\n","  wave_high_fill_ = fill_arr(wave_high_)\n","  wave_low_fill_ = fill_arr(wave_low_)\n","\n","  # wave_high_terms_low_ = np.full(len_df, np.nan)\n","  # wave_low_terms_high_ = np.full(len_df, np.nan)\n","\n","  # wave_high_terms_lows = np.array([low[iin:iout + 1].min() for iin, iout in high_terms])  # for point rejection, Todo, min_max 설정 항상 주의\n","  # wave_low_terms_highs = np.array([high[iin:iout + 1].max() for iin, iout in low_terms])\n","\n","  # wave_high_terms_low_[paired_cu_idx] = wave_high_terms_lows\n","  # wave_low_terms_high_[paired_co_idx] = wave_low_terms_highs\n","\n","  wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","  wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","  wave_high_terms_cnt_[paired_cu_idx] = high_terms_cnt\n","  wave_low_terms_cnt_[paired_co_idx] = low_terms_cnt\n","\n","  wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","  wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","  \n","  # ------ hl_fill 의 prime_idx 를 찾아야함 ------ # \n","  b1_wave_high_fill_ = pd.Series(wave_high_fill_).shift(1).to_numpy()\n","  b1_wave_low_fill_ = pd.Series(wave_low_fill_).shift(1).to_numpy()\n","  wave_high_prime_idx = np.where((wave_high_fill_ != b1_wave_high_fill_) & ~np.isnan(wave_high_fill_), len_df_range, np.nan)\n","  wave_low_prime_idx = np.where((wave_low_fill_ != b1_wave_low_fill_) & ~np.isnan(wave_low_fill_), len_df_range, np.nan)\n","\n","  cu_prime_idx = wave_high_prime_idx\n","  cu_prime_idx_fill_ = fill_arr(cu_prime_idx)\n","\n","  co_prime_idx = wave_low_prime_idx\n","  co_prime_idx_fill_ = fill_arr(wave_low_prime_idx)  \n","\n","  # ============ enlist to df_cols ============ #       \n","  t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","  t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","\n","  t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","  t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","  t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * (wave_high_terms_low_ >= wave_low_fill_)   # co ~ cu’s low 가 wave_low 갱신할 경우 point 에서 제외\n","  t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * (wave_low_terms_high_ <= wave_high_fill_)\n","  t_df['wave_cu_bool_{}{}'.format(itv, period1)] = cu_bool   # temporary, for plot_check\n","  t_df['wave_co_bool_{}{}'.format(itv, period1)] = co_bool\n","  t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","  t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","  # ------ for roll prev_hl ------ # \n","  t_df['wave_cu_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx\n","  t_df['wave_co_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx\n","  \n","  # ------ for first_high ------ # \n","  t_df['wave_cu_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_idx_fill_\n","  t_df['wave_co_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_idx_fill_\n","    \n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-15, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, t_df, join_cols), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range()'s join() :\", e)\n","  else:\n","    ltf_df = t_df    \n","\n","  return ltf_df\n","\n","\n","def wave_range_v12(t_df, config, ltf_df=None):  # v2 for period1 only\n","\n","  itv = pd.infer_freq(t_df.index)\n","  period1 = config.tr_set.wave_period\n","  # print(period1)\n","\n","  itv_num = to_itvnum(itv)\n","  # print(itv_num)\n","\n","  t_df = donchian_channel_v4(t_df, period1) \n","\n","  dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].to_numpy()\n","  b1_dc_base_ = t_df['dc_base_{}{}'.format(itv, period1)].shift(itv_num).to_numpy()\n","\n","  len_df = len(t_df)   \n","  len_df_range = np.arange(len_df).astype(int)\n","  # short_open_res = np.ones(len_df)\n","  # long_open_res = np.ones(len_df)\n","\n","  data_cols = ['open', 'high', 'low', 'close']\n","  open, high, low, close = [t_df[col_].to_numpy() for col_ in data_cols]\n","  b1_close = t_df.close.shift(itv_num).to_numpy()\n","  \n","  # ============ modules ============ #  \n","  # ------ define co, cu ------ # <- point missing 과 관련해 정교해아함\n","  cu_bool = ((b1_close > b1_dc_base_) & (dc_base_ > close)) | ((b1_close > dc_base_) & (dc_base_ > close))\n","  co_bool = (b1_close < b1_dc_base_) & (dc_base_ < close) | ((b1_close < dc_base_) & (dc_base_ < close))\n","\n","  # Todo, term 조정은 이 line 에서 해야할 것\n","  b1_cu_bool = pd.Series(cu_bool).shift(1).to_numpy()\n","  b1_co_bool = pd.Series(co_bool).shift(1).to_numpy()\n","\n","  cu_bool *= ~b1_co_bool.astype(bool)  # short_term point 생략\n","  co_bool *= ~b1_cu_bool.astype(bool)\n","\n","  cu_idx = get_index_bybool(cu_bool, len_df_range)\n","  co_idx = get_index_bybool(co_bool, len_df_range)\n","\n","  cu_fill_idx = fill_arr(cu_idx)\n","  co_fill_idx = fill_arr(co_idx)\n","\n","  # ------ get co, cu terms ------ #\n","  high_bool = cu_fill_idx < co_fill_idx  # 이렇게 해야 high_terms[:, 1] 이 cu_idx 가 나옴\n","  low_bool = co_fill_idx < cu_fill_idx\n","\n","  high_terms_vec = get_index_bybool(high_bool, len_df_range)\n","  low_terms_vec = get_index_bybool(low_bool, len_df_range) # -> low_terms\n","\n","  high_terms_list = using_clump(high_terms_vec)\n","  low_terms_list = using_clump(low_terms_vec)\n","\n","  high_terms = np.array([[terms.min(), terms.max() + 1] for terms in high_terms_list])\n","  low_terms = np.array([[terms.min(), terms.max() + 1] for terms in low_terms_list])\n","\n","  high_terms_cnt = high_terms[:, 1] - high_terms[:, 0] \n","  low_terms_cnt = low_terms[:, 1] - low_terms[:, 0] \n","\n","  wave_highs = np.array([high[iin:iout + 1].max() for iin, iout in high_terms])\n","  wave_lows = np.array([low[iin:iout + 1].min() for iin, iout in low_terms])\n","\n","  # ------ get valid_idx range (inner len_df) ------ #\n","  paired_cu_idx = high_terms[:, 1]\n","  paired_co_idx = low_terms[:, 1]\n","\n","  valid_cu_bool = paired_cu_idx < len_df\n","  valid_co_bool = paired_co_idx < len_df\n","\n","  paired_cu_valid_idx = paired_cu_idx[valid_cu_bool]\n","  paired_co_valid_idx = paired_co_idx[valid_co_bool]\n","\n","  # ------ get wave_hl & terms ------ #\n","  wave_high_ = np.full(len_df, np.nan)\n","  wave_low_ = np.full(len_df, np.nan)\n","\n","  wave_high_[paired_cu_valid_idx] = wave_highs[valid_cu_bool]\n","  wave_low_[paired_co_valid_idx] = wave_lows[valid_co_bool]\n","\n","  wave_high_fill_ = fill_arr(wave_high_)\n","  wave_low_fill_ = fill_arr(wave_low_)\n","\n","  wave_high_terms_cnt_ = np.full(len_df, np.nan)\n","  wave_low_terms_cnt_ = np.full(len_df, np.nan)\n","\n","  wave_high_terms_cnt_[paired_cu_valid_idx] = high_terms_cnt[valid_cu_bool]\n","  wave_low_terms_cnt_[paired_co_valid_idx] = low_terms_cnt[valid_co_bool]\n","\n","  wave_high_terms_cnt_fill_ = fill_arr(wave_high_terms_cnt_)\n","  wave_low_terms_cnt_fill_ = fill_arr(wave_low_terms_cnt_)\n","\n","  # ------ check update high & low (occurs by point missing) ------ # \n","  co_prime_idx = np.full(len_df, np.nan)\n","  co_prime_idx[paired_co_valid_idx] = paired_co_valid_idx\n","  co_prime_idx_fill_ = fill_arr(co_prime_idx)\n","  # valid_idx = co_idx > co_prime_idx_fill_\n","  valid_idx = cu_idx > co_prime_idx_fill_\n","\n","  # update_low[valid_idx] = [low[iin:iout + 1].min() for iin, iout in zip(cu_prime_idx_fill_[valid_idx].astype(int), cu_idx[valid_idx].astype(int))]  # include open low\n","  # 1. 잘 생각해보면, cu_idx 에는 co_prime_idx_fill_ 을 사용하는게 맞음\n","  #   a. cu_idx 에 달려있는 low 가 co_prime_idx_fill_ 기준이니까\n","  # update_low = np.full(len_df, np.nan)\n","  # update_low[valid_idx] = [low[iin:iout + 1].min() for iin, iout in zip(co_prime_idx_fill_[valid_idx].astype(int), cu_idx[valid_idx].astype(int))]   # high 아닌가\n","  \n","  update_high = np.full(len_df, np.nan)\n","  update_high[valid_idx] = [high[iin:iout + 1].max() for iin, iout in zip(co_prime_idx_fill_[valid_idx].astype(int), cu_idx[valid_idx].astype(int))]   # high 아닌가 => 아님 update_low 이기 때문\n","  \n","  cu_prime_idx = np.full(len_df, np.nan)\n","  cu_prime_idx[paired_cu_valid_idx] = paired_cu_valid_idx\n","  cu_prime_idx_fill_ = fill_arr(cu_prime_idx)\n","  valid_idx = co_idx > cu_prime_idx_fill_\n","\n","  # update_high = np.full(len_df, np.nan)\n","  # update_high[valid_idx] = [high[iin:iout + 1].max() for iin, iout in zip(cu_prime_idx_fill_[valid_idx].astype(int), co_idx[valid_idx].astype(int))]\n","\n","  update_low = np.full(len_df, np.nan)\n","  update_low[valid_idx] = [low[iin:iout + 1].min() for iin, iout in zip(cu_prime_idx_fill_[valid_idx].astype(int), co_idx[valid_idx].astype(int))]\n","\n","  # ============ enlist to df_cols ============ #       \n","  t_df['wave_high_fill_{}{}'.format(itv, period1)] = wave_high_fill_\n","  t_df['wave_low_fill_{}{}'.format(itv, period1)] = wave_low_fill_\n","\n","  t_df['wave_update_high_fill_{}{}'.format(itv, period1)] = update_high\n","  t_df['wave_update_low_fill_{}{}'.format(itv, period1)] = update_low\n","\n","  t_df['wave_high_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_high_terms_cnt_fill_\n","  t_df['wave_low_terms_cnt_fill_{}{}'.format(itv, period1)] = wave_low_terms_cnt_fill_\n","  t_df['wave_cu_{}{}'.format(itv, period1)] = cu_bool * ~(update_low < wave_low_fill_)   # Todo, 이곳 다시 한번 확인 (old, point_missing 으로 인한 low 갱신 회피)\n","  t_df['wave_co_{}{}'.format(itv, period1)] = co_bool * ~(update_high > wave_high_fill_)\n","  t_df['wave_cu_marker_{}{}'.format(itv, period1)] = get_line(cu_idx, dc_base_)\n","  t_df['wave_co_marker_{}{}'.format(itv, period1)] = get_line(co_idx, dc_base_)\n","\n","  # ------ for roll prev_hl ------ # \n","  t_df['wave_cu_prime_idx_{}{}'.format(itv, period1)] = cu_prime_idx\n","  t_df['wave_co_prime_idx_{}{}'.format(itv, period1)] = co_prime_idx\n","  \n","  # ------ for first_high ------ # \n","  t_df['wave_cu_prime_idx_fill_{}{}'.format(itv, period1)] = cu_prime_idx_fill_\n","  t_df['wave_co_prime_idx_fill_{}{}'.format(itv, period1)] = co_prime_idx_fill_\n","    \n","  if itv != 'T':\n","    assert ltf_df is not None, \"assert ltf_df is not None\"\n","    join_cols = np.arange(-17, 0 ,1).astype(int)  # points & donchian_channels\n","    ltf_df.drop(t_df.columns[join_cols], inplace=True, axis=1, errors='ignore')\n","    try:\n","      ltf_df = ltf_df.join(to_lower_tf_v2(ltf_df, t_df, join_cols), how='inner')\n","    except Exception as e:\n","      print(\"error in wave_range()'s join() :\", e)\n","  else:\n","    ltf_df = t_df    \n","\n","  return ltf_df\n","\n","\n"],"metadata":{"id":"YoZpr7lDn7z-"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1MNVIExLULhJ"},"source":["#### legacy"]},{"cell_type":"code","source":[""],"metadata":{"id":"1eZov-szzNuB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EOXQbXixiQcK"},"source":["##### volume_profile"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7pFuazxpgx9B"},"outputs":[],"source":["session_df = res_df_.iloc[-1440:] # 0.159 -> 0.024 (14400 -> 1440)\n","volume = session_df['volume'].to_numpy()\n","close = session_df['close'].to_numpy()\n","# px.histogram(session_df, x='volume', y='close', nbins=150, orientation='h').show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SoPJkiyKiXLM"},"outputs":[],"source":["kde_factor = 0.05\n","num_samples = 100\n","\n","start_0 = time.time()\n","kde = stats.gaussian_kde(close,weights=volume,bw_method=kde_factor)\n","kdx = np.linspace(close.min(),close.max(),num_samples)\n","kdy = kde(kdx)\n","ticks_per_sample = (kdx.max() - kdx.min()) / num_samples\n","print(\"ticks_per_sample :\", ticks_per_sample)  # sample 당 가격\n","print(\"kdy elapsed_time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mK2jBddAxJ14"},"outputs":[],"source":["peaks,_ = signal.find_peaks(kdy)\n","pkx = kdx[peaks]\n","pky = kdy[peaks]\n","\n","plt.figure(figsize=(10,5))\n","# plt.hist(close, bins=num_samples, weights=volume, alpha=.8, color='#1592e6')\n","# plt.plot(kdx, kdy, color='white')\n","# plt.plot(pkx, pky, 'bo', color='yellow')\n","plt.plot(kdy, kdx, color='white')\n","plt.plot(pky, pkx, 'bo', color='yellow')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a8tpQZCy0SO1"},"outputs":[],"source":["pkx"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gfA946s8UgS0"},"outputs":[],"source":["# ------ vp 의 indi. 화가 필요함 -> point 설정 ------ #\n","# 1. 4 level 은 미리 만들어놓는게 맞는걸로 보임 -> 추종하는 function 이 많음 (utils_tr, ep_out ...)\n","#   a. 4 level 에 국한하는게 아니라, 모든 peaks 에 대해 levels 설정\n","#   b. 각 session 별로 peak_list 가 주어질 것\n","#     i. prev_data 사용해야하는점 주의 (session vp 는 future_data)"]},{"cell_type":"markdown","metadata":{"id":"3T-9FwWFXR4f"},"source":["###### prominence_info"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RmBt2agljClE"},"outputs":[],"source":["start_0 = time.time()\n","min_prom = kdy.max() * 0.0\n","pipsize = 0.01\n","max_width_pips = 20\n","# width_range=(1, max_width_pips * pipsize / ticks_per_sample)\n","width_range= max_width_pips * pipsize / ticks_per_sample\n","peaks, peak_props = signal.find_peaks(kdy, prominence=min_prom, width=width_range)\n","\n","peak_x = kdx[peaks]\n","peak_y = kdy[peaks]\n","# ------ prominence lines ------ #\n","left_base = peak_props['left_bases']\n","right_base = peak_props['right_bases']\n","line_x = peak_x\n","line_y0 = peak_y\n","line_y1 = peak_y # - peak_props['prominences']\n","print(\"prom_line elapsed_time :\", time.time() - start_0)\n","\n","\n","for x, y0, y1 in zip(line_x, line_y0, line_y1):\n","    fig.add_shape(type='line',\n","        xref='x', yref='y',\n","        # x0=x, y0=y0, x1=x, y1=y1,\n","        x0=x, y0=0, x1=x, y1=y1,\n","        line=dict(\n","            color='red',\n","            width=2,\n","        )\n","    )\n","\n","# ------ width ------ #\n","left_ips = peak_props['left_ips']\n","right_ips = peak_props['right_ips']\n","# width_x0 = kdx.min() + (left_ips * ticks_per_sample)\n","# width_x1 = kdx.min() + (right_ips * ticks_per_sample)\n","width_x0 = kdx.min() + (left_base * ticks_per_sample)\n","width_x1 = kdx.min() + (right_base * ticks_per_sample)\n","\n","# int_from = kdx.min() + (left_base * ticks_per_sample)\n","# int_to = kdx.min() + (right_base * ticks_per_sample)\n","# [kde.integrate_box_1d(x0, x1) for x0, x1 in zip(int_from, int_to)]\n","\n","width_y = peak_props['width_heights']\n","\n","for x0, x1, y in zip(width_x0, width_x1, width_y):\n","    fig.add_shape(type='line',\n","        xref='x', yref='y',\n","        x0=x0, y0=y, x1=x1, y1=y,\n","        line=dict(\n","            color='red',\n","            width=2,\n","        )\n","    )\n","fig.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zqj944n-WzyZ"},"outputs":[],"source":["# peaks  # ndarray\n","# kdx  # ndarray\n","# kdy  # ndarray\n","# kdx.min()\n","left_base * ticks_per_sample\n","# volume"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rvqv0RGojo9h"},"outputs":[],"source":["print(peak_y)\n","print(peak_props['prominences'])\n","peak_props"]},{"cell_type":"markdown","metadata":{"id":"c2729DJ6h720"},"source":["##### imb."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rucj-iepiR_-"},"outputs":[],"source":["t_df = res_df_.iloc[-120:-100]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ktm1aB-Bh7GH"},"outputs":[],"source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(15, 9))\n","nrows, ncols = 1, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        # height_ratios=[3, 1]\n","                        )\n","\n","ax = fig.add_subplot(gs[0])\n","\n","# ------ candles ------ #\n","candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","_ = [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jMQBhQ1Ljt5Y"},"outputs":[],"source":["def imb_ratio_v4(df, itv):\n","\n","  itv_num = to_itvnum(itv)\n","\n","  close = df['close_{}'.format(itv)].to_numpy()\n","  open = df['open_{}'.format(itv)].to_numpy()\n","\n","  b1_close = df['close_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_open = df['open_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_high = df['high_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_low = df['low_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","  body_range = abs(close - open)\n","  b1_body_range = abs(b1_close - b1_open)\n","\n","  df['body_rel_ratio_{}'.format(itv)] = body_range / b1_body_range\n","\n","  short_body_range = np.where(close <= b1_low, body_range, b1_body_range)\n","  long_body_range = np.where(close >= b1_high, body_range, b1_body_range)\n","\n","  # 추후에 통계 측정해야함 -> bir 에 따른 개별 trader 의 epout / tpep 이라던가 => short 에 양봉은 취급안함 (why use np.nan)\n","  df['short_ir_{}'.format(itv)] = np.where(close < open, (b1_low - close) / short_body_range, np.nan) # close < open & close < b1_low\n","  df['long_ir_{}'.format(itv)] = np.where(close > open, (close - b1_high) / long_body_range, np.nan) # close > open & close > b1_high\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"I1Vq_BiKpY3P"},"outputs":[],"source":["def imb_ratio_v3(df, itv):\n","\n","  itv_num = to_itvnum(itv)\n","\n","  # high = df['high_{}'.format(itv)].to_numpy()\n","  # low = df['low_{}'.format(itv)].to_numpy()\n","  # candle_range = high - low\n","\n","  close = df['close_{}'.format(itv)].to_numpy()\n","  open = df['open_{}'.format(itv)].to_numpy()\n","\n","  b1_close = df['close_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_open = df['open_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_high = df['high_{}'.format(itv)].shift(itv_num).to_numpy()\n","  b1_low = df['low_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","  body_range = abs(close - open)\n","  b1_body_range = abs(b1_close - b1_open)\n","\n","  df['body_rel_ratio_{}'.format(itv)] = body_range / b1_body_range\n","\n","  short_body_ratio = np.where(close <= b1_low, body_range, b1_body_range)\n","  long_body_range = np.where(close >= b1_high, body_range, b1_body_range)\n","\n","  # 추후에 통계 측정해야함 -> bir 에 따른 개별 trader 의 epout / tpep 이라던가 => short 에 양봉은 취급안함 (why use np.nan)\n","  df['short_ir_{}'.format(itv)] = np.where(close < open, (b1_low - close) / body_range, np.nan) # close < open & close < b1_low\n","  df['long_ir_{}'.format(itv)] = np.where(close > open, (close - b1_high) / body_range, np.nan) # close > open & close > b1_high\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mtnMUkhwkdrE"},"outputs":[],"source":["imb_ratio(t_df, \"5T\")\n","# imb_ratio_v3(t_df, \"5T\")\n","# imb_ratio_v4(t_df, \"5T\")\n","\n","t_df.tail(100).short_ir_5T  # .461871\n","# t_df.iloc[:, -10:]\n","# t_df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RVUs1YE_pgBI"},"outputs":[],"source":["# imb_ratio(t_df, \"5T\")\n","# imb_ratio_v3(t_df, \"5T\")\n","imb_ratio_v4(t_df, \"5T\")\n","\n","t_df.tail(100).short_ir_5T  # .461871\n","# t_df.iloc[:, -10:]\n","# t_df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bieHiKjBkuFL"},"outputs":[],"source":["# ------ rtc 1, 0 개념 ------ #\n","# short_rtc_1 = close\n","# short_rtc_0 = b1_low\n","\n","# long_rtc_1 = close\n","# long_rtc_0 = b1_high\n","\n","# rtc 로 활용하려면, col 로 추가해야할 것 -> 추가할만한 col_name 은 아님\n","# 1. h_candle 인 경우 -> ?\n","#   a. h_candle_v3 먹이고, open_{}.shift(num_itv).to_numpy() 진행 -> ex. res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy() "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3X6bMXJIjPYy"},"outputs":[],"source":["# 1. 현재 종가 - 이전 고가 = imb_range (long)\n","long_imb_range = t_df.close - t_df.high.shift(1)\n","# 2. 이전 저가 - 현재 종가 - imb_range (short)\n","short_imb_range = t_df.low.shift(1) - t_df.close"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"q1nEA19v7Qpj"},"outputs":[],"source":["from math import floor\n","\n","\n","def _calc_dev(base_price, price):\n","    return 100 * (price - base_price) / base_price\n","\n","\n","def zigzag(highs, lows, depth=10, dev_threshold=5):\n","    def pivots(src_raw, length, isHigh):\n","        src = list(reversed(src_raw))\n","        bar_index = list(range(len(src)))\n","        for start in range(0, len(src)):\n","            if start + 2 * length + 1 > len(src) - 1:\n","                return\n","            p = 0\n","            if length < len(src) - start:\n","                p = src[start + length]\n","            if length == 0:\n","                yield 0, p\n","            else:\n","                isFound = True\n","                for i in range(start, start + length):\n","                    if isHigh and src[i] > p:\n","                        isFound = False\n","                    if not isHigh and src[i] < p:\n","                        isFound = False\n","                for i in range(start + length + 1, start + 2 * length + 1):\n","                    if isHigh and src[i] >= p:\n","                        isFound = False\n","                    c = not isHigh and src[i] <= p\n","                    if c:\n","                        isFound = False\n","                if isFound:\n","                    yield (bar_index[start + length], p)\n","                else:\n","                    yield None, None\n","\n","    data_highs = [x for x in pivots(highs, floor(depth / 2), True) if x[0]]\n","    data_lows = [x for x in pivots(lows, floor(depth / 2), False) if x[0]]\n","\n","    raw_pairs = []\n","\n","    for i, (ind, p) in enumerate(data_highs):\n","        lows_d = sorted([(ind_l, p_l) for ind_l, p_l in data_lows if ind > ind_l], key=lambda x: x[0])\n","        if lows_d:\n","            lows = lows_d[-1]\n","\n","            if abs(_calc_dev(lows[1], p)) >= dev_threshold:\n","                raw_pairs.append(\n","                    ((ind, p),\n","                     (lows[0], lows[1]))\n","                )\n","\n","    result = []\n","\n","    for (i_h, p_h),(i_l, p_l) in raw_pairs:\n","        if not result:\n","            result.append(((i_h, p_h),(i_l, p_l)))\n","            continue\n","\n","        if i_l == result[-1][1][0]:\n","            if p_h > result[-1][0][1]:\n","                result = result[:-1]\n","            else:\n","                continue\n","\n","        result.append(((i_h, p_h),(i_l, p_l)))\n","\n","    return result\n","\n","# highs, lows = t_df.high.to_numpy(), t_df.low.to_numpy()\n","# zigzag(highs, lows, depth=5, dev_threshold=5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fGlmdyb97j4Q"},"outputs":[],"source":["t_df = res_df_.iloc[-120:]\n","a_data = t_df.to_numpy()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ropzIp0wUPAA"},"outputs":[],"source":["# import plotly.express as px\n","# import plotly.graph_objects as go\n","\n","def get_dist_plot(c, v, kx, ky):\n","    fig = go.Figure()\n","    fig.add_trace(go.Histogram(name='Vol Profile', x=c, y=v, nbinsx=150, \n","                               histfunc='sum', histnorm='probability density',\n","                               marker_color='#B0C4DE'))\n","    fig.add_trace(go.Scatter(name='KDE', x=kx, y=ky, mode='lines', marker_color='#D2691E'))    \n","\n","    peaks,_ = signal.find_peaks(kdy)\n","    pkx = kdx[peaks]\n","    pky = kdy[peaks]\n","    pk_marker_args=dict(size=10, color='black')\n","    fig.add_trace(go.Scatter(name=\"Peaks\", x=pkx, y=pky, mode='markers', marker=pk_marker_args))\n","    fig.show()\n","\n","    return fig"]},{"cell_type":"markdown","source":["##### instant."],"metadata":{"id":"RZJ6uIA_VcJs"}},{"cell_type":"code","source":["def wave_range_ratio(res_df, config, bb_itv, bb_period):\n","\n","  wave_itv = pd.infer_freq(res_df.index)\n","  wave_period = config.tr_set.wave_period\n","\n","  bb_upper_ = res_df['bb_upper_{}{}'.format(bb_itv, bb_period)].to_numpy()\n","  bb_lower_ = res_df['bb_lower_{}{}'.format(bb_itv, bb_period)].to_numpy()\n","  \n","  cu_prime_idx_fill_ = res_df['wave_cu_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","  co_prime_idx_fill_ = res_df['wave_co_prime_idx_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","  cu_bb_range = get_line(co_prime_idx_fill_, bb_upper_) - get_line(co_prime_idx_fill_, bb_lower_)  # cu 에서 co_prime 의 bb_range 사용\n","  co_bb_range = get_line(cu_prime_idx_fill_, bb_upper_) - get_line(cu_prime_idx_fill_, bb_lower_)\n","\n","  wave_range = res_df['wave_high_fill_{}{}'.format(wave_itv, wave_period)].to_numpy() - res_df['wave_low_fill_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","  \n","  res_df['cu_wrr_{}{}'.format(wave_itv, wave_period)] = wave_range / cu_bb_range   # for cu (currently, long)\n","  res_df['co_wrr_{}{}'.format(wave_itv, wave_period)] = wave_range / co_bb_range\n","\n","  return res_df"],"metadata":{"id":"nLWAP1Cl2Hvu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Todo, future_data\n","def enough_space(res_df, itv, period):\n","\n","  dc_upper_ = res_df['dc_upper_{}{}'.format(itv, period)].to_numpy()\n","  dc_base_ = res_df['dc_base_{}{}'.format(itv, period)].to_numpy()\n","  dc_lower_ = res_df['dc_lower_{}{}'.format(itv, period)].to_numpy()  \n","  high_ = res_df['high_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","  low_ = res_df['low_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","\n","  half_dc_gap = dc_upper_ - dc_base_\n","\n","  res_df['cu_es_{}{}'.format(itv, period)] = (low_ - dc_lower_) / half_dc_gap\n","  res_df['co_es_{}{}'.format(itv, period)] = (dc_upper_ - high_) / half_dc_gap\n","\n","  return res_df"],"metadata":{"id":"H_zPYIshbZgP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Todo, future_data\n","def candle_range_ratio(res_df, c_itv, bb_itv, bb_period):\n","\n","  itv_num = to_itvnum(c_itv)\n","\n","  b1_bb_upper_ = res_df['bb_upper_{}{}'.format(bb_itv, bb_period)].shift(itv_num).to_numpy()\n","  b1_bb_lower_ = res_df['bb_lower_{}{}'.format(bb_itv, bb_period)].shift(itv_num).to_numpy()\n","  bb_range = b1_bb_upper_ - b1_bb_lower_   # <-- h_candle's open_idx 의 bb_gap 사용\n","\n","  high_ = res_df['high_{}'.format(c_itv)].to_numpy()\n","  low_ = res_df['low_{}'.format(c_itv)].to_numpy()\n","  candle_range = high_ - low_  # 부호로 양 / 음봉 구분 (양봉 > 0)\n","  \n","  res_df['crr_{}'.format(c_itv)] = candle_range / bb_range\n","\n","  return res_df"],"metadata":{"id":"o3IUBc59VR5D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def body_rel_ratio(res_df, c_itv):\n","\n","  itv_num = to_itvnum(c_itv)\n","  \n","  b1_close_ = res_df['close_{}'.format(c_itv)].shift(itv_num).to_numpy()\n","  b1_open_ = res_df['open_{}'.format(c_itv)].shift(itv_num).to_numpy()\n","  b1_body_range = abs(b1_close_ - b1_open_)\n","\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  body_range = abs(close_ - open_)\n","  \n","  res_df['body_rel_ratio_{}'.format(c_itv)] = body_range / b1_body_range\n","\n","  return res_df\n","\n","def dc_over_body_ratio(res_df, c_itv, dc_itv, dc_period):\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  body_range = abs(close_ - open_)\n","  \n","  dc_upper_ = res_df['dc_upper_{}{}'.format(dc_itv, dc_period)].to_numpy()\n","  dc_lower_ = res_df['dc_lower_{}{}'.format(dc_itv, dc_period)].to_numpy() \n","\n","  res_df['dc_upper_{}{}_br'.format(dc_itv, dc_period)] = (close_ - dc_upper_) / body_range\n","  res_df['dc_lower_{}{}_br'.format(dc_itv, dc_period)] = (dc_lower_ - close_) / body_range\n","\n","  return res_df"],"metadata":{"id":"u3yFd8Dcok5m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def candle_pumping_ratio_v2(res_df, c_itv, dc_itv, period):\n","\n","  res_df = dc_line_v3(res_df, dc_itv, dc_period=period)\n","\n","  dc_upper_ = res_df['dc_upper_{}{}'.format(dc_itv, period)].to_numpy()\n","  dc_lower_ = res_df['dc_lower_{}{}'.format(dc_itv, period)].to_numpy()\n","  dc_range = dc_upper_ - dc_lower_\n"," \n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  body = close_ - open_  # 부호로 양 / 음봉 구분 (양봉 > 0)\n","  \n","  res_df['cppr_{}'.format(c_itv)] = body / dc_range\n","\n","  return res_df\n","\n","\n","# Todo, future_data\n","def candle_pumping_ratio(res_df, c_itv, bb_itv, period):\n","\n","  itv_num = to_itvnum(c_itv)\n","\n","  # 여기에도 v2 처럼 bb_indi. 추가 (자동화)\n","\n","  b1_bb_upper_ = res_df['bb_upper_{}{}'.format(bb_itv, period)].shift(itv_num).to_numpy()\n","  b1_bb_lower_ = res_df['bb_lower_{}{}'.format(bb_itv, period)].shift(itv_num).to_numpy()\n","  bb_range = b1_bb_upper_ - b1_bb_lower_\n","\n","  open_ = res_df['open_{}'.format(c_itv)].to_numpy()\n","  close_ = res_df['close_{}'.format(c_itv)].to_numpy()\n","  body = close_ - open_  # 부호로 양 / 음봉 구분 (양봉 > 0)\n","  \n","  res_df['cppr_{}'.format(c_itv)] = body / bb_range\n","\n","  return res_df\n","\n","\n","def pumping_ratio(res_df, config, itv, period1, period2):\n","\n","  bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","  bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","  bb_range = bb_upper_5T - bb_lower_5T\n","\n","  selection_id = config.selection_id\n","  \n","  res_df['short_ppr_{}'.format(selection_id)] = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy() / get_line(res_df['short_wave_high_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), bb_range)\n","  res_df['long_ppr_{}'.format(selection_id)] = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy() / get_line(res_df['long_wave_low_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), bb_range)\n"],"metadata":{"id":"JWj02LLGbnji"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OpkclLSzazZ-"},"outputs":[],"source":["def wave_body_ratio(res_df_, itv, period):\n","  dc_upper_ = res_df_['dc_upper_{}{}'.format(itv, period)].to_numpy()\n","  dc_lower_ = res_df_['dc_lower_{}{}'.format(itv, period)].to_numpy()\n","  close_ = res_df_['close_{}'.format(itv)].to_numpy()\n","  open_ = res_df_['open_{}'.format(itv)].to_numpy()\n","\n","  dc_range = dc_upper_ - dc_lower_\n","  body_range = abs(close_ - open_)\n","\n","  res_df_['wave_body_ratio'] = body_range / dc_range\n","  res_df_['dc_upper_body_ratio'] = (np.maximum(close_, open_) - dc_upper_) / body_range\n","  res_df_['dc_lower_body_ratio'] = (dc_lower_) - np.minimum(close_, open_) / body_range\n","\n","  return"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0-zzitQRbnz8"},"outputs":[],"source":["# res_df_['wave_body_ratio'].tail(200)\n","\n","itv = 'H'\n","period = 5\n","wave_body_ratio(res_df_, itv, period)"]},{"cell_type":"markdown","metadata":{"id":"qsyPhNR8yP1c"},"source":["##### dump"]},{"cell_type":"markdown","metadata":{"id":"xpyP5t8Ht_pE"},"source":["### calc recursive indi's min_period"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"N1Hbm4OA4Tkk"},"outputs":[],"source":["ticker_prcn = get_precision_by_price(res_df.close.iloc[-1]) + 2\n","\n","target_len = 300000\n","slice_len_list = list(range(50, 10000, 100))\n","slice_len_list.insert(0, target_len)\n","\n","start_0 = time.time()\n","# prev_int_, prev_pnts_ = None, None\n","offset = 1\n","\n","for sl_idx, sample_len in enumerate(slice_len_list):\n","\n","  sample_df = res_df.iloc[-sample_len -offset:-offset]\n","  sample_len2 = sample_len\n","\n","  # --------- input using indi.s --------- #\n","  # res = ema_v0(sample_df['close'], 190)\n","  res = rsi(sample_df, 14)\n","\n","    #    to_htf()    #\n","  # df_5T = to_htf(sample_df, itv_='5T', offset='1h')\n","  # sample_len2 = len(df_5T)\n","\n","  # # --------- input using htf_indi. --------- #\n","  # res = ema(df_5T['close'], 195)\n","  # -------------------------------------- #\n","\n","  res_last_row = res.iloc[-1]\n","  if pd.isnull(res_last_row):\n","    continue\n","\n","  # print(res_last_row)\n","  # break\n","\n","  # sample_df = sample_df.join(to_lower_tf_v2(sample_df, df_5T, [-1]), how='inner')\n","\n","\n","  #   자리수 분할 계산    #\n","  int_, points_ = str(res_last_row).split('.')\n","  pnts_ = points_[:ticker_prcn]\n","\n","  if sl_idx == 0:\n","    target_int_ = int_\n","    target_pnts_ = pnts_\n","    print(\"target {} ({}) -> {} {}\".format(sample_len, sample_len2, int_, points_))\n","\n","  else:\n","    if target_int_ == int_ and target_pnts_ == pnts_:\n","      # print(sample_len, \"({})\".format(sample_len2), '->', int_, pnts_, end='\\n\\n')\n","      print(\"{} ({}) -> {} {}\\n\".format(sample_len, sample_len2, int_, points_))\n","      break\n","\n","print(time.time() - start_0)  # (1301)(1361)(1301)"]},{"cell_type":"markdown","metadata":{"id":"rrIGjmUzqU-D"},"source":["## import utils & config"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"SeJan_0t95yL","executionInfo":{"status":"ok","timestamp":1653017705738,"user_tz":-540,"elapsed":1647,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["frame_ver = \"0114_htf\"\n","ID_arr = np.array(['v3', 'v5_2'])\n","\n","utils_public_name = \"{}.utils.{}_utils_public\".format(strat_pkg, frame_ver)\n","utils_public_lib = importlib.import_module(utils_public_name)\n","utils_public = utils_public_lib   # temporary\n","\n","u_name_list = [\"{}.utils.{}_utils_{}\".format(strat_pkg, frame_ver, id_) for id_ in ID_arr]\n","utils_arr = np.array([importlib.import_module(u_name) for u_name in u_name_list])\n","\n","config_name_list = [\"{}_config_{}.json\".format(frame_ver, id_) for id_ in ID_arr]\n","cfg_path_list = [os.path.join(current_path, strat_pkg, \"config\", name_) for name_ in config_name_list]\n","cfg_file_list = [open(cfg_path) for cfg_path in cfg_path_list]\n","config_arr = np.array([EasyDict(json.load(cfg_)) for cfg_ in cfg_file_list])\n","\n","# ------ opened files should be closed --> 닫지 않으면 reopen 시 error occurs ------ #\n","_ = [cfg_.close() for cfg_ in cfg_file_list]\n","show_plot = 1   # idep's var - do not touch"]},{"cell_type":"markdown","metadata":{"id":"leSQlImg4_9L"},"source":["### utils_"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"CB2yZdQ95Cdg","executionInfo":{"status":"ok","timestamp":1653017706419,"user_tz":-540,"elapsed":684,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# import pandas as pd\n","# import numpy as np\n","# import logging\n","\n","def enlist_tr(res_df, config, np_timeidx, mode='OPEN', show_detail=True):\n","\n","    # ================== enlist wave_unit ================== #\n","    selection_id = config.selection_id\n","    \n","    len_df = len(res_df)\n","    len_df_range = np.arange(len_df)\n","      \n","    wave_itv1 = config.tr_set.wave_itv1\n","    wave_period1 = config.tr_set.wave_period1\n","    wave_itv2 = config.tr_set.wave_itv2\n","    wave_period2 = config.tr_set.wave_period2\n","\n","    roll_hl_cnt = 3\n","\n","    roll_highs1 = [res_df['wave_high_fill_{}{}_-{}'.format(wave_itv1, wave_period1, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","    roll_lows1 = [res_df['wave_low_fill_{}{}_-{}'.format(wave_itv1, wave_period1, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","\n","    wave_high_fill1_ = res_df['wave_high_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    wave_low_fill1_ = res_df['wave_low_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","    roll_highs2 = [res_df['wave_high_fill_{}{}_-{}'.format(wave_itv2, wave_period2, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","    roll_lows2 = [res_df['wave_low_fill_{}{}_-{}'.format(wave_itv2, wave_period2, cnt_ + 1)].to_numpy() for cnt_ in reversed(range(roll_hl_cnt))]\n","\n","    wave_high_fill2_ = res_df['wave_high_fill_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","    wave_low_fill2_ = res_df['wave_low_fill_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","    \n","    # cu's roll_high_[:, -1] = prev_high & cu's roll_low_[:, -1] = current_low\n","    # co's roll_low_[:, -1] = prev_low & co's roll_high_[:, -1] = current_high\n","    res_df['short_tp_1_{}'.format(selection_id)] = wave_low_fill1_      # wave_low_fill_ b2_low_5T\n","    res_df['short_tp_0_{}'.format(selection_id)] = roll_highs1[-1]   # roll_high_[:, -2] wave_high_fill_\n","    res_df['long_tp_1_{}'.format(selection_id)] = wave_high_fill1_      # wave_high_fill_ b2_high_5T\n","    res_df['long_tp_0_{}'.format(selection_id)] = roll_lows1[-1]     # roll_low_[:, -2]  wave_low_fill_\n","\n","    res_df['short_ep_1_{}'.format(selection_id)] = wave_low_fill2_   # b2_low_5T\n","    res_df['short_ep_0_{}'.format(selection_id)] = wave_high_fill2_  # roll_high_[:, -2]\n","    res_df['long_ep_1_{}'.format(selection_id)] = wave_high_fill2_   # b2_high_5T\n","    res_df['long_ep_0_{}'.format(selection_id)] = wave_low_fill2_    # roll_low_[:, -2]\n","\n","    res_df['short_out_1_{}'.format(selection_id)] = wave_low_fill2_   # b2_low_5T\n","    res_df['short_out_0_{}'.format(selection_id)] = roll_highs2[-1]  # roll_high_[:, -2]\n","    res_df['long_out_1_{}'.format(selection_id)] = wave_high_fill2_   # b2_high_5T\n","    res_df['long_out_0_{}'.format(selection_id)] = roll_lows2[-1]    # roll_low_[:, -2]\n","\n","    # ------ inversion ------ #\n","    if config.pos_set.short_inversion or config.pos_set.long_inversion:\n","        res_df.rename({short_tp_1_: long_tp_1_, long_tp_1_: short_tp_1_}, axis=1, inplace=True)\n","        res_df.rename({short_tp_0_: long_tp_0_, long_tp_0_: short_tp_0_}, axis=1, inplace=True)\n","        res_df.rename({short_epout_1_: long_epout_1_, long_epout_1_: short_epout_1_}, axis=1, inplace=True)\n","        res_df.rename({short_epout_0_: long_epout_0_, long_epout_0_: short_epout_0_}, axis=1, inplace=True)\n","\n","    res_df['short_tp_gap_{}'.format(selection_id)] = abs(res_df['short_tp_1_{}'.format(selection_id)] - res_df['short_tp_0_{}'.format(selection_id)])\n","    res_df['long_tp_gap_{}'.format(selection_id)] = abs(res_df['long_tp_1_{}'.format(selection_id)] - res_df['long_tp_0_{}'.format(selection_id)])\n","    res_df['short_ep_gap_{}'.format(selection_id)] = abs(res_df['short_ep_1_{}'.format(selection_id)] - res_df['short_ep_0_{}'.format(selection_id)])\n","    res_df['long_ep_gap_{}'.format(selection_id)] = abs(res_df['long_ep_1_{}'.format(selection_id)] - res_df['long_ep_0_{}'.format(selection_id)])\n","    res_df['short_out_gap_{}'.format(selection_id)] = abs(res_df['short_out_1_{}'.format(selection_id)] - res_df['short_out_0_{}'.format(selection_id)])\n","    res_df['long_out_gap_{}'.format(selection_id)] = abs(res_df['long_out_1_{}'.format(selection_id)] - res_df['long_out_0_{}'.format(selection_id)])\n","\n","\n","    data_cols = ['open', 'high', 'low', 'close']  # Todo - public_indi 이전에 해야할지도 모름 # 'close', 'haopen', 'hahigh', 'halow', 'haclose'\n","    open, high, low, close = [res_df[col_].to_numpy() for col_ in data_cols]\n","\n","    # ================== point ================== #     \n","    short_open_res1 = np.ones(len_df)\n","    long_open_res1 = np.ones(len_df)\n","\n","    short_open_res2 = np.ones(len_df)\n","    long_open_res2 = np.ones(len_df)\n","    \n","    # ------------ wave_point ------------ #\n","    short_open_res1 *= res_df['wave_cu_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    long_open_res1 *= res_df['wave_co_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","    short_open_res2 *= res_df['wave_cu_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","    long_open_res2 *= res_df['wave_co_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","\n","    if show_detail:\n","      sys_log.warning(\"wave_point\")\n","      sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))  \n","      sys_log.warning(\"np.sum(short_open_res2 == 1) : {}\".format(np.sum(short_open_res2 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res2 == 1) : {}\".format(np.sum(long_open_res2 == 1)))  \n","    \n","    # ------ reject update_hl ------ #\n","    short_open_res1 *= ~res_df['wave_update_low_cu_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    long_open_res1 *= ~res_df['wave_update_high_co_bool_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","    short_open_res2 *= ~res_df['wave_update_low_cu_bool_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","    long_open_res2 *= ~res_df['wave_update_high_co_bool_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","\n","    if show_detail:\n","      sys_log.warning(\"reject update_hl\")\n","      sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))  \n","      sys_log.warning(\"np.sum(short_open_res2 == 1) : {}\".format(np.sum(short_open_res2 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res2 == 1) : {}\".format(np.sum(long_open_res2 == 1)))  \n","\n","    # ------ tf_entry ------ #\n","    if wave_itv1 != 'T':\n","      tf_entry = to_itvnum(config.loc_set.point1.tf_entry)\n","      \n","      short_open_res1 *= np_timeidx % tf_entry == (tf_entry - 1)\n","      long_open_res1 *= np_timeidx % tf_entry == (tf_entry - 1) \n","      short_open_res2 *= np_timeidx % tf_entry == (tf_entry - 1)\n","      long_open_res2 *= np_timeidx % tf_entry == (tf_entry - 1) \n","\n","      if show_detail:\n","        sys_log.warning(\"tf_entry\")\n","        sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","        sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))  \n","        sys_log.warning(\"np.sum(short_open_res2 == 1) : {}\".format(np.sum(short_open_res2 == 1)))\n","        sys_log.warning(\"np.sum(long_open_res2 == 1) : {}\".format(np.sum(long_open_res2 == 1))) \n","\n","    # ------ wave_point 분리 ------ #\n","    # cci_ = res_df['cci_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    # b1_cci_ = res_df['cci_{}{}'.format(wave_itv1, wave_period1)].shift(1).to_numpy()        \n","    \n","    # band_width = 100\n","    # upper_band = band_width\n","    # lower_band = -band_width\n","\n","    # update_low_cu_bool = res_df['update_low_cu_bool_{}{}'.format(wave_itv1, wave_period1)]\n","    # update_high_co_bool = res_df['update_high_co_bool_{}{}'.format(wave_itv1, wave_period1)]\n","\n","    # short_open_res1 *= (b1_cci_ > upper_band) & (upper_band > cci_) & ~update_low_cu_bool\n","    # long_open_res1 *= (b1_cci_ < lower_band) & (lower_band < cci_) & ~update_high_co_bool   \n","\n","    # ------ wave_mm ------ #\n","    wave_high_terms_cnt_fill1_ = res_df['wave_high_terms_cnt_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    wave_low_terms_cnt_fill1_ = res_df['wave_low_terms_cnt_fill_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","    short_open_res1 *= (wave_high_terms_cnt_fill1_ > config.tr_set.wave_greater2) & (wave_low_terms_cnt_fill1_ > config.tr_set.wave_greater1)\n","    long_open_res1 *= (wave_low_terms_cnt_fill1_ > config.tr_set.wave_greater2) & (wave_high_terms_cnt_fill1_ > config.tr_set.wave_greater1)\n","\n","    wave_high_terms_cnt_fill2_ = res_df['wave_high_terms_cnt_fill_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","    wave_low_terms_cnt_fill2_ = res_df['wave_low_terms_cnt_fill_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","\n","    short_open_res2 *= (wave_high_terms_cnt_fill2_ > config.tr_set.wave_greater2) & (wave_low_terms_cnt_fill2_ > config.tr_set.wave_greater1)\n","    long_open_res2 *= (wave_low_terms_cnt_fill2_ > config.tr_set.wave_greater2) & (wave_high_terms_cnt_fill2_ > config.tr_set.wave_greater1)\n","\n","    if show_detail:\n","      sys_log.warning(\"wave_mm\")\n","      sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))\n","      sys_log.warning(\"np.sum(short_open_res2 == 1) : {}\".format(np.sum(short_open_res2 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res2 == 1) : {}\".format(np.sum(long_open_res2 == 1)))\n","\n","    # ================== pattern depiction ================== #  \n","    # bb_upper_ = res_df['bb_upper_{}{}'.format('T', 60)].to_numpy()\n","    # bb_lower_ = res_df['bb_lower_{}{}'.format('T', 60)].to_numpy()\n","    # bb_upper2_ = res_df['bb_upper2_{}{}'.format('T', 60)].to_numpy()\n","    # bb_lower2_ = res_df['bb_lower2_{}{}'.format('T', 60)].to_numpy()\n","    # bb_upper3_ = res_df['bb_upper3_{}{}'.format('T', 60)].to_numpy()\n","    # bb_lower3_ = res_df['bb_lower3_{}{}'.format('T', 60)].to_numpy()\n","    \n","    # ------ 양 / 음봉 (long) ------ #\n","    # short_open_res1 *= close < open\n","    # long_open_res1 *= close > open\n","\n","    # if show_detail:\n","    #   sys_log.warning(\"close > open\")\n","    #   sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","    #   sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))\n","\n","    \n","    # # ------ even_break, hhhl (long) ------ #        \n","    # # cu's roll_high_[:, -1] = prev_high & cu's roll_low_[:, -1] = current_low\n","    # # co's roll_low_[:, -1] = prev_low & co's roll_high_[:, -1] = current_high\n","    # short_open_res1 *= (roll_low_[:, -2] > roll_low_[:, -1]) # & (roll_high_[:, -2] > roll_high_[:, -1])\n","    # long_open_res1 *= (roll_high_[:, -2] < roll_high_[:, -1]) # & (roll_low_[:, -2] < roll_low_[:, -1])\n","\n","    # if show_detail:\n","    #   sys_log.warning(\"even_break\")\n","    #   sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","    #   sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))\n","\n","    # # ------ roll_high < bb_upper2 (long) ------ #\n","    # short_open_res1 *= (roll_low_[:, -4] > roll_low_bb_lower2_[:, -4])\n","    # short_open_res1 *= (roll_low_[:, -3] > roll_low_bb_lower2_[:, -3])\n","    # short_open_res1 *= (roll_low_[:, -2] > roll_low_bb_lower2_[:, -2])\n","    # short_open_res1 *= (roll_low_[:, -1] > roll_low_bb_lower2_[:, -1])\n","\n","    # long_open_res1 *= (roll_high_[:, -4] < roll_high_bb_upper2_[:, -4])\n","    # long_open_res1 *= (roll_high_[:, -3] < roll_high_bb_upper2_[:, -3])\n","    # long_open_res1 *= (roll_high_[:, -2] < roll_high_bb_upper2_[:, -2])\n","    # long_open_res1 *= (roll_high_[:, -1] < roll_high_bb_upper2_[:, -1])\n","    \n","    # if show_detail:\n","    #   sys_log.warning(\"roll_high < bb_upper2\")\n","    #   sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","    #   sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))\n","\n","    # ------ base_15T < wave_base ------ #\n","    # dc_base_ = res_df['dc_base_{}{}'.format(p1_itv1, p1_period1)].to_numpy()\n","    # wave_base_ = res_df['dc_base_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","    # short_open_res1 *= (dc_base_ > wave_base_) & (dc_base_ > close)\n","    # long_open_res1 *= (dc_base_ < wave_base_) & (dc_base_ < close)\n","\n","    # if show_detail:\n","    #   sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","    #   sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))     \n","        \n","\n","    # ================== tr_set ================== #\n","    # ------------ tp ------------ #\n","    tpg = config.tr_set.tp_gap\n","    res_df['short_tp_{}'.format(selection_id)] = res_df['short_tp_1_{}'.format(selection_id)].to_numpy() - res_df['short_tp_gap_{}'.format(selection_id)].to_numpy() * tpg\n","    res_df['long_tp_{}'.format(selection_id)] = res_df['long_tp_1_{}'.format(selection_id)].to_numpy() + res_df['long_tp_gap_{}'.format(selection_id)].to_numpy() * tpg\n","    # res_df['short_tp_{}'.format(selection_id)] = short_tp_1 - short_epout_gap * tpg\n","    # res_df['long_tp_{}'.format(selection_id)] = long_tp_1 + long_epout_gap * tpg\n","\n","    # ------ limit_ep ------ #\n","    if config.ep_set.entry_type == \"LIMIT\":\n","        epg = config.tr_set.ep_gap\n","        res_df['short_ep_{}'.format(selection_id)] = res_df['short_ep_0_{}'.format(selection_id)].to_numpy() + res_df['short_ep_gap_{}'.format(selection_id)].to_numpy() * epg\n","        res_df['long_ep_{}'.format(selection_id)] = res_df['long_ep_0_{}'.format(selection_id)].to_numpy() - res_df['long_ep_gap_{}'.format(selection_id)].to_numpy() * epg\n","        \n","        # res_df['short_ep_{}'.format(selection_id)] = short_tp_0 + short_tp_gap * epg\n","        # res_df['long_ep_{}'.format(selection_id)] = long_tp_0 - long_tp_gap * epg\n","        \n","        # wave_cu_marker_ = res_df['wave_cu_marker_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","        # wave_co_marker_ = res_df['wave_co_marker_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","        # res_df['short_ep_{}'.format(selection_id)] = wave_cu_marker_ + short_epout_gap * epg\n","        # res_df['long_ep_{}'.format(selection_id)] = wave_co_marker_ - long_epout_gap * epg\n","\n","    # ------ market_ep ------ #\n","    else:\n","        res_df['short_ep_{}'.format(selection_id)] = close\n","        res_df['long_ep_{}'.format(selection_id)] = close\n","\n","    # ------------ out ------------ #\n","    outg = config.tr_set.out_gap\n","    # res_df['short_out_{}'.format(selection_id)] = short_tp_0 + short_tp_gap * outg            # 1. for hhm check -> 규칙성과 wave_range 기반 거래 기준의 hhm 확인\n","    # res_df['long_out_{}'.format(selection_id)] = long_tp_0 - long_tp_gap * outg\n","    res_df['short_out_{}'.format(selection_id)] = res_df['short_out_0_{}'.format(selection_id)].to_numpy() + res_df['short_out_gap_{}'.format(selection_id)].to_numpy() * outg    # 2. for hlm check\n","    res_df['long_out_{}'.format(selection_id)] = res_df['long_out_0_{}'.format(selection_id)].to_numpy() - res_df['long_out_gap_{}'.format(selection_id)].to_numpy() * outg \n","\n","    # ------------ point validation ------------ #\n","    short_tp_ = res_df['short_tp_{}'.format(selection_id)].to_numpy()\n","    short_ep_ = res_df['short_ep_{}'.format(selection_id)].to_numpy()\n","    short_out_ = res_df['short_out_{}'.format(selection_id)].to_numpy()\n","    # short_open_res1 *= (short_tp_ < short_ep_) & (short_ep_ < short_out_)  # --> p2_box location (cannot be vectorized)\n","    # short_open_res1 *= close < short_ep_   # reject open_execution\n","    short_open_res1 *= close < short_out_    # reject open_execution\n","    res_df['short_open1_{}'.format(selection_id)] = short_open_res1 * (not config.pos_set.short_ban)\n","\n","    long_tp_ = res_df['long_tp_{}'.format(selection_id)].to_numpy()\n","    long_ep_ = res_df['long_ep_{}'.format(selection_id)].to_numpy()\n","    long_out_ = res_df['long_out_{}'.format(selection_id)].to_numpy()\n","    # long_open_res1 *= (long_tp_ > long_ep_) & (long_ep_ > long_out_)\n","    # long_open_res1 *= close > long_ep_   # reject open_execution\n","    long_open_res1 *= close > long_out_    # reject open_execution\n","    res_df['long_open1_{}'.format(selection_id)] = long_open_res1 * (not config.pos_set.long_ban)    \n","    \n","    res_df['short_open2_{}'.format(selection_id)] = short_open_res2\n","    res_df['long_open2_{}'.format(selection_id)] = long_open_res2\n","\n","    if show_detail:\n","      sys_log.warning(\"point validation\")\n","      sys_log.warning(\"np.sum(short_open_res1 == 1) : {}\".format(np.sum(short_open_res1 == 1)))\n","      sys_log.warning(\"np.sum(long_open_res1 == 1) : {}\".format(np.sum(long_open_res1 == 1)))\n","    \n","    # ------------ higher_high momentum ------------ #\n","    wb_tpg = config.tr_set.wb_tp_gap\n","    wb_outg = config.tr_set.wb_out_gap\n","    res_df['short_wave_1_{}'.format(selection_id)] = res_df['short_tp_1_{}'.format(selection_id)].to_numpy() - res_df['short_tp_gap_{}'.format(selection_id)].to_numpy() * wb_tpg\n","    res_df['long_wave_1_{}'.format(selection_id)] = res_df['long_tp_1_{}'.format(selection_id)].to_numpy() + res_df['long_tp_gap_{}'.format(selection_id)].to_numpy() * wb_tpg\n","    \n","    res_df['short_wave_0_{}'.format(selection_id)] = res_df['short_tp_0_{}'.format(selection_id)].to_numpy() + res_df['short_tp_gap_{}'.format(selection_id)].to_numpy() * wb_outg        # hhm check\n","    res_df['long_wave_0_{}'.format(selection_id)] = res_df['long_tp_0_{}'.format(selection_id)].to_numpy() - res_df['long_tp_gap_{}'.format(selection_id)].to_numpy() * wb_outg\n","    # res_df['short_wave_0_{}'.format(selection_id)] = short_epout_0 + short_epout_gap * wb_outg\n","    # res_df['long_wave_0_{}'.format(selection_id)] = long_epout_0 - long_epout_gap * wb_outg\n","\n","    # ------ tr ------ #\n","    # res_df['short_tr_{}'.format(selection_id)] = abs(\n","    #     (short_ep_ / short_tp_ - config.trader_set.limit_fee - 1) / (short_ep_ / short_out_ - config.trader_set.market_fee - 1))\n","    # res_df['long_tr_{}'.format(selection_id)] = abs(\n","    #     (long_tp_ / long_ep_ - config.trader_set.limit_fee - 1) / (long_out_ / long_ep_ - config.trader_set.market_fee - 1))\n","\n","    # ------ zoned_ep ------ #\n","    # if config.tr_set.c_ep_gap != \"None\":\n","    #     # res_df['short_ep_org_{}'.format(selection_id)] = res_df['short_ep_{}'.format(selection_id)].copy()\n","    #     # res_df['long_ep_org_{}'.format(selection_id)] = res_df['long_ep_{}'.format(selection_id)].copy()\n","    #     res_df['short_ep2_{}'.format(selection_id)] = short_epout_1 + short_epout_gap * config.tr_set.c_ep_gap\n","    #     res_df['long_ep2_{}'.format(selection_id)] = long_epout_1 - long_epout_gap * config.tr_set.c_ep_gap\n","\n","    # # ------ zoned_out ------ #\n","    # if config.tr_set.t_out_gap != \"None\":\n","    #     # res_df['short_out_org_{}'.format(selection_id)] = res_df['short_out_{}'.format(selection_id)].copy()\n","    #     # res_df['long_out_org_{}'.format(selection_id)] = res_df['long_out_{}'.format(selection_id)].copy()\n","    #     res_df['short_out2_{}'.format(selection_id)] = short_epout_0 + short_epout_gap * config.tr_set.t_out_gap\n","    #     res_df['long_out2_{}'.format(selection_id)] = long_epout_0 - long_epout_gap * config.tr_set.t_out_gap\n","\n","    return res_df\n"]},{"cell_type":"markdown","source":["#### legacy"],"metadata":{"id":"HuCb0phoPN83"}},{"cell_type":"code","source":["\n","    # ------ get candle_lastidx ------ #        \n","    # tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","    # b1_shift = np_timeidx % tf_entry + 1  # dynamic\n","    # b1_candle_lastidx = (len_df_range - b1_shift).astype(float)\n","    # b2_candle_lastidx = (len_df_range - (b1_shift + tf_entry)).astype(float)\n","    # b3_candle_lastidx = (len_df_range - (b1_shift + 2 * tf_entry)).astype(float)\n","    # b1_candle_lastidx[b1_candle_lastidx < 0] = np.nan\n","    # b2_candle_lastidx[b2_candle_lastidx < 0] = np.nan\n","    # b3_candle_lastidx[b3_candle_lastidx < 0] = np.nan\n","\n","    # high_5T = res_df['high_5T'].to_numpy()\n","    # low_5T = res_df['low_5T'].to_numpy()\n","\n","    # b2_high_5T = get_line(b2_candle_lastidx, high_5T)\n","    # b2_low_5T = get_line(b2_candle_lastidx, low_5T)\n","    \n","        # # ------ bb_stream ------ #        \n","        # roll_high_bb_upper_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_upper_, roll_hl_cnt)\n","        # roll_low_bb_upper_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_upper_, roll_hl_cnt)\n","        # roll_high_bb_upper2_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_upper2_, roll_hl_cnt)\n","        # roll_low_bb_upper2_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_upper2_, roll_hl_cnt)\n","\n","        # roll_high_bb_lower_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_lower_, roll_hl_cnt)\n","        # roll_low_bb_lower_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_lower_, roll_hl_cnt)\n","        # roll_high_bb_lower2_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_lower2_, roll_hl_cnt)\n","        # roll_low_bb_lower2_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_lower2_, roll_hl_cnt)\n","\n","        # wave_base_ = res_df['dc_base_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","\n","        # roll_high_wave_base_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, wave_base_, roll_hl_cnt)\n","        # roll_low_wave_base_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, wave_base_, roll_hl_cnt)\n","\n","        # short_open_res *= (roll_high_bb_lower_[:, -2] > roll_high_wave_base_[:, -2]) & (roll_high_wave_base_[:, -2] > roll_high_bb_lower2_[:, -2])\n","        # short_open_res *= (roll_low_bb_lower_[:, -1] > roll_low_wave_base_[:, -1]) & (roll_low_wave_base_[:, -1] > roll_low_bb_lower2_[:, -1])\n","        # short_open_res *= (roll_high_bb_lower_[:, -1] > roll_high_wave_base_[:, -1]) & (roll_high_wave_base_[:, -1] > roll_high_bb_lower2_[:, -1])\n","\n","        # long_open_res *= (roll_low_bb_upper_[:, -2] < roll_low_wave_base_[:, -2]) & (roll_low_wave_base_[:, -2] < roll_low_bb_upper2_[:, -2])\n","        # long_open_res *= (roll_high_bb_upper_[:, -1] < roll_high_wave_base_[:, -1]) & (roll_high_wave_base_[:, -1] < roll_high_bb_upper2_[:, -1])\n","        # long_open_res *= (roll_low_bb_upper_[:, -1] < roll_low_wave_base_[:, -1]) & (roll_low_wave_base_[:, -1] < roll_low_bb_upper2_[:, -1])\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"bb_stream\")\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))  \n","\n","        # ------ candle_pattern  ------ #   \n","        # b3_bb_upper_ = get_line(b3_candle_lastidx, bb_upper_)\n","        # b3_bb_lower_ = get_line(b3_candle_lastidx, bb_lower_)\n","        # b3_bb_upper2_ = get_line(b3_candle_lastidx, bb_upper2_)\n","        # b3_bb_lower2_ = get_line(b3_candle_lastidx, bb_lower2_)\n","        # b3_close = get_line(b3_candle_lastidx, close)\n","\n","        # b2_bb_upper2_ = get_line(b2_candle_lastidx, bb_upper2_)\n","        # b2_bb_lower2_ = get_line(b2_candle_lastidx, bb_lower2_)\n","        # b2_bb_upper3_ = get_line(b2_candle_lastidx, bb_upper3_)\n","        # b2_bb_lower3_ = get_line(b2_candle_lastidx, bb_lower3_)\n","        # b2_close = get_line(b2_candle_lastidx, close)\n","\n","        # b1_bb_upper_ = get_line(b1_candle_lastidx, bb_upper_)\n","        # b1_bb_lower_ = get_line(b1_candle_lastidx, bb_lower_)\n","        # b1_bb_upper2_ = get_line(b1_candle_lastidx, bb_upper2_)\n","        # b1_bb_lower2_ = get_line(b1_candle_lastidx, bb_lower2_)\n","        # b1_close = get_line(b1_candle_lastidx, close)\n","        # b1_high_5T = get_line(b1_candle_lastidx, high_5T)\n","        # b1_low_5T = get_line(b1_candle_lastidx, low_5T)\n","\n","        # short_open_res *= (b3_bb_lower_ > b3_close) & (b3_close > b3_bb_lower2_)\n","        # short_open_res *= (b2_bb_lower2_ > b2_close) & (b2_close > b2_bb_lower3_)\n","        # short_open_res *= (b1_bb_lower_ > b1_close) & (b1_close > b1_bb_lower2_)\n","\n","        # long_open_res *= (b3_bb_upper_ < b3_close) & (b3_close < b3_bb_upper2_)\n","        # long_open_res *= (b2_bb_upper2_ < b2_close) & (b2_close < b2_bb_upper3_)\n","        # long_open_res *= (b1_bb_upper_ < b1_close) & (b1_close < b1_bb_upper2_)\n","\n","        # # short_open_res *= (b2_low_5T < b1_low_5T) & (b2_close < b1_close)\n","        # # long_open_res *= (b2_high_5T > b1_high_5T) & (b2_close > b1_close)\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"candle_pattern\")\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1))) \n","\n","\n","        # ------ low_confirm ------ #\n","        # short_open_res *= b1_high_5T > wave_high_fill_\n","        # long_open_res *= b1_low_5T < wave_low_fill_\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"low_confirm\")\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1))) \n","        \n","        # ------ candle_ratio ------ #\n","        # b2_candle_range_5T = b2_high_5T - b2_low_5T\n","        # b1_candle_range_5T = b1_high_5T - b1_low_5T\n","        \n","        # short_open_res *= b1_candle_range_5T / b2_candle_range_5T < config.loc_set.point.crr\n","        # long_open_res *= b1_candle_range_5T / b2_candle_range_5T < config.loc_set.point.crr\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"candle_ratio\")\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1))) \n","\n","        # ------ wick_ratio ------ #\n","        # upper_wick_ratio_ = res_df['upper_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].to_numpy()\n","        # lower_wick_ratio_ = res_df['lower_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].to_numpy()\n","        # b2_upper_wick_ratio_ = get_line(b2_candle_lastidx, upper_wick_ratio_)\n","        # b2_lower_wick_ratio_ = get_line(b2_candle_lastidx, lower_wick_ratio_)\n","\n","        # short_open_res *= b2_upper_wick_ratio_ < config.loc_set.point.short_wick_ratio\n","        # long_open_res *= b2_upper_wick_ratio_ < config.loc_set.point.long_wick_ratio\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"wick_ratio\")\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1))) \n","\n","        # ------ large wave1_range ------ #          \n","        # roll_bb_upper_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_upper_, roll_hl_cnt)\n","        # roll_bb_lower_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_lower_, roll_hl_cnt)\n","        # roll_bb_upper3_ = get_roll_wave_data(valid_high_prime_idx, roll_high_idx_arr, len_df, bb_upper3_, roll_hl_cnt)\n","        # roll_bb_lower3_ = get_roll_wave_data(valid_low_prime_idx, roll_low_idx_arr, len_df, bb_lower3_, roll_hl_cnt)\n","\n","        # short_open_res *= (roll_bb_upper_[:, -2] < roll_high_[:, -2]) & (roll_low_[:, -1] < roll_bb_lower_[:, -1]) & (roll_low_[:, -1] > roll_bb_lower3_[:, -1])\n","        # long_open_res *= (roll_bb_upper_[:, -1] < roll_high_[:, -1]) & (roll_low_[:, -2] < roll_bb_lower_[:, -2]) & (roll_high_[:, -1] < roll_bb_upper3_[:, -1])\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","        \n","        # ------ low in bb_level3 ------ #  Todo, idx sync 맞춰야할 것\n","        # short_open_res *= (bb_upper2_ < wave_high_fill_) & (wave_high_fill_ < bb_upper3_)\n","        # long_open_res *= (bb_lower3_ < wave_low_fill_) & (wave_low_fill_ < bb_lower2_)\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ first_high ------ #        \n","        # wave_high_prime_idx_fill_= res_df['wave_high_prime_idx_fill_{}{}'.format(itv, period1)].to_numpy()\n","        # wave_low_prime_idx_fill_= res_df['wave_low_prime_idx_fill_{}{}'.format(itv, period1)].to_numpy()\n","        # cu_prime_wave_base = get_line(cu_prime_idx_fill_, wave_base_)\n","        # co_prime_wave_base = get_line(co_prime_idx_fill_, wave_base_)\n","\n","        # # short_open_res *= (co_roll_high_[:, -1] > dc_base_) & (dc_base_ > co_roll_low_[:, -1])\n","        # # long_open_res *= (cu_roll_low_[:, -1] < dc_base_) & (dc_base_ < cu_roll_high_[:, -1])\n","\n","        # short_open_res *= (cu_prime_wave_base > dc_base_) & (dc_base_ > co_prime_wave_base)\n","        # long_open_res *= (co_prime_wave_base < dc_base_) & (dc_base_ < cu_prime_wave_base)\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # cu_prime_dc_base = get_line(cu_prime_idx_fill_, dc_base_)        \n","        # co_prime_dc_base = get_line(co_prime_idx_fill_, dc_base_)\n","        \n","        # shift_size = to_itvnum(p1_itv1)\n","        # b1_dc_base_ = res_df['dc_base_{}{}'.format(p1_itv1, p1_period1)].shift(shift_size).to_numpy()\n","\n","        # short_open_res *= (b1_dc_base_ < dc_base_)\n","        # long_open_res *= (b1_dc_base_ > dc_base_)\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ b1_base_15T < wave_high ------ #\n","        # short_open_res *= (b1_dc_base_ > co_roll_low_[:, -1])\n","        # long_open_res *= (b1_dc_base_ < cu_roll_high_[:, -1])\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))   \n","        \n","        \n","    # b1_itv_num = to_itvnum(config.tr_set.p2_itv0)\n","    # b2_itv_num = to_itvnum(config.tr_set.p2_itv0) * 2  # multi 2 for imb_v2\n","\n","    # res_df[short_tp_1_] = res_df['dc_lower_{}{}'.format(itv, period1)]\n","    # res_df[short_tp_0_] = res_df['dc_upper_{}{}'.format(itv, period2)]\n","    # # res_df[short_tp_0_] = res_df['dc_upper_15T4']\n","    # res_df[long_tp_1_] = res_df['dc_upper_{}{}'.format(itv, period1)]\n","    # res_df[long_tp_0_] = res_df['dc_lower_{}{}'.format(itv, period2)]\n","    # # res_df[long_tp_0_] = res_df['dc_lower_15T4']\n","    \n","        # ------ base_cc ------ #\n","        dc_base_ = res_df['dc_base_{}{}'.format(p1_itv1, p1_period1)].to_numpy()\n","\n","        # close_ = res_df['close_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        # b1_dc_base_ = res_df['dc_base_{}{}'.format(p1_itv1, p1_period1)].shift(tf_entry).to_numpy()\n","        # b1_close_ = res_df['close_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","\n","        # short_open_res *= ((b1_close_ > dc_base_) & (dc_base_ > close_)) | ((b1_close_ > b1_dc_base_) & (dc_base_ > close_))\n","        # long_open_res *= ((b1_close_ < dc_base_) & (dc_base_ < close_)) | ((b1_close_ < b1_dc_base_) & (dc_base_ < close_))\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","        \n","        # ------ tf_entry ------ #\n","        # tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","        \n","        # short_open_res *= np_timeidx % tf_entry == (tf_entry - 1)\n","        # long_open_res *= np_timeidx % tf_entry == (tf_entry - 1) \n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","    \n","        # ------ cppr 로 양음봉 check ------ # \n","        # tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","\n","        # res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)] = res_df['cppr_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry)\n","        # b1_cppr_ = res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()  # check b1's cppr in ep_loc\n","        # cppr_ = res_df['cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        # short_open_res *= (b1_cppr_ > 0) & (cppr_ < 0)\n","        # long_open_res *= (b1_cppr_ < 0) & (cppr_ > 0)\n","\n","        # res_df['b1_updbr'] = res_df['dc_upper_15T4_br'].shift(tf_entry).to_numpy()\n","        # res_df['b1_lwdbr'] = res_df['dc_lower_15T4_br'].shift(tf_entry).to_numpy()\n","        \n","        # res_df['b1_updbr_cppr'] = b1_cppr_ * res_df['b1_updbr'].to_numpy()\n","        # res_df['b1_lwdbr_cppr'] = b1_cppr_ * res_df['b1_lwdbr'].to_numpy()\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ dc_cross ------ #\n","        # b1_dc_upper_15T4 = res_df['dc_upper_15T4'].shift(tf_entry).to_numpy()\n","        # b1_dc_lower_15T4 = res_df['dc_lower_15T4'].shift(tf_entry).to_numpy()\n","        # b1_high_ = res_df['high_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        # b1_low_ = res_df['low_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        # short_open_res *= b1_high_ > b1_dc_upper_15T4\n","        # long_open_res *= b1_low_ < b1_dc_lower_15T4\n","        \n","        # ------ dc_cc ------ #\n","        # b1_close_ = res_df['close_{}'.format(config.loc_set.point.tf_entry)].shift(tf_entry).to_numpy()\n","        # short_open_res *= b1_close_ > b1_dc_upper_15T4\n","        # long_open_res *= b1_close_ < b1_dc_lower_15T4\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ empty_space ------ #       \n","        # dc_upper_15T4 = res_df['dc_upper_15T4'].to_numpy()\n","        # dc_lower_15T4 = res_df['dc_lower_15T4'].to_numpy() \n","        # high_ = res_df['high_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        # low_ = res_df['low_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","        # short_open_res *= high_ < dc_upper_15T4\n","        # long_open_res *= low_ > dc_lower_15T4\n","        \n","        # ------ candle_pattern ------ #  \n","        # pattern_column = \"{}_{}\".format(config.loc_set.point.candle_pattern, config.loc_set.point.tf_entry)\n","        # short_open_res *= res_df[pattern_column].to_numpy() < 0\n","        # long_open_res *= res_df[pattern_column].to_numpy() > 0\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","\n","        # ------ lower_touch > upper_touch (long) ------ #\n","        # short_open_res *= res_df['short_upper_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > res_df['short_lower_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy()\n","        # long_open_res *= res_df['long_lower_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > res_df['long_upper_touch_idx_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy()\n","\n","        # ------ base_3T cross ------ #\n","        # dc_base_3T = res_df['dc_base_3T'].to_numpy()\n","        # b1_close = res_df['close'].shift(1).to_numpy()\n","        # short_open_res *= (b1_close > dc_base_3T) & (dc_base_3T > close)\n","        # long_open_res *= (b1_close < dc_base_3T) & (dc_base_3T < close)\n","\n","        # ------ wave_low < base_5T (long) ------ #\n","        # dc_base_5T = res_df['dc_base_5T'].to_numpy()        \n","        # short_open_res *= res_df['short_upper_touch_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() > dc_base_5T\n","        # long_open_res *= res_df['long_lower_touch_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy() < dc_base_5T      \n","\n","        # ------ ppr ------ #\n","        # pumping_ratio(res_df, config, p1_itv1, p1_period1, p1_period2)  "],"metadata":{"id":"-DNPumVZi0xs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### dump"],"metadata":{"id":"aTV4h3LjTZBp"}},{"cell_type":"code","source":["\n","    \n","    short_tp_1_, long_tp_1_ = 'short_tp_1_{}'.format(selection_id), 'long_tp_1_{}'.format(selection_id)\n","    short_tp_0_, long_tp_0_ = 'short_tp_0_{}'.format(selection_id), 'long_tp_0_{}'.format(selection_id)\n","    short_tp_gap_, long_tp_gap_ = 'short_tp_gap_{}'.format(selection_id), 'long_tp_gap_{}'.format(selection_id)\n","\n","    short_ep_1_, long_ep_1_ = 'short_ep_1_{}'.format(selection_id), 'long_ep_1_{}'.format(selection_id)\n","    short_ep_0_, long_ep_0_ = 'short_ep_0_{}'.format(selection_id), 'long_ep_0_{}'.format(selection_id)\n","    short_ep_gap_, long_ep_gap_ = 'short_ep_gap_{}'.format(selection_id), 'long_ep_gap_{}'.format(selection_id)\n","\n","    short_epout_1_, long_epout_1_ = 'short_epout_1_{}'.format(selection_id), 'long_epout_1_{}'.format(selection_id)\n","    short_epout_0_, long_epout_0_ = 'short_epout_0_{}'.format(selection_id), 'long_epout_0_{}'.format(selection_id)\n","    short_epout_gap_, long_epout_gap_ = 'short_epout_gap_{}'.format(selection_id), 'long_epout_gap_{}'.format(selection_id)\n","    \n","    # ================== convert unit -> numpy ================== #   \n","    # tp_cols = [short_tp_1_, short_tp_0_, short_tp_gap_, long_tp_1_, long_tp_0_, long_tp_gap_]\n","    # epout_cols = [short_epout_1_, short_epout_0_, short_epout_gap_, long_epout_1_, long_epout_0_, long_epout_gap_]\n","\n","    # short_tp_1, short_tp_0, short_tp_gap, long_tp_1, long_tp_0, long_tp_gap = [res_df[col_].to_numpy() for col_ in tp_cols]\n","    # short_epout_1, short_epout_0, short_epout_gap, long_epout_1, long_epout_0, long_epout_gap = [res_df[col_].to_numpy() for col_ in epout_cols]\n","\n","    if p2_itv1 != \"None\":  # vectorized point2\n","        short_point1_on2_idx = pd.Series(\n","            np.where(res_df['short_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)], len_df_range, np.nan)).rolling(point1_to2_period,\n","                                                                                                                                    min_periods=1).max().to_numpy()  # period 내의 max_point1_idx\n","        long_point1_on2_idx = pd.Series(\n","            np.where(res_df['long_wave_point_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)], len_df_range, np.nan)).rolling(point1_to2_period,\n","                                                                                                                                   min_periods=1).max().to_numpy()\n","\n","        short_point2_idx = pd.Series(\n","            np.where(res_df['short_wave_point_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)], len_df_range, np.nan)).to_numpy()\n","        long_point2_idx = pd.Series(\n","            np.where(res_df['long_wave_point_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)], len_df_range, np.nan)).to_numpy()\n","\n","        res_df['short_point_idxgap_{}'.format(selection_id)] = short_point2_idx - short_point1_on2_idx\n","        res_df['long_point_idxgap_{}'.format(selection_id)] = long_point2_idx - long_point1_on2_idx\n","\n","        # ------ p1 & p2 ------ #\n","        short_open_res *= ~np.isnan(res_df['short_point_idxgap_{}'.format(selection_id)].to_numpy())\n","        long_open_res *= ~np.isnan(res_df['long_point_idxgap_{}'.format(selection_id)].to_numpy())\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ p2 amax > p1_idx (long) ------ #\n","        short_open_res *= res_df['short_upper_touch_idx_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy() > short_point1_on2_idx\n","        long_open_res *= res_df['long_lower_touch_idx_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy() > long_point1_on2_idx\n","\n","        if show_detail:\n","          sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","          sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ higher low (long) ------ #\n","        # short_a_line1_on2_ = get_line(short_point1_on2_idx, res_df['short_a_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy())\n","        # long_a_line1_on2_ = get_line(long_point1_on2_idx, res_df['long_a_line_{}{}{}'.format(p1_itv1, p1_period1, p1_period2)].to_numpy())\n","\n","        # short_a_line2_ = res_df['short_a_line_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy()\n","        # long_a_line2_ = res_df['long_a_line_{}{}{}'.format(p2_itv1, p2_period1, p2_period2)].to_numpy()\n","\n","        # short_open_res *= short_a_line1_on2_ >= short_a_line2_\n","        # long_open_res *= long_a_line1_on2_ <= long_a_line2_\n","\n","        # print(np.sum(long_open_res == 1))\n","\n","        # ------ higher high (long) ------ #\n","        # short_open_res *= co_roll_low_[:, -2] > co_roll_low_[:, -1]\n","        # long_open_res *= cu_roll_high_[:, -2] < cu_roll_high_[:, -1]\n","\n","        # short_open_res *= co_roll_low_[:, -3] > co_roll_low_[:, -2]\n","        # long_open_res *= cu_roll_high_[:, -3] < cu_roll_high_[:, -2]\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))\n","\n","        # ------ higher low (long) ------ # \n","        # short_open_res *= co_roll_high_[:, -2] > co_roll_high_[:, -1]\n","        # long_open_res *= cu_roll_low_[:, -2] < cu_roll_low_[:, -1]\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))  \n","\n","        # ------ tf2_base < wave_low ------ #\n","        # short_open_res *= (dc_base_ > co_roll_high_[:, -1])\n","        # long_open_res *= (dc_base_ < cu_roll_low_[:, -1])\n","\n","        # if show_detail:\n","        #   sys_log.warning(\"np.sum(short_open_res == 1) : {}\".format(np.sum(short_open_res == 1)))\n","        #   sys_log.warning(\"np.sum(long_open_res == 1) : {}\".format(np.sum(long_open_res == 1)))  \n","\n","        # short_open_res *= (cu_prime_wave_base > cu_prime_dc_base) & (dc_base_ > co_prime_wave_base)\n","        # long_open_res *= (co_prime_wave_base < co_prime_dc_base) & (dc_base_ < cu_prime_wave_base)\n","\n","        short_open_res *= (co_prime_dc_base < co_roll_low_[:, -2])\n","        long_open_res *= (cu_prime_dc_base > cu_roll_high_[:, -2])  #  b1_cu_prime_idx’s tf2_base > b1_high -> b1 이 아님 (error)\n","\n","\n","        res_df[short_epout_1_] = res_df['short_wave_low_{}{}{}'.format(itv, period1, period2)]\n","        res_df[short_epout_0_] = res_df['short_new_wave_high_{}{}{}'.format(itv, period1, period2)]\n","        res_df[long_epout_1_] = res_df['long_wave_high_{}{}{}'.format(itv, period1, period2)]\n","        res_df[long_epout_0_] = res_df['long_new_wave_low_{}{}{}'.format(itv, period1, period2)]\n","        \n","# ------ get candle_lastidx ------ #        \n","        tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","        b1_candle_shift = np_timeidx % tf_entry + 1\n","        b2_candle_shift = b1_candle_shift + tf_entry\n","        b3_candle_shift = b1_candle_shift + 2 * tf_entry\n","\n","        print(b3_candle_shift)\n","\n","        # bb_upper_ = res_df['bb_upper_{}{}'.format('T', 60)].to_numpy()\n","        # bb_lower_ = res_df['bb_lower_{}{}'.format('T', 60)].to_numpy()\n","        # bb_upper2_ = res_df['bb_upper2_{}{}'.format('T', 60)].to_numpy()\n","        # bb_lower2_ = res_df['bb_lower2_{}{}'.format('T', 60)].to_numpy()\n","        # bb_upper3_ = res_df['bb_upper3_{}{}'.format('T', 60)].to_numpy()\n","        # bb_lower3_ = res_df['bb_lower3_{}{}'.format('T', 60)].to_numpy()\n","\n","        # ------ compare by back_idx  ------ #   \n","        b3_bb_upper_ = res_df['bb_upper_{}{}'.format('T', 60)].shift(b3_candle_shift).to_numpy()\n","        b3_bb_lower_ = res_df['bb_lower_{}{}'.format('T', 60)].shift(b3_candle_shift).to_numpy()\n","        b3_bb_upper2_ = res_df['bb_upper2_{}{}'.format('T', 60)].shift(b3_candle_shift).to_numpy()\n","        b3_bb_lower2_ = res_df['bb_lower2_{}{}'.format('T', 60)].shift(b3_candle_shift).to_numpy()\n","        b3_close = res_df['close'].shift(b3_candle_shift).to_numpy()\n","\n","        b2_bb_upper2_ = res_df['bb_upper2_{}{}'.format('T', 60)].shift(b2_candle_shift).to_numpy()\n","        b2_bb_lower2_ = res_df['bb_lower2_{}{}'.format('T', 60)].shift(b2_candle_shift).to_numpy()\n","        b2_bb_upper3_ = res_df['bb_upper3_{}{}'.format('T', 60)].shift(b2_candle_shift).to_numpy()\n","        b2_bb_lower3_ = res_df['bb_lower3_{}{}'.format('T', 60)].shift(b2_candle_shift).to_numpy()\n","        b2_close = res_df['close'].shift(b2_candle_shift).to_numpy()\n","\n","        b1_bb_upper_ = res_df['bb_upper_{}{}'.format('T', 60)].shift(b1_candle_shift).to_numpy()\n","        b1_bb_lower_ = res_df['bb_lower_{}{}'.format('T', 60)].shift(b1_candle_shift).to_numpy()\n","        b1_bb_upper2_ = res_df['bb_upper2_{}{}'.format('T', 60)].shift(b1_candle_shift).to_numpy()\n","        b1_bb_lower2_ = res_df['bb_lower2_{}{}'.format('T', 60)].shift(b1_candle_shift).to_numpy()\n","        b1_close = res_df['close'].shift(b1_candle_shift).to_numpy()\n"],"metadata":{"id":"dc49JPmoTaPQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HKdUKKl-483N"},"source":["### utils_public"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"nzOYWA2kqZ0d","executionInfo":{"status":"ok","timestamp":1653017708843,"user_tz":-540,"elapsed":2426,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# from funcs.funcs_indicator import *\n","# from funcs.funcs_trader import *\n","# import logging\n","# from ast import literal_eval\n","\n","pd.set_option('mode.chained_assignment',  None)\n","sys_log = logging.getLogger()\n","\n","\n","class OrderSide:\n","    BUY = \"BUY\"\n","    SELL = \"SELL\"\n","    INVALID = None\n","\n","\n","def lvrg_set(res_df, config, open_side, ep_, out_, fee, limit_leverage=50):\n","    selection_id = config.selection_id\n","    if not pd.isnull(out_) and not config.lvrg_set.static_lvrg:\n","        if selection_id in ['v3']:\n","            if open_side == OrderSide.SELL:\n","                loss = out_ / ep_\n","            else:\n","                loss = ep_ / out_\n","        else:  # 이 phase 가 정석, 윗 phase 는 결과가 수익 극대화라 사용함\n","            if open_side == OrderSide.SELL:\n","                loss = ep_ / out_\n","            else:\n","                loss = out_ / ep_\n","\n","        config.lvrg_set.leverage = config.lvrg_set.target_pct / abs(loss - 1 - (fee + config.trader_set.market_fee))\n","\n","    # ------------ leverage rejection ------------ #\n","    # 감당하기 힘든 fluc. 의 경우 진입하지 않음 - dynamic_lvrg 사용 경우\n","    if config.lvrg_set.leverage < 1 and config.lvrg_set.lvrg_rejection:\n","        # if config.lvrg_set.leverage >= 1 and config.lvrg_set.lvrg_rejection:\n","        return None\n","\n","    if not config.lvrg_set.allow_float:\n","        config.lvrg_set.leverage = int(config.lvrg_set.leverage)\n","\n","    config.lvrg_set.leverage = min(limit_leverage, max(config.lvrg_set.leverage, 1))\n","\n","    return config.lvrg_set.leverage\n","\n","\n","def sync_check(df_, config, order_side=\"OPEN\", row_slice=True):\n","    try:\n","        make_itv_list = [m_itv.replace('m', 'T') for m_itv in literal_eval(config.trader_set.itv_list)]\n","        row_list = literal_eval(config.trader_set.row_list)\n","        rec_row_list = literal_eval(config.trader_set.rec_row_list)\n","        offset_list = literal_eval(config.trader_set.offset_list)\n","\n","        assert len(make_itv_list) == len(offset_list), \"length of itv & offset_list should be equal\"\n","        htf_df_list = [to_htf(df_, itv_=itv_, offset=offset_) for itv_idx, (itv_, offset_)\n","                       in enumerate(zip(make_itv_list, offset_list)) if itv_idx != 0]  #\n","        htf_df_list.insert(0, df_)\n","\n","        # for htf_df_ in htf_df_list:\n","        #     print(htf_df_.tail())\n","\n","        #       Todo        #\n","        #        1. row_list calc.\n","        #           a. indi. 를 만들기 위한 최소 period 가 존재하고, 그 indi. 를 사용한 lb_period 가 존재함\n","        #           b. => default_period + lb_period\n","        #               i. from sync_check, public_indi, ep_point2, ep_dur 의 tf 별 max lb_period check\n","        #                   1. default_period + max lb_period check\n","        #                       a. 현재까지 lb_period_list\n","        #                           h_prev_idx (open / close) 60\n","        #                           dc_period 135\n","        #                           zone_dc_period 135\n","\n","        # --------- slicing (in trader phase only) --------- #\n","        #               --> latency 영향도가 높은 곳은 이곳\n","        if row_slice:  # recursive 가 아닌 indi. 의 latency 를 고려한 slicing\n","            df, df_3T, df_5T, df_15T, df_30T, df_H, df_4H = [df_s.iloc[-row_list[row_idx]:].copy() for row_idx, df_s in enumerate(htf_df_list)]\n","            rec_df, rec_df_3T, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_H, rec_df_4H = [df_s.iloc[-rec_row_list[row_idx]:].copy() for row_idx, df_s\n","                                                                                         in\n","                                                                                         enumerate(htf_df_list)]\n","        else:\n","            df, df_3T, df_5T, df_15T, df_30T, df_H, df_4H = htf_df_list\n","            rec_df, rec_df_3T, rec_df_5T, rec_df_15T, rec_df_30T, rec_df_H, rec_df_4H = htf_df_list\n","\n","        # --------- add indi. --------- #\n","\n","        #        1. 필요한 indi. 는 enlist_epouttp & mr_check 보면서 삽입\n","        #        2. min use_rows 계산을 위해서, tf 별로 gathering 함        #\n","        # start_0 = time.time()\n","\n","        # ------ T ------ #\n","        # df = dc_line(df, None, 'T', dc_period=20)\n","        # df = bb_line(df, None, 'T')\n","        #\n","        # ------ 3T ------ #\n","        # df = dc_line(df, df_3T, '3T')\n","\n","        # ------ 5T ------ #\n","        h_candle_v3(res_df, '5T')\n","        df = dc_line(df, df_5T, '5T')\n","        df = bb_line(df, df_5T, '5T')\n","        #\n","        # ------ 15T ------ #\n","        h_candle_v3(res_df, '15T')\n","        df = dc_line(df, df_15T, '15T')\n","        df = bb_line(df, df_15T, '15T')\n","        #\n","        # ------ 30T ------ #\n","        # df = bb_line(df, df_30T, '30T')\n","        #\n","        # ------ H ------ #\n","        h_candle_v3(res_df, 'H')\n","        # df = dc_line(df, df_H, 'H')\n","\n","        # ------ 4H ------ #\n","        # df = bb_line(df, df_4H, '4H')\n","\n","        # rec_df['rsi_1m'] = rsi(rec_df, 14)  # Todo - recursive, 250 period\n","        # df = df.join(to_lower_tf_v2(df, rec_df.iloc[:, [-1]], [-1], backing_i=0), how='inner')  # <-- join same_tf manual\n","        #\n","        # if order_side in [\"OPEN\"]:\n","        #     rec_df_5T['ema_5T'] = ema(rec_df_5T['close'], 195)  # Todo - recursive, 1100 period (5T)\n","        #     df = df.join(to_lower_tf_v2(df, rec_df_5T, [-1]), how='inner')\n","\n","    except Exception as e:\n","        sys_log.error(\"error in sync_check :\", e)\n","    else:\n","        return df\n","\n","\n","def public_indi(res_df, config, np_timeidx, order_side=\"OPEN\"):\n","\n","    selection_id = config.selection_id\n","\n","    wave_itv1 = config.tr_set.wave_itv1\n","    wave_itv2 = config.tr_set.wave_itv2\n","    wave_period1 = config.tr_set.wave_period1\n","    wave_period2 = config.tr_set.wave_period2\n","\n","    # ====== public ====== #\n","    # res_df = wave_range_dcbase_v11_3(res_df, config, over_period=2) \n","    \n","    # ------------ wave_period1 ------------ #\n","    offset = '1h' if wave_itv1 != 'D' else '9h'\n","    htf_df = to_htf(res_df, wave_itv1, offset=offset)\n","    htf_df = wave_range_cci_v2(htf_df, wave_period1)\n","    \n","    cols = list(htf_df.columns[-15:-4])  # except idx col\n","\n","    roll_hl_cnt = 3\n","    valid_high_prime_idx, valid_low_prime_idx, roll_prev_high_idx_arr, roll_prev_low_idx_arr = roll_wave_hl_idx_v4(htf_df, wave_itv1, wave_period1, roll_hl_cnt=roll_hl_cnt)\n","\n","    htf_df = get_roll_wave_data_v2(htf_df, valid_high_prime_idx, roll_prev_high_idx_arr, 'wave_high_fill_{}{}'.format(wave_itv1, wave_period1), roll_hl_cnt)\n","    cols += list(htf_df.columns[-roll_hl_cnt:])\n","\n","    htf_df = get_roll_wave_data_v2(htf_df, valid_low_prime_idx, roll_prev_low_idx_arr, 'wave_low_fill_{}{}'.format(wave_itv1, wave_period1), roll_hl_cnt)\n","    cols += list(htf_df.columns[-roll_hl_cnt:])\n","\n","    htf_df = wave_range_ratio_v4_2(htf_df, wave_itv1, wave_period1, roll_hl_cnt=roll_hl_cnt)\n","    cols += list(htf_df.columns[-4:])\n","\n","    # ------ 필요한 cols 만 join (htf's idx 정보는 ltf 와 sync. 가 맞지 않음 - join 불가함) ------ #\n","    res_df.drop(cols, inplace=True, axis=1, errors='ignore')\n","    res_df = res_df.join(to_lower_tf_v3(res_df, htf_df, cols, backing_i=0), how='inner') \n","\n","    # ------------ wave_period2 ------------ #\n","    res_df = wave_range_cci_v2(res_df, wave_period2)\n","\n","    valid_high_prime_idx, valid_low_prime_idx, roll_prev_high_idx_arr, roll_prev_low_idx_arr = roll_wave_hl_idx_v4(res_df, wave_itv2, wave_period2, roll_hl_cnt=roll_hl_cnt)\n","    res_df = get_roll_wave_data_v2(res_df, valid_high_prime_idx, roll_prev_high_idx_arr, 'wave_high_fill_{}{}'.format(wave_itv2, wave_period2), roll_hl_cnt)\n","    res_df = get_roll_wave_data_v2(res_df, valid_low_prime_idx, roll_prev_low_idx_arr, 'wave_low_fill_{}{}'.format(wave_itv2, wave_period2), roll_hl_cnt)\n","\n","    res_df = wave_range_ratio_v4_2(res_df, wave_itv2, wave_period2, roll_hl_cnt=roll_hl_cnt)\n","\n","\n","    # ------ wave_loc_pct (bb) ------ #\n","    # res_df = wave_loc_pct_v2(res_df, config, 'T', 60)\n","    # res_df = wave_loc_pct(res_df, config, 'T', 60)\n","\n","    # future_cols = ['cu_es_15T1', 'co_es_15T1', 'upper_wick_ratio_15T', 'lower_wick_ratio_15T']\n","    # itv_list = ['15T', '15T', '15T', '15T']\n","    # res_df = backing_future_data(res_df, future_cols, itv_list)\n","\n","    # ====== intervaly ====== #    \n","    # ------ 5T ------ #\n","    # res_df = dc_level(res_df, '5T', 1)\n","    # res_df = bb_level(res_df, '5T', 1)\n","\n","    # res_df = st_level(res_df, '5T', 1)\n","\n","    # ------ 15T ------ #\n","    # res_df = dc_level(res_df, '15T', 1)\n","    # res_df = bb_level(res_df, '15T', 1)\n","    # res_df = dtk_plot(res_df, dtk_itv2='15T', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    # res_df = st_level(res_df, '15T', 1)\n","\n","    # ------ 30T ------ #\n","    # res_df = dc_level(res_df, '30T', 1)\n","    # res_df = bb_level(res_df, '30T', 1)\n","    # res_df = st_level(res_df, '30T', 1)\n","\n","    # ------ H ------ #\n","    # res_df = bb_level(res_df, 'H', 1)\n","\n","    # ------ 4H ------ #\n","    # res_df = bb_level(res_df, '4H', 1)\n","\n","    # res_df['dc_upper_v2'.format(selection_id)] = res_df['high'].rolling(config.loc_set.zone.dc_period).max()   # Todo, consider dc_period\n","    # res_df['dc_lower_v2'.format(selection_id)] = res_df['low'].rolling(config.loc_set.zone.dc_period).min()\n","\n","    # res_df['zone_dc_upper_v2'.format(selection_id)] = res_df['high'].rolling(config.loc_set.zone.zone_dc_period).max()   # Todo, consider zone_dc_period\n","    # res_df['zone_dc_lower_v2'.format(selection_id)] = res_df['low'].rolling(config.loc_set.zone.zone_dc_period).min()\n","\n","    # if order_side in [\"OPEN\"]:\n","        # candle_score_v3(res_df, 'T', unsigned=False)\n","        # candle_score_v3(res_df, config.loc_set.point1.exp_itv, unsigned=False)\n","\n","    #     temp indi.    #\n","    # res_df[\"ma30_1m\"] = res_df['close'].rolling(30).mean()\n","    # res_df[\"ma60_1m\"] = res_df['close'].rolling(60).mean()\n","    # res_df = dtk_plot(res_df, dtk_itv2='15T', hhtf_entry=15, use_dtk_line=config.loc_set.zone.use_dtk_line, np_timeidx=np_timeidx)\n","\n","    return res_df\n","\n","\n","def expiry_v0(res_df, config, op_idx, e_j, tp_j, np_datas, open_side):\n","    high, low = np_datas\n","    selection_id = config.selection_id\n","    expire = 0\n","\n","    if config.tr_set.expire_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.expire_tick:\n","            expire = 1\n","\n","    if config.tr_set.expire_k1 != \"None\":\n","        if open_side == OrderSide.SELL:\n","            short_tp_1_ = res_df['short_tp_1_{}'.format(selection_id)].to_numpy()  # id 에 따라 dynamic 변수라 이곳에서 numpy 화 진행\n","            short_tp_gap_ = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if low[e_j] <= short_tp_1_[tp_j] - short_tp_gap_[tp_j] * config.tr_set.expire_k1:\n","                expire = 1\n","        else:\n","            long_tp_1_ = res_df['long_tp_1_{}'.format(selection_id)].to_numpy()  # iloc 이 빠를까, to_numpy() 가 빠를까  # 3.94 ms --> 5.34 ms (iloc)\n","            long_tp_gap_ = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if high[e_j] >= long_tp_1_[tp_j] + long_tp_gap_[tp_j] * config.tr_set.expire_k1:\n","                expire = 1\n","\n","    return expire\n","\n","\n","def expiry(res_df, config, op_idx, e_j, tp_j, np_datas, open_side):\n","    high, low = np_datas\n","    selection_id = config.selection_id\n","    expire = 0\n","\n","    if config.tr_set.expire_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.expire_tick:\n","            expire = 1\n","\n","    if config.tr_set.expire_k1 != \"None\":\n","        if open_side == OrderSide.SELL:\n","            short_tp_ = res_df['short_tp_{}'.format(selection_id)].to_numpy()  # id 에 따라 dynamic 변수라 이곳에서 numpy 화 진행\n","            short_tp_gap_ = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if low[e_j] <= short_tp_[tp_j] + short_tp_gap_[tp_j] * config.tr_set.expire_k1:\n","                expire = 1\n","        else:\n","            long_tp_ = res_df['long_tp_{}'.format(selection_id)].to_numpy()  # iloc 이 빠를까, to_numpy() 가 빠를까  # 3.94 ms --> 5.34 ms (iloc)\n","            long_tp_gap_ = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()\n","            if high[e_j] >= long_tp_[tp_j] - long_tp_gap_[tp_j] * config.tr_set.expire_k1:\n","                expire = 1\n","\n","    return expire\n","\n","\n","# def expiry_p1(res_df, config, op_idx1, i, op_idx2, np_datas, open_side):\n","def expiry_p1(res_df, config, op_idx1, op_idx2, tp1, tp0, tp_gap, np_datas, open_side):\n","    high, low = np_datas\n","    selection_id = config.selection_id\n","    expire = 0\n","\n","    # if config.tr_set.expire_tick != \"None\":\n","    #     if e_j - op_idx >= config.tr_set.expire_tick:\n","    #         expire = 1\n","\n","    # Todo, p1's tp1, 0 cannot be vectorized\n","    #   a. expiration 의 조건은 wave1, 0 의 broken\n","    if config.tr_set.expire_k1 != \"None\":\n","        if open_side == OrderSide.SELL:            \n","            if low[op_idx1:op_idx2].min() <= tp1 + tp_gap * config.tr_set.expire_k1 or \\\n","            high[op_idx1:op_idx2].max() >= tp0 - tp_gap * config.tr_set.expire_k1:   # p2_box loc. 이 있어서, op_idx2 + 1 안함\n","                expire = 1\n","        else:\n","            if high[op_idx1:op_idx2].max() >= tp1 - tp_gap * config.tr_set.expire_k1 or \\\n","            low[op_idx1:op_idx2].min() <= tp0 + tp_gap * config.tr_set.expire_k1:\n","                expire = 1\n","\n","    return expire\n","\n","\n","def expiry_p2(res_df, config, op_idx, e_j, out1, out_gap, np_datas, open_side):\n","    high, low = np_datas\n","    selection_id = config.selection_id\n","    expire = 0\n","\n","    if config.tr_set.expire_tick != \"None\":\n","        if e_j - op_idx >= config.tr_set.expire_tick:\n","            expire = 1\n","\n","    if config.tr_set.expire_k2 != \"None\":\n","        if open_side == OrderSide.SELL:\n","            if low[e_j] <= out1 + out_gap * config.tr_set.expire_k2:\n","                expire = 1\n","        else:\n","            if high[e_j] >= out1 - out_gap * config.tr_set.expire_k2:\n","                expire = 1\n","\n","    return expire\n","\n","\n","# def ep_loc_point2_v2(res_df, config, i, out_j, side=OrderSide.SELL):\n","#     allow_ep_in = 1\n","#     if config.selection_id in ['v5_2']:\n","#         if side == OrderSide.SELL:\n","#             dc_upper_T = res_df['dc_upper_T'].to_numpy()\n","#             dc_upper_15T = res_df['dc_upper_15T'].to_numpy()\n","#             allow_ep_in *= (dc_upper_T[i - 1] <= dc_upper_15T[i]) & \\\n","#                            (dc_upper_15T[i - 1] != dc_upper_15T[i])\n","#         else:\n","#             dc_lower_T = res_df['dc_lower_T'].to_numpy()\n","#             dc_lower_15T = res_df['dc_lower_15T'].to_numpy()\n","#             allow_ep_in *= (dc_lower_T[i - 1] >= dc_lower_15T[i]) & \\\n","#                            (dc_lower_15T[i - 1] != dc_lower_15T[i])\n","\n","#     if config.selection_id in ['v3_4']:\n","#         wick_score_list = literal_eval(config.ep_set.point2.wick_score_list)\n","#         wick_scores = [res_df['wick_score_{}'.format(s_itv)].to_numpy() for s_itv in literal_eval(config.ep_set.point2.score_itv_list)]\n","#         close = res_df['close'].to_numpy()\n","#         if side == OrderSide.SELL:\n","#             sup_T = res_df['sup_T'].to_numpy()\n","#             allow_ep_in *= close[i] < sup_T[i - 1]\n","#             if len(wick_score_list) != 0:\n","#                 allow_ep_in *= wick_scores[0][i] < -wick_score_list[0]\n","#         else:\n","#             resi_T = res_df['resi_T'].to_numpy()\n","#             allow_ep_in *= close[i] > resi_T[i - 1]\n","#             if len(wick_score_list) != 0:\n","#                 allow_ep_in *= wick_scores[0][i] > wick_score_list[0]\n","\n","#     if allow_ep_in:\n","#         out_j = i\n","#     return allow_ep_in, out_j\n","\n","\n","# vectorized calc.\n","# multi-stem 에 따라 dynamic vars.가 입력되기 때문에 class 내부 vars. 로 종속시키지 않음\n","def ep_loc_p1_v3(res_df, config, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):\n","    # ------- param init ------- #\n","    selection_id = config.selection_id\n","    c_i = config.trader_set.complete_index\n","    len_df = len(res_df)\n","    mr_res = np.ones(len_df)\n","    zone_arr = np.full(len_df, 'n')\n","\n","    # ------ process 한번에 처리해서 param_check 만 ver. 별로 하면 될 것 ------ #\n","    #     => public_indi() 가 될 것\n","    #     1. 사용한 param 정보와 matching 된 data 병렬로 나열 logging 될 것\n","    tp_fee, out_fee = calc_tp_out_fee_v2(config)\n","\n","    # ============ tr_thresh ============ #\n","    if config.loc_set.point1.short_tr_thresh != \"None\":\n","        if ep_loc_side == OrderSide.SELL:\n","            short_tr_ = res_df['short_tr_{}'.format(selection_id)].to_numpy()\n","            mr_res *= short_tr_ >= config.loc_set.point1.short_tr_thresh\n","            # mr_res *= short_tr_ <= config.loc_set.point1.short_tr_thresh + 0.1\n","            if show_detail:\n","                sys_log.warning(\n","                    \"short_tr_ >= short_tr_thresh : {:.5f} {:.5f} ({})\".format(short_tr_[c_i], config.loc_set.point1.short_tr_thresh, mr_res[c_i]))\n","        else:\n","            long_tr_ = res_df['long_tr_{}'.format(selection_id)].to_numpy()\n","            mr_res *= long_tr_ >= config.loc_set.point1.long_tr_thresh\n","            # mr_res *= long_tr_ <= config.loc_set.point1.long_tr_thresh + 0.1\n","            if show_detail:\n","                sys_log.warning(\n","                    \"long_tr_ >= long_tr_thresh : {:.5f} {:.5f} ({})\".format(long_tr_[c_i], config.loc_set.point1.long_tr_thresh, mr_res[c_i]))\n","\n","    # ============ spread - independent to tr_set ============ #  --> Todo, 사용 안하고 싶은 wave_point1\n","    if config.loc_set.point1.short_spread != \"None\":\n","        if selection_id in ['v3']:\n","            if ep_loc_side == OrderSide.SELL:\n","                bb_base_5T = res_df['bb_base_5T'].to_numpy()  # to_numpy() 는 ep_loc 에서 진행됨\n","                bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","                short_spread = (bb_base_5T - bb_lower_5T - tp_fee * bb_base_5T) / (bb_base_5T - bb_lower_5T + out_fee * bb_base_5T)\n","                mr_res *= short_spread >= config.loc_set.point1.short_spread\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"short_spread >= config.loc_set.point1.short_spread : {:.5f} {:.5f} ({})\".format(short_spread[c_i], config.loc_set.point1.short_spread, mr_res[c_i]))\n","            else:\n","                bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","                dc_lower_5T = res_df['dc_lower_5T'].to_numpy()\n","                # mr_res *= (bb_base_5T - dc_lower_5T - tp_fee * bb_upper_5T) / (bb_base_5T - dc_lower_5T + out_fee * bb_base_5T) >= config.loc_set.point1.long_spread\n","                long_spread = (bb_upper_5T - dc_lower_5T - tp_fee * bb_upper_5T) / (bb_upper_5T - dc_lower_5T + out_fee * bb_upper_5T)\n","                mr_res *= long_spread >= config.loc_set.point1.long_spread\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"long_spread >= config.loc_set.point1.long_spread : {:.5f} {:.5f} ({})\".format(long_spread[c_i], config.loc_set.point1.long_spread, mr_res[c_i]))                  \n","\n","    # ============ point1 ratios ============ #\n","    # ------ wave_range_ratio ------ #\n","    if config.loc_set.point1.cu_wrr_21 != \"None\":   # for excessive range rejection         \n","      wave_itv1 = config.tr_set.wave_itv1\n","      wave_period1 = config.tr_set.wave_period1\n","      co_wrr_21_ = res_df['co_wrr_21_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","      cu_wrr_21_ = res_df['cu_wrr_21_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= cu_wrr_21_ <= config.loc_set.point1.cu_wrr_21\n","        mr_res *= cu_wrr_21_ >= config.loc_set.point1.cu_wrr_21 - 0.2\n","        if show_detail:\n","            sys_log.warning(\"cu_wrr_21_ <= config.loc_set.point1.cu_wrr_21 : {:.5f} {:.5f} ({})\".format(cu_wrr_21_[c_i], config.loc_set.point1.cu_wrr_21, mr_res[c_i]))\n","      else:\n","        mr_res *= co_wrr_21_ <= config.loc_set.point1.co_wrr_21\n","        mr_res *= co_wrr_21_ >= config.loc_set.point1.co_wrr_21 - 0.2\n","        if show_detail:\n","            sys_log.warning(\"co_wrr_21_ <= config.loc_set.point1.co_wrr_21 : {:.5f} {:.5f} ({})\".format(co_wrr_21_[c_i], config.loc_set.point1.co_wrr_21, mr_res[c_i]))\n","\n","    if config.loc_set.point1.wrr_32 != \"None\":            \n","      wave_itv1 = config.tr_set.wave_itv1\n","      wave_period1 = config.tr_set.wave_period1\n","      co_wrr_32_ = res_df['co_wrr_32_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","      cu_wrr_32_ = res_df['cu_wrr_32_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= cu_wrr_32_ <= config.loc_set.point1.wrr_32 + 0.1  # 0.1 0.05\n","        mr_res *= cu_wrr_32_ >= config.loc_set.point1.wrr_32\n","        if show_detail:\n","            sys_log.warning(\"cu_wrr_32_ <= config.loc_set.point1.wrr_32 : {:.5f} {:.5f} ({})\".format(cu_wrr_32_[c_i], config.loc_set.point1.wrr_32, mr_res[c_i]))\n","      else:\n","        mr_res *= co_wrr_32_ <= config.loc_set.point1.wrr_32 + 0.1  # 0.1 0.05\n","        mr_res *= co_wrr_32_ >= config.loc_set.point1.wrr_32\n","        if show_detail:\n","            sys_log.warning(\"co_wrr_32_ <= config.loc_set.point1.wrr_32 : {:.5f} {:.5f} ({})\".format(co_wrr_32_[c_i], config.loc_set.point1.wrr_32, mr_res[c_i]))\n","\n","    # ------ enough_space - Todo, future_data ------ #\n","    if config.loc_set.point1.co_es != \"None\":      \n","      itv, period1 = config.tr_set.p1_itv1, config.tr_set.p1_period1 \n","      b1_cu_es_ = res_df['b1_cu_es_{}{}'.format(itv, period1)].to_numpy()\n","      b1_co_es_ = res_df['b1_co_es_{}{}'.format(itv, period1)].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= b1_co_es_ >= config.loc_set.point1.co_es\n","        mr_res *= b1_co_es_ <= config.loc_set.point1.co_es + 2\n","        if show_detail:\n","            sys_log.warning(\"b1_co_es_ >= config.loc_set.point1.co_es : {:.5f} {:.5f} ({})\".format(b1_co_es_[c_i], config.loc_set.point1.co_es, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_cu_es_ >= config.loc_set.point1.cu_es\n","        mr_res *= b1_cu_es_ <= config.loc_set.point1.cu_es + 1\n","        if show_detail:\n","            sys_log.warning(\"b1_cu_es_ >= config.loc_set.point1.cu_es : {:.5f} {:.5f} ({})\".format(b1_cu_es_[c_i], config.loc_set.point1.cu_es, mr_res[c_i]))\n","\n","    # ------------ wick_ratio - Todo, future_data ------------ #\n","    # if config.loc_set.point1.short_wick_ratio != \"None\":\n","    #   b1_upper_wick_ratio_ = res_df['b1_upper_wick_ratio_{}'.format(config.loc_set.point1.wick_itv)].to_numpy()\n","    #   b1_lower_wick_ratio_ = res_df['b1_lower_wick_ratio_{}'.format(config.loc_set.point1.wick_itv)].to_numpy()      \n","    #   if ep_loc_side == OrderSide.SELL:\n","    #       # mr_res *= b1_upper_wick_ratio_ >= config.loc_set.point1.short_wick_ratio\n","    #       mr_res *= b1_lower_wick_ratio_ >= config.loc_set.point1.short_wick_ratio\n","    #       if show_detail:\n","    #           sys_log.warning(\"b1_lower_wick_ratio_ >= config.loc_set.point1.short_wick_ratio : {:.5f} {:.5f} ({})\".format(b1_lower_wick_ratio_[c_i], config.loc_set.point1.short_wick_ratio, mr_res[c_i]))\n","    #   else:\n","    #       # mr_res *= b1_lower_wick_ratio_ >= config.loc_set.point1.long_wick_ratio\n","    #       mr_res *= b1_upper_wick_ratio_ >= config.loc_set.point1.long_wick_ratio\n","    #       if show_detail:\n","    #           sys_log.warning(\"b1_upper_wick_ratio_ >= config.loc_set.point1.long_wick_ratio : {:.5f} {:.5f} ({})\".format(b1_upper_wick_ratio_[c_i], config.loc_set.point1.long_wick_ratio, mr_res[c_i]))\n","\n","    # ------ candle_range_ratio - Todo, future_data ------ #\n","    # if config.loc_set.point1.crr != \"None\":   \n","    #   tf_entry = to_itvnum(config.loc_set.point1.tf_entry)\n","    #   b1_crr_ = res_df['crr_{}'.format(config.loc_set.point1.tf_entry)].shift(tf_entry).to_numpy()\n","    #   mr_res *= b1_crr_ >= config.loc_set.point1.crr\n","    #   if show_detail:\n","    #       sys_log.warning(\"b1_crr_ >= config.loc_set.point1.crr : {:.5f} {:.5f} ({})\".format(b1_crr_[c_i], config.loc_set.point1.crr, mr_res[c_i]))\n","    \n","    # ------ dc_over_body_ratio ------ #\n","    if config.loc_set.point1.dbr != \"None\":\n","      b1_lwdbr = res_df['b1_lwdbr'].to_numpy()\n","      b1_updbr = res_df['b1_updbr'].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:        \n","        mr_res *= b1_lwdbr >= config.loc_set.point1.dbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_lwdbr >= config.loc_set.point1.dbr : {:.5f} {:.5f} ({})\".format(b1_lwdbr[c_i], config.loc_set.point1.dbr, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_updbr >= config.loc_set.point1.dbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_updbr >= config.loc_set.point1.dbr : {:.5f} {:.5f} ({})\".format(b1_updbr[c_i], config.loc_set.point1.dbr, mr_res[c_i]))\n","            \n","    if config.loc_set.point1.dbr2 != \"None\":\n","      b1_lwdbr = res_df['b1_lwdbr'].to_numpy()\n","      b1_updbr = res_df['b1_updbr'].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:    \n","        mr_res *= b1_updbr >= config.loc_set.point1.dbr2\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_updbr >= config.loc_set.point1.dbr2 : {:.5f} {:.5f} ({})\".format(b1_updbr[c_i], config.loc_set.point1.dbr2, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_lwdbr >= config.loc_set.point1.dbr2\n","        if show_detail:\n","            sys_log.warning(\n","                \"b1_lwdbr >= config.loc_set.point1.dbr2 : {:.5f} {:.5f} ({})\".format(b1_lwdbr[c_i], config.loc_set.point1.dbr2, mr_res[c_i]))\n","\n","    # ------ wick_body_ratio ------ #\n","    if config.loc_set.point1.wbr != \"None\":\n","        wave_body_ratio = res_df['wave_body_ratio'].to_numpy()\n","        mr_res *= wave_body_ratio >= config.loc_set.point1.wbr\n","        if show_detail:\n","            sys_log.warning(\n","                \"wave_body_ratio >= config.loc_set.point1.wbr : {:.5f} {:.5f} ({})\".format(wave_body_ratio[c_i], config.loc_set.point1.wbr, mr_res[c_i]))\n","            \n","    # ------ body_rel_ratio ------ #\n","    if config.loc_set.point1.brr != \"None\":\n","        body_rel_ratio_ = res_df['body_rel_ratio_{}'.format(config.loc_set.point1.tf_entry)].to_numpy()\n","        mr_res *= body_rel_ratio_ <= config.loc_set.point1.brr\n","        if show_detail:\n","            sys_log.warning(\n","                \"body_rel_ratio_ <= config.loc_set.point1.brr : {:.5f} {:.5f} ({})\".format(body_rel_ratio_[c_i], config.loc_set.point1.brr, mr_res[c_i]))\n","\n","    # ------ pumping_ratio ------ #\n","    if config.loc_set.point1.ppr != \"None\":\n","      if ep_loc_side == OrderSide.SELL:\n","        short_ppr_ = res_df['short_ppr_{}'.format(selection_id)].to_numpy()\n","        mr_res *= short_ppr_ >= config.loc_set.point1.ppr\n","        if show_detail:\n","            sys_log.warning(\"short_ppr_ >= config.loc_set.point1.ppr : {:.5f} {:.5f} ({})\".format(short_ppr_[c_i], config.loc_set.point1.ppr, mr_res[c_i]))\n","      else:\n","        long_ppr_ = res_df['long_ppr_{}'.format(selection_id)].to_numpy()\n","        mr_res *= long_ppr_ >= config.loc_set.point1.ppr\n","        if show_detail:\n","            sys_log.warning(\"long_ppr_ >= config.loc_set.point1.ppr : {:.5f} {:.5f} ({})\".format(long_ppr_[c_i], config.loc_set.point1.ppr, mr_res[c_i]))\n"," \n","    # ============ rtc_zone  ============ #  --> Todo, 사용 안하고 싶은 wave_dur., 추후 zone 으로 옮길 것\n","    # ------ dtk ------ #\n","    if config.loc_set.zone.dt_k != \"None\":\n","        # ------ dc_v2 ------ #\n","        dc_lower_v2 = res_df['dc_lower_v2'.format(selection_id)].to_numpy()\n","        short_dtk_1_ = res_df['short_dtk_1_{}'.format(selection_id)].to_numpy() - \\\n","                       res_df['short_dtk_gap_{}'.format(selection_id)].to_numpy() * config.loc_set.zone.dt_k\n","        dc_upper_v2 = res_df['dc_upper_v2'.format(selection_id)].to_numpy()\n","        long_dtk_1_ = res_df['long_dtk_1_{}'.format(selection_id)].to_numpy() + \\\n","                      res_df['long_dtk_gap_{}'.format(selection_id)].to_numpy() * config.loc_set.zone.dt_k\n","        if ep_loc_side == OrderSide.SELL:\n","            mr_res *= dc_lower_v2 >= short_dtk_1_\n","            if show_detail:\n","                sys_log.warning(\n","                    \"dc_lower_v2 >= short_dtk_1_ : {:.5f} {:.5f} ({})\".format(dc_lower_v2[c_i], short_dtk_1_[c_i], mr_res[c_i]))\n","        else:\n","            mr_res *= dc_upper_v2 <= long_dtk_1_\n","            if show_detail:\n","                sys_log.warning(\n","                    \"dc_upper_v2 <= long_dtk_1_ : {:.5f} {:.5f} ({})\".format(dc_upper_v2[c_i], long_dtk_1_[c_i], mr_res[c_i]))\n","                \n","    # ============ zone ============ #\n","    # ------ config var. 이 등록되지 않은 dur. 은 selection_id 으로 조건문을 나눔 (lvrg_set 과 동일) ------ #\n","    # if config.loc_set.zone.use_zone:\n","\n","\n","    # -------------- zoned tr_set - post_work -------------- #\n","    if config.tr_set.c_ep_gap != \"None\" or config.tr_set.t_out_gap != \"None\":\n","        #       by zone_dtk       #\n","        #         c_zone        #\n","        zone_dc_upper_v2_ = res_df['zone_dc_upper_v2'.format(selection_id)].to_numpy()\n","        long_dtk_plot_1 = res_df['long_dtk_plot_1'].to_numpy() + res_df['long_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        zone_dc_lower_v2_ = res_df['zone_dc_lower_v2'.format(selection_id)].to_numpy()\n","        short_dtk_plot_1 = res_df['short_dtk_plot_1'].to_numpy() - res_df['short_dtk_plot_gap'].to_numpy() * config.loc_set.zone.zone_dt_k\n","        if ep_loc_side == OrderSide.SELL:\n","            zone_res = zone_dc_upper_v2_ > long_dtk_plot_1  # mr_res 와는 별개임\n","            pos = 'short'\n","        else:\n","            zone_res = zone_dc_lower_v2_ < short_dtk_plot_1\n","            pos = 'long'\n","\n","        # static 여부에 따른 vectorized adj. - dynamic 은 vectorize 불가\n","        if config.ep_set.static_ep and config.tr_set.c_ep_gap != \"None\":\n","            res_df['{}_ep_{}'.format(pos, selection_id)][zone_res] = res_df['{}_ep2_{}'.format(pos, selection_id)][zone_res]\n","        if config.out_set.static_out and config.tr_set.t_out_gap != \"None\":\n","            res_df['{}_out_{}'.format(pos, selection_id)][~zone_res] = res_df['{}_out2_{}'.format(pos, selection_id)][\n","                ~zone_res]  # t_zone 에 대한 out2 setting\n","        zone_arr = np.where(zone_res == 1, 'c', 't')\n","\n","    return mr_res, zone_arr  # mr_res 의 True idx 가 open signal\n","\n","\n","def ep_loc_p2_v3(res_df, config, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL):\n","    # ------- param init ------- #\n","    selection_id = config.selection_id\n","    c_i = config.trader_set.complete_index\n","    len_df = len(res_df)\n","    mr_res = np.ones(len_df)\n","    zone_arr = np.full(len_df, 'n')\n","\n","    # ------ process 한번에 처리해서 param_check 만 ver. 별로 하면 될 것 ------ #\n","    #     => public_indi() 가 될 것\n","    #     1. 사용한 param 정보와 matching 된 data 병렬로 나열 logging 될 것\n","    # tp_fee, out_fee = calc_tp_out_fee_v2(config)\n","\n","    # ============ point1 ratios ============ #\n","    # ------ wave_range_ratio ------ #\n","    # if config.loc_set.point2.cu_wrr_21 != \"None\":   # for excessive range rejection         \n","    #   wave_itv1 = config.tr_set.wave_itv1\n","    #   wave_period1 = config.tr_set.wave_period1\n","    #   co_wrr_21_ = res_df['co_wrr_21_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    #   cu_wrr_21_ = res_df['cu_wrr_21_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","    #   if ep_loc_side == OrderSide.SELL:\n","    #     mr_res *= cu_wrr_21_ <= config.loc_set.point2.cu_wrr_21\n","    #     mr_res *= cu_wrr_21_ >= config.loc_set.point2.cu_wrr_21 - 0.2\n","    #     if show_detail:\n","    #         sys_log.warning(\"cu_wrr_21_ <= config.loc_set.point2.cu_wrr_21 : {:.5f} {:.5f} ({})\".format(cu_wrr_21_[c_i], config.loc_set.point2.cu_wrr_21, mr_res[c_i]))\n","    #   else:\n","    #     mr_res *= co_wrr_21_ <= config.loc_set.point2.co_wrr_21\n","    #     mr_res *= co_wrr_21_ >= config.loc_set.point2.co_wrr_21 - 0.2\n","    #     if show_detail:\n","    #         sys_log.warning(\"co_wrr_21_ <= config.loc_set.point2.co_wrr_21 : {:.5f} {:.5f} ({})\".format(co_wrr_21_[c_i], config.loc_set.point2.co_wrr_21, mr_res[c_i]))\n","\n","    if config.loc_set.point2.wrr_32 != \"None\":            \n","      wave_itv2 = config.tr_set.wave_itv2\n","      wave_period2 = config.tr_set.wave_period2\n","      co_wrr_32_ = res_df['co_wrr_32_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","      cu_wrr_32_ = res_df['cu_wrr_32_{}{}'.format(wave_itv2, wave_period2)].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= cu_wrr_32_ <= config.loc_set.point2.wrr_32  #  + 0.1  # 0.1 0.05\n","        # mr_res *= cu_wrr_32_ >= config.loc_set.point2.wrr_32\n","        if show_detail:\n","            sys_log.warning(\"cu_wrr_32_ <= config.loc_set.point2.wrr_32 : {:.5f} {:.5f} ({})\".format(cu_wrr_32_[c_i], config.loc_set.point2.wrr_32, mr_res[c_i]))\n","      else:\n","        mr_res *= co_wrr_32_ <= config.loc_set.point2.wrr_32  #  + 0.1  # 0.1 0.05\n","        # mr_res *= co_wrr_32_ >= config.loc_set.point2.wrr_32\n","        if show_detail:\n","            sys_log.warning(\"co_wrr_32_ <= config.loc_set.point2.wrr_32 : {:.5f} {:.5f} ({})\".format(co_wrr_32_[c_i], config.loc_set.point2.wrr_32, mr_res[c_i]))\n","\n","\n","    return mr_res, zone_arr  # mr_res 의 True idx 가 open signal"]},{"cell_type":"markdown","source":["#### legacy"],"metadata":{"id":"EQ63Jwpvr7qA"}},{"cell_type":"code","source":["      \n","    # ------ hl_loc_pct ------ #\n","    if config.loc_set.zone.hl_loc_pct != \"None\":      \n","      wave_high_loc_pct_ = res_df['wave_high_loc_pct_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","      wave_low_loc_pct_ = res_df['wave_low_loc_pct_{}{}'.format(wave_itv1, wave_period1)].to_numpy()\n","\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= wave_high_loc_pct_ >= config.loc_set.zone.hl_loc_pct\n","        mr_res *= wave_high_loc_pct_ <= config.loc_set.zone.hl_loc_pct + 0.5\n","        if show_detail:\n","            sys_log.warning(\"wave_high_loc_pct_ >= config.loc_set.zone.hl_loc_pct : {:.5f} {:.5f} ({})\".format(wave_high_loc_pct_[c_i], config.loc_set.zone.hl_loc_pct, mr_res[c_i]))\n","      else:\n","        mr_res *= wave_low_loc_pct_ >= config.loc_set.zone.hl_loc_pct\n","        mr_res *= wave_low_loc_pct_ <= config.loc_set.zone.hl_loc_pct + 0.5\n","        if show_detail:\n","            sys_log.warning(\"wave_low_loc_pct_ >= config.loc_set.zone.hl_loc_pct : {:.5f} {:.5f} ({})\".format(wave_low_loc_pct_[c_i], config.loc_set.zone.hl_loc_pct, mr_res[c_i]))\n","\n","            \n","        # ------------------ wave_biaser (sr_confirmer) ------------------ #\n","        if selection_id in ['3_9']:     \n","          itv, period1, period2 = config.tr_set.p1_itv1, config.tr_set.p1_period1, config.tr_set.p1_period2          \n","\n","          if ep_loc_side == OrderSide.SELL:\n","            short_wave_high_ = res_df['short_wave_high_{}{}{}'.format(itv, period1, period2)]\n","            bb_lower_5T_amax = get_line(res_df['short_wave_high_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), res_df['bb_lower_5T'].to_numpy())\n","            mr_res *= short_wave_high_ <= bb_lower_5T_amax\n","            if show_detail:\n","                sys_log.warning(\"short_wave_high_ <= bb_lower_5T_amax : {:.5f} {:.5f} ({})\".format(short_wave_high_[c_i], bb_lower_5T_amax[c_i], mr_res[c_i]))\n","          else:\n","            long_wave_low_ = res_df['long_wave_low_{}{}{}'.format(itv, period1, period2)]\n","            bb_upper_5T_amax = get_line(res_df['long_wave_low_idx_{}{}{}'.format(itv, period1, period2)].to_numpy(), res_df['bb_upper_5T'].to_numpy())\n","            mr_res *= long_wave_low_ >= bb_upper_5T_amax\n","            if show_detail:\n","                sys_log.warning(\"long_wave_low_ >= bb_upper_5T_amax : {:.5f} {:.5f} ({})\".format(long_wave_low_[c_i], bb_upper_5T_amax[c_i], mr_res[c_i]))\n","\n","\n","        if selection_id in ['4_3', '3_5', '3_51']:\n","            dc_base_T20 = res_df['dc_base_T20'].to_numpy()\n","            dc_base_3T20 = res_df['dc_base_3T20'].to_numpy()\n","            # b1_dc_base_3T20 = res_df['dc_base_3T20'].shift(3).to_numpy()\n","            # dc_base_5T = res_df['dc_base_5T'].to_numpy()\n","            # dc_base_15T = res_df['dc_base_15T'].to_numpy()\n","            # dc_base_30T = res_df['dc_base_30T'].to_numpy()\n","            dc_base_H20 = res_df['dc_base_H20'].to_numpy()\n","            # dc_base_4H = res_df['dc_base_4H'].to_numpy()\n","            # dc_base_D = res_df['dc_base_D'].to_numpy()\n","\n","            itv, period1, period2 = config.tr_set.p1_itv1, config.tr_set.p1_period1, config.tr_set.p1_period2\n","            if ep_loc_side == OrderSide.SELL:\n","                # ------ short_base_ <= dc_base_3T20 ------ #\n","                short_base_ = res_df['short_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","                mr_res *= short_base_ <= dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\"short_base_ <= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(short_base_[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # mr_res *= short_base_ <= dc_base_T20\n","                # if show_detail:\n","                #     sys_log.warning(\"short_base_ <= dc_base_T20 : {:.5f} {:.5f} ({})\".format(short_base_[c_i], dc_base_T20[c_i], mr_res[c_i]))\n","\n","                # ------ reject csd ------ #\n","                # dc_upper_ = res_df['dc_upper_{}{}'.format(itv, period1)].to_numpy()\n","                # mr_res *= dc_upper_ <= dc_base_3T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_upper_ <= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(dc_upper_[c_i], dc_base_3T[c_i], mr_res[c_i]))\n","\n","                # Todo, 부호 조심\n","                # dc_upper2_ = res_df['dc_upper_{}{}'.format(itv, period2)].to_numpy()\n","                # mr_res *= dc_upper2_ >= dc_base_H\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_upper2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_upper2_[c_i], dc_base_H[c_i], mr_res[c_i]))  \n","\n","                # long 과 동일한 dur.\n","                dc_lower2_ = res_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","                mr_res *= dc_lower2_ >= dc_base_H20\n","                if show_detail:\n","                    sys_log.warning(\"dc_lower2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], dc_base_H20[c_i], mr_res[c_i]))  \n","\n","                # ------ consecutive base ascender ------ #\n","                # ------ 1. roll_min ------ #\n","                dc_base_3T20_rollmin = res_df['dc_base_3T20'].rolling(config.loc_set.zone.base_roll_period).min().to_numpy()\n","                mr_res *= dc_base_3T20_rollmin == dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"dc_base_3T20_rollmin == dc_base_3T2020 : {:.5f} {:.5f} ({})\".format(dc_base_3T20_rollmin[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","            else:\n","                # ------ long_base >= dc_base_3T20 ------ #\n","                long_base_ = res_df['long_base_{}{}{}'.format(itv, period1, period2)].to_numpy()\n","                mr_res *= long_base_ >= dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\"long_base_ >= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(long_base_[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # mr_res *= long_base_ >= dc_base_T20\n","                # if show_detail:\n","                #     sys_log.warning(\"long_base_ >= dc_base_T20 : {:.5f} {:.5f} ({})\".format(long_base_[c_i], dc_base_T20[c_i], mr_res[c_i]))\n","\n","                # ------ reject csd ------ #\n","                # dc_lower_ = res_df['dc_lower_{}{}'.format(itv, period1)].to_numpy()\n","                # mr_res *= dc_lower_ >= dc_base_3T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_lower_ >= dc_base_3T20 : {:.5f} {:.5f} ({})\".format(dc_lower_[c_i], dc_base_3T[c_i], mr_res[c_i]))\n","\n","                dc_lower2_ = res_df['dc_lower_{}{}'.format(itv, period2)].to_numpy()\n","                mr_res *= dc_lower2_ >= dc_base_H20\n","                if show_detail:\n","                    sys_log.warning(\"dc_lower2_ >= dc_base_H20 : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], dc_base_H20[c_i], mr_res[c_i]))\n","\n","                # bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","                # mr_res *= dc_lower2_ >= bb_lower_5T\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_lower2_ >= bb_lower_5T : {:.5f} {:.5f} ({})\".format(dc_lower2_[c_i], bb_lower_5T[c_i], mr_res[c_i]))\n","\n","                # ------ alignment ------ #\n","                # mr_res *= (dc_base_3T20 > dc_base_5T) & (dc_base_5T > dc_base_15T) & (dc_base_15T > dc_base_30T)\n","\n","                # ------ consecutive base ascender ------ #\n","                # ------ 1. roll_max ------ #\n","                dc_base_3T20_rollmax = res_df['dc_base_3T20'].rolling(config.loc_set.zone.base_roll_period).max().to_numpy()\n","                mr_res *= dc_base_3T20_rollmax == dc_base_3T20\n","                if show_detail:\n","                    sys_log.warning(\n","                        \"dc_base_3T20_rollmax == dc_base_3T2020 : {:.5f} {:.5f} ({})\".format(dc_base_3T20_rollmax[c_i], dc_base_3T20[c_i], mr_res[c_i]))\n","\n","                # ------ 2. roll_max_v2 - ascender  ------ #\n","                # dc_base_3T_ascend = (res_df['dc_base_3T'] >= res_df['dc_base_3T'].shift(3)).rolling(config.loc_set.zone.base_roll_period).sum().to_numpy()\n","                # # mr_res *= dc_base_3T_ascend == config.loc_set.zone.base_roll_period\n","                # mr_res *= dc_base_3T_ascend != config.loc_set.zone.base_roll_period\n","                # if show_detail:\n","                #     sys_log.warning(\"dc_base_3T_ascend == config.loc_set.zone.base_roll_period : {:.5f} {:.5f} ({})\".format(dc_base_3T_ascend[c_i], config.loc_set.zone.base_roll_period, mr_res[c_i]))\n","\n","\n","    if config.loc_set.point.wrr != \"None\":            \n","      wave_itv = 'T'\n","      wave_period = config.tr_set.wave_period\n","      co_wrr_ = res_df['co_wrr_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","      cu_wrr_ = res_df['cu_wrr_{}{}'.format(wave_itv, wave_period)].to_numpy()\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= co_wrr_ <= config.loc_set.point.wrr\n","        if show_detail:\n","            sys_log.warning(\"co_wrr_ <= config.loc_set.point.wrr : {:.5f} {:.5f} ({})\".format(co_wrr_[c_i], config.loc_set.point.wrr, mr_res[c_i]))\n","      else:\n","        mr_res *= cu_wrr_ <= config.loc_set.point.wrr\n","        if show_detail:\n","            sys_log.warning(\"cu_wrr_ <= config.loc_set.point.wrr : {:.5f} {:.5f} ({})\".format(cu_wrr_[c_i], config.loc_set.point.wrr, mr_res[c_i]))\n","            \n","      # if ep_loc_side == OrderSide.SELL:\n","      #   mr_res *= cu_es_ >= config.loc_set.point.cu_es\n","      #   mr_res *= cu_es_ <= config.loc_set.point.cu_es + 2\n","      #   if show_detail:\n","      #       sys_log.warning(\"cu_es_ >= config.loc_set.point.cu_es : {:.5f} {:.5f} ({})\".format(cu_es_[c_i], config.loc_set.point.cu_es, mr_res[c_i]))\n","      # else:\n","      #   mr_res *= co_es_ >= config.loc_set.point.co_es\n","      #   mr_res *= co_es_ <= config.loc_set.point.co_es + 1\n","      #   if show_detail:\n","      #       sys_log.warning(\"co_es_ >= config.loc_set.point.co_es : {:.5f} {:.5f} ({})\".format(co_es_[c_i], config.loc_set.point.co_es, mr_res[c_i]))\n","\n","\n","      if ep_loc_side == OrderSide.SELL:\n","          mr_res *= lower_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          # mr_res *= upper_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          if show_detail:\n","              sys_log.warning(\"upper_wick_ratio_ >= config.loc_set.point.wick_ratio : {:.5f} {:.5f} ({})\".format(upper_wick_ratio_[c_i], config.loc_set.point.wick_ratio, mr_res[c_i]))\n","      else:\n","          mr_res *= upper_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          mr_res *= upper_wick_ratio_ <= config.loc_set.point.wick_ratio + 0.1\n","          # mr_res *= lower_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          if show_detail:\n","              sys_log.warning(\"lower_wick_ratio_ >= config.loc_set.point.wick_ratio : {:.5f} {:.5f} ({})\".format(lower_wick_ratio_[c_i], config.loc_set.point.wick_ratio, mr_res[c_i]))\n","              \n","      crr_ = res_df['crr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()\n","      mr_res *= crr_ >= config.loc_set.point.crr\n","     \n","      if show_detail:\n","          sys_log.warning(\"crr_ >= config.loc_set.point.crr : {:.5f} {:.5f} ({})\".format(crr_[c_i], config.loc_set.point.crr, mr_res[c_i]))\n","\n","      b1_upper_wick_ratio_ = res_df['upper_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].shift(itv_num).to_numpy()\n","      b1_lower_wick_ratio_ = res_df['lower_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].shift(itv_num).to_numpy()\n","\n","      if ep_loc_side == OrderSide.SELL:\n","          upper_wick_ratio_ = res_df['upper_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].to_numpy()\n","          mr_res *= upper_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          if show_detail:\n","              sys_log.warning(\"upper_wick_ratio_ >= config.loc_set.point.wick_ratio : {:.5f} {:.5f} ({})\".format(upper_wick_ratio_[c_i], config.loc_set.point.wick_ratio, mr_res[c_i]))\n","      else:\n","          lower_wick_ratio_ = res_df['lower_wick_ratio_{}'.format(config.loc_set.point.wick_itv)].to_numpy()\n","          mr_res *= lower_wick_ratio_ >= config.loc_set.point.wick_ratio\n","          if show_detail:\n","              sys_log.warning(\"lower_wick_ratio_ >= config.loc_set.point.wick_ratio : {:.5f} {:.5f} ({})\".format(lower_wick_ratio_[c_i], config.loc_set.point.wick_ratio, mr_res[c_i]))\n","\n","    if config.loc_set.point.cppr != \"None\":   \n","      tf_entry = to_itvnum(config.loc_set.point.tf_entry)\n","      b1_cppr_ = res_df['b1_cppr_{}'.format(config.loc_set.point.tf_entry)].to_numpy()  # check b1's cppr in ep_loc\n","      if ep_loc_side == OrderSide.SELL:\n","        mr_res *= b1_cppr_ >= config.loc_set.point.cppr\n","        if show_detail:\n","            sys_log.warning(\"b1_cppr_ >= config.loc_set.point.cppr : {:.5f} {:.5f} ({})\".format(b1_cppr_[c_i], config.loc_set.point.cppr, mr_res[c_i]))\n","      else:\n","        mr_res *= b1_cppr_ <= -config.loc_set.point.cppr\n","        if show_detail:\n","            sys_log.warning(\"b1_cppr_ <= -config.loc_set.point.cppr : {:.5f} {:.5f} ({})\".format(b1_cppr_[c_i], config.loc_set.point.cppr, mr_res[c_i]))\n","            \n","    # ------------ candle_score ------------ #\n","    wick_score_list = literal_eval(config.loc_set.point.wick_score_list)\n","    if len(wick_score_list) != 0:\n","        score_itv_list = literal_eval(config.loc_set.point.score_itv_list)\n","        # ------ candle_score_v0 (1m initial tick 기준임) ------ #  Todo - higher timeframe 경우 back_data 사용해야함\n","        for wick_score_, score_itv_ in zip(wick_score_list, score_itv_list):\n","            wick_score = res_df['wick_score_{}'.format(score_itv_)].to_numpy()\n","            if ep_loc_side == OrderSide.SELL:\n","                mr_res *= wick_score <= -wick_score_\n","                if show_detail:\n","                    sys_log.warning(\"wick_score <= -wick_score_ : {:.5f} {:.5f} ({})\".format(wick_score[c_i], -wick_score_, mr_res[c_i]))\n","            else:\n","                mr_res *= wick_score >= wick_score_\n","                if show_detail:\n","                    sys_log.warning(\"wick_score >= wick_score_ : {:.5f} {:.5f} ({})\".format(wick_score[c_i], wick_score_, mr_res[c_i]))\n","            \n","\n","        # ------------------ swing_middle ------------------ #\n","        # ------------ 1. envelope ------------ #\n","\n","        # ------ a. dc ------ #\n","        # ep_loc check 기준 idx 가 entry 기준이라는 걸 명심\n","        if selection_id in ['v3_2']:\n","            hc_itv = '15T'\n","            dc_itv = '15T'\n","            shift_num = [0, to_itvnum(hc_itv)]\n","            div_res = [1, 0]\n","            for itv_num, res in zip(shift_num, div_res):\n","                close_ = res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy()  # close_bar timein 사용하는 경우, 특수로 shift(0) 사용가능\n","                if ep_loc_side == OrderSide.SELL:\n","                    dc_lower_ = res_df['dc_lower_%s' % dc_itv].shift(itv_num).to_numpy()\n","                    mr_res *= (close_ < dc_lower_) == res\n","                else:\n","                    dc_upper_ = res_df['dc_upper_%s' % dc_itv].shift(itv_num).to_numpy()\n","                    mr_res *= (close_ > dc_upper_) == res\n","\n","        # ------------ 2. degree ------------ #\n","        # ------ a. norm_body_ratio ------ #\n","        if config.loc_set.zone.abs_ratio != \"None\":\n","            itv = config.loc_set.point.tf_entry\n","            abs_ratio_ = res_df['abs_ratio_{}'.format(itv)].to_numpy()\n","            mr_res *= abs_ratio_ >= config.loc_set.zone.abs_ratio\n","            # mr_res *= abs_ratio_ <= config.loc_set.zone.abs_ratio\n","\n","    # ------------ 2. imbalance_ratio ------------ #\n","    if config.loc_set.zone.ir != \"None\":\n","        itv = config.loc_set.point.tf_entry\n","        itv_num = to_itvnum(itv)\n","        if ep_loc_side == OrderSide.SELL:\n","            short_ir_ = res_df['short_ir_{}'.format(itv)].to_numpy()\n","            # short_ir_ = res_df['short_ir_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","            # mr_res *= short_ir_ >= config.loc_set.zone.ir     # greater\n","            mr_res *= short_ir_ <= config.loc_set.zone.ir  # lesser\n","            if show_detail:\n","                sys_log.warning(\n","                    \"short_ir_ <= config.loc_set.zone.ir : {:.5f} {:.5f} ({})\".format(short_ir_[c_i], config.loc_set.zone.ir, mr_res[c_i]))\n","        else:\n","            long_ir_ = res_df['long_ir_{}'.format(itv)].to_numpy()\n","            # long_ir_ = res_df['long_ir_{}'.format(itv)].shift(itv_num).to_numpy()\n","\n","            # mr_res *= long_ir_ >= config.loc_set.zone.ir\n","            mr_res *= long_ir_ <= config.loc_set.zone.ir\n","            if show_detail:\n","                sys_log.warning(\n","                    \"long_ir_ <= config.loc_set.zone.ir : {:.5f} {:.5f} ({})\".format(long_ir_[c_i], config.loc_set.zone.ir, mr_res[c_i]))\n","                \n","        # if selection_id in ['3_6']:\n","        #   itv, period1, period2 = config.loc_set.point.p1_itv0, config.loc_set.point.p1_period1, config.loc_set.point.p1_period2          \n","\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     high_5T = res_df['high_5T'].to_numpy()  # Todo, tf_entry - 1 open 기준이라 future_data 사용 가능\n","        #     short_base_ = res_df['short_base_{}{}{}'.format(itv, period1, period2)]\n","        #     mr_res *= high_5T < short_base_\n","        #     if show_detail:\n","        #         sys_log.warning(\n","        #             \"high_5T < short_base_ : {:.5f} {:.5f} ({})\".format(high_5T[c_i], short_base_[c_i], mr_res[c_i]))\n","        #   else:\n","        #     low_5T = res_df['low_5T'].to_numpy()  # Todo, tf_entry - 1 open 기준이라 future_data 사용 가능\n","        #     long_base_ = res_df['long_base_{}{}{}'.format(itv, period1, period2)]\n","        #     mr_res *= low_5T > long_base_\n","        #     if show_detail:\n","        #         sys_log.warning(\n","        #             \"low_5T > long_base_ : {:.5f} {:.5f} ({})\".format(low_5T[c_i], long_base_[c_i], mr_res[c_i]))'\n","        \n","        # ------ dc_base ------ #\n","        # if selection_id in ['4']:  # 'v3_3', 'v3_4',\n","        #   hc_itv = '5T'\n","        #   dc_itv = '5T'\n","        #   itv_num = to_itvnum(hc_itv)\n","        #   close_ = res_df['close_{}'.format(hc_itv)].shift(itv_num).to_numpy()   # 따라서 future_data 사용시, shifting 필요함\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     dc_lower_ = res_df['dc_lower_%s' % dc_itv].shift(itv_num).to_numpy()\n","        #     mr_res *= close_ < dc_lower_\n","        #   else:\n","        #     dc_upper_ = res_df['dc_upper_%s' % dc_itv].shift(itv_num).to_numpy()\n","        #     mr_res *= close_ > dc_upper_\n","\n","        # ------ ema ------ #\n","        # if selection_id in ['v5_2']: # 'v3'\n","        #   ema_5T = res_df['ema_5T'].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= close < ema_5T\n","        #   else:\n","        #     mr_res *= close > ema_5T\n","        \n","        # ------ b. bb ------ #\n","        # close = res_df['close'].to_numpy()\n","\n","        # if selection_id in ['v3_3']:\n","        #   open = res_df['open'].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     bb_lower_1m = res_df['bb_lower_1m'].to_numpy()\n","        #     # mr_res *= close <= bb_lower_1m\n","        #     mr_res *= open <= bb_lower_1m\n","        #   else:\n","        #     bb_upper_1m = res_df['bb_upper_1m'].to_numpy()\n","        #     # mr_res *= close >= bb_upper_1m\n","        #     mr_res *= open >= bb_upper_1m\n","\n","        if selection_id in ['4_1']:\n","            if ep_loc_side == OrderSide.SELL:\n","                bb_lower_15T = res_df['bb_lower_15T'].to_numpy()\n","                short_ep_ = res_df['short_ep_{}'.format(selection_id)].to_numpy()\n","                mr_res *= bb_lower_15T >= short_ep_\n","            else:\n","                bb_upper_15T = res_df['bb_upper_15T'].to_numpy()\n","                long_ep_ = res_df['long_ep_{}'.format(selection_id)].to_numpy()\n","                mr_res *= bb_upper_15T <= long_ep_\n","\n","        # if selection_id in ['v5_2']:\n","        #   bb_upper2_ = res_df['bb_upper2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","        #   bb_lower2_ = res_df['bb_lower2_%s' % config.loc_set.zone.bbz_itv].to_numpy()\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= bb_upper2_ < close\n","        #   else:\n","        #     mr_res *= bb_lower2_ > close\n","\n","        # degree_list = literal_eval(config.loc_set.zone.degree_list)\n","        # if len(degree_list) != 0:\n","        # # if selection_id in ['v3_3', 'v3_4']:\n","        #   norm_close_15 = res_df['norm_close_15'].to_numpy()   # -> 이거 뭘로 만들었는지 불분명함,,\n","        #   b1_norm_close_15 = res_df['norm_close_15'].shift(15).to_numpy()\n","\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     mr_res *= norm_close_15 <= -degree_list[0]\n","        #     # mr_res *= b1_norm_close_15 <= -degree_list[1]\n","        #   else:\n","        #     mr_res *= norm_close_15 >= degree_list[0]\n","        #     # mr_res *= b1_norm_close_15 >= degree_list[1]\n","\n","        # ------ b. dc ------ #\n","        # if selection_id in ['v3_3']:\n","        #   if ep_loc_side == OrderSide.SELL:\n","        #     dc_lower_ = res_df['dc_lower_1m'].to_numpy()\n","        #     b1_dc_lower_ = res_df['dc_lower_1m'].shift(1).to_numpy()\n","        #     mr_res *= dc_lower_ < b1_dc_lower_\n","        #   else:\n","        #     dc_upper_ = res_df['dc_upper_1m'].to_numpy()\n","        #     b1_dc_upper_ = res_df['dc_upper_1m'].shift(1).to_numpy()\n","        #     mr_res *= dc_upper_ > b1_dc_upper_\n","\n","        # ------ c. sar ------ #\n","        # if selection_id in ['v3_3']:\n","        # sar_uptrend_3T = res_df['sar_uptrend_3T'].to_numpy()\n","        # if ep_loc_side == OrderSide.SELL:\n","        #   mr_res *= sar_uptrend_3T == 0\n","        # else:\n","        #   mr_res *= sar_uptrend_3T == 1"],"metadata":{"id":"csZwxsP5r_Pz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JjKHyqftzhD7"},"source":["### set config (override available)"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"q_4E-zH02WJy","executionInfo":{"status":"ok","timestamp":1653017708843,"user_tz":-540,"elapsed":5,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["#     caution : MARKET / LIMIT spelling   #\n","#      json doesn't support single quotes     #\n","\n","param_dict = {\n","  \"selection_id\": \"5_45\",\n","  \"trader_set\": {\n","    \"backtrade\": 0,\n","    \"back_data_path\": \"C:\\\\Users\\\\Lenovo\\\\PycharmProjects\\\\System_Trading\\\\JnQ\\\\candlestick_concated\\\\database_bn\\\\2022-02-17\\\\2022-02-17 ETHUSDT_1m.ftr\",\n","    \"start_datetime\": \"2020-09-05 00:00:59.999\",\n","    \"run\": 1,\n","    \"df_log\": 0,\n","    \"latest_index\": -1,\n","    \"complete_index\": -2,\n","    \"limit_fee\": 1e-10,\n","    \"market_fee\": 1e-10,\n","    \"initial_asset\": 24500,\n","    \"asset_changed\": 0,\n","    \"symbol\": \"ETHUSDT\",\n","    \"symbol_changed\": 0,\n","    \"itv_list\": \"['T', '3T', '5T', '15T', '30T', 'H', '4H']\",\n","    \"row_list\": \"[100, 50, 1, 1, 1, 50, 1]\",\n","    \"rec_row_list\": \"[1, 1, 1, 1, 1, 1, 1]\",\n","    \"offset_list\": \"['1h', '1h', '1h', '1h', '1h', '1h', '1h']\",\n","    \"bar_close_second\": 59,\n","    \"realtime_term\": 0.01,\n","    \"order_term\": 0.25,\n","    \"api_retry_term\": 1,\n","    \"check_entry_sec\": 10,\n","    \"entry_execution_wait\": 60,\n","    \"breakout_qty_ratio\": 0.97,\n","    \"qty_check_term\": 30,\n","    \"exit_execution_wait\": 60,\n","    \"close_complete_term\": 5,\n","    \"save_stacked_df\": 0,\n","    \"stacked_df_exist\": 1\n","  },\n","  \"pos_set\": {\n","    \"short_inversion\": 0,\n","    \"long_inversion\": 0,\n","    \"short_ban\": 0,\n","    \"long_ban\": 0\n","  },\n","  \"loc_set\": {      \n","    \"point1\": {\n","      \"exp_itv\": \"5T\",\n","      \"tf_entry\": \"15T\",\n","      \"candle_pattern\": \"CDLMARUBOZU\",\n","      \"short_spread\": \"None\",\n","      \"long_spread\": \"None\",\n","      \"short_tr_thresh\": \"None\",\n","      \"long_tr_thresh\": \"None\",\n","      \"short_wick_ratio\": \"None\",\n","      \"long_wick_ratio\": \"None\",\n","      \"wick_itv\": \"5T\",\n","      \"cu_wrr_21\": \"None\",\n","      \"co_wrr_21\": \"None\",\n","      \"wrr_32\": 0.3,\n","      \"co_es\": \"None\",\n","      \"cu_es\": \"None\",\n","      \"crr\": \"None\",\n","      \"cppr\": \"None\",\n","      \"ppr\": \"None\",\n","      \"wbr\": \"None\",\n","      \"dbr\": \"None\",\n","      \"dbr2\": \"None\",\n","      \"brr\": \"None\",\n","      \"ir\": \"None\",\n","      \"abs_ratio\": \"None\"\n","    },\n","    \"point2\": {\n","      \"wrr_32\": 0.3,\n","    },\n","    \"zone\": {\n","      \"use_zone\": 0,\n","      \"base_roll_period\": 50,\n","      \"degree_list\": \"[]\",\n","      \"dtk_itv\": \"5T\",\n","      \"dt_k\": \"None\",\n","      \"dc_period\": 135,\n","      \"use_dtk_line\": 0,\n","      \"zone_dt_k\": 0.4,\n","      \"zone_dc_period\": 135\n","    }\n","  },\n","  \"tr_set\": {\n","    \"wave_itv1\" : '15T',\n","    \"wave_period1\": 5,\n","    \"wave_itv2\" : 'T',    \n","    \"wave_period2\": 20,\n","    \"wave_greater1\": 0,\n","    \"wave_greater2\": 0,\n","    \"wave_lesser1\": 2,\n","    \"wave_lesser2\": 2,\n","    \"expire_k1\": 0.0,\n","    \"expire_k2\": 0.0,\n","    \"expire_tick\": \"None\",\n","    \"p2_box_k1\" : 0,\n","    \"p2_box_k2\" : 0,\n","    \"tp_gap\": 0.0,\n","    \"ep_gap\": -0.12,\n","    \"out_gap\": 0,\n","    \"decay_gap\": \"None\",\n","    \"c_ep_gap\": \"None\",\n","    \"t_out_gap\": \"None\",\n","    \"wb_tp_gap\": 0,\n","    \"wb_out_gap\": 0,\n","    \"bias_info_tick\": 30000\n","  },\n","  \"ep_set\": {\n","    \"entry_type\": \"LIMIT\",\n","    \"static_ep\": 1,\n","    \"point2\": {\n","      \"use_point2\": 0,\n","      \"entry_type\": \"MARKET\"\n","    }\n","  },\n","  \"tp_set\": {\n","    \"non_tp\": 0,\n","    \"static_tp\": 1,\n","    \"tp_onexec\": 0,\n","    \"decay_term\": 60,\n","    \"p_ranges\": \"[1]\",\n","    \"p_qty_ratio\": \"[1]\"\n","  },\n","  \"out_set\": {\n","    \"hl_out\": 1,\n","    \"static_out\": 1,\n","    \"out_onexec\": 0,\n","    \"tf_exit\": \"None\",\n","    \"rsi_exit\": 0\n","  },\n","  \"lvrg_set\": {\n","    \"leverage\": 2,\n","    \"static_lvrg\": 0,\n","    \"allow_float\": 0,\n","    \"target_pct\": 0.03,\n","    \"lvrg_rejection\": 0\n","  }\n","}\n","\n","config = EasyDict(param_dict)"]},{"cell_type":"markdown","source":["#### legacy"],"metadata":{"id":"MuD_2vY7TI_8"}},{"cell_type":"code","source":[",\n","      \"hc_itv\": 60,\n","      \"osc_band\": 20\n","      \n","      \"wick_score_list\": \"[]\",\n","      \"body_score_list\": \"[]\",\n","      \"score_itv_list\": \"[]\",,\n","\n","      \"wick_score_list\": \"[]\",\n","      \"body_score_list\": \"[]\",\n","      \"score_itv_list\": \"['T']\""],"metadata":{"id":"EKag94Y2TMCO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rLI8unIyroiC"},"source":["## run"]},{"cell_type":"code","execution_count":16,"metadata":{"id":"qBJfPsmJzVIr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1653017708844,"user_tz":-540,"elapsed":5,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"630670e5-d82f-44da-f082-df38b36786dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["\"5_45\" {\n"," \"point1\": {\n","  \"exp_itv\": \"5T\",\n","  \"tf_entry\": \"15T\",\n","  \"candle_pattern\": \"CDLMARUBOZU\",\n","  \"short_spread\": \"None\",\n","  \"long_spread\": \"None\",\n","  \"short_tr_thresh\": \"None\",\n","  \"long_tr_thresh\": \"None\",\n","  \"short_wick_ratio\": \"None\",\n","  \"long_wick_ratio\": \"None\",\n","  \"wick_itv\": \"5T\",\n","  \"cu_wrr_21\": \"None\",\n","  \"co_wrr_21\": \"None\",\n","  \"wrr_32\": 0.3,\n","  \"co_es\": \"None\",\n","  \"cu_es\": \"None\",\n","  \"crr\": \"None\",\n","  \"cppr\": \"None\",\n","  \"ppr\": \"None\",\n","  \"wbr\": \"None\",\n","  \"dbr\": \"None\",\n","  \"dbr2\": \"None\",\n","  \"brr\": \"None\",\n","  \"ir\": \"None\",\n","  \"abs_ratio\": \"None\"\n"," },\n"," \"point2\": {\n","  \"wrr_32\": 0.3\n"," },\n"," \"zone\": {\n","  \"use_zone\": 0,\n","  \"base_roll_period\": 50,\n","  \"degree_list\": \"[]\",\n","  \"dtk_itv\": \"5T\",\n","  \"dt_k\": \"None\",\n","  \"dc_period\": 135,\n","  \"use_dtk_line\": 0,\n","  \"zone_dt_k\": 0.4,\n","  \"zone_dc_period\": 135\n"," }\n","} {\n"," \"wave_itv1\": \"15T\",\n"," \"wave_period1\": 5,\n"," \"wave_itv2\": \"T\",\n"," \"wave_period2\": 20,\n"," \"wave_greater1\": 0,\n"," \"wave_greater2\": 0,\n"," \"wave_lesser1\": 2,\n"," \"wave_lesser2\": 2,\n"," \"expire_k1\": 0.0,\n"," \"expire_k2\": 0.0,\n"," \"expire_tick\": \"None\",\n"," \"p2_box_k1\": 0,\n"," \"p2_box_k2\": 0,\n"," \"tp_gap\": 0.0,\n"," \"ep_gap\": -0.12,\n"," \"out_gap\": 0,\n"," \"decay_gap\": \"None\",\n"," \"c_ep_gap\": \"None\",\n"," \"t_out_gap\": \"None\",\n"," \"wb_tp_gap\": 0,\n"," \"wb_out_gap\": 0,\n"," \"bias_info_tick\": 30000\n","} {\n"," \"entry_type\": \"LIMIT\",\n"," \"static_ep\": 1,\n"," \"point2\": {\n","  \"use_point2\": 0,\n","  \"entry_type\": \"MARKET\"\n"," }\n","} {\n"," \"non_tp\": 0,\n"," \"static_tp\": 1,\n"," \"tp_onexec\": 0,\n"," \"decay_term\": 60,\n"," \"p_ranges\": \"[1]\",\n"," \"p_qty_ratio\": \"[1]\"\n","} {\n"," \"hl_out\": 1,\n"," \"static_out\": 1,\n"," \"out_onexec\": 0,\n"," \"tf_exit\": \"None\",\n"," \"rsi_exit\": 0\n","} {\n"," \"leverage\": 2,\n"," \"static_lvrg\": 0,\n"," \"allow_float\": 0,\n"," \"target_pct\": 0.03,\n"," \"lvrg_rejection\": 0\n","} "]}],"source":["# funcs = [expire_v2, ep_loc_point2_v2, lvrg_set]  # expire for p1 & p2\n","funcs = [expiry_p1, expiry_p2, lvrg_set]     # expire for p1-only\n","# funcs = [expire_v0, ep_loc_point2_v2, lvrg_set]  # expire for v3\n","\n","id_idx_list = [0]  # ID_arr 에서 import 할 id_idx 선택\n","public_override = 1\n","utils_override = 1\n","config_override = 1\n","\n","# ------ config_list 와 같은 org_var 에 override 하는거 다시 생각하기 ------ #\n","ID_list = ID_arr[id_idx_list]\n","utils_list = utils_arr[id_idx_list]\n","config_list = config_arr[id_idx_list]\n","\n","if config_override or utils_override:\n","  assert len(config_list) == 1\n","  if config_override:    \n","    config_list[0] = config\n","    ID_list[0] = config.selection_id\n","  \n","config = config_list[0]  # base config = config_list[0]\n","tp_fee, out_fee = calc_tp_out_fee_v2(config)   # -> rev_pr 때문에 일단 이곳에도 선언함\n","\n","# ------- inversion set ------- #\n","inversion = 0\n","fdist_thresh = 1\n","# ------- plot param ------- #\n","show_detail = 0\n","# ------- temp param ------- #\n","allow_osc_touch = 0\n","rsi_gap = 5\n","\n","# ------- just printing config ------- #\n","_ = [print(json.dumps(config[key_], indent=1), end=' ') for key_ in ['selection_id', 'loc_set', 'tr_set', 'ep_set', 'tp_set', 'out_set', 'lvrg_set']] #  'trader_set',"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"afUV2b1jaggN","executionInfo":{"status":"ok","timestamp":1653025022435,"user_tz":-540,"elapsed":301,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# config.trader_set.start_datetime = \"2020-09-05 00:00:59.999\" #  \"2020-09-05 00:00:59.999\" # 2022-02-01 16:34:59.999000 2022-01-14 16:34:59.999000  \"2020-09-05 00:00:59.999\" \"2022-01-10 00:00:59.999\" \"2021-10-04 02:39:59.999000\"\n","config_list[0].tr_set.wave_itv1 = '15T'\n","config_list[0].tr_set.wave_period1 = 5\n","config_list[0].tr_set.wave_itv2 = '15T'\n","config_list[0].tr_set.wave_period2 = 5"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3896,"status":"ok","timestamp":1653017714732,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"WstWVNihCNH8","outputId":"f1059f90-4e5c-4513-de1c-5d93e826cc72"},"outputs":[{"output_type":"stream","name":"stdout","text":["public_indi elapsed time : 1.9776990413665771\n","make data_list elapsed time : 0.00018286705017089844\n"]}],"source":["# ------ slicing res_df ------ #\n","res_df = res_df_.loc[pd.to_datetime(config.trader_set.start_datetime):]\n","\n","np_timeidx = np.array([intmin_np(date_) for date_ in res_df.index.to_numpy()])\n","\n","# ------------ public_indi ------------ # - 딱히 반복될 이유가 없는 phase - annot. 달때, why 까지 적어주면 좋음\n","start_0 = time.time()\n","if public_override:\n","    res_df = public_indi(res_df, config_list[0], np_timeidx)  # 현재 대부분의 시간은 h_candle 에서 소비되고 있음\n","else:\n","    res_df = utils_public.public_indi(res_df, config_list[0], np_timeidx)\n","print(\"public_indi elapsed time :\", time.time() - start_0)\n","\n","# ------------ make data_list ------------ # - 반복될 이유가 없는 phase - public_indo 에 종속\n","start_0 = time.time()\n","ohlc_cols = ['open', 'high', 'low', 'close']\n","ohlc_list = [res_df[col_].to_numpy() for col_ in ohlc_cols]\n","print(\"make data_list elapsed time :\", time.time() - start_0)"]},{"cell_type":"markdown","metadata":{"id":"RqRF1eyZ0xBL"},"source":["### idep_plot"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"_iYcJk8nK8Yq","executionInfo":{"status":"ok","timestamp":1653017716460,"user_tz":-540,"elapsed":327,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------ edit utils config ------ #\n","# config_list[0].loc_set.point.candle_pattern = talib.get_function_groups()['Pattern Recognition'][51]   # \"None\" # 0.5 0.7\n","# config_list[0].pos_set.short_ban = 0\n","# config_list[0].tr_set.wave_lesser = 3\n","# config_list[0].tr_set.wave_greater1 = 0\n","# config_list[0].tr_set.wave_greater2 = 0\n","# config_list[0].tr_set.p1_period1 = 5\n","# config_list[0].tr_set.p1_period2 = 5\n","# # config_list[0].tr_set.p2_period1 = 20\n","# # config_list[0].tr_set.p2_period2 = 20\n","config_list[0].ep_set.entry_type = \"MARKET\" # \"LIMIT\" # \"MARKET\"\n","# config_list[0].tr_set.tp_gap = 0.5\n","# config_list[0].tr_set.ep_gap = -0.12 # -0.618 -0.23 -0.382 0.19 \n","# config_list[0].tr_set.out_gap = 0\n","# config_list[0].tr_set.wb_tp_gap = 0.5\n","# config_list[0].tr_set.wb_out_gap = -0.5\n","# config_list[0].tr_set.bias_info_tick = 300\n","# config_list[0].trader_set.limit_fee = 1e-10 # 1e-10  0.0002\n","# config_list[0].trader_set.market_fee = 1e-10 # 1e-10  0.0004\n","\n","# config_list[0].loc_set.point.short_wick_ratio = 0.2 # \"None\" # 2.5\n","# config_list[0].loc_set.point.long_wick_ratio = 0.2 # \"None\" # 2.5\n","# config_list[0].loc_set.point.crr = 0.5"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1653017717963,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"iI39YI_5GguK","outputId":"089d56a3-94fb-4842-c1fa-0e810808396b"},"outputs":[{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res1 == 1) : 97710\n","np.sum(long_open_res1 == 1) : 94890\n","np.sum(short_open_res2 == 1) : 42048\n","np.sum(long_open_res2 == 1) : 42240\n","reject update_hl\n","np.sum(short_open_res1 == 1) : 83130\n","np.sum(long_open_res1 == 1) : 76005\n","np.sum(short_open_res2 == 1) : 40427\n","np.sum(long_open_res2 == 1) : 40130\n","tf_entry\n","np.sum(short_open_res1 == 1) : 5542\n","np.sum(long_open_res1 == 1) : 5067\n","wave_mm\n","np.sum(short_open_res1 == 1) : 5537\n","np.sum(long_open_res1 == 1) : 5066\n","np.sum(short_open_res2 == 1) : 40425\n","np.sum(long_open_res2 == 1) : 40128\n","point validation\n","np.sum(short_open_res1 == 1) : 3904\n","np.sum(long_open_res1 == 1) : 3684\n"]},{"output_type":"stream","name":"stdout","text":["enlist_tr elapsed time : 0.23764944076538086\n"]}],"source":["if utils_override:   # 현재, utils_override 하는 경우 1개의 ID 만 허용함 \n","  # start_0 = time.time()\n","  # res_df = enlist_rtc(res_df, config_list[0], np_timeidx)\n","  # print(\"enlist_rtc elapsed time :\", time.time() - start_0)\n","  start_0 = time.time()\n","  res_df = enlist_tr(res_df, config_list[0], np_timeidx)    # 36995.0 -> 152766.0 # 4044 np.sum(long_open_res == 1) : 4325\n","  print(\"enlist_tr elapsed time :\", time.time() - start_0)\n","else:\n","    start_0 = time.time()\n","    for utils_, config_ in zip(utils_list, config_list):\n","        # res_df = utils_.enlist_rtc(res_df, config_, np_timeidx)\n","        res_df = utils_.enlist_tr(res_df, config_, np_timeidx)\n","    print(\"elapsed time :\", time.time() - start_0)"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"gfDSOGMd91rE","executionInfo":{"status":"ok","timestamp":1653017720400,"user_tz":-540,"elapsed":311,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["# ------ edit loc_set config ------ #\n","config_list[0].loc_set.point1.cu_wrr_21 = \"None\" # \"None\" 5 2.5\n","config_list[0].loc_set.point1.co_wrr_21 = \"None\" # \"None\" 5 2.5\n","config_list[0].loc_set.point1.wrr_32 = 0.3 # \"None\" 1 0.5 0.382 0.302\n","config_list[0].loc_set.point2.wrr_32 = 1 # \"None\" 1 0.5 0.382 0.302 0.25\n","config_list[0].loc_set.zone.hl_loc_pct = \"None\" # \"None\" 1 0.5\n","config_list[0].loc_set.point1.cu_es = \"None\" # \"None\" # -2\n","config_list[0].loc_set.point1.co_es = \"None\" # \"None\" # -3\n","# config_list[0].loc_set.point1.cppr = 0.5   # \"None\" # 0.5 0.7\n","# config_list[0].loc_set.point1.wbr = \"None\" # 0.7\n","# config_list[0].loc_set.point1.dbr = \"None\"   # 0.7\n","# config_list[0].loc_set.point1.dbr2 = \"None\"  # 0.7\n","# config_list[0].loc_set.point1.brr = \"None\"   # 0.8\n","# config_list[0].loc_set.point1.ir = \"None\" # \"None\" 0.8\n","# config_list[0].loc_set.point1.wick_score_list = \"[]\"\n","# config_list[0].loc_set.point1.score_itv_list = \"['H']\"\n","# # config_list[0].loc_set.point1.abs_ratio = \"None\"  # 0.7\n","config_list[0].loc_set.point1.short_tr_thresh = \"None\"  #  \"None\" 2 0.8 # # 0.7 # tr_thresh 엄청 민감함\n","config_list[0].loc_set.point1.long_tr_thresh = 1  #  \"None\" 2 0.8 ## 0.7\n","# config_list[0].loc_set.zone.use_zone = 0\n","# # config_list[0].loc_set.zone.base_roll_period = 60"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":2842,"status":"ok","timestamp":1653017724392,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"9DPgykxQ92mU","colab":{"base_uri":"https://localhost:8080/"},"outputId":"02772398-e0e7-492a-ecc2-3d5936e24422"},"outputs":[{"output_type":"stream","name":"stderr","text":["cu_wrr_32_ <= config.loc_set.point1.wrr_32 : 1.00000 0.25000 (0.0)\n","co_wrr_32_ <= config.loc_set.point1.wrr_32 : 1.68579 0.25000 (0.0)\n","cu_wrr_32_ <= config.loc_set.point2.wrr_32 : 0.54867 1.00000 (1.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.126532793045044\n"]},{"output_type":"stream","name":"stderr","text":["co_wrr_32_ <= config.loc_set.point2.wrr_32 : 1.00000 1.00000 (1.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.7251842021942139\n"]}],"source":["open_info_df1 = get_open_info_df_v2(ep_loc_p1_v3, res_df, np_timeidx, ID_list, config_list, id_idx_list, open_num=1)  # --> point * dur. 관련 (loc_set) param 에 종속 (open_info 가 변경되는게 아니라면, 재실행할 필요없음)\n","open_info_df2 = get_open_info_df_v2(ep_loc_p2_v3, res_df, np_timeidx, ID_list, config_list, id_idx_list, open_num=2)\n","open_info_df_list = [open_info_df1, open_info_df2]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KqVkg236t_f2"},"outputs":[],"source":["# ------ edit entry & exit (ep, tp, out, ..) config ------ #\n","# config_list[0].tr_set.expire_k = -0.5\n","# config_list[0].tr_set.expire_tick = \"None\"\n","# # # config_list[0].ep_set.point2.use_point2 = 1\n","# # # config_list[0].ep_set.point2.entry_type = \"LIMIT\"\n","# # # config_list[0].ep_set.point2.wick_score_list = str([])\n","# # # config_list[0].tp_set.static_tp = 1\n","# # # config_list[0].tp_set.non_tp = 0 # 0 1\n","config_list[0].tp_set.p_ranges = \"[1]\"\n","config_list[0].tp_set.p_qty_ratio = \"[1]\"\n","# config_list[0].tp_set.p_ranges = \"[0.2, 0.66, 1]\"\n","# config_list[0].tp_set.p_qty_ratio = \"[0.25, 0.25, 0.5]\"\n","# config_list[0].tp_set.p_ranges = \"[0.66, 1]\"\n","# config_list[0].tp_set.p_qty_ratio = \"[0.3, 0.7]\"\n","# # # config_list[0].out_set.hl_out = 1\n","# # # config_list[0].out_set.tf_exit = \"None\" # 15 \"None\"\n","config_list[0].lvrg_set.leverage = 1\n","config_list[0].lvrg_set.static_lvrg = 0\n","config_list[0].lvrg_set.target_pct = 0.03\n","# # config_list[0].lvrg_set.allow_float = 0\n","# config_list[0].lvrg_set.lvrg_rejection = 0"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3595,"status":"ok","timestamp":1653024483651,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"id":"HHq6cr9GPBot","outputId":"1051dd77-2d62-4b71-93b7-8b6f5937458a"},"outputs":[{"output_type":"stream","name":"stdout","text":["============ op_idx1 : 2594 BUY ======\n","op_idx1, op_idx2 : 2594 2598 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 2594 2658 BUY\n","exit_done = 1 break\n","============ op_idx1 : 4859 BUY ======\n","op_idx1, op_idx2 : 4859 4879 BUY\n","exit_done = 1 break\n","============ op_idx1 : 15374 SELL ======\n","op_idx1, op_idx2 : 15374 15418 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 15374 15494 SELL\n","expiry_p1 break\n","============ op_idx1 : 24599 SELL ======\n","op_idx1, op_idx2 : 24599 24676 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 24599 24767 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 24599 24877 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 24599 24896 SELL\n","exit_done = 1 break\n","============ op_idx1 : 29024 BUY ======\n","op_idx1, op_idx2 : 29024 29034 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 29024 29130 BUY\n","exit_done = 1 break\n","============ op_idx1 : 29519 SELL ======\n","op_idx1, op_idx2 : 29519 29542 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 29519 29605 SELL\n","expiry_p1 break\n","============ op_idx1 : 30539 BUY ======\n","op_idx1, op_idx2 : 30539 30580 BUY\n","expiry_p1 break\n","============ op_idx1 : 32894 SELL ======\n","op_idx1, op_idx2 : 32894 32909 SELL\n","exit_done = 1 break\n","============ op_idx1 : 33344 SELL ======\n","op_idx1, op_idx2 : 33344 33453 SELL\n","expiry_p1 break\n","============ op_idx1 : 33839 BUY ======\n","op_idx1, op_idx2 : 33839 33917 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 33839 34139 BUY\n","exit_done = 1 break\n","============ op_idx1 : 36419 BUY ======\n","op_idx1, op_idx2 : 36419 36458 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 36419 36707 BUY\n","expiry_p1 break\n","============ op_idx1 : 50624 BUY ======\n","op_idx1, op_idx2 : 50624 50631 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 50624 50680 BUY\n","exit_done = 1 break\n","============ op_idx1 : 51314 BUY ======\n","op_idx1, op_idx2 : 51314 51324 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 51314 51624 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 51314 54532 BUY\n","exit_done = 1 break\n","============ op_idx1 : 56864 BUY ======\n","op_idx1, op_idx2 : 56864 56906 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 56864 56988 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 56864 57404 BUY\n","exit_done = 1 break\n","============ op_idx1 : 58814 SELL ======\n","op_idx1, op_idx2 : 58814 58825 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 58814 58958 SELL\n","expiry_p1 break\n","============ op_idx1 : 60239 SELL ======\n","op_idx1, op_idx2 : 60239 60258 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 60327 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 62912 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 62974 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 63365 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 63881 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 60239 63975 SELL\n","expiry_p1 break\n","============ op_idx1 : 62114 SELL ======\n","op_idx1, op_idx2 : 62114 62220 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62114 62349 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62114 62434 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62114 62488 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62114 62630 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62114 62912 SELL\n","expiry_p1 break\n","============ op_idx1 : 62174 SELL ======\n","op_idx1, op_idx2 : 62174 62220 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62174 62349 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62174 62434 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62174 62488 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62174 62630 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62174 62912 SELL\n","expiry_p1 break\n","============ op_idx1 : 62204 SELL ======\n","op_idx1, op_idx2 : 62204 62220 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62204 62349 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62204 62434 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62204 62488 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62204 62630 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 62204 62912 SELL\n","expiry_p1 break\n","============ op_idx1 : 63164 SELL ======\n","op_idx1, op_idx2 : 63164 63185 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 63164 63365 SELL\n","expiry_p1 break\n","============ op_idx1 : 63629 BUY ======\n","op_idx1, op_idx2 : 63629 63722 BUY\n","exit_done = 1 break\n","============ op_idx1 : 67904 BUY ======\n","op_idx1, op_idx2 : 67904 67973 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 67904 68057 BUY\n","exit_done = 1 break\n","============ op_idx1 : 68999 BUY ======\n","op_idx1, op_idx2 : 68999 69050 BUY\n","exit_done = 1 break\n","============ op_idx1 : 70949 BUY ======\n","op_idx1, op_idx2 : 70949 70982 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 70949 71061 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 70949 71155 BUY\n","exit_done = 1 break\n","============ op_idx1 : 73814 BUY ======\n","op_idx1, op_idx2 : 73814 73971 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 73814 74068 BUY\n","expiry_p1 break\n","============ op_idx1 : 75119 SELL ======\n","op_idx1, op_idx2 : 75119 75123 SELL\n","p2_box continue\n","op_idx1, op_idx2 : 75119 75132 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 75119 75364 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 75119 75428 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 75119 75493 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 75119 76262 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 75119 76465 SELL\n","expiry_p1 break\n","============ op_idx1 : 76304 BUY ======\n","op_idx1, op_idx2 : 76304 76341 BUY\n","exit_done = 1 break\n","============ op_idx1 : 79364 BUY ======\n","op_idx1, op_idx2 : 79364 79373 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 79364 79451 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 79364 79737 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 79364 79819 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 79364 80121 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 79364 80215 BUY\n","expiry_p1 break\n","============ op_idx1 : 82364 SELL ======\n","op_idx1, op_idx2 : 82364 82375 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 82364 82490 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 82364 82611 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 82364 82679 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 82364 83937 SELL\n","expiry_p1 break\n","============ op_idx1 : 84464 SELL ======\n","op_idx1, op_idx2 : 84464 84486 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 84464 84541 SELL\n","exit_done = 1 break\n","============ op_idx1 : 84899 SELL ======\n","op_idx1, op_idx2 : 84899 84981 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 84899 85039 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 84899 85375 SELL\n","exit_done = 1 break\n","============ op_idx1 : 88184 BUY ======\n","op_idx1, op_idx2 : 88184 88198 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 88184 88971 BUY\n","exit_done = 1 break\n","============ op_idx1 : 90524 BUY ======\n","op_idx1, op_idx2 : 90524 90587 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 90524 90728 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 90524 90830 BUY\n","exit_done = 1 break\n","============ op_idx1 : 101729 SELL ======\n","op_idx1, op_idx2 : 101729 101799 SELL\n","expiry_p1 break\n","============ op_idx1 : 108224 BUY ======\n","op_idx1, op_idx2 : 108224 108431 BUY\n","exit_done = 1 break\n","============ op_idx1 : 110309 BUY ======\n","op_idx1, op_idx2 : 110309 110428 BUY\n","expiry_p1 break\n","============ op_idx1 : 111554 BUY ======\n","op_idx1, op_idx2 : 111554 111651 BUY\n","expiry_p1 break\n","============ op_idx1 : 114134 BUY ======\n","op_idx1, op_idx2 : 114134 114160 BUY\n","exit_done = 1 break\n","============ op_idx1 : 114689 BUY ======\n","op_idx1, op_idx2 : 114689 114730 BUY\n","expiry_p1 break\n","============ op_idx1 : 121259 BUY ======\n","op_idx1, op_idx2 : 121259 121265 BUY\n","exit_done = 1 break\n","============ op_idx1 : 124589 BUY ======\n","op_idx1, op_idx2 : 124589 124617 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 124589 124805 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 124589 124919 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 124589 125029 BUY\n","exit_done = 1 break\n","============ op_idx1 : 134174 BUY ======\n","op_idx1, op_idx2 : 134174 134233 BUY\n","exit_done = 1 break\n","============ op_idx1 : 134714 SELL ======\n","op_idx1, op_idx2 : 134714 134739 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 134714 134870 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 134714 134987 SELL\n","exit_done = 1 break\n","============ op_idx1 : 140384 SELL ======\n","op_idx1, op_idx2 : 140384 140417 SELL\n","expiry_p1 break\n","============ op_idx1 : 141929 BUY ======\n","op_idx1, op_idx2 : 141929 141988 BUY\n","expiry_p1 break\n","============ op_idx1 : 143204 SELL ======\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 143204 143253 SELL\n","expiry_p1 break\n","============ op_idx1 : 143789 BUY ======\n","op_idx1, op_idx2 : 143789 143842 BUY\n","expiry_p1 break\n","============ op_idx1 : 144179 BUY ======\n","op_idx1, op_idx2 : 144179 144237 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 144179 144522 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 144179 144625 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 144179 145247 BUY\n","expiry_p1 break\n","============ op_idx1 : 158669 BUY ======\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 158669 158924 BUY\n","expiry_p1 break\n","============ op_idx1 : 158744 BUY ======\n","op_idx1, op_idx2 : 158744 158924 BUY\n","expiry_p1 break\n","============ op_idx1 : 161144 BUY ======\n","op_idx1, op_idx2 : 161144 161203 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 161144 161306 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 161144 161385 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 161144 161444 BUY\n","exit_done = 1 break\n","============ op_idx1 : 164384 SELL ======\n","op_idx1, op_idx2 : 164384 164491 SELL\n","exit_done = 1 break\n","============ op_idx1 : 168539 BUY ======\n","op_idx1, op_idx2 : 168539 168621 BUY\n","expiry_p1 break\n","============ op_idx1 : 170234 BUY ======\n","op_idx1, op_idx2 : 170234 170238 BUY\n","exit_done = 1 break\n","============ op_idx1 : 171794 BUY ======\n","op_idx1, op_idx2 : 171794 171819 BUY\n","expiry_p1 break\n","============ op_idx1 : 174299 BUY ======\n","op_idx1, op_idx2 : 174299 174350 BUY\n","expiry_p1 break\n","============ op_idx1 : 176654 SELL ======\n","op_idx1, op_idx2 : 176654 176704 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 176766 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 176842 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 176989 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177176 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177249 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177348 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177456 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177644 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 176654 177957 SELL\n","expiry_p1 break\n","============ op_idx1 : 178799 BUY ======\n","op_idx1, op_idx2 : 178799 178930 BUY\n","expiry_p1 break\n","============ op_idx1 : 181079 BUY ======\n","op_idx1, op_idx2 : 181079 181092 BUY\n","exit_done = 1 break\n","============ op_idx1 : 188429 BUY ======\n","op_idx1, op_idx2 : 188429 188527 BUY\n","exit_done = 1 break\n","============ op_idx1 : 190274 BUY ======\n","op_idx1, op_idx2 : 190274 190362 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 190274 190521 BUY\n","exit_done = 1 break\n","============ op_idx1 : 195584 BUY ======\n","op_idx1, op_idx2 : 195584 195648 BUY\n","exit_done = 1 break\n","============ op_idx1 : 196694 BUY ======\n","op_idx1, op_idx2 : 196694 196727 BUY\n","exit_done = 1 break\n","============ op_idx1 : 201779 BUY ======\n","op_idx1, op_idx2 : 201779 201785 BUY\n","exit_done = 1 break\n","============ op_idx1 : 204044 BUY ======\n","op_idx1, op_idx2 : 204044 204084 BUY\n","exit_done = 1 break\n","============ op_idx1 : 208199 SELL ======\n","op_idx1, op_idx2 : 208199 208265 SELL\n","expiry_p1 break\n","============ op_idx1 : 209684 BUY ======\n","op_idx1, op_idx2 : 209684 209734 BUY\n","expiry_p1 break\n","============ op_idx1 : 210344 BUY ======\n","op_idx1, op_idx2 : 210344 210375 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 210344 210498 BUY\n","exit_done = 1 break\n","============ op_idx1 : 212654 SELL ======\n","op_idx1, op_idx2 : 212654 212699 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 212654 213118 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 212654 213224 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 212654 213397 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 212654 213522 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 212654 213639 SELL\n","exit_done = 1 break\n","============ op_idx1 : 224324 BUY ======\n","op_idx1, op_idx2 : 224324 224341 BUY\n","exit_done = 1 break\n","============ op_idx1 : 226409 SELL ======\n","op_idx1, op_idx2 : 226409 226415 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 226409 226484 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 226409 226660 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 226409 227163 SELL\n","expiry_p1 break\n","============ op_idx1 : 229199 BUY ======\n","op_idx1, op_idx2 : 229199 229261 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 229199 229442 BUY\n","expiry_p1 break\n","============ op_idx1 : 232304 BUY ======\n","op_idx1, op_idx2 : 232304 232348 BUY\n","expiry_p1 break\n","============ op_idx1 : 237029 BUY ======\n","op_idx1, op_idx2 : 237029 237035 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 237029 237116 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 237029 237417 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 237029 237460 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 237029 237599 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 237029 237748 BUY\n","expiry_p1 break\n","============ op_idx1 : 246389 BUY ======\n","op_idx1, op_idx2 : 246389 246397 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 246389 246578 BUY\n","expiry_p1 break\n","============ op_idx1 : 249794 BUY ======\n","op_idx1, op_idx2 : 249794 249943 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 249794 250282 BUY\n","exit_done = 1 break\n","============ op_idx1 : 252734 BUY ======\n","op_idx1, op_idx2 : 252734 252781 BUY\n","exit_done = 1 break\n","============ op_idx1 : 253169 SELL ======\n","op_idx1, op_idx2 : 253169 253185 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 253169 253218 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 253169 253273 SELL\n","exit_done = 1 break\n","============ op_idx1 : 255359 BUY ======\n","op_idx1, op_idx2 : 255359 255386 BUY\n","expiry_p1 break\n","============ op_idx1 : 257969 SELL ======\n","op_idx1, op_idx2 : 257969 258028 SELL\n","expiry_p1 break\n","============ op_idx1 : 261044 SELL ======\n","op_idx1, op_idx2 : 261044 261065 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 261044 261273 SELL\n","expiry_p1 break\n","============ op_idx1 : 263174 BUY ======\n","op_idx1, op_idx2 : 263174 263246 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 263174 263308 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 263174 263537 BUY\n","expiry_p1 break\n","============ op_idx1 : 266069 SELL ======\n","op_idx1, op_idx2 : 266069 266087 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266164 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266290 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266366 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266412 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266485 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266069 266731 SELL\n","expiry_p1 break\n","============ op_idx1 : 266114 SELL ======\n","op_idx1, op_idx2 : 266114 266164 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266114 266290 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266114 266366 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266114 266412 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266114 266485 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 266114 266731 SELL\n","expiry_p1 break\n","============ op_idx1 : 268694 SELL ======\n","op_idx1, op_idx2 : 268694 268753 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 268694 268818 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 268694 268981 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 268694 269254 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 268694 269502 SELL\n","expiry_p1 break\n","============ op_idx1 : 278324 BUY ======\n","op_idx1, op_idx2 : 278324 278378 BUY\n","exit_done = 1 break\n","============ op_idx1 : 279734 BUY ======\n","op_idx1, op_idx2 : 279734 279779 BUY\n","exit_done = 1 break\n","============ op_idx1 : 283259 SELL ======\n","op_idx1, op_idx2 : 283259 283309 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 283259 283406 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 283259 283552 SELL\n","expiry_p1 break\n","============ op_idx1 : 284639 SELL ======\n","op_idx1, op_idx2 : 284639 284649 SELL\n","exit_done = 1 break\n","============ op_idx1 : 285794 SELL ======\n","op_idx1, op_idx2 : 285794 285835 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 285794 285960 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 285794 286050 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 285794 286160 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 285794 286311 SELL\n","exit_done = 1 break\n","============ op_idx1 : 287024 SELL ======\n","op_idx1, op_idx2 : 287024 287033 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 287024 287083 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 287024 287246 SELL\n","exit_done = 1 break\n","============ op_idx1 : 289979 SELL ======\n","op_idx1, op_idx2 : 289979 289997 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 290383 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 290438 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 290541 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 290750 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 291491 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 291992 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292311 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292393 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292481 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292691 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292796 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 292935 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 294153 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 294221 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 289979 296386 SELL\n","expiry_p1 break\n","============ op_idx1 : 290444 BUY ======\n","op_idx1, op_idx2 : 290444 290496 BUY\n","expiry_p1 break\n","============ op_idx1 : 293999 BUY ======\n","op_idx1, op_idx2 : 293999 294020 BUY\n","exit_done = 1 break\n","============ op_idx1 : 299654 BUY ======\n","op_idx1, op_idx2 : 299654 299663 BUY\n","exit_done = 1 break\n","============ op_idx1 : 309614 BUY ======\n","op_idx1, op_idx2 : 309614 309694 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 309614 309919 BUY\n","exit_done = 1 break\n","============ op_idx1 : 310319 BUY ======\n","op_idx1, op_idx2 : 310319 310333 BUY\n","exit_done = 1 break\n","============ op_idx1 : 313439 BUY ======\n","op_idx1, op_idx2 : 313439 313529 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 313439 313724 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 313439 313780 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 313439 313830 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 313439 314137 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 313439 314389 BUY\n","exit_done = 1 break\n","============ op_idx1 : 322769 BUY ======\n","op_idx1, op_idx2 : 322769 322812 BUY\n","exit_done = 1 break\n","============ op_idx1 : 324119 SELL ======\n","op_idx1, op_idx2 : 324119 324134 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 324119 324160 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 324119 324284 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 324119 324392 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 324119 324422 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 324119 324474 SELL\n","exit_done = 1 break\n","============ op_idx1 : 325634 BUY ======\n","op_idx1, op_idx2 : 325634 325642 BUY\n","exit_done = 1 break\n","============ op_idx1 : 328184 BUY ======\n","op_idx1, op_idx2 : 328184 328217 BUY\n","exit_done = 1 break\n","============ op_idx1 : 329939 BUY ======\n","op_idx1, op_idx2 : 329939 329966 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 329939 330048 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 329939 330130 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 329939 330165 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 329939 330297 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 329939 330402 BUY\n","exit_done = 1 break\n","============ op_idx1 : 330764 BUY ======\n","op_idx1, op_idx2 : 330764 330773 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 330764 330913 BUY\n","expiry_p1 break\n","============ op_idx1 : 331154 BUY ======\n","op_idx1, op_idx2 : 331154 331215 BUY\n","expiry_p1 break\n","============ op_idx1 : 332504 BUY ======\n","op_idx1, op_idx2 : 332504 332511 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 332504 332718 BUY\n","expiry_p1 break\n","============ op_idx1 : 332789 BUY ======\n","op_idx1, op_idx2 : 332789 332822 BUY\n","exit_done = 1 break\n","============ op_idx1 : 341024 BUY ======\n","op_idx1, op_idx2 : 341024 341054 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 341024 341103 BUY\n","exit_done = 1 break\n","============ op_idx1 : 344759 BUY ======\n","op_idx1, op_idx2 : 344759 344848 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 344759 345009 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 344759 345264 BUY\n","exit_done = 1 break\n","============ op_idx1 : 348014 BUY ======\n","op_idx1, op_idx2 : 348014 348028 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 348014 348161 BUY\n","exit_done = 1 break\n","============ op_idx1 : 350339 BUY ======\n","op_idx1, op_idx2 : 350339 350413 BUY\n","expiry_p1 break\n","============ op_idx1 : 353534 BUY ======\n","op_idx1, op_idx2 : 353534 353549 BUY\n","exit_done = 1 break\n","============ op_idx1 : 356729 BUY ======\n","op_idx1, op_idx2 : 356729 356781 BUY\n","expiry_p1 break\n","============ op_idx1 : 358994 BUY ======\n","op_idx1, op_idx2 : 358994 359003 BUY\n","exit_done = 1 break\n","============ op_idx1 : 362744 BUY ======\n","op_idx1, op_idx2 : 362744 362751 BUY\n","exit_done = 1 break\n","============ op_idx1 : 366344 BUY ======\n","op_idx1, op_idx2 : 366344 366397 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 366344 366586 BUY\n","expiry_p1 break\n","============ op_idx1 : 366974 BUY ======\n","op_idx1, op_idx2 : 366974 367040 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 366974 367302 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 366974 367383 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 366974 369403 BUY\n","expiry_p1 break\n","============ op_idx1 : 369674 SELL ======\n","op_idx1, op_idx2 : 369674 369694 SELL\n","exit_done = 1 break\n","============ op_idx1 : 373934 SELL ======\n","op_idx1, op_idx2 : 373934 373949 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 373934 374069 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 373934 374214 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 373934 374367 SELL\n","expiry_p1 break\n","============ op_idx1 : 374294 BUY ======\n","op_idx1, op_idx2 : 374294 374329 BUY\n","expiry_p1 break\n","============ op_idx1 : 374669 SELL ======\n","op_idx1, op_idx2 : 374669 374683 SELL\n","exit_done = 1 break\n","============ op_idx1 : 376469 BUY ======\n","op_idx1, op_idx2 : 376469 376504 BUY\n","exit_done = 1 break\n","============ op_idx1 : 381014 SELL ======\n","op_idx1, op_idx2 : 381014 381086 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 381014 381160 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 381014 381301 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 381014 381454 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 381014 381559 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 381014 381651 SELL\n","exit_done = 1 break\n","============ op_idx1 : 391484 BUY ======\n","op_idx1, op_idx2 : 391484 391583 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 391484 391643 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 391484 392446 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 391484 392595 BUY\n","expiry_p1 break\n","============ op_idx1 : 393839 BUY ======\n","op_idx1, op_idx2 : 393839 393860 BUY\n","expiry_p1 break\n","============ op_idx1 : 394634 SELL ======\n","op_idx1, op_idx2 : 394634 394656 SELL\n","exit_done = 1 break\n","============ op_idx1 : 396779 BUY ======\n","op_idx1, op_idx2 : 396779 396807 BUY\n","expiry_p1 break\n","============ op_idx1 : 404684 BUY ======\n","op_idx1, op_idx2 : 404684 404712 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 404742 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 405160 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 405267 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 405425 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 405524 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 404684 405614 BUY\n","exit_done = 1 break\n","============ op_idx1 : 410324 SELL ======\n","op_idx1, op_idx2 : 410324 410356 SELL\n","exit_done = 1 break\n","============ op_idx1 : 411314 BUY ======\n","op_idx1, op_idx2 : 411314 411415 BUY\n","expiry_p1 break\n","============ op_idx1 : 412094 SELL ======\n","op_idx1, op_idx2 : 412094 412095 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 412094 412190 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 412094 412398 SELL\n","exit_done = 1 break\n","============ op_idx1 : 413759 BUY ======\n","op_idx1, op_idx2 : 413759 413771 BUY\n","exit_done = 1 break\n","============ op_idx1 : 427499 SELL ======\n","op_idx1, op_idx2 : 427499 427515 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 427499 427555 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 427499 427626 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 427499 427675 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 427499 427795 SELL\n","expiry_p1 break\n","============ op_idx1 : 431144 BUY ======\n","op_idx1, op_idx2 : 431144 431160 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 431144 431294 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 431144 431372 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 431144 431616 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 431144 431714 BUY\n","expiry_p1 break\n","============ op_idx1 : 432479 BUY ======\n","op_idx1, op_idx2 : 432479 432568 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 432479 432700 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 432479 432815 BUY\n","expiry_p1 break\n","============ op_idx1 : 433559 BUY ======\n","op_idx1, op_idx2 : 433559 433581 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 433559 433678 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 433559 433791 BUY\n","exit_done = 1 break\n","============ op_idx1 : 434699 BUY ======\n","op_idx1, op_idx2 : 434699 434724 BUY\n","expiry_p1 break\n","============ op_idx1 : 443624 BUY ======\n","op_idx1, op_idx2 : 443624 443627 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 443624 443705 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 443624 443739 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 443624 443793 BUY\n","exit_done = 1 break\n","============ op_idx1 : 444464 SELL ======\n","op_idx1, op_idx2 : 444464 444515 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 444464 444642 SELL\n","exit_done = 1 break\n","============ op_idx1 : 447734 SELL ======\n","op_idx1, op_idx2 : 447734 447770 SELL\n","exit_done = 1 break\n","============ op_idx1 : 449624 SELL ======\n","op_idx1, op_idx2 : 449624 449635 SELL\n","p2_box continue\n","op_idx1, op_idx2 : 449624 449646 SELL\n","p2_box continue\n","op_idx1, op_idx2 : 449624 449672 SELL\n","exit_done = 1 break\n","============ op_idx1 : 453779 BUY ======\n","op_idx1, op_idx2 : 453779 453790 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 453824 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 453910 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 454021 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 454214 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 454314 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 454790 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453779 454824 BUY\n","expiry_p1 break\n","============ op_idx1 : 453809 BUY ======\n","op_idx1, op_idx2 : 453809 453824 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 453910 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 454021 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 454214 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 454314 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 454790 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 453809 454824 BUY\n","expiry_p1 break\n","============ op_idx1 : 454049 SELL ======\n","op_idx1, op_idx2 : 454049 454086 SELL\n","expiry_p1 break\n","============ op_idx1 : 457949 SELL ======\n","op_idx1, op_idx2 : 457949 457971 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 457949 458564 SELL\n","expiry_p1 break\n","============ op_idx1 : 458834 SELL ======\n","op_idx1, op_idx2 : 458834 458919 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 458834 459451 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 458834 460230 SELL\n","expiry_p1 break\n","============ op_idx1 : 462479 BUY ======\n","op_idx1, op_idx2 : 462479 462482 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 462479 462595 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 462479 462725 BUY\n","exit_done = 1 break\n","============ op_idx1 : 477074 BUY ======\n","op_idx1, op_idx2 : 477074 477209 BUY\n","expiry_p1 break\n","============ op_idx1 : 477224 SELL ======\n","op_idx1, op_idx2 : 477224 477252 SELL\n","expiry_p1 break\n","============ op_idx1 : 482474 BUY ======\n","op_idx1, op_idx2 : 482474 482489 BUY\n","exit_done = 1 break\n","============ op_idx1 : 484244 BUY ======\n","op_idx1, op_idx2 : 484244 484298 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 484244 484456 BUY\n","exit_done = 1 break\n","============ op_idx1 : 487454 SELL ======\n","op_idx1, op_idx2 : 487454 487463 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 487454 487537 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 487454 487662 SELL\n","expiry_p1 break\n","============ op_idx1 : 489764 SELL ======\n","op_idx1, op_idx2 : 489764 489813 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 489764 490029 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 489764 490563 SELL\n","expiry_p1 break\n","============ op_idx1 : 496619 SELL ======\n","op_idx1, op_idx2 : 496619 496676 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 496619 496820 SELL\n","exit_done = 1 break\n","============ op_idx1 : 499889 SELL ======\n","op_idx1, op_idx2 : 499889 499919 SELL\n","exit_done = 1 break\n","============ op_idx1 : 500174 SELL ======\n","op_idx1, op_idx2 : 500174 500196 SELL\n","exit_done = 1 break\n","============ op_idx1 : 501164 BUY ======\n","op_idx1, op_idx2 : 501164 501192 BUY\n","expiry_p1 break\n","============ op_idx1 : 510029 SELL ======\n","op_idx1, op_idx2 : 510029 510115 SELL\n","exit_done = 1 break\n","============ op_idx1 : 512399 SELL ======\n","op_idx1, op_idx2 : 512399 512526 SELL\n","expiry_p1 break\n","============ op_idx1 : 519719 BUY ======\n","op_idx1, op_idx2 : 519719 519745 BUY\n","expiry_p1 break\n","============ op_idx1 : 523949 BUY ======\n","op_idx1, op_idx2 : 523949 523989 BUY\n","exit_done = 1 break\n","============ op_idx1 : 524564 SELL ======\n","op_idx1, op_idx2 : 524564 524568 SELL\n","p2_box continue\n","op_idx1, op_idx2 : 524564 524646 SELL\n","expiry_p1 break\n","============ op_idx1 : 526094 BUY ======\n","op_idx1, op_idx2 : 526094 526149 BUY\n","exit_done = 1 break\n","============ op_idx1 : 529754 BUY ======\n","op_idx1, op_idx2 : 529754 529813 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 529754 529985 BUY\n","expiry_p1 break\n","============ op_idx1 : 532859 BUY ======\n","op_idx1, op_idx2 : 532859 532873 BUY\n","exit_done = 1 break\n","============ op_idx1 : 538034 SELL ======\n","op_idx1, op_idx2 : 538034 538036 SELL\n","exit_done = 1 break\n","============ op_idx1 : 542354 BUY ======\n","op_idx1, op_idx2 : 542354 542364 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 542354 542527 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 542354 542642 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 542354 542835 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 542354 542886 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 542354 543320 BUY\n","expiry_p1 break\n","============ op_idx1 : 546224 SELL ======\n","op_idx1, op_idx2 : 546224 546242 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 546224 546290 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 546224 546335 SELL\n","exit_done = 1 break\n","============ op_idx1 : 547109 SELL ======\n","op_idx1, op_idx2 : 547109 547222 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 547109 547282 SELL\n","exit_done = 1 break\n","============ op_idx1 : 548654 BUY ======\n","op_idx1, op_idx2 : 548654 548697 BUY\n","expiry_p1 break\n","============ op_idx1 : 551159 BUY ======\n","op_idx1, op_idx2 : 551159 551167 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 551159 551226 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 551159 551430 BUY\n","expiry_p1 break\n","============ op_idx1 : 554264 SELL ======\n","op_idx1, op_idx2 : 554264 554428 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 554843 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 557022 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 557311 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 557371 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 557678 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 554264 557777 SELL\n","expiry_p1 break\n","============ op_idx1 : 560924 BUY ======\n","op_idx1, op_idx2 : 560924 560997 BUY\n","expiry_p1 break\n","============ op_idx1 : 562034 SELL ======\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 562034 562091 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 562034 562285 SELL\n","expiry_p1 break\n","============ op_idx1 : 562679 BUY ======\n","op_idx1, op_idx2 : 562679 562709 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 562679 562846 BUY\n","exit_done = 1 break\n","============ op_idx1 : 564434 BUY ======\n","op_idx1, op_idx2 : 564434 564441 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 564434 564517 BUY\n","exit_done = 1 break\n","============ op_idx1 : 564824 BUY ======\n","op_idx1, op_idx2 : 564824 564912 BUY\n","expiry_p1 break\n","============ op_idx1 : 569084 BUY ======\n","op_idx1, op_idx2 : 569084 569201 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 569084 569338 BUY\n","exit_done = 1 break\n","============ op_idx1 : 571439 SELL ======\n","op_idx1, op_idx2 : 571439 571511 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 571439 571645 SELL\n","expiry_p1 break\n","============ op_idx1 : 578594 BUY ======\n","op_idx1, op_idx2 : 578594 578602 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 578594 578701 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 578594 579241 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 578594 579659 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 578594 580071 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 578594 580299 BUY\n","exit_done = 1 break\n","============ op_idx1 : 584354 SELL ======\n","op_idx1, op_idx2 : 584354 584382 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 584354 584452 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 584354 584508 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 584354 584626 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 584354 584808 SELL\n","expiry_p1 break\n","============ op_idx1 : 589889 BUY ======\n","op_idx1, op_idx2 : 589889 590000 BUY\n","exit_done = 1 break\n","============ op_idx1 : 590609 BUY ======\n","op_idx1, op_idx2 : 590609 590617 BUY\n","exit_done = 1 break\n","============ op_idx1 : 594959 SELL ======\n","op_idx1, op_idx2 : 594959 595055 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 595350 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 595418 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 595483 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 595556 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 596080 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 596289 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 596636 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 594959 596689 SELL\n","expiry_p1 break\n","============ op_idx1 : 596084 BUY ======\n","op_idx1, op_idx2 : 596084 596087 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 596084 596121 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 596084 596159 BUY\n","exit_done = 1 break\n","============ op_idx1 : 598079 BUY ======\n","op_idx1, op_idx2 : 598079 598124 BUY\n","exit_done = 1 break\n","============ op_idx1 : 605624 SELL ======\n","op_idx1, op_idx2 : 605624 605721 SELL\n","expiry_p1 break\n","============ op_idx1 : 606899 BUY ======\n","op_idx1, op_idx2 : 606899 606938 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 606899 607142 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 606899 607225 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 606899 607366 BUY\n","expiry_p1 break\n","============ op_idx1 : 624269 BUY ======\n","op_idx1, op_idx2 : 624269 624309 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 624269 624374 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 624269 624527 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 624269 624544 BUY\n","expiry_p1 break\n","============ op_idx1 : 625424 BUY ======\n","op_idx1, op_idx2 : 625424 625487 BUY\n","exit_done = 1 break\n","============ op_idx1 : 634559 BUY ======\n","op_idx1, op_idx2 : 634559 634672 BUY\n","expiry_p1 break\n","============ op_idx1 : 639809 SELL ======\n","op_idx1, op_idx2 : 639809 639861 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639809 639957 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639809 640017 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639809 640132 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639809 640597 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639809 640851 SELL\n","expiry_p1 break\n","============ op_idx1 : 639854 SELL ======\n","op_idx1, op_idx2 : 639854 639861 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639854 639957 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639854 640017 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639854 640132 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639854 640597 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 639854 640851 SELL\n","expiry_p1 break\n","============ op_idx1 : 645014 SELL ======\n","op_idx1, op_idx2 : 645014 645026 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 645157 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 645524 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 645913 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 646243 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 648658 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 649453 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645014 649632 SELL\n","expiry_p1 break\n","============ op_idx1 : 645074 SELL ======\n","op_idx1, op_idx2 : 645074 645157 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 645524 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 645913 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 646243 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 648658 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 649453 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 645074 649632 SELL\n","expiry_p1 break\n","============ op_idx1 : 653249 BUY ======\n","op_idx1, op_idx2 : 653249 653315 BUY\n","expiry_p1 break\n","============ op_idx1 : 655694 BUY ======\n","op_idx1, op_idx2 : 655694 655745 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 655694 655838 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 655694 656115 BUY\n","expiry_p1 break\n","============ op_idx1 : 656459 BUY ======\n","op_idx1, op_idx2 : 656459 656508 BUY\n","exit_done = 1 break\n","============ op_idx1 : 657674 BUY ======\n","op_idx1, op_idx2 : 657674 657689 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 657674 657780 BUY\n","exit_done = 1 break\n","============ op_idx1 : 660044 BUY ======\n","op_idx1, op_idx2 : 660044 660071 BUY\n","exit_done = 1 break\n","============ op_idx1 : 663254 SELL ======\n","op_idx1, op_idx2 : 663254 663281 SELL\n","exit_done = 1 break\n","============ op_idx1 : 663809 SELL ======\n","op_idx1, op_idx2 : 663809 663849 SELL\n","expiry_p1 break\n","============ op_idx1 : 665504 SELL ======\n","op_idx1, op_idx2 : 665504 665542 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 665504 665617 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 665504 665664 SELL\n","exit_done = 1 break\n","============ op_idx1 : 668939 SELL ======\n","op_idx1, op_idx2 : 668939 669020 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 668939 669123 SELL\n","exit_done = 1 break\n","============ op_idx1 : 672164 BUY ======\n","p2_box continue\n","op_idx1, op_idx2 : 672164 672244 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 672164 672412 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 672164 672583 BUY\n","expiry_p1 break\n","============ op_idx1 : 684419 BUY ======\n","op_idx1, op_idx2 : 684419 684432 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 684554 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 684804 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 684997 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 685302 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 685487 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 685803 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 685972 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 687691 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 690546 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684419 690625 BUY\n","expiry_p1 break\n","============ op_idx1 : 684539 BUY ======\n","op_idx1, op_idx2 : 684539 684554 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 684804 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 684997 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 685302 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 685487 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 685803 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 685972 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 687691 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 690546 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 684539 690625 BUY\n","expiry_p1 break\n","============ op_idx1 : 692759 BUY ======\n","op_idx1, op_idx2 : 692759 692775 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 692759 692943 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 692759 693041 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 692759 693194 BUY\n","expiry_p1 break\n","============ op_idx1 : 694979 BUY ======\n","op_idx1, op_idx2 : 694979 695019 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 694979 695186 BUY\n","expiry_p1 break\n","============ op_idx1 : 704834 SELL ======\n","op_idx1, op_idx2 : 704834 704848 SELL\n","exit_done = 1 break\n","============ op_idx1 : 709379 BUY ======\n","op_idx1, op_idx2 : 709379 709426 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 709379 709489 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 709379 709571 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 709379 709856 BUY\n","expiry_p1 break\n","============ op_idx1 : 711629 BUY ======\n","op_idx1, op_idx2 : 711629 711672 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 711629 712421 BUY\n","exit_done = 1 break\n","============ op_idx1 : 712904 BUY ======\n","op_idx1, op_idx2 : 712904 712930 BUY\n","exit_done = 1 break\n","============ op_idx1 : 714359 SELL ======\n","op_idx1, op_idx2 : 714359 714398 SELL\n","expiry_p1 break\n","============ op_idx1 : 715874 BUY ======\n","op_idx1, op_idx2 : 715874 715992 BUY\n","expiry_p1 break\n","============ op_idx1 : 717329 BUY ======\n","op_idx1, op_idx2 : 717329 717346 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 717415 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 717571 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 717706 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 717879 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 718421 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 717329 718550 BUY\n","exit_done = 1 break\n","============ op_idx1 : 722324 SELL ======\n","op_idx1, op_idx2 : 722324 722356 SELL\n","exit_done = 1 break\n","============ op_idx1 : 725159 SELL ======\n","op_idx1, op_idx2 : 725159 725170 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 725159 725399 SELL\n","exit_done = 1 break\n","============ op_idx1 : 729434 SELL ======\n","op_idx1, op_idx2 : 729434 729501 SELL\n","expiry_p1 break\n","============ op_idx1 : 730079 SELL ======\n","op_idx1, op_idx2 : 730079 730225 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730079 730300 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730079 730383 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730079 730520 SELL\n","expiry_p1 break\n","============ op_idx1 : 730514 BUY ======\n","op_idx1, op_idx2 : 730514 730592 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730514 730760 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730514 730948 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 730514 731134 BUY\n","exit_done = 1 break\n","============ op_idx1 : 731819 BUY ======\n","op_idx1, op_idx2 : 731819 732036 BUY\n","exit_done = 1 break\n","============ op_idx1 : 733544 SELL ======\n","op_idx1, op_idx2 : 733544 733550 SELL\n","exit_done = 1 break\n","============ op_idx1 : 734834 SELL ======\n","op_idx1, op_idx2 : 734834 734917 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 734834 734997 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 734834 735214 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 734834 735380 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 734834 736006 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 734834 736276 SELL\n","expiry_p1 break\n","============ op_idx1 : 743279 SELL ======\n","op_idx1, op_idx2 : 743279 743361 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 743279 743464 SELL\n","expiry_p1 break\n","============ op_idx1 : 749759 BUY ======\n","op_idx1, op_idx2 : 749759 749779 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 749759 749832 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 749759 749895 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 749759 749950 BUY\n","exit_done = 1 break\n","============ op_idx1 : 751454 SELL ======\n","op_idx1, op_idx2 : 751454 751500 SELL\n","exit_done = 1 break\n","============ op_idx1 : 752159 BUY ======\n","op_idx1, op_idx2 : 752159 752202 BUY\n","expiry_p1 break\n","============ op_idx1 : 752444 SELL ======\n","op_idx1, op_idx2 : 752444 752501 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 752444 752561 SELL\n","expiry_p1 break\n","============ op_idx1 : 753524 BUY ======\n","op_idx1, op_idx2 : 753524 753528 BUY\n","p2_box continue\n","op_idx1, op_idx2 : 753524 753531 BUY\n","p2_box continue\n","op_idx1, op_idx2 : 753524 753609 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 753524 753708 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 753524 753774 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 753524 753886 BUY\n","expiry_p1 break\n","============ op_idx1 : 754979 SELL ======\n","op_idx1, op_idx2 : 754979 754992 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 754979 755047 SELL\n","exit_done = 1 break\n","============ op_idx1 : 759719 BUY ======\n","op_idx1, op_idx2 : 759719 759745 BUY\n","expiry_p1 break\n","============ op_idx1 : 763574 BUY ======\n","op_idx1, op_idx2 : 763574 763581 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 763574 763673 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 763574 763817 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 763574 764039 BUY\n","expiry_p1 break\n","============ op_idx1 : 766769 BUY ======\n","op_idx1, op_idx2 : 766769 766781 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 766769 766863 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 766769 766913 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 766769 767214 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 766769 767295 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 766769 767372 BUY\n","expiry_p1 break\n","============ op_idx1 : 769754 BUY ======\n","op_idx1, op_idx2 : 769754 769763 BUY\n","exit_done = 1 break\n","============ op_idx1 : 770534 BUY ======\n","op_idx1, op_idx2 : 770534 770649 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 770534 770850 BUY\n","expiry_p1 break\n","============ op_idx1 : 775259 SELL ======\n","op_idx1, op_idx2 : 775259 775261 SELL\n","p2_box continue\n","op_idx1, op_idx2 : 775259 775387 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 775259 775487 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 775259 776013 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 775259 776138 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 775259 776281 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 775259 776819 SELL\n","expiry_p1 break\n","============ op_idx1 : 778904 BUY ======\n","op_idx1, op_idx2 : 778904 778925 BUY\n","expiry_p1 break\n","============ op_idx1 : 781289 SELL ======\n","op_idx1, op_idx2 : 781289 781405 SELL\n","expiry_p1 break\n","============ op_idx1 : 784229 SELL ======\n","op_idx1, op_idx2 : 784229 784299 SELL\n","expiry_p1 break\n","============ op_idx1 : 785519 SELL ======\n","op_idx1, op_idx2 : 785519 785547 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 785519 785886 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 785519 786104 SELL\n","exit_done = 1 break\n","============ op_idx1 : 789779 SELL ======\n","op_idx1, op_idx2 : 789779 789799 SELL\n","exit_done = 1 break\n","============ op_idx1 : 790964 SELL ======\n","op_idx1, op_idx2 : 790964 790966 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791075 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791240 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791299 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791659 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791701 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 791881 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 792018 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 792261 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 792688 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 792730 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 790964 792904 SELL\n","expiry_p1 break\n","============ op_idx1 : 791744 BUY ======\n","op_idx1, op_idx2 : 791744 791771 BUY\n","expiry_p1 break\n","============ op_idx1 : 794204 SELL ======\n","op_idx1, op_idx2 : 794204 794301 SELL\n","expiry_p1 break\n","============ op_idx1 : 794459 SELL ======\n","op_idx1, op_idx2 : 794459 794492 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 794459 794616 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 794459 794826 SELL\n","expiry_p1 break\n","============ op_idx1 : 795674 SELL ======\n","op_idx1, op_idx2 : 795674 795740 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 795674 795949 SELL\n","expiry_p1 break\n","============ op_idx1 : 795959 BUY ======\n","op_idx1, op_idx2 : 795959 796005 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 795959 796184 BUY\n","expiry_p1 break\n","============ op_idx1 : 803309 BUY ======\n","op_idx1, op_idx2 : 803309 803340 BUY\n","expiry_p1 break\n","============ op_idx1 : 826694 BUY ======\n","op_idx1, op_idx2 : 826694 826770 BUY\n","expiry_p1 break\n","============ op_idx1 : 839774 BUY ======\n","op_idx1, op_idx2 : 839774 839804 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 839774 839893 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 839774 840042 BUY\n","expiry_p1 break\n","============ op_idx1 : 839894 BUY ======\n","op_idx1, op_idx2 : 839894 839896 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 839894 840042 BUY\n","expiry_p1 break\n","============ op_idx1 : 841214 SELL ======\n","op_idx1, op_idx2 : 841214 841245 SELL\n","exit_done = 1 break\n","============ op_idx1 : 844844 SELL ======\n","op_idx1, op_idx2 : 844844 844980 SELL\n","expiry_p1 break\n","============ op_idx1 : 845489 SELL ======\n","op_idx1, op_idx2 : 845489 845512 SELL\n","exit_done = 1 break\n","============ op_idx1 : 845774 BUY ======\n","op_idx1, op_idx2 : 845774 845786 BUY\n","exit_done = 1 break\n","============ op_idx1 : 848279 SELL ======\n","op_idx1, op_idx2 : 848279 848322 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 848279 848548 SELL\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 848279 848651 SELL\n","expiry_p1 break\n","============ op_idx1 : 851339 BUY ======\n","op_idx1, op_idx2 : 851339 851368 BUY\n","exit_done = 1 break\n","============ op_idx1 : 854054 SELL ======\n","op_idx1, op_idx2 : 854054 854089 SELL\n","exit_done = 1 break\n","============ op_idx1 : 859079 BUY ======\n","op_idx1, op_idx2 : 859079 859194 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 859079 859364 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 859079 859646 BUY\n","exit_done = -1 continue\n","op_idx1, op_idx2 : 859079 859698 BUY\n","expiry_p1 break\n","============ op_idx1 : 862694 SELL ======\n","op_idx1, op_idx2 : 862694 862726 SELL\n","exit_done = 1 break\n","en_ex_pairing elapsed time : 0.7277796268463135\n","short_obj.shape : (257, 5)\n","long_obj.shape : (269, 5)\n","len(short_p1_true_bias_bool) : 86\n","len(long_p1_true_bias_bool) : 120\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1728x576 with 6 Axes>"],"image/png":"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nZycRKvVysSJE8XKykratGkjf/75p7z55psCQLy9vSUhIUFefPHFatdv166duLu7i0qlkhEjRkh2drZ06dJFAIijo6O0adNGiU2bNsn7778vbm5uRn/eGAwGg2H6Ye41tq46OGLECGndurWSa3R0tLz66qsC1H0OXNu6DIYJhNETYDCMEo899piIiNx5551689u2bSsbN26U9PR0uXjxohw+fFiGDRsmAOT222+XuLg4KSgokAMHDsjixYsbXLhiYmLk0UcfrXH5sGHDJC4uTi5duiT79++XgIAAZdnKlStl5cqVAkC6dOkikZGRUlhYKDk5ObJnzx7p27ev0jYgIEAqS0pKEqCsQB47dkzy8/NFq9XK4cOHlXsJAZDZs2fLuXPnpLCwUNLT0+Wbb74Rf39/oz9nDAaDwTCPMPcaC0DuuusuOXbsmOTl5Ul6erp8/vnn0qJFCwEgr776qoiIFBQU6EX5ug899JCkpqZKUVGRREREKF+CUl3wHrAMBoPBaEhYQo2tGJXr4HvvvScZGRlSWFgoiYmJsnjxYrG2thag7nPg2tZlMIwdVjd+IWp2br/9dmzYsAEBAQHGToWIiMiisMYSEREZBmsskXnil3BRs2RtbY05c+bgiy++MHYqREREFoU1loiIyDBYY4nMFwdgqdnp3Lkz8vLy0LZtWyxfvtzY6RAREVkM1lgiIiLDYI0lMm+NdguC1atX47777kNWVha6d+/eGJskIiIisMYSEREZAusrERE1lUa7Anbt2rUYMWJEY22OiIiIbmCNJSIianysr0RE1FSsG2tDBw8ebNBNoLOysnD+/PnG6p6IiCxMQEAAWrdubew0TAJrLBERNSbW2DINra8AaywREdWstvraaAOw9TFr1iw8/vjjAICioiL079+/aqP9N37eVWF6yI3fC2/8PFVheV0qb68upTd+GuLuuNdu/LS58bM+uTU0//rSAnC58fut7mvF/WpIvvsBDG2EHAzxnO2vNH1XhX5+h/7+1bbPFY/fQzW0qY220rRbPfqsz/bcKkw7ouy1VfF1dTPbr7hOYz23pqZ8v0rw9/uRW83N69wWUPNjXH7sFKLm57266V74+zltaG7lr+VDN372uvHzZvfxFoWHhxunYzNVscZecL+A/m796/++U/7ecApVj7uKyo+RQpTVkBLov/cPAaC+Mf8Qyo6hyjVb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mK8AMzaeM6JyvgJqZexiztc/9oGy0ZbD4ZAXL16I3++XmpqauJxZV1cnk5OT8vnzZxkfH5f9+/fLihUrpLOzU16+fCkdHR2Snp4evv7y5cvi9/vl2bNnUlhYGF7ft2+f+Hw+8fl8snfv3vB6YWGheDwe8fv9cunSpfB6pDN+VSUlJSIiMjg4KG63W9xutzgcDs33vX79enG5XDI4OCgej0dOnTolAMRisUhvb6/4fD5paGgQo9EoACQxMVEaGhrE5/NJb2+vWCyW8F41NTXi9/tleHg4/E16kWZovjNiqS1btoQ/vFzrPVssFhkYGJCBgQEZGhoK76v1GQEgGzZskP7+fhkcHJSmpiYxmUxK9J2UlCRv376V1NTUqPbUQt+nT58Wr9crHo9Hbt68KUajUfOzzfq9+hv5CjBjmbHRFzOWGTtfqZivADN2KRXfw0bft4oZq3q+AszYeMy3ivkKqJmxizFf//f/H4iIiIiIiIiIiIjoD+OXcBEREREREREREREtED6AJSIiIiIiIiIiIlogfABLREREREREREREtED4AJaIiIiIiIiIiIhogfABLBEREREREREREdEC4QNYIiIiIiIiIiIiogXCB7BEREREREREREREC+QfgkNzItdg5gwAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 2.043142080307007\n"]}],"source":["test_ratio = 0.0\n","short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_bias_arr, short_p2_idx_arr, short_en_tp1, short_en_out0, \\\n","      long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_bias_arr, long_p2_idx_arr, long_en_tp1, long_en_out0 = \\\n","get_res_v6(res_df, open_info_df_list, ohlc_list, config_list, np_timeidx, funcs, test_ratio=test_ratio, plot_is=1, signi=False)   # open 이 많을 수록 en_ex_pairing elapsed time : 11.58370590209961"]},{"cell_type":"code","source":["# ------ inversion ------ #\n","_ = get_res_v5(res_df, open_info_df, ohlc_list, config_list, np_timeidx, funcs, inversion=True, test_ratio=test_ratio, plot_is=1, signi=False)"],"metadata":{"id":"8lYgsqH-rfAM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n6gc7lERC4VE"},"source":["### statistics (stem 별로 진행)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HHjIdn2MC4VE"},"outputs":[],"source":["selection_id = config.selection_id\n","\n","short_open_idx = short_obj[-1].astype(int)\n","long_open_idx = long_obj[-1].astype(int)\n","\n","short_open_tp_1 = res_df['short_tp_1_{}'.format(selection_id)].to_numpy()[short_open_idx]\n","long_open_tp_1 = res_df['long_tp_1_{}'.format(selection_id)].to_numpy()[long_open_idx]\n","\n","short_open_tp_0 = res_df['short_tp_0_{}'.format(selection_id)].to_numpy()[short_open_idx]\n","long_open_tp_0 = res_df['long_tp_0_{}'.format(selection_id)].to_numpy()[long_open_idx]\n","\n","short_open_tp_gap = res_df['short_tp_gap_{}'.format(selection_id)].to_numpy()[short_open_idx]  # use open_i\n","long_open_tp_gap = res_df['long_tp_gap_{}'.format(selection_id)].to_numpy()[long_open_idx]\n","\n","short_open_epout_0 = res_df['short_epout_0_{}'.format(selection_id)].to_numpy()[short_open_idx]\n","long_open_epout_0 = res_df['long_epout_0_{}'.format(selection_id)].to_numpy()[long_open_idx]\n","\n","short_open_epout_gap = res_df['short_epout_gap_{}'.format(selection_id)].to_numpy()[short_open_idx]  # use open_i\n","long_open_epout_gap = res_df['long_epout_gap_{}'.format(selection_id)].to_numpy()[long_open_idx]\n","\n","# ------ out case 의 max_high check (long) ------ #\n","short_max_tpg = get_max_tpg_v2(\"SELL\", ohlc_list, short_pr, short_obj[:4], short_open_tp_1, short_open_tp_gap)\n","long_max_tpg = get_max_tpg_v2(\"BUY\", ohlc_list, long_pr, long_obj[:4], long_open_tp_1, long_open_tp_gap)\n","# short_max_tpg = get_max_tpg_v2(\"SELL\", ohlc_list, short_pr, short_obj[:4], short_open_tp_1, short_open_epout_gap)\n","# long_max_tpg = get_max_tpg_v2(\"BUY\", ohlc_list, long_pr, long_obj[:4], long_open_tp_1, long_open_epout_gap)\n","\n","# ------ true_bias 의 outg 확인 ------ #\n","short_max_outg = get_max_outg_v4(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_tp_0, short_open_tp_gap)\n","long_max_outg = get_max_outg_v4(\"BUY\", config, ohlc_list, long_obj, long_tpout_arr, long_open_tp_0, long_open_tp_gap)\n","\n","current_tpg = config.tr_set.tp_gap\n","current_outg = config.tr_set.out_gap"]},{"cell_type":"markdown","source":["#### consecutive dur. value survey on bias"],"metadata":{"id":"tOFkzUX2imQu"}},{"cell_type":"code","source":["res_df.dtypes"],"metadata":{"id":"CgvSrXaZEkMZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gnSvYKIzC4VF"},"outputs":[],"source":["# ------------ dependent vars. ------------ #\n","# res_df 에 존재하는 col 는 모두 사용가능함\n","\n","# ------ 1. 도출한 outg 와 vars. pairing 진행 (by valid_idx) ------ #\n","devided_cols, public_cols = [], []\n","\n","devided_cols.append('tr_{}'.format(selection_id))\n","\n","wave_tf = 'T'\n","wave_period = config.tr_set.wave_period\n","\n","# public_cols.append('cu_wrr_21_{}{}'.format(wave_tf, wave_period))\n","public_cols.append('cu_wrr_32_{}{}'.format(wave_tf, wave_period))\n","# public_cols.append('co_wrr_21_{}{}'.format(wave_tf, wave_period))\n","public_cols.append('co_wrr_32_{}{}'.format(wave_tf, wave_period))\n","\n","# public_cols.append('wave_high_terms_cnt_fill_T5')\n","# public_cols.append('wave_low_terms_cnt_fill_T5')\n","# public_cols.append('wave_high_loc_pct_T5')\n","# public_cols.append('wave_low_loc_pct_T5')\n","\n","# public_cols.append('b1_co_es_15T1')\n","# public_cols.append('b1_cu_es_15T1')\n","# public_cols.append('b1_upper_wick_ratio_15T')\n","# public_cols.append('b1_lower_wick_ratio_15T')\n","\n","#  'co_wrr_T5', 'cu_wrr_T5', 'b1_cppr_15T', 'b1_updbr', 'b1_lwdbr', 'b1_updbr_cppr', 'b1_lwdbr_cppr' 'abs_ratio_5T', 'rel_ratio_5T', 'body_rel_ratio_5T'\n","\n","# devided_cols = ['tr_{}'.format(selection_id)]  # , 'ir_5T'\n","# public_cols = ['wave_high_terms_cnt_fill_T5', 'wave_low_terms_cnt_fill_T5', 'wave_high_loc_pct_T5', 'wave_low_loc_pct_T5', \n","#                'b1_co_es_15T1', 'b1_cu_es_15T1', 'b1_upper_wick_ratio_15T', 'b1_lower_wick_ratio_15T']\n","\n","short_datas = [res_df['short_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","long_datas = [res_df['long_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","\n","titles = devided_cols + public_cols"]},{"cell_type":"code","source":["plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(14, len(titles) * 5))\n","nrows, ncols = len(short_datas), 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","\n","num_samples = 30\n","alpha = 0.8\n","xmin = 0\n","xmax = 10\n","\n","for ings_idx, (title, short_data, long_data) in enumerate(zip(titles, short_datas, long_datas)):\n","  inner_gs = gs[ings_idx].subgridspec(nrows=2, ncols=2)\n","\n","  short_open_data = short_data[short_open_idx]\n","  long_open_data = long_data[long_open_idx]\n","\n","  short_true_data = short_open_data[short_bias_arr.ravel()]\n","  short_false_data = short_open_data[short_false_bias_arr.ravel()]\n","  long_true_data = long_open_data[long_bias_arr.ravel()]\n","  long_false_data = long_open_data[long_false_bias_arr.ravel()]\n","  \n","  short_true_valid_idx = np.ones_like(short_true_data).astype(bool)\n","  short_false_valid_idx = np.ones_like(short_false_data).astype(bool)\n","  long_true_valid_idx = np.ones_like(long_true_data).astype(bool)\n","  long_false_valid_idx = np.ones_like(long_false_data).astype(bool)\n","\n","  short_true_valid_idx *= ~np.isinf(short_true_data)\n","  short_false_valid_idx *= ~np.isinf(short_false_data)\n","  long_true_valid_idx *= ~np.isinf(long_true_data)\n","  long_false_valid_idx *= ~np.isinf(long_false_data)\n","\n","  try:\n","    short_true_valid_idx *= short_true_data > xmin\n","    short_false_valid_idx *= short_false_data > xmin\n","    long_true_valid_idx *= long_true_data > xmin\n","    long_false_valid_idx *= long_false_data > xmin\n","\n","  except:\n","    pass\n","\n","  try:\n","    short_true_valid_idx *= short_true_data < xmax\n","    short_false_valid_idx *= short_false_data < xmax\n","    long_true_valid_idx *= long_true_data < xmax\n","    long_false_valid_idx *= long_false_data < xmax\n","    \n","  except:\n","    pass\n","    \n","  plt.subplot(inner_gs[0])\n","  ns, bins, patches = plt.hist([short_true_data[short_true_valid_idx], short_false_data[short_false_valid_idx]], \n","           bins=num_samples, alpha=alpha, color=['#00ff00', '#ff0000'], edgecolor='black')  \n","  plt.title('short_' + title)  \n","\n","  plt.subplot(inner_gs[2])\n","  total_ns = np.sum(ns, axis=0)\n","  hist_ratio = ns[0] / total_ns\n","  # valid_idx = total_ns > 1\n","  valid_idx = np.full(len(hist_ratio), True)\n","  valid_hist_ratio = hist_ratio[valid_idx]\n","  plt.hist(bins[:-1][valid_idx], weights=valid_hist_ratio, bins=num_samples, color='#00ff00', edgecolor='black')\n","  plt.ylim(0, 1)\n","  \n","\n","  plt.subplot(inner_gs[1])\n","  ns, bins, patches = plt.hist([long_true_data[long_true_valid_idx], long_false_data[long_false_valid_idx]], \n","           bins=num_samples, alpha=alpha, color=['#00ff00', '#ff0000'], edgecolor='black')\n","  plt.title('long_' + title)\n","  \n","  plt.subplot(inner_gs[3])\n","  total_ns = np.sum(ns, axis=0)\n","  hist_ratio = ns[0] / total_ns\n","  # valid_idx = total_ns > 1\n","  valid_idx = np.full(len(hist_ratio), True)\n","  valid_hist_ratio = hist_ratio[valid_idx]\n","  plt.hist(bins[:-1][valid_idx], weights=valid_hist_ratio, bins=num_samples, color='#00ff00', edgecolor='black')\n","  plt.ylim(0, 1)\n","\n","  \n","# plt.suptitle(title)\n","plt.show()"],"metadata":{"id":"Sahvc-R0jD1A"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Arnb-kXlC4VF"},"source":["#### tpg & outg survey"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jHh0uFkXC4VF","colab":{"base_uri":"https://localhost:8080/","height":741},"executionInfo":{"status":"ok","timestamp":1652336000146,"user_tz":-540,"elapsed":2191,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"0f96fffd-6b9a-4f7e-88ff-692d53ae921e"},"outputs":[{"output_type":"stream","name":"stdout","text":["661\n","661\n","661\n","661\n","pkx : [0.16567421 0.37261006 0.43912516 0.62388931]\n","pkx : [0.13770337 0.25029868 0.60309732]\n","\n","293\n","293\n","293\n","293\n","pkx : [-0.52628423 -0.45473521 -0.33365224 -0.2070655  -0.1300127  -0.02544105]\n","pkx : [-0.46075458 -0.25025689 -0.14500805 -0.04852994]\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 4 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# 1. outg 는 partial 을 위한 histogram 작성 진행\n","# 현재, outg 내부에는 tp 한것과 out 한것이 공존하는 상태\n","titles = ['outg', 'tpg']\n","short_max_datas = [short_max_outg[short_bias_arr], short_max_tpg]\n","long_max_datas = [long_max_outg[long_bias_arr], long_max_tpg]\n","\n","# titles = ['tpg']\n","# short_max_datas = [short_max_tpg]\n","# long_max_datas = [long_max_tpg]\n","\n","plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(12, 8))\n","nrows, ncols = 2, 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","  \n","for ings_idx, (title, short_max_data, long_max_data) in enumerate(zip(titles, short_max_datas, long_max_datas)):\n","\n","  inner_gs = gs[ings_idx].subgridspec(nrows=1, ncols=2)\n","  if ings_idx == 0:\n","    axvline = current_outg\n","    title_add = 'true_' + title\n","  else:\n","    axvline = current_tpg\n","    title_add = 'false_' + title\n","\n","  print(len(long_max_data))\n","\n","  short_plot_idx = np.ones_like(short_max_data).astype(bool)\n","  long_plot_idx = np.ones_like(long_max_data).astype(bool)\n","  # short_plot_idx = short_max_data <= axvline\n","  # long_plot_idx = long_max_data <= axvline\n","\n","  print(np.sum(long_plot_idx))    \n","\n","  short_plot_idx *= ~np.isnan(short_max_data)\n","  long_plot_idx *= ~np.isnan(long_max_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_plot_idx *= ~np.isinf(short_max_data)\n","  long_plot_idx *= ~np.isinf(long_max_data)  # nan 과 inf 때문에 이 방식 채택\n","  \n","  print(np.sum(long_plot_idx))\n","    \n","  plt.subplot(inner_gs[0])\n","  kde_plot_v2(*np.unique(short_max_data[short_plot_idx], return_counts=True))\n","  plt.title('short_' + title_add)  \n","  plt.axvline(axvline, color='red', linewidth=3)\n","\n","  plt.subplot(inner_gs[1])\n","  kde_plot_v2(*np.unique(long_max_data[long_plot_idx], return_counts=True))\n","  plt.title('long_' + title_add)\n","  plt.axvline(axvline, color='red', linewidth=3)\n","\n","  print()\n","\n","# plt.suptitle(title)\n","plt.show()"]},{"cell_type":"markdown","source":["#### legacy"],"metadata":{"id":"mScdfR9hmjVu"}},{"cell_type":"markdown","metadata":{"id":"xivLUsSGC4VF"},"source":["##### outg survey for precision (eploc vars. dependency)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LB28R3QIjCDc"},"outputs":[],"source":["# ------------ dependent vars. ------------ #\n","# res_df 에 존재하는 col 는 모두 사용가능함\n","# ------ 1. 도출한 outg 와 vars. pairing 진행 (by valid_idx) ------ #\n","devided_cols = ['tr_{}'.format(strat_version)]  # , 'ir_5T'\n","public_cols = ['wave_body_ratio']  # 'abs_ratio_5T', 'rel_ratio_5T', 'body_rel_ratio_5T'\n","\n","short_datas = [res_df['short_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","long_datas = [res_df['long_' + col].to_numpy() for col in devided_cols] + [res_df[col].to_numpy() for col in public_cols]\n","\n","titles = devided_cols + public_cols"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nX9TpLcvFu7T"},"outputs":[],"source":["plot_outg_range = (-1, 10)\n","plot_data_range = (-10, 100)\n","\n","plt.style.use(['dark_background', 'fast'])\n","fig = plt.figure(figsize=(12, 18))\n","nrows, ncols = len(short_datas), 1\n","gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                        ncols=ncols\n","                        )\n","\n","for ings_idx, (title, short_data, long_data) in enumerate(zip(titles, short_datas, long_datas)):\n","  inner_gs = gs[ings_idx].subgridspec(nrows=1, ncols=2)\n","\n","  print(len(long_max_outg))\n","\n","  short_plot_idx = (plot_outg_range[0] <= short_max_outg) & (short_max_outg <= plot_outg_range[1])\n","  long_plot_idx = (plot_outg_range[0] <= long_max_outg) & (long_max_outg <= plot_outg_range[1])  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_open_data = short_data[short_open_idx]\n","  long_open_data = long_data[long_open_idx]\n","  \n","  short_plot_idx *= (plot_data_range[0] <= short_open_data) * (short_open_data <= plot_data_range[1])\n","  long_plot_idx *= (plot_data_range[0] <= long_open_data) * (long_open_data <= plot_data_range[1]) # nan 과 inf 때문에 이 방식 채택\n","\n","  short_plot_idx *= ~np.isnan(short_open_data)\n","  long_plot_idx *= ~np.isnan(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_plot_idx *= ~np.isinf(short_open_data)\n","  long_plot_idx *= ~np.isinf(long_open_data)  # nan 과 inf 때문에 이 방식 채택\n","\n","  print(np.sum(long_plot_idx))\n","\n","  short_true_idx = short_plot_idx * short_true_open_idxth\n","  long_true_idx = long_plot_idx * long_true_open_idxth\n","  \n","  short_false_idx = short_plot_idx * ~short_true_open_idxth\n","  long_false_idx = long_plot_idx * ~long_true_open_idxth\n","\n","  plt.subplot(inner_gs[0])\n","  # ------ true_bias ------ #\n","  x, y = short_max_outg[short_true_idx].ravel(), short_open_data[short_true_idx].ravel()  \n","  plt.scatter(x, y, color='white', alpha=0.5)\n","  # ------ false_bias ------ #\n","  x, y = short_max_outg[short_false_idx].ravel(), short_open_data[short_false_idx].ravel()\n","  plt.scatter(x, y, color='fuchsia', alpha=0.3)\n","  plt.axvline(current_outg, color='red', linewidth=3)\n","  plt.title(\"{} coef : {:0.3f}\".format(title, np.corrcoef(-x, y)[0, 1]))\n","\n","  plt.subplot(inner_gs[1])    \n","  # ------ true_bias ------ #\n","  x, y = long_max_outg[long_true_idx].ravel(), long_open_data[long_true_idx].ravel()  \n","  plt.scatter(x, y, color='white', alpha=0.5)\n","  # ------ false_bias ------ #\n","  x, y = long_max_outg[long_false_idx].ravel(), long_open_data[long_false_idx].ravel()\n","  plt.scatter(x, y, color='fuchsia', alpha=0.3)\n","  plt.axvline(current_outg, color='red', linewidth=3)\n","  plt.title(\"{} coef : {:0.3f}\".format(title, np.corrcoef(-x, y)[0, 1]))\n","\n","  print()  \n","\n","# plt.suptitle(title)\n","plt.show()\n","# print()"]},{"cell_type":"markdown","source":["#### dump"],"metadata":{"id":"983aUwM76s6X"}},{"cell_type":"code","source":["open_idx = open_info_df.index.to_numpy()\n","# len_df = len(res_df)\n","# s_idx = (open_idx < int(len_df * (1 - test_ratio))) == plot_is\n","# s_open_info_df = open_info_df[s_idx]\n","# s_open_idx = open_idx[s_idx]\n","\n","# open_info_list = [s_open_info_df[col_].to_numpy() for col_ in s_open_info_df.columns]\n","# side_arr, zone_arr, id_arr, id_idx_arr = open_info_list\n","\n","long_open_ = res_df['long_open_{}'.format(config.selection_id)].to_numpy()\n","short_open_ = res_df['short_open_{}'.format(config.selection_id)].to_numpy()\n","\n","long_open_idx = get_index_bybool(long_open_, np.arange(len(res_df)))\n","short_open_idx = get_index_bybool(short_open_, np.arange(len(res_df)))"],"metadata":{"id":"hOtCGUeBQ4hn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["valid_long_open_idx = long_open_idx[~np.isnan(long_open_idx)]\n","valid_short_open_idx = short_open_idx[~np.isnan(short_open_idx)]\n","\n","# print(valid_long_open_idx[valid_long_open_idx > 4000][:10])\n","# print(valid_short_open_idx[valid_short_open_idx > 4000][:10])\n","\n","print(open_idx[open_idx > 4000][:10])\n","\n","print(np.hstack((long_obj[-1], long_obj[3]))[:10])\n","print(np.hstack((short_obj[-1], short_obj[3]))[:10])\n","# print([:10])"],"metadata":{"id":"QPhjkZQhRLqr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# short_max_outg, short_outg_open_idx = get_max_outg_v2(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_epout_0, short_open_epout_gap)\n","# long_max_outg, long_outg_open_idx = get_max_outg_v2(\"BUY\", config, ohlc_list, long_obj, long_tpout_arr, long_open_epout_0, long_open_epout_gap)\n","# short_max_outg, short_open_idx, short_true_open_idxth = get_max_outg_v3(\"SELL\", config, ohlc_list, short_obj, short_tpout_arr, short_open_epout_0, short_open_epout_gap)\n","# long_max_outg, long_open_idx, long_true_open_idxth = get_max_outg_v3(\"BUY\", config, ohlc_list, long_obj, long_tpout_arr, long_open_epout_0, long_open_epout_gap)"],"metadata":{"id":"cFd7Fz0Y6ucU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EtjwB7Qk-Grj"},"source":["### significance_v3"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oVifICO4-Grk","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1652442940773,"user_tz":-540,"elapsed":52000,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"5c9539c8-4fa9-4dd9-dbf0-a070618cccdf"},"outputs":[{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 -0.00000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 -0.00000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.6678133010864258\n","en_ex_pairing elapsed time : 0.00150299072265625\n","short_obj.shape : (0, 5)\n","long_obj.shape : (5, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.05000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.05000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.938042402267456\n","en_ex_pairing elapsed time : 0.006476640701293945\n","short_obj.shape : (8, 5)\n","long_obj.shape : (38, 5)\n","idep_plot elapsed time : 0.15370750427246094\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.10000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.10000 (1.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9340569972991943\n","en_ex_pairing elapsed time : 0.03796505928039551\n","short_obj.shape : (72, 5)\n","long_obj.shape : (230, 5)\n","idep_plot elapsed time : 0.16156935691833496\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.15000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.15000 (1.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9375967979431152\n","en_ex_pairing elapsed time : 0.1277174949645996\n","short_obj.shape : (319, 5)\n","long_obj.shape : (655, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.17165017127990723\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.20000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.20000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9565761089324951\n","en_ex_pairing elapsed time : 0.26297640800476074\n","short_obj.shape : (840, 5)\n","long_obj.shape : (1244, 5)\n","idep_plot elapsed time : 0.18038082122802734\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.25000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.25000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9551839828491211\n","en_ex_pairing elapsed time : 0.4788327217102051\n","short_obj.shape : (1505, 5)\n","long_obj.shape : (2026, 5)\n","idep_plot elapsed time : 0.19758844375610352\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.30000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.30000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9695498943328857\n","en_ex_pairing elapsed time : 0.6392936706542969\n","short_obj.shape : (2265, 5)\n","long_obj.shape : (2762, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.21212220191955566\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.35000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.35000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9572036266326904\n","en_ex_pairing elapsed time : 0.8163747787475586\n","short_obj.shape : (3033, 5)\n","long_obj.shape : (3326, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.233687162399292\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.40000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.40000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9504046440124512\n","en_ex_pairing elapsed time : 0.9629926681518555\n","short_obj.shape : (3628, 5)\n","long_obj.shape : (3810, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.23377537727355957\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.45000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.45000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9773266315460205\n","en_ex_pairing elapsed time : 1.1199846267700195\n","short_obj.shape : (3987, 5)\n","long_obj.shape : (4096, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.2484416961669922\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.50000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.50000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9605038166046143\n","en_ex_pairing elapsed time : 1.1008503437042236\n","short_obj.shape : (4218, 5)\n","long_obj.shape : (4177, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.24922657012939453\n"]},{"output_type":"stream","name":"stderr","text":["wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.55000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.55000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9583590030670166\n","en_ex_pairing elapsed time : 1.1536345481872559\n","short_obj.shape : (4339, 5)\n","long_obj.shape : (4220, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.24882173538208008\n"]},{"output_type":"stream","name":"stderr","text":["point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.60000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.60000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9655780792236328\n","en_ex_pairing elapsed time : 1.1792562007904053\n","short_obj.shape : (4433, 5)\n","long_obj.shape : (4239, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.25986385345458984\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.65000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.65000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9574406147003174\n","en_ex_pairing elapsed time : 1.2422080039978027\n","short_obj.shape : (4452, 5)\n","long_obj.shape : (4098, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.2535998821258545\n"]},{"output_type":"stream","name":"stderr","text":["point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.70000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.70000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9548816680908203\n","en_ex_pairing elapsed time : 1.1278448104858398\n","short_obj.shape : (4382, 5)\n","long_obj.shape : (3992, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.25209593772888184\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.75000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.75000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9675965309143066\n","en_ex_pairing elapsed time : 1.1214463710784912\n","short_obj.shape : (4253, 5)\n","long_obj.shape : (3882, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n","wave_mm\n","np.sum(short_open_res == 1) : 79369\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.2552158832550049\n"]},{"output_type":"stream","name":"stderr","text":["np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.80000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.80000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.2942922115325928\n","en_ex_pairing elapsed time : 1.1557459831237793\n","short_obj.shape : (4074, 5)\n","long_obj.shape : (3755, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.24727678298950195\n"]},{"output_type":"stream","name":"stderr","text":["wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.85000 (0.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.85000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 0.9597580432891846\n","en_ex_pairing elapsed time : 1.0517606735229492\n","short_obj.shape : (3823, 5)\n","long_obj.shape : (3569, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.26427507400512695\n"]},{"output_type":"stream","name":"stderr","text":["wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.90000 (1.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.90000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.0179243087768555\n","en_ex_pairing elapsed time : 1.0500407218933105\n","short_obj.shape : (3840, 5)\n","long_obj.shape : (3553, 5)\n"]},{"output_type":"stream","name":"stderr","text":["wave_point\n","np.sum(short_open_res == 1) : 79370\n","np.sum(long_open_res == 1) : 79066\n"]},{"output_type":"stream","name":"stdout","text":["idep_plot elapsed time : 0.25498342514038086\n"]},{"output_type":"stream","name":"stderr","text":["wave_mm\n","np.sum(short_open_res == 1) : 79369\n","np.sum(long_open_res == 1) : 79062\n","point validation\n","np.sum(short_open_res == 1) : 78627\n","np.sum(long_open_res == 1) : 78425\n","cu_wrr_32_ <= config.loc_set.point.wrr_32 : 1.00000 0.95000 (1.0)\n","co_wrr_32_ <= config.loc_set.point.wrr_32 : 0.18178 0.95000 (0.0)\n"]},{"output_type":"stream","name":"stdout","text":["get_open_info_df elapsed time : 1.0456984043121338\n","en_ex_pairing elapsed time : 1.3167588710784912\n","short_obj.shape : (3666, 5)\n","long_obj.shape : (3300, 5)\n","idep_plot elapsed time : 0.2509620189666748\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1728x576 with 36 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# from google.colab import output\n","# ------------ survey param ------------ #\n","# itv_num_list = [1, 3, 5, 15]\n","# itv_list = ['15m', '30m', '1h', '4h']\n","# itv_list = ['3m', '5m', '15m', '30m', '1h', '4h']\n","# val_list = np.arange(-0.5, -0.9, -0.1)     # prcn 1\n","val_list = np.arange(-0.0, -0.5, -0.03)  # prcn 2\n","val_list = np.arange(-0.0, 1, 0.05)  # prcn 2\n","# val_list = np.arange(-0.5, -0.6, -0.005)    # prcn 3\n","# val_list = np.arange(0.944, 0.945, 0.0001)    # prcn 4\n","# val_list = np.arange(70, 80, 1)   # prcn -1\n","# val_list = np.arange(200, 180, -5)   # prcn -2\n","# val_list = talib.get_function_groups()['Pattern Recognition']\n","\n","# ------------ get survey_res ------------ #\n","result = []\n","res_shape = (3, 12)  # short, long, both x data\n","config_list_copy = copy.deepcopy(config_list)\n","for set_val in val_list:\n","  # ------------ open 결정 이전의 인자값 ------------ #\n","  # ------ point * dur. ------ #\n","  config_list_copy[0].loc_set.point.wrr_32 = set_val\n","  # config_list_copy[0].loc_set.point.candle_pattern = set_val\n","  # config_list_copy[0].loc_set.zone.degree_list = set_val\n","  # config_list_copy[0].loc_set.point2.wick_score_list = str([set_val])\n","  # config_list_copy[0].loc_set.zone.ir = set_val  \n","  # config_list_copy[0].loc_set.zone.abs_ratio = set_val  \n","\n","  # ------------ open 결정 이후의 인자값 ------------ #\n","  # ------ utils ------ #\n","  # config_list_copy[0].tr_set.tp_gap = set_val  \n","  # config_list_copy[0].tr_set.ep_gap = set_val \n","  # config_list_copy[0].tr_set.out_gap = set_val  \n","\n","  # config_list_copy[0].tr_set.tp_gap = abs(set_val) - 0.5\n","  # config_list_copy[0].tr_set.out_gap = set_val + 0.5\n","  # config_list_copy[0].tr_set.wb_tp_gap = config_list_copy[0].tr_set.tp_gap\n","  # config_list_copy[0].tr_set.wb_out_gap = config_list_copy[0].tr_set.out_gap\n","\n","  # ------ entry, exit (ep, tp, out vars.) ------ #\n","  # config_list_copy[0].tr_set.expire_k = set_val\n","  # config_list_copy[0].ep_set.expire_tick = set_val  \n"," \n","  for utils_, config_ in zip(utils_list, config_list_copy):\n","    # enlist_rtc(res_df, config_, np_timeidx)\n","    enlist_tr(res_df, config_, np_timeidx)\n","  open_info_df = get_open_info_df(ep_loc_v3, res_df, np_timeidx, ID_list, config_list_copy, id_idx_list)   # point * mr_res 이기 때문에 utils_tr & rtc 의 영향을 충분히 받음\n","\n","  try:\n","    result.append(get_res_v5(res_df, open_info_df, ohlc_list, config_list_copy, np_timeidx, funcs, test_ratio=test_ratio, plot_is=1, signi=True))    \n","  except:\n","    result.append(np.full(res_shape, np.nan))\n","    # pass\n","\n","survey_res_list = [np.array(result)[:, s_i::3] for s_i in range(3)]   # 3 for s, l, b\n","# short_res, long_res, both_res = survey_res_list\n","\n","# ------------ plot survey_res ------------ #\n","title_list = [\"short\", \"long\", \"both\"]\n","sub_title_list = ['hhm', 'hlm', 'len_pr', 'dpf', 'wr', 'sr', 'acc_pr', 'sum_pr', 'min_pr', 'liqd', 'acc_mdd', 'sum_mdd']\n","space_ = \" \" * 120\n","\n","fig = plt.figure(figsize=(24, 8))\n","plt.style.use('dark_background')\n","gs = gridspec.GridSpec(nrows=1,\n","                        ncols=3,\n","                        # height_ratios=[1, 1, 1]\n","                      )\n","# nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","# nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","# if d_idx == 0:\n","# else:\n","  # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","for d_idx, (title_name, survey_res) in enumerate(zip(title_list, survey_res_list)):  \n","  inner_gs = gs[d_idx].subgridspec(nrows=nrows,\n","                        ncols=ncols,\n","                        height_ratios=h_r\n","                      )\n","  for in_idx, (data_, sub_title) in enumerate(zip(survey_res.T, sub_title_list)):\n","    plt.subplot(inner_gs[in_idx])\n","    data = data_.ravel()\n","    valid_idx = ~np.isnan(data)\n","    if np.sum(valid_idx) > 0:\n","      if type(val_list[0]) == str:\n","        x, y = np.arange(len(val_list))[valid_idx], data[valid_idx]\n","      else:\n","        x, y = val_list[valid_idx], data[valid_idx]\n","      plt.plot(x, y)  # 앞에서부터 len(result) 만큼만    \n","      plt.title(sub_title + '_{:.2f}'.format(x[np.argmax(y)]))\n","    else:\n","      plt.title(sub_title)\n","\n","plt.suptitle(space_.join(title_list))\n","plt.show()\n","# print(\"\\n\")"]},{"cell_type":"code","source":["\n","# ------------ plot survey_res ------------ #\n","title_list = [\"short\", \"long\", \"both\"]\n","sub_title_list = ['prcn', 'wb', 'len_pr', 'dpf', 'wr', 'sr', 'acc_pr', 'sum_pr', 'min_pr', 'liqd', 'acc_mdd', 'sum_mdd']\n","space_ = \" \" * 120\n","\n","fig = plt.figure(figsize=(24, 8))\n","plt.style.use('dark_background')\n","gs = gridspec.GridSpec(nrows=1,\n","                        ncols=3,\n","                        # height_ratios=[1, 1, 1]\n","                      )\n","# nrows, ncols, h_r = 3, 3, [1, 1, 1]\n","nrows, ncols, h_r = 3, 4, [1, 1, 1]\n","# nrows, ncols, h_r = 4, 3, [1, 1, 1, 1]\n","# if d_idx == 0:\n","# else:\n","  # nrows, ncols, h_r = 2, 2, [1, 1]\n","\n","for d_idx, (title_name, survey_res) in enumerate(zip(title_list, survey_res_list)):  \n","  inner_gs = gs[d_idx].subgridspec(nrows=nrows,\n","                        ncols=ncols,\n","                        height_ratios=h_r\n","                      )\n","  for in_idx, (data_, sub_title) in enumerate(zip(survey_res.T, sub_title_list)):\n","    plt.subplot(inner_gs[in_idx])\n","    data = data_.ravel()\n","    valid_idx = ~np.isnan(data)\n","    if np.sum(valid_idx) > 0:\n","      if type(val_list[0]) == str:\n","        x, y = np.arange(len(val_list))[valid_idx], data[valid_idx]\n","      else:\n","        x, y = val_list[valid_idx], data[valid_idx]\n","      plt.plot(x, y)  # 앞에서부터 len(result) 만큼만    \n","      plt.title(sub_title + '_{:.2f}'.format(x[np.argmax(y)]))\n","    else:\n","      plt.title(sub_title)\n","\n","plt.suptitle(space_.join(title_list))\n","plt.show()"],"metadata":{"id":"oE5zkT75Beiy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EJ4f-3Zf4ImT"},"source":["### backtrader validation"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pbYUlJl34ImU"},"outputs":[],"source":["# ------ open validation ------ #\n","long_open_ = res_df['long_open_{}'.format(config.selection_id)].to_numpy()\n","long_open_ts = list(map(lambda x : str(x), res_df.index[long_open_ == 1]))  "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wyYMYcxx4ImV"},"outputs":[],"source":["long_index = open_info_df.side == 'BUY'\n","\n","for ts in res_df.index[open_info_df.index[long_index]]:\n","  print(ts)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BPI-9QX74ImW"},"outputs":[],"source":["trade_log_name = \"ETHUSDT_1650120909.pkl\"\n","trade_log_dir_path = \"./trade_log/0405_wave_trader_realterm\"\n","\n","with open(os.path.join(trade_log_dir_path, trade_log_name), 'rb') as f:\n","  trade_log = pickle.load(f)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FMXhzaTK4ImX"},"outputs":[],"source":["trade_log"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DiTKuq9T4ImY"},"outputs":[],"source":["# 1. ts 에 pair 된 en_p, ex_p 만 비교하면 될 것\n","#   -> open_idx, en_idx, ex_idx 조회하면 될 것\n","\n","pos_side = \"BUY\" # SELL BUY\n","val_obj = short_obj if pos_side == \"SELL\" else long_obj\n","\n","# ------ get idep trade_info ------ #\n","en_ts = list(map(lambda x : str(x), res_df.index[val_obj[2].astype(int).ravel()])) \n","ex_ts = list(map(lambda x : str(x), res_df.index[val_obj[3].astype(int).ravel()])) \n","en_p = val_obj[0].ravel()\n","ex_p = val_obj[1].ravel()\n","\n","# ------ execute ts comparison ------ #\n","logged_en_ts = [k for k, v in trade_log.items() if 'entry' in v if pos_side in v]\n","\n","lacked_ts = [ts for ts in en_ts if not ts in logged_en_ts]   # trade_log 에 없는 거래\n","added_ts = [ts for ts in logged_en_ts if not ts in en_ts]    # trade_log 에만 있는 거래\n","\n","print(lacked_ts)\n","print(added_ts)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VnTmGTJI4ImZ"},"outputs":[],"source":["# ------ check added_ts ------ #\n","keys = list(trade_log.keys())\n","\n","for k_i in range(len(keys)):\n","  if keys[k_i] in added_ts:\n","    # print(trade_log[keys[k_i]])\n","    # print(trade_log[keys[k_i + 1]])\n","    print(keys[k_i], trade_log[keys[k_i]])\n","    print(keys[k_i + 1], trade_log[keys[k_i + 1]])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Vn5x7mcP4ImZ"},"outputs":[],"source":["# ------ price sync_check ------ #\n","accept_price_gap = 0.1\n","for i in range(len(en_ts)):\n","  try:\n","    print(en_ts[i], trade_log[en_ts[i]][0] - en_p[i])\n","    # print(trade_log[str(ex_ts[i])])\n","    # print(ex_ts[i], trade_log[ex_ts[i]][0] - ex_p[i])\n","    print(ex_ts[i])\n","    print()\n","\n","  except Exception as e:\n","    print(e)\n"]},{"cell_type":"markdown","metadata":{"id":"1GVZ03zDyU2N"},"source":["### legacy"]},{"cell_type":"markdown","metadata":{"id":"IWO7KkqltMFt"},"source":["#### main_functions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MY1csdNRLGsk"},"outputs":[],"source":["def get_open_info_df_v2(ep_loc_v2, res_df, np_timeidx, ID_list, config_list, id_idx_list, open_num=1):\n","  start_0 = time.time()\n","  # ------ get mr_res, zone_arr ------ #\n","  short_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.SELL) for config_ in config_list])\n","  long_mr_res_obj = np.array([ep_loc_v2(res_df, config_, np_timeidx, show_detail=True, ep_loc_side=OrderSide.BUY) for config_ in config_list])\n","  short_open_idx_list = [np.where(res_df['short_open{}_{}'.format(open_num, id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, short_mr_res_obj[:, 0].astype(np.float64))]   # \"point * mr_Res\"\n","  long_open_idx_list = [np.where(res_df['long_open{}_{}'.format(open_num, id)].to_numpy() * mr_res)[0] for id, mr_res in zip(ID_list, long_mr_res_obj[:, 0].astype(np.float64))]  # zip 으로 zone (str) 과 묶어서 dtype 변경됨\n","\n","  # ------ open_info_arr ------ #\n","  short_side_list = [np.full(len(list_), OrderSide.SELL) for list_ in short_open_idx_list]\n","  long_side_list = [np.full(len(list_), OrderSide.BUY) for list_ in long_open_idx_list]\n","\n","  short_zone_list = [zone_res[short_open_idx] for zone_res, short_open_idx in zip(short_mr_res_obj[:, 1], short_open_idx_list)]\n","  long_zone_list = [zone_res[long_open_idx] for zone_res, long_open_idx in zip(long_mr_res_obj[:, 1], long_open_idx_list)]\n","\n","  short_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, short_open_idx_list)]\n","  long_id_list = [np.full(len(list_), id) for id, list_ in zip(ID_list, long_open_idx_list)]\n","\n","  selected_id_idx = np.arange(len(id_idx_list))\n","  short_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, short_open_idx_list)]\n","  long_id_idx_list = [np.full(len(list_), id) for id, list_ in zip(selected_id_idx, long_open_idx_list)]\n","\n","  # ------ get open_info_df ------ #\n","  #   series 만들어서 short / long 끼리 합치고 둘이 합치고, 중복은 우선 순위 정해서 제거\n","  short_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(short_open_idx_list, zip(short_side_list, short_zone_list, short_id_list, short_id_idx_list))]\n","  long_open_df_list = [pd.DataFrame(index=index_, data=np.vstack((data_)).T, columns=['side', 'zone', 'id', 'id_idx']) for index_, data_ in zip(long_open_idx_list, zip(long_side_list, long_zone_list, long_id_list, long_id_idx_list))]\n","\n","  open_info_df = pd.concat(short_open_df_list + long_open_df_list)\n","  # ------ sorting + unique ------ #\n","  open_info_df.sort_index(inplace=True)\n","  # print(len(open_info_df))\n","  # print(len(open_info_df))\n","  # open_info_df.head()\n","  print(\"get_open_info_df elapsed time :\", time.time() - start_0)\n","  return open_info_df[~open_info_df.index.duplicated(keep='first')]  # 먼저 순서를 우선으로 지정  "]},{"cell_type":"code","execution_count":24,"metadata":{"id":"eiQ36_SLLE3w","executionInfo":{"status":"ok","timestamp":1653017735678,"user_tz":-540,"elapsed":380,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def get_res_v6(res_df, open_info_df_list, ohlc_list, config_list, np_timeidx, funcs, inversion=False, test_ratio=0.3, plot_is=True, signi=False):\n","  # ------------ make open_info_list ------------ #\n","  open_idx1, open_idx2 = [open_info_df.index.to_numpy() for open_info_df in open_info_df_list]\n","  len_df = len(res_df)\n","\n","  sample_len = int(len_df * (1 - test_ratio))\n","  sample_idx1 = (open_idx1 < sample_len) == plot_is  # in / out sample plot 여부\n","  sample_idx2 = (open_idx2 < sample_len) == plot_is  # in / out sample plot 여부\n","\n","  sample_open_idx1 = open_idx1[sample_idx1]\n","  sample_open_idx2 = open_idx2[sample_idx2]\n","\n","  # ------------ open_info_list 기준 = p1 ------------ #\n","  sample_open_info_df1 = open_info_df_list[0][sample_idx1]\n","  sample_open_info_df1, sample_open_info_df2 = [df_[idx_] for df_, idx_ in zip(open_info_df_list, [sample_idx1, sample_idx2])]\n","  open_info1 = [sample_open_info_df1[col_].to_numpy() for col_ in sample_open_info_df1.columns]\n","  open_info2 = [sample_open_info_df2[col_].to_numpy() for col_ in sample_open_info_df2.columns]\n","  # side_arr, zone_arr, id_arr, id_idx_arr = open_info1\n","  side_arr, _, _, _ = open_info1\n","\n","  # ------------ get paired_res ------------ #\n","  start_0 = time.time()\n","  paired_res = en_ex_pairing_v6(res_df, [sample_open_idx1, sample_open_idx2], [open_info1, open_info2], ohlc_list, config_list, np_timeidx, funcs)\n","  # valid_openi_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr = paired_res\n","  print(\"en_ex_pairing elapsed time :\", time.time() - start_0)  #  0.37 --> 0.3660471439361572 --> 0.21(lesser if)\n","\n","  # ------------ idep_plot ------------ #\n","  start_0 = time.time()\n","  high, low = ohlc_list[1:3]\n","  res = idep_plot_v15(res_df, len_df, config_list[0], high, low, sample_open_idx1, side_arr, paired_res, inversion=inversion, sample_ratio=1 - test_ratio, signi=signi)\n","  print(\"idep_plot elapsed time :\", time.time() - start_0)   # 1.40452 (v6) 1.4311 (v5)\n","\n","  return res"]},{"cell_type":"code","execution_count":33,"metadata":{"id":"8LiKwfiJ4bvM","executionInfo":{"status":"ok","timestamp":1653018184452,"user_tz":-540,"elapsed":2,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def plot_info_v7(gs, gs_idx, len_df, sample_len, tr, hhm, hhm2, hlm2, bars_in, pr, total_pr, cum_pr, liqd, leverage, title_position, fontsize):\n","  try:\n","    plt.subplot(gs[gs_idx])\n","    idep_res_obj = get_res_info_nb_v2(sample_len, pr, total_pr, cum_pr, liqd)\n","    plt.plot(cum_pr)\n","    plt.plot(idep_res_obj[-1], color='gold')\n","    if sample_len is not None:\n","      plt.axvline(sample_len, alpha=1., linestyle='--', color='#ffeb3b')\n","    plt.xlim(0, len_df)\n","\n","    title_str = \"tr : {:.3f}\\n hhm : {:.3f}\\n hhm2 : {:.3f}\\n hlm2 : {:.3f}\\n bars_in : {:.3f}\\n len_pr : {}\\n dpf : {:.3f}\\n wr : {:.3f}\\n sr : {:.3f}\\n acc_pr : {:.3f}\\n sum_pr : {:.3f}\\n\" +\\\n","              \"min_pr : {:.3f}\\n liqd : {:.3f}\\n acc_mdd : -{:.3f}\\n sum_mdd : -{:.3f}\\n leverage {}\"\n","    plt.title(title_str.format(tr, hhm, hhm2, hlm2, bars_in, *idep_res_obj[:-1], leverage), position=title_position, fontsize=fontsize)\n","  except Exception as e:\n","    print(\"error in plot_info :\", e)\n","\n","  return gs_idx + 1"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"xafHpMLwESKf","executionInfo":{"status":"ok","timestamp":1653022524414,"user_tz":-540,"elapsed":424,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def idep_plot_v15(res_df, len_df, config, high, low, open_idx, side_arr, paired_res, inversion=False, sample_ratio=0.7, title_position=(0.5, 0.5),\n","                  fontsize=15, signi=False):\n","    if not signi:\n","        plt.style.use(['dark_background', 'fast'])\n","        plt.figure(figsize=(24, 8))\n","        gs = gridspec.GridSpec(nrows=2,  # row 몇 개\n","                               ncols=3,  # col 몇 개\n","                               height_ratios=[10, 1]\n","                               # height_ratios=[10, 10, 1]\n","                               )\n","    gs_idx = 0\n","    # plt.suptitle(key)\n","\n","    p_ranges, p_qty_ratio = literal_eval(config.tp_set.p_ranges), literal_eval(config.tp_set.p_qty_ratio)\n","    assert np.sum(p_qty_ratio) == 1.0\n","    assert len(p_ranges) == len(p_qty_ratio)\n","\n","    if sample_ratio is not None:\n","        sample_len = int(len_df * sample_ratio)\n","    else:\n","        sample_len = len_df\n","\n","    # ------ short & long data preparation ------ #\n","    # start_0 = time.time()\n","    p1_openi_arr, p2_idx_arr, pair_idx_arr, pair_price_arr, lvrg_arr, fee_arr, tpout_arr, tr_arr = paired_res\n","\n","    assert len(p1_openi_arr) != 0, \"assert len(p1_openi_arr) != 0\"\n","\n","    short_p1_openi_idx = np.where(side_arr[p1_openi_arr] == OrderSide.SELL)[0]  # p1_openi_arr 에 대한 idx, # side_arr,\n","    long_p1_openi_idx = np.where(side_arr[p1_openi_arr] == OrderSide.BUY)[0]\n","\n","    p1_idx = open_idx[p1_openi_arr].reshape(-1, 1)\n","\n","    short_obj = np.hstack((pair_price_arr, pair_idx_arr, p1_idx))[short_p1_openi_idx]\n","    long_obj = np.hstack((pair_price_arr, pair_idx_arr, p1_idx))[long_p1_openi_idx]\n","    both_obj = np.vstack((short_obj, long_obj))\n","    print(\"short_obj.shape :\", short_obj.shape)\n","    print(\"long_obj.shape :\", long_obj.shape)\n","\n","    short_obj, long_obj, both_obj = [np.split(obj_, 5, axis=1) for obj_ in [short_obj, long_obj, both_obj]]\n","\n","    short_p2_idx_arr, long_p2_idx_arr = [p2_idx_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    short_lvrg_arr, long_lvrg_arr = [lvrg_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    short_fee_arr, long_fee_arr = [fee_arr[openi_idx_].reshape(-1, 1) for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    short_tpout_arr, long_tpout_arr = [tpout_arr[openi_idx_] for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    # short_bias_arr, long_bias_arr = [bias_arr[openi_idx_] for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    short_tr_arr, long_tr_arr = [tr_arr[openi_idx_] for openi_idx_ in [short_p1_openi_idx, long_p1_openi_idx]]\n","    # print(\"long_bias_arr.shape :\", long_bias_arr.shape)\n","    # print(\"elapsed time :\", time.time() - start_0)\n","\n","    short_p1_true_bias_bool, long_p1_true_bias_bool, short_p2_true_bias_bool, long_p2_true_bias_bool, short_en_wave_1, short_en_wave_0, long_en_wave_1, long_en_wave_0 = \\\n","      get_wave_bias_v3(res_df, config, high, low, len_df, short_obj, long_obj)\n","\n","    print(\"len(short_p1_true_bias_bool) :\", len(short_p1_true_bias_bool))\n","    print(\"len(long_p1_true_bias_bool) :\", len(long_p1_true_bias_bool))\n","\n","    # short_true_bias_bool, short_false_bias_bool, long_true_bias_bool, long_false_bias_bool, short_en_tp1, short_en_out0, long_en_tp1, long_en_out0 = \\\n","    #     get_wave_bias_v2(res_df, config, high, low, len_df, short_obj, long_obj)\n","\n","    len_short, len_long = len(short_p1_openi_idx), len(long_p1_openi_idx)\n","\n","    # ------ plot_data ------ #\n","    try:\n","        # start_0 = time.time()\n","        if len_short == 0:\n","            short_pr = []\n","            gs_idx += 1\n","        else:\n","            short_tr = short_tr_arr.mean()\n","            short_pr, short_liqd = get_pr_v4(OrderSide.SELL, high, low, short_obj, short_tpout_arr, short_lvrg_arr, short_fee_arr, p_ranges,\n","                                             p_qty_ratio, inversion)\n","            short_total_pr = to_total_pr(len_df, short_pr, short_obj[-2])\n","            short_cum_pr = np.cumprod(short_total_pr)\n","            short_hhm = hhm(short_p1_true_bias_bool)\n","            short_hhm2, short_hlm2 = hhm(short_p2_true_bias_bool), hlm(short_pr, short_p2_true_bias_bool)\n","            short_trade_ticks = np.mean(short_obj[-2] - short_obj[-1])\n","            if signi:\n","                short_idep_res_obj = (short_hhm2, short_hlm2) + get_res_info_nb_v2(sample_len, short_pr, short_total_pr, short_cum_pr, short_liqd)\n","            else:\n","                gs_idx = plot_info_v7(gs, gs_idx, len_df, sample_len, short_tr, short_hhm, short_hhm2, short_hlm2, short_trade_ticks, short_pr, short_total_pr,\n","                                      short_cum_pr, short_liqd, short_lvrg_arr[-1], title_position, fontsize)\n","        # print(\"elapsed time :\", time.time() - start_0)\n","\n","    except Exception as e:\n","        gs_idx += 1\n","        print(\"error in short plot_data :\", e)\n","\n","    try:\n","        # start_0 = time.time()\n","        if len_long == 0:\n","            long_pr = []\n","            gs_idx += 1\n","        else:\n","            long_tr = long_tr_arr.mean()\n","            long_pr, long_liqd = get_pr_v4(OrderSide.BUY, high, low, long_obj, long_tpout_arr, long_lvrg_arr, long_fee_arr, p_ranges, p_qty_ratio,\n","                                           inversion)\n","            long_total_pr = to_total_pr(len_df, long_pr, long_obj[-2])\n","            long_cum_pr = np.cumprod(long_total_pr)\n","            long_hhm = hhm(long_p1_true_bias_bool)\n","            long_hhm2, long_hlm2 = hhm(long_p2_true_bias_bool), hlm(long_pr, long_p2_true_bias_bool)\n","            long_trade_ticks = np.mean(long_obj[-2] - long_obj[-1])\n","            if signi:\n","                long_idep_res_obj = (long_hhm2, long_hlm2) + get_res_info_nb_v2(sample_len, long_pr, long_total_pr, long_cum_pr, long_liqd)\n","            else:\n","                gs_idx = plot_info_v7(gs, gs_idx, len_df, sample_len, long_tr, long_hhm, long_hhm2, long_hlm2, long_trade_ticks, long_pr, long_total_pr,\n","                                      long_cum_pr, long_liqd, long_lvrg_arr[-1], title_position, fontsize)\n","        # print(\"elapsed time :\", time.time() - start_0)\n","    except Exception as e:\n","        gs_idx += 1\n","        print(\"error in long plot_data :\", e)\n","\n","    try:\n","        # start_0 = time.time()\n","        if len_short * len_long == 0:\n","            both_pr = []\n","            gs_idx += 1\n","        else:\n","            both_tr = (short_tr + long_tr) / 2\n","            both_pr = np.vstack((short_pr, long_pr))  # for 2d arr, obj 를 1d 로 만들지 않는 이상, pr 은 2d 유지될 것\n","            both_total_pr = to_total_pr(len_df, both_pr, both_obj[-2])\n","            both_cum_pr = np.cumprod(both_total_pr)\n","            both_liqd = min(short_liqd, long_liqd)\n","            both_p1_true_bias_bool = np.vstack((short_p1_true_bias_bool, long_p1_true_bias_bool))  # vstack for 2d arr\n","            both_p2_true_bias_bool = np.vstack((short_p2_true_bias_bool, long_p2_true_bias_bool))  # vstack for 2d arr\n","            both_hhm = hhm(both_p1_true_bias_bool)\n","            both_hhm2, both_hlm2 = hhm(both_p2_true_bias_bool), hlm(both_pr, both_p2_true_bias_bool)\n","            both_trade_ticks = np.mean(both_obj[-2] - both_obj[-1])\n","            if signi:\n","                both_idep_res_obj = (both_hhm2, both_hlm2) + get_res_info_nb_v2(sample_len, both_pr, both_total_pr, both_cum_pr, both_liqd)\n","            else:\n","                gs_idx = plot_info_v7(gs, gs_idx, len_df, sample_len, both_tr, both_hhm, both_hhm2, both_hlm2, both_trade_ticks, both_pr, both_total_pr,\n","                                      both_cum_pr, both_liqd, lvrg_arr[-1], title_position, fontsize)\n","        # print(\"elapsed time :\", time.time() - start_0)\n","    except Exception as e:\n","        gs_idx += 1\n","        print(\"error in both plot_data :\", e)\n","\n","    if not signi:\n","        if len_short * len_long > 0:\n","            for obj, bias_arr, cum_pr in zip([short_obj, long_obj, both_obj], [short_p2_true_bias_bool, long_p2_true_bias_bool, both_p2_true_bias_bool],\n","                                             [short_cum_pr, long_cum_pr, both_cum_pr]):\n","                try:\n","                    # start_0 = time.time()\n","                    gs_idx = frq_dev_plot_v4(gs, gs_idx, len_df, sample_len, obj[-2], bias_arr, cum_pr[-1], fontsize)\n","                    # print(\"elapsed time :\", time.time() - start_0)\n","                except Exception as e:\n","                    gs_idx += 1\n","                    print(\"error in frq_dev_plot :\", e)\n","            plt.show()\n","            plt.close()\n","\n","        return short_pr, short_obj, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_p2_true_bias_bool, short_p2_idx_arr, short_en_wave_1, short_en_wave_0, \\\n","               long_pr, long_obj, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_p2_true_bias_bool, long_p2_idx_arr, long_en_wave_1, long_en_wave_0\n","\n","    else:\n","        return [short_idep_res_obj[:-1], long_idep_res_obj[:-1], both_idep_res_obj[:-1]]"]},{"cell_type":"code","source":["def get_wave_bias_v3(res_df, config, high, low, len_df, short_obj, long_obj):\n","    short_op_idx = short_obj[-1].astype(int)\n","    short_en_idx = short_obj[2].astype(int)\n","    short_wave_1 = ffill_line(res_df['short_wave_1_{}'.format(config.selection_id)].to_numpy(), short_op_idx)  # en_idx 에 sync 된 open_idx 를 사용해야함\n","    short_wave_0 = ffill_line(res_df['short_wave_0_{}'.format(config.selection_id)].to_numpy(), short_op_idx)\n","\n","    long_op_idx = long_obj[-1].astype(int)\n","    long_en_idx = long_obj[2].astype(int)\n","    long_wave_1 = ffill_line(res_df['long_wave_1_{}'.format(config.selection_id)].to_numpy(), long_op_idx)\n","    long_wave_0 = ffill_line(res_df['long_wave_0_{}'.format(config.selection_id)].to_numpy(), long_op_idx)\n","\n","    short_unq_op_idx = np.unique(short_op_idx).reshape(-1, 1)   # 통일성을 위해 2d 로 설정\n","    long_unq_op_idx = np.unique(long_op_idx).reshape(-1, 1)\n","\n","    bias_info_tick = config.tr_set.bias_info_tick\n","\n","    # 1. min 에 초점을 맞추는 거니까, touch 없을시 len_df 로 설정\n","    # 2. future_data 사용이니까, shift(-bias_info_tick) 설정\n","    # 3. entry 다음 idx 부터 -> tp & out 체결 logic 이 현재 entry_idx 부터 되어있어서 취소\n","    len_df_range = np.arange(len_df)\n","    last_idx = len_df - 1\n","    shift_range = bias_info_tick - 1  # entry_idx 까지 포함해서 wave_bias check\n","\n","    short_wave_1_touch_idx = pd.Series(np.where(low <= short_wave_1, len_df_range, last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-shift_range).to_numpy()\n","    short_wave_0_touch_idx = pd.Series(np.where(high >= short_wave_0, len_df_range, last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-shift_range).to_numpy()\n","    long_wave_1_touch_idx = pd.Series(np.where(high >= long_wave_1, len_df_range, last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-shift_range).to_numpy()\n","    long_wave_0_touch_idx = pd.Series(np.where(low <= long_wave_0, len_df_range, last_idx)).rolling(bias_info_tick, min_periods=1).min().shift(-shift_range).to_numpy()\n","\n","    short_wave_1_op_touch_idx = short_wave_1_touch_idx[short_unq_op_idx]   # for hhm\n","    short_wave_0_op_touch_idx = short_wave_0_touch_idx[short_unq_op_idx]\n","    long_wave_1_op_touch_idx = long_wave_1_touch_idx[long_unq_op_idx]\n","    long_wave_0_op_touch_idx = long_wave_0_touch_idx[long_unq_op_idx]\n","\n","    short_wave_1_en_touch_idx = short_wave_1_touch_idx[short_en_idx]   # for hhm2, hlm2\n","    short_wave_0_en_touch_idx = short_wave_0_touch_idx[short_en_idx]\n","    long_wave_1_en_touch_idx = long_wave_1_touch_idx[long_en_idx]\n","    long_wave_0_en_touch_idx = long_wave_0_touch_idx[long_en_idx]\n","\n","    short_p1_true_bias_bool = short_wave_1_op_touch_idx < short_wave_0_op_touch_idx  # true_bias 의 조건\n","    long_p1_true_bias_bool = long_wave_1_op_touch_idx < long_wave_0_op_touch_idx\n","    \n","    short_p2_true_bias_bool = short_wave_1_en_touch_idx < short_wave_0_en_touch_idx  # true_bias 의 조건\n","    long_p2_true_bias_bool = long_wave_1_en_touch_idx < long_wave_0_en_touch_idx\n","\n","    return short_p1_true_bias_bool, long_p1_true_bias_bool, short_p2_true_bias_bool, long_p2_true_bias_bool, short_wave_1[short_en_idx], short_wave_0[\n","        short_en_idx], long_wave_1[long_en_idx], long_wave_0[long_en_idx]"],"metadata":{"id":"58_DPfeB6dwk","executionInfo":{"status":"ok","timestamp":1653017989968,"user_tz":-540,"elapsed":360,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["def frq_dev_plot_v4(gs, gs_idx, len_df, sample_len, exit_idx, bias_arr, acc_pr, fontsize):\n","\n","    plt.subplot(gs[gs_idx])\n","  \n","    plt.vlines(exit_idx[bias_arr], ymin=0, ymax=1, color='#00ff00')\n","    # plt.vlines(exit_idx[~bias_arr], ymin=0, ymax=1, color='#ff00ff')\n","    plt.xlim(0, len_df)\n","\n","    title_msg = \"periodic_pr\\n acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\"  # \\n rev_acc_day : {:.4f}\\n month : {:.4f}\\n year : {:.4f}\"\n","    plt.title(title_msg.format(*get_period_pr(sample_len, acc_pr), fontsize=fontsize))\n","\n","    return gs_idx + 1"],"metadata":{"id":"Aqju85YVlJVQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EFyWTuscH8VH"},"source":["#### get paired_res function"]},{"cell_type":"code","execution_count":40,"metadata":{"id":"qfbtFVMR01UJ","executionInfo":{"status":"ok","timestamp":1653024392632,"user_tz":-540,"elapsed":1451,"user":{"displayName":"7th June","userId":"08178289703395036410"}}},"outputs":[],"source":["def en_ex_pairing_v6(res_df, open_idx_list, open_info_list, ohlc_list, config_list, np_timeidx, funcs):  # 이미 충분히 줄여놓은 idx 임\n","\n","    open_info1, open_info2 = open_info_list\n","    side_arr1, _, _, id_idx_arr1 = open_info1\n","    side_arr2, _, _, _ = open_info2\n","\n","    expiry_p1, expiry_p2, lvrg_set = funcs\n","\n","    p1_openi_list, p2_idx_list, pair_idx_list, pair_price_list, lvrg_list, fee_list, tpout_list, tr_list = [[] for li in range(8)]\n","    len_df = len(res_df)\n","    \n","    open_idx1, open_idx2 = open_idx_list\n","    len_open_idx1 = len(open_idx1)\n","    len_open_idx2 = len(open_idx2)\n","    i, open_i1, open_i2 = 0, -1, -1  # i for total_res_df indexing\n","\n","    while 1:   # for p1's loop\n","\n","        # Todo, \n","        #   1. (갱신) p1's open_i + 1 과 op_idx 를 꺼내오는 건, eik1 또는 tp 체결의 경우만 해당됨, \n","        #   2. out 의 경우 p2's op_idx 기준으로 retry 필요\n","        #     a. 또한, p2's op_idx > p1's op_idx\n","\n","        # ============ get p1_info ============ #\n","        # if eik1 or tp_done or first loop:\n","        open_i1 += 1  # 확인 끝났으면 조기 이탈(+1), 다음 open_idx 조사 진행\n","        if open_i1 >= len_open_idx1:\n","            break\n","\n","        op_idx1 = open_idx1[open_i1]  # open_i1 는 i 와 별개로 운영\n","        if op_idx1 < i:  # i = 이전 거래 끝난후의 res_df index - \"거래 종료후 거래 시작\", '<' : 거래 종료시점 진입 가능하다는 의미\n","            continue\n","\n","        # ------ set loop index i ------ #\n","        i = op_idx1      # + 1 --> op_idx1 = op_idx2 가능함 # open_signal 이 close_bar.shift(1) 이라고 가정하고 다음 bar 부터 체결확인한다는 의미\n","        if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","            break\n","\n","        # ------ dynamic arr info by ID ------ #\n","        #     1. 해당 id 로 config 재할당해야함\n","        #       a. use open_i1\n","        open_side = side_arr1[open_i1]\n","        id_idx = id_idx_arr1.astype(int)[open_i1]\n","        config = config_list[id_idx]\n","        selection_id = config.selection_id\n","\n","        side_pos = 'short' if open_side == OrderSide.SELL else 'long'       \n","        \n","        tp_j = op_idx1\n","        prev_open_i2 = open_i2\n","        print(\"============ op_idx1 : {} {} ======\".format(op_idx1, open_side))\n","\n","        # ============ entry loop ============ #\n","        while 1:  # for p2's loop (allow retry)\n","\n","          # ============ get p2_info ============ #\n","          open_i2 += 1  # 확인 끝났으면 조기 이탈(+1), 다음 open_idx 조사 진행\n","          if open_i2 >= len_open_idx2:  # open_i2 소진\n","              break\n","\n","          # ------ check side sync. ------ #\n","          if open_side != side_arr2[open_i2]:\n","            continue\n","\n","          op_idx2 = open_idx2[open_i2]  # open_i2 는 i 와 별개로 운영\n","          if op_idx2 < i:   # 이곳 i = op_idx1 + 1 or p2's exec_j or exit_loop's i + 1\n","              continue\n","          \n","          i = op_idx2 + 1  # open_signal 이 close_bar.shift(1) 이라고 가정하고 다음 bar 부터 체결확인한다는 의미\n","          if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","              break\n","\n","          # ------ load tr_data ------ #\n","          tp_arr = res_df['{}_tp_{}'.format(side_pos, selection_id)].to_numpy()\n","          ep_arr = res_df['{}_ep_{}'.format(side_pos, selection_id)].to_numpy()\n","          out_arr = res_df['{}_out_{}'.format(side_pos, selection_id)].to_numpy()\n","\n","          tp_ = tp_arr[op_idx1]\n","          ep_ = ep_arr[op_idx2]\n","          out_ = out_arr[op_idx2]\n","\n","          tp_1_ = res_df['{}_tp_1_{}'.format(side_pos, selection_id)].to_numpy()[op_idx1]  # for p2_box location & p1's exipiry\n","          tp_0_ = res_df['{}_tp_0_{}'.format(side_pos, selection_id)].to_numpy()[op_idx1]\n","          tp_gap_ = res_df['{}_tp_gap_{}'.format(side_pos, selection_id)].to_numpy()[op_idx1]\n","         \n","          out_1_ = res_df['{}_out_1_{}'.format(side_pos, selection_id)].to_numpy()[op_idx2]\n","          out_0_ = res_df['{}_out_0_{}'.format(side_pos, selection_id)].to_numpy()[op_idx2]\n","          out_gap_ = res_df['{}_out_gap_{}'.format(side_pos, selection_id)].to_numpy()[op_idx2]\n","          \n","          # ------ check p1's expiry - Todo, priority ------ # - p2_box 생성 이전의 hl_survey\n","          # 1. op_idx1 ~ op_idx2 까지의 hl_check          \n","          if op_idx1 < op_idx2:\n","            print(\"op_idx1, op_idx2 :\", op_idx1, op_idx2, side_arr2[open_i2])\n","            if expiry_p1(res_df, config, op_idx1, op_idx2, tp_1_, tp_0_, tp_gap_, ohlc_list[1:3], open_side):   # p1's expiry\n","                print(\"expiry_p1 break\")\n","                i = op_idx1   # + 1 <-- 구지, 필요 없음  # op_idx1 과 op_idx2 사이의 op_idx1' 을 살리기 위함, 즉 바로 다음 op_idx1 로 회귀 (건너뛰지 않고)\n","                open_i2 = prev_open_i2\n","                break   # continue, to p1's loop  \n","\n","          # ------ p2_box location & tr_threshold ------ #          \n","          if open_side == OrderSide.SELL:\n","            if not ((tp_1_ + tp_gap_ * config.tr_set.p2_box_k1 < out_1_) and (out_0_ < tp_0_ - tp_gap_ * config.tr_set.p2_box_k2)):\n","              print(\"p2_box continue\")\n","              continue\n","            tr_ = abs((ep_ / tp_ - config.trader_set.limit_fee - 1) / (ep_ / out_ - config.trader_set.market_fee - 1))\n","          else:\n","            if not ((tp_1_ - tp_gap_ * config.tr_set.p2_box_k1 > out_1_) and (out_0_ > tp_0_ + tp_gap_ * config.tr_set.p2_box_k2)):\n","              print(\"p2_box continue\")\n","              continue\n","            tr_ = abs((tp_ / ep_ - config.trader_set.limit_fee - 1) / (out_ / ep_ - config.trader_set.market_fee - 1))\n","\n","          # ------ check p2's expiry ------ #\n","          exec_j, ep_j, tp_j, out_j, entry_done, en_p, fee = check_entry_v4(res_df, config, op_idx2, tp_j, out_1_, out_gap_, len_df, open_side,\n","                                                                                  [*ohlc_list, ep_arr], expiry_p2)\n","          i = exec_j  # = entry_loop 를 돌고 나온 e_j\n","          if not entry_done:   # p2's expiry\n","              print(\"expiry_p2 conintue\")\n","              continue\n","\n","          # ------ leverage ------ #\n","          out = out_arr[out_j]  # lvrg_set use out on out_j (out_j shoud be based on p2)\n","          leverage = lvrg_set(res_df, config, open_side, en_p, out, fee)  # res_df 변수 사용됨 - 주석 처리 된 상태일뿐\n","          if leverage is None:\n","              print(\"leverage is None conintue\")\n","              continue   # to p2's loop\n","\n","          exit_done, cross_on = 0, 0\n","          # ------ check tpout_onexec ------ #\n","          # if not config.ep_set.static_ep and config.ep_set.entry_type == \"LIMIT\" and config.ep_set.tpout_onexec:\n","          if config.ep_set.entry_type == \"LIMIT\":\n","              if config.tp_set.tp_onexec:  # dynamic 은 tp_onexec 사용하는 의미가 없음\n","                  tp_j = exec_j\n","              if config.out_set.out_onexec:  # dynamic 은 out_onexec 사용하는 의미가 없음\n","                  out_j = exec_j\n","\n","          # ============ exit loop ============ #\n","          while 1:\n","              if not config.tp_set.static_tp:  # 앞으로 왠만하면 static 만 사용할 예정\n","                  tp_j = i\n","              if not config.out_set.static_out:\n","                  out_j = i\n","\n","              # ------------ out ------------ #  # out 우선 (보수적 검증)\n","              # ------ signal_out ------ #\n","              if not exit_done:\n","                  exit_done, cross_on, ex_p, fee = check_signal_out_v3(res_df, config, open_i2, i, len_df, fee, open_side, cross_on, exit_done, [*ohlc_list, np_timeidx])\n","              # ------ hl_out ------ #\n","              if config.out_set.hl_out != \"None\":\n","                  if not exit_done:  # and i != len_df - 1:\n","                      exit_done, ex_p, fee = check_hl_out_v2(config, i, out_j, len_df, fee, open_side, exit_done, [*ohlc_list, out_arr])\n","\n","              # ------------ tp ------------ #\n","              if not config.tp_set.non_tp and i != exec_j:\n","                if not exit_done:\n","                  exit_done, ex_p, fee = check_limit_tp_exec(res_df, config, open_i2, i, tp_j, len_df, fee, open_side, exit_done,\n","                                                            [*ohlc_list, [tp_arr]])  # 여기서는 j -> i 로 변경해야함\n","                  # if config.tp_set.tp_type in ['LIMIT']:  # 'BOTH' -> 앞으로는, LIMIT 밖에 없을거라 주석처리함\n","                  # if not exit_done and config.tp_set.tp_type in ['MARKET', 'BOTH']:\n","\n","              if exit_done:  # 이 phase 는 exit_phase 뒤에도 있어야할 것 - entry_done var. 사용은 안하겠지만\n","                  # ------ append dynamic vars. ------ #\n","                  p1_openi_list.append(open_i1)  # side, zone, start_ver arr 모두 openi_list 로 접근하기 위해 open_i 를 담음\n","                  p2_idx_list.append(op_idx2)\n","                  pair_idx_list.append([exec_j, i])  # entry & exit (체결 기준임)\n","                  pair_price_list.append([en_p, ex_p])\n","                  lvrg_list.append(leverage)\n","                  fee_list.append(fee)\n","                  tpout_list.append([tp_arr[tp_j], out_arr[out_j]])  # for tpout_line plot_check\n","                  tr_list.append(tr_)   # Todo, tr vectorize 불가함, 직접 구해주어야할 건데.. (오래걸리지 않을까 --> tr_set 데이터만 모아서 vecto 계산이 나을 것)\n","\n","                  # open_i += 1  # 다음 open_idx 조사 진행\n","                  break\n","\n","              # 1. 아래있으면, 체결 기준부터 tp, out 허용 -> tp 가 entry_idx 에 체결되는게 다소 염려되기는 함, 일단 진행 (그런 case 가 많지 않았으므로)\n","              # 2. 위에있으면, entry 다음 tick 부터 exit 허용\n","              i += 1\n","              if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","                  break\n","          \n","          if exit_done == 1:  # tp_done\n","            print(\"exit_done = {} break\".format(exit_done))\n","            break\n","          # else:\n","          #   continue  # to p2's loop\n","          print(\"exit_done = {} continue\".format(exit_done))\n","\n","          if i >= len_df:  # res_df 의 last_index 까지 돌아야함\n","                    break\n","\n","        # if not entry_done:   # expiry\n","        #     continue # to p1's loop\n","\n","        if i >= len_df:  # or open_i >= len_open_idx:  # res_df 의 last_index 까지 돌아야함\n","            break\n","        else:\n","            continue\n","\n","    return np.array(p1_openi_list), np.array(p2_idx_list), np.array(pair_idx_list), np.array(pair_price_list), np.array(lvrg_list), np.array(\n","        fee_list), np.array(tpout_list), np.array(tr_list)\n","\n","\n","def check_entry_v4(res_df, config, op_idx, tp_j, out_1_, out_gap_, len_df, open_side, np_datas, expiry):\n","    open, high, low, close, ep_arr = np_datas\n","    ep_j = op_idx\n","    # tp_j = op_idx\n","    out_j = op_idx\n","\n","    selection_id = config.selection_id    \n","    # allow_ep_in = 0 if config.ep_set.point2.use_point2 else 1\n","    entry_done = 0\n","    ep = None\n","\n","    if config.ep_set.entry_type == \"LIMIT\":\n","        fee = config.trader_set.limit_fee\n","\n","        for e_j in range(op_idx + 1, len_df):\n","            # ------ index setting for dynamic options ------ #\n","            if not config.ep_set.static_ep:\n","                ep_j = e_j  # dynamic_ep 를 위한 ep_index var.\n","                out_j = e_j  # dynamic_out 를 위한 out_index var. - 조건식이 static_ep 와 같이 있는 이유 모름 => dynamic_lvrg 로 사료됨\n","\n","            if not config.tp_set.static_tp:\n","                tp_j = e_j\n","\n","            # ------ expire_k & expire_tick ------ # - limit 사용하면 default 로 expire_k 가 존재해야함\n","            if expiry(res_df, config, op_idx, e_j, out_1_, out_gap_, [high, low], open_side):  # tp_j, \n","              break\n","\n","            # ------ point2 ------ #\n","            # if not allow_ep_in:\n","            #     allow_ep_in, out_j = ep_loc_point2(res_df, config, e_j, out_j, side=OrderSide.SELL)\n","            #     if allow_ep_in:\n","            #       if config.ep_set.point2.entry_type == \"LIMIT\":\n","            #         ep_j = e_j\n","            #         # print(\"e_j in point2 :\", e_j)\n","            #         continue\n","\n","            # ------ check ep_exec ------ #\n","            # if allow_ep_in:\n","              # if config.ep_set.point2.use_point2 and config.ep_set.point2.entry_type == 'MARKET':\n","              #   entry_done = 1\n","              #   ep = c[e_j]\n","              #   break\n","              # else:\n","\n","            if open_side == OrderSide.SELL:\n","              if high[e_j] >= ep_arr[ep_j]:\n","                  entry_done = 1\n","                  ep = ep_arr[ep_j]\n","                  if open[e_j] >= ep_arr[ep_j]:  # open comp 는 결국, 수익률에 얹어주는 logic (반보수) -> 사용 보류\n","                      ep = open[e_j]\n","                  break\n","            else:\n","              if low[e_j] <= ep_arr[ep_j]:\n","                  entry_done = 1\n","                  ep = ep_arr[ep_j]\n","                  if open[e_j] <= ep_arr[ep_j]:\n","                      ep = open[e_j]\n","                  break\n","\n","    else:  # market entry\n","        e_j = op_idx + 1\n","        entry_done = 1\n","        ep = close[op_idx]\n","        fee = config.trader_set.market_fee\n","\n","    return e_j, ep_j, tp_j, out_j, entry_done, ep, fee  # 다음 start_i <-- e_j 로 변경\n","    #   e_j => 다음 phase 의 시작 index <-> ep_j : ep 의 기준 index\n","    #   ep_j, tp_j, out_j 가 return 되어야함 - exit phase 에서 이어가기 위함\n","\n","\n","def check_limit_tp_exec(res_df, config, open_i, i, tp_j, len_df, fee, open_side, exit_done, np_datas):\n","\n","    open, high, low, close, tps = np_datas\n","    tp = None\n","    selection_id = config.selection_id\n","    len_tps = len(tps)\n","\n","    for tp_i, tp_arr in enumerate(tps):\n","\n","        #     decay adjustment    #\n","        #     tp_j includes dynamic_j - functionalize  #\n","        # try:\n","        #     if config.tr_set.decay_gap != \"None\":\n","        #         decay_share = (j - open_i) // config.tp_set.decay_term\n","        #         decay_remain = (j - open_i) % config.tp_set.decay_term\n","        #         if j != open_i and decay_remain == 0:\n","        #             if open_side == OrderSide.SELL:\n","        #                 tp_arr[tp_j] += res_df['short_tp_gap_{}'.format(selection_id)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","        #             else:\n","        #                 tp_arr[tp_j] -= res_df['long_tp_gap_{}'.format(selection_id)].iloc[open_i] * config.tr_set.decay_gap * decay_share\n","        # except:\n","        #     pass\n","\n","        if open_side == OrderSide.SELL:\n","            if low[i] <= tp_arr[tp_j]:  # and partial_tp_cnt == tp_i:  # we use static tp now\n","                # if low[i] <= tp_arr[i] <= h[i]: --> 이건 잘못되었음\n","                # partial_tp_cnt += 1 --> partial_tp 보류\n","\n","                # ------ dynamic tp ------ #\n","                if tp_arr[i] != tp_arr[i - 1] and not config.tp_set.static_tp:\n","                    # tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if open[i] < tp_arr[i]:\n","                        tp = open[i]\n","                    # tp limit 이 가능한 경우 - open 이 아직, tp 를 넘지 않은 경우\n","                    else:\n","                        tp = tp_arr[i]\n","\n","                # ------ static tp ------ #\n","                else:\n","                    #   tp limit 이 불가한 경우 - open 이 이미, tp 를 넘은 경우\n","                    if open[i] < tp_arr[tp_j]:  # static 해놓고 decay 사용하면 dynamic 이니까\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = open[i]  # tp_j -> open_i 를 가리키기 때문에 decay 는 한번만 진행되는게 맞음\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","        else:\n","            if high[i] >= tp_arr[tp_j]:\n","                # ------ dynamic tp ------ #\n","                if tp_arr[i] != tp_arr[i - 1] and not config.tp_set.static_tp:\n","                    if open[i] > tp_arr[i]:\n","                        tp = open[i]\n","                    else:\n","                        tp = tp_arr[i]\n","\n","                # ------ static tp ------ #\n","                else:\n","                    if open[i] > tp_arr[tp_j]:\n","                        if config.tr_set.decay_gap != \"None\" and decay_remain == 0:\n","                            tp = open[i]\n","                        else:\n","                            tp = tp_arr[tp_j]\n","                    else:\n","                        tp = tp_arr[tp_j]\n","\n","                if tp_i == len_tps - 1:\n","                    exit_done = 1  # partial 을 고려해 exit_done = 1 상태는 tp_i 가 last_index 로 체결된 경우만 해당\n","\n","    if exit_done:\n","        fee += config.trader_set.limit_fee\n","\n","    return exit_done, tp, fee\n","\n","\n","def check_signal_out_v3(res_df, config, open_i, i, len_df, fee, open_side, cross_on, exit_done, np_datas):    \n","\n","    _, _, _, close, np_timeidx = np_datas\n","    ex_p = None\n","    selection_id = config.selection_id\n","\n","    # ------ timestamp ------ #\n","    if config.out_set.tf_exit != \"None\":\n","        if np_timeidx[i] % config.out_set.tf_exit == config.out_set.tf_exit - 1 and i != open_i:\n","            exit_done = -1\n","\n","    # ------ rsi ------ # -> vectorize 가능함 => 추후 적용\n","    if config.out_set.rsi_exit:\n","        rsi_T = res_df['rsi_T'].to_numpy()\n","\n","        if open_side == OrderSide.SELL:\n","            if (rsi_T[i - 1] >= 50 - config.loc_set.point.osc_band) & (rsi_T[i] < 50 - config.loc_set.point.osc_band):\n","                exit_done = -1\n","        else:\n","            if (rsi_T[i - 1] <= 50 + config.loc_set.point.osc_band) & (rsi_T[i] > 50 + config.loc_set.point.osc_band):\n","                exit_done = -1\n","\n","    # ------ heikin_ashi ------ #\n","    # if selection_id in ['v3_3']:\n","    #     if open_side == OrderSide.SELL:\n","    #       if (ha_o[i] < ha_c[i]):# & (ha_o[i] == ha_l[i]):   # 양봉 출현\n","    #           exit_done = -1\n","    #     else:\n","    #       if (ha_o[i] > ha_c[i]):# & (ha_o[i] == ha_h[i]):  # 음봉 출현\n","    #           exit_done = -1\n","\n","    # ------------ early out ------------ #\n","    # ------ bb ------ # --> cross_on 기능은 ide latency 개선 여부에 해당되지 않음\n","    if selection_id in ['v5_2']:\n","        bb_upper_5T = res_df['bb_upper_5T'].to_numpy()\n","        bb_lower_5T = res_df['bb_lower_5T'].to_numpy()\n","\n","        if open_side == OrderSide.SELL:\n","            if close[i] < bb_lower_5T[i] < close[i - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and close[i] > bb_upper_5T[i] > close[i - 1]:\n","                exit_done = -1\n","        else:\n","            if close[i] > bb_upper_5T[i] > close[i - 1]:\n","                cross_on = 1\n","            if cross_on == 1 and close[i] < bb_lower_5T[i] < close[i - 1]:\n","                exit_done = -1\n","\n","    if exit_done:\n","        ex_p = close[i]\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, cross_on, ex_p, fee\n","\n","\n","def check_hl_out_v2(config, i, out_j, len_df, fee, open_side, exit_done, np_datas):\n","\n","    open, high, low, close, out_arr = np_datas\n","    ex_p = None\n","\n","    if config.out_set.hl_out:\n","        if open_side == OrderSide.SELL:\n","            if high[i] >= out_arr[out_j]:  # check out only once\n","                exit_done = -1\n","        else:\n","            if low[i] <= out_arr[out_j]:  # check out only once\n","                exit_done = -1\n","    else:  # close_out\n","        if open_side == OrderSide.SELL:\n","            if close[i] >= out_arr[out_j]:  # check out only once\n","                exit_done = -1\n","        else:\n","            if close[i] <= out_arr[out_j]:  # check out only once\n","                ex_p = close[i]\n","                exit_done = -1\n","\n","    if exit_done:\n","        if config.out_set.hl_out:\n","            ex_p = out_arr[out_j]\n","        else:\n","            ex_p = close[i]\n","\n","        if open_side == OrderSide.SELL:\n","            if open[i] >= out_arr[out_j]:\n","                ex_p = open[i]\n","        else:\n","            if open[i] <= out_arr[out_j]:\n","                ex_p = open[i]\n","\n","        fee += config.trader_set.market_fee\n","\n","    return exit_done, ex_p, fee"]},{"cell_type":"markdown","metadata":{"id":"zQ-roiifspcX"},"source":["#### ep_loc.point & zone legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Js5eL87VspcX"},"outputs":[],"source":["\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                 (res_df['close'] < res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(selection_id)] - 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] >= res_df['bb_lower_1m']) &\n","    #                 # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) <= res_df['bb_lower_1m']) &\n","    #                 (res_df['close'] < res_df['bb_lower_1m'])\n","    #                 , res_df['entry_{}'.format(selection_id)] - 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] <= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['cloud_bline_%s' % cb_itv]) &\n","    #                   (res_df['close'] > res_df['cloud_bline_%s' % cb_itv])\n","    #                 , res_df['entry_{}'.format(selection_id)] + 1, res_df['entry_{}'.format(selection_id)])\n","\n","    # res_df['entry_{}'.format(selection_id)] = np.where((res_df['open'] <= res_df['bb_upper_1m']) &\n","    #                   # (res_df['close'].shift(config.loc_set.point.tf_entry * 1) >= res_df['bb_upper_1m']) &\n","    #                   (res_df['close'] > res_df['bb_upper_1m'])\n","    #                 , res_df['entry_{}'.format(selection_id)] + 1, res_df['entry_{}'.format(selection_id)])\n","\n","\n","    \n","   # --------------- ema --------------- #   \n","  # res_df['ema5_1m'] = ema(res_df['close'], 5).shift(1)\n","\n","  #   # --------------- cloud bline --------------- #   \n","  # res_df['cloud_bline_1m'] = cloud_bline(res_df, 26).shift(1)\n","  \n","    #       stochastic      #\n","  # res_df['stoch'] = stoch(res_df, 5, 3, 3)\n","\n","    #       fisher      #\n","  # res_df['fisher30'] = fisher(res_df, 30)\n","  # res_df['fisher60'] = fisher(res_df, 60)\n","  # res_df['fisher120'] = fisher(res_df, 120)\n","\n","    #       cctbbo      #\n","  # res_df['cctbbo'], _ = cct_bbo(res_df, 21, 13)\n","\n","    #       ema_roc      #\n","  # res_df['ema_roc'] = ema_roc(res_df['close'], 13, 9)\n","\n","\n","   # ------------------------------ htf data ------------------------------ #    \n","\n","  #             Todo              #\n","  # htf_df = pd.read_excel(date_path2 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # htf_df = pd.read_excel(date_path3 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # htf_df = pd.read_excel(date_path4 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # htf_df = pd.read_excel(date_path5 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","  # # # # # # htf_df = pd.read_excel(date_path6 + key.replace(\"_st1h_backi2\", \"\"), index_col=0)\n","\n","  # # ---- htf index slicing ---- #\n","  # htf_df = htf_df.loc[:res_df.index[-1]]\n","  \n","  # print(\"res_df.index[-1] :\", res_df.index[-1])\n","  # print(\"htf_df.index[-1] :\", htf_df.index[-1])\n","\n","  # res_df = dc_line(res_df, htf_df, '5m')\n","  # res_df = dc_level(res_df, '5m', 1)\n","\n","\n","  # # # if \"sma4\" in res_df.columns:\n","  # # #   res_df.drop(\"sma4\", axis=1, inplace=1)\n","\n","  # # htf_df['sma'] = htf_df['close'].rolling(60).mean()\n","  # # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1]), columns=['sma_30m']))\n","  \n","  # htf_df['stoch'] = stoch(htf_df, 13, 3, 3)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, htf_df, [-1], backing_i=-1), columns=['stoch_5m']))\n","\n","   \n","  # fifth_df['ema'] = ema(fifth_df['close'], 5)\n","  # res_df = res_df.join(pd.DataFrame(index=res_df.index, data=to_lower_tf_v2(res_df, fifth_df, [-1]), columns=['ema5']))\n","\n","        # ------------------------------------ short ------------------------------------ # \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 0:\n","        #   mr_score += 1          \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 0:\n","        #   mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_upper_1m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_upper_3m'].iloc[i] <= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_upper_5m'].iloc[i] <= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == 'MARKET':\n","        #   mr_const_cnt += 1\n","        #   if (res_df['close'].iloc[i] - res_df['short_tp'].iloc[i]) / (res_df['short_out'].iloc[i] - res_df['close'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error):  \n","        #     mr_score += 1\n","\n","           \n","        # ------- entry once ------- #   \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == 1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == -1:\n","        #     prev_entry_cnt += 1          \n","        # # # print(\"prev_entry_cnt :\", prev_entry_cnt)\n","\n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] < res_df['bb_lower_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_lower2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] < res_df['bb_base_1h'].iloc[i]:\n","\n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] < res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","  \n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['low'].iloc[i] > res_df['short_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","\n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1\n","\n","\n","\n","        # ------------------------------------ long ------------------------------------ # \n","          \n","\n","        # --------- by sar --------- # \n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_3m'].iloc[i] == 1:\n","        #   mr_score += 1   \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_5m'].iloc[i] == 1:\n","        #   mr_score += 1     \n","\n","        # mr_const_cnt += 1\n","        # if res_df['sar_uptrend_15m'].iloc[i] == 1:\n","          # mr_score += 1\n","\n","          #      dc & sar      # \n","        # mr_const_cnt += 1\n","        # # if res_df['dc_lower_1m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        # if res_df['dc_lower_3m'].iloc[i] >= res_df['sar_5m'].iloc[i]:\n","        # # if res_df['dc_lower_5m'].iloc[i] >= res_df['sar_15m'].iloc[i]:\n","        #   mr_score += 1\n","\n","        # -------------- dr scheduling -------------- #\n","        # if config.ep_set.entry_type == \"MARKET\":\n","          # mr_const_cnt += 1        \n","          # if (res_df['long_tp'].iloc[i] - res_df['close'].iloc[i]) / (res_df['close'].iloc[i] - res_df['long_out'].iloc[i]) <= config.ep_set.tr_thresh * (1 + config.ep_set.dr_error): # 일반적으로 dr 상에서 tp 비율이 더 커짐 (tr 보다)\n","          #   mr_score += 1\n","\n","        # -------------- ep limit -------------- #    \n","        # mr_const_cnt += 1\n","        # # if (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # if config.ep_set.min_eplim_pct < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        # # if 0 < (res_df['open'].iloc[i] - res_df['long_ep'].iloc[i]) / res_df['open'].iloc[i] < config.ep_set.max_eplim_pct:\n","        #   # if res_df['st_gap_15m'].iloc[i] / res_df['open'].iloc[i] < 0:\n","        #   #   print(\"i, res_df['st_gap_15m'].iloc[i] :\", i, res_df['st_gap_15m'].iloc[i])\n","        #   mr_score += 1\n","\n","\n","        # -------------- entry once -------------- #    \n","        # prev_entry_cnt = 0\n","        # for back_i in range(i - 1, 0, -1):\n","        #   if res_df['entry'][back_i] == -1:\n","        #     break\n","\n","        #   elif res_df['entry'][back_i] == 1:\n","        #     prev_entry_cnt += 1\n","          \n","        # mr_const_cnt += 1\n","        # # if prev_entry_cnt <= config.ep_set.entry_incycle:\n","        # # if prev_entry_cnt == config.ep_set.entry_incycle:\n","        # if prev_entry_cnt >= config.ep_set.entry_incycle:\n","        #   mr_score += 1\n","\n","\n","        # ------- htf zoning ------- #   \n","        # mr_const_cnt += 1\n","          \n","        #   #       bb zone     #\n","        # if res_df['close'].iloc[i] > res_df['bb_upper_%s' % bbz_interval].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_upper2_1h'].iloc[i]:\n","        # # if res_df['close'].iloc[i] > res_df['bb_base_1h'].iloc[i]:\n","        \n","        #   #       cbline zone     #\n","        # # if res_df['close'].iloc[i] > res_df['cloud_bline_%s' % cb_interval].iloc[i]:\n","\n","        #   mr_score += 1\n","\n","\n","        # ------- ben ep_in's tp done ------- #   \n","        # mr_const_cnt += 1\n","        # if res_df['high'].iloc[i] < res_df['long_tp'].iloc[i]:\n","        #   mr_score += 1\n","\n","\n","        # -------------- feature dist const. -------------- #\n","        # if initial_i < input_size:\n","        #   i += 1\n","        #   if i >= len(res_df):\n","        #     break\n","        #   continue\n","          \n","        # entry_input_x = min_max_scale(res_df[selected_price_colname].iloc[initial_i - input_size:initial_i].values)\n","       \n","        # re_entry_input_x = expand_dims(entry_input_x)\n","\n","        # entry_vector = model.predict(re_entry_input_x, verbose=0)\n","        # # print(test_result.shape)\n","\n","        # f_dist = vector_dist(entry_vector, selected_vector)\n","        # print(\"f_dist :\", f_dist)\n","\n","        # if f_dist < fdist_thresh:\n","          # mr_score += 1"]},{"cell_type":"markdown","metadata":{"id":"_blyFhQJUd5X"},"source":["#### dump"]},{"cell_type":"code","source":["\n","        # tr_arr = res_df['{}_tr_{}'.format(side_pos, selection_id)].to_numpy()\n","\n","        # ------ point1 & 2's tp_j ------ #\n","        # point_idxgap = point_idxgap_arr[op_idx]\n","        # if np.isnan(point_idxgap):\n","        #     continue\n","        # else:\n","        #     # ------ allow point2 only next to point1 ------ #\n","        #     open_arr = res_df['{}_open_{}'.format(side_pos, selection_id)].to_numpy()\n","        #     tp_j = int(op_idx - point_idxgap)\n","        #     if np.sum(open_arr[tp_j:op_idx]) != 0:\n","        #         continue"],"metadata":{"id":"dsI-R8Zz7ls1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ------ bias frquency ------ #\n","len_df = len(res_df)\n","\n","plt.figure(figsize=(16, 2))\n","\n","ax1 = plt.subplot(121)\n","plt.fill_between(short_obj[-2].ravel(), 0, 1, where=short_bias_arr.ravel() > 0,\n","                facecolor='#00ff00', alpha=1, transform=ax1.get_xaxis_transform())   # 00ff00\n","# plt.fill_between(short_obj[-2].ravel(), 0, 1, where=short_bias_arr.ravel() < 1,\n","#                 facecolor='#ff00ff', alpha=1, transform=ax1.get_xaxis_transform())\n","\n","ax2 = plt.subplot(122)\n","plt.fill_between(long_obj[-2].ravel(), 0, 1, where=long_bias_arr.ravel() > 0,\n","                facecolor='#00ff00', alpha=1, transform=ax2.get_xaxis_transform())\n","plt.fill_between(long_obj[-2].ravel(), 0, 1, where=long_bias_arr.ravel() < 1,\n","                facecolor='#ff00ff', alpha=1, transform=ax2.get_xaxis_transform())\n","plt.show()"],"metadata":{"id":"gMur2u8WeQ2K","colab":{"base_uri":"https://localhost:8080/","height":157},"executionInfo":{"status":"ok","timestamp":1652751452213,"user_tz":-540,"elapsed":350,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"7b506c38-7a8f-4bd1-a021-8a065d009882"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x144 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# ------ bias frquency ------ #\n","len_df = len(res_df)\n","\n","plt.figure(figsize=(16, 2))\n","\n","ax1 = plt.subplot(121)\n","plt.fill_between(short_obj[-2].ravel(), 0, 1, where=short_bias_arr.ravel() > 0,\n","                facecolor='#00ff00', alpha=1, transform=ax1.get_xaxis_transform())   # 00ff00\n","# plt.fill_between(short_obj[-2].ravel(), 0, 1, where=short_bias_arr.ravel() < 1,\n","#                 facecolor='#ff00ff', alpha=1, transform=ax1.get_xaxis_transform())\n","\n","ax2 = plt.subplot(122)\n","plt.vlines(long_obj[-2][long_bias_arr], ymin=0, ymax=1, color='#00ff00')\n","plt.vlines(long_obj[-2][~long_bias_arr], ymin=0, ymax=1, color='#ff00ff')\n","# [plt.axvline(x_, color='#ff00ff') for x_, bias_ in zip(long_obj[-2], long_bias_arr) if not bias_]\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":157},"id":"eoXMxRm3qdz2","executionInfo":{"status":"ok","timestamp":1652756329304,"user_tz":-540,"elapsed":872,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"98c90b55-4c14-402c-e2d4-d7b88f9e2e62"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1152x144 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["%timeit -n1 -r10 plt.vlines(long_obj[-2][long_bias_arr], ymin=0, ymax=1, color='#00ff00')  # 528 ms per loop --> 8.71 ms per loop\n","%timeit -n1 -r10 [plt.axvline(x_, color='#00ff00') for x_, bias_ in zip(long_obj[-2], long_bias_arr) if bias_]\n","\n","# np.sum(long_bias_arr == ~long_bias_arr)"],"metadata":{"id":"dm7ZqzS9vqhm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# %timeit -n1 -r10 [plt.axvline(x_) for x_, bias_ in zip(long_obj[-2].ravel(), long_bias_arr.ravel()) if bias_]\n","%timeit -n1 -r10 plt.fill_between(long_obj[-2].ravel(), 0, 1, where=long_bias_arr.ravel() > 0, facecolor='#00ff00', alpha=1, transform=ax2.get_xaxis_transform())"],"metadata":{"id":"qOE2YSzntx8v"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dHFkv6Ar1ojU"},"source":["## plot_check_v2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FCpPCl931ojV"},"outputs":[],"source":["# res_df = wave_range_v4(res_df, 20, ltf_df=None, touch_lbperiod=50)\n","# res_df = h_candle_v4(res_df, 20, ltf_df=None, touch_lbperiod=50)\n","del np_df\n","del np_plot_params"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rMIwv1Nr1ojX"},"outputs":[],"source":["# ------------------ plot_config ------------------ #\n","save_mode = 0\n","front_plot = 0    # 0 : p1_tick, 1 : p2_tick\n","back_plot = 4     # 0 : whole, 1 : open, 2 : p2_tick, 3 : ep_tick, 4 : tp_tick, 5 : bias_tick\n","bias_plot = 0     # 1 : true_bias only, -1 : false_bias only, 0 : both\n","pr_descend = 1    # 1 : 큰 pr 부터, 0 : 작은 pr 부터\n","position = 1      # -1 : short 1 : long\n","\n","x_max = 500\n","x_margin_mult = 1/30\n","y_margin_mult = 1/30  # 0 \n","\n","prev_plotsize = 500 #  150 100 20 500\n","post_plotsize = 60 # config.tr_set.bias_info_tick -> excessive bit 는 감당 못함\n","\n","inversion = 0\n","hedge = 0\n","\n","# ------ show or save ------ #\n","if save_mode:\n","  plot_check_dir = current_path + \"plot_check/\" +  key.replace(\".ftr\", \"\")\n","  shutil.rmtree(plot_check_dir, ignore_errors=True)  # remove existing dir\n","  os.makedirs(plot_check_dir)\n","  print(plot_check_dir)\n","else:\n","  plot_check_dir = None\n","\n","# ------------ 한 방향에 대해 plot_check 함 (by position var.) ------------ #\n","#   obj by position  \n","if position == -1:\n","  pos_str = \"SELL\"\n","  pr_, obj_ = short_pr, short_obj\n","  arr_list = [short_p2_idx_arr, short_lvrg_arr, short_fee_arr, short_tpout_arr, short_bias_arr, short_en_tp1, short_en_out0]\n","else:   # both option currently not supported\n","  pos_str = \"BUY\"\n","  pr_, obj_ = long_pr, long_obj\n","  arr_list = [long_p2_idx_arr, long_lvrg_arr, long_fee_arr, long_tpout_arr, long_bias_arr, long_en_tp1, long_en_out0]\n","\n","if pr_descend:\n","    if pr_descend == -1:\n","      pr_descend = 0\n","    pr, obj, [p2_idx_arr, lvrg_arr, fee_arr, tpout_arr, bias_arr, en_tp1, en_out0] = sort_bypr_v4(pr_, obj_, arr_list, descending=pr_descend)  # --> pr_descend 의 의미가 사라짐.. (false -> true plot 으로 이동한 것뿐)\n","else:\n","  pr, obj, [p2_idx_arr, lvrg_arr, fee_arr, tpout_arr, bias_arr, en_tp1, en_out0] = pr_, obj_, arr_list\n","\n","pr_msg = \"%s\\n {} ~ {} -> {:.5f}\\n lvrg : {}\\n fee : {:.4f}\" % (pos_str)  # = data_window, pos_str 으로 이곳에서 정의함\n","\n","\n","if front_plot == 0:\n","  front_idx = obj[4]      # left_margin 기준 - open_idx\n","else:\n","  front_idx = p2_idx_arr  # left_margin 기준 - p2_idx\n","\n","left_end_idx = front_idx - prev_plotsize  \n","right_end_idx = obj[3] + post_plotsize\n","invalid_left_end = np.sum(left_end_idx < 0)\n","\n","np_plot_params = np.hstack((left_end_idx, right_end_idx, pr, *obj, p2_idx_arr, lvrg_arr, fee_arr, tpout_arr, en_tp1, en_out0))[invalid_left_end:]  # all arr should have same dimension\n","\n","if bias_plot:\n","  if bias_plot == 1:\n","    bias_idx = bias_arr[invalid_left_end:].ravel()  # true_bias 만 plot\n","  else:\n","    bias_idx = ~bias_arr[invalid_left_end:].ravel()  # false_bias 만 plot\n","\n","  np_plot_params = np_plot_params[bias_idx]"]},{"cell_type":"markdown","metadata":{"id":"-4CXGqEN1ojY"},"source":["### session_plot"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1653007874636,"user":{"displayName":"7th June","userId":"08178289703395036410"},"user_tz":-540},"outputId":"e0ca1796-5a10-437c-a516-9f264fe259ca","id":"2bjxKCIh1ojZ"},"outputs":[{"output_type":"stream","name":"stderr","text":["/content/drive/My Drive/Colab Notebooks/JnQ/funcs/funcs_plot_check.py:10: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  step_col_arr = np.array(col_list)\n"]}],"source":["selection_id = config.selection_id\n","\n","# ============ make col_idx_dict config ============ #\n","nonstep_col_list = []\n","step_col_list = []\n","step_col_list2 = []\n","stepmark_col_list = []\n","data_window_p1_col_list = []\n","data_window_p2_col_list = []\n","\n","# ============ nonstep_col_list - add info(col, alpha, color, linewidth) ============ #\n","# nonstep_col_list.append([['close'], 1, '#ffffff', 2])\n","\n","# ============ step_col_list - add info(col, alpha, color, linewidth) ============ #\n","# ------ htf_candle ------ #\n","hc_tf1 = '5T'\n","hc_tf2 = '15T'\n","\n","# step_col_list.append([['open_{}'.format(hc_tf1), 'close_{}'.format(hc_tf1)], 1, '#ffffff', 2])\n","# step_col_list.append([['open_{}'.format(hc_tf2), 'close_{}'.format(hc_tf2)], 1, '#ffffff', 4])\n","\n","# ------ resi_sup ------ #\n","# rs_tf = 'T'\n","# step_col_list.append([['resi_{}'.format(rs_tf), 'sup_{}'.format(rs_tf)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['resi_out_{}'.format(rs_tf), 'sup_out_{}'.format(rs_tf)], 1, 'dodgerblue', 2])\n","\n","# ------ wave_base ------ #\n","wave_itv1 = config.tr_set.wave_itv1\n","wave_itv2 = config.tr_set.wave_itv2\n","wave_period1 = config.tr_set.wave_period1\n","wave_period2 = config.tr_set.wave_period2\n","\n","# step_col_list.append([['dc_base_{}{}'.format(wave_itv1, wave_period1)], 1, '#5b9cf6', 1])\n","# step_col_list.append([['dc_base_{}{}'.format(wave_itv2, wave_period2)], 1, '#5b9cf6', 5])\n","\n","# step_col_list.append([['wave_low_fill_{}{}'.format(wave_tf, wave_period)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['wave_high_fill_{}{}'.format(wave_tf, wave_period)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['dc_upper_{}{}'.format(wave_tf, wave_period), 'dc_lower_{}{}'.format(wave_tf, wave_period)], 1, '#ffeb3b', 1])\n","\n","# ------ dc ------ #\n","dc_tf1 = '5T'\n","dc_period1 = 1\n","dc_tf2 = '15T'\n","dc_period2 = 1\n","\n","# step_col_list.append([['dc_upper_{}{}'.format(dc_tf2, dc_period2), 'dc_lower_{}{}'.format(dc_tf2, dc_period2)], 1, '#ff00ff', 4]),  # inner #ffeb3b\n","# step_col_list.append([['dc_base_{}{}'.format(dc_tf2, dc_period2)], 1, '#ffee58', 3]) # ffee58 5b9cf6\n","\n","# ------ bb ------ #\n","bb_tf1 = 'T'\n","bb_period1 = 60\n","\n","# step_col_list.append([['bb_upper_{}{}'.format(bb_tf1, bb_period1), 'bb_lower_{}{}'.format(bb_tf1, bb_period1)], 1, '#ffffff', 1])\n","# step_col_list.append([['bb_upper2_{}{}'.format(bb_tf1, bb_period1), 'bb_lower2_{}{}'.format(bb_tf1, bb_period1)], 1, '#ffffff', 1])\n","# step_col_list.append([['bb_upper3_{}{}'.format(bb_tf1, bb_period1), 'bb_lower3_{}{}'.format(bb_tf1, bb_period1)], 1, '#ffffff', 1])\n","# step_col_list.append([['bb_base_{}{}'.format(bb_tf1, bb_period1)], 1, '#00ff00', 1])\n","\n","\n","# ------ ema ------ #\n","# step_col_list.append([['ema_5T'], 1, '#03ed30', 2])\n","\n","# ============ step_col_list2 - add info(col, alpha, color, linewidth) ============ #\n","# ------ cci ------ #\n","step_col_list2.append([['cci_{}{}'.format(wave_itv1, wave_period1)], 1, '#00ff00', 1])\n","step_col_list2.append([['cci_{}{}'.format(wave_itv2, wave_period2)], 1, '#00ff00', 1])\n","\n","\n","# ============ stepmark_col_list - add info(col, alpha, color, linewidth, marker_style) ============ #\n","# stepmark_col_list.append([['sar_T'], 1, 'dodgerblue', 7])\n","\n","# ------ wave_range ------ #\n","stepmark_col_list.append([['wave_low_fill_{}{}'.format(wave_itv1, wave_period1)], 1, '#e91e63', 10, '*'])\n","stepmark_col_list.append([['wave_high_fill_{}{}'.format(wave_itv1, wave_period1)], 1, '#2962ff', 10, '*'])\n","\n","stepmark_col_list.append([['wave_low_fill_{}{}'.format(wave_itv2, wave_period2)], 1, '#ff00ff', 7, '*'])\n","stepmark_col_list.append([['wave_high_fill_{}{}'.format(wave_itv2, wave_period2)], 1, '#00ff00', 7, '*'])\n","  \n","# stepmark_col_list.append([['wave_co_marker_{}{}'.format(wave_itv1, wave_period1)], 1, '#00ff00', 3, 'o'])\n","# stepmark_col_list.append([['wave_cu_marker_{}{}'.format(wave_itv1, wave_period1)], 1, '#ff00ff', 3, 'o'])\n","\n","# ============ data_window_col_list ============ #\n","# ------ wrr ------ #\n","# data_window_col_list.append([['cu_wrr_21_{}{}'.format(wave_itv1, wave_period1)], 'cu_wrr_21_{}{}'.format(wave_itv1, wave_period1)])\n","# data_window_col_list.append([['co_wrr_21_{}{}'.format(wave_itv1, wave_period1)], 'co_wrr_21_{}{}'.format(wave_itv1, wave_period1)])\n","data_window_p1_col_list.append([['cu_wrr_32_{}{}'.format(wave_itv1, wave_period1)], 'cu_wrr_32_{}{}'.format(wave_itv1, wave_period1)])\n","data_window_p1_col_list.append([['co_wrr_32_{}{}'.format(wave_itv1, wave_period1)], 'co_wrr_32_{}{}'.format(wave_itv1, wave_period1)])\n","data_window_p2_col_list.append([['cu_wrr_32_{}{}'.format(wave_itv2, wave_period2)], 'cu_wrr_32_{}{}'.format(wave_itv2, wave_period2)])\n","data_window_p2_col_list.append([['co_wrr_32_{}{}'.format(wave_itv2, wave_period2)], 'co_wrr_32_{}{}'.format(wave_itv2, wave_period2)])\n","\n","# data_window_col_list.append([['short_tr_{}'.format(selection_id)], 'short_tr_{}'.format(selection_id)])\n","# data_window_col_list.append([['long_tr_{}'.format(selection_id)], 'long_tr_{}'.format(selection_id)])\n","\n","\n","# ====== str to numbcol ====== #\n","nonstep_col_arr = strcol_tonumb(res_df, nonstep_col_list)\n","step_col_arr = strcol_tonumb(res_df, step_col_list)\n","step_col_arr2 = strcol_tonumb(res_df, step_col_list2)\n","stepmark_col_arr = strcol_tonumb(res_df, stepmark_col_list)\n","data_window_p1_col_arr = strcol_tonumb(res_df, data_window_p1_col_list)\n","data_window_p2_col_arr = strcol_tonumb(res_df, data_window_p2_col_list)\n","\n","col_idx_dict = \\\n","{\n","  \"ohlc_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close']),\n","  # \"vp_col_idxs\": get_col_idxs(res_df, ['close', 'volume']),\n","  # \"ohlc_col_idxs\": get_col_idxs(res_df, ['haopen', 'hahigh', 'halow', 'haclose']),  # heikin-ashi ver.\n","  \"nonstep_col_info\": nonstep_col_arr,\n","  \"step_col_info\": step_col_arr,\n","  \"step_col_info2\": step_col_arr2,\n","  \"stepmark_col_info\": stepmark_col_arr,\n","  \"data_window_p1_col_info\": data_window_p1_col_arr,\n","  \"data_window_p2_col_info\": data_window_p2_col_arr,\n","  \"ylim_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close'])  \n","}   \n","#   'wave_low_fill_{}{}'.format(wave_itv2, wave_period2), 'wave_high_fill_{}{}'.format(wave_itv2, wave_period2)\n","#   'dc_upper_H', 'dc_lower_H', 'dc_upper_15T', 'dc_lower_15T', 'short_out_{}'.format(selection_id), 'long_out_{}'.format(selection_id)\n","#   'wave_1_{}'.format(wave_itv2), 'wave_0_{}'.format(wave_itv2), 'dc_upper_15T', 'dc_lower_15T'"]},{"cell_type":"markdown","source":["#### session_plot main"],"metadata":{"id":"XfvH5ngyieS9"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"OCLMABZT1ojb","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"error","timestamp":1653009456188,"user_tz":-540,"elapsed":54216,"user":{"displayName":"7th June","userId":"08178289703395036410"}},"outputId":"8b80a184-2747-47d4-f71f-017ecd8f6898"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABzsAAARqCAYAAADfgxhxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde1hUdf4H8DcDzigM6CjeUGRFQYUM3d96R7HIS6VpXlbBTUpLS1uVstQuarpeW3WtVnJLSRTQLl5bs1IRL9FamaCIgnKViyIMcwHE1M/vj9azjgwwIIbk+/U872c553s533OYnvXDF2bsAAiIiIiIiIiIiIiIiIiIiOoZVV0vgIiIiIiIiIiIiIiIiIioJrjZSURERERERERERERERET1Ejc7iYiIiIiIiIiIiIiIiKhe4mYnEREREREREREREREREdVL3OwkIiIiIiIiIiIiIiIionqJm51EREREREREREREREREVC9xs5OIiIiIiIiIiIiIiIiI6iVudhIREd2FtLQ0lJSUwGQyobCwEF9++SXatm0LAIiJicHkyZMt+gcEBCArKwsAEBsbi/nz51u0P/PMMzh//jwaNWr029wAERERERER/WZYQxIREdU+bnYSERHdpeHDh8PZ2RmtW7fGpUuX8P7779s07vnnn0doaCh8fHwAAK6urli1ahWef/55lJaW3sslExERERERUR1hDUlERFS7uNlJRERUS8rKyvD5558rhWdVUlJSsGTJEmzYsAF2dnZ477338MUXX+DQoUP3dqFERERERERU51hDEhER1Q5udhIREdWSRo0aYdy4cfj+++9tHrN69WrY2dnh888/R79+/fDaa6/dwxUSERERERHR/YI1JBERUe1wqOsFEBER1Xc7d+7E9evX4eTkhPz8fAwZMsTmsTdv3sSkSZOQmJiIESNGwGw238OVEhERERERUV1jDUlERFS7+JedREREd2nkyJHQ6XRo2LAhXn75ZcTGxqJly5a4fv06GjRoYNG3QYMG+OWXXyzOnTlzBgCQmJj4m62ZiIiIiIiI6gZrSCIiotrFzU4iIqJacvPmTezYsQM3btyAv78/MjMz8Yc//MGiT/v27ZGRkVE3CyQiIiIiIqL7BmtIIiKi2sHNTiIiolr01FNPQafTISkpCdu2bcNzzz2HHj16AAC8vLwQGhqKrVu31vEqiYiIiIiI6H7AGpKIiOju8TM7iYiI7tKePXtw48YNiAgyMjIQEhKCM2fO4MyZM5g7dy7Cw8Ph7u6Oy5cv4+OPP8a//vWvul4yERERERER1RHWkERERLXLDoDU9SKIiIiIiIiIiIiIiIiIiKqLb2NLRERERERERERERERERPUSNzuJiIiIiIiIiIiIiIiIqF7iZicRERERERERERERERER1Uvc7CQiIiIiIiIiIiIiIiKieombnURERERERERERERERERUL3Gzk4jod+7gwYO4fPkyDAYDTp48iaeeekppGzhwIBISEqDX63HlyhVs374dbm5uSvu7776L5ORkGI1GJCUl4ZlnnlHa/P39YTKZLCIiGDVqlNJn8eLFuHjxIoqKihATEwMfHx+lzc3NDTt37kRBQQGysrIwderUSu8jKCgI6enpMJvN2LFjB3Q6XW08HkWzZs1w9OhRXLlyBXq9Ht999x369u2rtI8bNw5nz55FUVERLl26hE8++QTOzs4AALVajY8//hjp6ekwGo34+eefMXToUIv5x44dizNnzsBoNCIxMREjRoywaG/fvj327NkDo9GI/Px8rFixQmnbvHkzcnJyYDAYcO7cOUyePLnSe5k1axZyc3NhMBiwYcMGqNXqu308VZo+fTp++OEHXL16FeHh4ZX29fX1xb59+5Cfnw8RKdceExOD0tJS5XV19uxZi/Y33ngDGRkZMBgMiI6OVr4PgO2vq2eeeQYiUuWzJCIiIiJ6UM2YMQOpqakwm804c+YMvLy8AABPPPEEjhw5Ar1ej9zcXHz00UfQarXlxut0Oly+fBlHjhxRzvXq1QvffPMNCgoKcPnyZXz66ado1aqVxbju3bsjNjYWJpMJeXl5mDFjhtLWp08f/Oc//4HRaER8fDz69etX6T0sX74cV65cwZUrV7B8+fK7eRwVcnV1RWRkJIqKilBYWIgtW7YobZXV1LezVp/MmjULFy5cgMFgQHZ2NlavXg17e3ulfdGiRUhISMAvv/yCBQsWWMxn6/foFg8PDxw8eBDFxcVISkpCYGBgTR9HtVSnzh82bBhOnToFk8mEY8eOoUuXLkpbWFiYxc8mrl69CqPRqLTrdDps374dZrMZ6enpCAoKsnkdnTt3xoEDB1BUVISUlBSMHDmyFp8AERHVJmEYhmF+v+natavY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zJ1hDVk+rCHr/nXJMAzD3J+x++8XRERERERERERERERERET1Cj+zk4iI/p+9O4+rqs7/OP66rCoWIO4bimkumToO7qPlklulo+aojZmaS1hj5thoNZWZldVPa1wqLU0LtSaSSk3TLCtXNMtxKxdEBVFRQFSQ7fz+uJfrRS5wQeBe4P3s8X147vd8z/d8zhV7nMPnfL9fEREREREREREREZFSSclOERFxSfXq1SMpKcluqVevXpGdZ8aMGXbPsX79+kL32aVLl1xjFxERERERkaKnZ0gREZHyS9PYioiIiIiIiIiIiIiIiEippJGdIiIiIiIiIiIiIiIiIlIqKdkpIiIiIiIiIiIiIiIiIqWSkp0iIiK5eOqppzh+/DiJiYlER0czd+5c3N3dAahWrRorV64kOjqahIQEfv75Z9q1a5dnf7ZruyQnJ5Oenm79fODAAYf6HD58KXgLVQAAIABJREFUOCdPnuTKlSusWbMGf3//Ql9fq1at2LNnD1evXmXPnj20atUq17ZNmzblu+++IyEhgaNHjzJw4MBs+7t3787hw4e5evUqW7ZsoX79+tn29+jRg71793LlyhVOnz7NQw89VOi4RUREREREXJGeIW8IDAxk3bp1XLp0ibNnzzJ//nzrd2FvjVLDMBg0aBAALVq0YMOGDVy4cAHD0ApsIiLiGENFRUVFRaU8FHd39xx1bm5uubYPCgoyfH19DcDw9/c3vvvuO2PKlCkGYDRs2NCYMmWKUbNmTcPNzc0YN26cceHCBcPHx8ehWEaNGmX89NNP2ery67N58+bG5cuXjb/85S+Gj4+PERoaaqxatapQ34Wnp6dx8uRJ46mnnjK8vLyMJ5980jh58qTh6elp93v7/fffjSlTphhubm7Gvffea1y5csVo3LixARgBAQFGQkKCMWTIEMPb29t44403jB07dliPb9asmXHu3DmjT58+hru7u1GlShUjKCjI6T8PKioqKioqKioqKioqeRU9Q94oBXmGBIx169YZy5YtM7y9vY0aNWoY+/fvN5588km7bbt162ZcvnzZqFSpkgEYTZo0McaMGWM8+OCDhmHOdqqoqKioqORXnB6AioqKiko5KM2bNze+/fZb4+LFi0ZsbKwxY8YMAzC8vLyMefPmGdHR0UZ0dLQxb948w8vLK8++fvjhB2PQoEEGYHTq1MkwDMPo16+fARjdu3c39u3bZ4D5YfDnn3825s6da8TFxRmzZs0yli1bZixatMhYt26dceXKFaNHjx4OxV+lShVj06ZNxsKFC3Ntk5iYaPzpT39yqD97D6r59Tl79mwjNDTUui8oKMi4fv26Ubly5QL/ffTq1cs4c+ZMtrqoqCijd+/eOdq2aNHCSEpKyla3ceNG4+WXXzYAY9y4cca2bdus+ypVqmRcu3bNuPPOOw3ACA0NtbZVUVFRUVFRUVFRUVFxpOgZMnspTc+QgHHo0CGjb9++1s9vvPGG8d5779ltu3TpUmPp0qU56hs1aqRkp4qKioqKQ0XT2IqISLGrXLkymzdvZsOGDdSuXZs77riD7777DoDnnnuODh060Lp1a1q1akW7du14/vnn8+xv69at3HPPPQB069aN48eP07VrV+vnrVu3Wtu2b9+eEydOUKNGDWbPng3AiBEjmD17Nrfddhs///xznucaPnw4iYmJXLx4kVatWvH+++/bbdeqVSu8vLw4duyYQ9+JI27us0WLFvz222/W/SdOnCA1NZUmTZrYPf7rr7/mX//6l919LVq0YP/+/dnq9u/fT4sWLRyKzWQycdddd9mN69q1axw/ftzaV4cOHaz9x8TE8PHHH9/S1EkiIiIiIlK26RmycFzpGfLtt99m2LBhVKxYkdq1a9O3b182bNiQo12lSpUYMmQIy5cvd+gaRURE7FGyU0REit39999PbGwsc+fO5fr161y5coXdu3cD8PDDD/Pyyy9z4cIF4uLimDlzJiNHjsyzv61bt9KtWzcAunbtymuvvWb9fPODakxMDAsWLCAjI4OUlBQAvvzyS7Zv345hGFy/fj3Pc61atQpfX18aN27Me++9x7lz53K0ue222/j444+ZOXMmly9fdvyLyYO9PitXrkxiYmK2domJidx22212+3jggQeYM2eO3X0F6ev333/n/PnzTJs2DQ8PD3r16kW3bt2oVKmSQ33VrVuXkSNHMnjwYBo3bkzFihWZP3++A9+CiIiIiIiUR3qGLDhXeoYE+PHHH2nRogWXL18mOjqaPXv2EB4enqPdoEGDiIuLy/Z3ICIiUlBKdoqISLGrV68ex48ft7uvdu3aREVFWT9HRUVRu3btPPvbsWMHTZo0oXr16rRu3ZoVK1ZQr149AgICaNeuHT/++KO17enTp3Mcb68uP8eOHePgwYMsWrQoW32FChX4+uuv2blzJ6+//nqB+7Untz6vXLnC7bffnq3t7bffTlJSUoHPUZC+0tPTGThwIP379yc2NpapU6fy2WefcebMGYf6Sk5OZtmyZRw9epSrV6/y6quv0q9fvwLHLCIiIiIi5YOeIQvG1Z4hTSYTGzZs4IsvvsDHx4eAgAD8/f3tJlJHjRrFihUrChyPiIiILSU7RUSk2J0+fZqgoCC7+2JiYggMDLR+rl+/PjExMXn2l5yczN69e5k8eTIHDhwgLS2N7du38/TTT3P8+HEuXrxobWte3iM7e3WO8PDwoFGjRtbPXl5ehIeHc+bMGSZMmFCoPm+WV58HDx6kVatW1s8NGzbE29ubP/74o8DnOXjwIHfffXe2urvvvpuDBw/abf+///2Pe+65h6pVq9KnTx+CgoKsb1bfHFelSpVo1KiRta/9+/dn+84L+/2LiIiIiEj5oGdIx7niM2SVKlUIDAxkwYIFpKamcunSJZYtW5bjpde6detyzz33KNkpIiK3TMlOEREpdmvXrqVWrVpMnjwZLy8vKleuTLt27QDzFD/PP/88VatWJSAggBdeeIFPPvkk3z63bt3KE088YZ3q5ocffsj2uSiMHTuWatWqAdCsWTNmzJhhXSfGw8ODzz//nOTkZEaNGlUkCbz8+gwNDeWBBx6gS5cuVKpUiZdffpkvvviCK1euFPhcP/zwAxkZGfzjH//Ay8uLSZMmAbBlyxa77Vu2bIm3tzcVK1Zk6tSp1KpVi48++giANWvWcNdddzFo0CC8vb154YUX2L9/P7///jsAy5YtY/To0TRs2JCKFSsyffp01q5dW+CYRURERESkfNAzpGNc9Rny4sWLnDhxgscffxx3d3d8fX0ZNWpUjjU/R44cyfbt2zlx4kSOPry9vfHy8sqxLSIikhtDRUVFRUWluEuLFi2MzZs3G5cuXTLOnj1r/Otf/zIAw9vb23jnnXeMmJgYIyYmxnjnnXcMb2/vfPu77777DMMwjK5du1r7NwzDGDp0qLXNqFGjjJ9++inbccuWLTNmzZrlUMxLly41YmNjjStXrhiRkZHGG2+8YY2ta9euhmEYxtWrV42kpCRr6dKli0N924vNkT6HDx9uREVFGVeuXDHCw8MNf3//XM+xfv16Y8aMGbnub926tbFnzx7j2rVrxt69e43WrVtb982YMcNYv3699fMbb7xhXLp0yUhKSjLWr19vNGrUKFtfPXr0MA4fPmxcu3bN+P77743AwMBs+1966SXj/Pnzxvnz540VK1YYfn5+Tv+ZVFFRUVFRUVFRUVFx3aJnyOyltD1DtmrVyvj++++NS5cuGRcuXDA+/fRTo3r16tn6O3z4sDFmzJgc5wkMDDRuFhkZ6fSfSRUVFRUV1y0my4aIiIiIiIiIiIiIiIiISKmiaWxFREREREREREREREREpFRSslNERFzSjBkzSEpKylHWr19fpOc5cOCA3fOMGDGi0H2+++67dvt89913izByERERERERyaJnSBERkfJL09iKiIiIiIiIiIiIiIiISKnk4ewAyrvz588TFRXl7DBERERERKSIBAYGUr16dWeHIWWUniFFRERERMoWPUPeOiU7nSwqKorg4GBnhyEiIiIiIkUkIiLC2SFIGaZnSBERERGRskXPkLdOa3aKiIiIiIiIiIiIiIiISKmkZKeIiIiIiIiIiIiIiIiIlEpKdoqIiIiIiIiIiIiIiIhIqaRkp4iIiIiIiIiIiIiIiIiUSkp2ioiIiIiIiEi5N3ToUNasWcO5c+cwDAPDMFiyZImzwxIRERERkXx4ODsAERERERERERFnGz58OAMHDnR2GCIiIiIiUkBKdoqIiIiIiIhIubdlyxZ++OEHTp06xRdffOHscERERERExEGaxlZERERERERECqRmzZrWqV4nT54MQIUKFUhNTcUwDMaOHQuAv78/GRkZGIbB9OnTAbj//vvZtGkT0dHRpKSkcOXKFfbs2cP48eOt/U+bNs3af8OGDa31tWvXtvY3c+ZMa/3w4cPZvn07SUlJXLt2jV27djF06NACXdP8+fN55513+OWXXwr9vYiIiIiISMlTslNERERERERECiQ2NpZjx44B0KFDBwCCg4Px9PQEoGPHjtY/3dzMv3r48ccfAejcuTM9e/akdu3aeHt74+PjQ9u2bXn//feZOHEiAKtWrSIzMxOAIUOGWM87ZMgQa3+ffPIJADNnzmTlypV07NiRypUrU7FiRdq1a8enn37K1KlTi/V7EBERERER51OyU0REREREREQK7KeffgJuJDY7deoEQGZmZo66a9euERERAUB4eDjBwcFUqVIFDw8P6tevz969ewF4/PHHAThz5gxbt24FciY7AXbv3s3Ro0dp0KABzz77LAAL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bt3amug8ffo0Xbt25ciRI3keExcXx1tvvUV8fDwAjRs3tu4zmUw52tsuv3HzUhxLlixh3LhxALz++utMmTLFobibNm1q3Q4LC+PixYucOXOG9evXA1CjRg1atGjhUF8iIiIiIiIiRUnJTosPP/yQw4cPM2/ePGud7VRMAwYMsP4SokaNGtb64OBg3NzcuHjxIhERETRu3JgGDRrg6enJsGHD+Oqrr0ruIkREREREyoj0hMQC1duyHfV5dPhDRRYT3FritHXr1mzevJmAgAAiIyPp2rUrx44dy9GuY8eOPP/887Rs2ZJKlSrh7+/PlClT8Pf3B+DEiRPWtrNmzWLOnDncddddeHp6cuedd/J///d/1v2209N+8MEH1rU1X3rpJWbMmGE3zlGjRmEYBoZh0K1bNwDOnj1r3T948GACAgKoU6dOtil1ExISCvO1iIiIiIiIiNwSD2cH4Ao6d+7MI488wv79+9m3bx8Azz77LGPHjuXOO+8kMzOTqKgoJk6cCMCQIUN4/PHHSU9PJzk5mWHDhgGQkZHBE088wcaNG3F3d2fp0qUcOnTIadclIiIiZUP84IG0d3YQIiXsRMg0uCmxmNdanbklQaumphVpXLdi8uTJBAQEANCwYUMiIyOz7X/00UdZvnw51atXZ9asWcyaNStHHxkZGdmmnfXx8eGpp57imWeeydH28OHDLFy4EIDAwEDGjh1r3ffSSy/x0ksvWT+fPHmShg0b5hr7zz//TEREBMHBwfTu3TvHchybNm2ym7gVERERERERKW5KdmJ+29ne9E/ffPON3fYLFy60/tLA3jG5HSciIiIiIo7zDwt3eCTliZBpxRxNyTl06BCffPIJ7du3p1atWnh5eXH+/Hl27tzJ22+/nW205kcffYSHhwf33HMPdevWpWLFipw6dYrw8HBmz55NUlJSkcSUmZnJfffdx7///W8efPBB6/IdJ0+e5IsvvmD27NlFch4RERERKbscmaVFRKQwlOwUEREREREpoPjBA7NNl+uI0aNHM3r06HzbHT16lJEjRzrU52+//caTTz6Zb7uoqCi7L3jas3z5cpYvX56jPiEhgalTpzJ16lSH+hERERERsWVv9hYRkaKgNTtFRERERMQlNFm5uMDHFDThKCIiIiIiJacw9/giIgWlZKeIiIhIKeHodJ4iIiIiIiIiIiLlhZKdIiIi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N5idgoiIiIiISMAYNhuWqNbjow7MmglqG4WEzII8KFxjdhoiplCxE9i8eTMWi6Vd/L333nO5//z585k/f367+KFDh7jkkkt8np+IiIiI+J8aht4rz56haWtFREREREJc20InRFYn0OTCVZRnzyCpppaKHvE+O18gOM+4s2/a5IBcUySYaBpbERERkQjibsrR7haqQn2kaMayJR7v66rhqKlc9R6IiIiIiAQrXxTcgunzvnMubV+bL17rtnn3dvscZkqJizM7BZGAU7FTRERERFqJxF6gnq57ApAa77qH74FZM7UuCtBYUWl2CiIiIiIi0kYktvPCWUcdjqNdzGIpEu5U7BQRERGRVtwV84JFsBYUI2l6p44czF3creMt/Tdj6b/ZR9mIiIiIiAj4v50X6Nl++mXf5HjsyzZiuC3PUZ49Q4VuiQgqdoqIiIj4UKAbRv5qUPpruttwEawF12Cl0Z4iIiIiIuJLiddd5dfze9vWLq2t9XEm3RfsHZpFfEHFThERERERF07ExbqMB2PjNdh1d7SniIiIiIhIKBi+ei3Qvljqrw6zTYbRaju5cJXarBKRVOwUERERCTLe9CANxEjDSBudN/XG681OISx09ft5xwcj2fHBSD9lIyIiIiIinQmFGX0O5i4O+NS5wcjV+pzuCq4i4UzFThEREZFucjfla1tmFAu7UgTtrEFr1ui8pBr/90rdWrim031a3h9NAeQ5b26SjBrZi1Eje/khGxERERERCQfBVMTrrM2jUZYigaFip4iIiEgA7J+9wKNiYSj0oA20bfPu9ct5PS1Si4iIiIiIyFlmFvBCoc3snGPLKEuRtgIxQ1ckUbFTRERExAecP6QGUy/TFhnLlnTr+GB8TSIiIiIiIhJ4KuAFh1Ao/IoEioqdIiIiIhHAmpRodgoiIiIiIiIShIJ91htNBesZdVKWSKZip4iIiEg3dHfEpC95OgWKGkBndbVRn1y4Sg1tERERERERAte29GQkaWZBHgdmzQxANiISjFTsFBEREemGYBsxuW/a5G6fY8q063yQiW8E47Q8zg1trbEhIiIiIiISHFLqG8xOIWgEY1taxJ+sZicgIiIiIr6TGh/veJxZkAeFa7p8jpPxcb5MSaRL8laUmJ2CiIiIiEjE6my0ZmNFJRB+xbRwez0ikUbFThERERERJ8G+Xk24W3j/l2anICIi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SKJ+sIiIBJuKnSIiIiIiIiIiIiISdlzFJSRlr9DSNiIiYU7FTqBPnz5s3LiRr776in/84x/MmzcPgOeee469e/eye/du3nvvPbp06QLALbfcwo4dO9izZw87duxg1KhRnrY+/vhjvvnmG3bt2sWuXbvo0aOHKeckIiL+SV2aieF2m52GiIiIiIiISEhJXZrp877fTBzX5tcpcDpbfK6+uHlw7mNNnjt6xyTP46L0NL9yEBERa4gyOwErcLlcPPLII+zatYuOHTuyc+dO1q9fz/r161mwYAE1NTU888wzLFiwgPnz51NYWMhtt93G8ePHGTx4MGvXrqVPnz6e9qZPn87OnTtNPCMREQkEm73le4J0V6hI5Jr9mwNmp9Ciwqx5zDvRE+eBHLNTaTMrX18RERGReqlLMzU9qx+SsldQlJ5Gr7i4NrcxaOWa2gcN+ucNfyfN/X7qX7chf3IQCRXh0s8qzKodqDb78/A4HwkcFTuB/Px88vPzATh9+jR79+4lOTmZ9evXe/bZunUrkydPBuDLL7/0xL/66ivi4+OJiYmhqqqqfRMXERERkXb3+rsFZqfQorItb/HnLWZn4R8rX18REREREZFQFC79rLItbwHweoj3eyXwNI1tI/379+fKK69k27ZtXvGZM2eyevXqJvunp6fzxRdfeBU633rrLXbt2sW///u/N/saDzzwALm5ueTm5tK9e/fAnoCIiIiIiIiIiIiEvcYjFEVERCKVRnY20KFDB7Kzs/n1r39NWVmZJ75w4UJcLhdZWVle+1966aU8++yzjBkzxhObPn06x44do2PHjmRnZ3PPPffw7rvveh33+uuv8/rrrwOQm5sbxDMSEYlsRelpfk83u2/a7FatNyIi4e+Be3oB1rwzttOIGdw/phjngRxL5ucLK19fEREREQldWo5GIlm49LM6jZgBwNSUVV7xUD8v8Z+KnXWioqLIzs4mKyuL999/3xO/7777mDRpEqNHj/baPzk5mffff597772XgwcPeuLHjh0DaqfDXbp0Kddee22TYqeIiLRdIAqY7SVU8hSR1sl88ULAmp2p7tNf5uUp44ALLZmfL6x8fUVERESkeSkZz5udgoicRbj0s7pPfxmAzCn7vOKhfl7iP01jW+fNN99k7969vPTSS57Y2LFjefzxx7n99tupqKjwxLt06cLKlSuZP38+OTk5nrjD4aBbt25AbfF00qRJ/OMf/2i/kxARCVM1hmF2CiIiIiIiIiLSgqjELoD31LqJFU6fjtV0vCIi4i+N7ARGjBjBvffey549e9i1axdQO3Xtyy+/TGxsLOvXrwdg69atPPjgg/zyl7/kwgsvZNGiRSxatAiAMWPGcObMGdauXUt0dDQOh4OPPvrIM12tGezRnTn/pr9gA/Jz5tLr+gxstga/csMVEXHbzsEA9LnlA0vk06a44eLYpp/jri5FJBI5bDazUxARERERERHxUpSeRoHTyaCVa8xOxXKSsleAH7MdaTkZERFpDRU7gS1btmBr5oP0iy66qNn9n3zySZ588slmn7v66qsDmps/Ova7nc79bgOg+swPnscNRUS8qPZHp379rJFPG+Md+91G6XdZTfYVEW+pSzPZN2222WmIiIiIiIhIBOgVF2d2CiGtxjB0g7OIiPhNxc4w1mnYHRxaMByw0ePNZzk0aziGo9rzvK0mxpLxw/ffRJ9X/4uo0vM8z3VOmdrsOUZSPPGimSp2ioiIiIiIiIhIWEjKXqEpbEVEJCBU7Awj/cauo0PyrZ7t49Pn4rxgGwAFD82lKvmrJsdYMt57Lydu+z3nZ2V44lGxSU32jbR4h943c8nMH9ctPJO3nu/Xjmn2eBH5UerSTMhe1fpjRERERERERNpJUXpa7dSvYhrNFCUiErpU7AwjhbufIr7XSPa93hUjxnsB8Ko+TQuLVo4X3/z/KL75/2GrimPQgxXN7hvJ3C4nhbubn0pZREREREREREQkVKVkPG92CiIiEmJU7Awj5fmfcHTdBFIe/Yp/Tp9P2dXvgaOm9kkDaG76e4vGbVVxdN4+lZ7ZTzezU2Rzu5wcXTeO8vxNZqciEjF0Z6eINGTrscXsFFp0aG4nbHPNzsI/Vr6+IiIiIsGm0YUQldjF7BREwk649LMOze0EEPL9Xgk8u9kJSGCV539CwYp5dNg9DmxGbfGwfuZTo5lvK8arYzAc1XTYO9pr3U4Bd00leR9PVqFTIkpS9goKnM5z79iA7gIVERERERERkZbYKpJYvuh2Om54jo4fP80QhrB80e3kkksOOQxhCJ/wCb3oZXaqIiLiAxU7w5A9JpGSG94G3GCE3q84+lRfMGwUj1yCYRj+fdd/+duORb4x3NhjEs3+FYm0u0Er1zSJNbeuZlF6GqC7QEVERERERCQ81PdzJbDi9k7higM9cRRfiOPUxWSRxRUHejKUoQxnOFlkMZKRLGKR2amKiIgPNI1tGEpMnUXxqbexfRVPtw8f5uSkl3AO2ImtOpao4t5U9zhE9ImBuBLzMKKrLBWPKk4m9thgzvvPTEquf8fsS2k5NkcciRfNpPS7LLNTEZFWKHA66RUXZ3YaIhIgOz66HICrb9ltciZN9Z6/mdU//zPV+fssmZ8vrHx9RURERBqrMQyK0tNIyl7hd1v1sxQFqj1pqpxy4rPjm8SHMKTZ7bl1XxVUkEBCwPPR71raS7j0s3rP3wzAB7f8q1c81M9L/KdiZxhyV5XQ7YVHKd7/FsZ5Tnpt/yOOuG44YhIx3FWcOb6JDuffhM0e4znGinH3utO4zy/1qx1bjB0j6TjG8STLnFdr4lWlByje/w6JF93ridVUlyIitVIynocNrVtzoDXrn7iKS9qSVhODVq7R3bgiYWTo5R3NTqFFsf2u5LJex6CXdXM8FytfXxEREZHGHDZbwNrSLEXBl0IK356/jE7Hb8CGwxM3MLBha7JdQQXLWMZCFpqRrkjAhEs/K7bflUD4nI8EjoqdYeiHDXd6Hhd99ZKJmZgrJeN5zx+J+54P7YXdi756wewURCwp2B3Bg3MfC2r7IiIiIiIiIuHG1xuMzZBPPg8df5O3GIkDw+s5o9F2JZVEEcVGNlJAQXumKSIirRR6CzqK+Eh3w4mEv1UffmR2CiIiIiIiIiIBV5SexjcTx5mdRliayUzsPnwsfpSjnv2DIXVpZlDaFRGJRCp2iohISChwOpvEulVWmZCJiIiIiIiIRLKk7BXsmzY7YGsttlT06hUX1+pjwkmwRoge4QjrWMda1uIcsgR33CkKKaQg6Yxnezvb2XNjDWMYw4j+QUlDREQCSMVOEREJCYNWrjE7Bb/Ud4ZFREREREREWiMSCpvtaQYzGF/3VZn6IWUT/4We9OSmV5Z5tocznAW/2MwnfELF1X82O2URETkHFTtFRERERERERERELKK5EaNF6WkmZCLBoOK1iEjgRZmdgIiISHsrSk8L2HRDIhJ5Mt/JNzuFFpV+9hbvJKfgPJBjdiptZuXrKyIiItKeagwDh81mdhrtJnVpJtuyVzHM7EREwlC49LNKP3sLgMyK8DgfCRwVO0VEREREWmHOI9+ZnUKLTi6dx31Lzc7CP1a+viIiIiLtKRQLnaF6Y3FKxvNh/Xoi4dLPOrl0HgBzQrzfK4GnaWxFRCRkhGqnSURERERERKQ11P9tX1GJXby264uRwZo+uPHriYiIf1TsjECaF15EQp3ex0TETFdd1oGrLutgdhrNiul7BcPGXGXZ/Hxh5esrIiIiYjXqH/tvWPqEJjEVIyXchEs/K6bvFcT0vcJzPuFyXuI/TWMrIiIiItIKOzdcAYCtxxaTM2kqecGnbJ0yDrjCkvn5wsrXV0RERKQlRelpfo/GTKxwUhwfF6CMRER+FC79rOQFnwKwc8o4r3ion5f4TyM7RUQkIhSlp/HNxHHn3lFERERERESknTQcmbl91ryz7ttSv3b/3VOCNt1qpNN0wiIioUHFThERCXm+TtvTK053yIqIiIiIiEjoaq5f272q2oRMJFA0FbGIiP9U7IwAurNLRKTW+ImjzU5BREREREREpEX7ps02O4WIZLjdYf16IiLhTsVOERGJGKfiYs1OQUREREREREQsxmZv34/J2/v1RETCnd5VI5RGe4qInJ3uphUREREREZFzKXA6PY/1eVvochWXeG0nVjhb2FNERKxIxU4REQlL27JXmZ2CiIiIiIiIhLlBK9cEpJ2k7BUBaUfa5uDcx7y2t8+a53UTdMNCtoraIiLWE2V2AiIiIiIioWTo6C/NTqFFeU/fwPAVdqrzvzU7lTaz8vUVERERMUtS9goV2dpJS4XnbyaOC1hxW6S9hUs/K+/pGwAY+up+kzMRq1GxU0REwsK+abOhhY6fOoUiEkhf7Dljdgotqjr6JduOmp2Ff6x8fUVEREQkfJ3tcwWA7rGx+mxBQla49LOqjtYWbb8I8X6vBJ6msRURERERERERERFpI01BGz4a/i7P4zxyyOFA9r/R8eOniS4ZQMdNf8DmTDQxQxERaY5GdkrYazi/vohEjgKnk15xca1+D0hdmhmkjEQkXLz2xwsAmPPIdyZn0lS3aS/z4s9ycR7IsWR+vrDy9RUREREJBn125S2xwklxfJzZafA7fscwhmHDBqcgYfvDOMr6Evf1XcDbZqcn0irh0s/qNu1lAJ4autgrHurnJf7TyE4REQlLWkdDRIJl9r3nMfve88xOo1mdR87g3usPWjY/X1j5+oqIiIhYjRUKpYG+aXj7rHkBba+1yinHwGAuc7Fjx1b3FVXWHxt2Yg+Nx8CgnHJT8xRpjXDpZ3UeOYPOI2d4zidczkv8p2JnmKv/Y+ObieNMzkRExFq0zoaIiIiIiIgEQ0rG86QuzQxKv3P8xNGez/usNH2u4XabnULApJDCcpZTTbVX3MCo/WmvYglLGMhAM9ITEZFmqNgZIXrFmT/1g4iIiIiIiIiISDhLXZpJVGKXoLV/Ki42aG37w2a3+zXK1KwbkpOyVzTJO598VrISGzaMBl8Ahr0aDAc/u6aUAgrMSFlERJqhYqeIiEQcK939KiIiIiIiIuElUKMcC5zOgLQTisyenncmM7E389G5O74QMIg5fHP7JyUiIi2KMjsBERERERERETFfJ1s0Gd1uAmw8fmoLz3W9nijsuDC8toE2x9SW+W091fU65p3cTJnhPT2jiASOzf5jkawoPa3NN9wOWrmmyYjHxAonxfFtn8EtdWmm6YXEUHCEI6xjHQBrWMOjPEoeeVzR/QzV/TKI/n6UyRmKiEhDKnZK6DkPeK/u8RzgNSC6wfPVtfHvb30aw+aCXO94S/t74tXAnaCZKEREREREJJKMje/PmIT+AByrOeN53Ny2PzG1ZW5bExIG8GH5YbLLv0NEQs/2WfM8a3ZK8Mxghtf2YhYDUHR1bfHZ1fMfcKTd0xIRkRao2Cmh53fAMMAGZAGD6x43lAXObodqH3f1jre0v1d8EfBQIJMWEavz525bEYksO3efNjuFFlV+v4s9Bb2pzt9ndiptZuXrKxLuZsRfS2L+fADu6rKExPyZYDjAVuO9DW2PBbMtWw2lPTJIS0hpcm6+xNp6XCi2dXeHVBU7RUQsxlVcYnYKEsbCpZ9V+f0uIHzORwJHxU4JHeVAfKPYkBb29Tc+t+67AkjwKTsRCSOa0kdEzubqW3abnUKLjj1zI5c/Y3YW/rHy9RUJN3/tMY4b45M92x1PTSe66gIAkoseIsrV2/Nc421/YsFsK6HkNtxds5qca6Ij9pwxX/YJl7ZuiO9NQb9ZnvjmijymnFjT5HgRsYbm+qhW6bf6O8q0wOmkV1zbp+U1Q1L2iibTCwfCwbmPBbxNkXrh0s869syNAFwd4v1eCbymqyxL2Ar5KS5SgOWAu8GwTKOFff2Nu4BlwEDf0xOR9uVLx04jNUVERERa9qfS3TjdLnp8n0HP798g4fQobHVf0a5kz+Pmtv2JBbOthNOj6Pn9G/T4PsPsyxsyyt3VvFT6pdlpiESMYBTJWqutnxEGI/dBK3+80cIqBVwREQk9KnZGmJAueOYDK+seG/xYoDSa+fY3bqt7La3bKSIiIiIiYWpL5XGmnVhH3vmPURG/DYMaz3NGoztCG2/7EwtmWwY1OBO2cTJ5fpNjpalydzXTT6wjpzLf7FREIkJbPpdreBNvSzf0FjidgDUKqdJ6KvKKiPhPxU4JGUXpaTATsBngDuIL1Rc7ZwbxNUQkIOo7dCIi7ck4MQLjxAiz02jWwIwyS+fni1DPXyTUbKk8zsyi96mI2w3YMOq+AM/j5rb9iQWzLbBRGf933I7S4F+8EOd0u5hd+LEKnSLt4JuJ44La/qCVa1o9s1FReprfeYX0oAqRCBMu/ayBGWVe/d5wOS/xn4qdYnlefzgdgYTjl8JoYC1QCOQBuWCv7ADba7ftlR1wVHSB3Lp96uIN9282/nBdu2trX0tErK3hdDciIiIi0jad7TEknLmhbqultT9ChY240yMwDEPfZ/muMdy4cNPZHmP2L0wkIlh1TUqr5OXL6FUr0khaERHriDI7AZFWmQF9lv6afZtmwybvpy5c+hLbsleRlL2CC5e+BLRxGojFAchTRCwpscJJcbw1OnMiIiIS+ux2Ozt27CAvL4/bbruNzZs306lTJwB69uzJ9u3bufPOO5k2bRq//e1vsdlslJWV8eCDD7Jnzx4Axo4dy+LFi3E4HLzxxhs8++yz7X4e0zumYpw+RZXtK4o6rSSpbCJRVQMwbNWUd1pLQtlYbEY0hq0at6O49txrElsdC2Zb5Z3WEuP8CQBuR0m7Xr9QVGG4SLBFc3eHVLLLvzM7HRGRkGGrSCKHHDpu6A72GobwHa/xGtFEA1BNNXOY44k13Aa4kzvNTF9EJGyp2BnBitLTQupuqYZCOXcRCT5XcfMfcG2fNU/T7IiIiEjA/OpXv2Lv3r107twZgBtvvNHz3N/+9jf+53/+B4BDhw5x0003UVxczLhx48jMzGT48OHY7XZeeeUVbr31Vn744Qdyc3P54IMP2Lt3b7ueR6m7mu2d/8jyM/u4jvPpn7SdrvY4DAxs2KDD/9KlbgTgIVcpNmBAVGfP8b7Eit2VwW8r/q8/Hme0si0IXF4WbWtX1T/pXxc77Cpja+Vxhseej4iI+C5u7xSGMQxbce17dBZZDGaw5z27uVjD7UUs0jgLEZEgULEzAu2bNhtCdJoFFSlExBcH5z7WJFZ/g0SbRnyLiIiINJKcnMzEiRN58skn+c1vfuP1XKdOnbj55puZMWMGAJ9//rnnua1bt9KnTx8Arr32Wg4cOMChQ4cAWL58OXfccUe7FzvvL/zI8/jVsq/a9bXFXPp9iwRP48/f9JlWaCunnHji4ZB3fAhDmuzbONZwey5zmTsNnNEuLv/Pt4KSq4hIJNKanSIiInXU+RQRERFf/elPf+Lxxx/H7XY3eS4tLY0NGzZQVlbW5LlZs2axevVqoLZgevToUc9zP/zwA8nJyU2OeeCBB8jNzSU3N5fu3bsH8CxERKQ9jJ84OqDtne0m3mCvI9lSv7mlGZbCRQopLGc5BjVecaOZta4bxxpuu3CxcvgBRi9eHpxERUQilIqdEe6biePMTsEn+++eYnYKIiIiIiIiAEycOJF//vOffPHFF80+f/fdd7Ns2bIm8Z/+9KfMmjWL3/72t616vddff51rrrmGa665hsLCwjblLCIi7a9+hqFTcbEmZxJ8zc2wFE7yyWclK6nB8PoCGkWaxhpu27DxyVVHKUysMO1cRETCkaaxjXC94uLMTsEn3auqzU5BREREBIDZvzlgdgotKsyax7wTPXEeyDE7lTaz8vUVqTdixAhuv/12JkyYQFxcHJ07d+bdd9/lnnvuoVu3blx77bXceeedXscMGTKEN954g/Hjx3Pq1CkA8vLy6Nu3r2efPn36kJeX167nIiIigRfuoxwj1UxmYvdj7JAbNzZs/J9PUvlgZO3fvPUFcZFgC5d+VmHWPABmfx4e5yOBo2KnBEzq0kythSci7S4pewWp6RPafHzq0szajuiGLQHMSkTC2evvFpidQovKtrzFn0P87czK11ek3sKFC1m4cCEAN910E48++ij33HMPAJMnT+bDDz+ksrLSs3/fvn157733uOeee9i/f78nnpuby0UXXcSAAQPIy8tj6tSpTJs2rX1PRkREAkqfjYWvIxxhHesAuGlIHjH70zBcUeS7yjjGMQwMkkkmllgqqeQFXuBRHiWWWHawg+d4jsd5nIruKU3a1n83Emzh0s8q21K71u3rId7vlcBTsTNCJWWvCPoc/iIiwXK2TkBbOgjrPsv1Jx0RERERj6lTp/LMM894xRYtWkS3bt3IyMgAwOVycc0111BTU8Mvf/lL1q5di8PhYMmSJXz99ddmpC0iIu1IAwZC0wxm/LjxdyhK/xCAvmcZnbmYxV7bn/AJqb9oft1TERFpOxU7RUQk4nWrrDI7BREJIQ/c0wuw5p2xnUbM4P4xxTgP5FgyP19Y+fqKNGfTpk1s2rTJsz1q1Kgm+zzwwAM88MADzR6/evVqVq9eHbT8RETEuorS0xhmdhIiEhHCpZ/VaUTtTQdTU1Z5xUP9vMR/KnaKiIiIiLRC5osXAtbsTHWf/jIvTxkHXGjJ/Hxh5esrIiIiEm40ylQkMoRLP6v79JcByJyyzyse6ucl/mv7isoSNjSdrYiIiIiIiIiIiH+SzjKdaWP7754SxExaJ3XpuadVPds+KpaKiIjZVOyUsODLH2UiIiIiIiIiIiJW0L2qOuBttqbYKoGlwSQiIubSNLYScEXpaf79cXUe8B4QXbv5/YCn+Wz3hTwxYwdHuu/EZkRRsOHiQKQqIiGoufeXHkXxvE0OHTd0J4fHmcMcXuM1ouvfSIBqqr3iHTd0Yc+ATFyL3Nj7f0XCrl+wfHcSv/zNevY1eQURERERERERERERsSIVO8V6fgcMA2y1m04OkT7fSVWXIqAIgOcmG/Bm7fMpGc+bkaWIWMjc969iGIOwFdsYzoVkkcVgBmOrfyOp4xUvhp8U18ZrCh7GUdaPK07BQ+9dRY4J5yAiIiIiIiLhKbHCSXF8nFfsZGwM3SqrTMqoqdYOXgj053EalSoiIv7QNLYRYvzE0c3GawyjnTM5i3LAAOZS+1+m7cfvqsTjXttLxh2u3bccohK7mJWxiJisnHIMDKZ9dCl27NjqvoYwxGv7XPGosv6ex9M+uhQDg3LKzT49ERERERERCQPbZ81rEpsw6Ragfde7bGuBsvFxKRnPs3PDlkCkFNG01qmISOCo2BkhTsXFNht32GzNxk2RAgn7LwN3M881qsnaa4BlwMB2yEtELCuFFJazHJfN+43DaPym0Yq4y+5mGcsYqDcYERERERERCRJXcUm7v2ZbBww0Pk4DD0RExGo0ja1YRz50LhxK+QV/h+ZGnDYM2YCVQEE75SYilpRPPitZyWRjMkajKWvbWvC0GbCSlRToDUZEWmDrYd272A/N7YRtrtlZ+MfK11dEREQkUA7OfQzS08xOo01WffiR2SmISCuFSz/r0NxOACHf75XA08hOsZSSlC21lYazMcCwATPbJSURsbiZzMQeoP+duW0GNsPGTL3BiIiIiIiISIgrClIxteFao5E+FWuNYQTtOouIiO9U7IxgwVj4O3Vppl/HR53pRsLxS7n5yx7EnuzPlQe64Kjogr2yA+edioWHgbUw6ssecCQwOYtIaDvCEdaxjrWs5WEeJo88CikkjzxyyaWQQrazvUncHVPKnpR/UpB0BndMKdW9djFj4So+u+woR/QGIyIiIiIiIkEQjM/jxBxJ2SustUSYiEgE0zS2ESYYd1ulLs0MWLvnb5sBQHb2KoalT2Bj3U9okPtiyE4foT8ORQSAGczw2l7MYp+OK7otjbvq3l+2Za+q/Tl4AtsGH4/4O1NF5Ox2fHQ5AFffstvkTJrqPX8zq3/+Z6rz91kyP19Y+fqKiIiI+EN9TRExS7j0s3rP3wzAB7f8q1c81M9L/Kdip4SsovQ0FTxFRESk3Q29vKPZKbQott+VXNbrGPSybo7nYuXrKyIiIhJI+lxLRNpLuPSzYvtdCYTP+UjgaBpbERERERERERERkSDqURRPDjnkksvyRbczhCGe7VxyySHHK9Z429dYxw3PeWIdP37aa593fz+J7sXxZl8KERGRgNPIThEREREREREREZEgmvv+VQxjEDZscACyyGIwg2u36zSO+bJPk1gxDOfrHBkfAAAgAElEQVRCssjCcepihjbc59vzeOi9q3hi5pZ2OWcREZH2omKniIiIiIiIiIiISBDEZi/FIB4+8o4PYUiTfRvHfNmnVW0ZMO2jS5n20aUY9vsoufNnvpyCiIiI5Wka2zBXv/B5YoXT5ExEREREREREREQiSwopLGc5LpvbK25gNNm3ccyXfVrbljPaxRKWUDp+zrmTFxERCREqdkaI7bPmmZ2CiIiIiIiIiIhIWErKXtFsPJ98VrISDDdGgy/Aa7u5mC/7tKatqqgaomrsbGQjRlwx4yeODt4FERERaUeaxjaC1I/yDFf7ps2G9DSz0xAREZEwl/lOvtkptKj0s7d4JzkF54Ecs1NpMytfXxEREZG2mMlM7BYYc3K862l6n+zETGYCf+ZUXCygz9REIkG49LNKP3sLgMyK8DgfCRwVOyNAS3eWNVaUnsaw9Alsy17l8zHtxVVcYnYKIiIiIgDMeeQ7s1No0cml87hvqdlZ+MfK11dERESkLY5whHWsA2ANa5if9H9xFFVQSSXHOIaBQTLJxBJLJZW8wAs8yqOe7eb2aSl2ZVIi9opunHK66Rpn5xHnH3iUR8kjj7xBifzuhk8Z9eQJrvLjfE7GxtCtsiowF0dE2kW49LNOLq2dwXJOiPd7JfBU7JSgKEpPC1jBNNxHpIqIteg9R0RERERERAJpBjO8tle/Mvicfc/FLG7TaxXdXDtCs2f2CoomprE4e4WnrdRfZALwLrO5kzQSK5wUx8e1+jUmTLqFbdmr2pSfiIhIMKjYKQGRkvG82SmIiLRZgdNJr7jWd/BEJDJddVkHAL7Yc8bkTJqK6XsFV15ipzr/W0vm5wsrX18RERGRQOpkiyaj201EYceFweOntvBc1+ub3QZ8ilV92wmbDb65dQJV+zqyrPsYzz7PvPUtUW43Z7qP4cNNZzj6/vza47qPoerbTrzb/VYeP7WFp7pex7yTmykzqs28PCISQOHSz4rpewUAP0na7xUP9fMS/6nYCfTp04d33nmHXr16YRgGmZmZvPzyyzz33HPcdtttVFVV8d133zFjxgxKSmqnU50/fz6zZs2ipqaGefPmsW5d7VQUY8eOZfHixTgcDt544w2effZZM0+tzb6ZOI5BK9f4vH9UYpcgZiMiEnhJ2StITZ8AwKCVayjS+iQi4qOdG2o7V7YeW0zOpKnkBZ+ydco44ApL5ucLK19fERERkUAaG9+fMQn9PdvHas6cddunWCkYQNfoRIySWG5O6OvZZ8S3xbX7NIg1PG5MQj9uSu5KbFFHPiw/THZ5eEx7KSLh089KXvApADunjPOKh/p5if/MXxnbAlwuF4888giDBw9m+PDhPPTQQ1xyySWsX7+en/zkJ1x++eXs27ePBQsWAHDJJZcwdepUBg8ezLhx48jIyMBut2O323nllVcYP348l156KXfffTeXXHKJyWfnm9SlmV7bGuEkIiIiIiIiIiISPNM6XuS1nZaQctbt1sSMotg2HRdbmgDA3R1Sm8n4R0nZK7QMjIiIWIZGdgL5+fnk5+cDcPr0afbu3UtycjLr16/37LN161YmT54MwB133MHy5cupqqri8OHDHDhwgGuvvRaAAwcOcOjQIQCWL1/OHXfcwd69e9v5jNqf4XZjs1ujdl6UnsYwYHRyf97OyeHyyy+nsrKSzZs3s3DhQr7++muzUxQRERERERERkQjz1x7juDE+GeZvg36zmjyf6Ig963ZrYtTYz7nP2Y67Ib43BfU5zt/Gjgs6Q9emu0vr1A84cRWXmJyJiEh4sUZ1ykL69+/PlVdeybZt27ziM2fOZPXq1QAkJydz9OhRz3M//PADycnJLcYbe+CBB8jNzSU3N5fu3bsH6Uzal1UKnUnZKwC4Y8CFZNw4huuuu46EhASSkpK44447yMnJCZnRtiIiIiIiIiIiEj7+VLobp9tldhqtVhFt5z9vbvoZp7TdwbmPmZ2CiEhYsUaFyiI6dOhAdnY2v/71rykrK/PEFy5ciMvlIisrKyCv8/rrr3PNNddwzTXXUFhYGJA2raS+4GhaWzExLLzqOgAOHjzIgAEDGD16NJWVlXTp0oUXX3wxYPmJiIiIiIiIiIj4YkvlcaadWEelw2Z2Kj4rd1fz+P0X8+UFnc1ORUREpEUqdtaJiooiOzubrKws3n//fU/8vvvuY9KkSUyfPt0Ty8vLo2/fvp7tPn36kJeX12Lc6myJSXx79wMk/u197rv4J7XBmBiqqqowDINZs2qnrEhKSqKmpgbDMJg/fz6pSzOZNGkSb42awKd3TOPvd81k15T72bFjBzG3jvG0/9hjj2EYBoZhMHDgQE+8d+/envaeeOIJT3xS/wvo+OQzfDH5fsrLy9m2bRt33XWXz+cTfeVVJMbWrjn66quvcuTIETZu3MiGDRsAuPXWW+nWrVubr5eIiIiIiIiIiEhbbKk8zqzja6ly15idyjk53S6emDGYXQM7mp2KiIjIWanYWefNN99k7969vPTSS57Y2LFjefzxx7n99tupqKjwxD/44AOmTp1KTEwMAwYM4KKLLmL79u3k5uZy0UUXMWDAAKKjo5k6dSoffPCBGafTKkZxEUfKaueJv7xbTwAcF1xIdHQ0ANddd53np71uutrNmzcDMGLECK4/L5meCR2IcThIiIpm6NChJMx5kF/84hcALFu2DLfbDeBZ97T+cX17f/nLXwCYN2Qof7z+ZqIuvpgO0dHEx8dz7bXX8l//9V888sgjTXJPyXi+ScyRcoHn8b59+5o8djgcXH755a27SCISEfZNm212CiIiIiIiIhLmOttjcGN4BgcE8hu8v72er4+e41jDMKgx3Lhw09FZY5nlq0RERFoSZXYCVjBixAjuvfde9uzZw65du4DaqWtffvllYmNjWb9+PQBbt27lwQcf5Ouvv+a///u/+frrr3G5XDz00EOeYt4vf/lL1q5di8PhYMmSJXz99demnVdr7DiRT/9OXbiie22xM+riQQC43W5PsfP6668HoLy8nNzcXAZyPw+VFDF57ft8f7qM09VV9IxP4I99Lmbo0KE8+OCDvPrqq/zwww9s2rSJUaNGMXnyZJ5/vrZAWV/43L59O/v372fAgAHMufQKACpXr2LkmRPs/5dfkZGRwbRp0/j973/Pm2++SXFxsSfvqMQuTc7F1qmT53FpaWmzj3v27On/RRORsFBf4AzkFNwiEt6Gjv7S7BRalPf0DQxfYac6/1uzU2kzK19fERERkUCY3jGVWJvDs21gYCMwU9saBtgC0FSF4SLBFs2E3H+y7sru/jcoIqYKl35W3tM3ADD01f0mZyJWo2InsGXLFmzN/BVw0UUXtXjMU089xVNPPdUkvnr1alavXh3Q/NrDjn/mk55yMckdOlGSmETUxRfjcrlYu3Yt48ePJzEx0VPs3LZtG9XV1QC4T57k56k/YXiv8+kWl0B0gzu9UlNTPY+zsrIYNWoU1157Lf369aOqqsrTXv2ozltvvZWouuNjx08gF2DyfZ42EhISGD58OGvWrGnTOTb8HdferSYiIiLSel/sOWN2Ci2qOvol246anYV/rHx9RURERAKh1F3NN9VFACw/s4/rYs/nypgedLHHUOyu9BQ+u9hjADjkKsUGDIj6cd3Ms8UGxSTiBuwOA5sNCpyVdLHHYIuKIq9bLFU/HG/+uPgu4DD45nQph11lbK08zi1x44N8NUSkPYRLP6vqaG3R9osQ7/dK4KnYKUDtyM56URdfjCP1Yr7cs4f169czceJERo4cyTXXXAP8OIWtDei44N9Ia7AOZ0NxcXGex3/729/4j//4D+Li4pg8eTKVlZU4HA6qq6tZvnw5AD169Dhnnl27dj3nPkZZmedx584//uHWqcGIzxMnTpyzHRERERERERERkUC7v/Ajr+1Xy74KaPtF6WkkZa+gKD0NgMvqZjJKXZoJwL5pGS0eB/DTBjMfbbz3VwHNTUREJBhU7BQAvj9divvUKexduxJ9403Yu3Th888/5/PPPwfgF7/4BR071i5G/umnnwIwoFMXHHWFzhWH9vOHnVs4XV3Nk9FJXmtzApSUlLBy5UrS09M9xU6A9evXewqPhYWFnv1PP/s0Q/t1b3H9vIZ/sDVWc/A7z+OGo0vrH9fU1LB7924fr4yIiIiIt9f+WLs++JxHvjvHnu2v27SXefFnuTgP5FgyP19Y+fqKiIiIiIiEonDpZ3Wb9jIATw1d7BUP9fMS/2l1afFw7a1dXzT66toRnDk5OezatQun08n48bVTVlRVVXkKoA2nrHXWuKh2u+m35L+ZMGFCs+3XT1c7bNgwbrjhBq8Y1BY+a+rWPo2fOo2LE7sSHR1N//79mTt3rmft1HOp3vUFp06dAmqLtP379+fmm29m9OjRntc5efKkT22JiIiINDb73vOYfe95ZqfRrM4jZ3Dv9Qctm58vrHx9RUREREREQlG49LM6j5xB55EzPOcTLucl/lOxUzzqi502R+0C6Z9//jnV1dXs3LkTe11h84svvqC8vByAg6XF1OTXTn879cJL2HPXTNauXUt+fn4zrcOqVasoKirCbrfjcDgoKytjxYofp8U4dOgQr++tHXHp6N+fD8anU1VVxeHDh3nllVe48MILfTuRqip+9avaKTZSUlI4fPgwGzZsIDY2lpKSEn7zm9+08sqIiIiIiIiIiIiIeCtwOs1OQURE0DS2Ea/A6aRX3dqarr17PXF3URGHDh0CaoueI0aMAH5crxPAZRicefZpvl0wn5907UHe4cM88cQTjB49mpSUlCavVVVVxV//+ldmz66dmvb999+noqLCa5+X9uzgQEkRz3Q9n8oLLsBW7SIvL4+tW7eybNmyFs+j8XS3f/nLXygtLWXBggVcdtllVFVVsXnzZhYuXMjeBucpIgLQyRZNRrebiGpwD5ALg8dPbeG5rtcrrnhIx62UixXiT3W9jnknN1NmVCMiIiIiIr7ZN202tLCkVCQbtHKNZ6mtovQ0CpxOBq1cY3JWIiKRR8XOCFf/P9/U9Am4jxzm4mWvsy17ldc+jz32GI899lizx7uPfs/PN3wI/Fhw/Mtf/kLah/9DUoPFzOvNmTOHOXPmnDWn/z3yHf/+4p8Zlj6hxTU7ffHBBx/wwQcftPl4EYkcY+P7Myahf5P4sZoziiseFnEr5WJ2fELCAD4sP0x2udbzEBERERGRwKofVCIiIu1LxU6xpKTsFaSmN7/2p4hIoE3reBEA9poudD7xIBgOsNVwV5clJObPrN2up3jTOFDaIwO3oxSAtISmo/sVNzdupVysEL+7Q6qKnSIiIiIibeQqLjE7BRERES8qdoplpC7N9Gm/Q4cOMWDAAAC+rQ/e/QAAb7/9Nnz4PwHPTUTCy197jOPG+GSYvw36zfLEE0omEV11gWc7uegholy9mxyveNN4QsltnO6aBUCiI7bJvoqbG7dSLlaI3xDfm4IG//Y3V+Qx5YSmmhIRERGR8FSUntbsDGxtdXBu8zPAiYiImEXFTrEsf6awlVqGYZidgkhIiyZZcR/jCYwigVHN7ididZOBVv0fs6h2RLNhfBaMdPxy+1/LOVB2IRcm2i2Zn08sfH19tWPHDrNTEBEREQkKfV7nP11DMcPO3afNTiEgKr/fBYTP+UjgqNgpIWfgwIFA7V1pYyfcTHF8nNcfCWlaLF1ERESCKWmJ2Rm06IMpCcDbZqfhHwtfXxERERERkVB09S27zU4hII49cyMAVz9jciJiOSp2iqUYbjc2u93n/bfPmufz9LeRyGazmZ2CiKXdGteXJd1HE2N3EHdmOJ1OzgT076ZtDEq7LaGyw1azExHxidPt4l8KN7LeedTsVCQM5ebmmp2CiIiIRLD6KWuTsldQpEEBQVd/vXWtRUTMo2KnWEprCp0iIv7qbI/BjYFhGMSeHml2OiHMDdiJOz0CZ8LnZicjck5uDFy46WyPMTsVERERERERERHxk4qdIiISsaZ3TCXW5gDA7ThJVexXAFTG/YOEsrHYjGgMWzVuRzEOVw9qok5gr0lUvEG8OuYw5Z1Xk1A6HrejxMxfp4jPKgwXCbZo7u6QSnb5d60+3jgxAgBbjy2BTs1vAzPKODhlHGDN/Hxh5esrIiIiEsnqRzCKSOgJl37WwIwyAE+/t16on5f4T8VOCXla1FtE2qrUXc031UW1G53/iA044irl+tjeRP9/9u4+3sqyzhf/Z/OsomwUhdwY4gxM9qSoCERZ+VCivYIZ0UxTBz1So+U4Y1PE/DqnOs1k5zcnsydTj8dRE6kkSfMh8KEsFdoKoigKKDkIIWKAGII8rPPHlp0E6AY23Ote6/32db1Y61pr3Xzu+9pu1rW+677uvX/Z+rx1lY15cO3ilv6GDvq30n/73lNa+ivVkUd/smD9y2lIcnCnfQrPUg39f6qsy/KNa5Mkv1+/KtPW/iFDu74tAAAAAJSbYiebmXvG2OQN68sPnHDVThcTl58yyje/gKr098vuLjoCUKAfrnqi6AgAAAAA7CQXSKRVtRQknakJAAAAAJTRUye3LK+5/A0nlACwayl2kmT7C4wDJ1y1i5IAAAAAAO1pUwGOXa93t25FRwCoO4qdAAAAAAA1aNNKbgpwANQyxU5qTrUsxwsAAAAAAMCu1anoAAAAUCZj/3l+0RG2admNF+WiFw/ImvkPFh1lh1Xz8QUAACijWplnLbvxoiTJ2IdqY39oP4qdtMnACVft0HU9b79tavLaul2UCgBg97v6hheKjrBNqx64Nt99oOgUO6eajy8AAGxLz0mTs/yUUUXHgK2qlXnWqgeuTZJcXfJ5L+3PMrZs1YZKpV3+ce6l0AkAAAAAAMAu4sxOtqpjQ0PREQAAqtL5Z/VOUp3fjN17+Jj8/UdWZM38B6syX1tU8/EFACirEScfV3QEoEC1Ms/ae/iYJMnph9yxWX/Z94udp9jJdjvkB/9/0RGStCwNAQCwu131rb9OUp2TqV5nfiffOfXEJH9dlfnaopqPLwBAWf2xW9eiIwAFqpV5Vq8zv5MkuerUuZv1l32/2HmWseUtbVrOdtOfnRp7FBkHAAAAAAAAkih2shPmnjG29fb6FSsLTAIAAAAAULwRJx+XgROuKjoGQF1R7KRdPHvBvxQdAQAAAACgUJYMBtj9FDvZLk+dfGLREQAAAAAAACCJYifb6e9PObnoCAAAAADADnjjZakAoFYodrJdLMMAAAAAAABAtehUdADKzzfCAIB60rD/A0VH2KYFF+ydhguKTrFzqvn4AgAAlFGtzLMWXLB3kpR+3kv7c2YnVWH5KaOKjgAAAAAAAEDJKHYCAAAAAAAApWQZW3ab5aeMSs9Jk4uOAQCwUx6++7AkyVHHzyo4yZYOHHd/7vzUd7NuydyqzNcW1Xx8AQAAyqhW5lkHjrs/SXLr8Z/brL/s+8XOU+xkq15Ysya9u3UrOgYAQNU58rDuRUfYpq5vH5T39l6c9K7ejG+lmo8vAABAGdXKPKvr2wclqZ39of0odrKFTWdfuo4mAAAAAAAA1cw1O3lTc88Y+6aPb2tZWsvVAgAAAAAAsKspdgIAAAAAAAClpNgJAAAAAMBmBk64qugIANAmip0UzhsnAAAAAAAAdkSnogNQH5afMqroCAAA7eKq65cUHWGbXv7ttbm+6ZCsmf9g0VF2WDUfXwAAgDKqlXnWy7+9Nkly1au1sT+0H8VOAADYDp++5JmiI2zTSxMuyjkTik6xc6r5+AIAAJRRrcyzXppwUZLk0yWf99L+LGPLLjP3jLFFRwAAAAAAAKCGObOTHdLWQuYLa9akd7du23zc9ToBgLI54r17JUlmPPangpNsqctBh2fQoR2ybsnTVZmvLar5+AIA1Ivlp4zKkNdvr1+xstAsZdP46pqs2GPbn4dCEWplntXloMOTJO/uOW+z/rLvFztPsZNd6h2337Vd1+v05gkAqHaP3NMyuWrY/4GCk2yp6Uu/ybRTT0xyeFXma4tqPr4AAPVg4ISrkkl3tN5/9oJ/KTBNufScNDmZNLn1BI/lp4zKC2vW5B2331VwMupdrcyzmr70myTJI6eeuFl/2feLnafYyTb1nDR5i779l++R7152QjZkUGvfuqzLp/PpXJkr0zmdt+jvft83ko0dkyTN+dfW/u/muxm/YmGWNb7a+hpvngAAAACgfe3o2YYuU7Xz3mzVOwDah2In2+Xin743h88/IMkBm/XfmBvzrrwrDWnYor/jH/+m9f6Rb+h/Z96ZC3/2dL56rm9dAAAAAMCu8rvzLnI5KQBqlmInbTLrnDHptu78jN7G4+/Je3ao/4y735kz7n5nKh3OSU65rj2iAgAAAAAAUCc6FB2Acui/7qCsbfpN1mXdVh+vpLJD/Ws6r8+kY57O2za+vX2CAgAAAAAAUDcUO3lLPSdNzpIsyX9bdFUa0pDKVv5Lst39a7M2nTZ0yLR3L84LeaGw/QMAAAAAAKCcFDtps3Nzbjq044/MwixMpSH5u18NbLdtAgAAAABbmnvG2Ld8zoiTj9sNSQCgfblmJ232XJ7LlExJkuybfdM//fNsnk1TmtI1XbM2a7M4i7fob+zakIY9lqdh9QF5+LWn0pSmLMqiPJkn87VxT2XUbwYUvGcAAG135HGPFh1hmxZ94wMZOrlD1i15uugoO6yajy8AQJn1SZ/8LD9L53TOuqzLp/PpXJkr0zmdkyTd7+ue/u+ZkR/86Lh0X/ahTJy1T0bky1ZkgxpQK/OsRd/4QJLkyB/OKzgJ1UaxkzYbkzE79sK1yfKPjUqSDJ00ubV74ISrkvwh09/1h+T+dggIALAbzHjsT0VH2KbXFj6a6QuLTrFzqvn4AgCU2Zfz5QzJkDSkIUlyY27Mu/Ku1vv5Y/Klr6zLu3NAkgNy+Irkv+e/58JcWFzoEus5aXKWn9LymejACVe16cxa2FVqZZ712sKWou2Mks97aX+KnQAAAAAANarHLT9OJV226H9P3vOWfRe8/t+reTV7Zs9dlhEAdoZiJ7vV8lNGpecbzu4EACibK//3XyVJPn3JMwUn2dJ+Z3wn3/pEc9bMf7Aq87VFNR9fAIAyevnEz+TOOz6SU3JK65K1SVJJ5c9ndW6jb33W56f5af4p/7Tb8gLtr1bmWfud8Z0kyb8feflm/WXfL3aeYicAAGyHsWf3SVKdk6l93j8mZ7/vx8n7+lRlvrao5uMLAFBGjXdcm09lXUZndCqpbPbYX97/y76GNOT23O66nVBytTLP2uf9LZfaG3vqjzfrL/t+sfM6FB0AAAAAAIBd59ycmw7b+VHwprM8z825uygVALQPZ3YCAAAAANSw5/JcpmRKkuSu3JXP5/Ppmq5Zm7VZnMWppJKmNKVrumZDzz3So++P86vHD0ySLMmSIqMDwFtS7AQAAAAAqGFjMmaz+5fn8m08Mxn4/asyfdIdOenxybs6FgC0C8vYslv0nOTNEQAAAAAAAO1LsRMAAAAAAAAoJcvYUri5Z4wtOgIAQJs9MuuVoiNs09r/mpnHXjgw65bMLTrKDqvm4wsAAFBGtTLPWvtfM5PUzv7QfhQ7AQBgOxx1/KyiI2zT4kuPyWGXFp1i51Tz8QUAACijWplnLb70mCTJUSWf99L+LGNL1XCGJwAAAAAAANtDsRMAAAAAAHah5aeMKjoCQM2yjC0AAGyHyovDkyQN+z9QcJIt9f/Bqjx76olJqjNfW1Tz8QUAACijWpln9f/BqiRpnfduUvb9Yuc5sxMAAAB2QIcOHTJjxozcdtttSZL7778/M2fOzMyZM7No0aLccsstrc+9/PLLM2/evMyaNSuDBg1q7T/77LMzd+7czJ07N2efffZu3wcAYNcacfJxRUcAqHnO7AQAAIAd8I//+I+ZM2dO9tlnnyTJMccc0/rYzTffnJ///OdJkhEjRmTAgAEZMGBAhgwZkiuuuCJDhw5Nz5498z/+x//IUUcdlUqlkkceeSS33nprVqxYUcj+AECSzD1jbGLJ1XazsVIpOgJAzXNmJwAAAGynpqamnHzyyfk//+f/bPHY3nvvnWOPPTaTJ09OkowcOTLXX399kmT69OlpbGxMnz598tGPfjRTp07N8uXLs2LFikydOjUnnnjiFtsDAMrrd+ddVHQEgJqn2AkAAADb6dvf/na+8IUvZOPGjVs8NmrUqNxzzz1ZtarlmkJNTU1ZuHBh6+PPP/98mpqattn/l84///w0Nzenubk5vXr12gV7AwAAUF6KnUn69u2be++9N0888URmz56diy5q+bbN6NGjM3v27GzYsCFHHnlk6/PPOOOM1uuwzJw5Mxs2bMhhhx2WJLnvvvvy1FNPtT62//77F7JPAAAA7Bonn3xyli5dmhkzZmz18U9+8pO56aab2u3vu/rqqzN48OAMHjw4y5Yta7ftAgC7xtwzxhYdAaCuuGZnkvXr1+eSSy7JzJkz07179zzyyCOZOnVqZs+enb/7u7/LlVdeudnzJ0yYkAkTJiRJ3v3ud2fy5MmZNWtW6+NnnnlmHnnkkd26D2UycMJVWb9iZdExAAAAdsjw4cPz8Y9/PCeddFK6deuWffbZJzfccEPOOuus7Lfffjn66KPzt3/7t63PX7RoUQ466KDW+3379s2iRYuyaNGifOhDH9qs/1e/+tVu3BMAAIDyU+xMsmTJkixZsiRJ8sorr2TOnDlpamrK3Xff/Zav/eQnP5mJEyfu6og1oeekyVn++sXNO+6zd8FpAAB2zNh/nl90hG1aduNFuejFA7Jm/oNFR9lh1Xx8YZPx48dn/PjxSZIPfvCD+fznP5+zzjorScsKQb/4xS+ydu3a1uffeuut+exnP5uJEydmyJAhWblyZZYsWZJf/vKX+fd///c0NjYmST7ykY/kS1/60u7fIQAAalqtzLOW3diyKufYh2pjf2g/ip1/oV+/fhk0aFCmT5/epud/4hOfyMiRI1doWicAACAASURBVDfru/baa7Nhw4ZMmjQpX//613dFzNJr6GAFZQCgnK6+4YWiI2zTqgeuzXcfKDrFzqnm4wttcfrpp+fSSy/drO+OO+7ISSedlPnz52f16tUZM2ZMkmT58uX5n//zf6a5uTlJ8rWvfS3Lly/f7Zlp8fGPfzzjxo3LYYcdlrVr1+b+++/P+PHj8+STTxYdDQBgp9TKPGvVA9cmSa4u+byX9qfY+QZ77bVXJk2alIsvvjirVq16y+cfffTRWb16dZ544onWvjPPPDOLFy9O9+7dM2nSpJx11lm54YYbNnvd+eefn7FjW9Zt79WrV/vuBAAAALvNr3/96/z6179uvf/hD394q8/77Gc/u9X+a6+9Ntdee+0uyUbbfepTn9ps7r7nnntm5MiR+dCHPpRhw4Zlzpw5BaYDAADejNPrXtepU6dMmjQpN954Y2655ZY2veb000/PTTfdtFnf4sWLk7QshzthwoQcffTRW7zu6quvzuDBgzN48OAsW7Zs58OXmIt1AwBlc/5ZvXP+Wb2LjrFVew8fk8999W+rNl9bVPPxBWrTHnvskcsvvzxJ8uyzz+bggw/Occcdl7Vr16ZHjx751re+VXBCAICdUyvzrL2Hj8new8e07k+t7Bc7T7Hzdddcc03mzJmTyy67rE3Pb2hoyGmnnbbZ9To7duyY/fbbL0lL8fRjH/tYZs+evUvyAgBQjKu+9de56lt/XXSMrep15nfynQuWVm2+tqjm4wu06NOnTyqVSiqVSv7xH/8xSdKtW7e89tprqVQqOe+885IkPXv2zIYNG1KpVDJu3Lgkycc+9rFMnTo1ixYtypo1a/LKK6/k4Ycfbl39KEn+5V/+pXX7/fv3b+0/8MADW7f31a9+tbX/k5/8ZB588MGsWrUqq1evzvTp03Paaae1eX9GjBiRfffdN0nywx/+MM8991zuvffe3HPPPUmSE044oXWuDwBQRrUyz+p15nfS68zvtO5PrewXO0+xM8nw4cNz9tln59hjj83MmTMzc+bMjBgxIqNGjcrChQszbNiw3H777bnrrrtaX3PMMcdk4cKFWbBgQWtf165d88tf/jKzZs3Ko48+mkWLFuXqq68uYpcAAABgl1iyZEnmz5+fJBk6dGiSZPDgwencuXOSZNiwYa1/dujQ8rHD/fffn6Rl/n388cfnwAMPTNeuXbPXXnvlyCOPzJVXXpnPfOYzSZKbbropGzduTJKMHj269e8dPXp06/Z+9KMfJUm++tWvZsKECRk2bFi6d++ePfbYI0cffXR+/OMf55JLLmnT/hxxxBGtt+fOnbvF7Y4dO+awww5r8/EBAAB2L8XOJA888EAaGhpy2GGHZdCgQRk0aFDuvPPOTJ48OQcddFC6deuWPn365MQTT2x9za9//evWCdwmq1evzlFHHZXDDjss7373u3PxxRe3TtAAAACgVvzmN79J8ufC5vve974kycaNG7foW716dZqbm5MkkydPzuDBg7PvvvumU6dOefvb355HHnkkSfIP//APSZLnn3++9Tqof1nsTJLf/e53mTdvXg4++OCMHz8+SfK9730vPXv2TGNjYyZMmJAk+drXvpbGxsa33JdevXq13n755Ze3evuAAw5ow1EBAACKoNgJAAAAbJdNZ2r269cvffr0ybBhw7J+/frceeedecc73pHGxsbWYuf06dOzbt26JC2FzM997nN57LHH8uqrr+a//uu/cuSRRyZJBg4c2Lr9G2+8MUly9NFH5+1vf3v69OnTur1NZ3WecMIJ6dSpU5Lks5/9bJYvX54VK1bkjDPOSJLsueeerWee7oiGhobW25VKZYe3AwAA7FqKnQAAAMB22XRmZ9JyduewYcPy2GOPZerUqenQoUPe//73Z/DgwUn+XBhtaGjIL37xi5x99tnp27dv67K3m3Tr1q319s0335w1a9YkaTmj85RTTknHjh2zbt26TJw4MUmy//77v2XOTdfifDPLli1rvb3PPvu03t57771bb7/44otvuR0AAKAYip0AAADAdnnmmWeyePHiJMlZZ52VAw44IA899FAeeuihJMlnPvOZdO/ePcmfC6MDBgzI4YcfniS5/vrr06NHjzQ0NOTmm2/eYvsrV67M7bffnqSl2LlpCdupU6e2Fh7fWKQcOXJkGhoatmiblrR9MzNmzGi9/cazSzfd3rBhQ2bNmtWWwwIAm+k5aXLREQDqgmInAAAAsN02FTE//vGPJ0kefPDBzJw5M2vWrMmIESOSJK+99lprAbRLly6tr3311Vfz2muv5fjjj89JJ5201e1vWq52yJAh+cAHPrBZX9JS+NywYUOS5Otf/3re8573pHPnzunXr18uuOCCTJ06tU37ceedd+aPf/xjkpYibb9+/XLsscfmuOOOa/17XnrppTZtCwAA2P0akrjwRIGam5tbl/apB8tPGZUhp/x5Ijv3jLEFpgEAgPZXb+/x2b2q6efrwgsvzPe+973W+4ccckgWLFiQ3/72txk+fHiSZNq0aRk2bFiSpFOnTnnqqafyV3/1V62v2bhxY37/+9/nkEMOSbL5dTK7dOmSJUuWpGfPnkmSVatWpXfv3nn11Vdbn/Nv//ZvGT9+/Fbz/f73v0///v3btC+f+tSncsMNN2zRv3LlygwbNixz5sxp03YAasHeDZ0z/92fyL1/WJr1qeQLf3wg/2vf96VTOmxxP8kO99XTtr5/3D9k+B+WZnrvXlk5a3bV5LKt6szwxr5/33dYLnrp/qyqrHuz/20puWp6j19WnYoOAAAAAJTPG6/buWTJkixYsCBJ8tBDD7UW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PINmfDXjqxnfemvGt/abMa7tZny1em5+/uu3Gfv6bca+Pptxr99m7Ou3GXutlptlbAEAAAAAAIBSUuwEAAAAAAAASqljkq8UHYJda8aMGUVHYBcyvrXN+NY241vbjG/tM8a1zfhSz/z81y9jX7+MfX0y7vXL2NcvY0+takjLerYAAAAAAAAApWIZWwAAAAAAAKCUFDsBAAAAAACAUlLsrGEf/ehH89RTT2XevHn54he/WHQcdsA111yTF154IY8//nhrX8+ePTNlypTMnTs3U6ZMSWNjY+tjl19+eebNm5dZs2Zl0KBBRURmO/Tt2zf33ntvnnjiicyePTsXXXRREmNcK7p27Zrp06fn0UcfzezZs/OVr3wlSXLwwQdn2rRpmTdvXiZOnJjOnTsnSbp06ZKJEydm3rx5mTZtWvr161dgetqqQ4cOmTFjRm677bYkxreWLFiwII899lhmzpyZ5ubmJH4/15IePXrkpz/9aebMmZMnn3wyQ4cONb4Qc8haZ35Zn8w765c5aX0zV61P5rHUu4pWe61Dhw6V+fPnV/r371/p3Llz5dFHH60ceuihhefStq994AMfqAwaNKjy+OOPt/Z985vfrHzxi1+sJKl88YtfrFx66aWVJJURI0ZU7rjjjkqSypAhQyrTpk0rPL/25q1Pnz6VQYMGVZJUunfvXnn66acrhx56qDGuobbXXntVklQ6depUmTZtWmXIkCGVH//4x5VPfOITlSSVK664ovKZz3ymkqTyD//wD5UrrriikqTyiU98ojJx4sTC82tv3f7pn/6pcuONN1Zuu+22ShLjW0NtwYIFlf3222+zPr+fa6f953/+Z+W8886rJKl07ty50qNHD+Or1X0zh6z9Zn5Zn828s76bOWn9NnPV+mzmsVqdt8IDaLugDR06tHLXXXe13h83blxl3LhxhefStr/169dvs8noU089VenTp08laZm0PPXUU5UklR/+8IeV008/favP08rRJk+eXDn++OONcQ22PfbYo/LII49Ujj766MqLL75Y6dixYyXZ/Hf1XXfdVRk6dGglSaVjx46VF198sfDc2pu3pqamyt1331358Ic/3DqBNL6107Y2SfT7uTbaPvvsU3n22We36De+Wr03c8j6aOaXmnlnfTZz0vpq5qr128xjtXpulrGtUU1NTVm4cGHr/eeffz5NTU0FJqK99O7dO0uWLEmSLFmyJL17905izMuuX79+GTRoUKZPn26Ma0iHDh0yc+bMLF26NFOnTs0zzzyTFStWZMOGDUk2H8M3ju+GDRuycuXK7LfffoVl5619+9vfzhe+8IVs3LgxSbLffvsZ3xpSqVQyZcqUPPzwwzn//POT+De4VvTv3z8vvvhirr322syYMSNXX3119txzT+NL3fOzXp/87qsv5p31x5y0Ppmr1i/zWOpZp6IDADunUqkUHYGdtNdee2XSpEm5+OKLs2rVqi0eN8bltXHjxgwaNCg9evTILbfckne84x1FR6KdnHzyyVm6dGlmzJiRD37wg0XHYRd4//vfn8WLF2f//ffP1KlT89RTT23xHL+fy6lTp0454ogj8rnPfS6/+93v8u1vfzvjxo3b4nnGF6hHfvfVLvPO+mROWn/MVeubeSz1zJmdNWrRokU56KCDWu/37ds3ixYtKjAR7eWFF15Inz59kiR9+vTJ0qVLkxjzsurUqVMmTZqUG2+8MbfccksSY1yLVq5cmfvuuy/Dhg1LY2NjOnbsmGTzMXzj+Hbs2DE9evTISy+9VFhm3tzw4cPz8Y9/PAsWLMjEiRNz7LHH5vLLLze+NWTx4sVJkhdffDG33HJLjj76aL+fa8Tzzz+f559/Pr/73e+SJDfffHOOOOII40vd87Nen/zuqw/mnZiT1g9z1fpmHks9U+ysUc3NzRkwYEAOPvjgdO7cOaeffnpuvfXWomPRDm699dacc845SZJzzjknP//5z1v7zz777CTJkCFDsnLlytYlCqhe11xzTebMmZPLLrustc8Y14ZevXqlR48eSZJu3brlhBNOyJw5c3Lfffdl9OjRSbYc303jPnr06Nx7773FBKdNxo8fn4MOOij9+/fP6aefnnvvvTef+tSnjG+N2HPPPdO9e/fW2x/5yEcye/Zsv59rxAsvvJCFCxdm4MCBSZLjjjsuTz75pPGl7plD1ie/++qDeWd9MietT+aq9cs8FqrgwqHarmkjRoyoPP3005X58+dXxo8fX3gebfvbhAkTKosXL6689tprlYULF1bOPffcyr777lu5++67K3Pnzq1MnTq10rNnz9bnf+9736vMnz+/8thjj1WOPPLIwvNrb96GDx9eqVQqlVmzZlVmzpxZmTlzZmXEiBHGuEbae97znsqMGTMqs2bNqjz++OOVL3/5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AFgCZLoMKow/A1cCGxq7ozTZK8A5wK2uAxEJT+1YSXUa7BQRERERicLY0baqS41EEalrxIgR3HzzzQwdOpSdO3fu219UVMT06dN56KGH6N69O7m5uSxevJiMjAxyc3Pp3bs3lZWV5Ofnc+mllzr8CyRhLgD+Aix1HYhIAr1LagzyP+86gCg8AHTA6otKfP0TWA7Mx9IbiyQhtWMl1WmwU0QkGTQDegEB14GIiIiISCwee+wxWrRoQXFxMQAlJSVce+21lJWVMWPGDMrKyqiqquK6665j7969AIwbN4558+aRlZXFs88+S1mZ8t+lhdbAq8AlrgMREREyPDrOIqC9R8cSEZGoabBTRMS1amx2dxtU30FERETEp3Jzc8PeNnHiRCZOnHjA/jlz5jBnzpx4hiUiIumuFbDLdRBJahswFPjUdSAiItJUGuwUEUkGr7kOQERERERERERSykfAj1GfQzhvA9mugxARES9osFNEREREREREREQkVn1cBxDGM8FNREQkxWmwU0RERERERERERCQWDwJHA2+4DkREktoQoNR1ECKpS4OdIiIiIiJRWLLiy8bv1AZLidUOyIpzQCIi4h8/Br5yHYSIeGq66wBEJOnNBcYCp7oLIaJ2rIiPabBTRERERCQKJ5y1ouE7bAAmAYOBYcB64Ot4RyUiIknvUWAM9j2x1XEsIiLSdBlApusgxBcewSbBnuMuhEbbsSI+p49jEREREREvPQlcAXQEKoBcYKfTiEREJBk8BLztOggREfHE10BLoCfwueNYREREKztFRERERERERERERCL2OXCQ6yBERKSGVnaKiIiIiEQhsOUUAltOcR2GiIiIiIiISETUjpVUp8FOERERERERERERERGRePkaGBr8KSKe02CniIiIiIiIiIiIiIhIvDwJHAKc6ToQkdSkmp0iIiIiIiIiIiIiIiLxEgC2ug5CJHVpZWcYd999NytWrGDZsmXMmzePQw45ZN9tkydPZu3ataxYsYJBgwbt2z969GjWrFnDmjVrGD16tIuwRURERERERERERERERNKGBjvDeOCBBxg4cCCDBg3itdde48477wTg3HPPJTc3l9zcXMaOHcsTTzwBwEEHHcRdd93FkCFDGDx4MHfddRcdOnRw+SeIiIiIiIiIiIiIiIiIpDQNdobxxRdf7Pt3mzZtCAQCAIwcOZIXX3wRgEWLFtGhQwe6devGiBEjKC4uZtu2bWzfvp3i4mLOOeccJ7GLiIiIiIiIiIiIiIiIpAPV7GzAvffey+jRo9mxYwfDhg0DICcnhw0bNuy7T0VFBTk5OWH3hzJmzBjGjh0LQOfOneP4F4iIiIiI18beVN74naqAo4CKeEcjIiK+UgWcBMxyHYiIiIikk4jasSI+ltYrO4uLi3n//fcP2C688EIA7rjjDg499FCmTZvGuHHjPHvegoICTjzxRE488UQ+++wzz44rIiIiIvFX8NImCl7a1PCdXgdOBs5MREQiIuIb44HTgF+4DkRERETSSUTtWBEfS+uVncOHD4/oftOmTeONN95gwoQJVFZW0rNnz3239ejRg8rKSiorKzn99NP32//WW295HLGIiIiI+EI1sMJ1ECIiknS2A8tdByEiIiIiklrSemVnQ4444oh9/x45ciSrV68GoKioiNGjRwMwZMgQduzYwcaNG5k3bx5nn302HTp0oEOHDpx99tnMmzfPSewiIiIiEj9jftKVMT/p6joMERERERERkYioHSupLq1Xdjbkvvvuo1+/fuzdu5ePP/6Ya665BoA33niD8847j/Lycr7++muuuOIKALZt28Y999xDaWkpAHfffTfbtm1zFr+IiIiIxMfUh2xSnFIAiYiIiIiIiB+oHSupToOdYYwaNSrsbeHqdz733HM899xz8QpJREREREREREREREREROpQGlsRERERERERERERERER8SUNdoqIiIiIiIiIiIiIiIiIL2mwU0RERERERERERERERER8SYOdIiIiIiIiIiIiIiIiIuJLGuwUEREREREREREREREREV/KAAKug0hnmzdv5uOPP47b8Tt37sxnn30Wt+OLWzq/qU3nN7Xp/KY2nd/Up3Oc2pp6fnv16sXBBx/sYUQitdSGlHjRuU9fOvfpSec9fencpy+d++SlNqQ3AtpSdystLXUegzadX206v9p0ftNt0/lN/U3nOLU3nV9t6bzp9Z++m859+m469+m56byn76Zzn76bzr22VN6UxlZEREREREREREREREREfEmDnSIiIiIiIiIiIiIiIiLiS1nABNdBSHwtXbrUdQgSRzq/qU3nN7Xp/KY2nd/Up3Oc2nR+JZ3p9Z++dO7Tl859etJ5T1869+lL515SVQaWz1ZERERERERERERERERExFeUxlZEREREREREREREREREfEmDnSIiIiIiIiIiIiIiIiLiSxrsTGEjRoxg9erVrF27lltuucV1OBKDZ555hk2bNvH+++/v23fQQQcxf/581qxZw/z58+nQocO+2yZPnszatWtZsWIFgwYNchGyRKFHjx68+eab/Oc//2HlypXccMMNgM5xqmjRogWLFi1i+fLlrFy5kgkTJgDQu3dvSkpKWLt2LYWFhWRnZwPQvHlzCgsLWbt2LSUlJfTq1cth9BKpzMxMli5dyuzZswGd31Sybt063nvvPZYtW0ZpaSmgz+dU0r59e/785z+zatUqysrKOOmkk3R+RVAbMtWpfZme1O5MX2qTpje1VdOT2rGS7gLaUm/LzMwMlJeXB/r06RPIzs4OLF++PJCXl+c8Lm3Rbd/5zncCgwYNCrz//vv79k2aNClwyy23BIDALbfcErjvvvsCQODcc88NvPHGGwEgMGTIkEBJSYnz+LU1vHXr1i0waNCgABBo27Zt4IMPPgjk5eXpHKfQ1qZNmwAQaNasWaCkpCQwZMiQwMsvvxz40Y9+FAACTzzxROCaa64JAIFrr7028MQTTwSAwI9+9KNAYWGh8/i1Nb7deOONgWnTpgVmz54dAHR+U2hbt25doFOnTvvt0+dz6mzPP/984KqrrgoAgezs7ED79u11frWl/aY2ZOpval+m56Z2Z3pvapOm76a2anpuasdqS/PNeQDa4rCddNJJgblz5+77ffz48YHx48c7j0tb9FuvXr32a4yuXr060K1btwBYo2X16tUBIPDkk08G8vPzQ95Pmz+2WbNmBc466yyd4xTcWrVqFViyZElg8ODBgS1btgSysrICsP9n9dy5cwMnnXRSAAhkZWUFtmzZ4jxubQ1vOTk5gQULFgSGDRu2rwGp85s6W6hGoj6fU2Nr165d4KOPPjpgv86vtnTf1IZMj03tS21qd6bnpjZpem1qq6bvpnastnTelMY2ReXk5LBhw4Z9v1dUVJCTk+MwIvFK165d2bhxIwAbN26ka9eugM653/Xq1YtBgwaxaNEineMUkpmZybJly9i8eTPFxcV8+OGHbN++nerqamD/c1j3/FZXV7Njxw46derkLHZp3COPPMLNN9/M3r17AejUqZPObwoJBALMnz+fd999lzFjxgD6Dk4Vffr0YcuWLTz33HMsXbqUgoICWrdurfMraU+v9fSkz770onZn+lGbND2prZq+1I6VdNbMdQAi0jSBQMB1CNJEbdq04ZVXXuEXv/gFX3zxxQG36xz71969exk0aBDt27dn5syZHHnkka5DEo9897vfZfPmzSxdupShQ4e6Dkfi4NRTT+WTTz6hS5cuFBcXs3r16gPuo89nf2rWrBnHHXcc119/PYsXL+aRRx5h/PjxB9xP51dE0pE++1KX2p3pSW3S9KO2anpTO1bSmVZ2pqjKykp69uy57/cePXpQWVnpMCLxyqZNm+jWrRsA3bp1Y/PmzYDOuV81a9aMV155hWnTpjFz5kxA5zgV7dixg4ULF3LyySfToUMHsrKygP3PYd3zm5WVRfv27dm6dauzmKVhp5xyChdeeCHr1q2jsLCQM844g8mTJ+v8ppBPPvkEgC1btjBz5kwGDx6sz+cUUVFRQUVFBYsXLwbgL3/5C8cdd5zOr6Q9vdbTkz770oPanaI2afpQWzW9qR0r6UyDnSmqtLSU3NxcevfuTXZ2Nvn5+RQVFbkOSzxQVFTE5ZdfDsDll1/OX//61337R48eDcCQIUPYsWPHvhQFkryeeeYZVq1axcMPP7xvn85xaujcuTPt27cHoGXLlgwfPpxVq1axcOFCRo0aBRx4fmvO+6hRo3jzzTfdBC4Rue222+jZsyd9+vQhPz+fN998k8suu0znN0W0bt2atm3b7vv32WefzcqVK/X5nCI2bdrEhg0b6Nu3LwBnnnkmZWVlOr+S9tSGTE/67EsPanemJ7VJ05PaqulL7ViRJCgcqi0+27nnnhv44IMPAuXl5YHbbrvNeTzaot+mT58e+OSTTwK7d+8ObNiwIXDllVcGOnbsGFiwYEFgzZo1geLi4sBBBx207/6PPfZYoLy8PPDee+8Fjj/+eOfxa2t4O+WUUwKBQCCwYsWKwLJlywLLli0LnHvuuTrHKbIdffTRgaVLlwZWrFgReP/99wO//vWvA0CgT58+gUWLFgXWrl0bmDFjRqB58+YBINCiRYvAjBkzAmvXrg0sWrQo0KdPH+d/g7bItqFDhwZmz56t85tCW58+fQLLly8PLF++PLBy5cp911H6fE6dbeDAgYHS0tLAihUrAjNnzgx06NBB51ebNtSGTPVN7cv03NTuTN9NbVJtaqum16Z2rLZ03zKC/xARERERERERERERERER8RWlsRURERERERERERERERERX9Jgp4iIiIiIiIiIiIiIiIj4kgY7RURERERERERERERERMSXNNgpIiIiIiIiIiIiIiIiIr6kwU4RERERERERERERERER8SUNdoqIiIiIiIiIiIiIiIiIL2mwU0RERERERERERERERER86f8DAwRfD3XcHtsAAAAASUVORK5CYII=\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x1296 with 4 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-305661182c74>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v8\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mback_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_check_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-35-305661182c74>\u001b[0m in \u001b[0;36m<listcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0m_\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mplot_check_v8\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mres_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparam_zip\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpr_msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_max\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_margin_mult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mback_plot\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mplot_check_dir\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcol_idx_dict\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mparam_zip\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnp_plot_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp_plot_params\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-32-eed60ffcb465>\u001b[0m in \u001b[0;36mplot_check_v8\u001b[0;34m(res_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, back_plot, plot_check_dir, **col_idx_dict)\u001b[0m\n\u001b[1;32m    102\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    103\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mplot_check_dir\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 104\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    105\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    106\u001b[0m   \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(*args, **kw)\u001b[0m\n\u001b[1;32m    270\u001b[0m     \"\"\"\n\u001b[1;32m    271\u001b[0m     \u001b[0;32mglobal\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 272\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_show\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    273\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    274\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/ipykernel/pylab/backend_inline.py\u001b[0m in \u001b[0;36mshow\u001b[0;34m(close, block)\u001b[0m\n\u001b[1;32m     37\u001b[0m             display(\n\u001b[1;32m     38\u001b[0m                 \u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 39\u001b[0;31m                 \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0m_fetch_figure_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigure_manager\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     40\u001b[0m             )\n\u001b[1;32m     41\u001b[0m     \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/display.py\u001b[0m in \u001b[0;36mdisplay\u001b[0;34m(*objs, **kwargs)\u001b[0m\n\u001b[1;32m    304\u001b[0m             \u001b[0mpublish_display_data\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmetadata\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmetadata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    305\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 306\u001b[0;31m             \u001b[0mformat_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmd_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mexclude\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    307\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mformat_dict\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    308\u001b[0m                 \u001b[0;31m# nothing to display (e.g. _ipython_display_ took over)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mformat\u001b[0;34m(self, obj, include, exclude)\u001b[0m\n\u001b[1;32m    171\u001b[0m             \u001b[0mmd\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    172\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 173\u001b[0;31m                 \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    174\u001b[0m             \u001b[0;32mexcept\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    175\u001b[0m                 \u001b[0;31m# FIXME: log the exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<decorator-gen-2>\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36mcatch_format_error\u001b[0;34m(method, self, *args, **kwargs)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;34m\"\"\"show traceback on failed format call\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m         \u001b[0mr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mNotImplementedError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m         \u001b[0;31m# don't warn on NotImplementedErrors\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/formatters.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, obj)\u001b[0m\n\u001b[1;32m    332\u001b[0m                 \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    333\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 334\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mprinter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    335\u001b[0m             \u001b[0;31m# Finally look for special method names\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m             \u001b[0mmethod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_real_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_method\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(fig)\u001b[0m\n\u001b[1;32m    239\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    240\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'png'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 241\u001b[0;31m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'png'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    242\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;34m'retina'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m'png2x'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mformats\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    243\u001b[0m         \u001b[0mpng_formatter\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfor_type\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mFigure\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mretina_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/IPython/core/pylabtools.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(fig, fmt, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m    123\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    124\u001b[0m     \u001b[0mbytes_io\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 125\u001b[0;31m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcanvas\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprint_figure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbytes_io\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    126\u001b[0m     \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbytes_io\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    127\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfmt\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'svg'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/backend_bases.py\u001b[0m in \u001b[0;36mprint_figure\u001b[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs)\u001b[0m\n\u001b[1;32m   2098\u001b[0m                            else suppress())\n\u001b[1;32m   2099\u001b[0m                     \u001b[0;32mwith\u001b[0m \u001b[0mctx\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2100\u001b[0;31m                         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2101\u001b[0m                     \u001b[0mbbox_artists\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwargs\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"bbox_extra_artists\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2102\u001b[0m                     bbox_inches = self.figure.get_tightbbox(renderer,\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mdraw_wrapper\u001b[0;34m(artist, renderer, *args, **kwargs)\u001b[0m\n\u001b[1;32m     36\u001b[0m                 \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0martist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrenderer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0martist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_agg_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/figure.py\u001b[0m in \u001b[0;36mdraw\u001b[0;34m(self, renderer)\u001b[0m\n\u001b[1;32m   1734\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpatch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1735\u001b[0m             mimage._draw_list_compositing_images(\n\u001b[0;32m-> 1736\u001b[0;31m                 renderer, self, artists, self.suppressComposite)\n\u001b[0m\u001b[1;32m   1737\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1738\u001b[0m             \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose_group\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'figure'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/image.py\u001b[0m in \u001b[0;36m_draw_list_compositing_images\u001b[0;34m(renderer, parent, artists, suppress_composite)\u001b[0m\n\u001b[1;32m    135\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mnot_composite\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhas_images\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    136\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0martists\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 137\u001b[0;31m             \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    138\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    139\u001b[0m         \u001b[0;31m# Composite any adjacent images together\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mdraw_wrapper\u001b[0;34m(artist, renderer, *args, **kwargs)\u001b[0m\n\u001b[1;32m     36\u001b[0m                 \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0martist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrenderer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0martist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_agg_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/axes/_base.py\u001b[0m in \u001b[0;36mdraw\u001b[0;34m(self, renderer, inframe)\u001b[0m\n\u001b[1;32m   2628\u001b[0m             \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstop_rasterizing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2629\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2630\u001b[0;31m         \u001b[0mmimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_draw_list_compositing_images\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0martists\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2631\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2632\u001b[0m         \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclose_group\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'axes'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/image.py\u001b[0m in \u001b[0;36m_draw_list_compositing_images\u001b[0;34m(renderer, parent, artists, suppress_composite)\u001b[0m\n\u001b[1;32m    135\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mnot_composite\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhas_images\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    136\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0ma\u001b[0m \u001b[0;32min\u001b[0m \u001b[0martists\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 137\u001b[0;31m             \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrenderer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    138\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    139\u001b[0m         \u001b[0;31m# Composite any adjacent images together\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/artist.py\u001b[0m in \u001b[0;36mdraw_wrapper\u001b[0;34m(artist, renderer, *args, **kwargs)\u001b[0m\n\u001b[1;32m     36\u001b[0m                 \u001b[0mrenderer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0martist\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrenderer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0martist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_agg_filter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/patches.py\u001b[0m in \u001b[0;36mdraw\u001b[0;34m(self, renderer)\u001b[0m\n\u001b[1;32m    595\u001b[0m             \u001b[0mtransform\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    596\u001b[0m             \u001b[0mtpath\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform_path_non_affine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 597\u001b[0;31m             \u001b[0maffine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtransform\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_affine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    598\u001b[0m             draw_path(tpath, affine,\n\u001b[1;32m    599\u001b[0m                       \u001b[0;31m# Work around a bug in the PDF and SVG renderers, which\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/transforms.py\u001b[0m in \u001b[0;36mget_affine\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   2391\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2392\u001b[0m             return Affine2D(np.dot(self._b.get_affine().get_matrix(),\n\u001b[0;32m-> 2393\u001b[0;31m                                 self._a.get_affine().get_matrix()))\n\u001b[0m\u001b[1;32m   2394\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2395\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minverted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/transforms.py\u001b[0m in \u001b[0;36mget_affine\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   2391\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2392\u001b[0m             return Affine2D(np.dot(self._b.get_affine().get_matrix(),\n\u001b[0;32m-> 2393\u001b[0;31m                                 self._a.get_affine().get_matrix()))\n\u001b[0m\u001b[1;32m   2394\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2395\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0minverted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/matplotlib/transforms.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, matrix, **kwargs)\u001b[0m\n\u001b[1;32m   1829\u001b[0m     \"\"\"\n\u001b[1;32m   1830\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1831\u001b[0;31m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmatrix\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1832\u001b[0m         \"\"\"\n\u001b[1;32m   1833\u001b[0m         \u001b[0mInitialize\u001b[0m \u001b[0man\u001b[0m \u001b[0mAffine\u001b[0m \u001b[0mtransform\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0ma\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0mx3\u001b[0m \u001b[0mnumpy\u001b[0m \u001b[0mfloat\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["_ = [plot_check_v8(res_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, back_plot, plot_check_dir, **col_idx_dict) for param_zip in zip(np_plot_params, np_plot_params[::-1])]"]},{"cell_type":"markdown","source":["### whole_plot"],"metadata":{"id":"sZAYhcdoXnm4"}},{"cell_type":"code","source":["s_id = config.selection_id\n","\n","# ------------ make col_idx_dict config ------------ #\n","nonstep_col_list = []\n","step_col_list = []\n","stepmark_col_list = []\n","\n","# ============ nonstep_col_list - add info(col, alpha, color, linewidth) ============ #\n","# nonstep_col_list.append([['close'], 1, '#ffffff', 2])\n","\n","# ============ step_col_list - add info(col, alpha, color, linewidth) ============ #\n","# ------ htf_candle ------ #\n","hc_tf1 = '15T'\n","hc_tf2 = 'H'\n","hc_tf3 = '4H'\n","\n","step_col_list.append([['open_{}'.format(hc_tf1), 'close_{}'.format(hc_tf1)], 1, '#ffffff', 1])\n","step_col_list.append([['open_{}'.format(hc_tf2), 'close_{}'.format(hc_tf2)], 1, '#ffffff', 2])\n","# step_col_list.append([['open_{}'.format(hc_tf3), 'close_{}'.format(hc_tf3)], 1, '#ffffff', 4])\n","\n","# ------ resi_sup ------ #\n","# rs_tf = 'T'\n","# step_col_list.append([['resi_{}'.format(rs_tf), 'sup_{}'.format(rs_tf)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['resi_out_{}'.format(rs_tf), 'sup_out_{}'.format(rs_tf)], 1, 'dodgerblue', 2])\n","\n","# ------ wave_range ------ #\n","wave_tf1 = config_list[0].tr_set.p1_itv1\n","wave_period1, wave_period2 = config_list[0].tr_set.p1_period1, config_list[0].tr_set.p1_period2\n","\n","# step_col_list.append([['dc_upper_{}{}'.format(wave_tf1, wave_period1), 'dc_lower_{}{}'.format(wave_tf1, wave_period1)], 1, '#ffeb3b', 1])\n","# step_col_list.append([['dc_upper_{}{}'.format(wave_tf1, wave_period2), 'dc_lower_{}{}'.format(wave_tf1, wave_period2)], 1, '#ffeb3b', 1])\n","\n","# step_col_list.append([['dc_upper_{}{}'.format(wave_tf2, wave_period2), 'dc_lower_{}{}'.format(wave_tf2, wave_period2)], 1, '#e65100', 2])\n","\n","# ------ dc ------ #\n","dc_tf1 = '5T'\n","dc_period1 = 20\n","dc_tf2 = 'H'\n","dc_period2 = 20\n","# step_col_list.append([['dc_upper_{}{}'.format(dc_tf1, dc_period1), 'dc_lower_{}{}'.format(dc_tf1, dc_period1)], 1, '#ffeb3b', 1]),  # inner\n","# step_col_list.append([['dc_base_{}{}'.format(dc_tf1, dc_period1)], 1, '#5b9cf6', 1])\n","step_col_list.append([['dc_upper_{}{}'.format(dc_tf2, dc_period2), 'dc_lower_{}{}'.format(dc_tf2, dc_period2)], 1, '#ff00ff', 4]),  # inner\n","step_col_list.append([['dc_base_{}{}'.format(dc_tf2, dc_period2)], 1, '#5b9cf6', 4])\n","\n","# ------ bb ------ #\n","bb_tf1 = 'T'\n","bb_period1 = 20\n","\n","# step_col_list.append([['bb_upper_{}{}'.format(bb_tf1, bb_period1), 'bb_lower_{}{}'.format(bb_tf1, bb_period1)], 1, '#ffffff', 1])\n","# step_col_list.append([['bb_base_{}{}'.format(bb_tf1, bb_period1)], 1, '#00ff00', 1])\n","\n","# step_col_list.append([['bb_upper_{}'.format(tf2), 'bb_lower_{}'.format(tf2)], 1, '#e91e63', 4])\n","\n","# ------ ema ------ #\n","# step_col_list.append([['ema_5T'], 1, '#03ed30', 2])\n","\n","# ============ stepmark_col_list - add info(col, alpha, color, linewidth) ============ #\n","# stepmark_col_list.append([['sar_T'], 1, 'dodgerblue', 7])\n","\n","\n","# ============ str to numbcol ============ #\n","nonstep_col_arr = strcol_tonumb(res_df, nonstep_col_list)\n","step_col_arr = strcol_tonumb(res_df, step_col_list)\n","stepmark_col_arr = strcol_tonumb(res_df, stepmark_col_list)\n","\n","col_idx_dict = \\\n","{\n","  \"ohlc_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close']),\n","  \"vp_col_idxs\": get_col_idxs(res_df, ['close', 'volume']),\n","  # \"ohlc_col_idxs\": get_col_idxs(res_df, ['haopen', 'hahigh', 'halow', 'haclose']),  # heikin-ashi ver.\n","  \"nonstep_col_info\": nonstep_col_arr,\n","  \"step_col_info\": step_col_arr,\n","  \"stepmark_col_info\": stepmark_col_arr,\n","  \"ylim_col_idxs\": get_col_idxs(res_df, ['open', 'high', 'low', 'close', 'dc_upper_15T4', 'dc_lower_15T4'])  # , 'dc_upper_H', 'dc_lower_H', 'dc_upper_15T', 'dc_lower_15T', 'short_out_{}'.format(selection_id), 'long_out_{}'.format(selection_id)\n","}   # , 'wave_1_{}'.format(wave_tf2), 'wave_0_{}'.format(wave_tf2), 'dc_upper_15T', 'dc_lower_15T'"],"metadata":{"id":"jjFziVVIhgSr"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### whole_plot main"],"metadata":{"id":"50HXDIdJij28"}},{"cell_type":"code","source":["plot_op_idx_nums = 10\n","\n","win_idxs = (pr_ > 1).ravel()  # [-plot_op_idx_nums:]\n","selected_op_idxs = obj_[4].ravel().astype(int)  # [-plot_op_idx_nums:]\n","selected_ex_idxs = obj_[3].ravel().astype(int)  # [-plot_op_idx_nums:]\n","\n","len_idxs = len(win_idxs)\n","print(\"len_idxs :\", len_idxs)\n","\n","split_range = np.arange(plot_op_idx_nums, len_idxs, plot_op_idx_nums)\n","win_idxs_list = np.split(win_idxs, split_range, axis=0)\n","selected_op_idxs_list = np.split(selected_op_idxs, split_range, axis=0)\n","selected_ex_idxs_list = np.split(selected_ex_idxs, split_range, axis=0)"],"metadata":{"id":"-tbLsXN9eN2p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["_ = [whole_plot_check(np_df, a, b, c, plot_check_dir=None, **col_idx_dict) for a, b, c in zip(win_idxs_list, selected_op_idxs_list, selected_ex_idxs_list)]"],"metadata":{"id":"FtILHO-4kVlO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iTW2ZuX61ojg"},"source":["### plot_funcs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0l6joTK_1ojh"},"outputs":[],"source":["def whole_plot_check(data, win_idxs, selected_op_idxs, selected_ex_idxs, plot_check_dir=None, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 12))\n","  nrows, ncols = 1, 1\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                          ncols=ncols,\n","                          #height_ratios=[31, 1]\n","                          )\n","\n","  ax = fig.add_subplot(gs[0])\n","\n","  # ------------ add_col section ------------ #\n","  a_data = data[selected_op_idxs[0]:selected_op_idxs[-1] + 1]\n","\n","  plot_op_idxs = selected_op_idxs - selected_op_idxs[0]  \n","  plot_win_op_idxs = plot_op_idxs[win_idxs]\n","  plot_loss_op_idxs = plot_op_idxs[~win_idxs]\n","\n","  plot_ex_idxs = selected_ex_idxs - selected_op_idxs[0]\n","  plot_win_ex_idxs = plot_ex_idxs[win_idxs]\n","  plot_loss_ex_idxs = plot_ex_idxs[~win_idxs]\n","\n","\n","  # ------ add cols ------ #\n","  [nonstep_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['nonstep_col_info']]\n","  [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","  [stepmark_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['stepmark_col_info']]\n","\n","  # [plt.axvline(op_idx, color='#00ff00') for op_idx in plot_win_op_idxs]\n","  # [plt.axvline(op_idx, color='#ff0000') for op_idx in plot_loss_op_idxs]\n","  [plt.axvspan(op_idx, ex_idx, alpha=0.5, color='#00ff00') for op_idx, ex_idx in zip(plot_win_op_idxs, plot_win_ex_idxs)]\n","  [plt.axvspan(op_idx, ex_idx, alpha=0.5, color='#ff0000') for op_idx, ex_idx in zip(plot_loss_op_idxs, plot_loss_ex_idxs)]\n","  \n","  plt.show()\n","\n","  if plot_check_dir is None:\n","    plt.show()\n","    print()\n","  else:\n","    fig_name = plot_check_dir + \"/whole_plot_{}.png\".format(selected_op_idxs[0])\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","  plt.close()\n","  # print(\"elapsed time :\", time.time() - start_0)\n","\n","  return\n","\n","def plot_check_v8(res_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, back_plot, plot_check_dir=None, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 18))\n","  nrows, ncols = 2, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                         ncols=ncols,\n","                         height_ratios=[3, 1]\n","                         )\n","  for gs_idx, params in enumerate(param_zip):\n","\n","    iin, iout, pr, en_p, ex_p, entry_idx, exit_idx, open_idx, p2_idx, lvrg, fee, tp_line, out_line, en_tp1, en_out0 = params\n","\n","    # temporary\n","    # if exit_idx - open_idx < 50:\n","    # if exit_idx != entry_idx:\n","    #   break\n","\n","    # ============ define ax1 & ax2 ============ #\n","    ax1 = fig.add_subplot(gs[gs_idx])\n","    ax2 = fig.add_subplot(gs[gs_idx + 2])\n","\n","    # ------ date range ------ #\n","    a_data = res_df.iloc[int(iin):int(iout + 1)].to_numpy()\n","    # a_data = data[iin:iout]\n","\n","    # ------------ add_col section ------------ #\n","    # ------ candles ------ #\n","    candle_plot_v2(ax1, a_data[:, col_idx_dict['ohlc_col_idxs']], alpha=1.0, wickwidth=1.0)\n","\n","    # ------ add cols ------ #\n","    [nonstep_col_plot_v2(ax1, a_data[:, params_[0]], *params_[1:]) for params_ in col_idx_dict['nonstep_col_info']]\n","    [step_col_plot_v2(ax1, a_data[:, params_[0]], *params_[1:]) for params_ in col_idx_dict['step_col_info']]\n","    [stepmark_col_plot_v2(ax1, a_data[:, params_[0]], *params_[1:]) for params_ in col_idx_dict['stepmark_col_info']]\n","\n","    [step_col_plot_v2(ax2, a_data[:, params_[0]], *params_[1:]) for params_ in col_idx_dict['step_col_info2']]\n","\n","    # ------ ep, tp + xlim ------ #\n","    try:\n","      eptp_hvline_v7(ax1, ax2, config, en_p, ex_p, entry_idx, exit_idx, open_idx, p2_idx, tp_line, out_line, en_tp1, en_out0,\n","                    back_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, **col_idx_dict)\n","    except Exception as e:\n","      print(\"error in eptp_hvline :\", e)\n","\n","    #     Todo    #\n","    #     3. outer_price plot 일 경우, gs_idx + nrows 하면 됨\n","\n","    # ------ trade_info ------ #\n","    data_msg_list = [\"\\n {} : {:.3f}\".format(*params_[1:], *res_df.iloc[int(open_idx), params_[0]]) for params_ in col_idx_dict['data_window_p1_col_info']]  # * for unsupported format for arr\n","    data_msg_list += [\"\\n {} : {:.3f}\".format(*params_[1:], *res_df.iloc[int(p2_idx), params_[0]]) for params_ in col_idx_dict['data_window_p2_col_info']]\n","    ps_msg_expand = pr_msg.format(open_idx, exit_idx, pr, lvrg, fee) + ''.join(data_msg_list)\n","    \n","    ax1.set_title(ps_msg_expand)   # set_title on ax1\n","\n","  if plot_check_dir is None:\n","    plt.show()\n","    print()\n","  else:\n","    fig_name = plot_check_dir + \"/{}.png\".format(int(entry_idx))\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","  plt.close()\n","  # print(\"elapsed time :\", time.time() - start_0)\n","\n","  return\n","\n","def eptp_hvline_v7(ax1, ax2, config, en_p, ex_p, entry_idx, exit_idx, open_idx, p2_idx, tp_line, out_line, en_tp1, en_out0,\n","                   back_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, **col_idx_dict):\n","  # ------ get vertical ticks ------ #\n","  entry_tick = int(entry_idx - iin)\n","  exit_tick = entry_tick + int(exit_idx - entry_idx)\n","  open_tick = entry_tick - int(entry_idx - open_idx)\n","  p2_tick = open_tick + int(p2_idx - open_idx)\n","  bias_info_tick = entry_tick + config.tr_set.bias_info_tick\n","\n","  if back_plot == 1:\n","    x_max = open_tick + 20\n","  elif back_plot == 2:\n","    x_max = p2_tick + 20 \n","  elif back_plot == 3:\n","    x_max = entry_tick + 20 \n","  elif back_plot == 4:\n","    x_max = exit_tick + 20\n","  elif back_plot == 5:\n","    x_max = bias_info_tick + 20\n","\n","  # ============ xlim ============ #\n","  if (iout - iin) > x_max:\n","    x_margin = x_max * x_margin_mult\n","    ax1.set_xlim(0 - x_margin, x_max + x_margin)\n","    ax2.set_xlim(0 - x_margin, x_max + x_margin)\n","  x0, x1 = ax1.get_xlim()\n","\n","  # ============ hlines ============ #\n","  # ------------ ax1 ------------ #\n","  # ------ entry & exit ------ #\n","  en_xmin = entry_tick / x1\n","  ex_xmin = exit_tick / x1\n","  ax1.axhline(en_p, x0, en_xmin, linewidth=2, linestyle='--', alpha=1, color='lime')  # en_p line axhline\n","  ax1.text(x0, en_p, 'en_p :\\n {:.3f} \\n epg {}'.format(en_p, config.tr_set.ep_gap), ha='right', va='center', fontweight='bold', fontsize=15)  # en_p line label\n","  ax1.axhline(ex_p, ex_xmin, 1, linewidth=2, linestyle='--', alpha=1, color='lime')  # ex_p line axhline (signal 도 포괄함, 존재 의미)\n","  ax1.text(x1, ex_p, 'ex_p :\\n {}'.format(ex_p), ha='left', va='center', fontweight='bold', fontsize=15)  # ex_p line label\n","\n","  # ------ tpout_line ------ #\n","  ax1.axhline(tp_line, 0.05, 1, linewidth=2, linestyle='-', alpha=1, color='#00ff00')  # ep 와 gap 비교 용이하기 위해 ex_xmin -> 0.1 사용\n","  ax1.text(x0, tp_line, 'tpg {}'.format(config.tr_set.tp_gap), ha='right', va='center', fontweight='bold', fontsize=15, color='#00ff00')\n","  ax1.axhline(out_line, 0.05, 1, linewidth=2, linestyle='-', alpha=1, color='#ff0000')\n","  ax1.text(x0, out_line, 'outg {}'.format(config.tr_set.out_gap), ha='right', va='center', fontweight='bold', fontsize=15, color='#ff0000')\n","\n","  # ------ wave_line ------ #\n","  text_x_pos = (x0 + x1) * 0.1\n","  ax1.axhline(en_tp1, 0.2, 1, linewidth=2, linestyle='-', alpha=1, color='#ffffff')\n","  ax1.text(text_x_pos, en_tp1, ' wave_1', ha='right', va='bottom', fontweight='bold', fontsize=15)\n","  ax1.axhline(en_out0, 0.2, 1, linewidth=2, linestyle='-', alpha=1, color='#ffffff')\n","  ax1.text(text_x_pos, en_out0, ' wave_0', ha='right', va='bottom', fontweight='bold', fontsize=15)  \n","\n","  # ------------ ax2 ------------ #\n","  # ------ band ------ #\n","  ax2.axhline(100, color=\"#ffffff\")\n","  ax2.axhline(-100, color=\"#ffffff\")\n","\n","  # ============ ylim ============ # - ax1 only\n","  if back_plot:\n","    y_lim_data = a_data[:x_max + 1, col_idx_dict['ylim_col_idxs']]  # +1 for including open_tick\n","  else:\n","    y_lim_data = a_data[:, col_idx_dict['ylim_col_idxs']]\n","  \n","  y_min = y_lim_data.min()\n","  y_max = y_lim_data.max()\n","  y_margin = (y_max - y_min) * y_margin_mult\n","  ax1.set_ylim(y_min - y_margin, y_max + y_margin)\n","\n","  # ============ vline (open_tick, entry_tick, exit_tick) ============ # - add open_tick on ax2\n","  y0, y1 = ax1.get_ylim()\n","  low_data = a_data[:exit_tick + 1, col_idx_dict['ohlc_col_idxs'][2]]  # +1 for including exit_tick\n","  p2_ymax, en_ymax, ex_ymax = [(low_data[tick_] - y0) / (y1 - y0) - .01 for tick_ in [p2_tick, entry_tick, exit_tick]]  # -.05 for margin\n","  if open_tick > 0:\n","    open_ymax = (low_data[open_tick] - y0) / (y1 - y0) - .01\n","    ax1.axvline(open_tick, 0, open_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')  # 추후, tick 별 세부 정의가 달라질 수 있음을 고려해 multi_line 작성 유지\n","    ax2.axvline(open_tick, 0, open_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  ax1.axvline(p2_tick, 0, p2_ymax, alpha=1, linewidth=2, linestyle='--', color='#2196f3')\n","  ax1.axvline(entry_tick, 0, en_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  ax1.axvline(exit_tick, 0, ex_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  if back_plot == 5:\n","    ax1.axvline(bias_info_tick, alpha=1, linewidth=2, linestyle='-', color='#ffeb3b')\n","\n","  return"]},{"cell_type":"markdown","metadata":{"id":"8soVNGFt1ojj"},"source":["#### legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"narSQRCz1ojj"},"outputs":[],"source":["_ = [plot_check_v4(np_df, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir, 500, 0.07, 100, **col_idx_dict) for param_zip in zip(np_plot_params, np_plot_params[::-1])]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kLiEIiMW1ojk"},"outputs":[],"source":["def plot_check_v4(data, config, param_zip, pr_msg, x_max, x_margin_mult, y_margin_mult, front_plot, plot_check_dir=None, vp_range=500, kde_factor=0.05, num_samples=100, **col_idx_dict):\n","  # start_0 = time.time()\n","  plt.style.use(['dark_background', 'fast'])\n","  fig = plt.figure(figsize=(30, 18))\n","  nrows, ncols = 2, 2\n","  gs = gridspec.GridSpec(nrows=nrows,  # row 부터 index 채우고 col 채우는 순서임 (gs_idx)\n","                         ncols=ncols,\n","                         height_ratios=[3, 1]\n","                         )\n","  for gs_idx, params in enumerate(param_zip):\n","    ax = fig.add_subplot(gs[gs_idx])\n","    iin, iout, pr, ep, tp, entry_idx, exit_idx, open_idx, lvrg, fee, tp_line, out_line, bias_info, bias_thresh = params\n","\n","    # ------------ add_col section ------------ #\n","    iin, iout = int(iin), int(iout)\n","    a_data = data[iin:iout]\n","    # ------ candles ------ #\n","    candle_plot(a_data[:, col_idx_dict['ohlc_col_idxs']], ax, alpha=1.0, wickwidth=1.0)\n","    \n","    # ------ add cols ------ #\n","    [nonstep_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['nonstep_col_info']]\n","    [step_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['step_col_info']]\n","    [stepmark_col_plot(a_data[:, params[0]], *params[1:]) for params in col_idx_dict['stepmark_col_info']]\n","\n","    # vp_data = data[iin - vp_range:iin, col_idx_dict['vp_col_idxs']]\n","    # vp_info = [vp_range, vp_data[:, 0], vp_data[:, 1], kde_factor, num_samples]\n","    vp_data = data[iin - vp_range:iin, col_idx_dict['vp_col_idxs']].T\n","    vp_info = [vp_range, *vp_data, kde_factor, num_samples]\n","\n","    # ------ ep, tp + xlim ------ #\n","    eptp_hvline_v4(config, ep, tp, entry_idx, exit_idx, open_idx, tp_line, out_line, bias_info, bias_thresh, \n","                   front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, vp_info, **col_idx_dict)        \n","\n","    #     Todo    #\n","    #     3. outer_price plot 일 경우, gs_idx + nrows 하면 됨\n","\n","    # ------ trade_info ------ #\n","    plt.title(pr_msg.format(entry_idx, exit_idx, pr, lvrg, fee))\n","\n","  if plot_check_dir is None:\n","    plt.show()\n","    print()\n","  else:\n","    fig_name = plot_check_dir +  \"/%s.png\" % int(entry_idx)\n","    plt.savefig(fig_name)\n","    print(fig_name, \"saved !\")\n","  plt.close()\n","  # print(\"elapsed time :\", time.time() - start_0)  \n","\n","  return\n","\n","def eptp_hvline_v4(config, en_p, ex_p, entry_idx, exit_idx, open_idx, tp_line, out_line, bias_info, bias_thresh, \n","                   front_plot, iin, iout, x_max, x_margin_mult, y_margin_mult, a_data, vp_info, **col_idx_dict):\n","  # ------ get vertical ticks ------ #\n","  entry_tick = int(entry_idx - iin)\n","  open_tick = entry_tick - int(entry_idx - open_idx)\n","  exit_tick = entry_tick + int(exit_idx - entry_idx)\n","\n","  if front_plot == 1:\n","    x_max = open_tick\n","  elif front_plot == 2:\n","    x_max = entry_tick\n","  if (iout - iin) > x_max:\n","    x_margin = x_max * x_margin_mult\n","    plt.xlim(0 - x_margin, x_max + x_margin)\n","  x0, x1 = plt.gca().get_xlim()\n","  # ------------ hlines ------------ #\n","  # ------ entry & exit ------ #\n","  en_xmin = entry_tick / x1\n","  ex_xmin = exit_tick / x1\n","  plt.axhline(en_p, x0, en_xmin, linewidth=2, linestyle='--', alpha=1, color='lime')  # en_p line axhline\n","  plt.text(x0, en_p, ' en_p :\\n {}'.format(en_p), ha='right', va='center', fontweight='bold')  # en_p line label\n","  plt.axhline(ex_p, ex_xmin, 1, linewidth=2, linestyle='--', alpha=1, color='lime')  # ex_p line axhline (signal 도 포괄함, 존재 의미)\n","  plt.text(x1, ex_p, ' ex_p :\\n {}'.format(ex_p), ha='left', va='center', fontweight='bold')  # ex_p line label\n","\n","  # ------ tpout_line ------ #\n","  plt.axhline(tp_line, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#00ff00')  # ep 와 gap 비교 용이하기 위해 ex_xmin -> 0.1 사용\n","  plt.text(x0, tp_line, ' %s' % config.tr_set.tp_gap, ha='left', va='center', fontweight='bold')\n","  plt.axhline(out_line, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#ff0000')\n","  plt.text(x0, out_line, ' %s' % config.tr_set.out_gap, ha='left', va='center', fontweight='bold')\n","\n","  # ------ bias_line ------ #\n","  plt.axhline(bias_info, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='dodgerblue')\n","  plt.text(x0, bias_info, ' bias_info', ha='left', va='center', fontweight='bold')\n","  plt.axhline(bias_thresh, 0.1, 1, linewidth=4, linestyle='-', alpha=1, color='#ff8400')\n","  plt.text(x0, bias_thresh, ' bias_thresh', ha='left', va='center', fontweight='bold')\n","\n","  # ------ volume profile ------ #\n","  vp_range, close, volume, kde_factor, num_samples = vp_info\n","  if iin >= vp_range:\n","    start_0 = time.time()\n","    kde = stats.gaussian_kde(close, weights=volume, bw_method=kde_factor)\n","    kdx = np.linspace(close.min(), close.max(), num_samples)\n","    kdy = kde(kdx)\n","    print(\"kde elapsed_time :\", time.time() - start_0)\n","\n","    kdy_max = kdy.max()\n","    # peaks,_ = signal.find_peaks(kdy)\n","    peaks,_ = signal.find_peaks(kdy, prominence=kdy_max * 0.3)\n","    peak_list = kdx[peaks]   # peak_list\n","    [plt.axhline(peak, linewidth=6, linestyle='-', alpha=1, color='white') for peak in peak_list]\n","    \n","    kdy_ratio = entry_tick / kdy_max # 30 / 0.0001\n","    plt.plot(kdy * kdy_ratio, kdx, color='white')\n","    # plt.plot(pky, pkx, 'bo', color='yellow')\n","\n","  # ------ ylim ------ #\n","  if front_plot:\n","    y_lim_data = a_data[:x_max + 1, col_idx_dict['ylim_col_idxs']]  # +1 for including open_tick\n","  else:\n","    y_lim_data = a_data[:, col_idx_dict['ylim_col_idxs']]\n","  y_min = y_lim_data.min()\n","  y_max = y_lim_data.max()\n","  y_margin = (y_max - y_min) * y_margin_mult\n","  # plt.ylim(y_min - y_margin, y_max + y_margin)\n","\n","  # ------------ vline (open_tick, entry_tick, exit_tick) ------------ #\n","  y0, y1 = plt.gca().get_ylim()\n","  l_data = a_data[:exit_tick + 1, col_idx_dict['ohlc_col_idxs'][2]]  # +1 for including exit_tick\n","  open_ymax, en_ymax, ex_ymax = [(l_data[tick_] - y0) / (y1 - y0) - .01 for tick_ in [open_tick, entry_tick, exit_tick]]  # -.05 for margin\n","  plt.axvline(open_tick, 0, open_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')  # 추후, tick 별 세부 정의가 달라질 수 있음을 고려해 multi_line 작성 유지\n","  plt.axvline(entry_tick, 0, en_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","  plt.axvline(exit_tick, 0, ex_ymax, alpha=1, linewidth=2, linestyle='--', color='#ffeb3b')\n","\n","  return"]},{"cell_type":"markdown","source":["### dump"],"metadata":{"id":"ddL_BC24buq0"}},{"cell_type":"markdown","source":["#### whole_plot thing"],"metadata":{"id":"zgTrEWWqbwsT"}},{"cell_type":"code","source":["fig = go.Figure(data=[go.Candlestick(x=t_df.index,\n","                open=t_df.open,\n","                high=t_df.high,\n","                low=t_df.low,\n","                close=t_df.close)])\n","\n","fig.show()"],"metadata":{"id":"M4zn8wxibzAR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["cf.go_offline()\n","init_notebook_mode()"],"metadata":{"id":"4IhBjPMobzAS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["qf = cf.QuantFig(t_df, title=\"Apple's stock price in 2021\", name='AAPL')\n","qf.iplot()"],"metadata":{"id":"n9WZkE9wbzAS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zmYbP-Gc1ojs"},"source":["#### brief np_pr survey"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"82a8Km8z1ojs"},"outputs":[],"source":["# plot_pr_list[:100]\n","plt.plot(np_pr)\n","plt.axhline(1)\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"5rdQZm_71ojv"},"source":["#### plot indi. legacy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"u11r-dU91ojw"},"outputs":[],"source":["\n","  # ---------------------- ma ---------------------- #\n","   # --------- ema --------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(ema_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#03ed30', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  #   # --------- sma --------- #\n","  # alpha = 1\n","  # for sm_i, sma in enumerate(sma_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 4\n","  #   plt.step(np.arange(len(plot_df)), plot_df[sma].values, alpha=alpha, color='#e91e63', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","  \n","  # ---------------------- cb ---------------------- #\n","  # alpha = 1\n","  # for sm_i, item in enumerate(cb_list):\n","  #   if sm_i > 0:\n","  #     lw = 5\n","  #   else:\n","  #     lw = 2\n","  #   plt.step(np.arange(len(plot_df)), plot_df[item].values, alpha=alpha, color='#5b9cf6', linewidth=lw)\n","  #   alpha -= 0.2\n","\n","\n","  \n","  # ---------------------- sar ---------------------- #\n","  # alpha = 1\n","  # markersize = 5\n","  # for sar in sar_list:\n","  #   plt.step(plot_df[sar].values, 'c*', alpha=alpha, markersize=markersize, color='dodgerblue')  # sar mic\n","  #   markersize += 1\n","  #   alpha -= 0.1\n","\n","  # plt.step(plot_df.values[:, [12]], 'co', alpha=1, markersize=7)  # sar mac\n","\n","  #               cloud               #\n","  # alpha = 0.7\n","  # for senkoua, senkoub in zip(senkoua_list, senkoub_list):\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values, # ichimoku\n","  #                     where=plot_df[senkoua].values >= plot_df[senkoub].values, facecolor='g', alpha=alpha) # ichimoku\n","  #   plt.fill_between(np.arange(len(plot_df)), plot_df[senkoua].values, plot_df[senkoub].values,\n","  #                     where=plot_df[senkoua].values <= plot_df[senkoub].values, facecolor='r', alpha=alpha)  \n","  #   alpha -= 0.05\n","  \n","\n","\n","  # ---------------------- outer price indi. ---------------------- #\n","  #           macd          #\n","  # plt.subplot(312)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for macd in macd_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[macd].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  # #           trix          #  \n","  # # plt.subplot(313)\n","  # plt.subplot(gs[2])\n","  # alpha = 1\n","  # for trix in trix_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[trix].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","\n","  \n","  #           fisher          #  \n","  # plt.subplot(313)\n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for fisher in fisher_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[fisher].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","    \n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=0.5, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # plt.axhline(0, linestyle='--')\n","  # plt.axhline(fisher_upper, linestyle='--')\n","  # plt.axhline(fisher_lower, linestyle='--')\n","\n","  #           stoch          #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for stoch_ in stoch_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[stoch_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(stoch_upper, linestyle='--')\n","  # plt.axhline(stoch_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- cctbbo ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for cctbbo in cctbbo_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[cctbbo].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axhline(50, linestyle='--')\n","  # plt.axhline(cctbbo_upper, linestyle='--')\n","  # plt.axhline(cctbbo_lower, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n","  # ---------- ema_roc ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for emaroc in emaroc_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[emaroc].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(0, linestyle='--')\n","  \n","  # ---------- bbw ---------- #  \n","  # plt.subplot(gs[1])\n","  # alpha = 1\n","  # for bbwp_ in bbwp_list:\n","  #   plt.step(np.arange(len(plot_df)), plot_df[bbwp_].values, 'g', alpha=alpha)\n","  #   # plt.fill_between(np.arange(len(plot_df)), 0, plot_df[macd].values, facecolor='g', alpha=alpha) \n","  #   alpha -= 0.2\n","  # plt.axvline(prev_plotsize, linestyle='--')\n","  # plt.axvline(prev_plotsize + (tp_idx_list_[-1] - ep_idx_list_[0]), alpha=1, linestyle='--')\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","  # plt.axhline(bbwp_thresh, linestyle='--')\n","\n","  # plt.axvline(prev_plotsize - (ep_idx_list_[0] - open_idx), alpha=0.5, linestyle='--', color='lime')\n","\n"]},{"cell_type":"markdown","metadata":{"id":"tApzvz_gK9lR"},"source":["## legacy"]},{"cell_type":"markdown","metadata":{"id":"OJqkmkpsLCYC"},"source":["### tr_tresh calc"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gcpo4MGd9Wm4"},"outputs":[],"source":["res_wr = 0.6\n","# tr_thresh = 1\n","# tr_thresh = ((1 - res_wr) / res_wr) ** 0.5\n","tr_thresh = ((1 - res_wr) / res_wr) + 0.01\n","# tr_thresh = 2.6\n","print(\"res_wr :\", res_wr)\n","print(\"tr_thresh :\", tr_thresh)\n","\n","\n","#   단리    #\n","trade_num = 1000\n","asset = 1 # thousand USDT\n","test_loss_gap = 0.95  # fee adjusted\n","test_pr_gap = 1 + (1 - test_loss_gap) * tr_thresh\n","\n","test_loss_cnt = trade_num * (1 - res_wr)\n","test_pr_cnt = trade_num * res_wr\n","\n","test_trade_list = [test_pr_gap] * int(test_pr_cnt) + [test_loss_gap] * int(test_loss_cnt)\n","random.shuffle(test_trade_list)\n","# print(\"len(test_trade_list) :\", len(test_trade_list))\n","print(test_trade_list[:10])\n","print()\n","\n","# print(\"%.5f\" % np.cumprod(test_trade_list)[-1])\n","for tr_thresh_ in np.arange(1, 3, 0.2):\n","  if (1 + (1 - test_loss_gap) * tr_thresh_) ** test_pr_cnt * test_loss_gap ** test_loss_cnt > 1:\n","    break\n","print(\"복리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumprod(test_trade_list)[-1] :\", np.cumprod(test_trade_list)[-1])\n","print(\"total_pr : \", np.cumprod(test_trade_list)[-1])\n","print()\n","#   복리 tr_thresh  #\n","#   1. trade_num 에 영향 받지 않음\n","#   2. loss_gap 에 비례함\n","\n","for tr_thresh_ in np.arange(1, 3, 0.01):\n","  if ((1 - test_loss_gap) * tr_thresh_) * test_pr_cnt + (test_loss_gap - 1) * test_loss_cnt > 0:\n","    break\n","np_test_trade = np.array(test_trade_list) - 1\n","print(np_test_trade[:10])\n","# print(\"%.3f\" % )\n","print(\"단리를 위한 tr_thresh_ :\", tr_thresh_)\n","# print(\"tr_thresh :\", tr_thresh)\n","print(\"np.cumsum(np_test_trade)[-1] :\", np.cumsum(np_test_trade)[-1])\n","print(\"total_pr : \", 1 + np.cumsum(np_test_trade)[-1])\n"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["Ic1mfmwWCIBu","x2yj2SwAXDLp","14chOHeXh6JD","xpyP5t8Ht_pE","MuD_2vY7TI_8"],"name":"stem5_45_vec_backi2(0520_p2platform).ipynb","toc_visible":true,"provenance":[],"authorship_tag":"ABX9TyM3vKFgLqmrSra90SulHvYd"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}